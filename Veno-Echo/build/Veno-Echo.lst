ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Veno-Echo.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy6SwitchD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy6SwitchD2Ev:
  27              	.LVL0:
  28              	.LFB1523:
  29              		.file 1 "../libdaisy/src/hid/switch.h"
   1:../libdaisy/src/hid/switch.h **** #pragma once
   2:../libdaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../libdaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../libdaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../libdaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../libdaisy/src/hid/switch.h **** 
   7:../libdaisy/src/hid/switch.h **** namespace daisy
   8:../libdaisy/src/hid/switch.h **** {
   9:../libdaisy/src/hid/switch.h **** /** 
  10:../libdaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  11:../libdaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  12:../libdaisy/src/hid/switch.h ****     @author Stephen Hensley
  13:../libdaisy/src/hid/switch.h ****     @date December 2019
  14:../libdaisy/src/hid/switch.h ****     @ingroup controls
  15:../libdaisy/src/hid/switch.h **** */
  16:../libdaisy/src/hid/switch.h **** class Switch
  17:../libdaisy/src/hid/switch.h **** {
  18:../libdaisy/src/hid/switch.h ****   public:
  19:../libdaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  20:../libdaisy/src/hid/switch.h ****     enum Type
  21:../libdaisy/src/hid/switch.h ****     {
  22:../libdaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  23:../libdaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  24:../libdaisy/src/hid/switch.h ****     };
  25:../libdaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  26:../libdaisy/src/hid/switch.h ****     enum Polarity
  27:../libdaisy/src/hid/switch.h ****     {
  28:../libdaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  29:../libdaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 2


  30:../libdaisy/src/hid/switch.h ****     };
  31:../libdaisy/src/hid/switch.h **** 
  32:../libdaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  33:../libdaisy/src/hid/switch.h ****     enum Pull
  34:../libdaisy/src/hid/switch.h ****     {
  35:../libdaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  36:../libdaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  37:../libdaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  38:../libdaisy/src/hid/switch.h ****     };
  39:../libdaisy/src/hid/switch.h **** 
  40:../libdaisy/src/hid/switch.h ****     Switch() {}
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
  30              		.loc 1 41 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 41 16 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE1523:
  40              		.weak	_ZN5daisy6SwitchD1Ev
  41              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
  42 0002 00BF     		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN5daisy9DaisySeedD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN5daisy9DaisySeedD2Ev:
  52              	.LVL1:
  53              	.LFB1703:
  54              		.file 2 "../libdaisy/src/daisy_seed.h"
   1:../libdaisy/src/daisy_seed.h **** #pragma once
   2:../libdaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../libdaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../libdaisy/src/daisy_seed.h **** 
   5:../libdaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../libdaisy/src/daisy_seed.h **** 
   7:../libdaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../libdaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../libdaisy/src/daisy_seed.h **** 
  10:../libdaisy/src/daisy_seed.h **** namespace daisy
  11:../libdaisy/src/daisy_seed.h **** {
  12:../libdaisy/src/daisy_seed.h **** /**
  13:../libdaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../libdaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../libdaisy/src/daisy_seed.h **** 
  16:../libdaisy/src/daisy_seed.h ****    @ingroup boards
  17:../libdaisy/src/daisy_seed.h **** */
  18:../libdaisy/src/daisy_seed.h **** class DaisySeed
  19:../libdaisy/src/daisy_seed.h **** {
  20:../libdaisy/src/daisy_seed.h ****   public:
  21:../libdaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 3


  55              		.loc 2 22 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LBB890:
  61              	.LBI890:
  62              		.file 3 "../libdaisy/src/sys/system.h"
   1:../libdaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../libdaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../libdaisy/src/sys/system.h **** 
   4:../libdaisy/src/sys/system.h **** #include <cstdint>
   5:../libdaisy/src/sys/system.h **** #include "per/tim.h"
   6:../libdaisy/src/sys/system.h **** 
   7:../libdaisy/src/sys/system.h **** namespace daisy
   8:../libdaisy/src/sys/system.h **** {
   9:../libdaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  10:../libdaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  11:../libdaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  12:../libdaisy/src/sys/system.h ****  **
  13:../libdaisy/src/sys/system.h ****  ** @author shensley
  14:../libdaisy/src/sys/system.h ****  ** @addtogroup system
  15:../libdaisy/src/sys/system.h ****  */
  16:../libdaisy/src/sys/system.h **** class System
  17:../libdaisy/src/sys/system.h **** {
  18:../libdaisy/src/sys/system.h ****   public:
  19:../libdaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  20:../libdaisy/src/sys/system.h ****     struct Config
  21:../libdaisy/src/sys/system.h ****     {
  22:../libdaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  23:../libdaisy/src/sys/system.h ****         enum class SysClkFreq
  24:../libdaisy/src/sys/system.h ****         {
  25:../libdaisy/src/sys/system.h ****             FREQ_400MHZ,
  26:../libdaisy/src/sys/system.h ****             FREQ_480MHZ,
  27:../libdaisy/src/sys/system.h ****         };
  28:../libdaisy/src/sys/system.h **** 
  29:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  30:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  31:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  32:../libdaisy/src/sys/system.h ****          ** */
  33:../libdaisy/src/sys/system.h ****         void Defaults()
  34:../libdaisy/src/sys/system.h ****         {
  35:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_400MHZ;
  36:../libdaisy/src/sys/system.h ****             use_dcache = true;
  37:../libdaisy/src/sys/system.h ****             use_icache = true;
  38:../libdaisy/src/sys/system.h ****         }
  39:../libdaisy/src/sys/system.h **** 
  40:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  41:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  42:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  43:../libdaisy/src/sys/system.h ****          ** */
  44:../libdaisy/src/sys/system.h ****         void Boost()
  45:../libdaisy/src/sys/system.h ****         {
  46:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_480MHZ;
  47:../libdaisy/src/sys/system.h ****             use_dcache = true;
  48:../libdaisy/src/sys/system.h ****             use_icache = true;
  49:../libdaisy/src/sys/system.h ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 4


  50:../libdaisy/src/sys/system.h **** 
  51:../libdaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  52:../libdaisy/src/sys/system.h ****         bool       use_dcache;
  53:../libdaisy/src/sys/system.h ****         bool       use_icache;
  54:../libdaisy/src/sys/system.h ****     };
  55:../libdaisy/src/sys/system.h **** 
  56:../libdaisy/src/sys/system.h ****     System() {}
  57:../libdaisy/src/sys/system.h ****     ~System() {}
  63              		.loc 3 57 5 view .LVU3
  64              		.loc 3 57 5 is_stmt 0 view .LVU4
  65              	.LBE890:
  66              	.LBB891:
  67              	.LBI891:
  68              		.file 4 "../libdaisy/src/hid/usb.h"
   1:../libdaisy/src/hid/usb.h **** #pragma once
   2:../libdaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../libdaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../libdaisy/src/hid/usb.h **** #include <stdint.h>
   5:../libdaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../libdaisy/src/hid/usb.h **** 
   7:../libdaisy/src/hid/usb.h **** namespace daisy
   8:../libdaisy/src/hid/usb.h **** /** @addtogroup externals
   9:../libdaisy/src/hid/usb.h ****     @{
  10:../libdaisy/src/hid/usb.h **** */
  11:../libdaisy/src/hid/usb.h **** 
  12:../libdaisy/src/hid/usb.h **** {
  13:../libdaisy/src/hid/usb.h **** /** 
  14:../libdaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../libdaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../libdaisy/src/hid/usb.h ****     @date December 2019
  17:../libdaisy/src/hid/usb.h **** */
  18:../libdaisy/src/hid/usb.h **** class UsbHandle
  19:../libdaisy/src/hid/usb.h **** {
  20:../libdaisy/src/hid/usb.h ****   public:
  21:../libdaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../libdaisy/src/hid/usb.h ****     enum class Result
  23:../libdaisy/src/hid/usb.h ****     {
  24:../libdaisy/src/hid/usb.h ****         OK,
  25:../libdaisy/src/hid/usb.h ****         ERR,
  26:../libdaisy/src/hid/usb.h ****     };
  27:../libdaisy/src/hid/usb.h **** 
  28:../libdaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../libdaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../libdaisy/src/hid/usb.h ****     {
  31:../libdaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../libdaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../libdaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../libdaisy/src/hid/usb.h ****     };
  35:../libdaisy/src/hid/usb.h **** 
  36:../libdaisy/src/hid/usb.h **** 
  37:../libdaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../libdaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../libdaisy/src/hid/usb.h **** 
  40:../libdaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../libdaisy/src/hid/usb.h **** 
  42:../libdaisy/src/hid/usb.h ****     ~UsbHandle() {}
  69              		.loc 4 42 5 is_stmt 1 view .LVU5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 5


  70              		.loc 4 42 5 is_stmt 0 view .LVU6
  71              	.LBE891:
  72              	.LBB892:
  73              	.LBI892:
  74              		.file 5 "../libdaisy/src/per/adc.h"
   1:../libdaisy/src/per/adc.h **** #pragma once
   2:../libdaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../libdaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../libdaisy/src/per/adc.h **** #include <stdint.h>
   5:../libdaisy/src/per/adc.h **** #include <stdlib.h>
   6:../libdaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../libdaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../libdaisy/src/per/adc.h **** 
   9:../libdaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 14 /**< Maximum number of ADC channels */
  10:../libdaisy/src/per/adc.h **** 
  11:../libdaisy/src/per/adc.h **** namespace daisy
  12:../libdaisy/src/per/adc.h **** {
  13:../libdaisy/src/per/adc.h **** /** @addtogroup analog_digital_conversion
  14:../libdaisy/src/per/adc.h ****     @{
  15:../libdaisy/src/per/adc.h **** */
  16:../libdaisy/src/per/adc.h **** 
  17:../libdaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../libdaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../libdaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../libdaisy/src/per/adc.h **** */
  21:../libdaisy/src/per/adc.h **** 
  22:../libdaisy/src/per/adc.h **** /** Configuration Structure for a given channel */
  23:../libdaisy/src/per/adc.h **** struct AdcChannelConfig
  24:../libdaisy/src/per/adc.h **** {
  25:../libdaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  26:../libdaisy/src/per/adc.h ****     enum MuxPin
  27:../libdaisy/src/per/adc.h ****     {
  28:../libdaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  29:../libdaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  30:../libdaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  31:../libdaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  32:../libdaisy/src/per/adc.h ****     };
  33:../libdaisy/src/per/adc.h **** 
  34:../libdaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  35:../libdaisy/src/per/adc.h ****     \param pin Pin to init.
  36:../libdaisy/src/per/adc.h ****      */
  37:../libdaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  38:../libdaisy/src/per/adc.h **** 
  39:../libdaisy/src/per/adc.h ****     /** 
  40:../libdaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  41:../libdaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  42:../libdaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  43:../libdaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  44:../libdaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  45:../libdaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  46:../libdaisy/src/per/adc.h ****     \param mux_0 First mux pin
  47:../libdaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  48:../libdaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  49:../libdaisy/src/per/adc.h ****     \param adc_pin &
  50:../libdaisy/src/per/adc.h ****     */
  51:../libdaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  52:../libdaisy/src/per/adc.h ****                  size_t       mux_channels,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 6


  53:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  54:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  55:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  56:../libdaisy/src/per/adc.h **** 
  57:../libdaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  58:../libdaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  59:../libdaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  60:../libdaisy/src/per/adc.h **** };
  61:../libdaisy/src/per/adc.h **** 
  62:../libdaisy/src/per/adc.h **** /**
  63:../libdaisy/src/per/adc.h ****    Handler for analog to digital conversion
  64:../libdaisy/src/per/adc.h **** */
  65:../libdaisy/src/per/adc.h **** class AdcHandle
  66:../libdaisy/src/per/adc.h **** {
  67:../libdaisy/src/per/adc.h ****   public:
  68:../libdaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  69:../libdaisy/src/per/adc.h ****     enum OverSampling
  70:../libdaisy/src/per/adc.h ****     {
  71:../libdaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  72:../libdaisy/src/per/adc.h ****         OVS_4,    /**< & */
  73:../libdaisy/src/per/adc.h ****         OVS_8,    /**< & */
  74:../libdaisy/src/per/adc.h ****         OVS_16,   /**< & */
  75:../libdaisy/src/per/adc.h ****         OVS_32,   /**< & */
  76:../libdaisy/src/per/adc.h ****         OVS_64,   /**< & */
  77:../libdaisy/src/per/adc.h ****         OVS_128,  /**< & */
  78:../libdaisy/src/per/adc.h ****         OVS_256,  /**< & */
  79:../libdaisy/src/per/adc.h ****         OVS_512,  /**< & */
  80:../libdaisy/src/per/adc.h ****         OVS_1024, /**< & */
  81:../libdaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  82:../libdaisy/src/per/adc.h ****     };
  83:../libdaisy/src/per/adc.h **** 
  84:../libdaisy/src/per/adc.h ****     AdcHandle() {}
  85:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
  75              		.loc 5 85 5 is_stmt 1 view .LVU7
  76              		.loc 5 85 5 is_stmt 0 view .LVU8
  77              	.LBE892:
  78              	.LBB893:
  79              	.LBI893:
  80              		.file 6 "../libdaisy/src/hid/audio.h"
   1:../libdaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../libdaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../libdaisy/src/hid/audio.h **** 
   4:../libdaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../libdaisy/src/hid/audio.h **** 
   6:../libdaisy/src/hid/audio.h **** namespace daisy
   7:../libdaisy/src/hid/audio.h **** {
   8:../libdaisy/src/hid/audio.h **** class AudioHandle
   9:../libdaisy/src/hid/audio.h **** {
  10:../libdaisy/src/hid/audio.h ****   public:
  11:../libdaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  12:../libdaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  13:../libdaisy/src/hid/audio.h ****     struct Config
  14:../libdaisy/src/hid/audio.h ****     {
  15:../libdaisy/src/hid/audio.h ****         size_t                        blocksize;
  16:../libdaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  17:../libdaisy/src/hid/audio.h ****         float                         postgain;
  18:../libdaisy/src/hid/audio.h ****     };
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 7


  19:../libdaisy/src/hid/audio.h **** 
  20:../libdaisy/src/hid/audio.h ****     enum class Result
  21:../libdaisy/src/hid/audio.h ****     {
  22:../libdaisy/src/hid/audio.h ****         OK,
  23:../libdaisy/src/hid/audio.h ****         ERR,
  24:../libdaisy/src/hid/audio.h ****     };
  25:../libdaisy/src/hid/audio.h **** 
  26:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. Both arrays arranged by float[chn][sample] */
  27:../libdaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(float** in, float** out, size_t size);
  28:../libdaisy/src/hid/audio.h **** 
  29:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. 
  30:../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  31:../libdaisy/src/hid/audio.h ****      */
  32:../libdaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(float* in,
  33:../libdaisy/src/hid/audio.h ****                                               float* out,
  34:../libdaisy/src/hid/audio.h ****                                               size_t size);
  35:../libdaisy/src/hid/audio.h **** 
  36:../libdaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  37:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
  81              		.loc 6 37 5 is_stmt 1 view .LVU9
  82              		.loc 6 37 5 is_stmt 0 view .LVU10
  83              	.LBE893:
  84              		.loc 2 22 19 view .LVU11
  85 0000 7047     		bx	lr
  86              		.cfi_endproc
  87              	.LFE1703:
  89              		.weak	_ZN5daisy9DaisySeedD1Ev
  90              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  91 0002 00BF     		.section	.text._ZN7daisysp4AdsrD2Ev,"axG",%progbits,_ZN7daisysp4AdsrD5Ev,comdat
  92              		.align	1
  93              		.p2align 2,,3
  94              		.weak	_ZN7daisysp4AdsrD2Ev
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv5-d16
 100              	_ZN7daisysp4AdsrD2Ev:
 101              	.LVL2:
 102              	.LFB1726:
 103              		.file 7 "../DaisySP/Source/Control/adsr.h"
   1:../DaisySP/Source/Control/adsr.h **** #pragma once
   2:../DaisySP/Source/Control/adsr.h **** #ifndef DSY_ADSR_H
   3:../DaisySP/Source/Control/adsr.h **** #define DSY_ADSR_H
   4:../DaisySP/Source/Control/adsr.h **** 
   5:../DaisySP/Source/Control/adsr.h **** #include <stdint.h>
   6:../DaisySP/Source/Control/adsr.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Control/adsr.h **** 
   8:../DaisySP/Source/Control/adsr.h **** namespace daisysp
   9:../DaisySP/Source/Control/adsr.h **** {
  10:../DaisySP/Source/Control/adsr.h **** /** Distinct stages that the phase of the envelope can be located in.
  11:../DaisySP/Source/Control/adsr.h **** - IDLE   = located at phase location 0, and not currently running
  12:../DaisySP/Source/Control/adsr.h **** - ATTACK  = First segment of envelope where phase moves from 0 to 1
  13:../DaisySP/Source/Control/adsr.h **** - DECAY   = Second segment of envelope where phase moves from 1 to SUSTAIN value
  14:../DaisySP/Source/Control/adsr.h **** - SUSTAIN = Third segment of envelope, stays at SUSTAIN level until GATE is released
  15:../DaisySP/Source/Control/adsr.h **** - RELEASE =     Fourth segment of envelop where phase moves from SUSTAIN to 0
  16:../DaisySP/Source/Control/adsr.h **** - LAST    =  Last segment, aka release
  17:../DaisySP/Source/Control/adsr.h **** */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 8


  18:../DaisySP/Source/Control/adsr.h **** enum
  19:../DaisySP/Source/Control/adsr.h **** {
  20:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_IDLE,
  21:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_ATTACK,
  22:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_DECAY,
  23:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_SUSTAIN,
  24:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_RELEASE,
  25:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_LAST,
  26:../DaisySP/Source/Control/adsr.h **** };
  27:../DaisySP/Source/Control/adsr.h **** 
  28:../DaisySP/Source/Control/adsr.h **** 
  29:../DaisySP/Source/Control/adsr.h **** /** adsr envelope module
  30:../DaisySP/Source/Control/adsr.h **** 
  31:../DaisySP/Source/Control/adsr.h **** Original author(s) : Paul Batchelor
  32:../DaisySP/Source/Control/adsr.h **** 
  33:../DaisySP/Source/Control/adsr.h **** Ported from Soundpipe by Ben Sergentanis, May 2020
  34:../DaisySP/Source/Control/adsr.h **** */
  35:../DaisySP/Source/Control/adsr.h **** class Adsr
  36:../DaisySP/Source/Control/adsr.h **** {
  37:../DaisySP/Source/Control/adsr.h ****   public:
  38:../DaisySP/Source/Control/adsr.h ****     Adsr() {}
  39:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 104              		.loc 7 39 5 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109              		.loc 7 39 14 is_stmt 0 view .LVU13
 110 0000 7047     		bx	lr
 111              		.cfi_endproc
 112              	.LFE1726:
 114              		.weak	_ZN7daisysp4AdsrD1Ev
 115              		.thumb_set _ZN7daisysp4AdsrD1Ev,_ZN7daisysp4AdsrD2Ev
 116 0002 00BF     		.section	.text._ZN7daisysp10OscillatorD2Ev,"axG",%progbits,_ZN7daisysp10OscillatorD5Ev,comdat
 117              		.align	1
 118              		.p2align 2,,3
 119              		.weak	_ZN7daisysp10OscillatorD2Ev
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv5-d16
 125              	_ZN7daisysp10OscillatorD2Ev:
 126              	.LVL3:
 127              	.LFB3340:
 128              		.file 8 "../DaisySP/Source/Synthesis/oscillator.h"
   1:../DaisySP/Source/Synthesis/oscillator.h **** #pragma once
   2:../DaisySP/Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
   3:../DaisySP/Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
   4:../DaisySP/Source/Synthesis/oscillator.h **** #include <stdint.h>
   5:../DaisySP/Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
   6:../DaisySP/Source/Synthesis/oscillator.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Synthesis/oscillator.h **** 
   8:../DaisySP/Source/Synthesis/oscillator.h **** namespace daisysp
   9:../DaisySP/Source/Synthesis/oscillator.h **** {
  10:../DaisySP/Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:../DaisySP/Source/Synthesis/oscillator.h **** */
  12:../DaisySP/Source/Synthesis/oscillator.h **** class Oscillator
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 9


  13:../DaisySP/Source/Synthesis/oscillator.h **** {
  14:../DaisySP/Source/Synthesis/oscillator.h ****   public:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     Oscillator() {}
  16:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 129              		.loc 8 16 5 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134              		.loc 8 16 20 is_stmt 0 view .LVU15
 135 0000 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE3340:
 139              		.weak	_ZN7daisysp10OscillatorD1Ev
 140              		.thumb_set _ZN7daisysp10OscillatorD1Ev,_ZN7daisysp10OscillatorD2Ev
 141 0002 00BF     		.section	.text._ZN7daisysp3SvfD2Ev,"axG",%progbits,_ZN7daisysp3SvfD5Ev,comdat
 142              		.align	1
 143              		.p2align 2,,3
 144              		.weak	_ZN7daisysp3SvfD2Ev
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv5-d16
 150              	_ZN7daisysp3SvfD2Ev:
 151              	.LVL4:
 152              	.LFB3356:
 153              		.file 9 "../DaisySP/Source/Filters/svf.h"
   1:../DaisySP/Source/Filters/svf.h **** #pragma once
   2:../DaisySP/Source/Filters/svf.h **** #ifndef DSY_SVF_H
   3:../DaisySP/Source/Filters/svf.h **** #define DSY_SVF_H
   4:../DaisySP/Source/Filters/svf.h **** 
   5:../DaisySP/Source/Filters/svf.h **** namespace daisysp
   6:../DaisySP/Source/Filters/svf.h **** {
   7:../DaisySP/Source/Filters/svf.h **** /**      Double Sampled, Stable State Variable Filter
   8:../DaisySP/Source/Filters/svf.h **** 
   9:../DaisySP/Source/Filters/svf.h **** Credit to Andrew Simper from musicdsp.org
  10:../DaisySP/Source/Filters/svf.h **** 
  11:../DaisySP/Source/Filters/svf.h **** This is his "State Variable Filter (Double Sampled, Stable)"
  12:../DaisySP/Source/Filters/svf.h **** 
  13:../DaisySP/Source/Filters/svf.h **** Additional thanks to Laurent de Soras for stability limit, and 
  14:../DaisySP/Source/Filters/svf.h **** Stefan Diedrichsen for the correct notch output
  15:../DaisySP/Source/Filters/svf.h **** 
  16:../DaisySP/Source/Filters/svf.h **** Ported by: Stephen Hensley
  17:../DaisySP/Source/Filters/svf.h **** */
  18:../DaisySP/Source/Filters/svf.h **** class Svf
  19:../DaisySP/Source/Filters/svf.h **** {
  20:../DaisySP/Source/Filters/svf.h ****   public:
  21:../DaisySP/Source/Filters/svf.h ****     Svf() {}
  22:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 154              		.loc 9 22 5 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 159              		.loc 9 22 13 is_stmt 0 view .LVU17
 160 0000 7047     		bx	lr
 161              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 10


 162              	.LFE3356:
 164              		.weak	_ZN7daisysp3SvfD1Ev
 165              		.thumb_set _ZN7daisysp3SvfD1Ev,_ZN7daisysp3SvfD2Ev
 166 0002 00BF     		.section	.text._ZN7daisysp9CrossFadeD2Ev,"axG",%progbits,_ZN7daisysp9CrossFadeD5Ev,comdat
 167              		.align	1
 168              		.p2align 2,,3
 169              		.weak	_ZN7daisysp9CrossFadeD2Ev
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv5-d16
 175              	_ZN7daisysp9CrossFadeD2Ev:
 176              	.LVL5:
 177              	.LFB3461:
 178              		.file 10 "../DaisySP/Source/Dynamics/crossfade.h"
   1:../DaisySP/Source/Dynamics/crossfade.h **** #pragma once
   2:../DaisySP/Source/Dynamics/crossfade.h **** #ifndef DSY_CROSSFADE_H
   3:../DaisySP/Source/Dynamics/crossfade.h **** #define DSY_CROSSFADE_H
   4:../DaisySP/Source/Dynamics/crossfade.h **** #include <stdint.h>
   5:../DaisySP/Source/Dynamics/crossfade.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Dynamics/crossfade.h **** 
   7:../DaisySP/Source/Dynamics/crossfade.h **** namespace daisysp
   8:../DaisySP/Source/Dynamics/crossfade.h **** {
   9:../DaisySP/Source/Dynamics/crossfade.h **** /** Curve applied to the CrossFade
  10:../DaisySP/Source/Dynamics/crossfade.h **** - LIN = linear
  11:../DaisySP/Source/Dynamics/crossfade.h **** - CPOW = constant power
  12:../DaisySP/Source/Dynamics/crossfade.h **** - LOG = logarithmic
  13:../DaisySP/Source/Dynamics/crossfade.h **** - EXP  exponential
  14:../DaisySP/Source/Dynamics/crossfade.h **** - LAST = end of enum (used for array indexing)
  15:../DaisySP/Source/Dynamics/crossfade.h **** */
  16:../DaisySP/Source/Dynamics/crossfade.h **** enum
  17:../DaisySP/Source/Dynamics/crossfade.h **** {
  18:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LIN,
  19:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_CPOW,
  20:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LOG,
  21:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_EXP,
  22:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LAST,
  23:../DaisySP/Source/Dynamics/crossfade.h **** };
  24:../DaisySP/Source/Dynamics/crossfade.h **** 
  25:../DaisySP/Source/Dynamics/crossfade.h **** /** Performs a CrossFade between two signals
  26:../DaisySP/Source/Dynamics/crossfade.h **** 
  27:../DaisySP/Source/Dynamics/crossfade.h ****     Original author: Paul Batchelor
  28:../DaisySP/Source/Dynamics/crossfade.h **** 
  29:../DaisySP/Source/Dynamics/crossfade.h ****     Ported from Soundpipe by Andrew Ikenberry
  30:../DaisySP/Source/Dynamics/crossfade.h **** 
  31:../DaisySP/Source/Dynamics/crossfade.h ****     added curve option for constant power, etc.
  32:../DaisySP/Source/Dynamics/crossfade.h **** */
  33:../DaisySP/Source/Dynamics/crossfade.h **** class CrossFade
  34:../DaisySP/Source/Dynamics/crossfade.h **** {
  35:../DaisySP/Source/Dynamics/crossfade.h ****   public:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     CrossFade() {}
  37:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 179              		.loc 10 37 5 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 11


 184              		.loc 10 37 19 is_stmt 0 view .LVU19
 185 0000 7047     		bx	lr
 186              		.cfi_endproc
 187              	.LFE3461:
 189              		.weak	_ZN7daisysp9CrossFadeD1Ev
 190              		.thumb_set _ZN7daisysp9CrossFadeD1Ev,_ZN7daisysp9CrossFadeD2Ev
 191 0002 00BF     		.section	.text._ZN7daisysp7DcBlockD2Ev,"axG",%progbits,_ZN7daisysp7DcBlockD5Ev,comdat
 192              		.align	1
 193              		.p2align 2,,3
 194              		.weak	_ZN7daisysp7DcBlockD2Ev
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu fpv5-d16
 200              	_ZN7daisysp7DcBlockD2Ev:
 201              	.LVL6:
 202              	.LFB3753:
 203              		.file 11 "../DaisySP/Source/Utility/dcblock.h"
   1:../DaisySP/Source/Utility/dcblock.h **** 
   2:../DaisySP/Source/Utility/dcblock.h **** #pragma once
   3:../DaisySP/Source/Utility/dcblock.h **** #ifndef DSY_DCBLOCK_H
   4:../DaisySP/Source/Utility/dcblock.h **** #define DSY_DCBLOCK_H
   5:../DaisySP/Source/Utility/dcblock.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Utility/dcblock.h **** 
   7:../DaisySP/Source/Utility/dcblock.h **** namespace daisysp
   8:../DaisySP/Source/Utility/dcblock.h **** {
   9:../DaisySP/Source/Utility/dcblock.h **** /** Removes DC component of a signal
  10:../DaisySP/Source/Utility/dcblock.h ****     */
  11:../DaisySP/Source/Utility/dcblock.h **** class DcBlock
  12:../DaisySP/Source/Utility/dcblock.h **** {
  13:../DaisySP/Source/Utility/dcblock.h ****   public:
  14:../DaisySP/Source/Utility/dcblock.h ****     DcBlock(){};
  15:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 204              		.loc 11 15 5 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 209              		.loc 11 15 16 is_stmt 0 view .LVU21
 210 0000 7047     		bx	lr
 211              		.cfi_endproc
 212              	.LFE3753:
 214              		.weak	_ZN7daisysp7DcBlockD1Ev
 215              		.thumb_set _ZN7daisysp7DcBlockD1Ev,_ZN7daisysp7DcBlockD2Ev
 216 0002 00BF     		.section	.text._ZN7daisysp9EnvFollowD2Ev,"axG",%progbits,_ZN7daisysp9EnvFollowD5Ev,comdat
 217              		.align	1
 218              		.p2align 2,,3
 219              		.weak	_ZN7daisysp9EnvFollowD2Ev
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu fpv5-d16
 225              	_ZN7daisysp9EnvFollowD2Ev:
 226              	.LVL7:
 227              	.LFB3940:
 228              		.file 12 "envFollow.h"
   1:envFollow.h   **** // Copyright 2021 Adam Fulford
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 12


   2:envFollow.h   **** // 
   3:envFollow.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:envFollow.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:envFollow.h   **** // in the Software without restriction, including without limitation the rights
   6:envFollow.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:envFollow.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:envFollow.h   **** // furnished to do so, subject to the following conditions:
   9:envFollow.h   **** // 
  10:envFollow.h   **** // The above copyright notice and this permission notice shall be included in
  11:envFollow.h   **** // all copies or substantial portions of the Software.
  12:envFollow.h   **** // 
  13:envFollow.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:envFollow.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:envFollow.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:envFollow.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:envFollow.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:envFollow.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:envFollow.h   **** // THE SOFTWARE.
  20:envFollow.h   **** // 
  21:envFollow.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:envFollow.h   **** 
  23:envFollow.h   **** #ifndef ENV_FOLLOW_H
  24:envFollow.h   **** #define ENV_FOLLOW_H
  25:envFollow.h   **** #include <math.h>
  26:envFollow.h   **** 
  27:envFollow.h   **** namespace daisysp
  28:envFollow.h   **** {
  29:envFollow.h   **** 
  30:envFollow.h   **** class EnvFollow
  31:envFollow.h   **** {
  32:envFollow.h   ****     private:
  33:envFollow.h   ****     
  34:envFollow.h   ****     float avg;      //exp average of input
  35:envFollow.h   ****     float pos_sample;   //positive sample
  36:envFollow.h   ****     float sample_noDC;  //no DC sample
  37:envFollow.h   ****     float avg_env;  //average envelope
  38:envFollow.h   ****     float w;        //weighting
  39:envFollow.h   ****     float w_env;    //envelope weighting
  40:envFollow.h   **** 
  41:envFollow.h   ****     public:
  42:envFollow.h   **** 
  43:envFollow.h   ****     EnvFollow() //default constructor
  44:envFollow.h   ****     {
  45:envFollow.h   ****         avg = 0.0f;      //exp average of input
  46:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
  47:envFollow.h   ****         avg_env = 0.0f;  //average envelope
  48:envFollow.h   ****         w = 0.0001f;        //weighting
  49:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
  50:envFollow.h   ****         sample_noDC = 0.0f;
  51:envFollow.h   ****     }  
  52:envFollow.h   ****     ~EnvFollow() {}
 229              		.loc 12 52 5 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              		.loc 12 52 19 is_stmt 0 view .LVU23
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 13


 235 0000 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE3940:
 239              		.weak	_ZN7daisysp9EnvFollowD1Ev
 240              		.thumb_set _ZN7daisysp9EnvFollowD1Ev,_ZN7daisysp9EnvFollowD2Ev
 241 0002 00BF     		.section	.text._ZN8TaptempoD2Ev,"axG",%progbits,_ZN8TaptempoD5Ev,comdat
 242              		.align	1
 243              		.p2align 2,,3
 244              		.weak	_ZN8TaptempoD2Ev
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu fpv5-d16
 250              	_ZN8TaptempoD2Ev:
 251              	.LVL8:
 252              	.LFB3947:
 253              		.file 13 "taptempo.h"
   1:taptempo.h    **** // Copyright 2021 Adam Fulford
   2:taptempo.h    **** // 
   3:taptempo.h    **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:taptempo.h    **** // of this software and associated documentation files (the "Software"), to deal
   5:taptempo.h    **** // in the Software without restriction, including without limitation the rights
   6:taptempo.h    **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:taptempo.h    **** // copies of the Software, and to permit persons to whom the Software is
   8:taptempo.h    **** // furnished to do so, subject to the following conditions:
   9:taptempo.h    **** // 
  10:taptempo.h    **** // The above copyright notice and this permission notice shall be included in
  11:taptempo.h    **** // all copies or substantial portions of the Software.
  12:taptempo.h    **** // 
  13:taptempo.h    **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:taptempo.h    **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:taptempo.h    **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:taptempo.h    **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:taptempo.h    **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:taptempo.h    **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:taptempo.h    **** // THE SOFTWARE.
  20:taptempo.h    **** // 
  21:taptempo.h    **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:taptempo.h    **** 
  23:taptempo.h    **** #ifndef TAP_TEMPO_H
  24:taptempo.h    **** #define TAP_TEMPO_H
  25:taptempo.h    **** 
  26:taptempo.h    **** #include "daisysp.h"
  27:taptempo.h    **** #include "daisy_seed.h"
  28:taptempo.h    **** 
  29:taptempo.h    **** using namespace daisy;
  30:taptempo.h    **** using namespace daisysp;
  31:taptempo.h    **** 
  32:taptempo.h    **** class Taptempo
  33:taptempo.h    **** {
  34:taptempo.h    ****     private:
  35:taptempo.h    ****         uint32_t mintap_,maxtap_;
  36:taptempo.h    ****         uint32_t currentTime_,lastTime_,lastTapLength_,tapLength_;
  37:taptempo.h    ****         uint32_t clockLength_, lastClockLength_, clockThresh_;
  38:taptempo.h    ****         bool tapflag_;
  39:taptempo.h    ****         float tap_tolerance_;
  40:taptempo.h    ****         float tempo_, tapRatio_;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 14


  41:taptempo.h    **** 
  42:taptempo.h    ****     public:
  43:taptempo.h    **** 
  44:taptempo.h    ****     Taptempo()  //default constructor
  45:taptempo.h    ****     {
  46:taptempo.h    ****         tapflag_ = false;
  47:taptempo.h    ****         tap_tolerance_ = 1.25f;
  48:taptempo.h    ****         maxtap_ = 2000000;
  49:taptempo.h    ****         mintap_ = 80000;
  50:taptempo.h    ****         lastTapLength_ = 0;
  51:taptempo.h    ****         tempo_ = 500000.0f;
  52:taptempo.h    ****         lastTime_ = 0;
  53:taptempo.h    ****         currentTime_ = 0;
  54:taptempo.h    ****         tapRatio_ = 1.0f;
  55:taptempo.h    ****         clockLength_ = 0;
  56:taptempo.h    ****         lastClockLength_ = 0;
  57:taptempo.h    ****         clockThresh_ = 10000; //Us change
  58:taptempo.h    ****     }
  59:taptempo.h    ****     ~Taptempo() {}
 254              		.loc 13 59 5 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259              		.loc 13 59 18 is_stmt 0 view .LVU25
 260 0000 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE3947:
 264              		.weak	_ZN8TaptempoD1Ev
 265              		.thumb_set _ZN8TaptempoD1Ev,_ZN8TaptempoD2Ev
 266 0002 00BF     		.section	.text._ZN8TempoLEDD2Ev,"axG",%progbits,_ZN8TempoLEDD5Ev,comdat
 267              		.align	1
 268              		.p2align 2,,3
 269              		.weak	_ZN8TempoLEDD2Ev
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv5-d16
 275              	_ZN8TempoLEDD2Ev:
 276              	.LVL9:
 277              	.LFB3970:
 278              		.file 14 "LEDs.h"
   1:LEDs.h        **** // Copyright 2021 Adam Fulford
   2:LEDs.h        **** // 
   3:LEDs.h        **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:LEDs.h        **** // of this software and associated documentation files (the "Software"), to deal
   5:LEDs.h        **** // in the Software without restriction, including without limitation the rights
   6:LEDs.h        **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:LEDs.h        **** // copies of the Software, and to permit persons to whom the Software is
   8:LEDs.h        **** // furnished to do so, subject to the following conditions:
   9:LEDs.h        **** // 
  10:LEDs.h        **** // The above copyright notice and this permission notice shall be included in
  11:LEDs.h        **** // all copies or substantial portions of the Software.
  12:LEDs.h        **** // 
  13:LEDs.h        **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:LEDs.h        **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:LEDs.h        **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 15


  16:LEDs.h        **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:LEDs.h        **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:LEDs.h        **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:LEDs.h        **** // THE SOFTWARE.
  20:LEDs.h        **** // 
  21:LEDs.h        **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:LEDs.h        **** 
  23:LEDs.h        **** #ifndef LEDS_H
  24:LEDs.h        **** #define LEDS_H
  25:LEDs.h        **** 
  26:LEDs.h        **** #include "daisysp.h"
  27:LEDs.h        **** #include "daisy_seed.h"
  28:LEDs.h        **** #include "oscillator_p.h"
  29:LEDs.h        **** #include "constants.h"
  30:LEDs.h        **** 
  31:LEDs.h        **** using namespace daisysp;
  32:LEDs.h        **** using namespace daisy;
  33:LEDs.h        **** 
  34:LEDs.h        **** class TempoLED
  35:LEDs.h        **** {
  36:LEDs.h        **** 
  37:LEDs.h        **** Led led;
  38:LEDs.h        **** Oscillator_p blink;
  39:LEDs.h        **** TempoDivs div_last_;
  40:LEDs.h        **** //int phaseCounter_;
  41:LEDs.h        **** //int div_int;
  42:LEDs.h        **** //float phase_last_;
  43:LEDs.h        **** float GetDivInt(TempoDivs div);
  44:LEDs.h        **** 
  45:LEDs.h        **** public:
  46:LEDs.h        **** 
  47:LEDs.h        **** TempoLED(){}
  48:LEDs.h        **** ~TempoLED(){}   //destructor
 279              		.loc 14 48 1 is_stmt 1 view -0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284              	.LBB894:
 285              	.LBI894:
 286              		.file 15 "oscillator_p.h"
   1:oscillator_p.h **** #pragma once
   2:oscillator_p.h **** #ifndef DSY_OSCILLATOR_P_H
   3:oscillator_p.h **** #define DSY_OSCILLATOR_P_H
   4:oscillator_p.h **** #include <stdint.h>
   5:oscillator_p.h **** #include "Utility/dsp.h"
   6:oscillator_p.h **** #ifdef __cplusplus
   7:oscillator_p.h **** 
   8:oscillator_p.h **** namespace daisysp
   9:oscillator_p.h **** {
  10:oscillator_p.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:oscillator_p.h **** */
  12:oscillator_p.h **** class Oscillator_p
  13:oscillator_p.h **** {
  14:oscillator_p.h ****   public:
  15:oscillator_p.h ****     Oscillator_p() {}
  16:oscillator_p.h ****     ~Oscillator_p() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 16


 287              		.loc 15 16 5 view .LVU27
 288              		.loc 15 16 5 is_stmt 0 view .LVU28
 289              	.LBE894:
 290              	.LBB895:
 291              	.LBI895:
 292              		.file 16 "../libdaisy/src/hid/led.h"
   1:../libdaisy/src/hid/led.h **** 
   2:../libdaisy/src/hid/led.h **** #pragma once
   3:../libdaisy/src/hid/led.h **** #ifndef DSY_LED_H
   4:../libdaisy/src/hid/led.h **** #define DSY_LED_H
   5:../libdaisy/src/hid/led.h **** #include "daisy_core.h"
   6:../libdaisy/src/hid/led.h **** #include "per/gpio.h"
   7:../libdaisy/src/hid/led.h **** 
   8:../libdaisy/src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../libdaisy/src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../libdaisy/src/hid/led.h **** */
  11:../libdaisy/src/hid/led.h **** 
  12:../libdaisy/src/hid/led.h **** namespace daisy
  13:../libdaisy/src/hid/led.h **** {
  14:../libdaisy/src/hid/led.h **** /**
  15:../libdaisy/src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../libdaisy/src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../libdaisy/src/hid/led.h ****     @author shensley
  18:../libdaisy/src/hid/led.h ****     @date March 2020
  19:../libdaisy/src/hid/led.h ****     @ingroup feedback
  20:../libdaisy/src/hid/led.h **** */
  21:../libdaisy/src/hid/led.h **** class Led
  22:../libdaisy/src/hid/led.h **** {
  23:../libdaisy/src/hid/led.h ****   public:
  24:../libdaisy/src/hid/led.h ****     Led() {}
  25:../libdaisy/src/hid/led.h ****     ~Led() {}
 293              		.loc 16 25 5 is_stmt 1 view .LVU29
 294              		.loc 16 25 5 is_stmt 0 view .LVU30
 295              	.LBE895:
 296              		.loc 14 48 13 view .LVU31
 297 0000 7047     		bx	lr
 298              		.cfi_endproc
 299              	.LFE3970:
 301              		.weak	_ZN8TempoLEDD1Ev
 302              		.thumb_set _ZN8TempoLEDD1Ev,_ZN8TempoLEDD2Ev
 303 0002 00BF     		.section	.text._ZN9ButtonLEDD2Ev,"axG",%progbits,_ZN9ButtonLEDD5Ev,comdat
 304              		.align	1
 305              		.p2align 2,,3
 306              		.weak	_ZN9ButtonLEDD2Ev
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 310              		.fpu fpv5-d16
 312              	_ZN9ButtonLEDD2Ev:
 313              	.LVL10:
 314              	.LFB3977:
  49:LEDs.h        **** 
  50:LEDs.h        **** void init(dsy_gpio_pin ledpin, float samplerate);  //led pin number
  51:LEDs.h        **** 
  52:LEDs.h        **** void setTempo(float tempo);
  53:LEDs.h        **** 
  54:LEDs.h        **** void resetPhase();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 17


  55:LEDs.h        **** 
  56:LEDs.h        **** void resetPhaseCounter();
  57:LEDs.h        **** 
  58:LEDs.h        **** //update using oscillator
  59:LEDs.h        **** void update();
  60:LEDs.h        **** 
  61:LEDs.h        **** //update using external sync
  62:LEDs.h        **** void update(TempoDivs div, float phase);
  63:LEDs.h        **** 
  64:LEDs.h        **** void LED_set(float brightness);
  65:LEDs.h        **** 
  66:LEDs.h        **** bool isEOC();
  67:LEDs.h        **** 
  68:LEDs.h        **** //high if just had a div change
  69:LEDs.h        **** //bool divChange();
  70:LEDs.h        **** 
  71:LEDs.h        **** float GetPhase() { return blink.GetPhase(); }
  72:LEDs.h        **** 
  73:LEDs.h        **** };
  74:LEDs.h        **** 
  75:LEDs.h        **** class ButtonLED    //button with status LED
  76:LEDs.h        **** {
  77:LEDs.h        ****     public:
  78:LEDs.h        ****     ButtonLED() {}
  79:LEDs.h        ****     ~ButtonLED() {}
 315              		.loc 14 79 5 is_stmt 1 view -0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              		@ link register save eliminated.
 320              	.LBB896:
 321              	.LBI896:
 322              		.loc 16 25 5 view .LVU33
 323              		.loc 16 25 5 is_stmt 0 view .LVU34
 324              	.LBE896:
 325              	.LBB897:
 326              	.LBI897:
 327              		.loc 1 41 5 is_stmt 1 view .LVU35
 328              		.loc 1 41 5 is_stmt 0 view .LVU36
 329              	.LBE897:
 330              		.loc 14 79 19 view .LVU37
 331 0000 7047     		bx	lr
 332              		.cfi_endproc
 333              	.LFE3977:
 335              		.weak	_ZN9ButtonLEDD1Ev
 336              		.thumb_set _ZN9ButtonLEDD1Ev,_ZN9ButtonLEDD2Ev
 337 0002 00BF     		.section	.text._ZN10DelayMultiD2Ev,"axG",%progbits,_ZN10DelayMultiD5Ev,comdat
 338              		.align	1
 339              		.p2align 2,,3
 340              		.weak	_ZN10DelayMultiD2Ev
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu fpv5-d16
 346              	_ZN10DelayMultiD2Ev:
 347              	.LVL11:
 348              	.LFB3983:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 18


 349              		.file 17 "DelayMulti.h"
   1:DelayMulti.h  **** // Copyright 2021 Adam Fulford
   2:DelayMulti.h  **** // 
   3:DelayMulti.h  **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:DelayMulti.h  **** // of this software and associated documentation files (the "Software"), to deal
   5:DelayMulti.h  **** // in the Software without restriction, including without limitation the rights
   6:DelayMulti.h  **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:DelayMulti.h  **** // copies of the Software, and to permit persons to whom the Software is
   8:DelayMulti.h  **** // furnished to do so, subject to the following conditions:
   9:DelayMulti.h  **** // 
  10:DelayMulti.h  **** // The above copyright notice and this permission notice shall be included in
  11:DelayMulti.h  **** // all copies or substantial portions of the Software.
  12:DelayMulti.h  **** // 
  13:DelayMulti.h  **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:DelayMulti.h  **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:DelayMulti.h  **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:DelayMulti.h  **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:DelayMulti.h  **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:DelayMulti.h  **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:DelayMulti.h  **** // THE SOFTWARE.
  20:DelayMulti.h  **** // 
  21:DelayMulti.h  **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:DelayMulti.h  **** 
  23:DelayMulti.h  **** #ifndef DELAYMULTI_H
  24:DelayMulti.h  **** #define DELAYMULTI_H
  25:DelayMulti.h  **** 
  26:DelayMulti.h  **** #include "daisysp.h"
  27:DelayMulti.h  **** #include "daisy_seed.h"
  28:DelayMulti.h  **** #include "delayline_multitap.h" //modified delayline
  29:DelayMulti.h  **** #include "constants.h"
  30:DelayMulti.h  **** #include "LEDs.h"
  31:DelayMulti.h  **** #include "scale.h"
  32:DelayMulti.h  **** 
  33:DelayMulti.h  **** using namespace daisysp;
  34:DelayMulti.h  **** using namespace daisy;
  35:DelayMulti.h  **** 
  36:DelayMulti.h  **** constexpr size_t numHeads{1};
  37:DelayMulti.h  **** //constexpr size_t numHeadsSets{2};
  38:DelayMulti.h  **** constexpr size_t totalNumHeads{2};
  39:DelayMulti.h  **** 
  40:DelayMulti.h  **** constexpr float delaytime_threshold{50};   //in samples
  41:DelayMulti.h  **** constexpr uint32_t timethresh{25}; //length of wait before triggering xfade (used to be 75)
  42:DelayMulti.h  **** 
  43:DelayMulti.h  **** class DelayMulti
  44:DelayMulti.h  **** {
  45:DelayMulti.h  **** public:
  46:DelayMulti.h  **** DelayLineMultiTap <float, static_cast<size_t>(48000 * 36.0f)>  *del; //36 second buffer
  47:DelayMulti.h  **** //tempoLED
  48:DelayMulti.h  **** TempoLED tempoled;
  49:DelayMulti.h  **** DelayMulti() {}
  50:DelayMulti.h  **** ~DelayMulti() {}
 350              		.loc 17 50 1 is_stmt 1 view -0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354              		@ link register save eliminated.
 355              	.LBB898:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 19


 356              	.LBI898:
  48:LEDs.h        **** 
 357              		.loc 14 48 1 view .LVU39
 358              	.LBB899:
 359              	.LBI899:
 360              		.loc 15 16 5 view .LVU40
 361              		.loc 15 16 5 is_stmt 0 view .LVU41
 362              	.LBE899:
 363              	.LBB900:
 364              	.LBI900:
 365              		.loc 16 25 5 is_stmt 1 view .LVU42
 366              		.loc 16 25 5 is_stmt 0 view .LVU43
 367              	.LBE900:
 368              	.LBE898:
 369              		.loc 17 50 16 view .LVU44
 370 0000 7047     		bx	lr
 371              		.cfi_endproc
 372              	.LFE3983:
 374              		.weak	_ZN10DelayMultiD1Ev
 375              		.thumb_set _ZN10DelayMultiD1Ev,_ZN10DelayMultiD2Ev
 376 0002 00BF     		.section	.text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev,"axG",%progbits,_ZN7daisysp17DelayL
 377              		.align	1
 378              		.p2align 2,,3
 379              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 383              		.fpu fpv5-d16
 385              	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:
 386              	.LVL12:
 387              	.LFB4914:
 388              		.file 18 "delayline_multitap.h"
   1:delayline_multitap.h **** // Copyright 2021 Adam Fulford
   2:delayline_multitap.h **** // 
   3:delayline_multitap.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_multitap.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_multitap.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_multitap.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_multitap.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_multitap.h **** // furnished to do so, subject to the following conditions:
   9:delayline_multitap.h **** // 
  10:delayline_multitap.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_multitap.h **** // all copies or substantial portions of the Software.
  12:delayline_multitap.h **** // 
  13:delayline_multitap.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_multitap.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_multitap.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_multitap.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_multitap.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_multitap.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_multitap.h **** // THE SOFTWARE.
  20:delayline_multitap.h **** // 
  21:delayline_multitap.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_multitap.h **** 
  23:delayline_multitap.h **** #pragma once
  24:delayline_multitap.h **** #ifndef DSY_DELAY_MULTITAP_H
  25:delayline_multitap.h **** #define DSY_DELAY_MULTITAP_H
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 20


  26:delayline_multitap.h **** #include <stdlib.h>
  27:delayline_multitap.h **** #include <stdint.h>
  28:delayline_multitap.h **** #include <array>
  29:delayline_multitap.h **** namespace daisysp
  30:delayline_multitap.h **** {
  31:delayline_multitap.h **** /** Mulitap Delay line.
  32:delayline_multitap.h **** 
  33:delayline_multitap.h **** DelayLine<float, SAMPLE_RATE> del;
  34:delayline_multitap.h **** 
  35:delayline_multitap.h **** By: Adam Fulford
  36:delayline_multitap.h **** */
  37:delayline_multitap.h **** template <typename T, size_t max_size>
  38:delayline_multitap.h **** class DelayLineMultiTap
  39:delayline_multitap.h **** {
  40:delayline_multitap.h **** private:
  41:delayline_multitap.h ****     size_t write_ptr_;
  42:delayline_multitap.h ****     std::array<size_t, 16> delay_;    //array to hold delay times for upto 16 read heads.
  43:delayline_multitap.h ****     std::array<float, 16> frac_;
  44:delayline_multitap.h ****     T      line_[max_size];
  45:delayline_multitap.h ****     size_t num_heads_;
  46:delayline_multitap.h **** 
  47:delayline_multitap.h ****   public:
  48:delayline_multitap.h ****     DelayLineMultiTap() 
  49:delayline_multitap.h ****     {
  50:delayline_multitap.h ****        // num_heads_ = 16; //Why can't I do this in the default constructor?! Compiles but does not
  51:delayline_multitap.h ****     }
  52:delayline_multitap.h ****     ~DelayLineMultiTap() {}
 389              		.loc 18 52 5 is_stmt 1 view -0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              		@ link register save eliminated.
 394              		.loc 18 52 27 is_stmt 0 view .LVU46
 395 0000 7047     		bx	lr
 396              		.cfi_endproc
 397              	.LFE4914:
 399              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 400              		.thumb_set _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev,_ZN7daisysp17DelayLineMultiTapIfLj17280
 401 0002 00BF     		.section	.text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev,"axG",%progbits,_ZN7daisysp16DelayLin
 402              		.align	1
 403              		.p2align 2,,3
 404              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu fpv5-d16
 410              	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:
 411              	.LVL13:
 412              	.LFB4917:
 413              		.file 19 "delayline_reverse.h"
   1:delayline_reverse.h **** // Copyright 2021 Adam Fulford
   2:delayline_reverse.h **** // 
   3:delayline_reverse.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_reverse.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_reverse.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_reverse.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_reverse.h **** // copies of the Software, and to permit persons to whom the Software is
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 21


   8:delayline_reverse.h **** // furnished to do so, subject to the following conditions:
   9:delayline_reverse.h **** // 
  10:delayline_reverse.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_reverse.h **** // all copies or substantial portions of the Software.
  12:delayline_reverse.h **** // 
  13:delayline_reverse.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_reverse.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_reverse.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_reverse.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_reverse.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_reverse.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_reverse.h **** // THE SOFTWARE.
  20:delayline_reverse.h **** // 
  21:delayline_reverse.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_reverse.h **** 
  23:delayline_reverse.h **** #pragma once
  24:delayline_reverse.h **** #ifndef DSY_DELAY_REVERSE_H
  25:delayline_reverse.h **** #define DSY_DELAY_REVERSE_H
  26:delayline_reverse.h **** #include <stdlib.h>
  27:delayline_reverse.h **** #include <stdint.h>
  28:delayline_reverse.h **** #include <math.h>
  29:delayline_reverse.h **** namespace daisysp
  30:delayline_reverse.h **** {
  31:delayline_reverse.h **** /** Reverse Delay line
  32:delayline_reverse.h **** By: Adam Fulford
  33:delayline_reverse.h **** */
  34:delayline_reverse.h **** template <typename T, size_t max_size>
  35:delayline_reverse.h **** class DelayLineReverse
  36:delayline_reverse.h **** {
  37:delayline_reverse.h ****   public:
  38:delayline_reverse.h ****     DelayLineReverse() {}
  39:delayline_reverse.h ****     ~DelayLineReverse() {}
 414              		.loc 19 39 5 is_stmt 1 view -0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              		@ link register save eliminated.
 419              		.loc 19 39 26 is_stmt 0 view .LVU48
 420 0000 7047     		bx	lr
 421              		.cfi_endproc
 422              	.LFE4917:
 424              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 425              		.thumb_set _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev,_ZN7daisysp16DelayLineReverseIfLj600000EE
 426 0002 00BF     		.section	.text._Z10InitDelaysf,"ax",%progbits
 427              		.align	1
 428              		.p2align 2,,3
 429              		.global	_Z10InitDelaysf
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 433              		.fpu fpv5-d16
 435              	_Z10InitDelaysf:
 436              	.LVL14:
 437              	.LFB4310:
 438              		.file 20 "Veno-Echo.cpp"
   1:Veno-Echo.cpp **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.cpp **** // 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 22


   3:Veno-Echo.cpp **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.cpp **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.cpp **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.cpp **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.cpp **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.cpp **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.cpp **** // 
  10:Veno-Echo.cpp **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.cpp **** // all copies or substantial portions of the Software.
  12:Veno-Echo.cpp **** // 
  13:Veno-Echo.cpp **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.cpp **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.cpp **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.cpp **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.cpp **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.cpp **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.cpp **** // THE SOFTWARE.
  20:Veno-Echo.cpp **** // 
  21:Veno-Echo.cpp **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.cpp **** 
  23:Veno-Echo.cpp **** #include "Veno-Echo.h"
  24:Veno-Echo.cpp **** #include "QSPI_Settings.h"
  25:Veno-Echo.cpp **** #include "daisysp.h"
  26:Veno-Echo.cpp **** #include "delayline_multitap.h" //modified delayline
  27:Veno-Echo.cpp **** #include "delayline_reverse.h"  //reverse delayline
  28:Veno-Echo.cpp **** #include "envFollow.h"
  29:Veno-Echo.cpp **** #include "scale.h"
  30:Veno-Echo.cpp **** #include "constants.h"
  31:Veno-Echo.cpp **** #include "taptempo.h"
  32:Veno-Echo.cpp **** #include "LEDs.h"
  33:Veno-Echo.cpp **** #include "DelayMulti.h"
  34:Veno-Echo.cpp **** #include <math.h>
  35:Veno-Echo.cpp **** #include <string.h>
  36:Veno-Echo.cpp **** #include <atomic>
  37:Veno-Echo.cpp **** 
  38:Veno-Echo.cpp **** using namespace daisysp;
  39:Veno-Echo.cpp **** 
  40:Veno-Echo.cpp **** static Svf LPF_L;
  41:Veno-Echo.cpp **** static Svf LPF_R;
  42:Veno-Echo.cpp **** static Svf HPF_L;
  43:Veno-Echo.cpp **** static Svf HPF_R;
  44:Veno-Echo.cpp **** 
  45:Veno-Echo.cpp **** static Svf LPF_L_post;
  46:Veno-Echo.cpp **** static Svf LPF_R_post;
  47:Veno-Echo.cpp **** static Svf HPF_L_post;
  48:Veno-Echo.cpp **** static Svf HPF_R_post;
  49:Veno-Echo.cpp **** 
  50:Veno-Echo.cpp **** static Oscillator lfo;
  51:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
  52:Veno-Echo.cpp **** 
  53:Veno-Echo.cpp **** static DcBlock DcBlock_LFB, DcBlock_RFB; //DC blocks
  54:Veno-Echo.cpp **** 
  55:Veno-Echo.cpp **** // Declare a DelayLine of MAX_DELAY number of floats.
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsL;
  57:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
  58:Veno-Echo.cpp **** 
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsL_REV; //10 s
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 23


  60:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
  61:Veno-Echo.cpp **** 
  62:Veno-Echo.cpp **** struct DelayRev
  63:Veno-Echo.cpp **** {
  64:Veno-Echo.cpp ****     DelayLineReverse <float, static_cast<size_t>(maxRevDelay*2.5f)>  *del;
  65:Veno-Echo.cpp ****     float currentDelay_;
  66:Veno-Echo.cpp ****     //float delayTarget;
  67:Veno-Echo.cpp **** 
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
  69:Veno-Echo.cpp ****     {
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
  71:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
  72:Veno-Echo.cpp ****         {
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
  75:Veno-Echo.cpp ****             //del -> Reset();
  76:Veno-Echo.cpp ****         }
  77:Veno-Echo.cpp ****     }
  78:Veno-Echo.cpp **** 
  79:Veno-Echo.cpp ****     float Read()
  80:Veno-Echo.cpp ****     {
  81:Veno-Echo.cpp ****         //read from head1
  82:Veno-Echo.cpp ****         float read = del -> ReadRev();
  83:Veno-Echo.cpp ****         return read;
  84:Veno-Echo.cpp ****     }
  85:Veno-Echo.cpp **** 
  86:Veno-Echo.cpp ****     float FwdFbk()
  87:Veno-Echo.cpp ****     {
  88:Veno-Echo.cpp ****         float read = del -> ReadFwd();
  89:Veno-Echo.cpp ****         return read;
  90:Veno-Echo.cpp ****     }
  91:Veno-Echo.cpp **** 
  92:Veno-Echo.cpp ****     void Write(float in)    //sort out feedback in audiocallback
  93:Veno-Echo.cpp ****     {
  94:Veno-Echo.cpp ****         del -> Write(in);
  95:Veno-Echo.cpp ****     }
  96:Veno-Echo.cpp **** };
  97:Veno-Echo.cpp **** 
  98:Veno-Echo.cpp **** DelayMulti delayL,delayR;
  99:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 100:Veno-Echo.cpp **** 
 101:Veno-Echo.cpp **** //LED objects:
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 103:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 104:Veno-Echo.cpp **** 
 105:Veno-Echo.cpp **** 
 106:Veno-Echo.cpp **** float delayTimeL_CV{};
 107:Veno-Echo.cpp **** float delayTimeR_CV{};
 108:Veno-Echo.cpp **** 
 109:Veno-Echo.cpp **** float feedbackL{};
 110:Veno-Echo.cpp **** float feedbackL_CV{};
 111:Veno-Echo.cpp **** 
 112:Veno-Echo.cpp **** float feedbackR{};
 113:Veno-Echo.cpp **** float feedbackR_CV{};
 114:Veno-Echo.cpp **** 
 115:Veno-Echo.cpp **** float crossfeedback{};
 116:Veno-Echo.cpp **** float crossfeedback_CV{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 24


 117:Veno-Echo.cpp **** 
 118:Veno-Echo.cpp **** float drywet{0.5};
 119:Veno-Echo.cpp **** float drywet_CV{};
 120:Veno-Echo.cpp **** 
 121:Veno-Echo.cpp **** float width{1.0};
 122:Veno-Echo.cpp **** float width_CV{};
 123:Veno-Echo.cpp **** 
 124:Veno-Echo.cpp **** float filterXfade{};
 125:Veno-Echo.cpp **** 
 126:Veno-Echo.cpp **** //TempoDivs div_L{};
 127:Veno-Echo.cpp **** //TempoDivs div_R{};
 128:Veno-Echo.cpp **** 
 129:Veno-Echo.cpp **** float ModDepth{0.0f};   //100.0 is a lot!
 130:Veno-Echo.cpp **** 
 131:Veno-Echo.cpp **** //float modulation_CV{};
 132:Veno-Echo.cpp **** float modulation_CV_Raw{};
 133:Veno-Echo.cpp **** 
 134:Veno-Echo.cpp **** bool syncMode{false};
 135:Veno-Echo.cpp **** bool shift{false};  //global variable for secondary shift functions
 136:Veno-Echo.cpp **** bool mute{};
 137:Veno-Echo.cpp **** 
 138:Veno-Echo.cpp **** bool ClockInFlag{false};
 139:Veno-Echo.cpp **** bool PostFilters{false};
 140:Veno-Echo.cpp **** 
 141:Veno-Echo.cpp **** std::atomic<bool> save_flag{};
 142:Veno-Echo.cpp **** 
 143:Veno-Echo.cpp **** SaveState saveState{IDLE};
 144:Veno-Echo.cpp **** 
 145:Veno-Echo.cpp **** float DELAYL_DEBUG;
 146:Veno-Echo.cpp **** float DELAYR_DEBUG;
 147:Veno-Echo.cpp **** float PHASE_DEBUG;
 148:Veno-Echo.cpp **** 
 149:Veno-Echo.cpp **** static Adsr FwdRevLEnv;
 150:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 151:Veno-Echo.cpp **** 
 152:Veno-Echo.cpp **** static Adsr LPF_Env;
 153:Veno-Echo.cpp **** static Adsr HPF_Env;
 154:Veno-Echo.cpp **** 
 155:Veno-Echo.cpp **** static CrossFade FwdRevLXfade;  //crossfades for reverse delay into fwd delay
 156:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 157:Veno-Echo.cpp **** 
 158:Veno-Echo.cpp **** static CrossFade WidthXfade;
 159:Veno-Echo.cpp **** 
 160:Veno-Echo.cpp **** //crossfades for switching in and out of filters
 161:Veno-Echo.cpp **** static CrossFade LPF_LXfade;
 162:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 163:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 164:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 165:Veno-Echo.cpp **** 
 166:Veno-Echo.cpp **** //crossfades for switching in and out of post filters
 167:Veno-Echo.cpp **** static CrossFade LPF_LXfade_post;
 168:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 169:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 170:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 171:Veno-Echo.cpp **** 
 172:Veno-Echo.cpp **** //cross fades for manual filter crossfading
 173:Veno-Echo.cpp **** static CrossFade FilterMix_L;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 25


 174:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 175:Veno-Echo.cpp **** 
 176:Veno-Echo.cpp **** static CrossFade FilterMix_L_post;
 177:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 178:Veno-Echo.cpp **** 
 179:Veno-Echo.cpp **** //Gate inputs
 180:Veno-Echo.cpp **** Switch ReverseGateL;
 181:Veno-Echo.cpp **** Switch ReverseGateR;
 182:Veno-Echo.cpp **** 
 183:Veno-Echo.cpp **** //Switch TapButton;
 184:Veno-Echo.cpp **** Switch Sync;
 185:Veno-Echo.cpp **** Switch ClockIn;
 186:Veno-Echo.cpp **** 
 187:Veno-Echo.cpp **** //Tap tempo
 188:Veno-Echo.cpp **** Taptempo BaseTempo; 
 189:Veno-Echo.cpp **** 
 190:Veno-Echo.cpp **** Settings AltControls;
 191:Veno-Echo.cpp **** 
 192:Veno-Echo.cpp **** //default alt control values
 193:Veno-Echo.cpp **** constexpr Settings defaultAltControls
 194:Veno-Echo.cpp **** {
 195:Veno-Echo.cpp ****     (minRevDelay + maxRevDelay) / 2.0f, //RevLength
 196:Veno-Echo.cpp ****     1.0f,   //tapRatio
 197:Veno-Echo.cpp ****     0.0f,   //ModDepth
 198:Veno-Echo.cpp ****     (maxModRate + minModRate) / 2.0f,   //ModFreq
 199:Veno-Echo.cpp ****     defaultHPCut,   //HP_Cutoff
 200:Veno-Echo.cpp ****     defaultLPCut,   //LP_Cutoff
 201:Veno-Echo.cpp ****     default_Res,     //Filter Resonance
 202:Veno-Echo.cpp ****     0.0f,    //filter prepost
 203:Veno-Echo.cpp ****     500000.0f,     //base tempo (in us)
 204:Veno-Echo.cpp ****     0.0f,       //L_Rev
 205:Veno-Echo.cpp ****     0.0f    //R_Rev
 206:Veno-Echo.cpp **** };
 207:Veno-Echo.cpp **** 
 208:Veno-Echo.cpp **** void Update_DelayTimeL_CV();
 209:Veno-Echo.cpp **** void Update_DelayTimeL();
 210:Veno-Echo.cpp **** 
 211:Veno-Echo.cpp **** void Update_DelayTimeR_CV();
 212:Veno-Echo.cpp **** void Update_DelayTimeR();
 213:Veno-Echo.cpp **** 
 214:Veno-Echo.cpp **** void Update_feedbackL_CV();
 215:Veno-Echo.cpp **** void Update_feedbackL();
 216:Veno-Echo.cpp **** 
 217:Veno-Echo.cpp **** void Update_feedbackR_CV();
 218:Veno-Echo.cpp **** void Update_feedbackR();
 219:Veno-Echo.cpp **** 
 220:Veno-Echo.cpp **** void Update_drywet_CV();
 221:Veno-Echo.cpp **** void Update_drywet();
 222:Veno-Echo.cpp **** 
 223:Veno-Echo.cpp **** void Update_width_CV();
 224:Veno-Echo.cpp **** void Update_width();
 225:Veno-Echo.cpp **** 
 226:Veno-Echo.cpp **** void Update_crossfeedback();
 227:Veno-Echo.cpp **** void Update_filterXfade();
 228:Veno-Echo.cpp **** 
 229:Veno-Echo.cpp **** void Update_Buttons();
 230:Veno-Echo.cpp **** void Update_DelayBaseTempo();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 26


 231:Veno-Echo.cpp **** void Update_BaseTempoLED();
 232:Veno-Echo.cpp **** void Update_DelayTempoLEDs();
 233:Veno-Echo.cpp **** void Update_Mod();
 234:Veno-Echo.cpp **** void GetModCV();
 235:Veno-Echo.cpp **** float SetTempoDiv(float input, TempoDivs *div);
 236:Veno-Echo.cpp **** void UpdateClock();
 237:Veno-Echo.cpp **** double GetTapRatio(TapRatios ratio);
 238:Veno-Echo.cpp **** void ApplySettings(const Settings &setting);
 239:Veno-Echo.cpp **** void TurnOnAllLEDs();
 240:Veno-Echo.cpp **** void ResetAllLEDs();
 241:Veno-Echo.cpp **** float HardLimit(float input, float limit);
 242:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val);
 243:Veno-Echo.cpp **** bool checkPickupState(float value, float lastvalue, bool lastState, bool ShiftChange);
 244:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
 245:Veno-Echo.cpp **** 
 246:Veno-Echo.cpp **** static void AudioCallback(float *in, float *out, size_t size)
 247:Veno-Echo.cpp **** {
 248:Veno-Echo.cpp **** 
 249:Veno-Echo.cpp **** /*
 250:Veno-Echo.cpp **** static uint32_t funcLength{};
 251:Veno-Echo.cpp **** static uint32_t lastFuncTime{};
 252:Veno-Echo.cpp **** static uint32_t maxFuncLength{};
 253:Veno-Echo.cpp **** static uint32_t minFuncLength{500000000};
 254:Veno-Echo.cpp **** static uint32_t aveFuncLength{};
 255:Veno-Echo.cpp **** 
 256:Veno-Echo.cpp **** */
 257:Veno-Echo.cpp **** 
 258:Veno-Echo.cpp **** static int Counter{};
 259:Veno-Echo.cpp **** 
 260:Veno-Echo.cpp **** /*
 261:Veno-Echo.cpp ****     funcLength = System::GetUs() - lastFuncTime;
 262:Veno-Echo.cpp **** 
 263:Veno-Echo.cpp ****     aveFuncLength = (funcLength + 1023 * aveFuncLength) >> 10;
 264:Veno-Echo.cpp ****     if (funcLength > maxFuncLength)
 265:Veno-Echo.cpp ****     {
 266:Veno-Echo.cpp ****         maxFuncLength = funcLength;
 267:Veno-Echo.cpp ****     }
 268:Veno-Echo.cpp **** 
 269:Veno-Echo.cpp ****     if (funcLength < minFuncLength)
 270:Veno-Echo.cpp ****     {
 271:Veno-Echo.cpp ****         minFuncLength = funcLength;
 272:Veno-Echo.cpp ****     }
 273:Veno-Echo.cpp **** 
 274:Veno-Echo.cpp **** */
 275:Veno-Echo.cpp **** 
 276:Veno-Echo.cpp **** Counter = (Counter + 1) % updateDiv;
 277:Veno-Echo.cpp **** 
 278:Veno-Echo.cpp ****     /*
 279:Veno-Echo.cpp ****         //each call generate random dither length between 0 and 14
 280:Veno-Echo.cpp ****         uint16_t randomDither{uint16_t (rand() % 5)};
 281:Veno-Echo.cpp ****         //init timeofCall as current time
 282:Veno-Echo.cpp ****         uint32_t timeofCall{System::GetUs()};
 283:Veno-Echo.cpp **** 
 284:Veno-Echo.cpp ****         //wait for random Dither time
 285:Veno-Echo.cpp ****         while( (System::GetUs() - timeofCall ) < randomDither)
 286:Veno-Echo.cpp ****         {}
 287:Veno-Echo.cpp ****     */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 27


 288:Veno-Echo.cpp **** 
 289:Veno-Echo.cpp ****         switch (Counter)
 290:Veno-Echo.cpp ****         {
 291:Veno-Echo.cpp ****             case 0:
 292:Veno-Echo.cpp ****                 Update_Buttons();
 293:Veno-Echo.cpp ****                 GetModCV();
 294:Veno-Echo.cpp ****                 Update_DelayBaseTempo();
 295:Veno-Echo.cpp ****                 Update_DelayTempoLEDs();
 296:Veno-Echo.cpp ****             break;
 297:Veno-Echo.cpp **** 
 298:Veno-Echo.cpp ****             case 1:
 299:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 300:Veno-Echo.cpp ****             break;
 301:Veno-Echo.cpp **** 
 302:Veno-Echo.cpp ****             case 2:
 303:Veno-Echo.cpp ****                 if(saveState != SAVING)
 304:Veno-Echo.cpp ****                 {
 305:Veno-Echo.cpp ****                     Update_DelayTimeL();
 306:Veno-Echo.cpp ****                 }
 307:Veno-Echo.cpp ****             break;
 308:Veno-Echo.cpp **** 
 309:Veno-Echo.cpp ****             case 3:
 310:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 311:Veno-Echo.cpp ****             break;
 312:Veno-Echo.cpp **** 
 313:Veno-Echo.cpp ****             case 4:
 314:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 315:Veno-Echo.cpp ****                 {
 316:Veno-Echo.cpp ****                     Update_DelayTimeR();
 317:Veno-Echo.cpp ****                 }
 318:Veno-Echo.cpp ****             break;
 319:Veno-Echo.cpp **** 
 320:Veno-Echo.cpp ****             case 5:
 321:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 322:Veno-Echo.cpp ****             break;
 323:Veno-Echo.cpp **** 
 324:Veno-Echo.cpp ****             case 6:
 325:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 326:Veno-Echo.cpp ****                 {
 327:Veno-Echo.cpp ****                     Update_feedbackL();
 328:Veno-Echo.cpp ****                 }
 329:Veno-Echo.cpp ****             break;
 330:Veno-Echo.cpp **** 
 331:Veno-Echo.cpp ****             case 7:
 332:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 333:Veno-Echo.cpp ****             break;
 334:Veno-Echo.cpp **** 
 335:Veno-Echo.cpp ****             case 8:
 336:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 337:Veno-Echo.cpp ****                 {
 338:Veno-Echo.cpp ****                     Update_feedbackR();
 339:Veno-Echo.cpp ****                 }
 340:Veno-Echo.cpp ****             break;
 341:Veno-Echo.cpp **** 
 342:Veno-Echo.cpp ****             case 9:
 343:Veno-Echo.cpp ****                 Update_drywet_CV();
 344:Veno-Echo.cpp ****             break;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 28


 345:Veno-Echo.cpp **** 
 346:Veno-Echo.cpp ****             case 10:
 347:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 348:Veno-Echo.cpp ****                 {
 349:Veno-Echo.cpp ****                     Update_drywet();
 350:Veno-Echo.cpp ****                 }
 351:Veno-Echo.cpp ****             break;
 352:Veno-Echo.cpp **** 
 353:Veno-Echo.cpp ****             case 11:
 354:Veno-Echo.cpp ****                 Update_width_CV();
 355:Veno-Echo.cpp ****             break;
 356:Veno-Echo.cpp **** 
 357:Veno-Echo.cpp ****             case 12:
 358:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 359:Veno-Echo.cpp ****                 {
 360:Veno-Echo.cpp ****                     Update_width();
 361:Veno-Echo.cpp ****                 }
 362:Veno-Echo.cpp ****             break;
 363:Veno-Echo.cpp **** 
 364:Veno-Echo.cpp ****             case 13:
 365:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 366:Veno-Echo.cpp ****                 {
 367:Veno-Echo.cpp ****                     Update_crossfeedback();
 368:Veno-Echo.cpp ****                 }
 369:Veno-Echo.cpp ****             break;
 370:Veno-Echo.cpp **** 
 371:Veno-Echo.cpp ****             case 14:
 372:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 373:Veno-Echo.cpp ****                 {
 374:Veno-Echo.cpp ****                     Update_filterXfade();
 375:Veno-Echo.cpp ****                 }
 376:Veno-Echo.cpp ****             break;
 377:Veno-Echo.cpp ****         }
 378:Veno-Echo.cpp **** 
 379:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
 380:Veno-Echo.cpp ****     {   
 381:Veno-Echo.cpp ****         UpdateClock(); 
 382:Veno-Echo.cpp ****         Update_Mod();
 383:Veno-Echo.cpp **** 
 384:Veno-Echo.cpp ****         //get xfade positions from envelopes:
 385:Veno-Echo.cpp ****         float FwdRevLXFadepos = FwdRevLEnv.Process(Rev_L_sw.getState());
 386:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 387:Veno-Echo.cpp ****         
 388:Veno-Echo.cpp ****         float HPFXFadepos = HPF_Env.Process(HPF_sw.getState());
 389:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 390:Veno-Echo.cpp **** 
 391:Veno-Echo.cpp ****         //set xfade positions      
 392:Veno-Echo.cpp ****         FwdRevLXfade.SetPos(FwdRevLXFadepos);
 393:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 394:Veno-Echo.cpp ****         
 395:Veno-Echo.cpp ****         HPF_LXfade.SetPos(HPFXFadepos);
 396:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 397:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 398:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 399:Veno-Echo.cpp **** 
 400:Veno-Echo.cpp ****         HPF_LXfade_post.SetPos(HPFXFadepos);
 401:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 29


 402:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 403:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 404:Veno-Echo.cpp **** 
 405:Veno-Echo.cpp ****         FilterMix_L.SetPos(filterXfade);
 406:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 407:Veno-Echo.cpp **** 
 408:Veno-Echo.cpp ****         FilterMix_L_post.SetPos(filterXfade);
 409:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 410:Veno-Echo.cpp **** 
 411:Veno-Echo.cpp ****         //filter controls, read from reverse delay lines:
 412:Veno-Echo.cpp ****         float delayRevSignalL = delaysL_REV.Read();
 413:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 414:Veno-Echo.cpp **** 
 415:Veno-Echo.cpp ****         //write input to reverse delay (no feedback)
 416:Veno-Echo.cpp ****         delaysL_REV.Write(in[i]);
 417:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 418:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 419:Veno-Echo.cpp ****         //delaysR_REV.Write(Input_R);
 420:Veno-Echo.cpp **** 
 421:Veno-Echo.cpp ****         //process Xfade between reverse and direct input
 422:Veno-Echo.cpp ****         float FwdRevSignalLXFade = FwdRevLXfade.Process(in[i],delayRevSignalL);
 423:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 424:Veno-Echo.cpp **** 
 425:Veno-Echo.cpp ****         //Get combined output from all delay heads
 426:Veno-Echo.cpp ****         float delaySignal_L{delayL.GetOutput()};   
 427:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 428:Veno-Echo.cpp **** 
 429:Veno-Echo.cpp ****         //Update Base Tempo LED
 430:Veno-Echo.cpp ****         Update_BaseTempoLED();
 431:Veno-Echo.cpp **** 
 432:Veno-Echo.cpp ****         //hard limit
 433:Veno-Echo.cpp ****         delaySignal_L = HardLimit(delaySignal_L,AudioLimit);
 434:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 435:Veno-Echo.cpp **** 
 436:Veno-Echo.cpp **** if(!PostFilters)
 437:Veno-Echo.cpp **** {
 438:Veno-Echo.cpp **** //****************************************************************************************
 439:Veno-Echo.cpp ****         //pre filters
 440:Veno-Echo.cpp ****         //process LPF
 441:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 442:Veno-Echo.cpp ****         LPF_L.Process(delaySignal_L * 0.1f);
 443:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 444:Veno-Echo.cpp **** 
 445:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 446:Veno-Echo.cpp ****         float LPF_L_signal{LPF_L.Low() * 10.0f};
 447:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 448:Veno-Echo.cpp ****         
 449:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 450:Veno-Echo.cpp ****         float filteredDelay_L{LPF_LXfade.Process(delaySignal_L, LPF_L_signal)};
 451:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 452:Veno-Echo.cpp **** 
 453:Veno-Echo.cpp ****         //hard limit
 454:Veno-Echo.cpp ****         filteredDelay_L = HardLimit(filteredDelay_L,AudioLimit);
 455:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 456:Veno-Echo.cpp **** 
 457:Veno-Echo.cpp ****         //process HPF
 458:Veno-Echo.cpp ****         HPF_L.Process(filteredDelay_L * 0.1f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 30


 459:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 460:Veno-Echo.cpp **** 
 461:Veno-Echo.cpp ****         float HPF_L_signal{HPF_L.High() * 10.0f};
 462:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 463:Veno-Echo.cpp **** 
 464:Veno-Echo.cpp ****         filteredDelay_L = HPF_LXfade.Process(filteredDelay_L, HPF_L_signal);
 465:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 466:Veno-Echo.cpp **** 
 467:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 468:Veno-Echo.cpp **** 
 469:Veno-Echo.cpp ****         delaySignal_L = FilterMix_L.Process(delaySignal_L,filteredDelay_L);
 470:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 471:Veno-Echo.cpp **** 
 472:Veno-Echo.cpp **** //****************************************************************************************
 473:Veno-Echo.cpp **** }
 474:Veno-Echo.cpp **** 
 475:Veno-Echo.cpp **** else
 476:Veno-Echo.cpp **** {
 477:Veno-Echo.cpp ****     /* code */
 478:Veno-Echo.cpp **** }
 479:Veno-Echo.cpp **** 
 480:Veno-Echo.cpp ****         static float LNegFB{};  //static so value can be used for next sample
 481:Veno-Echo.cpp ****         static float RNegFB{};
 482:Veno-Echo.cpp **** 
 483:Veno-Echo.cpp ****         //ensure we never get inverse feedback
 484:Veno-Echo.cpp ****         if(feedbackL < LNegFB) 
 485:Veno-Echo.cpp ****             LNegFB = 0.0f;
 486:Veno-Echo.cpp ****         
 487:Veno-Echo.cpp ****         if(feedbackR < RNegFB)
 488:Veno-Echo.cpp ****             RNegFB = 0.0f;
 489:Veno-Echo.cpp **** 
 490:Veno-Echo.cpp ****         float feedbackSignalL{ (feedbackL - LNegFB) * delaySignal_L };
 491:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 492:Veno-Echo.cpp **** 
 493:Veno-Echo.cpp ****         //crossfeedback:
 494:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 495:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 496:Veno-Echo.cpp **** 
 497:Veno-Echo.cpp **** 
 498:Veno-Echo.cpp ****         //get envelopes for feedback signals
 499:Veno-Echo.cpp ****         float EnvL{LeftEnv.GetEnv(feedbackSignalL)};  
 500:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 501:Veno-Echo.cpp **** 
 502:Veno-Echo.cpp ****             //if envelope of feedback signal exceeds threshold calculate negative FB factor
 503:Veno-Echo.cpp ****             if (EnvL >= NegFBOffset)
 504:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 505:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 506:Veno-Echo.cpp ****             else LNegFB = 0.0;
 507:Veno-Echo.cpp ****             
 508:Veno-Echo.cpp ****             if (EnvR >= NegFBOffset)
 509:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 510:Veno-Echo.cpp ****             else RNegFB = 0.0;
 511:Veno-Echo.cpp **** 
 512:Veno-Echo.cpp ****         //write to fwd delay lines, including a DC block and hard limit
 513:Veno-Echo.cpp ****         float combinedL{feedbackSignalLR + FwdRevSignalLXFade};
 514:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 515:Veno-Echo.cpp ****  
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 31


 516:Veno-Echo.cpp ****         //hard limit
 517:Veno-Echo.cpp ****         combinedL = HardLimit(combinedL,AudioLimit);
 518:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 519:Veno-Echo.cpp **** 
 520:Veno-Echo.cpp ****         delayL.Write( DcBlock_LFB.Process(combinedL ) );
 521:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 522:Veno-Echo.cpp **** 
 523:Veno-Echo.cpp ****         // floats for wet dry mix
 524:Veno-Echo.cpp ****         float mixL;
 525:Veno-Echo.cpp ****         float mixR;
 526:Veno-Echo.cpp **** 
 527:Veno-Echo.cpp ****         float delaySignal_L_SUM = WidthXfade.Process(delaySignal_L,delaySignal_R);    //mix to mono
 528:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 529:Veno-Echo.cpp **** 
 530:Veno-Echo.cpp ****         //hard limit
 531:Veno-Echo.cpp ****         delaySignal_L_SUM = HardLimit(delaySignal_L_SUM,AudioLimit);
 532:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 533:Veno-Echo.cpp **** 
 534:Veno-Echo.cpp **** if(PostFilters)
 535:Veno-Echo.cpp **** {
 536:Veno-Echo.cpp ****     //****************************************************************************************
 537:Veno-Echo.cpp ****         //post filters
 538:Veno-Echo.cpp ****         //process LPF
 539:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 540:Veno-Echo.cpp ****         LPF_L_post.Process(delaySignal_L_SUM * 0.1f);
 541:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 542:Veno-Echo.cpp **** 
 543:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 544:Veno-Echo.cpp ****         float LPF_L_signal_post{LPF_L_post.Low() * 10.0f};
 545:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 546:Veno-Echo.cpp ****         
 547:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 548:Veno-Echo.cpp ****         float filteredDelay_L_post{LPF_LXfade_post.Process(delaySignal_L_SUM, LPF_L_signal_post)};
 549:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 550:Veno-Echo.cpp **** 
 551:Veno-Echo.cpp ****         //hard limit
 552:Veno-Echo.cpp ****         filteredDelay_L_post = HardLimit(filteredDelay_L_post,AudioLimit);
 553:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 554:Veno-Echo.cpp **** 
 555:Veno-Echo.cpp ****         //process HPF
 556:Veno-Echo.cpp ****         HPF_L_post.Process(filteredDelay_L_post * 0.1f);
 557:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 558:Veno-Echo.cpp **** 
 559:Veno-Echo.cpp ****         float HPF_L_signal_post{HPF_L_post.High() * 10.0f};
 560:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 561:Veno-Echo.cpp **** 
 562:Veno-Echo.cpp ****         filteredDelay_L_post = HPF_LXfade_post.Process(filteredDelay_L_post, HPF_L_signal_post);
 563:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 564:Veno-Echo.cpp **** 
 565:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 566:Veno-Echo.cpp ****         delaySignal_L_SUM = FilterMix_L_post.Process(delaySignal_L_SUM,filteredDelay_L_post);
 567:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 568:Veno-Echo.cpp **** 
 569:Veno-Echo.cpp ****     //****************************************************************************************
 570:Veno-Echo.cpp **** }
 571:Veno-Echo.cpp **** else
 572:Veno-Echo.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 32


 573:Veno-Echo.cpp ****     /* code */
 574:Veno-Echo.cpp **** }
 575:Veno-Echo.cpp ****         if(drywet < 0.5f)
 576:Veno-Echo.cpp ****         {
 577:Veno-Echo.cpp ****             mixL = in[i] + (2.0f * drywet * delaySignal_L_SUM);
 578:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 579:Veno-Echo.cpp ****         }
 580:Veno-Echo.cpp ****         else if(drywet > 0.5f)
 581:Veno-Echo.cpp ****         {
 582:Veno-Echo.cpp ****             mixL = ((1 - drywet)* 2.0f * in[i]) + delaySignal_L_SUM;
 583:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 584:Veno-Echo.cpp ****         }
 585:Veno-Echo.cpp ****         else
 586:Veno-Echo.cpp ****         {
 587:Veno-Echo.cpp ****             mixL = in[i] + delaySignal_L_SUM;
 588:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 589:Veno-Echo.cpp ****         }
 590:Veno-Echo.cpp **** 
 591:Veno-Echo.cpp ****         //send mixes to outputs
 592:Veno-Echo.cpp ****         if(mute)
 593:Veno-Echo.cpp ****         {
 594:Veno-Echo.cpp ****             out[i] = 0.0f;
 595:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 596:Veno-Echo.cpp ****         }
 597:Veno-Echo.cpp ****         else
 598:Veno-Echo.cpp ****         {
 599:Veno-Echo.cpp ****             out[i] = mixL;
 600:Veno-Echo.cpp ****             out[i+1] = mixR;
 601:Veno-Echo.cpp ****         }
 602:Veno-Echo.cpp **** 
 603:Veno-Echo.cpp ****         //write to DAC for debug
 604:Veno-Echo.cpp ****        // dsy_dac_write(DSY_DAC_CHN1, static_cast<int>( EnvL * 4095.0f));
 605:Veno-Echo.cpp **** 
 606:Veno-Echo.cpp ****     }
 607:Veno-Echo.cpp **** 
 608:Veno-Echo.cpp **** }
 609:Veno-Echo.cpp **** 
 610:Veno-Echo.cpp **** void InitDelays(float samplerate)
 611:Veno-Echo.cpp **** {
 439              		.loc 20 611 1 is_stmt 1 view -0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 16
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 612:Veno-Echo.cpp **** 
 613:Veno-Echo.cpp ****     //Init fwd delays
 614:Veno-Echo.cpp ****     delMemsL.Init(2);    //2 heads
 443              		.loc 20 614 5 view .LVU50
 444              	.LBB901:
 445              	.LBI901:
  53:delayline_multitap.h ****     
  54:delayline_multitap.h ****     /** initializes the delay line by clearing the values within, and setting delay head times to 0
  55:delayline_multitap.h ****     */
  56:delayline_multitap.h ****     void Init( size_t num_heads) 
 446              		.loc 18 56 10 view .LVU51
 447              	.LBB902:
 448              	.LBB903:
  57:delayline_multitap.h ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 33


  58:delayline_multitap.h ****         for(size_t i = 0; i < max_size; i++)
 449              		.loc 18 58 29 view .LVU52
 450 0000 5D4B     		ldr	r3, .L36
 451 0002 5E49     		ldr	r1, .L36+4
 452              	.LBE903:
 453              	.LBE902:
 454              	.LBE901:
 611:Veno-Echo.cpp **** 
 455              		.loc 20 611 1 is_stmt 0 view .LVU53
 456 0004 F0B5     		push	{r4, r5, r6, r7, lr}
 457              		.cfi_def_cfa_offset 20
 458              		.cfi_offset 4, -20
 459              		.cfi_offset 5, -16
 460              		.cfi_offset 6, -12
 461              		.cfi_offset 7, -8
 462              		.cfi_offset 14, -4
 463 0006 A3F18405 		sub	r5, r3, #132
 464 000a 85B0     		sub	sp, sp, #20
 465              		.cfi_def_cfa_offset 40
 466 000c 2846     		mov	r0, r5
 467              	.LVL15:
 468              	.L17:
 469              	.LBB908:
 470              	.LBB907:
 471              	.LBB904:
  59:delayline_multitap.h ****         {
  60:delayline_multitap.h ****             line_[i] = T(0);
 472              		.loc 18 60 13 view .LVU54
 473 000e 0022     		movs	r2, #0
 474 0010 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 475              		.loc 18 58 9 is_stmt 1 view .LVU55
  58:delayline_multitap.h ****         {
 476              		.loc 18 58 29 view .LVU56
 477 0014 8B42     		cmp	r3, r1
 478 0016 FAD1     		bne	.L17
 479              	.LBE904:
  61:delayline_multitap.h ****         }
  62:delayline_multitap.h **** 
  63:delayline_multitap.h ****         write_ptr_ = 0;
 480              		.loc 18 63 9 is_stmt 0 view .LVU57
 481 0018 0022     		movs	r2, #0
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 482              		.loc 18 64 9 view .LVU58
 483 001a 594C     		ldr	r4, .L36+8
 484 001c 0226     		movs	r6, #2
 485              	.LBB905:
  65:delayline_multitap.h **** 
  66:delayline_multitap.h ****         for (size_t i{ 0 }; i < num_heads_; ++i)
 486              		.loc 18 66 21 view .LVU59
 487 001e 1346     		mov	r3, r2
 488              	.LBE905:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 489              		.loc 18 63 9 view .LVU60
 490 0020 2A60     		str	r2, [r5]
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 491              		.loc 18 64 9 view .LVU61
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 34


 492 0022 2E51     		str	r6, [r5, r4]
 493              	.LVL16:
 494              	.LBB906:
 495              		.loc 18 66 31 is_stmt 1 view .LVU62
 496              	.L18:
  67:delayline_multitap.h ****         {
  68:delayline_multitap.h ****             delay_[i] = 0;  //set all delay heads to 0 (no delay)
 497              		.loc 18 68 13 is_stmt 0 view .LVU63
 498 0024 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 499              		.loc 18 66 9 view .LVU64
 500 0026 0133     		adds	r3, r3, #1
 501              	.LVL17:
  69:delayline_multitap.h ****             frac_[i] = 0;
 502              		.loc 18 69 13 view .LVU65
 503 0028 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 504              		.loc 18 68 13 view .LVU66
 505 002a 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 506              		.loc 18 66 31 view .LVU67
 507 002e 0A68     		ldr	r2, [r1]
 508              		.loc 18 69 13 view .LVU68
 509 0030 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 510              		.loc 18 66 9 is_stmt 1 view .LVU69
 511              	.LVL18:
  66:delayline_multitap.h ****         {
 512              		.loc 18 66 31 view .LVU70
 513 0032 9A42     		cmp	r2, r3
 514 0034 F6D8     		bhi	.L18
 515 0036 534B     		ldr	r3, .L36+12
 516              	.LVL19:
  66:delayline_multitap.h ****         {
 517              		.loc 18 66 31 is_stmt 0 view .LVU71
 518 0038 5349     		ldr	r1, .L36+16
 519 003a A3F18406 		sub	r6, r3, #132
 520 003e 3046     		mov	r0, r6
 521              	.LVL20:
 522              	.L19:
  66:delayline_multitap.h ****         {
 523              		.loc 18 66 31 view .LVU72
 524              	.LBE906:
 525              	.LBE907:
 526              	.LBE908:
 527              	.LBB909:
 528              	.LBB910:
 529              	.LBB911:
  60:delayline_multitap.h ****         }
 530              		.loc 18 60 13 view .LVU73
 531 0040 0022     		movs	r2, #0
 532 0042 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 533              		.loc 18 58 9 is_stmt 1 view .LVU74
  58:delayline_multitap.h ****         {
 534              		.loc 18 58 29 view .LVU75
 535 0046 8B42     		cmp	r3, r1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 35


 536 0048 FAD1     		bne	.L19
 537              	.LBE911:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 538              		.loc 18 63 9 is_stmt 0 view .LVU76
 539 004a 0022     		movs	r2, #0
  64:delayline_multitap.h **** 
 540              		.loc 18 64 9 view .LVU77
 541 004c 4C4C     		ldr	r4, .L36+8
 542 004e 0227     		movs	r7, #2
 543              	.LBB912:
  66:delayline_multitap.h ****         {
 544              		.loc 18 66 21 view .LVU78
 545 0050 1346     		mov	r3, r2
 546              	.LBE912:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 547              		.loc 18 63 9 view .LVU79
 548 0052 3260     		str	r2, [r6]
  64:delayline_multitap.h **** 
 549              		.loc 18 64 9 view .LVU80
 550 0054 3751     		str	r7, [r6, r4]
 551              	.LVL21:
 552              	.LBB913:
  66:delayline_multitap.h ****         {
 553              		.loc 18 66 31 is_stmt 1 view .LVU81
 554              	.L20:
  68:delayline_multitap.h ****             frac_[i] = 0;
 555              		.loc 18 68 13 is_stmt 0 view .LVU82
 556 0056 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 557              		.loc 18 66 9 view .LVU83
 558 0058 0133     		adds	r3, r3, #1
 559              	.LVL22:
 560              		.loc 18 69 13 view .LVU84
 561 005a 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 562              		.loc 18 68 13 view .LVU85
 563 005c 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 564              		.loc 18 66 31 view .LVU86
 565 0060 0A68     		ldr	r2, [r1]
 566              		.loc 18 69 13 view .LVU87
 567 0062 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 568              		.loc 18 66 9 is_stmt 1 view .LVU88
 569              	.LVL23:
  66:delayline_multitap.h ****         {
 570              		.loc 18 66 31 view .LVU89
 571 0064 9A42     		cmp	r2, r3
 572 0066 F6D8     		bhi	.L20
 573              	.LVL24:
  66:delayline_multitap.h ****         {
 574              		.loc 18 66 31 is_stmt 0 view .LVU90
 575              	.LBE913:
 576              	.LBE910:
 577              	.LBE909:
 615:Veno-Echo.cpp ****     delMemsR.Init(2);    //2 heads
 616:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 36


 617:Veno-Echo.cpp ****     //point del classes at SDRAM buffers
 618:Veno-Echo.cpp ****     delayL.del = &delMemsL; 
 578              		.loc 20 618 5 is_stmt 1 view .LVU91
 619:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 579              		.loc 20 619 16 is_stmt 0 view .LVU92
 580 0068 484C     		ldr	r4, .L36+20
 620:Veno-Echo.cpp **** 
 621:Veno-Echo.cpp ****     delayL.init(hw.GetPin(8),samplerate);
 581              		.loc 20 621 16 view .LVU93
 582 006a 0820     		movs	r0, #8
 618:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 583              		.loc 20 618 16 view .LVU94
 584 006c 484F     		ldr	r7, .L36+24
 585 006e 8DED010A 		vstr.32	s0, [sp, #4]	@ int
 586 0072 3D60     		str	r5, [r7]
 619:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 587              		.loc 20 619 5 is_stmt 1 view .LVU95
 588              	.LBB914:
 589              	.LBB915:
 590              	.LBB916:
  40:delayline_reverse.h ****     /** initializes the delay line by clearing the values within, and setting delay to min time.
  41:delayline_reverse.h ****     */
  42:delayline_reverse.h ****     void Init() 
  43:delayline_reverse.h ****     { 
  44:delayline_reverse.h ****         Reset(); 
  45:delayline_reverse.h ****     }
  46:delayline_reverse.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
  47:delayline_reverse.h ****     */
  48:delayline_reverse.h ****     void Reset()
  49:delayline_reverse.h ****     {
  50:delayline_reverse.h **** 
  51:delayline_reverse.h ****         delay1_  = 25000; //min Reverse delay time
 591              		.loc 19 51 9 is_stmt 0 view .LVU96
 592 0074 46F2A815 		movw	r5, #25000
 593              	.LBE916:
 594              	.LBE915:
 595              	.LBE914:
 619:Veno-Echo.cpp **** 
 596              		.loc 20 619 16 view .LVU97
 597 0078 2660     		str	r6, [r4]
 598              		.loc 20 621 5 is_stmt 1 view .LVU98
 599              		.loc 20 621 16 is_stmt 0 view .LVU99
 600 007a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 601              	.LVL25:
 602              		.loc 20 621 16 view .LVU100
 603 007e 0346     		mov	r3, r0	@ movhi
 604 0080 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 605 0084 3846     		mov	r0, r7
 606 0086 ADF80830 		strh	r3, [sp, #8]	@ movhi
 607 008a 0299     		ldr	r1, [sp, #8]
 608 008c FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 609              	.LVL26:
 622:Veno-Echo.cpp ****     delayR.init(hw.GetPin(9),samplerate);
 610              		.loc 20 622 5 is_stmt 1 view .LVU101
 611              		.loc 20 622 16 is_stmt 0 view .LVU102
 612 0090 0920     		movs	r0, #9
 613 0092 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 37


 614              	.LVL27:
 615 0096 0346     		mov	r3, r0	@ movhi
 616 0098 2046     		mov	r0, r4
 617              	.LBB928:
 618              	.LBB923:
 619              	.LBB918:
 620              		.loc 19 51 9 view .LVU103
 621 009a 3E4C     		ldr	r4, .L36+28
 622              	.LBE918:
 623              	.LBE923:
 624              	.LBE928:
 625              		.loc 20 622 16 view .LVU104
 626 009c ADF80C30 		strh	r3, [sp, #12]	@ movhi
 627 00a0 0399     		ldr	r1, [sp, #12]
 628 00a2 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 629 00a6 FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 630              	.LVL28:
 623:Veno-Echo.cpp **** 
 624:Veno-Echo.cpp ****     //delayL.SetDelayTime(500.0f);
 625:Veno-Echo.cpp ****     //delayR.SetDelayTime(500.0f);
 626:Veno-Echo.cpp **** 
 627:Veno-Echo.cpp ****     //Init rev delays
 628:Veno-Echo.cpp ****     delMemsL_REV.Init();
 631              		.loc 20 628 5 is_stmt 1 view .LVU105
 632              	.LBB929:
 633              	.LBI914:
  42:delayline_reverse.h ****     { 
 634              		.loc 19 42 10 view .LVU106
 635              	.LBB924:
 636              	.LBI915:
  48:delayline_reverse.h ****     {
 637              		.loc 19 48 10 view .LVU107
 638              	.LBB919:
  52:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 639              		.loc 19 52 9 is_stmt 0 view .LVU108
 640 00aa 3B4A     		ldr	r2, .L36+32
 641 00ac 45F6C050 		movw	r0, #24000
 642 00b0 04F11803 		add	r3, r4, #24
 643 00b4 3949     		ldr	r1, .L36+36
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 644              		.loc 19 51 9 view .LVU109
 645 00b6 2561     		str	r5, [r4, #16]
 646              		.loc 19 52 9 view .LVU110
 647 00b8 A050     		str	r0, [r4, r2]
 648              	.LVL29:
 649              	.LBB917:
  53:delayline_reverse.h ****         
  54:delayline_reverse.h ****         for(size_t i = 0; i < max_size; i++)
 650              		.loc 19 54 29 is_stmt 1 view .LVU111
 651              	.L21:
  55:delayline_reverse.h ****         {
  56:delayline_reverse.h ****             line_[i] = T(0);
 652              		.loc 19 56 13 is_stmt 0 view .LVU112
 653 00ba 0022     		movs	r2, #0
 654 00bc 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 655              		.loc 19 54 9 is_stmt 1 view .LVU113
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 38


  54:delayline_reverse.h ****         {
 656              		.loc 19 54 29 view .LVU114
 657 00c0 8B42     		cmp	r3, r1
 658 00c2 FAD1     		bne	.L21
 659              	.LBE917:
 660              	.LBE919:
 661              	.LBE924:
 662              	.LBE929:
 663              	.LBB930:
 664              	.LBB931:
 665              	.LBB932:
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 666              		.loc 19 51 9 is_stmt 0 view .LVU115
 667 00c4 3648     		ldr	r0, .L36+40
 668 00c6 46F2A811 		movw	r1, #25000
  52:delayline_reverse.h ****         
 669              		.loc 19 52 9 view .LVU116
 670 00ca 334D     		ldr	r5, .L36+32
 671 00cc 45F6C056 		movw	r6, #24000
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 672              		.loc 19 51 9 view .LVU117
 673 00d0 0161     		str	r1, [r0, #16]
 674              	.LBE932:
 675              	.LBE931:
 676              	.LBE930:
 677              	.LBB955:
 678              	.LBB925:
 679              	.LBB920:
  57:delayline_reverse.h ****         }
  58:delayline_reverse.h ****         write_ptr_ = 0;
 680              		.loc 19 58 9 view .LVU118
 681 00d2 0021     		movs	r1, #0
 682              	.LBE920:
 683              	.LBE925:
 684              	.LBE955:
 685              	.LBB956:
 686              	.LBB945:
 687              	.LBB935:
  52:delayline_reverse.h ****         
 688              		.loc 19 52 9 view .LVU119
 689 00d4 4651     		str	r6, [r0, r5]
 690              	.LBE935:
 691              	.LBE945:
 692              	.LBE956:
 693              	.LBB957:
 694              	.LBB926:
 695              	.LBB921:
  59:delayline_reverse.h ****         read_ptr1_ = 0;
  60:delayline_reverse.h ****         read_ptr2_ = 0;
  61:delayline_reverse.h ****         headDiff_ = 0;
  62:delayline_reverse.h ****         playinghead_ = false;
 696              		.loc 19 62 9 view .LVU120
 697 00d6 0435     		adds	r5, r5, #4
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
  64:delayline_reverse.h ****         fading_ = false;
 698              		.loc 19 64 9 view .LVU121
 699 00d8 324E     		ldr	r6, .L36+44
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 39


 700 00da 00F11803 		add	r3, r0, #24
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 701              		.loc 19 62 9 view .LVU122
 702 00de 6155     		strb	r1, [r4, r5]
  60:delayline_reverse.h ****         headDiff_ = 0;
 703              		.loc 19 60 9 view .LVU123
 704 00e0 E160     		str	r1, [r4, #12]
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
 705              		.loc 19 63 9 view .LVU124
 706 00e2 314D     		ldr	r5, .L36+48
  61:delayline_reverse.h ****         playinghead_ = false;
 707              		.loc 19 61 9 view .LVU125
 708 00e4 6161     		str	r1, [r4, #20]
 709              		.loc 19 64 9 view .LVU126
 710 00e6 A155     		strb	r1, [r4, r6]
 711              	.LVL30:
 712              		.loc 19 64 9 view .LVU127
 713              	.LBE921:
 714              	.LBE926:
 715              	.LBE957:
 629:Veno-Echo.cpp ****     delMemsR_REV.Init();
 716              		.loc 20 629 5 is_stmt 1 view .LVU128
 717              	.LBB958:
 718              	.LBI930:
  42:delayline_reverse.h ****     { 
 719              		.loc 19 42 10 view .LVU129
 720              	.LBB946:
 721              	.LBI931:
  48:delayline_reverse.h ****     {
 722              		.loc 19 48 10 view .LVU130
 723              	.LBB936:
 724              	.LBB933:
  54:delayline_reverse.h ****         {
 725              		.loc 19 54 29 view .LVU131
 726              	.LBE933:
 727              	.LBE936:
 728              	.LBE946:
 729              	.LBE958:
 730              	.LBB959:
 731              	.LBB927:
 732              	.LBB922:
  63:delayline_reverse.h ****         fading_ = false;
 733              		.loc 19 63 9 is_stmt 0 view .LVU132
 734 00e8 2A60     		str	r2, [r5]	@ float
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 735              		.loc 19 59 9 view .LVU133
 736 00ea C4E90111 		strd	r1, r1, [r4, #4]
 737 00ee 2F49     		ldr	r1, .L36+52
 738              	.LVL31:
 739              	.L22:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 740              		.loc 19 59 9 view .LVU134
 741              	.LBE922:
 742              	.LBE927:
 743              	.LBE959:
 744              	.LBB960:
 745              	.LBB947:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 40


 746              	.LBB937:
 747              	.LBB934:
  56:delayline_reverse.h ****         }
 748              		.loc 19 56 13 view .LVU135
 749 00f0 0022     		movs	r2, #0
 750 00f2 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 751              		.loc 19 54 9 is_stmt 1 view .LVU136
  54:delayline_reverse.h ****         {
 752              		.loc 19 54 29 view .LVU137
 753 00f6 8B42     		cmp	r3, r1
 754 00f8 FAD1     		bne	.L22
 755              	.LBE934:
 756              	.LBE937:
 757              	.LBE947:
 758              	.LBE960:
 630:Veno-Echo.cpp **** 
 631:Veno-Echo.cpp ****     //point struct at SDRAM buffers
 632:Veno-Echo.cpp ****     delaysL_REV.del = &delMemsL_REV; 
 759              		.loc 20 632 21 is_stmt 0 view .LVU138
 760 00fa 2D49     		ldr	r1, .L36+56
 761              	.LBB961:
 762              	.LBB948:
 763              	.LBB938:
  58:delayline_reverse.h ****         read_ptr1_ = 0;
 764              		.loc 19 58 9 view .LVU139
 765 00fc 0023     		movs	r3, #0
 766              	.LBE938:
 767              	.LBE948:
 768              	.LBE961:
 769              	.LBB962:
 770              	.LBB963:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 771              		.loc 20 70 15 view .LVU140
 772 00fe DFED2D6A 		vldr.32	s13, .L36+60
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 773              		.loc 20 70 28 view .LVU141
 774 0102 D1ED017A 		vldr.32	s15, [r1, #4]
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 775              		.loc 20 70 53 view .LVU142
 776 0106 9FED2C6A 		vldr.32	s12, .L36+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 777              		.loc 20 70 15 view .LVU143
 778 010a 36EEE77A 		vsub.f32	s14, s13, s15
 779              	.LBE963:
 780              	.LBE962:
 781              	.LBB977:
 782              	.LBB949:
 783              	.LBB939:
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 784              		.loc 19 62 9 view .LVU144
 785 010e 2B4D     		ldr	r5, .L36+68
 786              	.LBE939:
 787              	.LBE949:
 788              	.LBE977:
 789              	.LBB978:
 790              	.LBB972:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 41


  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 791              		.loc 20 70 53 view .LVU145
 792 0110 67EE867A 		vmul.f32	s15, s15, s12
 793              	.LBE972:
 794              	.LBE978:
 795              	.LBB979:
 796              	.LBB950:
 797              	.LBB940:
 798              		.loc 19 64 9 view .LVU146
 799 0114 234E     		ldr	r6, .L36+44
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 800              		.loc 19 62 9 view .LVU147
 801 0116 4355     		strb	r3, [r0, r5]
 802              	.LBE940:
 803              	.LBE950:
 804              	.LBE979:
 805              	.LBB980:
 806              	.LBB973:
 807              	.LBB964:
 808              	.LBB965:
 809              		.file 21 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Copyright (C) 2016-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** /** @file include/bits/std_abs.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 42


  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include_next <stdlib.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** # include_next <math.h>
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef abs
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** extern "C++"
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   using ::abs;
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long long
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(double __x)
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabs(__x); }
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(float __x)
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 810              		.loc 21 76 31 view .LVU148
 811 0118 B0EEC77A 		vabs.f32	s14, s14
 812              	.LBE965:
 813              	.LBE964:
 814              	.LBE973:
 815              	.LBE980:
 816              	.LBB981:
 817              	.LBB951:
 818              	.LBB941:
  63:delayline_reverse.h ****         fading_ = false;
 819              		.loc 19 63 9 view .LVU149
 820 011c 284D     		ldr	r5, .L36+72
  60:delayline_reverse.h ****         headDiff_ = 0;
 821              		.loc 19 60 9 view .LVU150
 822 011e C360     		str	r3, [r0, #12]
  61:delayline_reverse.h ****         playinghead_ = false;
 823              		.loc 19 61 9 view .LVU151
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 43


 824 0120 4361     		str	r3, [r0, #20]
 825              	.LBE941:
 826              	.LBE951:
 827              	.LBE981:
 828              	.LBB982:
 829              	.LBB974:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 830              		.loc 20 70 9 view .LVU152
 831 0122 B4EEE77A 		vcmpe.f32	s14, s15
 832              	.LBE974:
 833              	.LBE982:
 834              	.LBB983:
 835              	.LBB952:
 836              	.LBB942:
 837              		.loc 19 64 9 view .LVU153
 838 0126 8355     		strb	r3, [r0, r6]
 839              	.LVL32:
 840              		.loc 19 64 9 view .LVU154
 841              	.LBE942:
 842              	.LBE952:
 843              	.LBE983:
 844              		.loc 20 632 5 is_stmt 1 view .LVU155
 633:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 845              		.loc 20 633 5 view .LVU156
 632:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 846              		.loc 20 632 21 is_stmt 0 view .LVU157
 847 0128 0C60     		str	r4, [r1]
 848              	.LBB984:
 849              	.LBB953:
 850              	.LBB943:
  63:delayline_reverse.h ****         fading_ = false;
 851              		.loc 19 63 9 view .LVU158
 852 012a 2A60     		str	r2, [r5]	@ float
 853              	.LBE943:
 854              	.LBE953:
 855              	.LBE984:
 856              	.LBB985:
 857              	.LBB975:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 858              		.loc 20 70 9 view .LVU159
 859 012c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 860              	.LBE975:
 861              	.LBE985:
 862              	.LBB986:
 863              	.LBB954:
 864              	.LBB944:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 865              		.loc 19 59 9 view .LVU160
 866 0130 C0E90133 		strd	r3, r3, [r0, #4]
 867              	.LBE944:
 868              	.LBE954:
 869              	.LBE986:
 870              		.loc 20 633 21 view .LVU161
 871 0134 234B     		ldr	r3, .L36+76
 872 0136 1860     		str	r0, [r3]
 634:Veno-Echo.cpp **** 
 635:Veno-Echo.cpp ****     //Reverse Delay Length. Setup as static value for now. Will make this a shift function
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 44


 636:Veno-Echo.cpp ****     delaysL_REV.SetDelayTime(maxRevDelay / 3.f);
 873              		.loc 20 636 5 is_stmt 1 view .LVU162
 874              	.LVL33:
 875              	.LBB987:
 876              	.LBI962:
  68:Veno-Echo.cpp ****     {
 877              		.loc 20 68 10 view .LVU163
 878              	.LBB976:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 879              		.loc 20 70 9 view .LVU164
 880              	.LBB967:
 881              	.LBI964:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 882              		.loc 21 75 3 view .LVU165
 883              	.LBB966:
 884              		.loc 21 76 5 view .LVU166
 885              		.loc 21 76 5 is_stmt 0 view .LVU167
 886              	.LBE966:
 887              	.LBE967:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 888              		.loc 20 70 9 view .LVU168
 889 0138 04DD     		ble	.L23
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 890              		.loc 20 73 13 is_stmt 1 view .LVU169
 891              	.LBB968:
 892              	.LBB969:
  65:delayline_reverse.h ****     }
  66:delayline_reverse.h **** 
  67:delayline_reverse.h ****     /** sets the delay time in samples
  68:delayline_reverse.h ****     */
  69:delayline_reverse.h ****     inline void SetDelay1(size_t delay)
  70:delayline_reverse.h ****     {
  71:delayline_reverse.h ****         frac1_  = 0.0f;
  72:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 893              		.loc 19 72 9 is_stmt 0 view .LVU170
 894 013a 234D     		ldr	r5, .L36+80
 895              	.LBE969:
 896              	.LBE968:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 897              		.loc 20 73 27 view .LVU171
 898 013c C1ED016A 		vstr.32	s13, [r1, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 899              		.loc 20 74 13 is_stmt 1 view .LVU172
 900              	.LVL34:
 901              	.LBB971:
 902              	.LBI968:
  69:delayline_reverse.h ****     {
 903              		.loc 19 69 17 view .LVU173
 904              	.LBB970:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 905              		.loc 19 71 9 is_stmt 0 view .LVU174
 906 0140 2260     		str	r2, [r4]	@ float
 907              		.loc 19 72 9 view .LVU175
 908 0142 2561     		str	r5, [r4, #16]
 909              	.LVL35:
 910              	.L23:
 911              		.loc 19 72 9 view .LVU176
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 45


 912              	.LBE970:
 913              	.LBE971:
 914              	.LBE976:
 915              	.LBE987:
 637:Veno-Echo.cpp ****     delaysR_REV.SetDelayTime(maxRevDelay / 3.f);   //default maxRevDelay / 3.0f
 916              		.loc 20 637 5 is_stmt 1 view .LVU177
 917              	.LBB988:
 918              	.LBI988:
  68:Veno-Echo.cpp ****     {
 919              		.loc 20 68 10 view .LVU178
 920              	.LBB989:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 921              		.loc 20 70 9 view .LVU179
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 922              		.loc 20 70 28 is_stmt 0 view .LVU180
 923 0144 D3ED017A 		vldr.32	s15, [r3, #4]
 924              	.LVL36:
 925              	.LBB990:
 926              	.LBI990:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 927              		.loc 21 75 3 is_stmt 1 view .LVU181
 928              	.LBB991:
 929              		.loc 21 76 5 view .LVU182
 930              		.loc 21 76 5 is_stmt 0 view .LVU183
 931              	.LBE991:
 932              	.LBE990:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 933              		.loc 20 70 15 view .LVU184
 934 0148 DFED1A6A 		vldr.32	s13, .L36+60
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 935              		.loc 20 70 53 view .LVU185
 936 014c 9FED1A6A 		vldr.32	s12, .L36+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 937              		.loc 20 70 15 view .LVU186
 938 0150 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 939              		.loc 20 70 53 view .LVU187
 940 0154 67EE867A 		vmul.f32	s15, s15, s12
 941              	.LBB993:
 942              	.LBB992:
 943              		.loc 21 76 31 view .LVU188
 944 0158 B0EEC77A 		vabs.f32	s14, s14
 945              	.LBE992:
 946              	.LBE993:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 947              		.loc 20 70 9 view .LVU189
 948 015c B4EEE77A 		vcmpe.f32	s14, s15
 949 0160 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 950 0164 05DD     		ble	.L16
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 951              		.loc 20 73 13 is_stmt 1 view .LVU190
 952              	.LBB994:
 953              	.LBB995:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 954              		.loc 19 71 9 is_stmt 0 view .LVU191
 955 0166 0021     		movs	r1, #0
 956              		.loc 19 72 9 view .LVU192
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 46


 957 0168 174A     		ldr	r2, .L36+80
 958              	.LBE995:
 959              	.LBE994:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 960              		.loc 20 73 27 view .LVU193
 961 016a C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 962              		.loc 20 74 13 is_stmt 1 view .LVU194
 963              	.LVL37:
 964              	.LBB997:
 965              	.LBI994:
  69:delayline_reverse.h ****     {
 966              		.loc 19 69 17 view .LVU195
 967              	.LBB996:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 968              		.loc 19 71 9 is_stmt 0 view .LVU196
 969 016e 0160     		str	r1, [r0]	@ float
 970              		.loc 19 72 9 view .LVU197
 971 0170 0261     		str	r2, [r0, #16]
 972              	.LVL38:
 973              	.L16:
 974              		.loc 19 72 9 view .LVU198
 975              	.LBE996:
 976              	.LBE997:
 977              	.LBE989:
 978              	.LBE988:
 638:Veno-Echo.cpp **** 
 639:Veno-Echo.cpp **** }
 979              		.loc 20 639 1 view .LVU199
 980 0172 05B0     		add	sp, sp, #20
 981              		.cfi_def_cfa_offset 20
 982              		@ sp needed
 983 0174 F0BD     		pop	{r4, r5, r6, r7, pc}
 984              	.L37:
 985 0176 00BF     		.align	2
 986              	.L36:
 987 0178 84000000 		.word	delMemsL+132
 988 017c 84786900 		.word	delMemsL+6912132
 989 0180 84786900 		.word	6912132
 990 0184 84000000 		.word	delMemsR+132
 991 0188 84786900 		.word	delMemsR+6912132
 992 018c 00000000 		.word	.LANCHOR1
 993 0190 00000000 		.word	.LANCHOR0
 994 0194 00000000 		.word	delMemsL_REV
 995 0198 189F2400 		.word	2400024
 996 019c 189F2400 		.word	delMemsL_REV+2400024
 997 01a0 00000000 		.word	delMemsR_REV
 998 01a4 249F2400 		.word	2400036
 999 01a8 209F2400 		.word	delMemsL_REV+2400032
 1000 01ac 189F2400 		.word	delMemsR_REV+2400024
 1001 01b0 00000000 		.word	.LANCHOR2
 1002 01b4 00409C47 		.word	1201422336
 1003 01b8 0AD7A33B 		.word	1000593162
 1004 01bc 1C9F2400 		.word	2400028
 1005 01c0 209F2400 		.word	delMemsR_REV+2400032
 1006 01c4 00000000 		.word	.LANCHOR3
 1007 01c8 80380100 		.word	80000
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 47


 1008              		.cfi_endproc
 1009              	.LFE4310:
 1011              		.section	.text._Z20Update_DelayTimeL_CVv,"ax",%progbits
 1012              		.align	1
 1013              		.p2align 2,,3
 1014              		.global	_Z20Update_DelayTimeL_CVv
 1015              		.syntax unified
 1016              		.thumb
 1017              		.thumb_func
 1018              		.fpu fpv5-d16
 1020              	_Z20Update_DelayTimeL_CVv:
 1021              	.LFB4312:
 640:Veno-Echo.cpp **** 
 641:Veno-Echo.cpp **** int main(void)
 642:Veno-Echo.cpp **** {
 643:Veno-Echo.cpp ****     // initialize hardware.
 644:Veno-Echo.cpp ****     hw.Configure();
 645:Veno-Echo.cpp ****     hw.Init();
 646:Veno-Echo.cpp ****     
 647:Veno-Echo.cpp ****     //Buttons or switches with status LEDs
 648:Veno-Echo.cpp **** 
 649:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / static_cast<flo
 650:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 651:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 652:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 653:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 654:Veno-Echo.cpp **** 
 655:Veno-Echo.cpp ****     //Gates
 656:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 657:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 658:Veno-Echo.cpp **** 
 659:Veno-Echo.cpp ****     //TapButton.Init(hw.GetPin(4), hw.AudioSampleRate() / 48.f);
 660:Veno-Echo.cpp ****     Sync.Init(hw.GetPin(23), hw.AudioSampleRate() / static_cast<float> (updateDiv));
 661:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 662:Veno-Echo.cpp ****     
 663:Veno-Echo.cpp ****     FwdRevLEnv.Init(hw.AudioSampleRate());
 664:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 665:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 666:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 667:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 668:Veno-Echo.cpp **** 
 669:Veno-Echo.cpp ****     FwdRevREnv.Init(hw.AudioSampleRate());
 670:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 671:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 672:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 673:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 674:Veno-Echo.cpp **** 
 675:Veno-Echo.cpp ****     LPF_Env.Init(hw.AudioSampleRate());
 676:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 677:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 678:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 679:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 680:Veno-Echo.cpp **** 
 681:Veno-Echo.cpp ****     HPF_Env.Init(hw.AudioSampleRate());
 682:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 683:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 684:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 48


 685:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 686:Veno-Echo.cpp **** 
 687:Veno-Echo.cpp ****     // set params for CrossFade objects
 688:Veno-Echo.cpp ****     FwdRevLXfade.Init();
 689:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 690:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 691:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 692:Veno-Echo.cpp **** 
 693:Veno-Echo.cpp ****     WidthXfade.Init();
 694:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 695:Veno-Echo.cpp **** 
 696:Veno-Echo.cpp ****     InitDelays(hw.AudioSampleRate());
 697:Veno-Echo.cpp **** 
 698:Veno-Echo.cpp ****     //setup L and R Low Pass filters
 699:Veno-Echo.cpp ****     LPF_L.Init(hw.AudioSampleRate());
 700:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 701:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 702:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 703:Veno-Echo.cpp **** 
 704:Veno-Echo.cpp ****     LPF_R.Init(hw.AudioSampleRate());
 705:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 706:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 707:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 708:Veno-Echo.cpp **** 
 709:Veno-Echo.cpp ****     //setup L and R High Pass filters
 710:Veno-Echo.cpp ****     HPF_L.Init(hw.AudioSampleRate());
 711:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 712:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 713:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 714:Veno-Echo.cpp **** 
 715:Veno-Echo.cpp ****     HPF_R.Init(hw.AudioSampleRate());
 716:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 717:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 718:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 719:Veno-Echo.cpp **** 
 720:Veno-Echo.cpp ****     //post filters
 721:Veno-Echo.cpp ****     LPF_L_post.Init(hw.AudioSampleRate());
 722:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 723:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 724:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 725:Veno-Echo.cpp **** 
 726:Veno-Echo.cpp ****     LPF_R_post.Init(hw.AudioSampleRate());
 727:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 728:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 729:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 730:Veno-Echo.cpp **** 
 731:Veno-Echo.cpp ****     //setup L and R High Pass filters
 732:Veno-Echo.cpp ****     HPF_L_post.Init(hw.AudioSampleRate());
 733:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 734:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 735:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 736:Veno-Echo.cpp **** 
 737:Veno-Echo.cpp ****     HPF_R_post.Init(hw.AudioSampleRate());
 738:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 739:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 740:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 741:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 49


 742:Veno-Echo.cpp ****     DcBlock_LFB.Init(hw.AudioSampleRate());
 743:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 744:Veno-Echo.cpp **** 
 745:Veno-Echo.cpp ****     //LFO for modulation of fwd delay time
 746:Veno-Echo.cpp ****     lfo.Init(hw.AudioSampleRate());
 747:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 748:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 749:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 750:Veno-Echo.cpp **** 
 751:Veno-Echo.cpp ****     BaseTempo.init(mintap,maxtap,1.25f);  //max 6 second tap
 752:Veno-Echo.cpp **** 
 753:Veno-Echo.cpp ****     //setup tempo indicators
 754:Veno-Echo.cpp ****     //tempoLED_BASE.init(hw.GetPin(14),hw.AudioSampleRate());
 755:Veno-Echo.cpp ****     tempoLED_BASE.init(hw.GetPin(24),hw.AudioSampleRate());
 756:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 757:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 758:Veno-Echo.cpp **** 
 759:Veno-Echo.cpp ****     //load settings from flash
 760:Veno-Echo.cpp **** 
 761:Veno-Echo.cpp ****     Settings SavedSettings{LoadSettings()};
 762:Veno-Echo.cpp ****     //ApplySettings(defaultAltControls);
 763:Veno-Echo.cpp ****     //AltControls = defaultAltControls;
 764:Veno-Echo.cpp **** 
 765:Veno-Echo.cpp ****     ApplySettings(SavedSettings);
 766:Veno-Echo.cpp ****     AltControls = SavedSettings;
 767:Veno-Echo.cpp **** 
 768:Veno-Echo.cpp ****     //initialize DAC
 769:Veno-Echo.cpp **** 
 770:Veno-Echo.cpp ****    //ADC
 771:Veno-Echo.cpp ****     AdcChannelConfig adcConfig[8];
 772:Veno-Echo.cpp **** 
 773:Veno-Echo.cpp ****     adcConfig[0].InitSingle(hw.GetPin(15));
 774:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 775:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 776:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 777:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 778:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 779:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 780:Veno-Echo.cpp ****     adcConfig[6].InitSingle(hw.GetPin(22));
 781:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 782:Veno-Echo.cpp **** 
 783:Veno-Echo.cpp **** 
 784:Veno-Echo.cpp ****     hw.adc.Init(adcConfig, 8,daisy::AdcHandle::OVS_128);
 785:Veno-Echo.cpp ****     hw.adc.Start();
 786:Veno-Echo.cpp **** 
 787:Veno-Echo.cpp **** 
 788:Veno-Echo.cpp ****     hw.SetAudioBlockSize(1);     //set blocksize.
 789:Veno-Echo.cpp ****     // start audio callback
 790:Veno-Echo.cpp ****     hw.StartAudio(AudioCallback);
 791:Veno-Echo.cpp **** 
 792:Veno-Echo.cpp ****     
 793:Veno-Echo.cpp **** 
 794:Veno-Echo.cpp ****      for(;;)
 795:Veno-Echo.cpp ****      {  
 796:Veno-Echo.cpp **** 
 797:Veno-Echo.cpp ****         static uint32_t saveTimer{};
 798:Veno-Echo.cpp ****         //static bool SaveWaitFlag{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 50


 799:Veno-Echo.cpp ****        
 800:Veno-Echo.cpp ****         if(save_flag)   //if save_flag is set
 801:Veno-Echo.cpp ****         {
 802:Veno-Echo.cpp ****             save_flag = false;
 803:Veno-Echo.cpp ****             saveState = WAITING;    //set flag - start waiting
 804:Veno-Echo.cpp ****             saveTimer = System::GetNow();   //reset timer
 805:Veno-Echo.cpp ****         }
 806:Veno-Echo.cpp ****         
 807:Veno-Echo.cpp ****         else    //save flag not set
 808:Veno-Echo.cpp ****         {
 809:Veno-Echo.cpp ****            if(saveState == WAITING)    //wait flag set (waiting)
 810:Veno-Echo.cpp ****            {
 811:Veno-Echo.cpp ****                if(System::GetNow() - saveTimer > 1000)  //1second wait to save
 812:Veno-Echo.cpp ****                 {
 813:Veno-Echo.cpp ****                     saveState = SAVING; //stop reading ADCs temporarily
 814:Veno-Echo.cpp ****                     
 815:Veno-Echo.cpp ****                     Settings ToSave{AltControls};   //copy settings
 816:Veno-Echo.cpp ****                     if (SaveSettings(ToSave) == DSY_MEMORY_OK)  //save settings
 817:Veno-Echo.cpp ****                     {
 818:Veno-Echo.cpp ****                     }
 819:Veno-Echo.cpp ****                 }
 820:Veno-Echo.cpp **** 
 821:Veno-Echo.cpp ****                 else{} //still waiting
 822:Veno-Echo.cpp **** 
 823:Veno-Echo.cpp ****            }
 824:Veno-Echo.cpp **** 
 825:Veno-Echo.cpp ****            if(saveState == SAVING)
 826:Veno-Echo.cpp ****            {
 827:Veno-Echo.cpp ****             if(System::GetNow() - saveTimer > 1200) //additional 0.2 second wait
 828:Veno-Echo.cpp ****             {
 829:Veno-Echo.cpp ****                     saveState = IDLE;   //reset saveState
 830:Veno-Echo.cpp ****             }
 831:Veno-Echo.cpp ****             else{} //ADCs paused
 832:Veno-Echo.cpp **** 
 833:Veno-Echo.cpp ****            }
 834:Veno-Echo.cpp **** 
 835:Veno-Echo.cpp ****            else //IDLE - do nothing
 836:Veno-Echo.cpp ****            {
 837:Veno-Echo.cpp ****            }
 838:Veno-Echo.cpp ****         }
 839:Veno-Echo.cpp **** 
 840:Veno-Echo.cpp ****      }
 841:Veno-Echo.cpp **** 
 842:Veno-Echo.cpp **** }
 843:Veno-Echo.cpp **** 
 844:Veno-Echo.cpp **** void Update_DelayTimeL_CV()
 845:Veno-Echo.cpp **** {
 1022              		.loc 20 845 1 is_stmt 1 view -0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 0
 1025              		@ frame_needed = 0, uses_anonymous_args = 0
 846:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1026              		.loc 20 846 5 view .LVU201
 845:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1027              		.loc 20 845 1 is_stmt 0 view .LVU202
 1028 0000 08B5     		push	{r3, lr}
 1029              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 51


 1030              		.cfi_offset 3, -8
 1031              		.cfi_offset 14, -4
 1032              		.loc 20 846 36 view .LVU203
 1033 0002 0021     		movs	r1, #0
 1034 0004 0348     		ldr	r0, .L40
 1035 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1036              	.LVL39:
 1037              		.loc 20 846 19 view .LVU204
 1038 000a 034B     		ldr	r3, .L40+4
 1039 000c 83ED000A 		vstr.32	s0, [r3]
 847:Veno-Echo.cpp **** }
 1040              		.loc 20 847 1 view .LVU205
 1041 0010 08BD     		pop	{r3, pc}
 1042              	.L41:
 1043 0012 00BF     		.align	2
 1044              	.L40:
 1045 0014 18000000 		.word	.LANCHOR4+24
 1046 0018 00000000 		.word	.LANCHOR5
 1047              		.cfi_endproc
 1048              	.LFE4312:
 1050              		.section	.text._Z17Update_DelayTimeLv,"ax",%progbits
 1051              		.align	1
 1052              		.p2align 2,,3
 1053              		.global	_Z17Update_DelayTimeLv
 1054              		.syntax unified
 1055              		.thumb
 1056              		.thumb_func
 1057              		.fpu fpv5-d16
 1059              	_Z17Update_DelayTimeLv:
 1060              	.LFB4313:
 848:Veno-Echo.cpp **** 
 849:Veno-Echo.cpp **** void Update_DelayTimeL()
 850:Veno-Echo.cpp **** {
 1061              		.loc 20 850 1 is_stmt 1 view -0
 1062              		.cfi_startproc
 1063              		@ args = 0, pretend = 0, frame = 0
 1064              		@ frame_needed = 0, uses_anonymous_args = 0
 851:Veno-Echo.cpp ****     static bool lastShift{};
 1065              		.loc 20 851 5 view .LVU207
 852:Veno-Echo.cpp ****     static bool delayTimeL_pickup{};
 1066              		.loc 20 852 5 view .LVU208
 853:Veno-Echo.cpp ****     static bool Rev_DelayTime_pickup{};
 1067              		.loc 20 853 5 view .LVU209
 854:Veno-Echo.cpp ****     
 855:Veno-Echo.cpp ****     static float delayTimeL_Last{};
 1068              		.loc 20 855 5 view .LVU210
 856:Veno-Echo.cpp **** 
 857:Veno-Echo.cpp ****     //update pot values
 858:Veno-Echo.cpp ****     float delayTimeL_Pot{hw.adc.GetMuxFloat(7,2)};
 1069              		.loc 20 858 5 view .LVU211
 850:Veno-Echo.cpp ****     static bool lastShift{};
 1070              		.loc 20 850 1 is_stmt 0 view .LVU212
 1071 0000 10B5     		push	{r4, lr}
 1072              		.cfi_def_cfa_offset 8
 1073              		.cfi_offset 4, -8
 1074              		.cfi_offset 14, -4
 1075              		.loc 20 858 44 view .LVU213
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 52


 1076 0002 0222     		movs	r2, #2
 1077 0004 0721     		movs	r1, #7
 1078 0006 7648     		ldr	r0, .L75
 1079 0008 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1080              	.LVL40:
 859:Veno-Echo.cpp **** 
 860:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 861:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 862:Veno-Echo.cpp ****     static int counterL{};
 863:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 1081              		.loc 20 863 26 view .LVU214
 1082 000c 7549     		ldr	r1, .L75+4
 1083              		.loc 20 863 31 view .LVU215
 1084 000e 764B     		ldr	r3, .L75+8
 1085              	.LVL41:
 862:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 1086              		.loc 20 862 5 is_stmt 1 view .LVU216
 1087              		.loc 20 863 5 view .LVU217
 1088              		.loc 20 863 26 is_stmt 0 view .LVU218
 1089 0010 0A68     		ldr	r2, [r1]
 1090              	.LBB998:
 864:Veno-Echo.cpp **** 
 865:Veno-Echo.cpp ****     if (!shift) //default control
 1091              		.loc 20 865 9 view .LVU219
 1092 0012 7648     		ldr	r0, .L75+12
 1093              	.LBE998:
 863:Veno-Echo.cpp **** 
 1094              		.loc 20 863 26 view .LVU220
 1095 0014 0132     		adds	r2, r2, #1
 1096              	.LBB1071:
 1097              		.loc 20 865 5 view .LVU221
 1098 0016 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1099              	.LBE1071:
 863:Veno-Echo.cpp **** 
 1100              		.loc 20 863 31 view .LVU222
 1101 0018 83FB0243 		smull	r4, r3, r3, r2
 1102 001c D417     		asrs	r4, r2, #31
 1103 001e C4EB6313 		rsb	r3, r4, r3, asr #5
 1104 0022 03EB4303 		add	r3, r3, r3, lsl #1
 1105 0026 A2EB8313 		sub	r3, r2, r3, lsl #6
 1106              	.LBB1072:
 1107              	.LBB999:
 866:Veno-Echo.cpp ****     {
 867:Veno-Echo.cpp ****         static float delayTimeL_new{};
 868:Veno-Echo.cpp ****         //udpate pickup
 869:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 1108              		.loc 20 869 19 view .LVU223
 1109 002a 714A     		ldr	r2, .L75+16
 1110              	.LBE999:
 1111              	.LBE1072:
 863:Veno-Echo.cpp **** 
 1112              		.loc 20 863 14 view .LVU224
 1113 002c 0B60     		str	r3, [r1]
 865:Veno-Echo.cpp ****     {
 1114              		.loc 20 865 5 is_stmt 1 view .LVU225
 1115              	.LBB1073:
 1116 002e 80BB     		cbnz	r0, .L43
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 53


 1117              	.LBB1018:
 867:Veno-Echo.cpp ****         //udpate pickup
 1118              		.loc 20 867 9 view .LVU226
 1119              		.loc 20 869 9 view .LVU227
 1120 0030 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1121 0032 0029     		cmp	r1, #0
 1122 0034 38D0     		beq	.L44
 870:Veno-Echo.cpp ****         {
 871:Veno-Echo.cpp ****             lastShift = shift;
 1123              		.loc 20 871 13 view .LVU228
 872:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1124              		.loc 20 872 31 is_stmt 0 view .LVU229
 1125 0036 6F4C     		ldr	r4, .L75+20
 873:Veno-Echo.cpp ****             delayTimeL_new = delayTimeL_Pot;   //update new value
 1126              		.loc 20 873 28 view .LVU230
 1127 0038 6F49     		ldr	r1, .L75+24
 871:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1128              		.loc 20 871 23 view .LVU231
 1129 003a 1070     		strb	r0, [r2]
 872:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1130              		.loc 20 872 13 is_stmt 1 view .LVU232
 872:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1131              		.loc 20 872 31 is_stmt 0 view .LVU233
 1132 003c 2070     		strb	r0, [r4]
 1133              		.loc 20 873 13 is_stmt 1 view .LVU234
 1134              		.loc 20 873 28 is_stmt 0 view .LVU235
 1135 003e 81ED000A 		vstr.32	s0, [r1]
 1136              	.L45:
 874:Veno-Echo.cpp ****         } 
 875:Veno-Echo.cpp ****         else    //not a recent shift change
 876:Veno-Echo.cpp ****         {
 877:Veno-Echo.cpp ****             if(!delayTimeL_pickup)  //not picked up
 878:Veno-Echo.cpp ****             {
 879:Veno-Echo.cpp ****                 if(abs(delayTimeL_Pot - delayTimeL_new) > pickupTolerance)  //checked if changed fr
 880:Veno-Echo.cpp ****                 {
 881:Veno-Echo.cpp ****                     delayTimeL_pickup = true;   //set to picked up
 882:Veno-Echo.cpp ****                 }
 883:Veno-Echo.cpp ****             }
 884:Veno-Echo.cpp ****         }
 885:Veno-Echo.cpp **** 
 886:Veno-Echo.cpp ****         float delayTimeL{};
 1137              		.loc 20 886 9 is_stmt 1 view .LVU236
 1138              	.LVL42:
 887:Veno-Echo.cpp **** 
 888:Veno-Echo.cpp ****         if(delayTimeL_pickup)
 1139              		.loc 20 888 9 view .LVU237
 889:Veno-Echo.cpp ****         {
 890:Veno-Echo.cpp ****             delayTimeL = PotCVCombo(delayTimeL_Pot,delayTimeL_CV);  //combine pot value and CV
 891:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 892:Veno-Echo.cpp ****         }
 893:Veno-Echo.cpp **** 
 894:Veno-Echo.cpp ****         else
 895:Veno-Echo.cpp ****         {
 896:Veno-Echo.cpp ****             delayTimeL = PotCVCombo(delayTimeL_Last,delayTimeL_CV); //combine last pot value and CV
 1140              		.loc 20 896 13 view .LVU238
 1141              	.LBB1000:
 1142              	.LBI1000:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 54


 897:Veno-Echo.cpp ****         }
 898:Veno-Echo.cpp **** 
 899:Veno-Echo.cpp ****         if(counterL == 0)
 900:Veno-Echo.cpp ****         {
 901:Veno-Echo.cpp ****             if(delayL.SetDelayTime(delayTimeL,syncMode))
 902:Veno-Echo.cpp ****             {
 903:Veno-Echo.cpp ****             };
 904:Veno-Echo.cpp ****         }
 905:Veno-Echo.cpp **** 
 906:Veno-Echo.cpp ****     }   //not shift mode
 907:Veno-Echo.cpp **** 
 908:Veno-Echo.cpp ****     else    //shift mode
 909:Veno-Echo.cpp ****     {
 910:Veno-Echo.cpp ****         static float Rev_DelayTime_new{};
 911:Veno-Echo.cpp **** 
 912:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 913:Veno-Echo.cpp ****         {
 914:Veno-Echo.cpp ****             lastShift = shift;
 915:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 916:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 917:Veno-Echo.cpp ****         }
 918:Veno-Echo.cpp **** 
 919:Veno-Echo.cpp ****         else    //not a recent shift change
 920:Veno-Echo.cpp ****         {
 921:Veno-Echo.cpp ****             if(!Rev_DelayTime_pickup) //not picked up
 922:Veno-Echo.cpp ****             {
 923:Veno-Echo.cpp ****                 if(abs(delayTimeL_Pot - Rev_DelayTime_new) > pickupTolerance)
 924:Veno-Echo.cpp ****                 {
 925:Veno-Echo.cpp ****                     Rev_DelayTime_pickup = true;   //set picked up
 926:Veno-Echo.cpp ****                 }
 927:Veno-Echo.cpp ****             }
 928:Veno-Echo.cpp ****         }
 929:Veno-Echo.cpp **** 
 930:Veno-Echo.cpp ****         if(Rev_DelayTime_pickup)
 931:Veno-Echo.cpp ****         {
 932:Veno-Echo.cpp ****             float Rev_DelayTime{scale(delayTimeL_Pot,maxRevDelay,minRevDelay,EXPONENTIAL)};
 933:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 934:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 935:Veno-Echo.cpp ****             //save setting:
 936:Veno-Echo.cpp ****             AltControls.RevLength = Rev_DelayTime;
 937:Veno-Echo.cpp ****             save_flag = true;
 938:Veno-Echo.cpp ****         }
 939:Veno-Echo.cpp ****     }
 940:Veno-Echo.cpp ****     
 941:Veno-Echo.cpp **** }
 942:Veno-Echo.cpp **** 
 943:Veno-Echo.cpp **** void Update_DelayTimeR_CV()
 944:Veno-Echo.cpp **** {
 945:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 946:Veno-Echo.cpp **** }
 947:Veno-Echo.cpp **** 
 948:Veno-Echo.cpp **** void Update_DelayTimeR()
 949:Veno-Echo.cpp **** {
 950:Veno-Echo.cpp ****     static bool lastShift{};
 951:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 952:Veno-Echo.cpp ****     static bool tapRatio_pickup{};
 953:Veno-Echo.cpp ****     
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 55


 954:Veno-Echo.cpp ****     static float delayTimeR_Last{};
 955:Veno-Echo.cpp **** 
 956:Veno-Echo.cpp ****     //update pot values
 957:Veno-Echo.cpp ****     float delayTimeR_Pot{hw.adc.GetMuxFloat(7,6)};
 958:Veno-Echo.cpp **** 
 959:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 960:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 961:Veno-Echo.cpp ****     static int counterR{};
 962:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 963:Veno-Echo.cpp **** 
 964:Veno-Echo.cpp ****     if (!shift) //default control
 965:Veno-Echo.cpp ****     {
 966:Veno-Echo.cpp ****         static float delayTimeR_new{};
 967:Veno-Echo.cpp ****         //udpate pickup
 968:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 969:Veno-Echo.cpp ****         {
 970:Veno-Echo.cpp ****             lastShift = shift;
 971:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 972:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 973:Veno-Echo.cpp ****         } 
 974:Veno-Echo.cpp ****         else    //not a default shift change
 975:Veno-Echo.cpp ****         {
 976:Veno-Echo.cpp ****             if(!delayTimeR_pickup)  //not picked up
 977:Veno-Echo.cpp ****             {
 978:Veno-Echo.cpp ****                 if(abs(delayTimeR_Pot - delayTimeR_new) > pickupTolerance)  //checked if changed fr
 979:Veno-Echo.cpp ****                 {
 980:Veno-Echo.cpp ****                     delayTimeR_pickup = true;   //set to picked up
 981:Veno-Echo.cpp ****                 }
 982:Veno-Echo.cpp ****             }
 983:Veno-Echo.cpp ****         }
 984:Veno-Echo.cpp **** 
 985:Veno-Echo.cpp ****         float delayTimeR{};
 986:Veno-Echo.cpp **** 
 987:Veno-Echo.cpp ****         if(delayTimeR_pickup)
 988:Veno-Echo.cpp ****         {
 989:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Pot,delayTimeR_CV);
 990:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 991:Veno-Echo.cpp ****         }
 992:Veno-Echo.cpp **** 
 993:Veno-Echo.cpp ****         else
 994:Veno-Echo.cpp ****         {
 995:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Last,delayTimeR_CV);
 996:Veno-Echo.cpp ****         }
 997:Veno-Echo.cpp **** 
 998:Veno-Echo.cpp ****         if(counterR == 0)
 999:Veno-Echo.cpp ****         {
1000:Veno-Echo.cpp ****             if(delayR.SetDelayTime(delayTimeR,syncMode))
1001:Veno-Echo.cpp ****             {
1002:Veno-Echo.cpp ****             };
1003:Veno-Echo.cpp **** 
1004:Veno-Echo.cpp ****         }
1005:Veno-Echo.cpp ****     }   //not shift mode
1006:Veno-Echo.cpp **** 
1007:Veno-Echo.cpp ****     else    //shift mode
1008:Veno-Echo.cpp ****     {
1009:Veno-Echo.cpp **** 
1010:Veno-Echo.cpp ****         static float tapRatio_new{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 56


1011:Veno-Echo.cpp **** 
1012:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1013:Veno-Echo.cpp ****         {
1014:Veno-Echo.cpp ****             lastShift = shift;
1015:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
1016:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
1017:Veno-Echo.cpp ****         }
1018:Veno-Echo.cpp **** 
1019:Veno-Echo.cpp ****         else    //not a recent shift change
1020:Veno-Echo.cpp ****         {
1021:Veno-Echo.cpp ****             if(!tapRatio_pickup) //not picked up
1022:Veno-Echo.cpp ****             {
1023:Veno-Echo.cpp ****                 if(abs(delayTimeR_Pot - tapRatio_new) > pickupTolerance)
1024:Veno-Echo.cpp ****                 {
1025:Veno-Echo.cpp ****                     tapRatio_pickup = true;   //set picked up
1026:Veno-Echo.cpp ****                 }
1027:Veno-Echo.cpp ****             }
1028:Veno-Echo.cpp ****         }
1029:Veno-Echo.cpp **** 
1030:Veno-Echo.cpp ****         if(tapRatio_pickup)
1031:Veno-Echo.cpp ****         {
1032:Veno-Echo.cpp ****             float tapRatioInput{delayTimeR_Pot};
1033:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
1034:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
1035:Veno-Echo.cpp ****             //save setting:
1036:Veno-Echo.cpp ****             AltControls.tapRatio = GetTapRatio(tapRatio);
1037:Veno-Echo.cpp ****             save_flag = true;
1038:Veno-Echo.cpp ****         }
1039:Veno-Echo.cpp ****     }
1040:Veno-Echo.cpp ****     
1041:Veno-Echo.cpp **** }
1042:Veno-Echo.cpp **** void Update_feedbackL_CV()
1043:Veno-Echo.cpp **** {
1044:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
1045:Veno-Echo.cpp **** }
1046:Veno-Echo.cpp **** void Update_feedbackL()
1047:Veno-Echo.cpp **** {
1048:Veno-Echo.cpp ****     static bool lastShift{};
1049:Veno-Echo.cpp ****     static bool feedbackL_pickup{};
1050:Veno-Echo.cpp ****     static bool HPCutoff_pickup{};
1051:Veno-Echo.cpp **** 
1052:Veno-Echo.cpp ****     static float feedbackL_Last{};
1053:Veno-Echo.cpp **** 
1054:Veno-Echo.cpp ****     //get pot values:
1055:Veno-Echo.cpp ****     //float feedbackL_Pot{hw.adc.GetFloat(2)};
1056:Veno-Echo.cpp ****     float feedbackL_Pot{hw.adc.GetMuxFloat(7,1)};
1057:Veno-Echo.cpp **** 
1058:Veno-Echo.cpp ****     if (!shift) //default controls
1059:Veno-Echo.cpp ****     {   
1060:Veno-Echo.cpp ****         static float feedbackL_new{};
1061:Veno-Echo.cpp ****         //update pickup
1062:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1063:Veno-Echo.cpp ****         {
1064:Veno-Echo.cpp ****             lastShift = shift;
1065:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
1066:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
1067:Veno-Echo.cpp ****         } 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 57


1068:Veno-Echo.cpp ****         else    //not a default shift change
1069:Veno-Echo.cpp ****         {
1070:Veno-Echo.cpp ****             if(!feedbackL_pickup)  //not picked up
1071:Veno-Echo.cpp ****             {
1072:Veno-Echo.cpp ****                 if(abs(feedbackL_Pot - feedbackL_new) > pickupTolerance)  //checked if changed from
1073:Veno-Echo.cpp ****                 {
1074:Veno-Echo.cpp ****                     feedbackL_pickup = true;   //set to picked up
1075:Veno-Echo.cpp ****                 }
1076:Veno-Echo.cpp ****             }
1077:Veno-Echo.cpp ****         }
1078:Veno-Echo.cpp **** 
1079:Veno-Echo.cpp ****         float feedbackL_combo{};
1080:Veno-Echo.cpp **** 
1081:Veno-Echo.cpp ****         if(feedbackL_pickup)
1082:Veno-Echo.cpp ****         {
1083:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Pot,feedbackL_CV);
1084:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
1085:Veno-Echo.cpp ****         }
1086:Veno-Echo.cpp **** 
1087:Veno-Echo.cpp ****         else
1088:Veno-Echo.cpp ****         {
1089:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Last,feedbackL_CV);
1090:Veno-Echo.cpp ****         }
1091:Veno-Echo.cpp ****   
1092:Veno-Echo.cpp ****         float feedbackL_Target{scale(feedbackL_combo,0.0,maxFB,LINEAR)};  
1093:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
1094:Veno-Echo.cpp ****     }
1095:Veno-Echo.cpp ****     else    //alternate controls
1096:Veno-Echo.cpp ****     {
1097:Veno-Echo.cpp ****         static float HPCutoff_new{};
1098:Veno-Echo.cpp **** 
1099:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1100:Veno-Echo.cpp ****         {
1101:Veno-Echo.cpp ****             lastShift = shift;
1102:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
1103:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
1104:Veno-Echo.cpp ****         }
1105:Veno-Echo.cpp **** 
1106:Veno-Echo.cpp ****         else    //not a recent shift change
1107:Veno-Echo.cpp ****         {
1108:Veno-Echo.cpp ****             if(!HPCutoff_pickup) //not picked up
1109:Veno-Echo.cpp ****             {
1110:Veno-Echo.cpp ****                 if(abs(feedbackL_Pot - HPCutoff_new) > pickupTolerance)
1111:Veno-Echo.cpp ****                 {
1112:Veno-Echo.cpp ****                     HPCutoff_pickup = true;   //set picked up
1113:Veno-Echo.cpp ****                 }
1114:Veno-Echo.cpp ****             }
1115:Veno-Echo.cpp ****         }
1116:Veno-Echo.cpp **** 
1117:Veno-Echo.cpp ****         if(HPCutoff_pickup)
1118:Veno-Echo.cpp ****         {
1119:Veno-Echo.cpp ****             float HPCutoff{};
1120:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
1121:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
1122:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
1123:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
1124:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 58


1125:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
1126:Veno-Echo.cpp ****             save_flag = true;
1127:Veno-Echo.cpp ****         }
1128:Veno-Echo.cpp ****     }
1129:Veno-Echo.cpp **** }
1130:Veno-Echo.cpp **** 
1131:Veno-Echo.cpp **** void Update_feedbackR_CV()
1132:Veno-Echo.cpp **** {
1133:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
1134:Veno-Echo.cpp **** }
1135:Veno-Echo.cpp **** 
1136:Veno-Echo.cpp **** void Update_feedbackR()
1137:Veno-Echo.cpp **** {
1138:Veno-Echo.cpp ****     static bool lastShift{};
1139:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
1140:Veno-Echo.cpp ****     static bool LPCutoff_pickup{};
1141:Veno-Echo.cpp **** 
1142:Veno-Echo.cpp ****     static float feedbackR_Last{};
1143:Veno-Echo.cpp **** 
1144:Veno-Echo.cpp ****     //get pot values:
1145:Veno-Echo.cpp ****     float feedbackR_Pot{hw.adc.GetMuxFloat(7,4)};
1146:Veno-Echo.cpp **** 
1147:Veno-Echo.cpp ****     if (!shift) //default controls
1148:Veno-Echo.cpp ****     {   
1149:Veno-Echo.cpp ****         static float feedbackR_new{};
1150:Veno-Echo.cpp ****         //update pickup
1151:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1152:Veno-Echo.cpp ****         {
1153:Veno-Echo.cpp ****             lastShift = shift;
1154:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
1155:Veno-Echo.cpp ****             //feedbackR_Last = feedbackR_Pot; //update last value
1156:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
1157:Veno-Echo.cpp ****         } 
1158:Veno-Echo.cpp ****         else    //not a recent shift change
1159:Veno-Echo.cpp ****         {
1160:Veno-Echo.cpp ****             if(!feedbackR_pickup)  //not picked up
1161:Veno-Echo.cpp ****             {
1162:Veno-Echo.cpp ****                 if(abs(feedbackR_Pot - feedbackR_new) > pickupTolerance)  //checked if changed from
1163:Veno-Echo.cpp ****                 {
1164:Veno-Echo.cpp ****                     feedbackR_pickup = true;   //set to picked up
1165:Veno-Echo.cpp ****                 }
1166:Veno-Echo.cpp ****             }
1167:Veno-Echo.cpp ****         }
1168:Veno-Echo.cpp **** 
1169:Veno-Echo.cpp ****         float feedbackR_combo{};
1170:Veno-Echo.cpp ****         
1171:Veno-Echo.cpp ****         if(feedbackR_pickup)
1172:Veno-Echo.cpp ****         {
1173:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Pot,feedbackR_CV);
1174:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
1175:Veno-Echo.cpp ****         }
1176:Veno-Echo.cpp **** 
1177:Veno-Echo.cpp ****         else
1178:Veno-Echo.cpp ****         {
1179:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Last,feedbackR_CV);
1180:Veno-Echo.cpp ****         }
1181:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 59


1182:Veno-Echo.cpp ****         float feedbackR_Target{scale(feedbackR_combo,0.0,maxFB,LINEAR)};
1183:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
1184:Veno-Echo.cpp ****     }
1185:Veno-Echo.cpp ****     else    //alternate controls
1186:Veno-Echo.cpp ****     {
1187:Veno-Echo.cpp **** 
1188:Veno-Echo.cpp ****         static float LPCutoff_new{};
1189:Veno-Echo.cpp **** 
1190:Veno-Echo.cpp ****          if (shift != lastShift) //recent shift change
1191:Veno-Echo.cpp ****         {
1192:Veno-Echo.cpp ****             lastShift = shift;
1193:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
1194:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
1195:Veno-Echo.cpp ****         }
1196:Veno-Echo.cpp **** 
1197:Veno-Echo.cpp ****         else    //not a recent shift change
1198:Veno-Echo.cpp ****         {
1199:Veno-Echo.cpp ****             if(!LPCutoff_pickup) //not picked up
1200:Veno-Echo.cpp ****             {
1201:Veno-Echo.cpp ****                 if(abs(feedbackR_Pot - LPCutoff_new) > pickupTolerance)
1202:Veno-Echo.cpp ****                 {
1203:Veno-Echo.cpp ****                     LPCutoff_pickup = true;   //set picked up
1204:Veno-Echo.cpp ****                 }
1205:Veno-Echo.cpp ****             }
1206:Veno-Echo.cpp ****         }
1207:Veno-Echo.cpp **** 
1208:Veno-Echo.cpp ****         if(LPCutoff_pickup)
1209:Veno-Echo.cpp ****         {
1210:Veno-Echo.cpp ****             float LPCutoff{};
1211:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
1212:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
1213:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
1214:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
1215:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
1216:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
1217:Veno-Echo.cpp ****             save_flag = true;
1218:Veno-Echo.cpp ****         }
1219:Veno-Echo.cpp ****     }
1220:Veno-Echo.cpp **** }
1221:Veno-Echo.cpp **** 
1222:Veno-Echo.cpp **** void Update_drywet_CV()
1223:Veno-Echo.cpp **** {
1224:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
1225:Veno-Echo.cpp **** }
1226:Veno-Echo.cpp **** 
1227:Veno-Echo.cpp **** void Update_drywet()
1228:Veno-Echo.cpp **** {
1229:Veno-Echo.cpp ****     static bool lastShift{};
1230:Veno-Echo.cpp ****     static bool drywet_pickup{};
1231:Veno-Echo.cpp ****     static bool Res_pickup{};
1232:Veno-Echo.cpp **** 
1233:Veno-Echo.cpp ****     static float drywet_Last{}; //last drywet position (unscaled)
1234:Veno-Echo.cpp ****     //static float Res_Last{}; //last res value (unscaled)
1235:Veno-Echo.cpp **** 
1236:Veno-Echo.cpp ****     //get pot values:
1237:Veno-Echo.cpp ****     //float drywet_Pot{hw.adc.GetFloat(4)};
1238:Veno-Echo.cpp ****     float drywet_Pot{hw.adc.GetMuxFloat(7,5)}; //read current pot position
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 60


1239:Veno-Echo.cpp **** 
1240:Veno-Echo.cpp ****     if (!shift) //default controls
1241:Veno-Echo.cpp ****     {   
1242:Veno-Echo.cpp **** 
1243:Veno-Echo.cpp ****         static float drywet_new{};
1244:Veno-Echo.cpp **** 
1245:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1246:Veno-Echo.cpp ****         {
1247:Veno-Echo.cpp ****             lastShift = shift;
1248:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
1249:Veno-Echo.cpp ****             drywet_pickup = false;  //set to not picked up
1250:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
1251:Veno-Echo.cpp ****         } 
1252:Veno-Echo.cpp ****         
1253:Veno-Echo.cpp ****         else    //not a recent shift change
1254:Veno-Echo.cpp ****         {
1255:Veno-Echo.cpp ****             if(!drywet_pickup)  //not pickup
1256:Veno-Echo.cpp ****             {
1257:Veno-Echo.cpp ****                 //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,false);
1258:Veno-Echo.cpp ****                 if(abs(drywet_Pot - drywet_new) > pickupTolerance)  //check if changed from new val
1259:Veno-Echo.cpp ****                 {
1260:Veno-Echo.cpp ****                     drywet_pickup = true;   //set to picked up
1261:Veno-Echo.cpp ****                 }
1262:Veno-Echo.cpp ****             }
1263:Veno-Echo.cpp **** 
1264:Veno-Echo.cpp ****         }
1265:Veno-Echo.cpp ****         
1266:Veno-Echo.cpp ****         float drywetcombo{};
1267:Veno-Echo.cpp **** 
1268:Veno-Echo.cpp ****         if (drywet_pickup)
1269:Veno-Echo.cpp ****         {
1270:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Pot,drywet_CV);    //combine pot and CV
1271:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
1272:Veno-Echo.cpp ****         }
1273:Veno-Echo.cpp **** 
1274:Veno-Echo.cpp ****         else
1275:Veno-Echo.cpp ****         {
1276:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Last,drywet_CV);    //combine last pot value and CV
1277:Veno-Echo.cpp ****         }
1278:Veno-Echo.cpp **** 
1279:Veno-Echo.cpp ****         float drywetTarget{};
1280:Veno-Echo.cpp **** 
1281:Veno-Echo.cpp ****         if(drywetcombo >= 0.98)
1282:Veno-Echo.cpp ****         {
1283:Veno-Echo.cpp ****             drywetTarget = 1.0f;
1284:Veno-Echo.cpp ****         }
1285:Veno-Echo.cpp ****         else if(drywetcombo <= 0.02)
1286:Veno-Echo.cpp ****         {
1287:Veno-Echo.cpp ****             drywetTarget = 0.0f;
1288:Veno-Echo.cpp ****         }
1289:Veno-Echo.cpp ****         else
1290:Veno-Echo.cpp ****         {
1291:Veno-Echo.cpp ****             drywetTarget = scale(drywetcombo,0.0,1.0,LINEAR); 
1292:Veno-Echo.cpp ****         }
1293:Veno-Echo.cpp **** 
1294:Veno-Echo.cpp ****         //fonepole(drywet,drywetTarget,0.032f); 
1295:Veno-Echo.cpp ****         fonepole(drywet,drywetTarget,0.016f); 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 61


1296:Veno-Echo.cpp ****     }
1297:Veno-Echo.cpp ****     else    //alternate controls
1298:Veno-Echo.cpp ****     {
1299:Veno-Echo.cpp ****         static float Res_new{};
1300:Veno-Echo.cpp **** 
1301:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1302:Veno-Echo.cpp ****         {
1303:Veno-Echo.cpp ****             lastShift = shift;
1304:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
1305:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
1306:Veno-Echo.cpp ****         }
1307:Veno-Echo.cpp **** 
1308:Veno-Echo.cpp ****         else    //not a recent shift change
1309:Veno-Echo.cpp ****         {
1310:Veno-Echo.cpp ****             if(!Res_pickup) //not picked up
1311:Veno-Echo.cpp ****             {
1312:Veno-Echo.cpp ****                 if(abs(drywet_Pot - Res_new) > pickupTolerance)
1313:Veno-Echo.cpp ****                 {
1314:Veno-Echo.cpp ****                     Res_pickup = true;  //set picked up
1315:Veno-Echo.cpp ****                 }
1316:Veno-Echo.cpp ****             }
1317:Veno-Echo.cpp ****         }
1318:Veno-Echo.cpp **** 
1319:Veno-Echo.cpp ****         if(Res_pickup)
1320:Veno-Echo.cpp ****         {
1321:Veno-Echo.cpp ****             float Res{};
1322:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
1323:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
1324:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
1325:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
1326:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
1327:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
1328:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
1329:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
1330:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
1331:Veno-Echo.cpp ****             AltControls.Resonance = Res;
1332:Veno-Echo.cpp ****             save_flag = true;
1333:Veno-Echo.cpp ****         }
1334:Veno-Echo.cpp ****     }
1335:Veno-Echo.cpp **** }
1336:Veno-Echo.cpp **** 
1337:Veno-Echo.cpp **** void Update_width_CV()
1338:Veno-Echo.cpp **** {
1339:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
1340:Veno-Echo.cpp **** }
1341:Veno-Echo.cpp **** 
1342:Veno-Echo.cpp **** void Update_width()
1343:Veno-Echo.cpp **** {
1344:Veno-Echo.cpp ****     static bool lastShift{};
1345:Veno-Echo.cpp ****     static bool width_pickup{};
1346:Veno-Echo.cpp ****     static bool ModDepth_pickup{};
1347:Veno-Echo.cpp **** 
1348:Veno-Echo.cpp ****     static float width_Last{};
1349:Veno-Echo.cpp **** 
1350:Veno-Echo.cpp ****     //get pot values:
1351:Veno-Echo.cpp ****     float width_Pot{hw.adc.GetMuxFloat(7,7)};
1352:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 62


1353:Veno-Echo.cpp ****     if (!shift) //default controls
1354:Veno-Echo.cpp ****     {   
1355:Veno-Echo.cpp ****         static float width_new{};
1356:Veno-Echo.cpp ****         //update pickup
1357:Veno-Echo.cpp ****         if (shift != lastShift)
1358:Veno-Echo.cpp ****         {
1359:Veno-Echo.cpp ****             lastShift = shift;
1360:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
1361:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
1362:Veno-Echo.cpp ****         }
1363:Veno-Echo.cpp **** 
1364:Veno-Echo.cpp ****         else
1365:Veno-Echo.cpp ****         {
1366:Veno-Echo.cpp ****             if(!width_pickup)  //not picked up
1367:Veno-Echo.cpp ****             {
1368:Veno-Echo.cpp ****                 if(abs(width_Pot - width_new) > pickupTolerance)  //checked if changed from new val
1369:Veno-Echo.cpp ****                 {
1370:Veno-Echo.cpp ****                     width_pickup = true;   //set to picked up
1371:Veno-Echo.cpp ****                 }
1372:Veno-Echo.cpp ****             }
1373:Veno-Echo.cpp **** 
1374:Veno-Echo.cpp ****         }
1375:Veno-Echo.cpp **** 
1376:Veno-Echo.cpp ****         float widthTarget{};
1377:Veno-Echo.cpp **** 
1378:Veno-Echo.cpp ****         if(width_pickup)
1379:Veno-Echo.cpp ****         {
1380:Veno-Echo.cpp ****             widthTarget = scale(PotCVCombo(width_Pot,width_CV),0.5f,0.0f,LINEAR);
1381:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
1382:Veno-Echo.cpp ****         }
1383:Veno-Echo.cpp **** 
1384:Veno-Echo.cpp ****         else
1385:Veno-Echo.cpp ****         {        
1386:Veno-Echo.cpp ****             widthTarget = scale(PotCVCombo(width_Last,width_CV),0.5f,0.0f,LINEAR);
1387:Veno-Echo.cpp ****         }
1388:Veno-Echo.cpp ****             
1389:Veno-Echo.cpp ****             fonepole(width,widthTarget,0.032f);
1390:Veno-Echo.cpp ****             WidthXfade.SetPos(width);
1391:Veno-Echo.cpp ****     }
1392:Veno-Echo.cpp **** 
1393:Veno-Echo.cpp ****     else    //alternate controls
1394:Veno-Echo.cpp ****     {
1395:Veno-Echo.cpp ****         static float ModDepth_new{};
1396:Veno-Echo.cpp **** 
1397:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1398:Veno-Echo.cpp ****         {
1399:Veno-Echo.cpp ****             lastShift = shift;
1400:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
1401:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
1402:Veno-Echo.cpp ****         }
1403:Veno-Echo.cpp **** 
1404:Veno-Echo.cpp ****         else    //not a recent shift change
1405:Veno-Echo.cpp ****         {
1406:Veno-Echo.cpp ****             if(!ModDepth_pickup) //not picked up
1407:Veno-Echo.cpp ****             {
1408:Veno-Echo.cpp ****                 if(abs(width_Pot - ModDepth_new) > pickupTolerance)
1409:Veno-Echo.cpp ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 63


1410:Veno-Echo.cpp ****                     ModDepth_pickup = true;   //set picked up
1411:Veno-Echo.cpp ****                 }
1412:Veno-Echo.cpp ****             }
1413:Veno-Echo.cpp ****         }
1414:Veno-Echo.cpp **** 
1415:Veno-Echo.cpp ****         if(ModDepth_pickup)
1416:Veno-Echo.cpp ****         {
1417:Veno-Echo.cpp ****             ModDepth = scale(width_Pot,minModDepth,maxModDepth,LINEAR); 
1418:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
1419:Veno-Echo.cpp ****             save_flag = true;
1420:Veno-Echo.cpp ****         }
1421:Veno-Echo.cpp ****     }
1422:Veno-Echo.cpp **** }
1423:Veno-Echo.cpp **** 
1424:Veno-Echo.cpp **** void Update_crossfeedback()
1425:Veno-Echo.cpp **** {
1426:Veno-Echo.cpp ****     static bool lastShift{};
1427:Veno-Echo.cpp ****     static bool crossfeedback_pickup{};
1428:Veno-Echo.cpp ****     static bool modRate_pickup{};
1429:Veno-Echo.cpp **** 
1430:Veno-Echo.cpp ****     static float crossfeedback_Last{};
1431:Veno-Echo.cpp **** 
1432:Veno-Echo.cpp ****     //get pot values:
1433:Veno-Echo.cpp ****     float crossfeedback_Pot{hw.adc.GetMuxFloat(7,0)};
1434:Veno-Echo.cpp **** 
1435:Veno-Echo.cpp ****     if (!shift) //default controls
1436:Veno-Echo.cpp ****     {   
1437:Veno-Echo.cpp ****         static float crossfeedback_new{};
1438:Veno-Echo.cpp ****         //update pickup
1439:Veno-Echo.cpp ****         if (shift != lastShift)
1440:Veno-Echo.cpp ****         {
1441:Veno-Echo.cpp ****             lastShift = shift;
1442:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
1443:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
1444:Veno-Echo.cpp ****         }
1445:Veno-Echo.cpp **** 
1446:Veno-Echo.cpp ****         else
1447:Veno-Echo.cpp ****         {
1448:Veno-Echo.cpp ****             if(!crossfeedback_pickup)  //not picked up
1449:Veno-Echo.cpp ****             {
1450:Veno-Echo.cpp ****                 if(abs(crossfeedback_Pot - crossfeedback_new) > pickupTolerance)  //checked if chan
1451:Veno-Echo.cpp ****                 {
1452:Veno-Echo.cpp ****                     crossfeedback_pickup = true;   //set to picked up
1453:Veno-Echo.cpp ****                 }
1454:Veno-Echo.cpp ****             }
1455:Veno-Echo.cpp ****         }
1456:Veno-Echo.cpp ****         float crossfeedbackTarget{};
1457:Veno-Echo.cpp **** 
1458:Veno-Echo.cpp ****         if(crossfeedback_pickup)
1459:Veno-Echo.cpp ****         {
1460:Veno-Echo.cpp ****             crossfeedbackTarget = scale(crossfeedback_Pot,0.0,1.0,LINEAR);
1461:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
1462:Veno-Echo.cpp ****         }
1463:Veno-Echo.cpp **** 
1464:Veno-Echo.cpp ****         else
1465:Veno-Echo.cpp ****         {
1466:Veno-Echo.cpp ****             crossfeedbackTarget = scale(crossfeedback_Last,0.0,1.0,LINEAR);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 64


1467:Veno-Echo.cpp ****         }
1468:Veno-Echo.cpp **** 
1469:Veno-Echo.cpp ****         fonepole(crossfeedback,crossfeedbackTarget,0.032f);
1470:Veno-Echo.cpp ****     }
1471:Veno-Echo.cpp ****     else    //alternate controls
1472:Veno-Echo.cpp ****     {
1473:Veno-Echo.cpp ****         static float modRate_new{};
1474:Veno-Echo.cpp **** 
1475:Veno-Echo.cpp ****         if (shift != lastShift)
1476:Veno-Echo.cpp ****         {
1477:Veno-Echo.cpp ****             lastShift = shift;
1478:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
1479:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
1480:Veno-Echo.cpp ****         }
1481:Veno-Echo.cpp **** 
1482:Veno-Echo.cpp ****         else
1483:Veno-Echo.cpp ****         {
1484:Veno-Echo.cpp ****             if(!modRate_pickup)
1485:Veno-Echo.cpp ****             {
1486:Veno-Echo.cpp ****                 if(abs(crossfeedback_Pot - modRate_new) > pickupTolerance)
1487:Veno-Echo.cpp ****                 {
1488:Veno-Echo.cpp ****                     modRate_pickup = true; //set picked up
1489:Veno-Echo.cpp ****                 }
1490:Veno-Echo.cpp ****             }
1491:Veno-Echo.cpp ****         }
1492:Veno-Echo.cpp **** 
1493:Veno-Echo.cpp ****         if(modRate_pickup)
1494:Veno-Echo.cpp ****         {
1495:Veno-Echo.cpp ****             float modRate{scale(crossfeedback_Pot,minModRate,maxModRate,LINEAR)};
1496:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
1497:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
1498:Veno-Echo.cpp ****             save_flag = true;
1499:Veno-Echo.cpp ****         }
1500:Veno-Echo.cpp ****     }
1501:Veno-Echo.cpp **** }
1502:Veno-Echo.cpp **** 
1503:Veno-Echo.cpp **** void Update_filterXfade()
1504:Veno-Echo.cpp **** {
1505:Veno-Echo.cpp ****     static bool lastShift{};
1506:Veno-Echo.cpp ****     static bool filterXfade_pickup{};
1507:Veno-Echo.cpp ****     static bool PostFilters_pickup{};
1508:Veno-Echo.cpp **** 
1509:Veno-Echo.cpp ****     static float filterXfade_last{};
1510:Veno-Echo.cpp **** 
1511:Veno-Echo.cpp ****     //get pot values:
1512:Veno-Echo.cpp ****     float filterXfade_Pot{hw.adc.GetMuxFloat(7,3)};
1513:Veno-Echo.cpp **** 
1514:Veno-Echo.cpp ****     if (!shift) //default controls
1515:Veno-Echo.cpp ****     {   
1516:Veno-Echo.cpp ****         static float filterXfade_new{};
1517:Veno-Echo.cpp ****         //update pickup
1518:Veno-Echo.cpp ****         if (shift != lastShift)
1519:Veno-Echo.cpp ****         {
1520:Veno-Echo.cpp ****             lastShift = shift;
1521:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
1522:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
1523:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 65


1524:Veno-Echo.cpp **** 
1525:Veno-Echo.cpp ****         else
1526:Veno-Echo.cpp ****         {
1527:Veno-Echo.cpp ****             if(!filterXfade_pickup)  //not picked up
1528:Veno-Echo.cpp ****             {
1529:Veno-Echo.cpp ****                 if(abs(filterXfade_Pot - filterXfade_new) > pickupTolerance)  //checked if changed 
1530:Veno-Echo.cpp ****                 {
1531:Veno-Echo.cpp ****                     filterXfade_pickup = true;   //set to picked up
1532:Veno-Echo.cpp ****                 }
1533:Veno-Echo.cpp ****             }
1534:Veno-Echo.cpp ****         }
1535:Veno-Echo.cpp **** 
1536:Veno-Echo.cpp ****         float filterXfadeTarget{};
1537:Veno-Echo.cpp **** 
1538:Veno-Echo.cpp ****         if(filterXfade_pickup)
1539:Veno-Echo.cpp ****         {
1540:Veno-Echo.cpp ****             filterXfadeTarget = scale(filterXfade_Pot,0.0,1.0,EXPONENTIAL);
1541:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
1542:Veno-Echo.cpp ****         }
1543:Veno-Echo.cpp **** 
1544:Veno-Echo.cpp ****         else
1545:Veno-Echo.cpp ****         {
1546:Veno-Echo.cpp ****             filterXfadeTarget = scale(filterXfade_last,0.0,1.0,EXPONENTIAL);
1547:Veno-Echo.cpp ****         }
1548:Veno-Echo.cpp **** 
1549:Veno-Echo.cpp ****         fonepole(filterXfade,filterXfadeTarget,0.032f);
1550:Veno-Echo.cpp ****     }
1551:Veno-Echo.cpp ****     else    //alternate controls
1552:Veno-Echo.cpp ****     {
1553:Veno-Echo.cpp **** 
1554:Veno-Echo.cpp ****         static float PostFilters_new{};
1555:Veno-Echo.cpp **** 
1556:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1557:Veno-Echo.cpp ****         {
1558:Veno-Echo.cpp ****             lastShift = shift;
1559:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
1560:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
1561:Veno-Echo.cpp ****         }
1562:Veno-Echo.cpp **** 
1563:Veno-Echo.cpp ****         else    //not a recent shift change
1564:Veno-Echo.cpp ****         {
1565:Veno-Echo.cpp ****             if(!PostFilters_pickup) //not picked up
1566:Veno-Echo.cpp ****             {
1567:Veno-Echo.cpp ****                 if(abs(filterXfade_Pot - PostFilters_new) > pickupTolerance)
1568:Veno-Echo.cpp ****                 {
1569:Veno-Echo.cpp ****                     PostFilters_pickup = true;   //set picked up
1570:Veno-Echo.cpp ****                 }
1571:Veno-Echo.cpp ****             }
1572:Veno-Echo.cpp ****         }
1573:Veno-Echo.cpp ****         
1574:Veno-Echo.cpp ****         if(PostFilters_pickup)
1575:Veno-Echo.cpp ****         {
1576:Veno-Echo.cpp ****             if(filterXfade_Pot < 0.45f)
1577:Veno-Echo.cpp ****             {
1578:Veno-Echo.cpp ****                 PostFilters = false;
1579:Veno-Echo.cpp ****             }
1580:Veno-Echo.cpp ****             else if(filterXfade_Pot > 0.55f)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 66


1581:Veno-Echo.cpp ****             {
1582:Veno-Echo.cpp ****                 PostFilters = true;
1583:Veno-Echo.cpp ****             }
1584:Veno-Echo.cpp ****             else
1585:Veno-Echo.cpp ****             {
1586:Veno-Echo.cpp ****               //do nothing
1587:Veno-Echo.cpp ****             }
1588:Veno-Echo.cpp ****             AltControls.FilterPrePost = filterXfade_Pot;
1589:Veno-Echo.cpp ****             save_flag = true;
1590:Veno-Echo.cpp ****         }  
1591:Veno-Echo.cpp ****     }
1592:Veno-Echo.cpp **** }
1593:Veno-Echo.cpp **** 
1594:Veno-Echo.cpp **** void GetModCV()
1595:Veno-Echo.cpp **** {
1596:Veno-Echo.cpp ****     //get modulation CV input
1597:Veno-Echo.cpp ****     modulation_CV_Raw = scale(hw.adc.GetFloat(6),-1.0f * maxModAmp,maxModAmp,LINEAR);
1598:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
1599:Veno-Echo.cpp **** }
1600:Veno-Echo.cpp **** 
1601:Veno-Echo.cpp **** void Update_Mod()
1602:Veno-Echo.cpp **** {    
1603:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
1604:Veno-Echo.cpp ****     static float modulation_CV{};
1605:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
1606:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
1607:Veno-Echo.cpp ****     //calculate InternalMod
1608:Veno-Echo.cpp ****     float internalmod{lfo.Process() * ModDepth_Filtered};
1609:Veno-Echo.cpp ****     //apply modulation to delay lines
1610:Veno-Echo.cpp ****     delayL.SetModulation(modulation_CV + internalmod);
1611:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
1612:Veno-Echo.cpp **** }
1613:Veno-Echo.cpp **** 
1614:Veno-Echo.cpp **** void UpdateClock()
1615:Veno-Echo.cpp **** {
1616:Veno-Echo.cpp ****     static int divCounter{};
1617:Veno-Echo.cpp ****     ClockIn.Debounce();
1618:Veno-Echo.cpp **** 
1619:Veno-Echo.cpp ****     //if clock in pulse received
1620:Veno-Echo.cpp ****     if (ClockIn.RisingEdge())    
1621:Veno-Echo.cpp ****     {   
1622:Veno-Echo.cpp ****         divCounter = (divCounter + 1) % PPQN;
1623:Veno-Echo.cpp ****         //tempoLED_BASE.resetPhase();
1624:Veno-Echo.cpp ****         if(divCounter == 0)
1625:Veno-Echo.cpp ****         {
1626:Veno-Echo.cpp ****             if(BaseTempo.tap()) //if valid tap resistered
1627:Veno-Echo.cpp ****             {
1628:Veno-Echo.cpp ****                 tempoLED_BASE.setTempo(BaseTempo.getTapFreq()); //set new base freq
1629:Veno-Echo.cpp ****                 AltControls.tapLength = BaseTempo.getTapLength();
1630:Veno-Echo.cpp ****                 save_flag = true;
1631:Veno-Echo.cpp ****             }
1632:Veno-Echo.cpp ****         }
1633:Veno-Echo.cpp ****     }
1634:Veno-Echo.cpp ****     
1635:Veno-Echo.cpp **** }
1636:Veno-Echo.cpp **** 
1637:Veno-Echo.cpp **** void Update_Buttons()
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 67


1638:Veno-Echo.cpp **** {  
1639:Veno-Echo.cpp ****     static uint32_t shiftTime{};
1640:Veno-Echo.cpp ****     static uint32_t resetTime{};
1641:Veno-Echo.cpp ****     static int buttonstate{};
1642:Veno-Echo.cpp **** 
1643:Veno-Echo.cpp ****     Rev_L_sw.update();
1644:Veno-Echo.cpp ****     Rev_R_sw.update();
1645:Veno-Echo.cpp ****     LPF_sw.update();
1646:Veno-Echo.cpp ****     HPF_sw.update();
1647:Veno-Echo.cpp ****     Tap_Button.update();
1648:Veno-Echo.cpp **** 
1649:Veno-Echo.cpp ****     ReverseGateL.Debounce();
1650:Veno-Echo.cpp ****     ReverseGateR.Debounce();
1651:Veno-Echo.cpp ****     //TapButton.Debounce();
1652:Veno-Echo.cpp ****     Sync.Debounce();
1653:Veno-Echo.cpp ****     ClockIn.Debounce();
1654:Veno-Echo.cpp ****     //gate inputs
1655:Veno-Echo.cpp ****     if (ReverseGateL.RisingEdge())
1656:Veno-Echo.cpp ****     {
1657:Veno-Echo.cpp ****         Rev_L_sw.toggle();
1658:Veno-Echo.cpp ****         if(Rev_L_sw.getState())
1659:Veno-Echo.cpp ****         {
1660:Veno-Echo.cpp ****             AltControls.L_Rev = 1.0f;
1661:Veno-Echo.cpp ****         }
1662:Veno-Echo.cpp ****         else
1663:Veno-Echo.cpp ****         {
1664:Veno-Echo.cpp ****             AltControls.L_Rev = 0.0f;
1665:Veno-Echo.cpp ****         }
1666:Veno-Echo.cpp ****         save_flag = true;
1667:Veno-Echo.cpp ****     }
1668:Veno-Echo.cpp **** 
1669:Veno-Echo.cpp ****     if (ReverseGateR.RisingEdge())
1670:Veno-Echo.cpp ****     {
1671:Veno-Echo.cpp ****         Rev_R_sw.toggle();
1672:Veno-Echo.cpp ****         if(Rev_R_sw.getState())
1673:Veno-Echo.cpp ****         {
1674:Veno-Echo.cpp ****             AltControls.R_Rev = 1.0f;
1675:Veno-Echo.cpp ****         }
1676:Veno-Echo.cpp ****         else
1677:Veno-Echo.cpp ****         {
1678:Veno-Echo.cpp ****             AltControls.R_Rev = 0.0f;
1679:Veno-Echo.cpp ****         }
1680:Veno-Echo.cpp ****         save_flag = true;
1681:Veno-Echo.cpp ****     }
1682:Veno-Echo.cpp **** 
1683:Veno-Echo.cpp ****     //buttons
1684:Veno-Echo.cpp **** 
1685:Veno-Echo.cpp ****     if (Rev_L_sw.RisingEdge())
1686:Veno-Echo.cpp ****     {
1687:Veno-Echo.cpp ****         buttonstate += 1;
1688:Veno-Echo.cpp ****         if (buttonstate == 3)
1689:Veno-Echo.cpp ****         {
1690:Veno-Echo.cpp ****             resetTime = System::GetNow();
1691:Veno-Echo.cpp ****         }
1692:Veno-Echo.cpp ****         if(Rev_L_sw.getState())
1693:Veno-Echo.cpp ****         {
1694:Veno-Echo.cpp ****             AltControls.L_Rev = 1.0f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 68


1695:Veno-Echo.cpp ****         }
1696:Veno-Echo.cpp ****         else
1697:Veno-Echo.cpp ****         {
1698:Veno-Echo.cpp ****             AltControls.L_Rev = 0.0f;
1699:Veno-Echo.cpp ****         }
1700:Veno-Echo.cpp ****         save_flag = true;
1701:Veno-Echo.cpp ****     }
1702:Veno-Echo.cpp **** 
1703:Veno-Echo.cpp ****     if (Rev_L_sw.FallingEdge())
1704:Veno-Echo.cpp ****     {
1705:Veno-Echo.cpp ****         buttonstate -= 1;
1706:Veno-Echo.cpp ****     }
1707:Veno-Echo.cpp **** 
1708:Veno-Echo.cpp ****     if (Rev_R_sw.RisingEdge())
1709:Veno-Echo.cpp ****     {
1710:Veno-Echo.cpp ****         buttonstate += 1;
1711:Veno-Echo.cpp ****         if (buttonstate == 3)
1712:Veno-Echo.cpp ****         {
1713:Veno-Echo.cpp ****             resetTime = System::GetNow();
1714:Veno-Echo.cpp ****         }
1715:Veno-Echo.cpp ****         if(Rev_R_sw.getState())
1716:Veno-Echo.cpp ****         {
1717:Veno-Echo.cpp ****             AltControls.R_Rev = 1.0f;
1718:Veno-Echo.cpp ****         }
1719:Veno-Echo.cpp ****         else
1720:Veno-Echo.cpp ****         {
1721:Veno-Echo.cpp ****             AltControls.R_Rev = 0.0f;
1722:Veno-Echo.cpp ****         }
1723:Veno-Echo.cpp ****         save_flag = true;
1724:Veno-Echo.cpp ****     }
1725:Veno-Echo.cpp **** 
1726:Veno-Echo.cpp ****     if (Rev_R_sw.FallingEdge())
1727:Veno-Echo.cpp ****     {
1728:Veno-Echo.cpp ****         buttonstate -= 1;
1729:Veno-Echo.cpp ****     }
1730:Veno-Echo.cpp **** 
1731:Veno-Echo.cpp ****     if (Tap_Button.RisingEdge())    
1732:Veno-Echo.cpp ****     {
1733:Veno-Echo.cpp ****         if(BaseTempo.tap()) //if tempo changed
1734:Veno-Echo.cpp ****         {
1735:Veno-Echo.cpp ****             tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1736:Veno-Echo.cpp ****             AltControls.tapLength = BaseTempo.getTapLength();
1737:Veno-Echo.cpp ****             save_flag = true;
1738:Veno-Echo.cpp ****         }
1739:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
1740:Veno-Echo.cpp ****         
1741:Veno-Echo.cpp **** 
1742:Veno-Echo.cpp ****         shiftTime = System::GetNow();   //reset shift timer
1743:Veno-Echo.cpp ****         buttonstate += 1;
1744:Veno-Echo.cpp ****         
1745:Veno-Echo.cpp ****         if (buttonstate == 3)
1746:Veno-Echo.cpp ****         {
1747:Veno-Echo.cpp ****             resetTime = System::GetNow();
1748:Veno-Echo.cpp ****         }
1749:Veno-Echo.cpp **** 
1750:Veno-Echo.cpp ****     }
1751:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 69


1752:Veno-Echo.cpp ****     if (Tap_Button.FallingEdge())    //when button is let go shift is off
1753:Veno-Echo.cpp ****     {
1754:Veno-Echo.cpp ****         shift = false;
1755:Veno-Echo.cpp ****         buttonstate -= 1;
1756:Veno-Echo.cpp ****         mute = false;
1757:Veno-Echo.cpp ****     }
1758:Veno-Echo.cpp **** 
1759:Veno-Echo.cpp ****     if (Tap_Button.getState())
1760:Veno-Echo.cpp ****     {
1761:Veno-Echo.cpp ****         if ( (System::GetNow() - shiftTime) > shiftWait)
1762:Veno-Echo.cpp ****         {
1763:Veno-Echo.cpp ****             shift = true;   //turn on shift if button held for longer than shiftWait
1764:Veno-Echo.cpp ****         } 
1765:Veno-Echo.cpp ****     }
1766:Veno-Echo.cpp **** 
1767:Veno-Echo.cpp ****     if (buttonstate == 3) //all buttons held
1768:Veno-Echo.cpp ****     {
1769:Veno-Echo.cpp **** 
1770:Veno-Echo.cpp ****             if( ((System::GetNow() - resetTime) > resetWait) )
1771:Veno-Echo.cpp ****             {
1772:Veno-Echo.cpp ****                 Rev_L_sw.toggle();
1773:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
1774:Veno-Echo.cpp ****                 ResetAllLEDs();
1775:Veno-Echo.cpp ****                 //don't let reset or shift update
1776:Veno-Echo.cpp ****                 shift = false;
1777:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
1778:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
1779:Veno-Echo.cpp ****                 resetTime = System::GetNow();
1780:Veno-Echo.cpp ****                 save_flag = true;
1781:Veno-Echo.cpp ****             }
1782:Veno-Echo.cpp ****     } 
1783:Veno-Echo.cpp **** 
1784:Veno-Echo.cpp ****     syncMode = Sync.Pressed() ? true : false;
1785:Veno-Echo.cpp **** }
1786:Veno-Echo.cpp **** 
1787:Veno-Echo.cpp **** void Update_DelayBaseTempo()
1788:Veno-Echo.cpp **** {
1789:Veno-Echo.cpp ****     delayL.SetBaseTempo(BaseTempo.getDelayLength());
1790:Veno-Echo.cpp ****     delayR.SetBaseTempo(BaseTempo.getDelayLength());
1791:Veno-Echo.cpp **** }
1792:Veno-Echo.cpp **** 
1793:Veno-Echo.cpp **** void Update_DelayTempoLEDs()
1794:Veno-Echo.cpp **** {    
1795:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
1796:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
1797:Veno-Echo.cpp ****     DELAYL_DEBUG = delayL.GetDelayTime();
1798:Veno-Echo.cpp ****     DELAYR_DEBUG = delayR.GetDelayTime();
1799:Veno-Echo.cpp **** }
1800:Veno-Echo.cpp **** 
1801:Veno-Echo.cpp **** void Update_BaseTempoLED()
1802:Veno-Echo.cpp **** {
1803:Veno-Echo.cpp ****     tempoLED_BASE.update();
1804:Veno-Echo.cpp **** 
1805:Veno-Echo.cpp ****     static int phaseCounter{};
1806:Veno-Echo.cpp **** 
1807:Veno-Echo.cpp ****     if(tempoLED_BASE.isEOC())
1808:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 70


1809:Veno-Echo.cpp ****         phaseCounter = (phaseCounter + 1) % 6;
1810:Veno-Echo.cpp ****     }
1811:Veno-Echo.cpp **** 
1812:Veno-Echo.cpp ****     float dividedPhase{(tempoLED_BASE.GetPhase() / 6) + ( (TWOPI_F / 6) * phaseCounter ) };
1813:Veno-Echo.cpp ****     //update base phase for both delay lines
1814:Veno-Echo.cpp ****     delayL.SetBasePhase( dividedPhase );
1815:Veno-Echo.cpp ****     delayR.SetBasePhase( dividedPhase );
1816:Veno-Echo.cpp ****     PHASE_DEBUG = dividedPhase;
1817:Veno-Echo.cpp **** }
1818:Veno-Echo.cpp **** 
1819:Veno-Echo.cpp **** 
1820:Veno-Echo.cpp **** void ApplySettings(const Settings &setting)
1821:Veno-Echo.cpp **** {
1822:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
1823:Veno-Echo.cpp ****     {
1824:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(setting.RevLength);
1825:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
1826:Veno-Echo.cpp ****     }
1827:Veno-Echo.cpp ****     else
1828:Veno-Echo.cpp ****     {
1829:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(defaultAltControls.RevLength);
1830:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
1831:Veno-Echo.cpp ****     }
1832:Veno-Echo.cpp **** 
1833:Veno-Echo.cpp ****     if((setting.tapRatio >= 1.0f) && (setting.tapRatio <= 3.0f ))
1834:Veno-Echo.cpp ****     {
1835:Veno-Echo.cpp ****         BaseTempo.setTapRatio(setting.tapRatio);
1836:Veno-Echo.cpp ****     }
1837:Veno-Echo.cpp ****     else
1838:Veno-Echo.cpp ****     {
1839:Veno-Echo.cpp ****         BaseTempo.setTapRatio(defaultAltControls.tapRatio);
1840:Veno-Echo.cpp ****     }
1841:Veno-Echo.cpp **** 
1842:Veno-Echo.cpp ****     if((setting.ModDepth >= minModDepth) && (setting.ModDepth <= maxModDepth))
1843:Veno-Echo.cpp ****     {
1844:Veno-Echo.cpp ****         ModDepth = setting.ModDepth;
1845:Veno-Echo.cpp ****     }
1846:Veno-Echo.cpp ****     else
1847:Veno-Echo.cpp ****     {
1848:Veno-Echo.cpp ****         ModDepth = defaultAltControls.ModDepth;
1849:Veno-Echo.cpp ****     }
1850:Veno-Echo.cpp **** 
1851:Veno-Echo.cpp ****     if((setting.ModFreq >= minModRate) && (setting.ModFreq <= maxModRate))
1852:Veno-Echo.cpp ****     {
1853:Veno-Echo.cpp ****         lfo.SetFreq(setting.ModFreq);
1854:Veno-Echo.cpp ****     }
1855:Veno-Echo.cpp ****     else
1856:Veno-Echo.cpp ****     {
1857:Veno-Echo.cpp ****         lfo.SetFreq(defaultAltControls.ModFreq);
1858:Veno-Echo.cpp ****     }
1859:Veno-Echo.cpp **** 
1860:Veno-Echo.cpp ****     if((setting.LP_Cutoff >= minLPCut) && (setting.LP_Cutoff <= maxLPCut))
1861:Veno-Echo.cpp ****     {
1862:Veno-Echo.cpp ****         LPF_L.SetFreq(setting.LP_Cutoff);
1863:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
1864:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
1865:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 71


1866:Veno-Echo.cpp ****     }
1867:Veno-Echo.cpp ****     else
1868:Veno-Echo.cpp ****     {
1869:Veno-Echo.cpp ****         LPF_L.SetFreq(defaultAltControls.LP_Cutoff);
1870:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
1871:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
1872:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
1873:Veno-Echo.cpp ****     }
1874:Veno-Echo.cpp ****     
1875:Veno-Echo.cpp ****     if((setting.HP_Cutoff >= minHPCut) && (setting.HP_Cutoff <= maxHPCut))
1876:Veno-Echo.cpp ****     {
1877:Veno-Echo.cpp ****         HPF_L.SetFreq(setting.HP_Cutoff);
1878:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
1879:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
1880:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
1881:Veno-Echo.cpp ****     }
1882:Veno-Echo.cpp ****     else
1883:Veno-Echo.cpp ****     {
1884:Veno-Echo.cpp ****         HPF_L.SetFreq(defaultAltControls.HP_Cutoff);
1885:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
1886:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
1887:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
1888:Veno-Echo.cpp **** 
1889:Veno-Echo.cpp ****     }
1890:Veno-Echo.cpp **** 
1891:Veno-Echo.cpp ****     if((setting.Resonance >= minRes) && (setting.Resonance <= maxRes))
1892:Veno-Echo.cpp ****     {
1893:Veno-Echo.cpp ****         LPF_L.SetRes(setting.Resonance);
1894:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
1895:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
1896:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
1897:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
1898:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
1899:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
1900:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
1901:Veno-Echo.cpp ****     }
1902:Veno-Echo.cpp **** 
1903:Veno-Echo.cpp ****     else
1904:Veno-Echo.cpp ****     {
1905:Veno-Echo.cpp ****         LPF_L_post.SetRes(defaultAltControls.Resonance);
1906:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
1907:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
1908:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
1909:Veno-Echo.cpp ****     }
1910:Veno-Echo.cpp **** 
1911:Veno-Echo.cpp ****     if(setting.FilterPrePost < 0.45f)
1912:Veno-Echo.cpp ****     {
1913:Veno-Echo.cpp ****         PostFilters = false;
1914:Veno-Echo.cpp ****     }
1915:Veno-Echo.cpp ****         else if(setting.FilterPrePost > 0.55f)
1916:Veno-Echo.cpp ****     {
1917:Veno-Echo.cpp ****         PostFilters = true;
1918:Veno-Echo.cpp ****     }
1919:Veno-Echo.cpp ****     else
1920:Veno-Echo.cpp ****     {
1921:Veno-Echo.cpp ****         PostFilters = false;    //default to pre filter
1922:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 72


1923:Veno-Echo.cpp **** 
1924:Veno-Echo.cpp ****     //if between min and max tap length
1925:Veno-Echo.cpp ****     if( (setting.tapLength >= static_cast<float> (mintap)) 
1926:Veno-Echo.cpp ****         && (setting.tapLength <= static_cast<float> (maxtap)) )
1927:Veno-Echo.cpp ****     {
1928:Veno-Echo.cpp ****         BaseTempo.setTapLength(setting.tapLength);
1929:Veno-Echo.cpp ****         tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1930:Veno-Echo.cpp ****     }
1931:Veno-Echo.cpp **** 
1932:Veno-Echo.cpp ****     else
1933:Veno-Echo.cpp ****     {
1934:Veno-Echo.cpp ****         BaseTempo.setTapLength(defaultAltControls.tapLength);
1935:Veno-Echo.cpp ****         tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1936:Veno-Echo.cpp ****     }
1937:Veno-Echo.cpp **** 
1938:Veno-Echo.cpp ****     if((setting.L_Rev > 0.49f)) //if more than half
1939:Veno-Echo.cpp ****     {
1940:Veno-Echo.cpp ****         Rev_L_sw.turnON();
1941:Veno-Echo.cpp ****     }
1942:Veno-Echo.cpp ****     else    //default OFF
1943:Veno-Echo.cpp ****     {
1944:Veno-Echo.cpp ****         Rev_L_sw.turnOFF();
1945:Veno-Echo.cpp ****     }
1946:Veno-Echo.cpp **** 
1947:Veno-Echo.cpp ****     if((setting.R_Rev > 0.49f)) //if more than half
1948:Veno-Echo.cpp ****     {
1949:Veno-Echo.cpp ****         Rev_R_sw.turnON();
1950:Veno-Echo.cpp ****     }
1951:Veno-Echo.cpp ****     else    //default OFF
1952:Veno-Echo.cpp ****     {
1953:Veno-Echo.cpp ****         Rev_R_sw.turnOFF();
1954:Veno-Echo.cpp ****     }
1955:Veno-Echo.cpp **** 
1956:Veno-Echo.cpp **** }
1957:Veno-Echo.cpp **** 
1958:Veno-Echo.cpp **** void TurnOnAllLEDs()
1959:Veno-Echo.cpp **** {
1960:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
1961:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
1962:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
1963:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
1964:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
1965:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
1966:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
1967:Veno-Echo.cpp **** }
1968:Veno-Echo.cpp **** 
1969:Veno-Echo.cpp **** void ResetAllLEDs()
1970:Veno-Echo.cpp **** {
1971:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
1972:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
1973:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
1974:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
1975:Veno-Echo.cpp ****     {
1976:Veno-Echo.cpp ****         Rev_L_sw.LED_set(0.0f);
1977:Veno-Echo.cpp ****     }
1978:Veno-Echo.cpp ****     else
1979:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 73


1980:Veno-Echo.cpp ****        Rev_L_sw.LED_set(1.0f);
1981:Veno-Echo.cpp ****     }
1982:Veno-Echo.cpp **** 
1983:Veno-Echo.cpp ****     if(!Rev_R_sw.getState())
1984:Veno-Echo.cpp ****     {
1985:Veno-Echo.cpp ****         Rev_R_sw.LED_set(0.0f);
1986:Veno-Echo.cpp ****     }
1987:Veno-Echo.cpp ****     else
1988:Veno-Echo.cpp ****     {
1989:Veno-Echo.cpp ****         Rev_R_sw.LED_set(1.0f);
1990:Veno-Echo.cpp ****     }
1991:Veno-Echo.cpp ****     
1992:Veno-Echo.cpp ****     LPF_sw.LED_set(0.0f);
1993:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
1994:Veno-Echo.cpp **** }
1995:Veno-Echo.cpp **** 
1996:Veno-Echo.cpp **** float HardLimit(float input, float limit)
1997:Veno-Echo.cpp **** {
1998:Veno-Echo.cpp ****     float returnval{};
1999:Veno-Echo.cpp ****     if (input > limit)
2000:Veno-Echo.cpp ****         returnval = limit;
2001:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
2002:Veno-Echo.cpp ****         returnval = limit * -1.0f;
2003:Veno-Echo.cpp ****     else
2004:Veno-Echo.cpp ****         returnval = input;
2005:Veno-Echo.cpp **** 
2006:Veno-Echo.cpp ****     return returnval;   
2007:Veno-Echo.cpp **** }
2008:Veno-Echo.cpp **** 
2009:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 1143              		.loc 20 2009 7 view .LVU239
 1144              	.LBB1001:
2010:Veno-Echo.cpp **** {
2011:Veno-Echo.cpp ****     float output{};
 1145              		.loc 20 2011 5 view .LVU240
2012:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1146              		.loc 20 2012 5 view .LVU241
 1147              	.LBE1001:
 1148              	.LBE1000:
 896:Veno-Echo.cpp ****         }
 1149              		.loc 20 896 36 is_stmt 0 view .LVU242
 1150 0042 6E49     		ldr	r1, .L75+28
 1151              	.LBB1005:
 1152              	.LBB1002:
 1153              		.loc 20 2012 39 view .LVU243
 1154 0044 F7EE006A 		vmov.f32	s13, #1.0e+0
 1155              		.loc 20 2012 49 view .LVU244
 1156 0048 F6EE005A 		vmov.f32	s11, #5.0e-1
 1157              	.LBE1002:
 1158              	.LBE1005:
 896:Veno-Echo.cpp ****         }
 1159              		.loc 20 896 36 view .LVU245
 1160 004c 6C4A     		ldr	r2, .L75+32
 1161              	.LBB1006:
 1162              	.LBB1003:
 1163              		.loc 20 2012 39 view .LVU246
 1164 004e 91ED007A 		vldr.32	s14, [r1]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 74


 1165              		.loc 20 2012 12 view .LVU247
 1166 0052 B0EE006A 		vmov.f32	s12, #2.0e+0
 1167 0056 D2ED007A 		vldr.32	s15, [r2]
 1168              		.loc 20 2012 39 view .LVU248
 1169 005a 36EEC77A 		vsub.f32	s14, s13, s14
 1170              		.loc 20 2012 49 view .LVU249
 1171 005e 37EE657A 		vsub.f32	s14, s14, s11
 1172              		.loc 20 2012 12 view .LVU250
 1173 0062 E7EE067A 		vfma.f32	s15, s14, s12
 1174              	.LVL43:
2013:Veno-Echo.cpp **** 
2014:Veno-Echo.cpp ****     if(output < 0.0f)
 1175              		.loc 20 2014 5 is_stmt 1 view .LVU251
 1176 0066 F5EEC07A 		vcmpe.f32	s15, #0
 1177 006a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1178 006e 00F1B180 		bmi	.L73
2015:Veno-Echo.cpp ****     {
2016:Veno-Echo.cpp ****         output = 0.0f;
2017:Veno-Echo.cpp ****     }
2018:Veno-Echo.cpp **** 
2019:Veno-Echo.cpp ****     if(output > 1.0f)
 1179              		.loc 20 2019 5 view .LVU252
2020:Veno-Echo.cpp ****     {
2021:Veno-Echo.cpp ****         output = 1.0f;
 1180              		.loc 20 2021 16 is_stmt 0 view .LVU253
 1181 0072 F4EE667A 		vcmp.f32	s15, s13
 1182 0076 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1183 007a 76FEA77A 		vselgt.f32	s15, s13, s15
 1184              	.LVL44:
 1185              	.L50:
 1186              		.loc 20 2021 16 view .LVU254
 1187              	.LBE1003:
 1188              	.LBE1006:
 899:Veno-Echo.cpp ****         {
 1189              		.loc 20 899 9 is_stmt 1 view .LVU255
 1190 007e 93B9     		cbnz	r3, .L42
 901:Veno-Echo.cpp ****             {
 1191              		.loc 20 901 13 view .LVU256
 901:Veno-Echo.cpp ****             {
 1192              		.loc 20 901 35 is_stmt 0 view .LVU257
 1193 0080 604B     		ldr	r3, .L75+36
 1194 0082 B0EE670A 		vmov.f32	s0, s15
 1195              	.LVL45:
 901:Veno-Echo.cpp ****             {
 1196              		.loc 20 901 35 view .LVU258
 1197 0086 6048     		ldr	r0, .L75+40
 1198 0088 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1199              	.LBE1018:
 1200              	.LBE1073:
 941:Veno-Echo.cpp **** 
 1201              		.loc 20 941 1 view .LVU259
 1202 008a BDE81040 		pop	{r4, lr}
 1203              		.cfi_remember_state
 1204              		.cfi_restore 14
 1205              		.cfi_restore 4
 1206              		.cfi_def_cfa_offset 0
 1207              	.LBB1074:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 75


 1208              	.LBB1019:
 901:Veno-Echo.cpp ****             {
 1209              		.loc 20 901 35 view .LVU260
 1210 008e FFF7FEBF 		b	_ZN10DelayMulti12SetDelayTimeEfb
 1211              	.LVL46:
 1212              	.L43:
 1213              		.cfi_restore_state
 901:Veno-Echo.cpp ****             {
 1214              		.loc 20 901 35 view .LVU261
 1215              	.LBE1019:
 1216              	.LBB1020:
 910:Veno-Echo.cpp **** 
 1217              		.loc 20 910 9 is_stmt 1 view .LVU262
 912:Veno-Echo.cpp ****         {
 1218              		.loc 20 912 9 view .LVU263
 1219 0092 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1220 0094 002B     		cmp	r3, #0
 1221 0096 3CD1     		bne	.L53
 914:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1222              		.loc 20 914 13 view .LVU264
 914:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1223              		.loc 20 914 23 is_stmt 0 view .LVU265
 1224 0098 0124     		movs	r4, #1
 915:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1225              		.loc 20 915 34 view .LVU266
 1226 009a 5C48     		ldr	r0, .L75+44
 916:Veno-Echo.cpp ****         }
 1227              		.loc 20 916 31 view .LVU267
 1228 009c 5C49     		ldr	r1, .L75+48
 914:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1229              		.loc 20 914 23 view .LVU268
 1230 009e 1470     		strb	r4, [r2]
 915:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1231              		.loc 20 915 13 is_stmt 1 view .LVU269
 915:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1232              		.loc 20 915 34 is_stmt 0 view .LVU270
 1233 00a0 0370     		strb	r3, [r0]
 916:Veno-Echo.cpp ****         }
 1234              		.loc 20 916 13 is_stmt 1 view .LVU271
 916:Veno-Echo.cpp ****         }
 1235              		.loc 20 916 31 is_stmt 0 view .LVU272
 1236 00a2 81ED000A 		vstr.32	s0, [r1]
 1237              	.L42:
 916:Veno-Echo.cpp ****         }
 1238              		.loc 20 916 31 view .LVU273
 1239              	.LBE1020:
 1240              	.LBE1074:
 941:Veno-Echo.cpp **** 
 1241              		.loc 20 941 1 view .LVU274
 1242 00a6 10BD     		pop	{r4, pc}
 1243              	.L44:
 1244              	.LBB1075:
 1245              	.LBB1068:
 877:Veno-Echo.cpp ****             {
 1246              		.loc 20 877 13 is_stmt 1 view .LVU275
 877:Veno-Echo.cpp ****             {
 1247              		.loc 20 877 16 is_stmt 0 view .LVU276
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 76


 1248 00a8 524A     		ldr	r2, .L75+20
 877:Veno-Echo.cpp ****             {
 1249              		.loc 20 877 13 view .LVU277
 1250 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1251 00ac 79B9     		cbnz	r1, .L46
 879:Veno-Echo.cpp ****                 {
 1252              		.loc 20 879 17 is_stmt 1 view .LVU278
 1253              	.LVL47:
 1254              	.LBB1007:
 1255              	.LBI1007:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1256              		.loc 21 75 3 view .LVU279
 1257              	.LBB1008:
 1258              		.loc 21 76 5 view .LVU280
 1259              		.loc 21 76 5 is_stmt 0 view .LVU281
 1260              	.LBE1008:
 1261              	.LBE1007:
 879:Veno-Echo.cpp ****                 {
 1262              		.loc 20 879 23 view .LVU282
 1263 00ae 5249     		ldr	r1, .L75+24
 879:Veno-Echo.cpp ****                 {
 1264              		.loc 20 879 17 view .LVU283
 1265 00b0 9FED587A 		vldr.32	s14, .L75+52
 879:Veno-Echo.cpp ****                 {
 1266              		.loc 20 879 23 view .LVU284
 1267 00b4 D1ED007A 		vldr.32	s15, [r1]
 1268 00b8 70EE677A 		vsub.f32	s15, s0, s15
 1269              	.LBB1010:
 1270              	.LBB1009:
 1271              		.loc 21 76 31 view .LVU285
 1272 00bc F0EEE77A 		vabs.f32	s15, s15
 1273              	.LBE1009:
 1274              	.LBE1010:
 879:Veno-Echo.cpp ****                 {
 1275              		.loc 20 879 17 view .LVU286
 1276 00c0 F4EEC77A 		vcmpe.f32	s15, s14
 1277 00c4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1278 00c8 BBDD     		ble	.L45
 881:Veno-Echo.cpp ****                 }
 1279              		.loc 20 881 21 is_stmt 1 view .LVU287
 881:Veno-Echo.cpp ****                 }
 1280              		.loc 20 881 39 is_stmt 0 view .LVU288
 1281 00ca 0121     		movs	r1, #1
 1282 00cc 1170     		strb	r1, [r2]
 1283              	.L46:
 886:Veno-Echo.cpp **** 
 1284              		.loc 20 886 9 is_stmt 1 view .LVU289
 1285              	.LVL48:
 888:Veno-Echo.cpp ****         {
 1286              		.loc 20 888 9 view .LVU290
 890:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 1287              		.loc 20 890 13 view .LVU291
 1288              	.LBB1011:
 1289              	.LBI1011:
2009:Veno-Echo.cpp **** {
 1290              		.loc 20 2009 7 view .LVU292
 1291              	.LBB1012:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 77


2011:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1292              		.loc 20 2011 5 view .LVU293
2012:Veno-Echo.cpp **** 
 1293              		.loc 20 2012 5 view .LVU294
 1294              	.LBE1012:
 1295              	.LBE1011:
 890:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 1296              		.loc 20 890 36 is_stmt 0 view .LVU295
 1297 00ce 4B4A     		ldr	r2, .L75+28
 1298              	.LBB1015:
 1299              	.LBB1013:
2012:Veno-Echo.cpp **** 
 1300              		.loc 20 2012 39 view .LVU296
 1301 00d0 B7EE007A 		vmov.f32	s14, #1.0e+0
2012:Veno-Echo.cpp **** 
 1302              		.loc 20 2012 49 view .LVU297
 1303 00d4 B6EE006A 		vmov.f32	s12, #5.0e-1
2012:Veno-Echo.cpp **** 
 1304              		.loc 20 2012 39 view .LVU298
 1305 00d8 D2ED007A 		vldr.32	s15, [r2]
2012:Veno-Echo.cpp **** 
 1306              		.loc 20 2012 12 view .LVU299
 1307 00dc F0EE006A 		vmov.f32	s13, #2.0e+0
2012:Veno-Echo.cpp **** 
 1308              		.loc 20 2012 39 view .LVU300
 1309 00e0 77EE677A 		vsub.f32	s15, s14, s15
2012:Veno-Echo.cpp **** 
 1310              		.loc 20 2012 49 view .LVU301
 1311 00e4 77EEC67A 		vsub.f32	s15, s15, s12
2012:Veno-Echo.cpp **** 
 1312              		.loc 20 2012 12 view .LVU302
 1313 00e8 B0EE406A 		vmov.f32	s12, s0
 1314 00ec A7EEA66A 		vfma.f32	s12, s15, s13
2014:Veno-Echo.cpp ****     {
 1315              		.loc 20 2014 5 view .LVU303
 1316 00f0 B5EEC06A 		vcmpe.f32	s12, #0
2012:Veno-Echo.cpp **** 
 1317              		.loc 20 2012 12 view .LVU304
 1318 00f4 F0EE467A 		vmov.f32	s15, s12
 1319              	.LVL49:
2014:Veno-Echo.cpp ****     {
 1320              		.loc 20 2014 5 is_stmt 1 view .LVU305
 1321 00f8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1322 00fc 6DD4     		bmi	.L74
2019:Veno-Echo.cpp ****     {
 1323              		.loc 20 2019 5 view .LVU306
 1324              		.loc 20 2021 16 is_stmt 0 view .LVU307
 1325 00fe F4EE477A 		vcmp.f32	s15, s14
 1326 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1327 0106 77FE277A 		vselgt.f32	s15, s14, s15
 1328              	.L48:
 1329              	.LVL50:
2022:Veno-Echo.cpp ****     }
2023:Veno-Echo.cpp **** 
2024:Veno-Echo.cpp ****     return output;
 1330              		.loc 20 2024 5 is_stmt 1 view .LVU308
 1331              		.loc 20 2024 5 is_stmt 0 view .LVU309
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 78


 1332              	.LBE1013:
 1333              	.LBE1015:
 891:Veno-Echo.cpp ****         }
 1334              		.loc 20 891 13 is_stmt 1 view .LVU310
 891:Veno-Echo.cpp ****         }
 1335              		.loc 20 891 29 is_stmt 0 view .LVU311
 1336 010a 3D4A     		ldr	r2, .L75+32
 1337 010c 82ED000A 		vstr.32	s0, [r2]
 1338 0110 B5E7     		b	.L50
 1339              	.LVL51:
 1340              	.L53:
 891:Veno-Echo.cpp ****         }
 1341              		.loc 20 891 29 view .LVU312
 1342              	.LBE1068:
 1343              	.LBB1069:
 921:Veno-Echo.cpp ****             {
 1344              		.loc 20 921 13 is_stmt 1 view .LVU313
 921:Veno-Echo.cpp ****             {
 1345              		.loc 20 921 16 is_stmt 0 view .LVU314
 1346 0112 3E4B     		ldr	r3, .L75+44
 921:Veno-Echo.cpp ****             {
 1347              		.loc 20 921 13 view .LVU315
 1348 0114 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1349 0116 7AB9     		cbnz	r2, .L54
 923:Veno-Echo.cpp ****                 {
 1350              		.loc 20 923 17 is_stmt 1 view .LVU316
 1351              	.LVL52:
 1352              	.LBB1021:
 1353              	.LBI1021:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1354              		.loc 21 75 3 view .LVU317
 1355              	.LBB1022:
 1356              		.loc 21 76 5 view .LVU318
 1357              		.loc 21 76 5 is_stmt 0 view .LVU319
 1358              	.LBE1022:
 1359              	.LBE1021:
 923:Veno-Echo.cpp ****                 {
 1360              		.loc 20 923 23 view .LVU320
 1361 0118 3D4A     		ldr	r2, .L75+48
 923:Veno-Echo.cpp ****                 {
 1362              		.loc 20 923 17 view .LVU321
 1363 011a 9FED3E7A 		vldr.32	s14, .L75+52
 923:Veno-Echo.cpp ****                 {
 1364              		.loc 20 923 23 view .LVU322
 1365 011e D2ED007A 		vldr.32	s15, [r2]
 1366 0122 70EE677A 		vsub.f32	s15, s0, s15
 1367              	.LBB1024:
 1368              	.LBB1023:
 1369              		.loc 21 76 31 view .LVU323
 1370 0126 F0EEE77A 		vabs.f32	s15, s15
 1371              	.LBE1023:
 1372              	.LBE1024:
 923:Veno-Echo.cpp ****                 {
 1373              		.loc 20 923 17 view .LVU324
 1374 012a F4EEC77A 		vcmpe.f32	s15, s14
 1375 012e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1376 0132 B8DD     		ble	.L42
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 79


 925:Veno-Echo.cpp ****                 }
 1377              		.loc 20 925 21 is_stmt 1 view .LVU325
 925:Veno-Echo.cpp ****                 }
 1378              		.loc 20 925 42 is_stmt 0 view .LVU326
 1379 0134 0122     		movs	r2, #1
 1380 0136 1A70     		strb	r2, [r3]
 1381              	.L54:
 930:Veno-Echo.cpp ****         {
 1382              		.loc 20 930 9 is_stmt 1 view .LVU327
 1383              	.LBB1025:
 932:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 1384              		.loc 20 932 13 view .LVU328
 932:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 1385              		.loc 20 932 38 is_stmt 0 view .LVU329
 1386 0138 0120     		movs	r0, #1
 1387 013a 9FED371A 		vldr.32	s2, .L75+56
 1388 013e DFED370A 		vldr.32	s1, .L75+60
 1389 0142 FFF7FEFF 		bl	_Z5scalefff9CurveType
 1390              	.LVL53:
 1391              	.LBB1026:
 1392              	.LBB1027:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1393              		.loc 20 70 28 view .LVU330
 1394 0146 364B     		ldr	r3, .L75+64
 1395              	.LVL54:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1396              		.loc 20 70 28 view .LVU331
 1397              	.LBE1027:
 1398              	.LBE1026:
 933:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 1399              		.loc 20 933 13 is_stmt 1 view .LVU332
 1400              	.LBB1041:
 1401              	.LBI1026:
  68:Veno-Echo.cpp ****     {
 1402              		.loc 20 68 10 view .LVU333
 1403              	.LBB1039:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1404              		.loc 20 70 9 view .LVU334
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1405              		.loc 20 70 53 is_stmt 0 view .LVU335
 1406 0148 DFED326A 		vldr.32	s13, .L75+52
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1407              		.loc 20 70 28 view .LVU336
 1408 014c D3ED017A 		vldr.32	s15, [r3, #4]
 1409              	.LVL55:
 1410              	.LBB1028:
 1411              	.LBI1028:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1412              		.loc 21 75 3 is_stmt 1 view .LVU337
 1413              	.LBB1029:
 1414              		.loc 21 76 5 view .LVU338
 1415              		.loc 21 76 5 is_stmt 0 view .LVU339
 1416              	.LBE1029:
 1417              	.LBE1028:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1418              		.loc 20 70 15 view .LVU340
 1419 0150 30EE677A 		vsub.f32	s14, s0, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 80


  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1420              		.loc 20 70 53 view .LVU341
 1421 0154 67EEA67A 		vmul.f32	s15, s15, s13
 1422              	.LBB1031:
 1423              	.LBB1030:
 1424              		.loc 21 76 31 view .LVU342
 1425 0158 B0EEC77A 		vabs.f32	s14, s14
 1426              	.LBE1030:
 1427              	.LBE1031:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1428              		.loc 20 70 9 view .LVU343
 1429 015c B4EEE77A 		vcmpe.f32	s14, s15
 1430 0160 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1431 0164 0DDD     		ble	.L62
  74:Veno-Echo.cpp ****             //del -> Reset();
 1432              		.loc 20 74 29 view .LVU344
 1433 0166 FCEEC07A 		vcvt.u32.f32	s15, s0
 1434              	.LBB1032:
 1435              	.LBB1033:
 1436              		.loc 19 72 9 view .LVU345
 1437 016a 2E4C     		ldr	r4, .L75+68
 1438              	.LBE1033:
 1439              	.LBE1032:
 1440              	.LBE1039:
 1441              	.LBE1041:
 933:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 1442              		.loc 20 933 37 view .LVU346
 1443 016c 1968     		ldr	r1, [r3]
 1444              	.LBB1042:
 1445              	.LBB1040:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1446              		.loc 20 73 13 is_stmt 1 view .LVU347
 1447              	.LBB1036:
 1448              	.LBB1034:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1449              		.loc 19 71 9 is_stmt 0 view .LVU348
 1450 016e 0020     		movs	r0, #0
 1451              	.LBE1034:
 1452              	.LBE1036:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1453              		.loc 20 73 27 view .LVU349
 1454 0170 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 1455              		.loc 20 74 13 is_stmt 1 view .LVU350
 1456              	.LVL56:
 1457              	.LBB1037:
 1458              	.LBI1032:
  69:delayline_reverse.h ****     {
 1459              		.loc 19 69 17 view .LVU351
  69:delayline_reverse.h ****     {
 1460              		.loc 19 69 17 is_stmt 0 view .LVU352
 1461              	.LBE1037:
  74:Veno-Echo.cpp ****             //del -> Reset();
 1462              		.loc 20 74 29 view .LVU353
 1463 0174 17EE902A 		vmov	r2, s15	@ int
 1464              	.LBB1038:
 1465              	.LBB1035:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 81


  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1466              		.loc 19 71 9 view .LVU354
 1467 0178 0860     		str	r0, [r1]	@ float
 1468              		.loc 19 72 9 view .LVU355
 1469 017a A242     		cmp	r2, r4
 1470 017c 28BF     		it	cs
 1471 017e 2246     		movcs	r2, r4
 1472 0180 0A61     		str	r2, [r1, #16]
 1473              	.LVL57:
 1474              	.L62:
 1475              		.loc 19 72 9 view .LVU356
 1476              	.LBE1035:
 1477              	.LBE1038:
 1478              	.LBE1040:
 1479              	.LBE1042:
 934:Veno-Echo.cpp ****             //save setting:
 1480              		.loc 20 934 13 is_stmt 1 view .LVU357
 1481              	.LBB1043:
 1482              	.LBI1043:
  68:Veno-Echo.cpp ****     {
 1483              		.loc 20 68 10 view .LVU358
 1484              	.LBB1044:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1485              		.loc 20 70 9 view .LVU359
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1486              		.loc 20 70 28 is_stmt 0 view .LVU360
 1487 0182 294B     		ldr	r3, .L75+72
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1488              		.loc 20 70 53 view .LVU361
 1489 0184 DFED236A 		vldr.32	s13, .L75+52
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1490              		.loc 20 70 28 view .LVU362
 1491 0188 D3ED017A 		vldr.32	s15, [r3, #4]
 1492              	.LVL58:
 1493              	.LBB1045:
 1494              	.LBI1045:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1495              		.loc 21 75 3 is_stmt 1 view .LVU363
 1496              	.LBB1046:
 1497              		.loc 21 76 5 view .LVU364
 1498              		.loc 21 76 5 is_stmt 0 view .LVU365
 1499              	.LBE1046:
 1500              	.LBE1045:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1501              		.loc 20 70 15 view .LVU366
 1502 018c 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1503              		.loc 20 70 53 view .LVU367
 1504 0190 67EEA67A 		vmul.f32	s15, s15, s13
 1505              	.LBB1048:
 1506              	.LBB1047:
 1507              		.loc 21 76 31 view .LVU368
 1508 0194 B0EEC77A 		vabs.f32	s14, s14
 1509              	.LBE1047:
 1510              	.LBE1048:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1511              		.loc 20 70 9 view .LVU369
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 82


 1512 0198 B4EEE77A 		vcmpe.f32	s14, s15
 1513 019c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1514 01a0 0DDD     		ble	.L56
  74:Veno-Echo.cpp ****             //del -> Reset();
 1515              		.loc 20 74 29 view .LVU370
 1516 01a2 FCEEC07A 		vcvt.u32.f32	s15, s0
 1517              	.LBB1049:
 1518              	.LBB1050:
 1519              		.loc 19 72 9 view .LVU371
 1520 01a6 1F4C     		ldr	r4, .L75+68
 1521              	.LBE1050:
 1522              	.LBE1049:
 1523              	.LBE1044:
 1524              	.LBE1043:
 934:Veno-Echo.cpp ****             //save setting:
 1525              		.loc 20 934 37 view .LVU372
 1526 01a8 1968     		ldr	r1, [r3]
 1527              	.LBB1057:
 1528              	.LBB1056:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1529              		.loc 20 73 13 is_stmt 1 view .LVU373
 1530              	.LBB1053:
 1531              	.LBB1051:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1532              		.loc 19 71 9 is_stmt 0 view .LVU374
 1533 01aa 0020     		movs	r0, #0
 1534              	.LBE1051:
 1535              	.LBE1053:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1536              		.loc 20 73 27 view .LVU375
 1537 01ac 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 1538              		.loc 20 74 13 is_stmt 1 view .LVU376
 1539              	.LVL59:
 1540              	.LBB1054:
 1541              	.LBI1049:
  69:delayline_reverse.h ****     {
 1542              		.loc 19 69 17 view .LVU377
  69:delayline_reverse.h ****     {
 1543              		.loc 19 69 17 is_stmt 0 view .LVU378
 1544              	.LBE1054:
  74:Veno-Echo.cpp ****             //del -> Reset();
 1545              		.loc 20 74 29 view .LVU379
 1546 01b0 17EE902A 		vmov	r2, s15	@ int
 1547              	.LBB1055:
 1548              	.LBB1052:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1549              		.loc 19 71 9 view .LVU380
 1550 01b4 0860     		str	r0, [r1]	@ float
 1551              		.loc 19 72 9 view .LVU381
 1552 01b6 A242     		cmp	r2, r4
 1553 01b8 28BF     		it	cs
 1554 01ba 2246     		movcs	r2, r4
 1555 01bc 0A61     		str	r2, [r1, #16]
 1556              	.LVL60:
 1557              	.L56:
 1558              		.loc 19 72 9 view .LVU382
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 83


 1559              	.LBE1052:
 1560              	.LBE1055:
 1561              	.LBE1056:
 1562              	.LBE1057:
 936:Veno-Echo.cpp ****             save_flag = true;
 1563              		.loc 20 936 13 is_stmt 1 view .LVU383
 936:Veno-Echo.cpp ****             save_flag = true;
 1564              		.loc 20 936 35 is_stmt 0 view .LVU384
 1565 01be 1B49     		ldr	r1, .L75+76
 1566              	.LBB1058:
 1567              	.LBB1059:
 1568              	.LBB1060:
 1569              	.LBB1061:
 1570              	.LBB1062:
 1571              		.file 22 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** /** @file bits/atomic_base.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  Do not attempt to use it directly. @headername{atomic}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ATOMIC_BASE_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ATOMIC_BASE_H 1
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <stdint.h>
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/atomic_lockfree_defines.h>
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 84


  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** namespace std _GLIBCXX_VISIBILITY(default)
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** {
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @defgroup atomics Atomics
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * Components for performing atomic operations.
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @{
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    */
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Enumeration for memory_order
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __cplusplus > 201703L
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum class memory_order : int
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       relaxed,
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       consume,
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acquire,
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       release,
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acq_rel,
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       seq_cst
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_relaxed = memory_order::relaxed;
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_consume = memory_order::consume;
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acquire = memory_order::acquire;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_release = memory_order::release;
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acq_rel = memory_order::acq_rel;
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_seq_cst = memory_order::seq_cst;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   typedef enum memory_order
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_relaxed,
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_consume,
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acquire,
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_release,
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acq_rel,
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_seq_cst
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     } memory_order;
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum __memory_order_modifier
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_mask          = 0x0ffff,
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_modifier_mask = 0xffff0000,
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_acquire   = 0x10000,
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_release   = 0x20000
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator|(memory_order __m, __memory_order_modifier __mod)
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) | int(__mod));
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator&(memory_order __m, __memory_order_modifier __mod)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 85


 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) & int(__mod));
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Drop release ordering as per [atomics.types.operations.req]/21
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order2(memory_order __m) noexcept
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return __m == memory_order_acq_rel ? memory_order_acquire
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __m == memory_order_release ? memory_order_relaxed : __m;
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order(memory_order __m) noexcept
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(__cmpexch_failure_order2(__m & __memory_order_mask)
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       | __memory_order_modifier(__m & __memory_order_modifier_mask));
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_thread_fence(memory_order __m) noexcept
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_thread_fence(int(__m)); }
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_signal_fence(memory_order __m) noexcept
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_signal_fence(int(__m)); }
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// kill_dependency
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     inline _Tp
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     kill_dependency(_Tp __y) noexcept
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _Tp __ret(__y);
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __ret;
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Base types for atomics.
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _IntTp>
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base;
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_VAR_INIT(_VI) { _VI }
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic;
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic<_Tp*>;
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     /* The target's "set" value for test-and-set may not be exactly 1.  */
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __GCC_ATOMIC_TEST_AND_SET_TRUEVAL == 1
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef bool __atomic_flag_data_type;
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef unsigned char __atomic_flag_data_type;
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 86


 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  @brief Base type for atomic_flag.
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  Base type is POD with data, allowing atomic_flag to derive from
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  it and meet the standard layout type requirement. In addition to
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  compatibility with a C interface, this allows different
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  implementations of atomic_flag to use the same atomic operation
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  functions, via a standard conversion to the __atomic_flag_base
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  argument.
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   */
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_BEGIN_EXTERN_C
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct __atomic_flag_base
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     __atomic_flag_data_type _M_i;
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_END_EXTERN_C
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_FLAG_INIT { 0 }
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// atomic_flag
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct atomic_flag : public __atomic_flag_base
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag() noexcept = default;
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     ~atomic_flag() noexcept = default;
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag(const atomic_flag&) = delete;
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) = delete;
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) volatile = delete;
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     // Conversion to ATOMIC_FLAG_INIT.
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     constexpr atomic_flag(bool __i) noexcept
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __atomic_flag_base{ _S_init(__i) }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { }
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) noexcept
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) volatile noexcept
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) noexcept
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 87


 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) volatile noexcept
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   private:
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     static constexpr __atomic_flag_data_type
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _S_init(bool __i)
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { return __i ? __GCC_ATOMIC_TEST_AND_SET_TRUEVAL : 0; }
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Base class for atomic integrals.
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // For each of the integral types, define atomic_[integral type] struct
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_bool     bool
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char     char
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_schar    signed char
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uchar    unsigned char
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_short    short
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ushort   unsigned short
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_int      int
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uint     unsigned int
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_long     long
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ulong    unsigned long
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_llong    long long
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ullong   unsigned long long
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char8_t  char8_t
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char16_t char16_t
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char32_t char32_t
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_wchar_t  wchar_t
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // NB: Assuming _ITp is an integral scalar type that is 1, 2, 4, or
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // 8 bytes, since that is what GCC built-in functions for atomic
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // memory access expect.
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _ITp>
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using value_type = _ITp;
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using difference_type = value_type;
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     private:
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       typedef _ITp 	__int_type;
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       static constexpr int _S_alignment =
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	sizeof(_ITp) > alignof(_ITp) ? sizeof(_ITp) : alignof(_ITp);
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       alignas(_S_alignment) __int_type _M_i;
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 88


 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     public:
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base() noexcept = default;
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       ~__atomic_base() noexcept = default;
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base(const __atomic_base&) = delete;
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) = delete;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) volatile = delete;
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       // Requires __int_type convertible to _M_i.
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       constexpr __atomic_base(__int_type __i) noexcept : _M_i (__i) { }
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const noexcept
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const volatile noexcept
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) noexcept
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) volatile noexcept
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) noexcept
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) volatile noexcept
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) noexcept
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) volatile noexcept
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() noexcept
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() volatile noexcept
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() noexcept
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 89


 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() volatile noexcept
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) noexcept
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) volatile noexcept
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) noexcept
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) volatile noexcept
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) noexcept
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) volatile noexcept
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) noexcept
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) volatile noexcept
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) noexcept
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) volatile noexcept
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const noexcept
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const volatile noexcept
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 90


 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i, memory_order __m = memory_order_seq_cst) noexcept
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 1572              		.loc 22 397 18 view .LVU385
 1573 01c0 0122     		movs	r2, #1
 1574 01c2 1B4B     		ldr	r3, .L75+80
 1575              	.LBE1062:
 1576              	.LBE1061:
 1577              	.LBE1060:
 1578              	.LBE1059:
 1579              	.LBE1058:
 936:Veno-Echo.cpp ****             save_flag = true;
 1580              		.loc 20 936 35 view .LVU386
 1581 01c4 81ED000A 		vstr.32	s0, [r1]
 937:Veno-Echo.cpp ****         }
 1582              		.loc 20 937 13 is_stmt 1 view .LVU387
 1583              	.LVL61:
 1584              	.LBB1067:
 1585              	.LBI1058:
 1586              		.file 23 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** /** @file include/atomic
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  *  This is a Standard C++ Library header.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 91


  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Based on "C++ Atomic Types and Operations" by Hans Boehm and Lawrence Crowl.
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2427.html
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #ifndef _GLIBCXX_ATOMIC
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #define _GLIBCXX_ATOMIC 1
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #pragma GCC system_header
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus < 201103L
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # include <bits/c++0x_warning.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #else
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/atomic_base.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/move.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** namespace std _GLIBCXX_VISIBILITY(default)
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** {
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /**
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @addtogroup atomics
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @{
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    */
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus >= 201703L
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # define __cpp_lib_atomic_is_always_lock_free 201603
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #endif
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<typename _Tp>
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     struct atomic;
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /// atomic<bool>
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   // NB: No operators or fetch-operations for this type.
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<>
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   struct atomic<bool>
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   {
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     using value_type = bool;
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   private:
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     __atomic_base<bool>	_M_base;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   public:
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic() noexcept = default;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     ~atomic() noexcept = default;
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic(const atomic&) = delete;
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) = delete;
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) volatile = delete;
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     constexpr atomic(bool __i) noexcept : _M_base(__i) { }
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) noexcept
 1587              		.loc 23 80 5 view .LVU388
 1588              	.LBB1066:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 1589              		.loc 23 81 7 view .LVU389
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 92


 1590              	.LBB1065:
 1591              	.LBI1060:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 1592              		.loc 22 288 7 view .LVU390
 1593              	.LBB1064:
 1594              	.LBI1061:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 1595              		.loc 22 390 7 view .LVU391
 1596              	.LBB1063:
 1597              		.loc 22 397 18 is_stmt 0 view .LVU392
 1598 01c8 BFF35B8F 		dmb	ish
 1599 01cc 1A70     		strb	r2, [r3]
 1600 01ce BFF35B8F 		dmb	ish
 1601              	.LVL62:
 1602              		.loc 22 397 18 view .LVU393
 1603              	.LBE1063:
 1604              	.LBE1064:
 1605              	.LBE1065:
 1606              	.LBE1066:
 1607              	.LBE1067:
 1608              	.LBE1025:
 1609              	.LBE1069:
 1610              	.LBE1075:
 941:Veno-Echo.cpp **** 
 1611              		.loc 20 941 1 view .LVU394
 1612 01d2 10BD     		pop	{r4, pc}
 1613              	.LVL63:
 1614              	.L73:
 1615              	.LBB1076:
 1616              	.LBB1070:
 1617              	.LBB1016:
 1618              	.LBB1004:
2016:Veno-Echo.cpp ****     }
 1619              		.loc 20 2016 16 view .LVU395
 1620 01d4 DFED177A 		vldr.32	s15, .L75+84
 1621              	.LVL64:
2016:Veno-Echo.cpp ****     }
 1622              		.loc 20 2016 16 view .LVU396
 1623 01d8 51E7     		b	.L50
 1624              	.LVL65:
 1625              	.L74:
2016:Veno-Echo.cpp ****     }
 1626              		.loc 20 2016 16 view .LVU397
 1627              	.LBE1004:
 1628              	.LBE1016:
 1629              	.LBB1017:
 1630              	.LBB1014:
 1631 01da DFED167A 		vldr.32	s15, .L75+84
 1632 01de 94E7     		b	.L48
 1633              	.L76:
 1634              		.align	2
 1635              	.L75:
 1636 01e0 18000000 		.word	.LANCHOR4+24
 1637 01e4 00000000 		.word	.LANCHOR6
 1638 01e8 ABAAAA2A 		.word	715827883
 1639 01ec 00000000 		.word	.LANCHOR7
 1640 01f0 00000000 		.word	.LANCHOR8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 93


 1641 01f4 00000000 		.word	.LANCHOR9
 1642 01f8 00000000 		.word	.LANCHOR10
 1643 01fc 00000000 		.word	.LANCHOR5
 1644 0200 00000000 		.word	.LANCHOR11
 1645 0204 00000000 		.word	.LANCHOR12
 1646 0208 00000000 		.word	.LANCHOR0
 1647 020c 00000000 		.word	.LANCHOR13
 1648 0210 00000000 		.word	.LANCHOR14
 1649 0214 0AD7A33B 		.word	1000593162
 1650 0218 0050C346 		.word	1187205120
 1651 021c 00606A48 		.word	1214930944
 1652 0220 00000000 		.word	.LANCHOR2
 1653 0224 BF270900 		.word	599999
 1654 0228 00000000 		.word	.LANCHOR3
 1655 022c 00000000 		.word	.LANCHOR15
 1656 0230 00000000 		.word	.LANCHOR16
 1657 0234 00000000 		.word	0
 1658              	.LBE1014:
 1659              	.LBE1017:
 1660              	.LBE1070:
 1661              	.LBE1076:
 1662              		.cfi_endproc
 1663              	.LFE4313:
 1665              		.section	.text._Z20Update_DelayTimeR_CVv,"ax",%progbits
 1666              		.align	1
 1667              		.p2align 2,,3
 1668              		.global	_Z20Update_DelayTimeR_CVv
 1669              		.syntax unified
 1670              		.thumb
 1671              		.thumb_func
 1672              		.fpu fpv5-d16
 1674              	_Z20Update_DelayTimeR_CVv:
 1675              	.LFB4314:
 944:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1676              		.loc 20 944 1 is_stmt 1 view -0
 1677              		.cfi_startproc
 1678              		@ args = 0, pretend = 0, frame = 0
 1679              		@ frame_needed = 0, uses_anonymous_args = 0
 945:Veno-Echo.cpp **** }
 1680              		.loc 20 945 5 view .LVU399
 944:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1681              		.loc 20 944 1 is_stmt 0 view .LVU400
 1682 0000 08B5     		push	{r3, lr}
 1683              		.cfi_def_cfa_offset 8
 1684              		.cfi_offset 3, -8
 1685              		.cfi_offset 14, -4
 945:Veno-Echo.cpp **** }
 1686              		.loc 20 945 36 view .LVU401
 1687 0002 0121     		movs	r1, #1
 1688 0004 0348     		ldr	r0, .L79
 1689 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1690              	.LVL66:
 945:Veno-Echo.cpp **** }
 1691              		.loc 20 945 19 view .LVU402
 1692 000a 034B     		ldr	r3, .L79+4
 1693 000c 83ED000A 		vstr.32	s0, [r3]
 946:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 94


 1694              		.loc 20 946 1 view .LVU403
 1695 0010 08BD     		pop	{r3, pc}
 1696              	.L80:
 1697 0012 00BF     		.align	2
 1698              	.L79:
 1699 0014 18000000 		.word	.LANCHOR4+24
 1700 0018 00000000 		.word	.LANCHOR17
 1701              		.cfi_endproc
 1702              	.LFE4314:
 1704              		.section	.text._Z17Update_DelayTimeRv,"ax",%progbits
 1705              		.align	1
 1706              		.p2align 2,,3
 1707              		.global	_Z17Update_DelayTimeRv
 1708              		.syntax unified
 1709              		.thumb
 1710              		.thumb_func
 1711              		.fpu fpv5-d16
 1713              	_Z17Update_DelayTimeRv:
 1714              	.LFB4315:
 949:Veno-Echo.cpp ****     static bool lastShift{};
 1715              		.loc 20 949 1 is_stmt 1 view -0
 1716              		.cfi_startproc
 1717              		@ args = 0, pretend = 0, frame = 0
 1718              		@ frame_needed = 0, uses_anonymous_args = 0
 950:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 1719              		.loc 20 950 5 view .LVU405
 951:Veno-Echo.cpp ****     static bool tapRatio_pickup{};
 1720              		.loc 20 951 5 view .LVU406
 952:Veno-Echo.cpp ****     
 1721              		.loc 20 952 5 view .LVU407
 954:Veno-Echo.cpp **** 
 1722              		.loc 20 954 5 view .LVU408
 957:Veno-Echo.cpp **** 
 1723              		.loc 20 957 5 view .LVU409
 949:Veno-Echo.cpp ****     static bool lastShift{};
 1724              		.loc 20 949 1 is_stmt 0 view .LVU410
 1725 0000 10B5     		push	{r4, lr}
 1726              		.cfi_def_cfa_offset 8
 1727              		.cfi_offset 4, -8
 1728              		.cfi_offset 14, -4
 957:Veno-Echo.cpp **** 
 1729              		.loc 20 957 44 view .LVU411
 1730 0002 0622     		movs	r2, #6
 1731 0004 0721     		movs	r1, #7
 1732 0006 6948     		ldr	r0, .L111
 949:Veno-Echo.cpp ****     static bool lastShift{};
 1733              		.loc 20 949 1 view .LVU412
 1734 0008 2DED028B 		vpush.64	{d8}
 1735              		.cfi_def_cfa_offset 16
 1736              		.cfi_offset 80, -16
 1737              		.cfi_offset 81, -12
 957:Veno-Echo.cpp **** 
 1738              		.loc 20 957 44 view .LVU413
 1739 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1740              	.LVL67:
 962:Veno-Echo.cpp **** 
 1741              		.loc 20 962 26 view .LVU414
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 95


 1742 0010 6749     		ldr	r1, .L111+4
 962:Veno-Echo.cpp **** 
 1743              		.loc 20 962 31 view .LVU415
 1744 0012 684B     		ldr	r3, .L111+8
 1745              	.LVL68:
 961:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 1746              		.loc 20 961 5 is_stmt 1 view .LVU416
 962:Veno-Echo.cpp **** 
 1747              		.loc 20 962 5 view .LVU417
 962:Veno-Echo.cpp **** 
 1748              		.loc 20 962 26 is_stmt 0 view .LVU418
 1749 0014 0A68     		ldr	r2, [r1]
 1750              	.LBB1077:
 964:Veno-Echo.cpp ****     {
 1751              		.loc 20 964 9 view .LVU419
 1752 0016 6848     		ldr	r0, .L111+12
 1753              	.LBE1077:
 962:Veno-Echo.cpp **** 
 1754              		.loc 20 962 26 view .LVU420
 1755 0018 0132     		adds	r2, r2, #1
 1756              	.LBB1126:
 964:Veno-Echo.cpp ****     {
 1757              		.loc 20 964 5 view .LVU421
 1758 001a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1759              	.LBE1126:
 962:Veno-Echo.cpp **** 
 1760              		.loc 20 962 31 view .LVU422
 1761 001c 83FB0243 		smull	r4, r3, r3, r2
 1762 0020 D417     		asrs	r4, r2, #31
 1763 0022 C4EB6313 		rsb	r3, r4, r3, asr #5
 1764 0026 03EB4303 		add	r3, r3, r3, lsl #1
 1765 002a A2EB8313 		sub	r3, r2, r3, lsl #6
 1766              	.LBB1127:
 1767              	.LBB1078:
 968:Veno-Echo.cpp ****         {
 1768              		.loc 20 968 19 view .LVU423
 1769 002e 634A     		ldr	r2, .L111+16
 1770              	.LBE1078:
 1771              	.LBE1127:
 962:Veno-Echo.cpp **** 
 1772              		.loc 20 962 14 view .LVU424
 1773 0030 0B60     		str	r3, [r1]
 964:Veno-Echo.cpp ****     {
 1774              		.loc 20 964 5 is_stmt 1 view .LVU425
 1775              	.LBB1128:
 1776 0032 90BB     		cbnz	r0, .L82
 1777              	.LBB1097:
 966:Veno-Echo.cpp ****         //udpate pickup
 1778              		.loc 20 966 9 view .LVU426
 968:Veno-Echo.cpp ****         {
 1779              		.loc 20 968 9 view .LVU427
 1780 0034 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1781 0036 0029     		cmp	r1, #0
 1782 0038 3CD0     		beq	.L83
 970:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 1783              		.loc 20 970 13 view .LVU428
 971:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 96


 1784              		.loc 20 971 31 is_stmt 0 view .LVU429
 1785 003a 614C     		ldr	r4, .L111+20
 972:Veno-Echo.cpp ****         } 
 1786              		.loc 20 972 28 view .LVU430
 1787 003c 6149     		ldr	r1, .L111+24
 970:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 1788              		.loc 20 970 23 view .LVU431
 1789 003e 1070     		strb	r0, [r2]
 971:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1790              		.loc 20 971 13 is_stmt 1 view .LVU432
 971:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1791              		.loc 20 971 31 is_stmt 0 view .LVU433
 1792 0040 2070     		strb	r0, [r4]
 972:Veno-Echo.cpp ****         } 
 1793              		.loc 20 972 13 is_stmt 1 view .LVU434
 972:Veno-Echo.cpp ****         } 
 1794              		.loc 20 972 28 is_stmt 0 view .LVU435
 1795 0042 81ED000A 		vstr.32	s0, [r1]
 1796              	.L84:
 985:Veno-Echo.cpp **** 
 1797              		.loc 20 985 9 is_stmt 1 view .LVU436
 1798              	.LVL69:
 987:Veno-Echo.cpp ****         {
 1799              		.loc 20 987 9 view .LVU437
 995:Veno-Echo.cpp ****         }
 1800              		.loc 20 995 13 view .LVU438
 1801              	.LBB1079:
 1802              	.LBI1079:
2009:Veno-Echo.cpp **** {
 1803              		.loc 20 2009 7 view .LVU439
 1804              	.LBB1080:
2011:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1805              		.loc 20 2011 5 view .LVU440
2012:Veno-Echo.cpp **** 
 1806              		.loc 20 2012 5 view .LVU441
 1807              	.LBE1080:
 1808              	.LBE1079:
 995:Veno-Echo.cpp ****         }
 1809              		.loc 20 995 36 is_stmt 0 view .LVU442
 1810 0046 6049     		ldr	r1, .L111+28
 1811              	.LBB1084:
 1812              	.LBB1081:
2012:Veno-Echo.cpp **** 
 1813              		.loc 20 2012 39 view .LVU443
 1814 0048 F7EE006A 		vmov.f32	s13, #1.0e+0
2012:Veno-Echo.cpp **** 
 1815              		.loc 20 2012 49 view .LVU444
 1816 004c F6EE005A 		vmov.f32	s11, #5.0e-1
 1817              	.LBE1081:
 1818              	.LBE1084:
 995:Veno-Echo.cpp ****         }
 1819              		.loc 20 995 36 view .LVU445
 1820 0050 5E4A     		ldr	r2, .L111+32
 1821              	.LBB1085:
 1822              	.LBB1082:
2012:Veno-Echo.cpp **** 
 1823              		.loc 20 2012 39 view .LVU446
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 97


 1824 0052 91ED007A 		vldr.32	s14, [r1]
2012:Veno-Echo.cpp **** 
 1825              		.loc 20 2012 12 view .LVU447
 1826 0056 B0EE006A 		vmov.f32	s12, #2.0e+0
 1827 005a D2ED007A 		vldr.32	s15, [r2]
2012:Veno-Echo.cpp **** 
 1828              		.loc 20 2012 39 view .LVU448
 1829 005e 36EEC77A 		vsub.f32	s14, s13, s14
2012:Veno-Echo.cpp **** 
 1830              		.loc 20 2012 49 view .LVU449
 1831 0062 37EE657A 		vsub.f32	s14, s14, s11
2012:Veno-Echo.cpp **** 
 1832              		.loc 20 2012 12 view .LVU450
 1833 0066 E7EE067A 		vfma.f32	s15, s14, s12
 1834              	.LVL70:
2014:Veno-Echo.cpp ****     {
 1835              		.loc 20 2014 5 is_stmt 1 view .LVU451
 1836 006a F5EEC07A 		vcmpe.f32	s15, #0
 1837 006e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1838 0072 00F18C80 		bmi	.L109
2019:Veno-Echo.cpp ****     {
 1839              		.loc 20 2019 5 view .LVU452
2021:Veno-Echo.cpp ****     }
 1840              		.loc 20 2021 16 is_stmt 0 view .LVU453
 1841 0076 F4EE667A 		vcmp.f32	s15, s13
 1842 007a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1843 007e 76FEA77A 		vselgt.f32	s15, s13, s15
 1844              	.LVL71:
 1845              	.L89:
2021:Veno-Echo.cpp ****     }
 1846              		.loc 20 2021 16 view .LVU454
 1847              	.LBE1082:
 1848              	.LBE1085:
 998:Veno-Echo.cpp ****         {
 1849              		.loc 20 998 9 is_stmt 1 view .LVU455
 1850 0082 A3B9     		cbnz	r3, .L81
1000:Veno-Echo.cpp ****             {
 1851              		.loc 20 1000 13 view .LVU456
1000:Veno-Echo.cpp ****             {
 1852              		.loc 20 1000 35 is_stmt 0 view .LVU457
 1853 0084 524B     		ldr	r3, .L111+36
 1854 0086 B0EE670A 		vmov.f32	s0, s15
 1855              	.LVL72:
1000:Veno-Echo.cpp ****             {
 1856              		.loc 20 1000 35 view .LVU458
 1857 008a 5248     		ldr	r0, .L111+40
 1858 008c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1859              	.LBE1097:
 1860              	.LBE1128:
1041:Veno-Echo.cpp **** void Update_feedbackL_CV()
 1861              		.loc 20 1041 1 view .LVU459
 1862 008e BDEC028B 		vldm	sp!, {d8}
 1863              		.cfi_remember_state
 1864              		.cfi_restore 80
 1865              		.cfi_restore 81
 1866              		.cfi_def_cfa_offset 8
 1867 0092 BDE81040 		pop	{r4, lr}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 98


 1868              		.cfi_restore 14
 1869              		.cfi_restore 4
 1870              		.cfi_def_cfa_offset 0
 1871              	.LBB1129:
 1872              	.LBB1098:
1000:Veno-Echo.cpp ****             {
 1873              		.loc 20 1000 35 view .LVU460
 1874 0096 FFF7FEBF 		b	_ZN10DelayMulti12SetDelayTimeEfb
 1875              	.LVL73:
 1876              	.L82:
 1877              		.cfi_restore_state
1000:Veno-Echo.cpp ****             {
 1878              		.loc 20 1000 35 view .LVU461
 1879              	.LBE1098:
 1880              	.LBB1099:
1010:Veno-Echo.cpp **** 
 1881              		.loc 20 1010 9 is_stmt 1 view .LVU462
1012:Veno-Echo.cpp ****         {
 1882              		.loc 20 1012 9 view .LVU463
 1883 009a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1884 009c 002B     		cmp	r3, #0
 1885 009e 3ED1     		bne	.L92
1014:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1886              		.loc 20 1014 13 view .LVU464
1014:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1887              		.loc 20 1014 23 is_stmt 0 view .LVU465
 1888 00a0 0124     		movs	r4, #1
1015:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1889              		.loc 20 1015 29 view .LVU466
 1890 00a2 4D48     		ldr	r0, .L111+44
1016:Veno-Echo.cpp ****         }
 1891              		.loc 20 1016 26 view .LVU467
 1892 00a4 4D49     		ldr	r1, .L111+48
1014:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1893              		.loc 20 1014 23 view .LVU468
 1894 00a6 1470     		strb	r4, [r2]
1015:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1895              		.loc 20 1015 13 is_stmt 1 view .LVU469
1015:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1896              		.loc 20 1015 29 is_stmt 0 view .LVU470
 1897 00a8 0370     		strb	r3, [r0]
1016:Veno-Echo.cpp ****         }
 1898              		.loc 20 1016 13 is_stmt 1 view .LVU471
1016:Veno-Echo.cpp ****         }
 1899              		.loc 20 1016 26 is_stmt 0 view .LVU472
 1900 00aa 81ED000A 		vstr.32	s0, [r1]
 1901              	.L81:
1016:Veno-Echo.cpp ****         }
 1902              		.loc 20 1016 26 view .LVU473
 1903              	.LBE1099:
 1904              	.LBE1129:
1041:Veno-Echo.cpp **** void Update_feedbackL_CV()
 1905              		.loc 20 1041 1 view .LVU474
 1906 00ae BDEC028B 		vldm	sp!, {d8}
 1907              		.cfi_remember_state
 1908              		.cfi_restore 80
 1909              		.cfi_restore 81
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 99


 1910              		.cfi_def_cfa_offset 8
 1911 00b2 10BD     		pop	{r4, pc}
 1912              	.L83:
 1913              		.cfi_restore_state
 1914              	.LBB1130:
 1915              	.LBB1122:
 976:Veno-Echo.cpp ****             {
 1916              		.loc 20 976 13 is_stmt 1 view .LVU475
 976:Veno-Echo.cpp ****             {
 1917              		.loc 20 976 16 is_stmt 0 view .LVU476
 1918 00b4 424A     		ldr	r2, .L111+20
 976:Veno-Echo.cpp ****             {
 1919              		.loc 20 976 13 view .LVU477
 1920 00b6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1921 00b8 79B9     		cbnz	r1, .L85
 978:Veno-Echo.cpp ****                 {
 1922              		.loc 20 978 17 is_stmt 1 view .LVU478
 1923              	.LVL74:
 1924              	.LBB1086:
 1925              	.LBI1086:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1926              		.loc 21 75 3 view .LVU479
 1927              	.LBB1087:
 1928              		.loc 21 76 5 view .LVU480
 1929              		.loc 21 76 5 is_stmt 0 view .LVU481
 1930              	.LBE1087:
 1931              	.LBE1086:
 978:Veno-Echo.cpp ****                 {
 1932              		.loc 20 978 23 view .LVU482
 1933 00ba 4249     		ldr	r1, .L111+24
 978:Veno-Echo.cpp ****                 {
 1934              		.loc 20 978 17 view .LVU483
 1935 00bc 9FED487A 		vldr.32	s14, .L111+52
 978:Veno-Echo.cpp ****                 {
 1936              		.loc 20 978 23 view .LVU484
 1937 00c0 D1ED007A 		vldr.32	s15, [r1]
 1938 00c4 70EE677A 		vsub.f32	s15, s0, s15
 1939              	.LBB1089:
 1940              	.LBB1088:
 1941              		.loc 21 76 31 view .LVU485
 1942 00c8 F0EEE77A 		vabs.f32	s15, s15
 1943              	.LBE1088:
 1944              	.LBE1089:
 978:Veno-Echo.cpp ****                 {
 1945              		.loc 20 978 17 view .LVU486
 1946 00cc F4EEC77A 		vcmpe.f32	s15, s14
 1947 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1948 00d4 B7DD     		ble	.L84
 980:Veno-Echo.cpp ****                 }
 1949              		.loc 20 980 21 is_stmt 1 view .LVU487
 980:Veno-Echo.cpp ****                 }
 1950              		.loc 20 980 39 is_stmt 0 view .LVU488
 1951 00d6 0121     		movs	r1, #1
 1952 00d8 1170     		strb	r1, [r2]
 1953              	.L85:
 985:Veno-Echo.cpp **** 
 1954              		.loc 20 985 9 is_stmt 1 view .LVU489
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 100


 1955              	.LVL75:
 987:Veno-Echo.cpp ****         {
 1956              		.loc 20 987 9 view .LVU490
 989:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 1957              		.loc 20 989 13 view .LVU491
 1958              	.LBB1090:
 1959              	.LBI1090:
2009:Veno-Echo.cpp **** {
 1960              		.loc 20 2009 7 view .LVU492
 1961              	.LBB1091:
2011:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1962              		.loc 20 2011 5 view .LVU493
2012:Veno-Echo.cpp **** 
 1963              		.loc 20 2012 5 view .LVU494
 1964              	.LBE1091:
 1965              	.LBE1090:
 989:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 1966              		.loc 20 989 36 is_stmt 0 view .LVU495
 1967 00da 3B4A     		ldr	r2, .L111+28
 1968              	.LBB1094:
 1969              	.LBB1092:
2012:Veno-Echo.cpp **** 
 1970              		.loc 20 2012 39 view .LVU496
 1971 00dc B7EE007A 		vmov.f32	s14, #1.0e+0
2012:Veno-Echo.cpp **** 
 1972              		.loc 20 2012 49 view .LVU497
 1973 00e0 B6EE006A 		vmov.f32	s12, #5.0e-1
2012:Veno-Echo.cpp **** 
 1974              		.loc 20 2012 39 view .LVU498
 1975 00e4 D2ED007A 		vldr.32	s15, [r2]
2012:Veno-Echo.cpp **** 
 1976              		.loc 20 2012 12 view .LVU499
 1977 00e8 F0EE006A 		vmov.f32	s13, #2.0e+0
2012:Veno-Echo.cpp **** 
 1978              		.loc 20 2012 39 view .LVU500
 1979 00ec 77EE677A 		vsub.f32	s15, s14, s15
2012:Veno-Echo.cpp **** 
 1980              		.loc 20 2012 49 view .LVU501
 1981 00f0 77EEC67A 		vsub.f32	s15, s15, s12
2012:Veno-Echo.cpp **** 
 1982              		.loc 20 2012 12 view .LVU502
 1983 00f4 B0EE406A 		vmov.f32	s12, s0
 1984 00f8 A7EEA66A 		vfma.f32	s12, s15, s13
2014:Veno-Echo.cpp ****     {
 1985              		.loc 20 2014 5 view .LVU503
 1986 00fc B5EEC06A 		vcmpe.f32	s12, #0
2012:Veno-Echo.cpp **** 
 1987              		.loc 20 2012 12 view .LVU504
 1988 0100 F0EE467A 		vmov.f32	s15, s12
 1989              	.LVL76:
2014:Veno-Echo.cpp ****     {
 1990              		.loc 20 2014 5 is_stmt 1 view .LVU505
 1991 0104 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1992 0108 44D4     		bmi	.L110
2019:Veno-Echo.cpp ****     {
 1993              		.loc 20 2019 5 view .LVU506
2021:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 101


 1994              		.loc 20 2021 16 is_stmt 0 view .LVU507
 1995 010a F4EE477A 		vcmp.f32	s15, s14
 1996 010e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1997 0112 77FE277A 		vselgt.f32	s15, s14, s15
 1998              	.L87:
 1999              	.LVL77:
 2000              		.loc 20 2024 5 is_stmt 1 view .LVU508
 2001              		.loc 20 2024 5 is_stmt 0 view .LVU509
 2002              	.LBE1092:
 2003              	.LBE1094:
 990:Veno-Echo.cpp ****         }
 2004              		.loc 20 990 13 is_stmt 1 view .LVU510
 990:Veno-Echo.cpp ****         }
 2005              		.loc 20 990 29 is_stmt 0 view .LVU511
 2006 0116 2D4A     		ldr	r2, .L111+32
 2007 0118 82ED000A 		vstr.32	s0, [r2]
 2008 011c B1E7     		b	.L89
 2009              	.LVL78:
 2010              	.L92:
 990:Veno-Echo.cpp ****         }
 2011              		.loc 20 990 29 view .LVU512
 2012              	.LBE1122:
 2013              	.LBB1123:
1021:Veno-Echo.cpp ****             {
 2014              		.loc 20 1021 13 is_stmt 1 view .LVU513
1021:Veno-Echo.cpp ****             {
 2015              		.loc 20 1021 16 is_stmt 0 view .LVU514
 2016 011e 2E4B     		ldr	r3, .L111+44
1021:Veno-Echo.cpp ****             {
 2017              		.loc 20 1021 13 view .LVU515
 2018 0120 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2019 0122 7AB9     		cbnz	r2, .L93
1023:Veno-Echo.cpp ****                 {
 2020              		.loc 20 1023 17 is_stmt 1 view .LVU516
 2021              	.LVL79:
 2022              	.LBB1100:
 2023              	.LBI1100:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2024              		.loc 21 75 3 view .LVU517
 2025              	.LBB1101:
 2026              		.loc 21 76 5 view .LVU518
 2027              		.loc 21 76 5 is_stmt 0 view .LVU519
 2028              	.LBE1101:
 2029              	.LBE1100:
1023:Veno-Echo.cpp ****                 {
 2030              		.loc 20 1023 23 view .LVU520
 2031 0124 2D4A     		ldr	r2, .L111+48
1023:Veno-Echo.cpp ****                 {
 2032              		.loc 20 1023 17 view .LVU521
 2033 0126 9FED2E7A 		vldr.32	s14, .L111+52
1023:Veno-Echo.cpp ****                 {
 2034              		.loc 20 1023 23 view .LVU522
 2035 012a D2ED007A 		vldr.32	s15, [r2]
 2036 012e 70EE677A 		vsub.f32	s15, s0, s15
 2037              	.LBB1103:
 2038              	.LBB1102:
 2039              		.loc 21 76 31 view .LVU523
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 102


 2040 0132 F0EEE77A 		vabs.f32	s15, s15
 2041              	.LBE1102:
 2042              	.LBE1103:
1023:Veno-Echo.cpp ****                 {
 2043              		.loc 20 1023 17 view .LVU524
 2044 0136 F4EEC77A 		vcmpe.f32	s15, s14
 2045 013a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2046 013e B6DD     		ble	.L81
1025:Veno-Echo.cpp ****                 }
 2047              		.loc 20 1025 21 is_stmt 1 view .LVU525
1025:Veno-Echo.cpp ****                 }
 2048              		.loc 20 1025 37 is_stmt 0 view .LVU526
 2049 0140 0122     		movs	r2, #1
 2050 0142 1A70     		strb	r2, [r3]
 2051              	.L93:
1030:Veno-Echo.cpp ****         {
 2052              		.loc 20 1030 9 is_stmt 1 view .LVU527
 2053              	.LBB1104:
1032:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
 2054              		.loc 20 1032 13 view .LVU528
 2055              	.LVL80:
1033:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2056              		.loc 20 1033 13 view .LVU529
1033:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2057              		.loc 20 1033 61 is_stmt 0 view .LVU530
 2058 0144 F0EE080A 		vmov.f32	s1, #3.0e+0
 2059 0148 0020     		movs	r0, #0
 2060 014a 9FED261A 		vldr.32	s2, .L111+56
 2061 014e FFF7FEFF 		bl	_Z5scalefff9CurveType
 2062              	.LVL81:
 2063              	.LBB1105:
 2064              	.LBI1105:
 2065              		.file 24 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // -*- C++ -*- C forwarding header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 103


  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** /** @file include/cmath
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  as macros in C).
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  */
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // ISO C++ 14882: 26.5  C library
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #pragma GCC system_header
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/c++config.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/cpp_type_traits.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <ext/type_traits.h>
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include_next <math.h>
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/std_abs.h>
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_CMATH
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_CMATH 1
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef div
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acos
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asin
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan2
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ceil
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cos
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cosh
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fabs
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef floor
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmod
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef frexp
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ldexp
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log10
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef modf
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef pow
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sin
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sinh
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sqrt
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tan
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tanh
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** extern "C++"
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 104


  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acos;
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(float __x)
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosf(__x); }
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(long double __x)
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosl(__x); }
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acos(_Tp __x)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acos(__x); }
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asin;
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(float __x)
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinf(__x); }
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(long double __x)
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinl(__x); }
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asin(_Tp __x)
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asin(__x); }
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan;
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(float __x)
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanf(__x); }
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(long double __x)
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanl(__x); }
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan(_Tp __x)
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atan(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 105


 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan2;
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(float __y, float __x)
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2f(__y, __x); }
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(long double __y, long double __x)
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2l(__y, __x); }
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan2(_Tp __y, _Up __x)
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return atan2(__type(__y), __type(__x));
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ceil;
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(float __x)
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceilf(__x); }
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(long double __x)
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceill(__x); }
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ceil(_Tp __x)
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ceil(__x); }
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cos;
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(float __x)
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosf(__x); }
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(long double __x)
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosl(__x); }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 106


 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cos(_Tp __x)
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cos(__x); }
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cosh;
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(float __x)
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshf(__x); }
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(long double __x)
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshl(__x); }
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cosh(_Tp __x)
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cosh(__x); }
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(float __x)
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expf(__x); }
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(long double __x)
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expl(__x); }
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp(_Tp __x)
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp(__x); }
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fabs;
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(float __x)
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsf(__x); }
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(long double __x)
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsl(__x); }
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 107


 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fabs(_Tp __x)
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_fabs(__x); }
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::floor;
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(float __x)
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorf(__x); }
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(long double __x)
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorl(__x); }
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     floor(_Tp __x)
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_floor(__x); }
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmod;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(float __x, float __y)
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodf(__x, __y); }
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(long double __x, long double __y)
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodl(__x, __y); }
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmod(_Tp __x, _Up __y)
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmod(__type(__x), __type(__y));
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::frexp;
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(float __x, int* __exp)
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(long double __x, int* __exp)
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 108


 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     frexp(_Tp __x, int* __exp)
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_frexp(__x, __exp); }
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ldexp;
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(float __x, int __exp)
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(long double __x, int __exp)
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ldexp(_Tp __x, int __exp)
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log;
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(float __x)
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logf(__x); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(long double __x)
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logl(__x); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log(_Tp __x)
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log(__x); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log10;
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(float __x)
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10f(__x); }
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(long double __x)
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10l(__x); }
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 109


 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log10(_Tp __x)
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log10(__x); }
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::modf;
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(float __x, float* __iptr)
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modff(__x, __iptr); }
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(long double __x, long double* __iptr)
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::pow;
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, float __y)
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powf(__x, __y); }
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, long double __y)
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powl(__x, __y); }
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus < 201103L
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline double
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(double __x, int __i)
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powi(__x, __i); }
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, int __n)
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powif(__x, __n); }
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, int __n)
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powil(__x, __n); }
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     pow(_Tp __x, _Up __y)
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return pow(__type(__x), __type(__y));
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sin;
 422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 110


 424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(float __x)
 426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinf(__x); }
 427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(long double __x)
 430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinl(__x); }
 431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sin(_Tp __x)
 438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sin(__x); }
 439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sinh;
 441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(float __x)
 445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhf(__x); }
 446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(long double __x)
 449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhl(__x); }
 450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sinh(_Tp __x)
 457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sinh(__x); }
 458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sqrt;
 460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(float __x)
 464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtf(__x); }
 465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(long double __x)
 468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtl(__x); }
 469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sqrt(_Tp __x)
 476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sqrt(__x); }
 477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tan;
 479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 111


 481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(float __x)
 483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanf(__x); }
 484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(long double __x)
 487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanl(__x); }
 488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tan(_Tp __x)
 495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tan(__x); }
 496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tanh;
 498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(float __x)
 502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhf(__x); }
 503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(long double __x)
 506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhl(__x); }
 507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tanh(_Tp __x)
 514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tanh(__x); }
 515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_USE_C99_MATH
 517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC
 518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // These are possible macros imported from C99-land.
 520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fpclassify
 521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isfinite
 522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isinf
 523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnan
 524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnormal
 525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef signbit
 526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreater
 527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreaterequal
 528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isless
 529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessequal
 530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessgreater
 531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isunordered
 532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(float __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 112


 538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(double __x)
 543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(long double __x)
 548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               int>::__type
 556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __x)
 557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? FP_NORMAL : FP_ZERO; }
 558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(float __x)
 563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(double __x)
 567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(long double __x)
 571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __x)
 579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return true; }
 580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(float __x)
 585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISINF \
 588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isinf;
 590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(double __x)
 593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 113


 595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(long double __x)
 598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __x)
 606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(float __x)
 612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISNAN \
 615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isnan;
 617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(double __x)
 620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(long double __x)
 625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __x)
 633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(float __x)
 639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(double __x)
 643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(long double __x)
 647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 114


 652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __x)
 655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? true : false; }
 656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // Note: middle-end/36757 is fixed, __builtin_signbit is type-generic.
 660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(float __x)
 662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(double __x)
 666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(long double __x)
 670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __x)
 678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x < 0 ? true : false; }
 679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(float __x, float __y)
 684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(double __x, double __y)
 688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(long double __x, long double __y)
 692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __x, _Up __y)
 701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__x), __type(__y));
 704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 115


 709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(float __x, float __y)
 710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(double __x, double __y)
 714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(long double __x, long double __y)
 718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __x, _Up __y)
 727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__x), __type(__y));
 730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(float __x, float __y)
 736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(double __x, double __y)
 740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(long double __x, long double __y)
 744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __x, _Up __y)
 753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__x), __type(__y));
 756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 758:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 759:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 760:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 761:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(float __x, float __y)
 762:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 763:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 764:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 765:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(double __x, double __y)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 116


 766:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 767:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 768:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 769:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(long double __x, long double __y)
 770:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 771:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 772:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 773:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 774:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 775:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 776:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 777:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 778:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __x, _Up __y)
 779:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 780:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 781:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__x), __type(__y));
 782:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 783:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 784:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 785:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 786:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 787:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(float __x, float __y)
 788:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 789:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 790:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 791:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(double __x, double __y)
 792:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 793:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 794:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 795:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(long double __x, long double __y)
 796:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 797:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 798:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 799:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 800:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 801:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 802:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 803:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 804:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __x, _Up __y)
 805:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 806:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 807:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__x), __type(__y));
 808:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 809:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 810:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 811:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 812:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 813:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(float __x, float __y)
 814:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 815:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 816:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 817:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(double __x, double __y)
 818:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 819:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 820:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 821:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(long double __x, long double __y)
 822:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 117


 823:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 824:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 825:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 826:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 827:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 828:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 829:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 830:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __x, _Up __y)
 831:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 832:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 833:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__x), __type(__y));
 834:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 835:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 836:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 837:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 838:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 839:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 840:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 841:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 842:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __f)
 843:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 844:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 845:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 846:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				  FP_SUBNORMAL, FP_ZERO, __type(__f));
 847:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 848:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 849:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 850:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 851:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 852:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __f)
 853:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 854:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 855:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isfinite(__type(__f));
 856:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 857:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 858:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 859:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 860:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 861:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __f)
 862:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 863:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 864:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isinf(__type(__f));
 865:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 866:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 867:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 868:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 869:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 870:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __f)
 871:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 872:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 873:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnan(__type(__f));
 874:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 875:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 876:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 877:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 878:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 879:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __f)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 118


 880:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 881:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 882:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnormal(__type(__f));
 883:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 884:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 885:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 886:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 887:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 888:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __f)
 889:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 890:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 891:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_signbit(__type(__f));
 892:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 893:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 894:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 895:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 896:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 897:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __f1, _Tp __f2)
 898:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 899:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 900:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__f1), __type(__f2));
 901:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 902:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 903:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 904:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 905:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 906:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __f1, _Tp __f2)
 907:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 908:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 909:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__f1), __type(__f2));
 910:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 911:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 912:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 913:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 914:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 915:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __f1, _Tp __f2)
 916:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 917:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 918:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__f1), __type(__f2));
 919:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 920:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 921:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 922:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 923:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 924:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __f1, _Tp __f2)
 925:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 926:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 927:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__f1), __type(__f2));
 928:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 929:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 930:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 931:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 932:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 933:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __f1, _Tp __f2)
 934:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 935:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 936:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__f1), __type(__f2));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 119


 937:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 938:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 939:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 940:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 941:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 942:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __f1, _Tp __f2)
 943:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 944:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 945:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__f1), __type(__f2));
 946:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 947:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 948:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif // C++11
 949:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_FP_MACROS_DYNAMIC */
 950:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_MATH */
 951:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 952:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 953:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 954:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifdef _GLIBCXX_USE_C99_MATH_TR1
 955:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 956:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acosh
 957:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshf
 958:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshl
 959:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinh
 960:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhf
 961:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhl
 962:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanh
 963:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhf
 964:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhl
 965:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrt
 966:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtf
 967:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtl
 968:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysign
 969:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignf
 970:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignl
 971:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erf
 972:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erff
 973:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfl
 974:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfc
 975:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcf
 976:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcl
 977:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2
 978:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2f
 979:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2l
 980:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1
 981:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1f
 982:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1l
 983:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdim
 984:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdimf
 985:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdiml
 986:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fma
 987:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaf
 988:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmal
 989:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmax
 990:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxf
 991:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxl
 992:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmin
 993:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 120


 994:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminl
 995:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypot
 996:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotf
 997:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotl
 998:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogb
 999:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbf
1000:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbl
1001:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgamma
1002:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammaf
1003:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammal
1004:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1005:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrint
1006:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintf
1007:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintl
1008:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llround
1009:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundf
1010:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundl
1011:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1012:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1p
1013:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pf
1014:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pl
1015:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2
1016:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2f
1017:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2l
1018:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logb
1019:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbf
1020:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbl
1021:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrint
1022:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintf
1023:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintl
1024:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lround
1025:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundf
1026:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundl
1027:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nan
1028:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanf
1029:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanl
1030:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyint
1031:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintf
1032:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintl
1033:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafter
1034:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterf
1035:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterl
1036:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttoward
1037:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardf
1038:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardl
1039:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainder
1040:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderf
1041:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderl
1042:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquo
1043:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquof
1044:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquol
1045:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rint
1046:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintf
1047:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintl
1048:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef round
1049:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundf
1050:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundl
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 121


1051:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbln
1052:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnf
1053:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnl
1054:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbn
1055:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnf
1056:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnl
1057:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgamma
1058:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammaf
1059:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammal
1060:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef trunc
1061:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncf
1062:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncl
1063:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1064:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // types
1065:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::double_t;
1066:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::float_t;
1067:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1068:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // functions
1069:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acosh;
1070:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshf;
1071:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshl;
1072:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1073:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinh;
1074:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhf;
1075:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhl;
1076:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1077:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanh;
1078:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhf;
1079:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhl;
1080:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1081:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrt;
1082:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtf;
1083:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtl;
1084:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1085:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysign;
1086:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignf;
1087:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignl;
1088:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1089:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erf;
1090:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erff;
1091:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfl;
1092:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1093:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfc;
1094:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcf;
1095:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcl;
1096:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1097:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2;
1098:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2f;
1099:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2l;
1100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1;
1102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1f;
1103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1l;
1104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdim;
1106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdimf;
1107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdiml;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 122


1108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fma;
1110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaf;
1111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmal;
1112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmax;
1114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxf;
1115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxl;
1116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmin;
1118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminf;
1119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminl;
1120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypot;
1122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotf;
1123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotl;
1124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogb;
1126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbf;
1127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbl;
1128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgamma;
1130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammaf;
1131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammal;
1132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrint;
1135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintf;
1136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintl;
1137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llround;
1139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundf;
1140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundl;
1141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1p;
1144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pf;
1145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pl;
1146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2;
1148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2f;
1149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2l;
1150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logb;
1152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbf;
1153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbl;
1154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrint;
1156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintf;
1157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintl;
1158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lround;
1160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundf;
1161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundl;
1162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nan;
1164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanf;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 123


1165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanl;
1166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyint;
1168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintf;
1169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintl;
1170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafter;
1172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterf;
1173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterl;
1174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttoward;
1176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardf;
1177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardl;
1178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainder;
1180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderf;
1181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderl;
1182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquo;
1184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquof;
1185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquol;
1186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rint;
1188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintf;
1189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintl;
1190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::round;
1192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundf;
1193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundl;
1194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbln;
1196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnf;
1197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnl;
1198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbn;
1200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnf;
1201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnl;
1202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgamma;
1204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammaf;
1205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammal;
1206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::trunc;
1208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncf;
1209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncl;
1210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   /// Additional overloads.
1212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(float __x)
1215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshf(__x); }
1216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(long double __x)
1219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshl(__x); }
1220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 124


1222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acosh(_Tp __x)
1227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acosh(__x); }
1228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(float __x)
1233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhf(__x); }
1234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(long double __x)
1237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhl(__x); }
1238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asinh(_Tp __x)
1245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asinh(__x); }
1246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(float __x)
1251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhf(__x); }
1252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(long double __x)
1255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhl(__x); }
1256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atanh(_Tp __x)
1263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atanh(__x); }
1264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(float __x)
1269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtf(__x); }
1270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(long double __x)
1273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtl(__x); }
1274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 125


1279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cbrt(_Tp __x)
1281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cbrt(__x); }
1282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(float __x, float __y)
1287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignf(__x, __y); }
1288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(long double __x, long double __y)
1291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignl(__x, __y); }
1292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     copysign(_Tp __x, _Up __y)
1298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return copysign(__type(__x), __type(__y));
1301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(float __x)
1307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erff(__x); }
1308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(long double __x)
1311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfl(__x); }
1312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erf(_Tp __x)
1319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erf(__x); }
1320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(float __x)
1325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcf(__x); }
1326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(long double __x)
1329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcl(__x); }
1330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 126


1336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erfc(_Tp __x)
1337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erfc(__x); }
1338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(float __x)
1343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2f(__x); }
1344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(long double __x)
1347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2l(__x); }
1348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp2(_Tp __x)
1355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp2(__x); }
1356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(float __x)
1361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1f(__x); }
1362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(long double __x)
1365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1l(__x); }
1366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     expm1(_Tp __x)
1373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_expm1(__x); }
1374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(float __x, float __y)
1379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdimf(__x, __y); }
1380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(long double __x, long double __y)
1383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdiml(__x, __y); }
1384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fdim(_Tp __x, _Up __y)
1390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fdim(__type(__x), __type(__y));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 127


1393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(float __x, float __y, float __z)
1399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaf(__x, __y, __z); }
1400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(long double __x, long double __y, long double __z)
1403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmal(__x, __y, __z); }
1404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up, typename _Vp>
1408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type
1409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fma(_Tp __x, _Up __y, _Vp __z)
1410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type __type;
1412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fma(__type(__x), __type(__y), __type(__z));
1413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(float __x, float __y)
1419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxf(__x, __y); }
1420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(long double __x, long double __y)
1423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxl(__x, __y); }
1424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmax(_Tp __x, _Up __y)
1430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmax(__type(__x), __type(__y));
1433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(float __x, float __y)
1439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminf(__x, __y); }
1440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(long double __x, long double __y)
1443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminl(__x, __y); }
1444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmin(_Tp __x, _Up __y)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 128


1450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmin(__type(__x), __type(__y));
1453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(float __x, float __y)
1459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotf(__x, __y); }
1460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(long double __x, long double __y)
1463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotl(__x, __y); }
1464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     hypot(_Tp __x, _Up __y)
1470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return hypot(__type(__x), __type(__y));
1473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(float __x)
1479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbf(__x); }
1480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(long double __x)
1483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbl(__x); }
1484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr
1489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     int>::__type
1491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ilogb(_Tp __x)
1492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ilogb(__x); }
1493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(float __x)
1498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammaf(__x); }
1499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(long double __x)
1502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammal(__x); }
1503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 129


1507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lgamma(_Tp __x)
1510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lgamma(__x); }
1511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(float __x)
1516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintf(__x); }
1517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(long double __x)
1520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintl(__x); }
1521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llrint(_Tp __x)
1528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llrint(__x); }
1529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(float __x)
1534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundf(__x); }
1535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(long double __x)
1538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundl(__x); }
1539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llround(_Tp __x)
1546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llround(__x); }
1547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(float __x)
1552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pf(__x); }
1553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(long double __x)
1556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pl(__x); }
1557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log1p(_Tp __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 130


1564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log1p(__x); }
1565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 568.
1569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(float __x)
1571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2f(__x); }
1572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(long double __x)
1575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2l(__x); }
1576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log2(_Tp __x)
1583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log2(__x); }
1584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(float __x)
1589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbf(__x); }
1590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(long double __x)
1593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbl(__x); }
1594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     logb(_Tp __x)
1601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_logb(__x); }
1602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(float __x)
1607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintf(__x); }
1608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(long double __x)
1611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintl(__x); }
1612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lrint(_Tp __x)
1619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lrint(__x); }
1620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 131


1621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(float __x)
1625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundf(__x); }
1626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(long double __x)
1629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundl(__x); }
1630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lround(_Tp __x)
1637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lround(__x); }
1638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(float __x)
1643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintf(__x); }
1644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(long double __x)
1647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintl(__x); }
1648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nearbyint(_Tp __x)
1655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nearbyint(__x); }
1656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(float __x, float __y)
1661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterf(__x, __y); }
1662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(long double __x, long double __y)
1665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterl(__x, __y); }
1666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nextafter(_Tp __x, _Up __y)
1672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return nextafter(__type(__x), __type(__y));
1675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 132


1678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(float __x, long double __y)
1681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardf(__x, __y); }
1682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(long double __x, long double __y)
1685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardl(__x, __y); }
1686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nexttoward(_Tp __x, long double __y)
1693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nexttoward(__x, __y); }
1694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(float __x, float __y)
1699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderf(__x, __y); }
1700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(long double __x, long double __y)
1703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderl(__x, __y); }
1704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remainder(_Tp __x, _Up __y)
1710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remainder(__type(__x), __type(__y));
1713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
1718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(float __x, float __y, int* __pquo)
1719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquof(__x, __y, __pquo); }
1720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
1722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(long double __x, long double __y, int* __pquo)
1723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquol(__x, __y, __pquo); }
1724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remquo(_Tp __x, _Up __y, int* __pquo)
1730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remquo(__type(__x), __type(__y), __pquo);
1733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 133


1735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(float __x)
1739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintf(__x); }
1740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(long double __x)
1743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintl(__x); }
1744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     rint(_Tp __x)
1751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_rint(__x); }
1752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   round(float __x)
 2066              		.loc 24 1756 3 is_stmt 1 view .LVU531
 2067              	.LBB1106:
1757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_roundf(__x); }
 2068              		.loc 24 1757 5 view .LVU532
 2069              		.loc 24 1757 28 is_stmt 0 view .LVU533
 2070 0152 B8FE400A 		vrinta.f32	s0, s0
 2071              	.LVL82:
 2072              		.loc 24 1757 28 view .LVU534
 2073              	.LBE1106:
 2074              	.LBE1105:
1034:Veno-Echo.cpp ****             //save setting:
 2075              		.loc 20 1034 13 is_stmt 1 view .LVU535
 2076              	.LBB1107:
 2077              	.LBI1107:
2025:Veno-Echo.cpp **** }
2026:Veno-Echo.cpp **** 
2027:Veno-Echo.cpp **** //checks pickup state of primary controls
2028:Veno-Echo.cpp **** bool checkPickupState(float value, float lastValue, bool lastState, bool ShiftChange)
2029:Veno-Echo.cpp **** {
2030:Veno-Echo.cpp ****     bool retval{};
2031:Veno-Echo.cpp ****     
2032:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change to not picked up, unless there's been no change
2033:Veno-Echo.cpp ****     {
2034:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
2035:Veno-Echo.cpp ****         {
2036:Veno-Echo.cpp ****             retval = false;
2037:Veno-Echo.cpp ****         }
2038:Veno-Echo.cpp ****         else
2039:Veno-Echo.cpp ****         {
2040:Veno-Echo.cpp ****             retval = true;
2041:Veno-Echo.cpp ****         }
2042:Veno-Echo.cpp ****     }
2043:Veno-Echo.cpp **** 
2044:Veno-Echo.cpp ****     else //not recent shift change, change to pickup if there's been a change since last shift chan
2045:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 134


2046:Veno-Echo.cpp ****     if(!lastState) //if not picked up
2047:Veno-Echo.cpp ****     {
2048:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
2049:Veno-Echo.cpp ****         {
2050:Veno-Echo.cpp ****             retval = true;
2051:Veno-Echo.cpp ****         }
2052:Veno-Echo.cpp **** 
2053:Veno-Echo.cpp ****         else
2054:Veno-Echo.cpp ****         {
2055:Veno-Echo.cpp ****             retval = false;
2056:Veno-Echo.cpp ****         }
2057:Veno-Echo.cpp **** 
2058:Veno-Echo.cpp ****     }
2059:Veno-Echo.cpp ****     else    //previous state is picked up
2060:Veno-Echo.cpp ****     {
2061:Veno-Echo.cpp ****         retval = true;  //always return true
2062:Veno-Echo.cpp ****     }
2063:Veno-Echo.cpp **** 
2064:Veno-Echo.cpp ****     }
2065:Veno-Echo.cpp ****     return retval;
2066:Veno-Echo.cpp **** 
2067:Veno-Echo.cpp **** }
2068:Veno-Echo.cpp **** 
2069:Veno-Echo.cpp **** //Checks pickup state of secondary controls
2070:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
2071:Veno-Echo.cpp **** {
2072:Veno-Echo.cpp ****     pickupState retval{};
2073:Veno-Echo.cpp **** 
2074:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
2075:Veno-Echo.cpp ****     {
2076:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
2077:Veno-Echo.cpp ****         {
2078:Veno-Echo.cpp ****             retval = BELOW;
2079:Veno-Echo.cpp ****         }
2080:Veno-Echo.cpp ****         
2081:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
2082:Veno-Echo.cpp ****         {
2083:Veno-Echo.cpp ****             retval = ABOVE;
2084:Veno-Echo.cpp ****         }
2085:Veno-Echo.cpp **** 
2086:Veno-Echo.cpp ****         else    //within tolerance i.e. unchanged
2087:Veno-Echo.cpp ****         {
2088:Veno-Echo.cpp ****             retval = PICKEDUP;
2089:Veno-Echo.cpp ****         }
2090:Veno-Echo.cpp ****     }
2091:Veno-Echo.cpp **** 
2092:Veno-Echo.cpp ****     else    //not a recent shift change
2093:Veno-Echo.cpp ****     {
2094:Veno-Echo.cpp ****         switch(lastState)
2095:Veno-Echo.cpp ****         {
2096:Veno-Echo.cpp ****             case BELOW:
2097:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
2098:Veno-Echo.cpp ****                 retval = PICKEDUP;
2099:Veno-Echo.cpp ****             else
2100:Veno-Echo.cpp ****                 retval = lastState;
2101:Veno-Echo.cpp ****             break;
2102:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 135


2103:Veno-Echo.cpp ****             case ABOVE:
2104:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
2105:Veno-Echo.cpp ****                 retval = PICKEDUP;
2106:Veno-Echo.cpp ****             else
2107:Veno-Echo.cpp ****                 retval = lastState;
2108:Veno-Echo.cpp ****             break;
2109:Veno-Echo.cpp ****             case PICKEDUP:
2110:Veno-Echo.cpp ****                 retval = lastState;
2111:Veno-Echo.cpp ****             break;
2112:Veno-Echo.cpp ****         }
2113:Veno-Echo.cpp ****     }
2114:Veno-Echo.cpp ****     
2115:Veno-Echo.cpp ****     return retval;
2116:Veno-Echo.cpp **** }
2117:Veno-Echo.cpp **** 
2118:Veno-Echo.cpp **** double GetTapRatio(TapRatios ratio)
 2078              		.loc 20 2118 8 view .LVU536
 2079              	.LBB1108:
2119:Veno-Echo.cpp **** {
2120:Veno-Echo.cpp **** double retVal{};
 2080              		.loc 20 2120 1 view .LVU537
2121:Veno-Echo.cpp ****     switch(ratio)
 2081              		.loc 20 2121 5 view .LVU538
 2082              	.LBE1108:
 2083              	.LBE1107:
1033:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2084              		.loc 20 1033 130 is_stmt 0 view .LVU539
 2085 0156 FCEEC07A 		vcvt.u32.f32	s15, s0
 2086 015a 17EE903A 		vmov	r3, s15	@ int
 2087 015e 013B     		subs	r3, r3, #1
 2088 0160 DBB2     		uxtb	r3, r3
 2089 0162 022B     		cmp	r3, #2
 2090 0164 19D9     		bls	.L97
 2091 0166 B7EE008A 		vmov.f32	s16, #1.0e+0
 2092              	.L98:
 2093              	.LVL83:
 2094              	.LBB1110:
 2095              	.LBB1109:
2122:Veno-Echo.cpp ****     {
2123:Veno-Echo.cpp ****         case QUARTER:
2124:Veno-Echo.cpp ****         retVal = 1.0;
2125:Veno-Echo.cpp ****         break;
2126:Veno-Echo.cpp **** 
2127:Veno-Echo.cpp ****         case DOTTED_EIGHT:
2128:Veno-Echo.cpp ****         retVal = 3.0/2.0;
2129:Veno-Echo.cpp ****         break;
2130:Veno-Echo.cpp **** 
2131:Veno-Echo.cpp ****         case EIGHT:
2132:Veno-Echo.cpp ****         retVal = 2.0;
2133:Veno-Echo.cpp ****         break;
2134:Veno-Echo.cpp **** 
2135:Veno-Echo.cpp ****         case TWELVE:
2136:Veno-Echo.cpp ****         retVal = 3.0;
2137:Veno-Echo.cpp ****         break;
2138:Veno-Echo.cpp **** 
2139:Veno-Echo.cpp ****         default:
2140:Veno-Echo.cpp ****         retVal = 1.0;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 136


2141:Veno-Echo.cpp ****         break;
2142:Veno-Echo.cpp ****     }
2143:Veno-Echo.cpp **** 
2144:Veno-Echo.cpp **** return retVal;
 2096              		.loc 20 2144 1 is_stmt 1 view .LVU540
 2097              		.loc 20 2144 1 is_stmt 0 view .LVU541
 2098              	.LBE1109:
 2099              	.LBE1110:
1034:Veno-Echo.cpp ****             //save setting:
 2100              		.loc 20 1034 34 view .LVU542
 2101 016a B0EE480A 		vmov.f32	s0, s16
 2102              	.LVL84:
1034:Veno-Echo.cpp ****             //save setting:
 2103              		.loc 20 1034 34 view .LVU543
 2104 016e 1E48     		ldr	r0, .L111+60
 2105 0170 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 2106              	.LVL85:
1036:Veno-Echo.cpp ****             save_flag = true;
 2107              		.loc 20 1036 13 is_stmt 1 view .LVU544
1036:Veno-Echo.cpp ****             save_flag = true;
 2108              		.loc 20 1036 13 is_stmt 0 view .LVU545
 2109              	.LBE1104:
 2110              	.LBE1123:
 2111              	.LBE1130:
2120:Veno-Echo.cpp ****     switch(ratio)
 2112              		.loc 20 2120 1 is_stmt 1 view .LVU546
2121:Veno-Echo.cpp ****     {
 2113              		.loc 20 2121 5 view .LVU547
 2114              		.loc 20 2144 1 view .LVU548
 2115              	.LBB1131:
 2116              	.LBB1124:
 2117              	.LBB1121:
1036:Veno-Echo.cpp ****             save_flag = true;
 2118              		.loc 20 1036 34 is_stmt 0 view .LVU549
 2119 0174 1D49     		ldr	r1, .L111+64
 2120              	.LBB1111:
 2121              	.LBB1112:
 2122              	.LBB1113:
 2123              	.LBB1114:
 2124              	.LBB1115:
 2125              		.loc 22 397 18 view .LVU550
 2126 0176 1E4B     		ldr	r3, .L111+68
 2127 0178 0122     		movs	r2, #1
 2128              	.LBE1115:
 2129              	.LBE1114:
 2130              	.LBE1113:
 2131              	.LBE1112:
 2132              	.LBE1111:
1036:Veno-Echo.cpp ****             save_flag = true;
 2133              		.loc 20 1036 34 view .LVU551
 2134 017a 81ED018A 		vstr.32	s16, [r1, #4]
1037:Veno-Echo.cpp ****         }
 2135              		.loc 20 1037 13 is_stmt 1 view .LVU552
 2136              	.LVL86:
 2137              	.LBB1120:
 2138              	.LBI1111:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 137


 2139              		.loc 23 80 5 view .LVU553
 2140              	.LBB1119:
 2141              		.loc 23 81 7 view .LVU554
 2142              	.LBB1118:
 2143              	.LBI1113:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 2144              		.loc 22 288 7 view .LVU555
 2145              	.LBB1117:
 2146              	.LBI1114:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 2147              		.loc 22 390 7 view .LVU556
 2148              	.LBB1116:
 2149              		.loc 22 397 18 is_stmt 0 view .LVU557
 2150 017e BFF35B8F 		dmb	ish
 2151 0182 1A70     		strb	r2, [r3]
 2152 0184 BFF35B8F 		dmb	ish
 2153              	.LVL87:
 2154              		.loc 22 397 18 view .LVU558
 2155              	.LBE1116:
 2156              	.LBE1117:
 2157              	.LBE1118:
 2158              	.LBE1119:
 2159              	.LBE1120:
 2160              	.LBE1121:
 2161              	.LBE1124:
 2162              	.LBE1131:
1041:Veno-Echo.cpp **** void Update_feedbackL_CV()
 2163              		.loc 20 1041 1 view .LVU559
 2164 0188 BDEC028B 		vldm	sp!, {d8}
 2165              		.cfi_remember_state
 2166              		.cfi_restore 80
 2167              		.cfi_restore 81
 2168              		.cfi_def_cfa_offset 8
 2169 018c 10BD     		pop	{r4, pc}
 2170              	.LVL88:
 2171              	.L109:
 2172              		.cfi_restore_state
 2173              	.LBB1132:
 2174              	.LBB1125:
 2175              	.LBB1095:
 2176              	.LBB1083:
2016:Veno-Echo.cpp ****     }
 2177              		.loc 20 2016 16 view .LVU560
 2178 018e DFED157A 		vldr.32	s15, .L111+56
 2179              	.LVL89:
2016:Veno-Echo.cpp ****     }
 2180              		.loc 20 2016 16 view .LVU561
 2181 0192 76E7     		b	.L89
 2182              	.LVL90:
 2183              	.L110:
2016:Veno-Echo.cpp ****     }
 2184              		.loc 20 2016 16 view .LVU562
 2185              	.LBE1083:
 2186              	.LBE1095:
 2187              	.LBB1096:
 2188              	.LBB1093:
 2189 0194 DFED137A 		vldr.32	s15, .L111+56
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 138


 2190 0198 BDE7     		b	.L87
 2191              	.LVL91:
 2192              	.L97:
2016:Veno-Echo.cpp ****     }
 2193              		.loc 20 2016 16 view .LVU563
 2194 019a 164A     		ldr	r2, .L111+72
 2195 019c 02EBC303 		add	r3, r2, r3, lsl #3
 2196 01a0 93ED008B 		vldr.64	d8, [r3]
 2197 01a4 B7EEC88B 		vcvt.f32.f64	s16, d8
 2198 01a8 DFE7     		b	.L98
 2199              	.L112:
 2200 01aa 00BF     		.align	2
 2201              	.L111:
 2202 01ac 18000000 		.word	.LANCHOR4+24
 2203 01b0 00000000 		.word	.LANCHOR18
 2204 01b4 ABAAAA2A 		.word	715827883
 2205 01b8 00000000 		.word	.LANCHOR7
 2206 01bc 00000000 		.word	.LANCHOR19
 2207 01c0 00000000 		.word	.LANCHOR20
 2208 01c4 00000000 		.word	.LANCHOR21
 2209 01c8 00000000 		.word	.LANCHOR17
 2210 01cc 00000000 		.word	.LANCHOR22
 2211 01d0 00000000 		.word	.LANCHOR12
 2212 01d4 00000000 		.word	.LANCHOR1
 2213 01d8 00000000 		.word	.LANCHOR23
 2214 01dc 00000000 		.word	.LANCHOR24
 2215 01e0 0AD7A33B 		.word	1000593162
 2216 01e4 00000000 		.word	0
 2217 01e8 00000000 		.word	.LANCHOR26
 2218 01ec 00000000 		.word	.LANCHOR15
 2219 01f0 00000000 		.word	.LANCHOR16
 2220 01f4 00000000 		.word	.LANCHOR25
 2221              	.LBE1093:
 2222              	.LBE1096:
 2223              	.LBE1125:
 2224              	.LBE1132:
 2225              		.cfi_endproc
 2226              	.LFE4315:
 2228              		.section	.text._Z19Update_feedbackL_CVv,"ax",%progbits
 2229              		.align	1
 2230              		.p2align 2,,3
 2231              		.global	_Z19Update_feedbackL_CVv
 2232              		.syntax unified
 2233              		.thumb
 2234              		.thumb_func
 2235              		.fpu fpv5-d16
 2237              	_Z19Update_feedbackL_CVv:
 2238              	.LFB4316:
1043:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 2239              		.loc 20 1043 1 is_stmt 1 view -0
 2240              		.cfi_startproc
 2241              		@ args = 0, pretend = 0, frame = 0
 2242              		@ frame_needed = 0, uses_anonymous_args = 0
1044:Veno-Echo.cpp **** }
 2243              		.loc 20 1044 5 view .LVU565
1043:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 2244              		.loc 20 1043 1 is_stmt 0 view .LVU566
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 139


 2245 0000 08B5     		push	{r3, lr}
 2246              		.cfi_def_cfa_offset 8
 2247              		.cfi_offset 3, -8
 2248              		.cfi_offset 14, -4
1044:Veno-Echo.cpp **** }
 2249              		.loc 20 1044 35 view .LVU567
 2250 0002 0221     		movs	r1, #2
 2251 0004 0348     		ldr	r0, .L115
 2252 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2253              	.LVL92:
1044:Veno-Echo.cpp **** }
 2254              		.loc 20 1044 18 view .LVU568
 2255 000a 034B     		ldr	r3, .L115+4
 2256 000c 83ED000A 		vstr.32	s0, [r3]
1045:Veno-Echo.cpp **** void Update_feedbackL()
 2257              		.loc 20 1045 1 view .LVU569
 2258 0010 08BD     		pop	{r3, pc}
 2259              	.L116:
 2260 0012 00BF     		.align	2
 2261              	.L115:
 2262 0014 18000000 		.word	.LANCHOR4+24
 2263 0018 00000000 		.word	.LANCHOR27
 2264              		.cfi_endproc
 2265              	.LFE4316:
 2267              		.section	.text._Z16Update_feedbackLv,"ax",%progbits
 2268              		.align	1
 2269              		.p2align 2,,3
 2270              		.global	_Z16Update_feedbackLv
 2271              		.syntax unified
 2272              		.thumb
 2273              		.thumb_func
 2274              		.fpu fpv5-d16
 2276              	_Z16Update_feedbackLv:
 2277              	.LFB4317:
1047:Veno-Echo.cpp ****     static bool lastShift{};
 2278              		.loc 20 1047 1 is_stmt 1 view -0
 2279              		.cfi_startproc
 2280              		@ args = 0, pretend = 0, frame = 0
 2281              		@ frame_needed = 0, uses_anonymous_args = 0
1048:Veno-Echo.cpp ****     static bool feedbackL_pickup{};
 2282              		.loc 20 1048 5 view .LVU571
1049:Veno-Echo.cpp ****     static bool HPCutoff_pickup{};
 2283              		.loc 20 1049 5 view .LVU572
1050:Veno-Echo.cpp **** 
 2284              		.loc 20 1050 5 view .LVU573
1052:Veno-Echo.cpp **** 
 2285              		.loc 20 1052 5 view .LVU574
1056:Veno-Echo.cpp **** 
 2286              		.loc 20 1056 5 view .LVU575
1056:Veno-Echo.cpp **** 
 2287              		.loc 20 1056 43 is_stmt 0 view .LVU576
 2288 0000 0122     		movs	r2, #1
 2289 0002 0721     		movs	r1, #7
 2290 0004 6548     		ldr	r0, .L145
1047:Veno-Echo.cpp ****     static bool lastShift{};
 2291              		.loc 20 1047 1 view .LVU577
 2292 0006 10B5     		push	{r4, lr}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 140


 2293              		.cfi_def_cfa_offset 8
 2294              		.cfi_offset 4, -8
 2295              		.cfi_offset 14, -4
 2296 0008 2DED028B 		vpush.64	{d8}
 2297              		.cfi_def_cfa_offset 16
 2298              		.cfi_offset 80, -16
 2299              		.cfi_offset 81, -12
1056:Veno-Echo.cpp **** 
 2300              		.loc 20 1056 43 view .LVU578
 2301 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2302              	.LVL93:
 2303              	.LBB1133:
1058:Veno-Echo.cpp ****     {   
 2304              		.loc 20 1058 9 view .LVU579
 2305 0010 634B     		ldr	r3, .L145+4
 2306              	.LVL94:
1058:Veno-Echo.cpp ****     {   
 2307              		.loc 20 1058 9 view .LVU580
 2308              	.LBE1133:
1058:Veno-Echo.cpp ****     {   
 2309              		.loc 20 1058 5 is_stmt 1 view .LVU581
 2310              	.LBB1178:
 2311              	.LBB1134:
1062:Veno-Echo.cpp ****         {
 2312              		.loc 20 1062 19 is_stmt 0 view .LVU582
 2313 0012 644A     		ldr	r2, .L145+8
 2314              	.LBE1134:
1058:Veno-Echo.cpp ****     {   
 2315              		.loc 20 1058 5 view .LVU583
 2316 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2317 0016 002B     		cmp	r3, #0
 2318 0018 3DD1     		bne	.L118
 2319              	.LBB1157:
1060:Veno-Echo.cpp ****         //update pickup
 2320              		.loc 20 1060 9 is_stmt 1 view .LVU584
1062:Veno-Echo.cpp ****         {
 2321              		.loc 20 1062 9 view .LVU585
 2322 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2323 001c 0029     		cmp	r1, #0
 2324 001e 47D0     		beq	.L119
1064:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 2325              		.loc 20 1064 13 view .LVU586
1065:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2326              		.loc 20 1065 30 is_stmt 0 view .LVU587
 2327 0020 6148     		ldr	r0, .L145+12
1066:Veno-Echo.cpp ****         } 
 2328              		.loc 20 1066 27 view .LVU588
 2329 0022 6249     		ldr	r1, .L145+16
1064:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 2330              		.loc 20 1064 23 view .LVU589
 2331 0024 1370     		strb	r3, [r2]
1065:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2332              		.loc 20 1065 13 is_stmt 1 view .LVU590
1065:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2333              		.loc 20 1065 30 is_stmt 0 view .LVU591
 2334 0026 0370     		strb	r3, [r0]
1066:Veno-Echo.cpp ****         } 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 141


 2335              		.loc 20 1066 13 is_stmt 1 view .LVU592
1066:Veno-Echo.cpp ****         } 
 2336              		.loc 20 1066 27 is_stmt 0 view .LVU593
 2337 0028 81ED000A 		vstr.32	s0, [r1]
 2338              	.L120:
1079:Veno-Echo.cpp **** 
 2339              		.loc 20 1079 9 is_stmt 1 view .LVU594
 2340              	.LVL95:
1081:Veno-Echo.cpp ****         {
 2341              		.loc 20 1081 9 view .LVU595
1089:Veno-Echo.cpp ****         }
 2342              		.loc 20 1089 13 view .LVU596
 2343              	.LBB1135:
 2344              	.LBI1135:
2009:Veno-Echo.cpp **** {
 2345              		.loc 20 2009 7 view .LVU597
 2346              	.LBB1136:
2011:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2347              		.loc 20 2011 5 view .LVU598
2012:Veno-Echo.cpp **** 
 2348              		.loc 20 2012 5 view .LVU599
 2349              	.LBE1136:
 2350              	.LBE1135:
1089:Veno-Echo.cpp ****         }
 2351              		.loc 20 1089 41 is_stmt 0 view .LVU600
 2352 002c 604A     		ldr	r2, .L145+20
 2353              	.LBB1140:
 2354              	.LBB1137:
2012:Veno-Echo.cpp **** 
 2355              		.loc 20 2012 39 view .LVU601
 2356 002e F7EE006A 		vmov.f32	s13, #1.0e+0
2012:Veno-Echo.cpp **** 
 2357              		.loc 20 2012 49 view .LVU602
 2358 0032 F6EE005A 		vmov.f32	s11, #5.0e-1
 2359              	.LBE1137:
 2360              	.LBE1140:
1089:Veno-Echo.cpp ****         }
 2361              		.loc 20 1089 41 view .LVU603
 2362 0036 5F4B     		ldr	r3, .L145+24
 2363              	.LBB1141:
 2364              	.LBB1138:
2012:Veno-Echo.cpp **** 
 2365              		.loc 20 2012 39 view .LVU604
 2366 0038 92ED007A 		vldr.32	s14, [r2]
2012:Veno-Echo.cpp **** 
 2367              		.loc 20 2012 12 view .LVU605
 2368 003c B0EE006A 		vmov.f32	s12, #2.0e+0
 2369 0040 D3ED007A 		vldr.32	s15, [r3]
2012:Veno-Echo.cpp **** 
 2370              		.loc 20 2012 39 view .LVU606
 2371 0044 36EEC77A 		vsub.f32	s14, s13, s14
2012:Veno-Echo.cpp **** 
 2372              		.loc 20 2012 49 view .LVU607
 2373 0048 37EE657A 		vsub.f32	s14, s14, s11
2012:Veno-Echo.cpp **** 
 2374              		.loc 20 2012 12 view .LVU608
 2375 004c E7EE067A 		vfma.f32	s15, s14, s12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 142


 2376              	.LVL96:
2014:Veno-Echo.cpp ****     {
 2377              		.loc 20 2014 5 is_stmt 1 view .LVU609
 2378 0050 F5EEC07A 		vcmpe.f32	s15, #0
 2379 0054 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2380 0058 00F19A80 		bmi	.L143
2019:Veno-Echo.cpp ****     {
 2381              		.loc 20 2019 5 view .LVU610
2021:Veno-Echo.cpp ****     }
 2382              		.loc 20 2021 16 is_stmt 0 view .LVU611
 2383 005c F4EE667A 		vcmp.f32	s15, s13
 2384 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2385 0064 76FEA77A 		vselgt.f32	s15, s13, s15
 2386              	.LVL97:
 2387              	.L125:
2021:Veno-Echo.cpp ****     }
 2388              		.loc 20 2021 16 view .LVU612
 2389              	.LBE1138:
 2390              	.LBE1141:
1092:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2391              		.loc 20 1092 9 is_stmt 1 view .LVU613
1092:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2392              		.loc 20 1092 37 is_stmt 0 view .LVU614
 2393 0068 B0EE670A 		vmov.f32	s0, s15
 2394              	.LVL98:
1092:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2395              		.loc 20 1092 37 view .LVU615
 2396 006c 0020     		movs	r0, #0
 2397 006e B7EE041A 		vmov.f32	s2, #1.25e+0
 2398 0072 DFED510A 		vldr.32	s1, .L145+28
 2399 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2400              	.LVL99:
1093:Veno-Echo.cpp ****     }
 2401              		.loc 20 1093 9 is_stmt 1 view .LVU616
 2402              	.LBB1142:
 2403              	.LBI1142:
 2404              		.file 25 "../DaisySP/Source/Utility/dsp.h"
   1:../DaisySP/Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../DaisySP/Source/Utility/dsp.h **** */
   3:../DaisySP/Source/Utility/dsp.h **** #pragma once
   4:../DaisySP/Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
   5:../DaisySP/Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../DaisySP/Source/Utility/dsp.h **** #include <cassert>
   7:../DaisySP/Source/Utility/dsp.h **** #include <cstdint>
   8:../DaisySP/Source/Utility/dsp.h **** #include <random>
   9:../DaisySP/Source/Utility/dsp.h **** #include <cmath>
  10:../DaisySP/Source/Utility/dsp.h **** 
  11:../DaisySP/Source/Utility/dsp.h **** /** PIs
  12:../DaisySP/Source/Utility/dsp.h **** */
  13:../DaisySP/Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../DaisySP/Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../DaisySP/Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../DaisySP/Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../DaisySP/Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  18:../DaisySP/Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../DaisySP/Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../DaisySP/Source/Utility/dsp.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 143


  21:../DaisySP/Source/Utility/dsp.h **** namespace daisysp
  22:../DaisySP/Source/Utility/dsp.h **** {
  23:../DaisySP/Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../DaisySP/Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../DaisySP/Source/Utility/dsp.h **** 
  26:../DaisySP/Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../DaisySP/Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../DaisySP/Source/Utility/dsp.h **** 
  29:../DaisySP/Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../DaisySP/Source/Utility/dsp.h **** c/o stephen mccaul
  31:../DaisySP/Source/Utility/dsp.h **** */
  32:../DaisySP/Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../DaisySP/Source/Utility/dsp.h **** {
  34:../DaisySP/Source/Utility/dsp.h ****     float r;
  35:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  36:../DaisySP/Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../DaisySP/Source/Utility/dsp.h **** #else
  38:../DaisySP/Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  40:../DaisySP/Source/Utility/dsp.h ****     return r;
  41:../DaisySP/Source/Utility/dsp.h **** }
  42:../DaisySP/Source/Utility/dsp.h **** 
  43:../DaisySP/Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../DaisySP/Source/Utility/dsp.h **** {
  45:../DaisySP/Source/Utility/dsp.h ****     float r;
  46:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  47:../DaisySP/Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  48:../DaisySP/Source/Utility/dsp.h **** #else
  49:../DaisySP/Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  50:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  51:../DaisySP/Source/Utility/dsp.h ****     return r;
  52:../DaisySP/Source/Utility/dsp.h **** }
  53:../DaisySP/Source/Utility/dsp.h **** 
  54:../DaisySP/Source/Utility/dsp.h **** /** quick fp clamp
  55:../DaisySP/Source/Utility/dsp.h **** */
  56:../DaisySP/Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../DaisySP/Source/Utility/dsp.h **** {
  58:../DaisySP/Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../DaisySP/Source/Utility/dsp.h **** }
  60:../DaisySP/Source/Utility/dsp.h **** 
  61:../DaisySP/Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  62:../DaisySP/Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../DaisySP/Source/Utility/dsp.h **** These are approximations
  64:../DaisySP/Source/Utility/dsp.h **** */
  65:../DaisySP/Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../DaisySP/Source/Utility/dsp.h **** {
  67:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  68:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  70:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../DaisySP/Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  74:../DaisySP/Source/Utility/dsp.h ****     return f;
  75:../DaisySP/Source/Utility/dsp.h **** }
  76:../DaisySP/Source/Utility/dsp.h **** 
  77:../DaisySP/Source/Utility/dsp.h **** inline float fastroot(float f, int n)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 144


  78:../DaisySP/Source/Utility/dsp.h **** {
  79:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  80:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  82:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../DaisySP/Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  86:../DaisySP/Source/Utility/dsp.h ****     return f;
  87:../DaisySP/Source/Utility/dsp.h **** }
  88:../DaisySP/Source/Utility/dsp.h **** 
  89:../DaisySP/Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../DaisySP/Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../DaisySP/Source/Utility/dsp.h **** */
  92:../DaisySP/Source/Utility/dsp.h **** inline float pow10f(float f)
  93:../DaisySP/Source/Utility/dsp.h **** {
  94:../DaisySP/Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../DaisySP/Source/Utility/dsp.h **** }
  96:../DaisySP/Source/Utility/dsp.h **** 
  97:../DaisySP/Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../DaisySP/Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../DaisySP/Source/Utility/dsp.h **** */
 100:../DaisySP/Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../DaisySP/Source/Utility/dsp.h **** {
 102:../DaisySP/Source/Utility/dsp.h ****     float frac;
 103:../DaisySP/Source/Utility/dsp.h ****     int   exp;
 104:../DaisySP/Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../DaisySP/Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 107:../DaisySP/Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 109:../DaisySP/Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 111:../DaisySP/Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../DaisySP/Source/Utility/dsp.h ****     f += exp;
 113:../DaisySP/Source/Utility/dsp.h ****     return (f);
 114:../DaisySP/Source/Utility/dsp.h **** }
 115:../DaisySP/Source/Utility/dsp.h **** 
 116:../DaisySP/Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../DaisySP/Source/Utility/dsp.h **** {
 118:../DaisySP/Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 119:../DaisySP/Source/Utility/dsp.h **** }
 120:../DaisySP/Source/Utility/dsp.h **** 
 121:../DaisySP/Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../DaisySP/Source/Utility/dsp.h **** */
 123:../DaisySP/Source/Utility/dsp.h **** inline float mtof(float m)
 124:../DaisySP/Source/Utility/dsp.h **** {
 125:../DaisySP/Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 126:../DaisySP/Source/Utility/dsp.h **** }
 127:../DaisySP/Source/Utility/dsp.h **** 
 128:../DaisySP/Source/Utility/dsp.h **** 
 129:../DaisySP/Source/Utility/dsp.h **** /** one pole lpf
 130:../DaisySP/Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 131:../DaisySP/Source/Utility/dsp.h **** calls to properly filter the signal
 132:../DaisySP/Source/Utility/dsp.h **** coeff can be calculated:
 133:../DaisySP/Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 134:../DaisySP/Source/Utility/dsp.h **** */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 145


 135:../DaisySP/Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 2405              		.loc 25 135 13 view .LVU617
 2406              	.LBB1143:
 136:../DaisySP/Source/Utility/dsp.h **** {
 137:../DaisySP/Source/Utility/dsp.h ****     out += coeff * (in - out);
 2407              		.loc 25 137 5 view .LVU618
 2408              		.loc 25 137 9 is_stmt 0 view .LVU619
 2409 007a 504B     		ldr	r3, .L145+32
 2410 007c 9FED507A 		vldr.32	s14, .L145+36
 2411 0080 D3ED007A 		vldr.32	s15, [r3]
 2412              		.loc 25 137 24 view .LVU620
 2413 0084 30EE670A 		vsub.f32	s0, s0, s15
 2414              	.LVL100:
 2415              		.loc 25 137 24 view .LVU621
 2416              	.LBE1143:
 2417              	.LBE1142:
 2418              	.LBE1157:
 2419              	.LBE1178:
1129:Veno-Echo.cpp **** 
 2420              		.loc 20 1129 1 view .LVU622
 2421 0088 BDEC028B 		vldm	sp!, {d8}
 2422              		.cfi_remember_state
 2423              		.cfi_restore 80
 2424              		.cfi_restore 81
 2425              		.cfi_def_cfa_offset 8
 2426              	.LBB1179:
 2427              	.LBB1158:
 2428              	.LBB1145:
 2429              	.LBB1144:
 2430              		.loc 25 137 9 view .LVU623
 2431 008c E0EE077A 		vfma.f32	s15, s0, s14
 2432 0090 C3ED007A 		vstr.32	s15, [r3]
 2433              	.LBE1144:
 2434              	.LBE1145:
 2435              	.LBE1158:
 2436              	.LBE1179:
1129:Veno-Echo.cpp **** 
 2437              		.loc 20 1129 1 view .LVU624
 2438 0094 10BD     		pop	{r4, pc}
 2439              	.LVL101:
 2440              	.L118:
 2441              		.cfi_restore_state
 2442              	.LBB1180:
 2443              	.LBB1159:
1097:Veno-Echo.cpp **** 
 2444              		.loc 20 1097 9 is_stmt 1 view .LVU625
1099:Veno-Echo.cpp ****         {
 2445              		.loc 20 1099 9 view .LVU626
 2446 0096 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2447 0098 002B     		cmp	r3, #0
 2448 009a 3ED1     		bne	.L128
1101:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2449              		.loc 20 1101 13 view .LVU627
1101:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2450              		.loc 20 1101 23 is_stmt 0 view .LVU628
 2451 009c 0124     		movs	r4, #1
1102:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 146


 2452              		.loc 20 1102 29 view .LVU629
 2453 009e 4948     		ldr	r0, .L145+40
1103:Veno-Echo.cpp ****         }
 2454              		.loc 20 1103 26 view .LVU630
 2455 00a0 4949     		ldr	r1, .L145+44
1101:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2456              		.loc 20 1101 23 view .LVU631
 2457 00a2 1470     		strb	r4, [r2]
1102:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2458              		.loc 20 1102 13 is_stmt 1 view .LVU632
1102:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2459              		.loc 20 1102 29 is_stmt 0 view .LVU633
 2460 00a4 0370     		strb	r3, [r0]
1103:Veno-Echo.cpp ****         }
 2461              		.loc 20 1103 13 is_stmt 1 view .LVU634
1103:Veno-Echo.cpp ****         }
 2462              		.loc 20 1103 26 is_stmt 0 view .LVU635
 2463 00a6 81ED000A 		vstr.32	s0, [r1]
 2464              	.L117:
1103:Veno-Echo.cpp ****         }
 2465              		.loc 20 1103 26 view .LVU636
 2466              	.LBE1159:
 2467              	.LBE1180:
1129:Veno-Echo.cpp **** 
 2468              		.loc 20 1129 1 view .LVU637
 2469 00aa BDEC028B 		vldm	sp!, {d8}
 2470              		.cfi_remember_state
 2471              		.cfi_restore 80
 2472              		.cfi_restore 81
 2473              		.cfi_def_cfa_offset 8
 2474 00ae 10BD     		pop	{r4, pc}
 2475              	.L119:
 2476              		.cfi_restore_state
 2477              	.LBB1181:
 2478              	.LBB1175:
1070:Veno-Echo.cpp ****             {
 2479              		.loc 20 1070 13 is_stmt 1 view .LVU638
1070:Veno-Echo.cpp ****             {
 2480              		.loc 20 1070 16 is_stmt 0 view .LVU639
 2481 00b0 3D4B     		ldr	r3, .L145+12
1070:Veno-Echo.cpp ****             {
 2482              		.loc 20 1070 13 view .LVU640
 2483 00b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2484 00b4 7AB9     		cbnz	r2, .L121
1072:Veno-Echo.cpp ****                 {
 2485              		.loc 20 1072 17 is_stmt 1 view .LVU641
 2486              	.LVL102:
 2487              	.LBB1146:
 2488              	.LBI1146:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2489              		.loc 21 75 3 view .LVU642
 2490              	.LBB1147:
 2491              		.loc 21 76 5 view .LVU643
 2492              		.loc 21 76 5 is_stmt 0 view .LVU644
 2493              	.LBE1147:
 2494              	.LBE1146:
1072:Veno-Echo.cpp ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 147


 2495              		.loc 20 1072 23 view .LVU645
 2496 00b6 3D4A     		ldr	r2, .L145+16
1072:Veno-Echo.cpp ****                 {
 2497              		.loc 20 1072 17 view .LVU646
 2498 00b8 9FED447A 		vldr.32	s14, .L145+48
1072:Veno-Echo.cpp ****                 {
 2499              		.loc 20 1072 23 view .LVU647
 2500 00bc D2ED007A 		vldr.32	s15, [r2]
 2501 00c0 70EE677A 		vsub.f32	s15, s0, s15
 2502              	.LBB1149:
 2503              	.LBB1148:
 2504              		.loc 21 76 31 view .LVU648
 2505 00c4 F0EEE77A 		vabs.f32	s15, s15
 2506              	.LBE1148:
 2507              	.LBE1149:
1072:Veno-Echo.cpp ****                 {
 2508              		.loc 20 1072 17 view .LVU649
 2509 00c8 F4EEC77A 		vcmpe.f32	s15, s14
 2510 00cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2511 00d0 ACDD     		ble	.L120
1074:Veno-Echo.cpp ****                 }
 2512              		.loc 20 1074 21 is_stmt 1 view .LVU650
1074:Veno-Echo.cpp ****                 }
 2513              		.loc 20 1074 38 is_stmt 0 view .LVU651
 2514 00d2 0122     		movs	r2, #1
 2515 00d4 1A70     		strb	r2, [r3]
 2516              	.L121:
1079:Veno-Echo.cpp **** 
 2517              		.loc 20 1079 9 is_stmt 1 view .LVU652
 2518              	.LVL103:
1081:Veno-Echo.cpp ****         {
 2519              		.loc 20 1081 9 view .LVU653
1083:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 2520              		.loc 20 1083 13 view .LVU654
 2521              	.LBB1150:
 2522              	.LBI1150:
2009:Veno-Echo.cpp **** {
 2523              		.loc 20 2009 7 view .LVU655
 2524              	.LBB1151:
2011:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2525              		.loc 20 2011 5 view .LVU656
2012:Veno-Echo.cpp **** 
 2526              		.loc 20 2012 5 view .LVU657
 2527              	.LBE1151:
 2528              	.LBE1150:
1083:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 2529              		.loc 20 1083 41 is_stmt 0 view .LVU658
 2530 00d6 364B     		ldr	r3, .L145+20
 2531              	.LBB1154:
 2532              	.LBB1152:
2012:Veno-Echo.cpp **** 
 2533              		.loc 20 2012 39 view .LVU659
 2534 00d8 B7EE007A 		vmov.f32	s14, #1.0e+0
2012:Veno-Echo.cpp **** 
 2535              		.loc 20 2012 49 view .LVU660
 2536 00dc B6EE006A 		vmov.f32	s12, #5.0e-1
2012:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 148


 2537              		.loc 20 2012 39 view .LVU661
 2538 00e0 D3ED007A 		vldr.32	s15, [r3]
2012:Veno-Echo.cpp **** 
 2539              		.loc 20 2012 12 view .LVU662
 2540 00e4 F0EE006A 		vmov.f32	s13, #2.0e+0
2012:Veno-Echo.cpp **** 
 2541              		.loc 20 2012 39 view .LVU663
 2542 00e8 77EE677A 		vsub.f32	s15, s14, s15
2012:Veno-Echo.cpp **** 
 2543              		.loc 20 2012 49 view .LVU664
 2544 00ec 77EEC67A 		vsub.f32	s15, s15, s12
2012:Veno-Echo.cpp **** 
 2545              		.loc 20 2012 12 view .LVU665
 2546 00f0 B0EE406A 		vmov.f32	s12, s0
 2547 00f4 A7EEA66A 		vfma.f32	s12, s15, s13
2014:Veno-Echo.cpp ****     {
 2548              		.loc 20 2014 5 view .LVU666
 2549 00f8 B5EEC06A 		vcmpe.f32	s12, #0
2012:Veno-Echo.cpp **** 
 2550              		.loc 20 2012 12 view .LVU667
 2551 00fc F0EE467A 		vmov.f32	s15, s12
 2552              	.LVL104:
2014:Veno-Echo.cpp ****     {
 2553              		.loc 20 2014 5 is_stmt 1 view .LVU668
 2554 0100 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2555 0104 47D4     		bmi	.L144
2019:Veno-Echo.cpp ****     {
 2556              		.loc 20 2019 5 view .LVU669
2021:Veno-Echo.cpp ****     }
 2557              		.loc 20 2021 16 is_stmt 0 view .LVU670
 2558 0106 F4EE477A 		vcmp.f32	s15, s14
 2559 010a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2560 010e 77FE277A 		vselgt.f32	s15, s14, s15
 2561              	.L123:
 2562              	.LVL105:
2024:Veno-Echo.cpp **** }
 2563              		.loc 20 2024 5 is_stmt 1 view .LVU671
2024:Veno-Echo.cpp **** }
 2564              		.loc 20 2024 5 is_stmt 0 view .LVU672
 2565              	.LBE1152:
 2566              	.LBE1154:
1084:Veno-Echo.cpp ****         }
 2567              		.loc 20 1084 13 is_stmt 1 view .LVU673
1084:Veno-Echo.cpp ****         }
 2568              		.loc 20 1084 28 is_stmt 0 view .LVU674
 2569 0112 284B     		ldr	r3, .L145+24
 2570 0114 83ED000A 		vstr.32	s0, [r3]
 2571 0118 A6E7     		b	.L125
 2572              	.LVL106:
 2573              	.L128:
1084:Veno-Echo.cpp ****         }
 2574              		.loc 20 1084 28 view .LVU675
 2575              	.LBE1175:
 2576              	.LBB1176:
1108:Veno-Echo.cpp ****             {
 2577              		.loc 20 1108 13 is_stmt 1 view .LVU676
1108:Veno-Echo.cpp ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 149


 2578              		.loc 20 1108 16 is_stmt 0 view .LVU677
 2579 011a 2A4B     		ldr	r3, .L145+40
1108:Veno-Echo.cpp ****             {
 2580              		.loc 20 1108 13 view .LVU678
 2581 011c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2582 011e 7AB9     		cbnz	r2, .L130
1110:Veno-Echo.cpp ****                 {
 2583              		.loc 20 1110 17 is_stmt 1 view .LVU679
 2584              	.LVL107:
 2585              	.LBB1160:
 2586              	.LBI1160:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2587              		.loc 21 75 3 view .LVU680
 2588              	.LBB1161:
 2589              		.loc 21 76 5 view .LVU681
 2590              		.loc 21 76 5 is_stmt 0 view .LVU682
 2591              	.LBE1161:
 2592              	.LBE1160:
1110:Veno-Echo.cpp ****                 {
 2593              		.loc 20 1110 23 view .LVU683
 2594 0120 294A     		ldr	r2, .L145+44
1110:Veno-Echo.cpp ****                 {
 2595              		.loc 20 1110 17 view .LVU684
 2596 0122 9FED2A7A 		vldr.32	s14, .L145+48
1110:Veno-Echo.cpp ****                 {
 2597              		.loc 20 1110 23 view .LVU685
 2598 0126 D2ED007A 		vldr.32	s15, [r2]
 2599 012a 70EE677A 		vsub.f32	s15, s0, s15
 2600              	.LBB1163:
 2601              	.LBB1162:
 2602              		.loc 21 76 31 view .LVU686
 2603 012e F0EEE77A 		vabs.f32	s15, s15
 2604              	.LBE1162:
 2605              	.LBE1163:
1110:Veno-Echo.cpp ****                 {
 2606              		.loc 20 1110 17 view .LVU687
 2607 0132 F4EEC77A 		vcmpe.f32	s15, s14
 2608 0136 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2609 013a B6DD     		ble	.L117
1112:Veno-Echo.cpp ****                 }
 2610              		.loc 20 1112 21 is_stmt 1 view .LVU688
1112:Veno-Echo.cpp ****                 }
 2611              		.loc 20 1112 37 is_stmt 0 view .LVU689
 2612 013c 0122     		movs	r2, #1
 2613 013e 1A70     		strb	r2, [r3]
 2614              	.L130:
1117:Veno-Echo.cpp ****         {
 2615              		.loc 20 1117 9 is_stmt 1 view .LVU690
 2616              	.LBB1164:
1119:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
 2617              		.loc 20 1119 13 view .LVU691
 2618              	.LVL108:
1120:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2619              		.loc 20 1120 13 view .LVU692
1120:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2620              		.loc 20 1120 29 is_stmt 0 view .LVU693
 2621 0140 9FED231A 		vldr.32	s2, .L145+52
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 150


 2622 0144 0120     		movs	r0, #1
 2623 0146 DFED230A 		vldr.32	s1, .L145+56
 2624 014a FFF7FEFF 		bl	_Z5scalefff9CurveType
 2625              	.LVL109:
1120:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2626              		.loc 20 1120 29 view .LVU694
 2627 014e B0EE408A 		vmov.f32	s16, s0
 2628              	.LVL110:
1121:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 2629              		.loc 20 1121 13 is_stmt 1 view .LVU695
1121:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 2630              		.loc 20 1121 26 is_stmt 0 view .LVU696
 2631 0152 2148     		ldr	r0, .L145+60
 2632 0154 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2633              	.LVL111:
1122:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 2634              		.loc 20 1122 13 is_stmt 1 view .LVU697
1122:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 2635              		.loc 20 1122 26 is_stmt 0 view .LVU698
 2636 0158 2048     		ldr	r0, .L145+64
 2637 015a B0EE480A 		vmov.f32	s0, s16
 2638 015e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2639              	.LVL112:
1123:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 2640              		.loc 20 1123 13 is_stmt 1 view .LVU699
1123:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 2641              		.loc 20 1123 31 is_stmt 0 view .LVU700
 2642 0162 B0EE480A 		vmov.f32	s0, s16
 2643 0166 1E48     		ldr	r0, .L145+68
 2644 0168 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2645              	.LVL113:
1124:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 2646              		.loc 20 1124 13 is_stmt 1 view .LVU701
1124:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 2647              		.loc 20 1124 31 is_stmt 0 view .LVU702
 2648 016c B0EE480A 		vmov.f32	s0, s16
 2649 0170 1C48     		ldr	r0, .L145+72
 2650 0172 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2651              	.LVL114:
1125:Veno-Echo.cpp ****             save_flag = true;
 2652              		.loc 20 1125 13 is_stmt 1 view .LVU703
1125:Veno-Echo.cpp ****             save_flag = true;
 2653              		.loc 20 1125 35 is_stmt 0 view .LVU704
 2654 0176 1C49     		ldr	r1, .L145+76
 2655              	.LBB1165:
 2656              	.LBB1166:
 2657              	.LBB1167:
 2658              	.LBB1168:
 2659              	.LBB1169:
 2660              		.loc 22 397 18 view .LVU705
 2661 0178 1C4B     		ldr	r3, .L145+80
 2662 017a 0122     		movs	r2, #1
 2663              	.LBE1169:
 2664              	.LBE1168:
 2665              	.LBE1167:
 2666              	.LBE1166:
 2667              	.LBE1165:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 151


1125:Veno-Echo.cpp ****             save_flag = true;
 2668              		.loc 20 1125 35 view .LVU706
 2669 017c 81ED048A 		vstr.32	s16, [r1, #16]
1126:Veno-Echo.cpp ****         }
 2670              		.loc 20 1126 13 is_stmt 1 view .LVU707
 2671              	.LVL115:
 2672              	.LBB1174:
 2673              	.LBI1165:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 2674              		.loc 23 80 5 view .LVU708
 2675              	.LBB1173:
 2676              		.loc 23 81 7 view .LVU709
 2677              	.LBB1172:
 2678              	.LBI1167:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 2679              		.loc 22 288 7 view .LVU710
 2680              	.LBB1171:
 2681              	.LBI1168:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 2682              		.loc 22 390 7 view .LVU711
 2683              	.LBB1170:
 2684              		.loc 22 397 18 is_stmt 0 view .LVU712
 2685 0180 BFF35B8F 		dmb	ish
 2686 0184 1A70     		strb	r2, [r3]
 2687 0186 BFF35B8F 		dmb	ish
 2688              	.LVL116:
 2689              		.loc 22 397 18 view .LVU713
 2690              	.LBE1170:
 2691              	.LBE1171:
 2692              	.LBE1172:
 2693              	.LBE1173:
 2694              	.LBE1174:
 2695              	.LBE1164:
 2696              	.LBE1176:
 2697              	.LBE1181:
1129:Veno-Echo.cpp **** 
 2698              		.loc 20 1129 1 view .LVU714
 2699 018a BDEC028B 		vldm	sp!, {d8}
 2700              		.cfi_remember_state
 2701              		.cfi_restore 80
 2702              		.cfi_restore 81
 2703              		.cfi_def_cfa_offset 8
 2704              	.LVL117:
1129:Veno-Echo.cpp **** 
 2705              		.loc 20 1129 1 view .LVU715
 2706 018e 10BD     		pop	{r4, pc}
 2707              	.LVL118:
 2708              	.L143:
 2709              		.cfi_restore_state
 2710              	.LBB1182:
 2711              	.LBB1177:
 2712              	.LBB1155:
 2713              	.LBB1139:
2016:Veno-Echo.cpp ****     }
 2714              		.loc 20 2016 16 view .LVU716
 2715 0190 DFED097A 		vldr.32	s15, .L145+28
 2716              	.LVL119:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 152


2016:Veno-Echo.cpp ****     }
 2717              		.loc 20 2016 16 view .LVU717
 2718 0194 68E7     		b	.L125
 2719              	.LVL120:
 2720              	.L144:
2016:Veno-Echo.cpp ****     }
 2721              		.loc 20 2016 16 view .LVU718
 2722              	.LBE1139:
 2723              	.LBE1155:
 2724              	.LBB1156:
 2725              	.LBB1153:
 2726 0196 DFED087A 		vldr.32	s15, .L145+28
 2727 019a BAE7     		b	.L123
 2728              	.L146:
 2729              		.align	2
 2730              	.L145:
 2731 019c 18000000 		.word	.LANCHOR4+24
 2732 01a0 00000000 		.word	.LANCHOR7
 2733 01a4 00000000 		.word	.LANCHOR28
 2734 01a8 00000000 		.word	.LANCHOR29
 2735 01ac 00000000 		.word	.LANCHOR30
 2736 01b0 00000000 		.word	.LANCHOR27
 2737 01b4 00000000 		.word	.LANCHOR31
 2738 01b8 00000000 		.word	0
 2739 01bc 00000000 		.word	.LANCHOR32
 2740 01c0 6F12033D 		.word	1023611503
 2741 01c4 00000000 		.word	.LANCHOR33
 2742 01c8 00000000 		.word	.LANCHOR34
 2743 01cc 0AD7A33B 		.word	1000593162
 2744 01d0 00004844 		.word	1145569280
 2745 01d4 0000C842 		.word	1120403456
 2746 01d8 00000000 		.word	.LANCHOR35
 2747 01dc 00000000 		.word	.LANCHOR36
 2748 01e0 00000000 		.word	.LANCHOR37
 2749 01e4 00000000 		.word	.LANCHOR38
 2750 01e8 00000000 		.word	.LANCHOR15
 2751 01ec 00000000 		.word	.LANCHOR16
 2752              	.LBE1153:
 2753              	.LBE1156:
 2754              	.LBE1177:
 2755              	.LBE1182:
 2756              		.cfi_endproc
 2757              	.LFE4317:
 2759              		.section	.text._Z19Update_feedbackR_CVv,"ax",%progbits
 2760              		.align	1
 2761              		.p2align 2,,3
 2762              		.global	_Z19Update_feedbackR_CVv
 2763              		.syntax unified
 2764              		.thumb
 2765              		.thumb_func
 2766              		.fpu fpv5-d16
 2768              	_Z19Update_feedbackR_CVv:
 2769              	.LFB4318:
1132:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 2770              		.loc 20 1132 1 is_stmt 1 view -0
 2771              		.cfi_startproc
 2772              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 153


 2773              		@ frame_needed = 0, uses_anonymous_args = 0
1133:Veno-Echo.cpp **** }
 2774              		.loc 20 1133 5 view .LVU720
1132:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 2775              		.loc 20 1132 1 is_stmt 0 view .LVU721
 2776 0000 08B5     		push	{r3, lr}
 2777              		.cfi_def_cfa_offset 8
 2778              		.cfi_offset 3, -8
 2779              		.cfi_offset 14, -4
1133:Veno-Echo.cpp **** }
 2780              		.loc 20 1133 35 view .LVU722
 2781 0002 0321     		movs	r1, #3
 2782 0004 0348     		ldr	r0, .L149
 2783 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2784              	.LVL121:
1133:Veno-Echo.cpp **** }
 2785              		.loc 20 1133 18 view .LVU723
 2786 000a 034B     		ldr	r3, .L149+4
 2787 000c 83ED000A 		vstr.32	s0, [r3]
1134:Veno-Echo.cpp **** 
 2788              		.loc 20 1134 1 view .LVU724
 2789 0010 08BD     		pop	{r3, pc}
 2790              	.L150:
 2791 0012 00BF     		.align	2
 2792              	.L149:
 2793 0014 18000000 		.word	.LANCHOR4+24
 2794 0018 00000000 		.word	.LANCHOR39
 2795              		.cfi_endproc
 2796              	.LFE4318:
 2798              		.section	.text._Z16Update_feedbackRv,"ax",%progbits
 2799              		.align	1
 2800              		.p2align 2,,3
 2801              		.global	_Z16Update_feedbackRv
 2802              		.syntax unified
 2803              		.thumb
 2804              		.thumb_func
 2805              		.fpu fpv5-d16
 2807              	_Z16Update_feedbackRv:
 2808              	.LFB4319:
1137:Veno-Echo.cpp ****     static bool lastShift{};
 2809              		.loc 20 1137 1 is_stmt 1 view -0
 2810              		.cfi_startproc
 2811              		@ args = 0, pretend = 0, frame = 0
 2812              		@ frame_needed = 0, uses_anonymous_args = 0
1138:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
 2813              		.loc 20 1138 5 view .LVU726
1139:Veno-Echo.cpp ****     static bool LPCutoff_pickup{};
 2814              		.loc 20 1139 5 view .LVU727
1140:Veno-Echo.cpp **** 
 2815              		.loc 20 1140 5 view .LVU728
1142:Veno-Echo.cpp **** 
 2816              		.loc 20 1142 5 view .LVU729
1145:Veno-Echo.cpp **** 
 2817              		.loc 20 1145 5 view .LVU730
1145:Veno-Echo.cpp **** 
 2818              		.loc 20 1145 43 is_stmt 0 view .LVU731
 2819 0000 0422     		movs	r2, #4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 154


 2820 0002 0721     		movs	r1, #7
 2821 0004 6548     		ldr	r0, .L179
1137:Veno-Echo.cpp ****     static bool lastShift{};
 2822              		.loc 20 1137 1 view .LVU732
 2823 0006 10B5     		push	{r4, lr}
 2824              		.cfi_def_cfa_offset 8
 2825              		.cfi_offset 4, -8
 2826              		.cfi_offset 14, -4
 2827 0008 2DED028B 		vpush.64	{d8}
 2828              		.cfi_def_cfa_offset 16
 2829              		.cfi_offset 80, -16
 2830              		.cfi_offset 81, -12
1145:Veno-Echo.cpp **** 
 2831              		.loc 20 1145 43 view .LVU733
 2832 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2833              	.LVL122:
 2834              	.LBB1183:
1147:Veno-Echo.cpp ****     {   
 2835              		.loc 20 1147 9 view .LVU734
 2836 0010 634B     		ldr	r3, .L179+4
 2837              	.LVL123:
1147:Veno-Echo.cpp ****     {   
 2838              		.loc 20 1147 9 view .LVU735
 2839              	.LBE1183:
1147:Veno-Echo.cpp ****     {   
 2840              		.loc 20 1147 5 is_stmt 1 view .LVU736
 2841              	.LBB1228:
 2842              	.LBB1184:
1151:Veno-Echo.cpp ****         {
 2843              		.loc 20 1151 19 is_stmt 0 view .LVU737
 2844 0012 644A     		ldr	r2, .L179+8
 2845              	.LBE1184:
1147:Veno-Echo.cpp ****     {   
 2846              		.loc 20 1147 5 view .LVU738
 2847 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2848 0016 002B     		cmp	r3, #0
 2849 0018 3DD1     		bne	.L152
 2850              	.LBB1207:
1149:Veno-Echo.cpp ****         //update pickup
 2851              		.loc 20 1149 9 is_stmt 1 view .LVU739
1151:Veno-Echo.cpp ****         {
 2852              		.loc 20 1151 9 view .LVU740
 2853 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2854 001c 0029     		cmp	r1, #0
 2855 001e 47D0     		beq	.L153
1153:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
 2856              		.loc 20 1153 13 view .LVU741
1154:Veno-Echo.cpp ****             //feedbackR_Last = feedbackR_Pot; //update last value
 2857              		.loc 20 1154 30 is_stmt 0 view .LVU742
 2858 0020 6148     		ldr	r0, .L179+12
1156:Veno-Echo.cpp ****         } 
 2859              		.loc 20 1156 27 view .LVU743
 2860 0022 6249     		ldr	r1, .L179+16
1153:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
 2861              		.loc 20 1153 23 view .LVU744
 2862 0024 1370     		strb	r3, [r2]
1154:Veno-Echo.cpp ****             //feedbackR_Last = feedbackR_Pot; //update last value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 155


 2863              		.loc 20 1154 13 is_stmt 1 view .LVU745
1154:Veno-Echo.cpp ****             //feedbackR_Last = feedbackR_Pot; //update last value
 2864              		.loc 20 1154 30 is_stmt 0 view .LVU746
 2865 0026 0370     		strb	r3, [r0]
1156:Veno-Echo.cpp ****         } 
 2866              		.loc 20 1156 13 is_stmt 1 view .LVU747
1156:Veno-Echo.cpp ****         } 
 2867              		.loc 20 1156 27 is_stmt 0 view .LVU748
 2868 0028 81ED000A 		vstr.32	s0, [r1]
 2869              	.L154:
1169:Veno-Echo.cpp ****         
 2870              		.loc 20 1169 9 is_stmt 1 view .LVU749
 2871              	.LVL124:
1171:Veno-Echo.cpp ****         {
 2872              		.loc 20 1171 9 view .LVU750
1179:Veno-Echo.cpp ****         }
 2873              		.loc 20 1179 13 view .LVU751
 2874              	.LBB1185:
 2875              	.LBI1185:
2009:Veno-Echo.cpp **** {
 2876              		.loc 20 2009 7 view .LVU752
 2877              	.LBB1186:
2011:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2878              		.loc 20 2011 5 view .LVU753
2012:Veno-Echo.cpp **** 
 2879              		.loc 20 2012 5 view .LVU754
 2880              	.LBE1186:
 2881              	.LBE1185:
1179:Veno-Echo.cpp ****         }
 2882              		.loc 20 1179 41 is_stmt 0 view .LVU755
 2883 002c 604A     		ldr	r2, .L179+20
 2884              	.LBB1190:
 2885              	.LBB1187:
2012:Veno-Echo.cpp **** 
 2886              		.loc 20 2012 39 view .LVU756
 2887 002e F7EE006A 		vmov.f32	s13, #1.0e+0
2012:Veno-Echo.cpp **** 
 2888              		.loc 20 2012 49 view .LVU757
 2889 0032 F6EE005A 		vmov.f32	s11, #5.0e-1
 2890              	.LBE1187:
 2891              	.LBE1190:
1179:Veno-Echo.cpp ****         }
 2892              		.loc 20 1179 41 view .LVU758
 2893 0036 5F4B     		ldr	r3, .L179+24
 2894              	.LBB1191:
 2895              	.LBB1188:
2012:Veno-Echo.cpp **** 
 2896              		.loc 20 2012 39 view .LVU759
 2897 0038 92ED007A 		vldr.32	s14, [r2]
2012:Veno-Echo.cpp **** 
 2898              		.loc 20 2012 12 view .LVU760
 2899 003c B0EE006A 		vmov.f32	s12, #2.0e+0
 2900 0040 D3ED007A 		vldr.32	s15, [r3]
2012:Veno-Echo.cpp **** 
 2901              		.loc 20 2012 39 view .LVU761
 2902 0044 36EEC77A 		vsub.f32	s14, s13, s14
2012:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 156


 2903              		.loc 20 2012 49 view .LVU762
 2904 0048 37EE657A 		vsub.f32	s14, s14, s11
2012:Veno-Echo.cpp **** 
 2905              		.loc 20 2012 12 view .LVU763
 2906 004c E7EE067A 		vfma.f32	s15, s14, s12
 2907              	.LVL125:
2014:Veno-Echo.cpp ****     {
 2908              		.loc 20 2014 5 is_stmt 1 view .LVU764
 2909 0050 F5EEC07A 		vcmpe.f32	s15, #0
 2910 0054 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2911 0058 00F19A80 		bmi	.L177
2019:Veno-Echo.cpp ****     {
 2912              		.loc 20 2019 5 view .LVU765
2021:Veno-Echo.cpp ****     }
 2913              		.loc 20 2021 16 is_stmt 0 view .LVU766
 2914 005c F4EE667A 		vcmp.f32	s15, s13
 2915 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2916 0064 76FEA77A 		vselgt.f32	s15, s13, s15
 2917              	.LVL126:
 2918              	.L159:
2021:Veno-Echo.cpp ****     }
 2919              		.loc 20 2021 16 view .LVU767
 2920              	.LBE1188:
 2921              	.LBE1191:
1182:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2922              		.loc 20 1182 9 is_stmt 1 view .LVU768
1182:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2923              		.loc 20 1182 37 is_stmt 0 view .LVU769
 2924 0068 B0EE670A 		vmov.f32	s0, s15
 2925              	.LVL127:
1182:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2926              		.loc 20 1182 37 view .LVU770
 2927 006c 0020     		movs	r0, #0
 2928 006e B7EE041A 		vmov.f32	s2, #1.25e+0
 2929 0072 DFED510A 		vldr.32	s1, .L179+28
 2930 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2931              	.LVL128:
1183:Veno-Echo.cpp ****     }
 2932              		.loc 20 1183 9 is_stmt 1 view .LVU771
 2933              	.LBB1192:
 2934              	.LBI1192:
 135:../DaisySP/Source/Utility/dsp.h **** {
 2935              		.loc 25 135 13 view .LVU772
 2936              	.LBB1193:
 2937              		.loc 25 137 5 view .LVU773
 2938              		.loc 25 137 9 is_stmt 0 view .LVU774
 2939 007a 504B     		ldr	r3, .L179+32
 2940 007c 9FED507A 		vldr.32	s14, .L179+36
 2941 0080 D3ED007A 		vldr.32	s15, [r3]
 2942              		.loc 25 137 24 view .LVU775
 2943 0084 30EE670A 		vsub.f32	s0, s0, s15
 2944              	.LVL129:
 2945              		.loc 25 137 24 view .LVU776
 2946              	.LBE1193:
 2947              	.LBE1192:
 2948              	.LBE1207:
 2949              	.LBE1228:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 157


1220:Veno-Echo.cpp **** 
 2950              		.loc 20 1220 1 view .LVU777
 2951 0088 BDEC028B 		vldm	sp!, {d8}
 2952              		.cfi_remember_state
 2953              		.cfi_restore 80
 2954              		.cfi_restore 81
 2955              		.cfi_def_cfa_offset 8
 2956              	.LBB1229:
 2957              	.LBB1208:
 2958              	.LBB1195:
 2959              	.LBB1194:
 2960              		.loc 25 137 9 view .LVU778
 2961 008c E0EE077A 		vfma.f32	s15, s0, s14
 2962 0090 C3ED007A 		vstr.32	s15, [r3]
 2963              	.LBE1194:
 2964              	.LBE1195:
 2965              	.LBE1208:
 2966              	.LBE1229:
1220:Veno-Echo.cpp **** 
 2967              		.loc 20 1220 1 view .LVU779
 2968 0094 10BD     		pop	{r4, pc}
 2969              	.LVL130:
 2970              	.L152:
 2971              		.cfi_restore_state
 2972              	.LBB1230:
 2973              	.LBB1209:
1188:Veno-Echo.cpp **** 
 2974              		.loc 20 1188 9 is_stmt 1 view .LVU780
1190:Veno-Echo.cpp ****         {
 2975              		.loc 20 1190 10 view .LVU781
 2976 0096 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2977 0098 002B     		cmp	r3, #0
 2978 009a 3ED1     		bne	.L162
1192:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2979              		.loc 20 1192 13 view .LVU782
1192:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2980              		.loc 20 1192 23 is_stmt 0 view .LVU783
 2981 009c 0124     		movs	r4, #1
1193:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2982              		.loc 20 1193 29 view .LVU784
 2983 009e 4948     		ldr	r0, .L179+40
1194:Veno-Echo.cpp ****         }
 2984              		.loc 20 1194 26 view .LVU785
 2985 00a0 4949     		ldr	r1, .L179+44
1192:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2986              		.loc 20 1192 23 view .LVU786
 2987 00a2 1470     		strb	r4, [r2]
1193:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2988              		.loc 20 1193 13 is_stmt 1 view .LVU787
1193:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2989              		.loc 20 1193 29 is_stmt 0 view .LVU788
 2990 00a4 0370     		strb	r3, [r0]
1194:Veno-Echo.cpp ****         }
 2991              		.loc 20 1194 13 is_stmt 1 view .LVU789
1194:Veno-Echo.cpp ****         }
 2992              		.loc 20 1194 26 is_stmt 0 view .LVU790
 2993 00a6 81ED000A 		vstr.32	s0, [r1]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 158


 2994              	.L151:
1194:Veno-Echo.cpp ****         }
 2995              		.loc 20 1194 26 view .LVU791
 2996              	.LBE1209:
 2997              	.LBE1230:
1220:Veno-Echo.cpp **** 
 2998              		.loc 20 1220 1 view .LVU792
 2999 00aa BDEC028B 		vldm	sp!, {d8}
 3000              		.cfi_remember_state
 3001              		.cfi_restore 80
 3002              		.cfi_restore 81
 3003              		.cfi_def_cfa_offset 8
 3004 00ae 10BD     		pop	{r4, pc}
 3005              	.L153:
 3006              		.cfi_restore_state
 3007              	.LBB1231:
 3008              	.LBB1225:
1160:Veno-Echo.cpp ****             {
 3009              		.loc 20 1160 13 is_stmt 1 view .LVU793
1160:Veno-Echo.cpp ****             {
 3010              		.loc 20 1160 16 is_stmt 0 view .LVU794
 3011 00b0 3D4B     		ldr	r3, .L179+12
1160:Veno-Echo.cpp ****             {
 3012              		.loc 20 1160 13 view .LVU795
 3013 00b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3014 00b4 7AB9     		cbnz	r2, .L155
1162:Veno-Echo.cpp ****                 {
 3015              		.loc 20 1162 17 is_stmt 1 view .LVU796
 3016              	.LVL131:
 3017              	.LBB1196:
 3018              	.LBI1196:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3019              		.loc 21 75 3 view .LVU797
 3020              	.LBB1197:
 3021              		.loc 21 76 5 view .LVU798
 3022              		.loc 21 76 5 is_stmt 0 view .LVU799
 3023              	.LBE1197:
 3024              	.LBE1196:
1162:Veno-Echo.cpp ****                 {
 3025              		.loc 20 1162 23 view .LVU800
 3026 00b6 3D4A     		ldr	r2, .L179+16
1162:Veno-Echo.cpp ****                 {
 3027              		.loc 20 1162 17 view .LVU801
 3028 00b8 9FED447A 		vldr.32	s14, .L179+48
1162:Veno-Echo.cpp ****                 {
 3029              		.loc 20 1162 23 view .LVU802
 3030 00bc D2ED007A 		vldr.32	s15, [r2]
 3031 00c0 70EE677A 		vsub.f32	s15, s0, s15
 3032              	.LBB1199:
 3033              	.LBB1198:
 3034              		.loc 21 76 31 view .LVU803
 3035 00c4 F0EEE77A 		vabs.f32	s15, s15
 3036              	.LBE1198:
 3037              	.LBE1199:
1162:Veno-Echo.cpp ****                 {
 3038              		.loc 20 1162 17 view .LVU804
 3039 00c8 F4EEC77A 		vcmpe.f32	s15, s14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 159


 3040 00cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3041 00d0 ACDD     		ble	.L154
1164:Veno-Echo.cpp ****                 }
 3042              		.loc 20 1164 21 is_stmt 1 view .LVU805
1164:Veno-Echo.cpp ****                 }
 3043              		.loc 20 1164 38 is_stmt 0 view .LVU806
 3044 00d2 0122     		movs	r2, #1
 3045 00d4 1A70     		strb	r2, [r3]
 3046              	.L155:
1169:Veno-Echo.cpp ****         
 3047              		.loc 20 1169 9 is_stmt 1 view .LVU807
 3048              	.LVL132:
1171:Veno-Echo.cpp ****         {
 3049              		.loc 20 1171 9 view .LVU808
1173:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
 3050              		.loc 20 1173 13 view .LVU809
 3051              	.LBB1200:
 3052              	.LBI1200:
2009:Veno-Echo.cpp **** {
 3053              		.loc 20 2009 7 view .LVU810
 3054              	.LBB1201:
2011:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3055              		.loc 20 2011 5 view .LVU811
2012:Veno-Echo.cpp **** 
 3056              		.loc 20 2012 5 view .LVU812
 3057              	.LBE1201:
 3058              	.LBE1200:
1173:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
 3059              		.loc 20 1173 41 is_stmt 0 view .LVU813
 3060 00d6 364B     		ldr	r3, .L179+20
 3061              	.LBB1204:
 3062              	.LBB1202:
2012:Veno-Echo.cpp **** 
 3063              		.loc 20 2012 39 view .LVU814
 3064 00d8 B7EE007A 		vmov.f32	s14, #1.0e+0
2012:Veno-Echo.cpp **** 
 3065              		.loc 20 2012 49 view .LVU815
 3066 00dc B6EE006A 		vmov.f32	s12, #5.0e-1
2012:Veno-Echo.cpp **** 
 3067              		.loc 20 2012 39 view .LVU816
 3068 00e0 D3ED007A 		vldr.32	s15, [r3]
2012:Veno-Echo.cpp **** 
 3069              		.loc 20 2012 12 view .LVU817
 3070 00e4 F0EE006A 		vmov.f32	s13, #2.0e+0
2012:Veno-Echo.cpp **** 
 3071              		.loc 20 2012 39 view .LVU818
 3072 00e8 77EE677A 		vsub.f32	s15, s14, s15
2012:Veno-Echo.cpp **** 
 3073              		.loc 20 2012 49 view .LVU819
 3074 00ec 77EEC67A 		vsub.f32	s15, s15, s12
2012:Veno-Echo.cpp **** 
 3075              		.loc 20 2012 12 view .LVU820
 3076 00f0 B0EE406A 		vmov.f32	s12, s0
 3077 00f4 A7EEA66A 		vfma.f32	s12, s15, s13
2014:Veno-Echo.cpp ****     {
 3078              		.loc 20 2014 5 view .LVU821
 3079 00f8 B5EEC06A 		vcmpe.f32	s12, #0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 160


2012:Veno-Echo.cpp **** 
 3080              		.loc 20 2012 12 view .LVU822
 3081 00fc F0EE467A 		vmov.f32	s15, s12
 3082              	.LVL133:
2014:Veno-Echo.cpp ****     {
 3083              		.loc 20 2014 5 is_stmt 1 view .LVU823
 3084 0100 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3085 0104 47D4     		bmi	.L178
2019:Veno-Echo.cpp ****     {
 3086              		.loc 20 2019 5 view .LVU824
2021:Veno-Echo.cpp ****     }
 3087              		.loc 20 2021 16 is_stmt 0 view .LVU825
 3088 0106 F4EE477A 		vcmp.f32	s15, s14
 3089 010a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3090 010e 77FE277A 		vselgt.f32	s15, s14, s15
 3091              	.L157:
 3092              	.LVL134:
2024:Veno-Echo.cpp **** }
 3093              		.loc 20 2024 5 is_stmt 1 view .LVU826
2024:Veno-Echo.cpp **** }
 3094              		.loc 20 2024 5 is_stmt 0 view .LVU827
 3095              	.LBE1202:
 3096              	.LBE1204:
1174:Veno-Echo.cpp ****         }
 3097              		.loc 20 1174 13 is_stmt 1 view .LVU828
1174:Veno-Echo.cpp ****         }
 3098              		.loc 20 1174 28 is_stmt 0 view .LVU829
 3099 0112 284B     		ldr	r3, .L179+24
 3100 0114 83ED000A 		vstr.32	s0, [r3]
 3101 0118 A6E7     		b	.L159
 3102              	.LVL135:
 3103              	.L162:
1174:Veno-Echo.cpp ****         }
 3104              		.loc 20 1174 28 view .LVU830
 3105              	.LBE1225:
 3106              	.LBB1226:
1199:Veno-Echo.cpp ****             {
 3107              		.loc 20 1199 13 is_stmt 1 view .LVU831
1199:Veno-Echo.cpp ****             {
 3108              		.loc 20 1199 16 is_stmt 0 view .LVU832
 3109 011a 2A4B     		ldr	r3, .L179+40
1199:Veno-Echo.cpp ****             {
 3110              		.loc 20 1199 13 view .LVU833
 3111 011c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3112 011e 7AB9     		cbnz	r2, .L164
1201:Veno-Echo.cpp ****                 {
 3113              		.loc 20 1201 17 is_stmt 1 view .LVU834
 3114              	.LVL136:
 3115              	.LBB1210:
 3116              	.LBI1210:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3117              		.loc 21 75 3 view .LVU835
 3118              	.LBB1211:
 3119              		.loc 21 76 5 view .LVU836
 3120              		.loc 21 76 5 is_stmt 0 view .LVU837
 3121              	.LBE1211:
 3122              	.LBE1210:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 161


1201:Veno-Echo.cpp ****                 {
 3123              		.loc 20 1201 23 view .LVU838
 3124 0120 294A     		ldr	r2, .L179+44
1201:Veno-Echo.cpp ****                 {
 3125              		.loc 20 1201 17 view .LVU839
 3126 0122 9FED2A7A 		vldr.32	s14, .L179+48
1201:Veno-Echo.cpp ****                 {
 3127              		.loc 20 1201 23 view .LVU840
 3128 0126 D2ED007A 		vldr.32	s15, [r2]
 3129 012a 70EE677A 		vsub.f32	s15, s0, s15
 3130              	.LBB1213:
 3131              	.LBB1212:
 3132              		.loc 21 76 31 view .LVU841
 3133 012e F0EEE77A 		vabs.f32	s15, s15
 3134              	.LBE1212:
 3135              	.LBE1213:
1201:Veno-Echo.cpp ****                 {
 3136              		.loc 20 1201 17 view .LVU842
 3137 0132 F4EEC77A 		vcmpe.f32	s15, s14
 3138 0136 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3139 013a B6DD     		ble	.L151
1203:Veno-Echo.cpp ****                 }
 3140              		.loc 20 1203 21 is_stmt 1 view .LVU843
1203:Veno-Echo.cpp ****                 }
 3141              		.loc 20 1203 37 is_stmt 0 view .LVU844
 3142 013c 0122     		movs	r2, #1
 3143 013e 1A70     		strb	r2, [r3]
 3144              	.L164:
1208:Veno-Echo.cpp ****         {
 3145              		.loc 20 1208 9 is_stmt 1 view .LVU845
 3146              	.LBB1214:
1210:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
 3147              		.loc 20 1210 13 view .LVU846
 3148              	.LVL137:
1211:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3149              		.loc 20 1211 13 view .LVU847
1211:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3150              		.loc 20 1211 29 is_stmt 0 view .LVU848
 3151 0140 9FED231A 		vldr.32	s2, .L179+52
 3152 0144 0120     		movs	r0, #1
 3153 0146 DFED230A 		vldr.32	s1, .L179+56
 3154 014a FFF7FEFF 		bl	_Z5scalefff9CurveType
 3155              	.LVL138:
1211:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3156              		.loc 20 1211 29 view .LVU849
 3157 014e B0EE408A 		vmov.f32	s16, s0
 3158              	.LVL139:
1212:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 3159              		.loc 20 1212 13 is_stmt 1 view .LVU850
1212:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 3160              		.loc 20 1212 26 is_stmt 0 view .LVU851
 3161 0152 2148     		ldr	r0, .L179+60
 3162 0154 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3163              	.LVL140:
1213:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 3164              		.loc 20 1213 13 is_stmt 1 view .LVU852
1213:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 162


 3165              		.loc 20 1213 26 is_stmt 0 view .LVU853
 3166 0158 2048     		ldr	r0, .L179+64
 3167 015a B0EE480A 		vmov.f32	s0, s16
 3168 015e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3169              	.LVL141:
1214:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 3170              		.loc 20 1214 13 is_stmt 1 view .LVU854
1214:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 3171              		.loc 20 1214 31 is_stmt 0 view .LVU855
 3172 0162 B0EE480A 		vmov.f32	s0, s16
 3173 0166 1E48     		ldr	r0, .L179+68
 3174 0168 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3175              	.LVL142:
1215:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 3176              		.loc 20 1215 13 is_stmt 1 view .LVU856
1215:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 3177              		.loc 20 1215 31 is_stmt 0 view .LVU857
 3178 016c B0EE480A 		vmov.f32	s0, s16
 3179 0170 1C48     		ldr	r0, .L179+72
 3180 0172 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3181              	.LVL143:
1216:Veno-Echo.cpp ****             save_flag = true;
 3182              		.loc 20 1216 13 is_stmt 1 view .LVU858
1216:Veno-Echo.cpp ****             save_flag = true;
 3183              		.loc 20 1216 35 is_stmt 0 view .LVU859
 3184 0176 1C49     		ldr	r1, .L179+76
 3185              	.LBB1215:
 3186              	.LBB1216:
 3187              	.LBB1217:
 3188              	.LBB1218:
 3189              	.LBB1219:
 3190              		.loc 22 397 18 view .LVU860
 3191 0178 1C4B     		ldr	r3, .L179+80
 3192 017a 0122     		movs	r2, #1
 3193              	.LBE1219:
 3194              	.LBE1218:
 3195              	.LBE1217:
 3196              	.LBE1216:
 3197              	.LBE1215:
1216:Veno-Echo.cpp ****             save_flag = true;
 3198              		.loc 20 1216 35 view .LVU861
 3199 017c 81ED058A 		vstr.32	s16, [r1, #20]
1217:Veno-Echo.cpp ****         }
 3200              		.loc 20 1217 13 is_stmt 1 view .LVU862
 3201              	.LVL144:
 3202              	.LBB1224:
 3203              	.LBI1215:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 3204              		.loc 23 80 5 view .LVU863
 3205              	.LBB1223:
 3206              		.loc 23 81 7 view .LVU864
 3207              	.LBB1222:
 3208              	.LBI1217:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 3209              		.loc 22 288 7 view .LVU865
 3210              	.LBB1221:
 3211              	.LBI1218:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 163


 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 3212              		.loc 22 390 7 view .LVU866
 3213              	.LBB1220:
 3214              		.loc 22 397 18 is_stmt 0 view .LVU867
 3215 0180 BFF35B8F 		dmb	ish
 3216 0184 1A70     		strb	r2, [r3]
 3217 0186 BFF35B8F 		dmb	ish
 3218              	.LVL145:
 3219              		.loc 22 397 18 view .LVU868
 3220              	.LBE1220:
 3221              	.LBE1221:
 3222              	.LBE1222:
 3223              	.LBE1223:
 3224              	.LBE1224:
 3225              	.LBE1214:
 3226              	.LBE1226:
 3227              	.LBE1231:
1220:Veno-Echo.cpp **** 
 3228              		.loc 20 1220 1 view .LVU869
 3229 018a BDEC028B 		vldm	sp!, {d8}
 3230              		.cfi_remember_state
 3231              		.cfi_restore 80
 3232              		.cfi_restore 81
 3233              		.cfi_def_cfa_offset 8
 3234              	.LVL146:
1220:Veno-Echo.cpp **** 
 3235              		.loc 20 1220 1 view .LVU870
 3236 018e 10BD     		pop	{r4, pc}
 3237              	.LVL147:
 3238              	.L177:
 3239              		.cfi_restore_state
 3240              	.LBB1232:
 3241              	.LBB1227:
 3242              	.LBB1205:
 3243              	.LBB1189:
2016:Veno-Echo.cpp ****     }
 3244              		.loc 20 2016 16 view .LVU871
 3245 0190 DFED097A 		vldr.32	s15, .L179+28
 3246              	.LVL148:
2016:Veno-Echo.cpp ****     }
 3247              		.loc 20 2016 16 view .LVU872
 3248 0194 68E7     		b	.L159
 3249              	.LVL149:
 3250              	.L178:
2016:Veno-Echo.cpp ****     }
 3251              		.loc 20 2016 16 view .LVU873
 3252              	.LBE1189:
 3253              	.LBE1205:
 3254              	.LBB1206:
 3255              	.LBB1203:
 3256 0196 DFED087A 		vldr.32	s15, .L179+28
 3257 019a BAE7     		b	.L157
 3258              	.L180:
 3259              		.align	2
 3260              	.L179:
 3261 019c 18000000 		.word	.LANCHOR4+24
 3262 01a0 00000000 		.word	.LANCHOR7
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 164


 3263 01a4 00000000 		.word	.LANCHOR40
 3264 01a8 00000000 		.word	.LANCHOR41
 3265 01ac 00000000 		.word	.LANCHOR42
 3266 01b0 00000000 		.word	.LANCHOR39
 3267 01b4 00000000 		.word	.LANCHOR43
 3268 01b8 00000000 		.word	0
 3269 01bc 00000000 		.word	.LANCHOR44
 3270 01c0 6F12033D 		.word	1023611503
 3271 01c4 00000000 		.word	.LANCHOR45
 3272 01c8 00000000 		.word	.LANCHOR46
 3273 01cc 0AD7A33B 		.word	1000593162
 3274 01d0 00803B46 		.word	1178304512
 3275 01d4 0080BB44 		.word	1153138688
 3276 01d8 00000000 		.word	.LANCHOR47
 3277 01dc 00000000 		.word	.LANCHOR48
 3278 01e0 00000000 		.word	.LANCHOR49
 3279 01e4 00000000 		.word	.LANCHOR50
 3280 01e8 00000000 		.word	.LANCHOR15
 3281 01ec 00000000 		.word	.LANCHOR16
 3282              	.LBE1203:
 3283              	.LBE1206:
 3284              	.LBE1227:
 3285              	.LBE1232:
 3286              		.cfi_endproc
 3287              	.LFE4319:
 3289              		.section	.text._Z16Update_drywet_CVv,"ax",%progbits
 3290              		.align	1
 3291              		.p2align 2,,3
 3292              		.global	_Z16Update_drywet_CVv
 3293              		.syntax unified
 3294              		.thumb
 3295              		.thumb_func
 3296              		.fpu fpv5-d16
 3298              	_Z16Update_drywet_CVv:
 3299              	.LFB4320:
1223:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 3300              		.loc 20 1223 1 is_stmt 1 view -0
 3301              		.cfi_startproc
 3302              		@ args = 0, pretend = 0, frame = 0
 3303              		@ frame_needed = 0, uses_anonymous_args = 0
1224:Veno-Echo.cpp **** }
 3304              		.loc 20 1224 5 view .LVU875
1223:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 3305              		.loc 20 1223 1 is_stmt 0 view .LVU876
 3306 0000 08B5     		push	{r3, lr}
 3307              		.cfi_def_cfa_offset 8
 3308              		.cfi_offset 3, -8
 3309              		.cfi_offset 14, -4
1224:Veno-Echo.cpp **** }
 3310              		.loc 20 1224 32 view .LVU877
 3311 0002 0421     		movs	r1, #4
 3312 0004 0348     		ldr	r0, .L183
 3313 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3314              	.LVL150:
1224:Veno-Echo.cpp **** }
 3315              		.loc 20 1224 15 view .LVU878
 3316 000a 034B     		ldr	r3, .L183+4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 165


 3317 000c 83ED000A 		vstr.32	s0, [r3]
1225:Veno-Echo.cpp **** 
 3318              		.loc 20 1225 1 view .LVU879
 3319 0010 08BD     		pop	{r3, pc}
 3320              	.L184:
 3321 0012 00BF     		.align	2
 3322              	.L183:
 3323 0014 18000000 		.word	.LANCHOR4+24
 3324 0018 00000000 		.word	.LANCHOR51
 3325              		.cfi_endproc
 3326              	.LFE4320:
 3328              		.section	.text._Z13Update_drywetv,"ax",%progbits
 3329              		.align	1
 3330              		.p2align 2,,3
 3331              		.global	_Z13Update_drywetv
 3332              		.syntax unified
 3333              		.thumb
 3334              		.thumb_func
 3335              		.fpu fpv5-d16
 3337              	_Z13Update_drywetv:
 3338              	.LFB4321:
1228:Veno-Echo.cpp ****     static bool lastShift{};
 3339              		.loc 20 1228 1 is_stmt 1 view -0
 3340              		.cfi_startproc
 3341              		@ args = 0, pretend = 0, frame = 0
 3342              		@ frame_needed = 0, uses_anonymous_args = 0
1229:Veno-Echo.cpp ****     static bool drywet_pickup{};
 3343              		.loc 20 1229 5 view .LVU881
1230:Veno-Echo.cpp ****     static bool Res_pickup{};
 3344              		.loc 20 1230 5 view .LVU882
1231:Veno-Echo.cpp **** 
 3345              		.loc 20 1231 5 view .LVU883
1233:Veno-Echo.cpp ****     //static float Res_Last{}; //last res value (unscaled)
 3346              		.loc 20 1233 5 view .LVU884
1238:Veno-Echo.cpp **** 
 3347              		.loc 20 1238 5 view .LVU885
1238:Veno-Echo.cpp **** 
 3348              		.loc 20 1238 40 is_stmt 0 view .LVU886
 3349 0000 0522     		movs	r2, #5
 3350 0002 0721     		movs	r1, #7
 3351 0004 8248     		ldr	r0, .L218+24
1228:Veno-Echo.cpp ****     static bool lastShift{};
 3352              		.loc 20 1228 1 view .LVU887
 3353 0006 10B5     		push	{r4, lr}
 3354              		.cfi_def_cfa_offset 8
 3355              		.cfi_offset 4, -8
 3356              		.cfi_offset 14, -4
 3357 0008 2DED028B 		vpush.64	{d8}
 3358              		.cfi_def_cfa_offset 16
 3359              		.cfi_offset 80, -16
 3360              		.cfi_offset 81, -12
1238:Veno-Echo.cpp **** 
 3361              		.loc 20 1238 40 view .LVU888
 3362 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3363              	.LVL151:
 3364              	.LBB1233:
1240:Veno-Echo.cpp ****     {   
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 166


 3365              		.loc 20 1240 9 view .LVU889
 3366 0010 804B     		ldr	r3, .L218+28
 3367              	.LVL152:
1240:Veno-Echo.cpp ****     {   
 3368              		.loc 20 1240 9 view .LVU890
 3369              	.LBE1233:
1240:Veno-Echo.cpp ****     {   
 3370              		.loc 20 1240 5 is_stmt 1 view .LVU891
 3371              	.LBB1276:
 3372              	.LBB1234:
1245:Veno-Echo.cpp ****         {
 3373              		.loc 20 1245 19 is_stmt 0 view .LVU892
 3374 0012 814A     		ldr	r2, .L218+32
 3375              	.LBE1234:
1240:Veno-Echo.cpp ****     {   
 3376              		.loc 20 1240 5 view .LVU893
 3377 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3378 0016 B3BB     		cbnz	r3, .L186
 3379              	.LBB1255:
1243:Veno-Echo.cpp **** 
 3380              		.loc 20 1243 9 is_stmt 1 view .LVU894
1245:Veno-Echo.cpp ****         {
 3381              		.loc 20 1245 9 view .LVU895
 3382 0018 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3383 001a 0029     		cmp	r1, #0
 3384 001c 40D0     		beq	.L187
1247:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 3385              		.loc 20 1247 13 view .LVU896
1249:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3386              		.loc 20 1249 27 is_stmt 0 view .LVU897
 3387 001e 7F48     		ldr	r0, .L218+36
1250:Veno-Echo.cpp ****         } 
 3388              		.loc 20 1250 24 view .LVU898
 3389 0020 7F49     		ldr	r1, .L218+40
1247:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 3390              		.loc 20 1247 23 view .LVU899
 3391 0022 1370     		strb	r3, [r2]
1249:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3392              		.loc 20 1249 13 is_stmt 1 view .LVU900
1249:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3393              		.loc 20 1249 27 is_stmt 0 view .LVU901
 3394 0024 0370     		strb	r3, [r0]
1250:Veno-Echo.cpp ****         } 
 3395              		.loc 20 1250 13 is_stmt 1 view .LVU902
1250:Veno-Echo.cpp ****         } 
 3396              		.loc 20 1250 24 is_stmt 0 view .LVU903
 3397 0026 81ED000A 		vstr.32	s0, [r1]
 3398              	.L188:
1266:Veno-Echo.cpp **** 
 3399              		.loc 20 1266 9 is_stmt 1 view .LVU904
 3400              	.LVL153:
1268:Veno-Echo.cpp ****         {
 3401              		.loc 20 1268 9 view .LVU905
1276:Veno-Echo.cpp ****         }
 3402              		.loc 20 1276 13 view .LVU906
 3403              	.LBB1235:
 3404              	.LBI1235:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 167


2009:Veno-Echo.cpp **** {
 3405              		.loc 20 2009 7 view .LVU907
 3406              	.LBB1236:
2011:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3407              		.loc 20 2011 5 view .LVU908
2012:Veno-Echo.cpp **** 
 3408              		.loc 20 2012 5 view .LVU909
 3409              	.LBE1236:
 3410              	.LBE1235:
1276:Veno-Echo.cpp ****         }
 3411              		.loc 20 1276 37 is_stmt 0 view .LVU910
 3412 002a 7E4A     		ldr	r2, .L218+44
 3413              	.LBB1239:
 3414              	.LBB1237:
2012:Veno-Echo.cpp **** 
 3415              		.loc 20 2012 39 view .LVU911
 3416 002c F7EE006A 		vmov.f32	s13, #1.0e+0
2012:Veno-Echo.cpp **** 
 3417              		.loc 20 2012 49 view .LVU912
 3418 0030 F6EE005A 		vmov.f32	s11, #5.0e-1
 3419              	.LBE1237:
 3420              	.LBE1239:
1276:Veno-Echo.cpp ****         }
 3421              		.loc 20 1276 37 view .LVU913
 3422 0034 7C4B     		ldr	r3, .L218+48
 3423              	.LBB1240:
 3424              	.LBB1238:
2012:Veno-Echo.cpp **** 
 3425              		.loc 20 2012 39 view .LVU914
 3426 0036 92ED007A 		vldr.32	s14, [r2]
2012:Veno-Echo.cpp **** 
 3427              		.loc 20 2012 12 view .LVU915
 3428 003a B0EE006A 		vmov.f32	s12, #2.0e+0
 3429 003e D3ED007A 		vldr.32	s15, [r3]
2012:Veno-Echo.cpp **** 
 3430              		.loc 20 2012 39 view .LVU916
 3431 0042 36EEC77A 		vsub.f32	s14, s13, s14
2012:Veno-Echo.cpp **** 
 3432              		.loc 20 2012 49 view .LVU917
 3433 0046 37EE657A 		vsub.f32	s14, s14, s11
2012:Veno-Echo.cpp **** 
 3434              		.loc 20 2012 12 view .LVU918
 3435 004a E7EE067A 		vfma.f32	s15, s14, s12
 3436              	.LVL154:
2014:Veno-Echo.cpp ****     {
 3437              		.loc 20 2014 5 is_stmt 1 view .LVU919
 3438 004e F5EEC07A 		vcmpe.f32	s15, #0
 3439 0052 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3440 0056 00F1C180 		bmi	.L205
2019:Veno-Echo.cpp ****     {
 3441              		.loc 20 2019 5 view .LVU920
 3442 005a F4EEE67A 		vcmpe.f32	s15, s13
 3443 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3444 0062 40F3C680 		ble	.L211
 3445              	.LVL155:
 3446              	.L196:
2019:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 168


 3447              		.loc 20 2019 5 is_stmt 0 view .LVU921
 3448              	.LBE1238:
 3449              	.LBE1240:
1283:Veno-Echo.cpp ****         }
 3450              		.loc 20 1283 26 view .LVU922
 3451 0066 B7EE000A 		vmov.f32	s0, #1.0e+0
 3452              	.LVL156:
 3453              	.L195:
1295:Veno-Echo.cpp ****     }
 3454              		.loc 20 1295 9 is_stmt 1 view .LVU923
 3455              	.LBB1241:
 3456              	.LBI1241:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3457              		.loc 25 135 13 view .LVU924
 3458              	.LBB1242:
 3459              		.loc 25 137 5 view .LVU925
 3460              		.loc 25 137 9 is_stmt 0 view .LVU926
 3461 006a 704B     		ldr	r3, .L218+52
 3462 006c 9FED707A 		vldr.32	s14, .L218+56
 3463 0070 D3ED007A 		vldr.32	s15, [r3]
 3464              		.loc 25 137 24 view .LVU927
 3465 0074 30EE670A 		vsub.f32	s0, s0, s15
 3466              	.LVL157:
 3467              		.loc 25 137 24 view .LVU928
 3468              	.LBE1242:
 3469              	.LBE1241:
 3470              	.LBE1255:
 3471              	.LBE1276:
1335:Veno-Echo.cpp **** 
 3472              		.loc 20 1335 1 view .LVU929
 3473 0078 BDEC028B 		vldm	sp!, {d8}
 3474              		.cfi_remember_state
 3475              		.cfi_restore 80
 3476              		.cfi_restore 81
 3477              		.cfi_def_cfa_offset 8
 3478              	.LBB1277:
 3479              	.LBB1256:
 3480              	.LBB1244:
 3481              	.LBB1243:
 3482              		.loc 25 137 9 view .LVU930
 3483 007c E0EE077A 		vfma.f32	s15, s0, s14
 3484 0080 C3ED007A 		vstr.32	s15, [r3]
 3485              	.LBE1243:
 3486              	.LBE1244:
 3487              	.LBE1256:
 3488              	.LBE1277:
1335:Veno-Echo.cpp **** 
 3489              		.loc 20 1335 1 view .LVU931
 3490 0084 10BD     		pop	{r4, pc}
 3491              	.LVL158:
 3492              	.L186:
 3493              		.cfi_restore_state
 3494              	.LBB1278:
 3495              	.LBB1257:
1299:Veno-Echo.cpp **** 
 3496              		.loc 20 1299 9 is_stmt 1 view .LVU932
1301:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 169


 3497              		.loc 20 1301 9 view .LVU933
 3498 0086 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3499 0088 002B     		cmp	r3, #0
 3500 008a 58D1     		bne	.L200
1303:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3501              		.loc 20 1303 13 view .LVU934
1303:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3502              		.loc 20 1303 23 is_stmt 0 view .LVU935
 3503 008c 0124     		movs	r4, #1
1304:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3504              		.loc 20 1304 24 view .LVU936
 3505 008e 6948     		ldr	r0, .L218+60
1305:Veno-Echo.cpp ****         }
 3506              		.loc 20 1305 21 view .LVU937
 3507 0090 6949     		ldr	r1, .L218+64
1303:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3508              		.loc 20 1303 23 view .LVU938
 3509 0092 1470     		strb	r4, [r2]
1304:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3510              		.loc 20 1304 13 is_stmt 1 view .LVU939
1304:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3511              		.loc 20 1304 24 is_stmt 0 view .LVU940
 3512 0094 0370     		strb	r3, [r0]
1305:Veno-Echo.cpp ****         }
 3513              		.loc 20 1305 13 is_stmt 1 view .LVU941
1305:Veno-Echo.cpp ****         }
 3514              		.loc 20 1305 21 is_stmt 0 view .LVU942
 3515 0096 81ED000A 		vstr.32	s0, [r1]
 3516              	.L185:
1305:Veno-Echo.cpp ****         }
 3517              		.loc 20 1305 21 view .LVU943
 3518              	.LBE1257:
 3519              	.LBE1278:
1335:Veno-Echo.cpp **** 
 3520              		.loc 20 1335 1 view .LVU944
 3521 009a BDEC028B 		vldm	sp!, {d8}
 3522              		.cfi_remember_state
 3523              		.cfi_restore 80
 3524              		.cfi_restore 81
 3525              		.cfi_def_cfa_offset 8
 3526 009e 10BD     		pop	{r4, pc}
 3527              	.L187:
 3528              		.cfi_restore_state
 3529              	.LBB1279:
 3530              	.LBB1273:
1255:Veno-Echo.cpp ****             {
 3531              		.loc 20 1255 13 is_stmt 1 view .LVU945
1255:Veno-Echo.cpp ****             {
 3532              		.loc 20 1255 16 is_stmt 0 view .LVU946
 3533 00a0 5E4B     		ldr	r3, .L218+36
1255:Veno-Echo.cpp ****             {
 3534              		.loc 20 1255 13 view .LVU947
 3535 00a2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3536 00a4 7AB9     		cbnz	r2, .L189
1258:Veno-Echo.cpp ****                 {
 3537              		.loc 20 1258 17 is_stmt 1 view .LVU948
 3538              	.LVL159:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 170


 3539              	.LBB1245:
 3540              	.LBI1245:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3541              		.loc 21 75 3 view .LVU949
 3542              	.LBB1246:
 3543              		.loc 21 76 5 view .LVU950
 3544              		.loc 21 76 5 is_stmt 0 view .LVU951
 3545              	.LBE1246:
 3546              	.LBE1245:
1258:Veno-Echo.cpp ****                 {
 3547              		.loc 20 1258 23 view .LVU952
 3548 00a6 5E4A     		ldr	r2, .L218+40
1258:Veno-Echo.cpp ****                 {
 3549              		.loc 20 1258 17 view .LVU953
 3550 00a8 9FED647A 		vldr.32	s14, .L218+68
1258:Veno-Echo.cpp ****                 {
 3551              		.loc 20 1258 23 view .LVU954
 3552 00ac D2ED007A 		vldr.32	s15, [r2]
 3553 00b0 70EE677A 		vsub.f32	s15, s0, s15
 3554              	.LBB1248:
 3555              	.LBB1247:
 3556              		.loc 21 76 31 view .LVU955
 3557 00b4 F0EEE77A 		vabs.f32	s15, s15
 3558              	.LBE1247:
 3559              	.LBE1248:
1258:Veno-Echo.cpp ****                 {
 3560              		.loc 20 1258 17 view .LVU956
 3561 00b8 F4EEC77A 		vcmpe.f32	s15, s14
 3562 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3563 00c0 B3DD     		ble	.L188
1260:Veno-Echo.cpp ****                 }
 3564              		.loc 20 1260 21 is_stmt 1 view .LVU957
1260:Veno-Echo.cpp ****                 }
 3565              		.loc 20 1260 35 is_stmt 0 view .LVU958
 3566 00c2 0122     		movs	r2, #1
 3567 00c4 1A70     		strb	r2, [r3]
 3568              	.L189:
1266:Veno-Echo.cpp **** 
 3569              		.loc 20 1266 9 is_stmt 1 view .LVU959
 3570              	.LVL160:
1268:Veno-Echo.cpp ****         {
 3571              		.loc 20 1268 9 view .LVU960
1270:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 3572              		.loc 20 1270 13 view .LVU961
 3573              	.LBB1249:
 3574              	.LBI1249:
2009:Veno-Echo.cpp **** {
 3575              		.loc 20 2009 7 view .LVU962
 3576              	.LBB1250:
2011:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3577              		.loc 20 2011 5 view .LVU963
2012:Veno-Echo.cpp **** 
 3578              		.loc 20 2012 5 view .LVU964
 3579              	.LBE1250:
 3580              	.LBE1249:
1270:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 3581              		.loc 20 1270 37 is_stmt 0 view .LVU965
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 171


 3582 00c6 574B     		ldr	r3, .L218+44
 3583              	.LBB1253:
 3584              	.LBB1251:
2012:Veno-Echo.cpp **** 
 3585              		.loc 20 2012 39 view .LVU966
 3586 00c8 B7EE007A 		vmov.f32	s14, #1.0e+0
2012:Veno-Echo.cpp **** 
 3587              		.loc 20 2012 49 view .LVU967
 3588 00cc B6EE006A 		vmov.f32	s12, #5.0e-1
2012:Veno-Echo.cpp **** 
 3589              		.loc 20 2012 39 view .LVU968
 3590 00d0 D3ED007A 		vldr.32	s15, [r3]
2012:Veno-Echo.cpp **** 
 3591              		.loc 20 2012 12 view .LVU969
 3592 00d4 F0EE006A 		vmov.f32	s13, #2.0e+0
2012:Veno-Echo.cpp **** 
 3593              		.loc 20 2012 39 view .LVU970
 3594 00d8 77EE677A 		vsub.f32	s15, s14, s15
2012:Veno-Echo.cpp **** 
 3595              		.loc 20 2012 49 view .LVU971
 3596 00dc 77EEC67A 		vsub.f32	s15, s15, s12
2012:Veno-Echo.cpp **** 
 3597              		.loc 20 2012 12 view .LVU972
 3598 00e0 B0EE406A 		vmov.f32	s12, s0
 3599 00e4 A7EEA66A 		vfma.f32	s12, s15, s13
2014:Veno-Echo.cpp ****     {
 3600              		.loc 20 2014 5 view .LVU973
 3601 00e8 B5EEC06A 		vcmpe.f32	s12, #0
2012:Veno-Echo.cpp **** 
 3602              		.loc 20 2012 12 view .LVU974
 3603 00ec F0EE467A 		vmov.f32	s15, s12
 3604              	.LVL161:
2014:Veno-Echo.cpp ****     {
 3605              		.loc 20 2014 5 is_stmt 1 view .LVU975
 3606 00f0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3607 00f4 75D4     		bmi	.L216
2019:Veno-Echo.cpp ****     {
 3608              		.loc 20 2019 5 view .LVU976
 3609 00f6 F4EEC77A 		vcmpe.f32	s15, s14
 3610 00fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3611 00fe 75DD     		ble	.L217
2021:Veno-Echo.cpp ****     }
 3612              		.loc 20 2021 16 is_stmt 0 view .LVU977
 3613 0100 F0EE477A 		vmov.f32	s15, s14
 3614 0104 B7EE006B 		vmov.f64	d6, #1.0e+0
 3615              	.LVL162:
 3616              	.L191:
2024:Veno-Echo.cpp **** }
 3617              		.loc 20 2024 5 is_stmt 1 view .LVU978
2024:Veno-Echo.cpp **** }
 3618              		.loc 20 2024 5 is_stmt 0 view .LVU979
 3619              	.LBE1251:
 3620              	.LBE1253:
1271:Veno-Echo.cpp ****         }
 3621              		.loc 20 1271 13 is_stmt 1 view .LVU980
1271:Veno-Echo.cpp ****         }
 3622              		.loc 20 1271 25 is_stmt 0 view .LVU981
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 172


 3623 0108 474B     		ldr	r3, .L218+48
 3624 010a 83ED000A 		vstr.32	s0, [r3]
 3625              	.LVL163:
 3626              	.L192:
1279:Veno-Echo.cpp **** 
 3627              		.loc 20 1279 9 is_stmt 1 view .LVU982
1281:Veno-Echo.cpp ****         {
 3628              		.loc 20 1281 9 view .LVU983
 3629 010e 9FED3A5B 		vldr.64	d5, .L218
 3630 0112 B4EEC56B 		vcmpe.f64	d6, d5
 3631 0116 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3632 011a A4DA     		bge	.L196
1285:Veno-Echo.cpp ****         {
 3633              		.loc 20 1285 14 view .LVU984
 3634 011c 9FED385B 		vldr.64	d5, .L218+8
 3635 0120 B4EEC56B 		vcmpe.f64	d6, d5
 3636 0124 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3637 0128 58D9     		bls	.L205
1291:Veno-Echo.cpp ****         }
 3638              		.loc 20 1291 13 view .LVU985
1291:Veno-Echo.cpp ****         }
 3639              		.loc 20 1291 33 is_stmt 0 view .LVU986
 3640 012a B0EE670A 		vmov.f32	s0, s15
 3641              	.LVL164:
1291:Veno-Echo.cpp ****         }
 3642              		.loc 20 1291 33 view .LVU987
 3643 012e 0020     		movs	r0, #0
 3644 0130 B7EE001A 		vmov.f32	s2, #1.0e+0
 3645 0134 DFED420A 		vldr.32	s1, .L218+72
 3646 0138 FFF7FEFF 		bl	_Z5scalefff9CurveType
 3647              	.LVL165:
1291:Veno-Echo.cpp ****         }
 3648              		.loc 20 1291 33 view .LVU988
 3649 013c 95E7     		b	.L195
 3650              	.LVL166:
 3651              	.L200:
1291:Veno-Echo.cpp ****         }
 3652              		.loc 20 1291 33 view .LVU989
 3653              	.LBE1273:
 3654              	.LBB1274:
1310:Veno-Echo.cpp ****             {
 3655              		.loc 20 1310 13 is_stmt 1 view .LVU990
1310:Veno-Echo.cpp ****             {
 3656              		.loc 20 1310 16 is_stmt 0 view .LVU991
 3657 013e 3D4B     		ldr	r3, .L218+60
1310:Veno-Echo.cpp ****             {
 3658              		.loc 20 1310 13 view .LVU992
 3659 0140 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3660 0142 7AB9     		cbnz	r2, .L202
1312:Veno-Echo.cpp ****                 {
 3661              		.loc 20 1312 17 is_stmt 1 view .LVU993
 3662              	.LVL167:
 3663              	.LBB1258:
 3664              	.LBI1258:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3665              		.loc 21 75 3 view .LVU994
 3666              	.LBB1259:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 173


 3667              		.loc 21 76 5 view .LVU995
 3668              		.loc 21 76 5 is_stmt 0 view .LVU996
 3669              	.LBE1259:
 3670              	.LBE1258:
1312:Veno-Echo.cpp ****                 {
 3671              		.loc 20 1312 23 view .LVU997
 3672 0144 3C4A     		ldr	r2, .L218+64
1312:Veno-Echo.cpp ****                 {
 3673              		.loc 20 1312 17 view .LVU998
 3674 0146 9FED3D7A 		vldr.32	s14, .L218+68
1312:Veno-Echo.cpp ****                 {
 3675              		.loc 20 1312 23 view .LVU999
 3676 014a D2ED007A 		vldr.32	s15, [r2]
 3677 014e 70EE677A 		vsub.f32	s15, s0, s15
 3678              	.LBB1261:
 3679              	.LBB1260:
 3680              		.loc 21 76 31 view .LVU1000
 3681 0152 F0EEE77A 		vabs.f32	s15, s15
 3682              	.LBE1260:
 3683              	.LBE1261:
1312:Veno-Echo.cpp ****                 {
 3684              		.loc 20 1312 17 view .LVU1001
 3685 0156 F4EEC77A 		vcmpe.f32	s15, s14
 3686 015a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3687 015e 9CDD     		ble	.L185
1314:Veno-Echo.cpp ****                 }
 3688              		.loc 20 1314 21 is_stmt 1 view .LVU1002
1314:Veno-Echo.cpp ****                 }
 3689              		.loc 20 1314 32 is_stmt 0 view .LVU1003
 3690 0160 0122     		movs	r2, #1
 3691 0162 1A70     		strb	r2, [r3]
 3692              	.L202:
1319:Veno-Echo.cpp ****         {
 3693              		.loc 20 1319 9 is_stmt 1 view .LVU1004
 3694              	.LBB1262:
1321:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
 3695              		.loc 20 1321 13 view .LVU1005
 3696              	.LVL168:
1322:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3697              		.loc 20 1322 13 view .LVU1006
1322:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3698              		.loc 20 1322 24 is_stmt 0 view .LVU1007
 3699 0164 B6EE001A 		vmov.f32	s2, #5.0e-1
 3700 0168 DFED350A 		vldr.32	s1, .L218+72
 3701 016c 0020     		movs	r0, #0
 3702 016e FFF7FEFF 		bl	_Z5scalefff9CurveType
 3703              	.LVL169:
1322:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3704              		.loc 20 1322 24 view .LVU1008
 3705 0172 B0EE408A 		vmov.f32	s16, s0
 3706              	.LVL170:
1323:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 3707              		.loc 20 1323 13 is_stmt 1 view .LVU1009
1323:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 3708              		.loc 20 1323 25 is_stmt 0 view .LVU1010
 3709 0176 3348     		ldr	r0, .L218+76
 3710 0178 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 174


 3711              	.LVL171:
1324:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 3712              		.loc 20 1324 13 is_stmt 1 view .LVU1011
1324:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 3713              		.loc 20 1324 25 is_stmt 0 view .LVU1012
 3714 017c 3248     		ldr	r0, .L218+80
 3715 017e B0EE480A 		vmov.f32	s0, s16
 3716 0182 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3717              	.LVL172:
1325:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 3718              		.loc 20 1325 13 is_stmt 1 view .LVU1013
1325:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 3719              		.loc 20 1325 25 is_stmt 0 view .LVU1014
 3720 0186 B0EE480A 		vmov.f32	s0, s16
 3721 018a 3048     		ldr	r0, .L218+84
 3722 018c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3723              	.LVL173:
1326:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 3724              		.loc 20 1326 13 is_stmt 1 view .LVU1015
1326:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 3725              		.loc 20 1326 25 is_stmt 0 view .LVU1016
 3726 0190 B0EE480A 		vmov.f32	s0, s16
 3727 0194 2E48     		ldr	r0, .L218+88
 3728 0196 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3729              	.LVL174:
1327:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 3730              		.loc 20 1327 13 is_stmt 1 view .LVU1017
1327:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 3731              		.loc 20 1327 30 is_stmt 0 view .LVU1018
 3732 019a B0EE480A 		vmov.f32	s0, s16
 3733 019e 2D48     		ldr	r0, .L218+92
 3734 01a0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3735              	.LVL175:
1328:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 3736              		.loc 20 1328 13 is_stmt 1 view .LVU1019
1328:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 3737              		.loc 20 1328 30 is_stmt 0 view .LVU1020
 3738 01a4 B0EE480A 		vmov.f32	s0, s16
 3739 01a8 2B48     		ldr	r0, .L218+96
 3740 01aa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3741              	.LVL176:
1329:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 3742              		.loc 20 1329 13 is_stmt 1 view .LVU1021
1329:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 3743              		.loc 20 1329 30 is_stmt 0 view .LVU1022
 3744 01ae B0EE480A 		vmov.f32	s0, s16
 3745 01b2 2A48     		ldr	r0, .L218+100
 3746 01b4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3747              	.LVL177:
1330:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 3748              		.loc 20 1330 13 is_stmt 1 view .LVU1023
1330:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 3749              		.loc 20 1330 30 is_stmt 0 view .LVU1024
 3750 01b8 B0EE480A 		vmov.f32	s0, s16
 3751 01bc 2848     		ldr	r0, .L218+104
 3752 01be FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3753              	.LVL178:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 175


1331:Veno-Echo.cpp ****             save_flag = true;
 3754              		.loc 20 1331 13 is_stmt 1 view .LVU1025
1331:Veno-Echo.cpp ****             save_flag = true;
 3755              		.loc 20 1331 35 is_stmt 0 view .LVU1026
 3756 01c2 2849     		ldr	r1, .L218+108
 3757              	.LBB1263:
 3758              	.LBB1264:
 3759              	.LBB1265:
 3760              	.LBB1266:
 3761              	.LBB1267:
 3762              		.loc 22 397 18 view .LVU1027
 3763 01c4 284B     		ldr	r3, .L218+112
 3764 01c6 0122     		movs	r2, #1
 3765              	.LBE1267:
 3766              	.LBE1266:
 3767              	.LBE1265:
 3768              	.LBE1264:
 3769              	.LBE1263:
1331:Veno-Echo.cpp ****             save_flag = true;
 3770              		.loc 20 1331 35 view .LVU1028
 3771 01c8 81ED068A 		vstr.32	s16, [r1, #24]
1332:Veno-Echo.cpp ****         }
 3772              		.loc 20 1332 13 is_stmt 1 view .LVU1029
 3773              	.LVL179:
 3774              	.LBB1272:
 3775              	.LBI1263:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 3776              		.loc 23 80 5 view .LVU1030
 3777              	.LBB1271:
 3778              		.loc 23 81 7 view .LVU1031
 3779              	.LBB1270:
 3780              	.LBI1265:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 3781              		.loc 22 288 7 view .LVU1032
 3782              	.LBB1269:
 3783              	.LBI1266:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 3784              		.loc 22 390 7 view .LVU1033
 3785              	.LBB1268:
 3786              		.loc 22 397 18 is_stmt 0 view .LVU1034
 3787 01cc BFF35B8F 		dmb	ish
 3788 01d0 1A70     		strb	r2, [r3]
 3789 01d2 BFF35B8F 		dmb	ish
 3790              	.LVL180:
 3791              		.loc 22 397 18 view .LVU1035
 3792              	.LBE1268:
 3793              	.LBE1269:
 3794              	.LBE1270:
 3795              	.LBE1271:
 3796              	.LBE1272:
 3797              	.LBE1262:
 3798              	.LBE1274:
 3799              	.LBE1279:
1335:Veno-Echo.cpp **** 
 3800              		.loc 20 1335 1 view .LVU1036
 3801 01d6 BDEC028B 		vldm	sp!, {d8}
 3802              		.cfi_remember_state
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 176


 3803              		.cfi_restore 80
 3804              		.cfi_restore 81
 3805              		.cfi_def_cfa_offset 8
 3806              	.LVL181:
1335:Veno-Echo.cpp **** 
 3807              		.loc 20 1335 1 view .LVU1037
 3808 01da 10BD     		pop	{r4, pc}
 3809              	.LVL182:
 3810              	.L205:
 3811              		.cfi_restore_state
 3812              	.LBB1280:
 3813              	.LBB1275:
1287:Veno-Echo.cpp ****         }
 3814              		.loc 20 1287 26 view .LVU1038
 3815 01dc 9FED180A 		vldr.32	s0, .L218+72
 3816              	.LVL183:
1287:Veno-Echo.cpp ****         }
 3817              		.loc 20 1287 26 view .LVU1039
 3818 01e0 43E7     		b	.L195
 3819              	.LVL184:
 3820              	.L216:
 3821              	.LBB1254:
 3822              	.LBB1252:
1287:Veno-Echo.cpp ****         }
 3823              		.loc 20 1287 26 view .LVU1040
 3824 01e2 9FED096B 		vldr.64	d6, .L218+16
 3825              	.LVL185:
2016:Veno-Echo.cpp ****     }
 3826              		.loc 20 2016 16 view .LVU1041
 3827 01e6 DFED167A 		vldr.32	s15, .L218+72
 3828              	.LVL186:
2016:Veno-Echo.cpp ****     }
 3829              		.loc 20 2016 16 view .LVU1042
 3830 01ea 8DE7     		b	.L191
 3831              	.LVL187:
 3832              	.L217:
2016:Veno-Echo.cpp ****     }
 3833              		.loc 20 2016 16 view .LVU1043
 3834 01ec B7EEE76A 		vcvt.f64.f32	d6, s15
 3835              	.LVL188:
2016:Veno-Echo.cpp ****     }
 3836              		.loc 20 2016 16 view .LVU1044
 3837 01f0 8AE7     		b	.L191
 3838              	.LVL189:
 3839              	.L211:
2016:Veno-Echo.cpp ****     }
 3840              		.loc 20 2016 16 view .LVU1045
 3841 01f2 B7EEE76A 		vcvt.f64.f32	d6, s15
 3842 01f6 8AE7     		b	.L192
 3843              	.L219:
 3844              		.align	3
 3845              	.L218:
 3846 01f8 5C8FC2F5 		.word	4123168604
 3847 01fc 285CEF3F 		.word	1072651304
 3848 0200 7B14AE47 		.word	1202590843
 3849 0204 E17A943F 		.word	1066695393
 3850 0208 00000000 		.word	0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 177


 3851 020c 00000000 		.word	0
 3852 0210 18000000 		.word	.LANCHOR4+24
 3853 0214 00000000 		.word	.LANCHOR7
 3854 0218 00000000 		.word	.LANCHOR52
 3855 021c 00000000 		.word	.LANCHOR53
 3856 0220 00000000 		.word	.LANCHOR54
 3857 0224 00000000 		.word	.LANCHOR51
 3858 0228 00000000 		.word	.LANCHOR55
 3859 022c 00000000 		.word	.LANCHOR56
 3860 0230 6F12833C 		.word	1015222895
 3861 0234 00000000 		.word	.LANCHOR57
 3862 0238 00000000 		.word	.LANCHOR58
 3863 023c 0AD7A33B 		.word	1000593162
 3864 0240 00000000 		.word	0
 3865 0244 00000000 		.word	.LANCHOR47
 3866 0248 00000000 		.word	.LANCHOR48
 3867 024c 00000000 		.word	.LANCHOR35
 3868 0250 00000000 		.word	.LANCHOR36
 3869 0254 00000000 		.word	.LANCHOR49
 3870 0258 00000000 		.word	.LANCHOR50
 3871 025c 00000000 		.word	.LANCHOR37
 3872 0260 00000000 		.word	.LANCHOR38
 3873 0264 00000000 		.word	.LANCHOR15
 3874 0268 00000000 		.word	.LANCHOR16
 3875              	.LBE1252:
 3876              	.LBE1254:
 3877              	.LBE1275:
 3878              	.LBE1280:
 3879              		.cfi_endproc
 3880              	.LFE4321:
 3882              		.section	.text._Z15Update_width_CVv,"ax",%progbits
 3883              		.align	1
 3884              		.p2align 2,,3
 3885              		.global	_Z15Update_width_CVv
 3886              		.syntax unified
 3887              		.thumb
 3888              		.thumb_func
 3889              		.fpu fpv5-d16
 3891              	_Z15Update_width_CVv:
 3892              	.LFB4322:
1338:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 3893              		.loc 20 1338 1 is_stmt 1 view -0
 3894              		.cfi_startproc
 3895              		@ args = 0, pretend = 0, frame = 0
 3896              		@ frame_needed = 0, uses_anonymous_args = 0
1339:Veno-Echo.cpp **** }
 3897              		.loc 20 1339 5 view .LVU1047
1338:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 3898              		.loc 20 1338 1 is_stmt 0 view .LVU1048
 3899 0000 08B5     		push	{r3, lr}
 3900              		.cfi_def_cfa_offset 8
 3901              		.cfi_offset 3, -8
 3902              		.cfi_offset 14, -4
1339:Veno-Echo.cpp **** }
 3903              		.loc 20 1339 30 view .LVU1049
 3904 0002 0521     		movs	r1, #5
 3905 0004 0348     		ldr	r0, .L222
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 178


 3906 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3907              	.LVL190:
1339:Veno-Echo.cpp **** }
 3908              		.loc 20 1339 13 view .LVU1050
 3909 000a 034B     		ldr	r3, .L222+4
 3910 000c 83ED000A 		vstr.32	s0, [r3]
1340:Veno-Echo.cpp **** 
 3911              		.loc 20 1340 1 view .LVU1051
 3912 0010 08BD     		pop	{r3, pc}
 3913              	.L223:
 3914 0012 00BF     		.align	2
 3915              	.L222:
 3916 0014 18000000 		.word	.LANCHOR4+24
 3917 0018 00000000 		.word	.LANCHOR59
 3918              		.cfi_endproc
 3919              	.LFE4322:
 3921              		.section	.text._Z12Update_widthv,"ax",%progbits
 3922              		.align	1
 3923              		.p2align 2,,3
 3924              		.global	_Z12Update_widthv
 3925              		.syntax unified
 3926              		.thumb
 3927              		.thumb_func
 3928              		.fpu fpv5-d16
 3930              	_Z12Update_widthv:
 3931              	.LFB4323:
1343:Veno-Echo.cpp ****     static bool lastShift{};
 3932              		.loc 20 1343 1 is_stmt 1 view -0
 3933              		.cfi_startproc
 3934              		@ args = 0, pretend = 0, frame = 0
 3935              		@ frame_needed = 0, uses_anonymous_args = 0
1344:Veno-Echo.cpp ****     static bool width_pickup{};
 3936              		.loc 20 1344 5 view .LVU1053
1345:Veno-Echo.cpp ****     static bool ModDepth_pickup{};
 3937              		.loc 20 1345 5 view .LVU1054
1346:Veno-Echo.cpp **** 
 3938              		.loc 20 1346 5 view .LVU1055
1348:Veno-Echo.cpp **** 
 3939              		.loc 20 1348 5 view .LVU1056
1351:Veno-Echo.cpp **** 
 3940              		.loc 20 1351 5 view .LVU1057
1351:Veno-Echo.cpp **** 
 3941              		.loc 20 1351 39 is_stmt 0 view .LVU1058
 3942 0000 0722     		movs	r2, #7
 3943 0002 6348     		ldr	r0, .L253
 3944 0004 1146     		mov	r1, r2
1343:Veno-Echo.cpp ****     static bool lastShift{};
 3945              		.loc 20 1343 1 view .LVU1059
 3946 0006 10B5     		push	{r4, lr}
 3947              		.cfi_def_cfa_offset 8
 3948              		.cfi_offset 4, -8
 3949              		.cfi_offset 14, -4
 3950 0008 2DED028B 		vpush.64	{d8}
 3951              		.cfi_def_cfa_offset 16
 3952              		.cfi_offset 80, -16
 3953              		.cfi_offset 81, -12
1351:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 179


 3954              		.loc 20 1351 39 view .LVU1060
 3955 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3956              	.LVL191:
 3957              	.LBB1281:
1353:Veno-Echo.cpp ****     {   
 3958              		.loc 20 1353 9 view .LVU1061
 3959 0010 604B     		ldr	r3, .L253+4
 3960              	.LBE1281:
1351:Veno-Echo.cpp **** 
 3961              		.loc 20 1351 39 view .LVU1062
 3962 0012 B0EE408A 		vmov.f32	s16, s0
 3963              	.LVL192:
1353:Veno-Echo.cpp ****     {   
 3964              		.loc 20 1353 5 is_stmt 1 view .LVU1063
 3965              	.LBB1336:
 3966              	.LBB1282:
1357:Veno-Echo.cpp ****         {
 3967              		.loc 20 1357 19 is_stmt 0 view .LVU1064
 3968 0016 604A     		ldr	r2, .L253+8
 3969              	.LBE1282:
1353:Veno-Echo.cpp ****     {   
 3970              		.loc 20 1353 5 view .LVU1065
 3971 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3972 001a 002B     		cmp	r3, #0
 3973 001c 3ED1     		bne	.L225
 3974              	.LBB1311:
1355:Veno-Echo.cpp ****         //update pickup
 3975              		.loc 20 1355 9 is_stmt 1 view .LVU1066
1357:Veno-Echo.cpp ****         {
 3976              		.loc 20 1357 9 view .LVU1067
 3977 001e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3978 0020 0029     		cmp	r1, #0
 3979 0022 48D0     		beq	.L226
1359:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
 3980              		.loc 20 1359 13 view .LVU1068
1360:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3981              		.loc 20 1360 26 is_stmt 0 view .LVU1069
 3982 0024 5D48     		ldr	r0, .L253+12
1361:Veno-Echo.cpp ****         }
 3983              		.loc 20 1361 23 view .LVU1070
 3984 0026 5E49     		ldr	r1, .L253+16
1359:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
 3985              		.loc 20 1359 23 view .LVU1071
 3986 0028 1370     		strb	r3, [r2]
1360:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3987              		.loc 20 1360 13 is_stmt 1 view .LVU1072
1360:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3988              		.loc 20 1360 26 is_stmt 0 view .LVU1073
 3989 002a 0370     		strb	r3, [r0]
1361:Veno-Echo.cpp ****         }
 3990              		.loc 20 1361 13 is_stmt 1 view .LVU1074
1361:Veno-Echo.cpp ****         }
 3991              		.loc 20 1361 23 is_stmt 0 view .LVU1075
 3992 002c 81ED000A 		vstr.32	s0, [r1]
 3993              	.L227:
1376:Veno-Echo.cpp **** 
 3994              		.loc 20 1376 9 is_stmt 1 view .LVU1076
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 180


 3995              	.LVL193:
1378:Veno-Echo.cpp ****         {
 3996              		.loc 20 1378 9 view .LVU1077
1386:Veno-Echo.cpp ****         }
 3997              		.loc 20 1386 13 view .LVU1078
 3998              	.LBB1283:
 3999              	.LBI1283:
2009:Veno-Echo.cpp **** {
 4000              		.loc 20 2009 7 view .LVU1079
 4001              	.LBB1284:
2011:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4002              		.loc 20 2011 5 view .LVU1080
2012:Veno-Echo.cpp **** 
 4003              		.loc 20 2012 5 view .LVU1081
 4004              	.LBE1284:
 4005              	.LBE1283:
1386:Veno-Echo.cpp ****         }
 4006              		.loc 20 1386 32 is_stmt 0 view .LVU1082
 4007 0030 5C4A     		ldr	r2, .L253+20
 4008              	.LBB1288:
 4009              	.LBB1285:
2012:Veno-Echo.cpp **** 
 4010              		.loc 20 2012 39 view .LVU1083
 4011 0032 B7EE007A 		vmov.f32	s14, #1.0e+0
2012:Veno-Echo.cpp **** 
 4012              		.loc 20 2012 49 view .LVU1084
 4013 0036 B6EE006A 		vmov.f32	s12, #5.0e-1
 4014              	.LBE1285:
 4015              	.LBE1288:
1386:Veno-Echo.cpp ****         }
 4016              		.loc 20 1386 32 view .LVU1085
 4017 003a 5B4B     		ldr	r3, .L253+24
 4018              	.LBB1289:
 4019              	.LBB1286:
2012:Veno-Echo.cpp **** 
 4020              		.loc 20 2012 39 view .LVU1086
 4021 003c D2ED007A 		vldr.32	s15, [r2]
2012:Veno-Echo.cpp **** 
 4022              		.loc 20 2012 12 view .LVU1087
 4023 0040 F0EE006A 		vmov.f32	s13, #2.0e+0
 4024 0044 93ED000A 		vldr.32	s0, [r3]
 4025              	.LVL194:
2012:Veno-Echo.cpp **** 
 4026              		.loc 20 2012 39 view .LVU1088
 4027 0048 77EE677A 		vsub.f32	s15, s14, s15
2012:Veno-Echo.cpp **** 
 4028              		.loc 20 2012 49 view .LVU1089
 4029 004c 77EEC67A 		vsub.f32	s15, s15, s12
2012:Veno-Echo.cpp **** 
 4030              		.loc 20 2012 12 view .LVU1090
 4031 0050 A7EEA60A 		vfma.f32	s0, s15, s13
 4032              	.LVL195:
2014:Veno-Echo.cpp ****     {
 4033              		.loc 20 2014 5 is_stmt 1 view .LVU1091
 4034 0054 B5EEC00A 		vcmpe.f32	s0, #0
 4035 0058 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4036 005c 00F19180 		bmi	.L251
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 181


2019:Veno-Echo.cpp ****     {
 4037              		.loc 20 2019 5 view .LVU1092
2021:Veno-Echo.cpp ****     }
 4038              		.loc 20 2021 16 is_stmt 0 view .LVU1093
 4039 0060 B4EE470A 		vcmp.f32	s0, s14
 4040 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4041 0068 37FE000A 		vselgt.f32	s0, s14, s0
 4042              	.LVL196:
 4043              	.L233:
2024:Veno-Echo.cpp **** }
 4044              		.loc 20 2024 5 is_stmt 1 view .LVU1094
2024:Veno-Echo.cpp **** }
 4045              		.loc 20 2024 5 is_stmt 0 view .LVU1095
 4046              	.LBE1286:
 4047              	.LBE1289:
1386:Veno-Echo.cpp ****         }
 4048              		.loc 20 1386 32 view .LVU1096
 4049 006c F6EE000A 		vmov.f32	s1, #5.0e-1
 4050 0070 0020     		movs	r0, #0
 4051 0072 9FED4E1A 		vldr.32	s2, .L253+28
 4052 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4053              	.LVL197:
 4054              	.L232:
1389:Veno-Echo.cpp ****             WidthXfade.SetPos(width);
 4055              		.loc 20 1389 13 is_stmt 1 view .LVU1097
 4056              	.LBB1290:
 4057              	.LBI1290:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4058              		.loc 25 135 13 view .LVU1098
 4059              	.LBB1291:
 4060              		.loc 25 137 5 view .LVU1099
 4061              		.loc 25 137 9 is_stmt 0 view .LVU1100
 4062 007a 4D4B     		ldr	r3, .L253+32
 4063 007c 9FED4D7A 		vldr.32	s14, .L253+36
 4064 0080 D3ED007A 		vldr.32	s15, [r3]
 4065              	.LBE1291:
 4066              	.LBE1290:
 4067              	.LBB1294:
 4068              	.LBB1295:
  38:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initializes CrossFade module
  39:../DaisySP/Source/Dynamics/crossfade.h ****         Defaults
  40:../DaisySP/Source/Dynamics/crossfade.h ****         - current position = .5
  41:../DaisySP/Source/Dynamics/crossfade.h ****         - curve = linear
  42:../DaisySP/Source/Dynamics/crossfade.h ****     */
  43:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init(int curve)
  44:../DaisySP/Source/Dynamics/crossfade.h ****     {
  45:../DaisySP/Source/Dynamics/crossfade.h ****         pos_   = 0.5f;
  46:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
  47:../DaisySP/Source/Dynamics/crossfade.h ****     }
  48:../DaisySP/Source/Dynamics/crossfade.h **** 
  49:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initialize with default linear curve 
  50:../DaisySP/Source/Dynamics/crossfade.h ****     */
  51:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init() { Init(CROSSFADE_LIN); }
  52:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
  53:../DaisySP/Source/Dynamics/crossfade.h ****     */
  54:../DaisySP/Source/Dynamics/crossfade.h ****     float Process(float &in1, float &in2);
  55:../DaisySP/Source/Dynamics/crossfade.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 182


  56:../DaisySP/Source/Dynamics/crossfade.h **** 
  57:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets position of CrossFade between two input signals
  58:../DaisySP/Source/Dynamics/crossfade.h ****         Input range: 0 to 1
  59:../DaisySP/Source/Dynamics/crossfade.h ****     */
  60:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetPos(float pos) { pos_ = pos; }
 4069              		.loc 10 60 42 view .LVU1101
 4070 0084 4C4A     		ldr	r2, .L253+40
 4071              	.LBE1295:
 4072              	.LBE1294:
 4073              	.LBB1297:
 4074              	.LBB1292:
 4075              		.loc 25 137 24 view .LVU1102
 4076 0086 30EE670A 		vsub.f32	s0, s0, s15
 4077              	.LVL198:
 4078              		.loc 25 137 24 view .LVU1103
 4079              	.LBE1292:
 4080              	.LBE1297:
 4081              	.LBE1311:
 4082              	.LBE1336:
1422:Veno-Echo.cpp **** 
 4083              		.loc 20 1422 1 view .LVU1104
 4084 008a BDEC028B 		vldm	sp!, {d8}
 4085              		.cfi_remember_state
 4086              		.cfi_restore 80
 4087              		.cfi_restore 81
 4088              		.cfi_def_cfa_offset 8
 4089              	.LVL199:
 4090              	.LBB1337:
 4091              	.LBB1312:
 4092              	.LBB1298:
 4093              	.LBB1293:
 4094              		.loc 25 137 9 view .LVU1105
 4095 008e E0EE077A 		vfma.f32	s15, s0, s14
 4096 0092 C3ED007A 		vstr.32	s15, [r3]
 4097              	.LVL200:
 4098              		.loc 25 137 9 view .LVU1106
 4099              	.LBE1293:
 4100              	.LBE1298:
1390:Veno-Echo.cpp ****     }
 4101              		.loc 20 1390 13 is_stmt 1 view .LVU1107
 4102              	.LBB1299:
 4103              	.LBI1294:
 4104              		.loc 10 60 17 view .LVU1108
 4105              	.LBB1296:
 4106              		.loc 10 60 37 view .LVU1109
 4107              		.loc 10 60 42 is_stmt 0 view .LVU1110
 4108 0096 C2ED007A 		vstr.32	s15, [r2]
 4109              	.LBE1296:
 4110              	.LBE1299:
 4111              	.LBE1312:
 4112              	.LBE1337:
1422:Veno-Echo.cpp **** 
 4113              		.loc 20 1422 1 view .LVU1111
 4114 009a 10BD     		pop	{r4, pc}
 4115              	.LVL201:
 4116              	.L225:
 4117              		.cfi_restore_state
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 183


 4118              	.LBB1338:
 4119              	.LBB1313:
1395:Veno-Echo.cpp **** 
 4120              		.loc 20 1395 9 is_stmt 1 view .LVU1112
1397:Veno-Echo.cpp ****         {
 4121              		.loc 20 1397 9 view .LVU1113
 4122 009c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4123 009e 002B     		cmp	r3, #0
 4124 00a0 43D1     		bne	.L236
1399:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 4125              		.loc 20 1399 13 view .LVU1114
1399:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 4126              		.loc 20 1399 23 is_stmt 0 view .LVU1115
 4127 00a2 0124     		movs	r4, #1
1400:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 4128              		.loc 20 1400 29 view .LVU1116
 4129 00a4 4548     		ldr	r0, .L253+44
1401:Veno-Echo.cpp ****         }
 4130              		.loc 20 1401 26 view .LVU1117
 4131 00a6 4649     		ldr	r1, .L253+48
1399:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 4132              		.loc 20 1399 23 view .LVU1118
 4133 00a8 1470     		strb	r4, [r2]
1400:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 4134              		.loc 20 1400 13 is_stmt 1 view .LVU1119
1400:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 4135              		.loc 20 1400 29 is_stmt 0 view .LVU1120
 4136 00aa 0370     		strb	r3, [r0]
1401:Veno-Echo.cpp ****         }
 4137              		.loc 20 1401 13 is_stmt 1 view .LVU1121
1401:Veno-Echo.cpp ****         }
 4138              		.loc 20 1401 26 is_stmt 0 view .LVU1122
 4139 00ac 81ED000A 		vstr.32	s0, [r1]
 4140              	.L224:
1401:Veno-Echo.cpp ****         }
 4141              		.loc 20 1401 26 view .LVU1123
 4142              	.LBE1313:
 4143              	.LBE1338:
1422:Veno-Echo.cpp **** 
 4144              		.loc 20 1422 1 view .LVU1124
 4145 00b0 BDEC028B 		vldm	sp!, {d8}
 4146              		.cfi_remember_state
 4147              		.cfi_restore 80
 4148              		.cfi_restore 81
 4149              		.cfi_def_cfa_offset 8
 4150 00b4 10BD     		pop	{r4, pc}
 4151              	.L226:
 4152              		.cfi_restore_state
 4153              	.LBB1339:
 4154              	.LBB1333:
1366:Veno-Echo.cpp ****             {
 4155              		.loc 20 1366 13 is_stmt 1 view .LVU1125
1366:Veno-Echo.cpp ****             {
 4156              		.loc 20 1366 16 is_stmt 0 view .LVU1126
 4157 00b6 394B     		ldr	r3, .L253+12
1366:Veno-Echo.cpp ****             {
 4158              		.loc 20 1366 13 view .LVU1127
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 184


 4159 00b8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4160 00ba 7AB9     		cbnz	r2, .L228
1368:Veno-Echo.cpp ****                 {
 4161              		.loc 20 1368 17 is_stmt 1 view .LVU1128
 4162              	.LVL202:
 4163              	.LBB1300:
 4164              	.LBI1300:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4165              		.loc 21 75 3 view .LVU1129
 4166              	.LBB1301:
 4167              		.loc 21 76 5 view .LVU1130
 4168              		.loc 21 76 5 is_stmt 0 view .LVU1131
 4169              	.LBE1301:
 4170              	.LBE1300:
1368:Veno-Echo.cpp ****                 {
 4171              		.loc 20 1368 23 view .LVU1132
 4172 00bc 384A     		ldr	r2, .L253+16
1368:Veno-Echo.cpp ****                 {
 4173              		.loc 20 1368 17 view .LVU1133
 4174 00be 9FED417A 		vldr.32	s14, .L253+52
1368:Veno-Echo.cpp ****                 {
 4175              		.loc 20 1368 23 view .LVU1134
 4176 00c2 D2ED007A 		vldr.32	s15, [r2]
 4177 00c6 70EE677A 		vsub.f32	s15, s0, s15
 4178              	.LBB1303:
 4179              	.LBB1302:
 4180              		.loc 21 76 31 view .LVU1135
 4181 00ca F0EEE77A 		vabs.f32	s15, s15
 4182              	.LBE1302:
 4183              	.LBE1303:
1368:Veno-Echo.cpp ****                 {
 4184              		.loc 20 1368 17 view .LVU1136
 4185 00ce F4EEC77A 		vcmpe.f32	s15, s14
 4186 00d2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4187 00d6 ABDD     		ble	.L227
1370:Veno-Echo.cpp ****                 }
 4188              		.loc 20 1370 21 is_stmt 1 view .LVU1137
1370:Veno-Echo.cpp ****                 }
 4189              		.loc 20 1370 34 is_stmt 0 view .LVU1138
 4190 00d8 0122     		movs	r2, #1
 4191 00da 1A70     		strb	r2, [r3]
 4192              	.L228:
1376:Veno-Echo.cpp **** 
 4193              		.loc 20 1376 9 is_stmt 1 view .LVU1139
 4194              	.LVL203:
1378:Veno-Echo.cpp ****         {
 4195              		.loc 20 1378 9 view .LVU1140
1380:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4196              		.loc 20 1380 13 view .LVU1141
 4197              	.LBB1304:
 4198              	.LBI1304:
2009:Veno-Echo.cpp **** {
 4199              		.loc 20 2009 7 view .LVU1142
 4200              	.LBB1305:
2011:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4201              		.loc 20 2011 5 view .LVU1143
2012:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 185


 4202              		.loc 20 2012 5 view .LVU1144
 4203              	.LBE1305:
 4204              	.LBE1304:
1380:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4205              		.loc 20 1380 32 is_stmt 0 view .LVU1145
 4206 00dc 314B     		ldr	r3, .L253+20
 4207              	.LBB1308:
 4208              	.LBB1306:
2012:Veno-Echo.cpp **** 
 4209              		.loc 20 2012 39 view .LVU1146
 4210 00de B7EE007A 		vmov.f32	s14, #1.0e+0
2012:Veno-Echo.cpp **** 
 4211              		.loc 20 2012 49 view .LVU1147
 4212 00e2 B6EE006A 		vmov.f32	s12, #5.0e-1
2012:Veno-Echo.cpp **** 
 4213              		.loc 20 2012 39 view .LVU1148
 4214 00e6 D3ED007A 		vldr.32	s15, [r3]
2012:Veno-Echo.cpp **** 
 4215              		.loc 20 2012 12 view .LVU1149
 4216 00ea F0EE006A 		vmov.f32	s13, #2.0e+0
 4217 00ee B0EE480A 		vmov.f32	s0, s16
 4218              	.LVL204:
2012:Veno-Echo.cpp **** 
 4219              		.loc 20 2012 39 view .LVU1150
 4220 00f2 77EE677A 		vsub.f32	s15, s14, s15
2012:Veno-Echo.cpp **** 
 4221              		.loc 20 2012 49 view .LVU1151
 4222 00f6 77EEC67A 		vsub.f32	s15, s15, s12
2012:Veno-Echo.cpp **** 
 4223              		.loc 20 2012 12 view .LVU1152
 4224 00fa A7EEA60A 		vfma.f32	s0, s15, s13
 4225              	.LVL205:
2014:Veno-Echo.cpp ****     {
 4226              		.loc 20 2014 5 is_stmt 1 view .LVU1153
 4227 00fe B5EEC00A 		vcmpe.f32	s0, #0
 4228 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4229 0106 3FD4     		bmi	.L252
2019:Veno-Echo.cpp ****     {
 4230              		.loc 20 2019 5 view .LVU1154
2021:Veno-Echo.cpp ****     }
 4231              		.loc 20 2021 16 is_stmt 0 view .LVU1155
 4232 0108 B4EE470A 		vcmp.f32	s0, s14
 4233 010c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4234 0110 37FE000A 		vselgt.f32	s0, s14, s0
 4235              	.LVL206:
 4236              	.L230:
2024:Veno-Echo.cpp **** }
 4237              		.loc 20 2024 5 is_stmt 1 view .LVU1156
2024:Veno-Echo.cpp **** }
 4238              		.loc 20 2024 5 is_stmt 0 view .LVU1157
 4239              	.LBE1306:
 4240              	.LBE1308:
1380:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4241              		.loc 20 1380 32 view .LVU1158
 4242 0114 F6EE000A 		vmov.f32	s1, #5.0e-1
 4243 0118 0020     		movs	r0, #0
 4244 011a 9FED241A 		vldr.32	s2, .L253+28
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 186


 4245 011e FFF7FEFF 		bl	_Z5scalefff9CurveType
 4246              	.LVL207:
1381:Veno-Echo.cpp ****         }
 4247              		.loc 20 1381 24 view .LVU1159
 4248 0122 214B     		ldr	r3, .L253+24
 4249              	.LVL208:
1381:Veno-Echo.cpp ****         }
 4250              		.loc 20 1381 13 is_stmt 1 view .LVU1160
1381:Veno-Echo.cpp ****         }
 4251              		.loc 20 1381 24 is_stmt 0 view .LVU1161
 4252 0124 83ED008A 		vstr.32	s16, [r3]
 4253 0128 A7E7     		b	.L232
 4254              	.LVL209:
 4255              	.L236:
1381:Veno-Echo.cpp ****         }
 4256              		.loc 20 1381 24 view .LVU1162
 4257              	.LBE1333:
 4258              	.LBB1334:
1406:Veno-Echo.cpp ****             {
 4259              		.loc 20 1406 13 is_stmt 1 view .LVU1163
1406:Veno-Echo.cpp ****             {
 4260              		.loc 20 1406 16 is_stmt 0 view .LVU1164
 4261 012a 244B     		ldr	r3, .L253+44
1406:Veno-Echo.cpp ****             {
 4262              		.loc 20 1406 13 view .LVU1165
 4263 012c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4264 012e 7AB9     		cbnz	r2, .L238
1408:Veno-Echo.cpp ****                 {
 4265              		.loc 20 1408 17 is_stmt 1 view .LVU1166
 4266              	.LVL210:
 4267              	.LBB1314:
 4268              	.LBI1314:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4269              		.loc 21 75 3 view .LVU1167
 4270              	.LBB1315:
 4271              		.loc 21 76 5 view .LVU1168
 4272              		.loc 21 76 5 is_stmt 0 view .LVU1169
 4273              	.LBE1315:
 4274              	.LBE1314:
1408:Veno-Echo.cpp ****                 {
 4275              		.loc 20 1408 23 view .LVU1170
 4276 0130 234A     		ldr	r2, .L253+48
1408:Veno-Echo.cpp ****                 {
 4277              		.loc 20 1408 17 view .LVU1171
 4278 0132 9FED247A 		vldr.32	s14, .L253+52
1408:Veno-Echo.cpp ****                 {
 4279              		.loc 20 1408 23 view .LVU1172
 4280 0136 D2ED007A 		vldr.32	s15, [r2]
 4281 013a 70EE677A 		vsub.f32	s15, s0, s15
 4282              	.LBB1317:
 4283              	.LBB1316:
 4284              		.loc 21 76 31 view .LVU1173
 4285 013e F0EEE77A 		vabs.f32	s15, s15
 4286              	.LBE1316:
 4287              	.LBE1317:
1408:Veno-Echo.cpp ****                 {
 4288              		.loc 20 1408 17 view .LVU1174
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 187


 4289 0142 F4EEC77A 		vcmpe.f32	s15, s14
 4290 0146 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4291 014a B1DD     		ble	.L224
1410:Veno-Echo.cpp ****                 }
 4292              		.loc 20 1410 21 is_stmt 1 view .LVU1175
1410:Veno-Echo.cpp ****                 }
 4293              		.loc 20 1410 37 is_stmt 0 view .LVU1176
 4294 014c 0122     		movs	r2, #1
 4295 014e 1A70     		strb	r2, [r3]
 4296              	.L238:
1415:Veno-Echo.cpp ****         {
 4297              		.loc 20 1415 9 is_stmt 1 view .LVU1177
1417:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4298              		.loc 20 1417 13 view .LVU1178
1417:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4299              		.loc 20 1417 29 is_stmt 0 view .LVU1179
 4300 0150 B0EE480A 		vmov.f32	s0, s16
 4301              	.LVL211:
1417:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4302              		.loc 20 1417 29 view .LVU1180
 4303 0154 0020     		movs	r0, #0
 4304 0156 9FED1C1A 		vldr.32	s2, .L253+56
 4305 015a DFED140A 		vldr.32	s1, .L253+28
 4306 015e FFF7FEFF 		bl	_Z5scalefff9CurveType
 4307              	.LVL212:
1417:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4308              		.loc 20 1417 22 view .LVU1181
 4309 0162 1A48     		ldr	r0, .L253+60
 4310              	.LBB1318:
 4311              	.LBB1319:
 4312              	.LBB1320:
 4313              	.LBB1321:
 4314              	.LBB1322:
 4315              		.loc 22 397 18 view .LVU1182
 4316 0164 0122     		movs	r2, #1
 4317              	.LBE1322:
 4318              	.LBE1321:
 4319              	.LBE1320:
 4320              	.LBE1319:
 4321              	.LBE1318:
1418:Veno-Echo.cpp ****             save_flag = true;
 4322              		.loc 20 1418 34 view .LVU1183
 4323 0166 1A49     		ldr	r1, .L253+64
 4324              	.LBB1331:
 4325              	.LBB1329:
 4326              	.LBB1327:
 4327              	.LBB1325:
 4328              	.LBB1323:
 4329              		.loc 22 397 18 view .LVU1184
 4330 0168 1A4B     		ldr	r3, .L253+68
 4331              	.LBE1323:
 4332              	.LBE1325:
 4333              	.LBE1327:
 4334              	.LBE1329:
 4335              	.LBE1331:
1417:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4336              		.loc 20 1417 22 view .LVU1185
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 188


 4337 016a 80ED000A 		vstr.32	s0, [r0]
1418:Veno-Echo.cpp ****             save_flag = true;
 4338              		.loc 20 1418 13 is_stmt 1 view .LVU1186
1418:Veno-Echo.cpp ****             save_flag = true;
 4339              		.loc 20 1418 34 is_stmt 0 view .LVU1187
 4340 016e 81ED020A 		vstr.32	s0, [r1, #8]
1419:Veno-Echo.cpp ****         }
 4341              		.loc 20 1419 13 is_stmt 1 view .LVU1188
 4342              	.LVL213:
 4343              	.LBB1332:
 4344              	.LBI1318:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 4345              		.loc 23 80 5 view .LVU1189
 4346              	.LBB1330:
 4347              		.loc 23 81 7 view .LVU1190
 4348              	.LBB1328:
 4349              	.LBI1320:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 4350              		.loc 22 288 7 view .LVU1191
 4351              	.LBB1326:
 4352              	.LBI1321:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 4353              		.loc 22 390 7 view .LVU1192
 4354              	.LBB1324:
 4355              		.loc 22 397 18 is_stmt 0 view .LVU1193
 4356 0172 BFF35B8F 		dmb	ish
 4357 0176 1A70     		strb	r2, [r3]
 4358 0178 BFF35B8F 		dmb	ish
 4359              	.LVL214:
 4360              		.loc 22 397 18 view .LVU1194
 4361              	.LBE1324:
 4362              	.LBE1326:
 4363              	.LBE1328:
 4364              	.LBE1330:
 4365              	.LBE1332:
 4366              	.LBE1334:
 4367              	.LBE1339:
1422:Veno-Echo.cpp **** 
 4368              		.loc 20 1422 1 view .LVU1195
 4369 017c BDEC028B 		vldm	sp!, {d8}
 4370              		.cfi_remember_state
 4371              		.cfi_restore 80
 4372              		.cfi_restore 81
 4373              		.cfi_def_cfa_offset 8
 4374              	.LVL215:
1422:Veno-Echo.cpp **** 
 4375              		.loc 20 1422 1 view .LVU1196
 4376 0180 10BD     		pop	{r4, pc}
 4377              	.LVL216:
 4378              	.L251:
 4379              		.cfi_restore_state
 4380              	.LBB1340:
 4381              	.LBB1335:
 4382              	.LBB1309:
 4383              	.LBB1287:
2016:Veno-Echo.cpp ****     }
 4384              		.loc 20 2016 16 view .LVU1197
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 189


 4385 0182 9FED0A0A 		vldr.32	s0, .L253+28
 4386              	.LVL217:
2016:Veno-Echo.cpp ****     }
 4387              		.loc 20 2016 16 view .LVU1198
 4388 0186 71E7     		b	.L233
 4389              	.LVL218:
 4390              	.L252:
2016:Veno-Echo.cpp ****     }
 4391              		.loc 20 2016 16 view .LVU1199
 4392              	.LBE1287:
 4393              	.LBE1309:
 4394              	.LBB1310:
 4395              	.LBB1307:
 4396 0188 9FED080A 		vldr.32	s0, .L253+28
 4397              	.LVL219:
2016:Veno-Echo.cpp ****     }
 4398              		.loc 20 2016 16 view .LVU1200
 4399 018c C2E7     		b	.L230
 4400              	.L254:
 4401 018e 00BF     		.align	2
 4402              	.L253:
 4403 0190 18000000 		.word	.LANCHOR4+24
 4404 0194 00000000 		.word	.LANCHOR7
 4405 0198 00000000 		.word	.LANCHOR60
 4406 019c 00000000 		.word	.LANCHOR61
 4407 01a0 00000000 		.word	.LANCHOR62
 4408 01a4 00000000 		.word	.LANCHOR59
 4409 01a8 00000000 		.word	.LANCHOR63
 4410 01ac 00000000 		.word	0
 4411 01b0 00000000 		.word	.LANCHOR64
 4412 01b4 6F12033D 		.word	1023611503
 4413 01b8 00000000 		.word	.LANCHOR65
 4414 01bc 00000000 		.word	.LANCHOR66
 4415 01c0 00000000 		.word	.LANCHOR67
 4416 01c4 0AD7A33B 		.word	1000593162
 4417 01c8 0000FA43 		.word	1140457472
 4418 01cc 00000000 		.word	.LANCHOR68
 4419 01d0 00000000 		.word	.LANCHOR15
 4420 01d4 00000000 		.word	.LANCHOR16
 4421              	.LBE1307:
 4422              	.LBE1310:
 4423              	.LBE1335:
 4424              	.LBE1340:
 4425              		.cfi_endproc
 4426              	.LFE4323:
 4428              		.section	.text._Z20Update_crossfeedbackv,"ax",%progbits
 4429              		.align	1
 4430              		.p2align 2,,3
 4431              		.global	_Z20Update_crossfeedbackv
 4432              		.syntax unified
 4433              		.thumb
 4434              		.thumb_func
 4435              		.fpu fpv5-d16
 4437              	_Z20Update_crossfeedbackv:
 4438              	.LFB4324:
1425:Veno-Echo.cpp ****     static bool lastShift{};
 4439              		.loc 20 1425 1 is_stmt 1 view -0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 190


 4440              		.cfi_startproc
 4441              		@ args = 0, pretend = 0, frame = 0
 4442              		@ frame_needed = 0, uses_anonymous_args = 0
1426:Veno-Echo.cpp ****     static bool crossfeedback_pickup{};
 4443              		.loc 20 1426 5 view .LVU1202
1427:Veno-Echo.cpp ****     static bool modRate_pickup{};
 4444              		.loc 20 1427 5 view .LVU1203
1428:Veno-Echo.cpp **** 
 4445              		.loc 20 1428 5 view .LVU1204
1430:Veno-Echo.cpp **** 
 4446              		.loc 20 1430 5 view .LVU1205
1433:Veno-Echo.cpp **** 
 4447              		.loc 20 1433 5 view .LVU1206
1433:Veno-Echo.cpp **** 
 4448              		.loc 20 1433 47 is_stmt 0 view .LVU1207
 4449 0000 0022     		movs	r2, #0
 4450 0002 0721     		movs	r1, #7
 4451 0004 4548     		ldr	r0, .L270
1425:Veno-Echo.cpp ****     static bool lastShift{};
 4452              		.loc 20 1425 1 view .LVU1208
 4453 0006 10B5     		push	{r4, lr}
 4454              		.cfi_def_cfa_offset 8
 4455              		.cfi_offset 4, -8
 4456              		.cfi_offset 14, -4
 4457 0008 2DED028B 		vpush.64	{d8}
 4458              		.cfi_def_cfa_offset 16
 4459              		.cfi_offset 80, -16
 4460              		.cfi_offset 81, -12
1433:Veno-Echo.cpp **** 
 4461              		.loc 20 1433 47 view .LVU1209
 4462 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 4463              	.LVL220:
 4464              	.LBB1341:
1435:Veno-Echo.cpp ****     {   
 4465              		.loc 20 1435 9 view .LVU1210
 4466 0010 434B     		ldr	r3, .L270+4
 4467              	.LBE1341:
1433:Veno-Echo.cpp **** 
 4468              		.loc 20 1433 47 view .LVU1211
 4469 0012 B0EE408A 		vmov.f32	s16, s0
 4470              	.LVL221:
1435:Veno-Echo.cpp ****     {   
 4471              		.loc 20 1435 5 is_stmt 1 view .LVU1212
 4472              	.LBB1379:
 4473              	.LBB1342:
1439:Veno-Echo.cpp ****         {
 4474              		.loc 20 1439 19 is_stmt 0 view .LVU1213
 4475 0016 434A     		ldr	r2, .L270+8
 4476              	.LBE1342:
1435:Veno-Echo.cpp ****     {   
 4477              		.loc 20 1435 5 view .LVU1214
 4478 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4479 001a FBB9     		cbnz	r3, .L256
 4480              	.LBB1351:
1437:Veno-Echo.cpp ****         //update pickup
 4481              		.loc 20 1437 9 is_stmt 1 view .LVU1215
1439:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 191


 4482              		.loc 20 1439 9 view .LVU1216
 4483 001c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4484 001e 49B3     		cbz	r1, .L257
1441:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
 4485              		.loc 20 1441 13 view .LVU1217
1442:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4486              		.loc 20 1442 34 is_stmt 0 view .LVU1218
 4487 0020 4148     		ldr	r0, .L270+12
1443:Veno-Echo.cpp ****         }
 4488              		.loc 20 1443 31 view .LVU1219
 4489 0022 4249     		ldr	r1, .L270+16
1441:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
 4490              		.loc 20 1441 23 view .LVU1220
 4491 0024 1370     		strb	r3, [r2]
1442:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4492              		.loc 20 1442 13 is_stmt 1 view .LVU1221
1442:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4493              		.loc 20 1442 34 is_stmt 0 view .LVU1222
 4494 0026 0370     		strb	r3, [r0]
1443:Veno-Echo.cpp ****         }
 4495              		.loc 20 1443 13 is_stmt 1 view .LVU1223
1443:Veno-Echo.cpp ****         }
 4496              		.loc 20 1443 31 is_stmt 0 view .LVU1224
 4497 0028 81ED000A 		vstr.32	s0, [r1]
 4498              	.L258:
1456:Veno-Echo.cpp **** 
 4499              		.loc 20 1456 9 is_stmt 1 view .LVU1225
 4500              	.LVL222:
1458:Veno-Echo.cpp ****         {
 4501              		.loc 20 1458 9 view .LVU1226
1466:Veno-Echo.cpp ****         }
 4502              		.loc 20 1466 13 view .LVU1227
1466:Veno-Echo.cpp ****         }
 4503              		.loc 20 1466 40 is_stmt 0 view .LVU1228
 4504 002c 404B     		ldr	r3, .L270+20
 4505 002e B7EE001A 		vmov.f32	s2, #1.0e+0
 4506 0032 0020     		movs	r0, #0
 4507 0034 DFED3F0A 		vldr.32	s1, .L270+24
 4508 0038 93ED000A 		vldr.32	s0, [r3]
 4509              	.LVL223:
1466:Veno-Echo.cpp ****         }
 4510              		.loc 20 1466 40 view .LVU1229
 4511 003c FFF7FEFF 		bl	_Z5scalefff9CurveType
 4512              	.LVL224:
 4513              	.L266:
1469:Veno-Echo.cpp ****     }
 4514              		.loc 20 1469 9 is_stmt 1 view .LVU1230
 4515              	.LBB1343:
 4516              	.LBI1343:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4517              		.loc 25 135 13 view .LVU1231
 4518              	.LBB1344:
 4519              		.loc 25 137 5 view .LVU1232
 4520              		.loc 25 137 9 is_stmt 0 view .LVU1233
 4521 0040 3D4B     		ldr	r3, .L270+28
 4522 0042 9FED3E7A 		vldr.32	s14, .L270+32
 4523 0046 D3ED007A 		vldr.32	s15, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 192


 4524              		.loc 25 137 24 view .LVU1234
 4525 004a 30EE670A 		vsub.f32	s0, s0, s15
 4526              	.LVL225:
 4527              		.loc 25 137 24 view .LVU1235
 4528              	.LBE1344:
 4529              	.LBE1343:
 4530              	.LBE1351:
 4531              	.LBE1379:
1501:Veno-Echo.cpp **** 
 4532              		.loc 20 1501 1 view .LVU1236
 4533 004e BDEC028B 		vldm	sp!, {d8}
 4534              		.cfi_remember_state
 4535              		.cfi_restore 80
 4536              		.cfi_restore 81
 4537              		.cfi_def_cfa_offset 8
 4538              	.LVL226:
 4539              	.LBB1380:
 4540              	.LBB1352:
 4541              	.LBB1346:
 4542              	.LBB1345:
 4543              		.loc 25 137 9 view .LVU1237
 4544 0052 E0EE077A 		vfma.f32	s15, s0, s14
 4545 0056 C3ED007A 		vstr.32	s15, [r3]
 4546              	.LBE1345:
 4547              	.LBE1346:
 4548              	.LBE1352:
 4549              	.LBE1380:
1501:Veno-Echo.cpp **** 
 4550              		.loc 20 1501 1 view .LVU1238
 4551 005a 10BD     		pop	{r4, pc}
 4552              	.LVL227:
 4553              	.L256:
 4554              		.cfi_restore_state
 4555              	.LBB1381:
 4556              	.LBB1353:
1473:Veno-Echo.cpp **** 
 4557              		.loc 20 1473 9 is_stmt 1 view .LVU1239
1475:Veno-Echo.cpp ****         {
 4558              		.loc 20 1475 9 view .LVU1240
 4559 005c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4560 005e 4BBB     		cbnz	r3, .L262
1477:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4561              		.loc 20 1477 13 view .LVU1241
1477:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4562              		.loc 20 1477 23 is_stmt 0 view .LVU1242
 4563 0060 0124     		movs	r4, #1
1478:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4564              		.loc 20 1478 28 view .LVU1243
 4565 0062 3748     		ldr	r0, .L270+36
1479:Veno-Echo.cpp ****         }
 4566              		.loc 20 1479 25 view .LVU1244
 4567 0064 3749     		ldr	r1, .L270+40
1477:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4568              		.loc 20 1477 23 view .LVU1245
 4569 0066 1470     		strb	r4, [r2]
1478:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4570              		.loc 20 1478 13 is_stmt 1 view .LVU1246
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 193


1478:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4571              		.loc 20 1478 28 is_stmt 0 view .LVU1247
 4572 0068 0370     		strb	r3, [r0]
1479:Veno-Echo.cpp ****         }
 4573              		.loc 20 1479 13 is_stmt 1 view .LVU1248
1479:Veno-Echo.cpp ****         }
 4574              		.loc 20 1479 25 is_stmt 0 view .LVU1249
 4575 006a 81ED000A 		vstr.32	s0, [r1]
 4576              	.L255:
1479:Veno-Echo.cpp ****         }
 4577              		.loc 20 1479 25 view .LVU1250
 4578              	.LBE1353:
 4579              	.LBE1381:
1501:Veno-Echo.cpp **** 
 4580              		.loc 20 1501 1 view .LVU1251
 4581 006e BDEC028B 		vldm	sp!, {d8}
 4582              		.cfi_remember_state
 4583              		.cfi_restore 80
 4584              		.cfi_restore 81
 4585              		.cfi_def_cfa_offset 8
 4586 0072 10BD     		pop	{r4, pc}
 4587              	.L257:
 4588              		.cfi_restore_state
 4589              	.LBB1382:
 4590              	.LBB1377:
1448:Veno-Echo.cpp ****             {
 4591              		.loc 20 1448 13 is_stmt 1 view .LVU1252
1448:Veno-Echo.cpp ****             {
 4592              		.loc 20 1448 16 is_stmt 0 view .LVU1253
 4593 0074 2C4B     		ldr	r3, .L270+12
1448:Veno-Echo.cpp ****             {
 4594              		.loc 20 1448 13 view .LVU1254
 4595 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4596 0078 7AB9     		cbnz	r2, .L259
1450:Veno-Echo.cpp ****                 {
 4597              		.loc 20 1450 17 is_stmt 1 view .LVU1255
 4598              	.LVL228:
 4599              	.LBB1347:
 4600              	.LBI1347:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4601              		.loc 21 75 3 view .LVU1256
 4602              	.LBB1348:
 4603              		.loc 21 76 5 view .LVU1257
 4604              		.loc 21 76 5 is_stmt 0 view .LVU1258
 4605              	.LBE1348:
 4606              	.LBE1347:
1450:Veno-Echo.cpp ****                 {
 4607              		.loc 20 1450 23 view .LVU1259
 4608 007a 2C4A     		ldr	r2, .L270+16
1450:Veno-Echo.cpp ****                 {
 4609              		.loc 20 1450 17 view .LVU1260
 4610 007c 9FED327A 		vldr.32	s14, .L270+44
1450:Veno-Echo.cpp ****                 {
 4611              		.loc 20 1450 23 view .LVU1261
 4612 0080 D2ED007A 		vldr.32	s15, [r2]
 4613 0084 70EE677A 		vsub.f32	s15, s0, s15
 4614              	.LBB1350:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 194


 4615              	.LBB1349:
 4616              		.loc 21 76 31 view .LVU1262
 4617 0088 F0EEE77A 		vabs.f32	s15, s15
 4618              	.LBE1349:
 4619              	.LBE1350:
1450:Veno-Echo.cpp ****                 {
 4620              		.loc 20 1450 17 view .LVU1263
 4621 008c F4EEC77A 		vcmpe.f32	s15, s14
 4622 0090 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4623 0094 CADD     		ble	.L258
1452:Veno-Echo.cpp ****                 }
 4624              		.loc 20 1452 21 is_stmt 1 view .LVU1264
1452:Veno-Echo.cpp ****                 }
 4625              		.loc 20 1452 42 is_stmt 0 view .LVU1265
 4626 0096 0122     		movs	r2, #1
 4627 0098 1A70     		strb	r2, [r3]
 4628              	.L259:
1456:Veno-Echo.cpp **** 
 4629              		.loc 20 1456 9 is_stmt 1 view .LVU1266
 4630              	.LVL229:
1458:Veno-Echo.cpp ****         {
 4631              		.loc 20 1458 9 view .LVU1267
1460:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4632              		.loc 20 1460 13 view .LVU1268
1460:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4633              		.loc 20 1460 40 is_stmt 0 view .LVU1269
 4634 009a B7EE001A 		vmov.f32	s2, #1.0e+0
 4635 009e 0020     		movs	r0, #0
 4636 00a0 B0EE480A 		vmov.f32	s0, s16
 4637              	.LVL230:
1460:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4638              		.loc 20 1460 40 view .LVU1270
 4639 00a4 DFED230A 		vldr.32	s1, .L270+24
 4640 00a8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4641              	.LVL231:
1461:Veno-Echo.cpp ****         }
 4642              		.loc 20 1461 32 view .LVU1271
 4643 00ac 204B     		ldr	r3, .L270+20
 4644              	.LVL232:
1461:Veno-Echo.cpp ****         }
 4645              		.loc 20 1461 13 is_stmt 1 view .LVU1272
1461:Veno-Echo.cpp ****         }
 4646              		.loc 20 1461 32 is_stmt 0 view .LVU1273
 4647 00ae 83ED008A 		vstr.32	s16, [r3]
 4648 00b2 C5E7     		b	.L266
 4649              	.LVL233:
 4650              	.L262:
1461:Veno-Echo.cpp ****         }
 4651              		.loc 20 1461 32 view .LVU1274
 4652              	.LBE1377:
 4653              	.LBB1378:
1484:Veno-Echo.cpp ****             {
 4654              		.loc 20 1484 13 is_stmt 1 view .LVU1275
1484:Veno-Echo.cpp ****             {
 4655              		.loc 20 1484 16 is_stmt 0 view .LVU1276
 4656 00b4 224B     		ldr	r3, .L270+36
1484:Veno-Echo.cpp ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 195


 4657              		.loc 20 1484 13 view .LVU1277
 4658 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4659 00b8 7AB9     		cbnz	r2, .L264
1486:Veno-Echo.cpp ****                 {
 4660              		.loc 20 1486 17 is_stmt 1 view .LVU1278
 4661              	.LVL234:
 4662              	.LBB1354:
 4663              	.LBI1354:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4664              		.loc 21 75 3 view .LVU1279
 4665              	.LBB1355:
 4666              		.loc 21 76 5 view .LVU1280
 4667              		.loc 21 76 5 is_stmt 0 view .LVU1281
 4668              	.LBE1355:
 4669              	.LBE1354:
1486:Veno-Echo.cpp ****                 {
 4670              		.loc 20 1486 23 view .LVU1282
 4671 00ba 224A     		ldr	r2, .L270+40
1486:Veno-Echo.cpp ****                 {
 4672              		.loc 20 1486 17 view .LVU1283
 4673 00bc 9FED227A 		vldr.32	s14, .L270+44
1486:Veno-Echo.cpp ****                 {
 4674              		.loc 20 1486 23 view .LVU1284
 4675 00c0 D2ED007A 		vldr.32	s15, [r2]
 4676 00c4 70EE677A 		vsub.f32	s15, s0, s15
 4677              	.LBB1357:
 4678              	.LBB1356:
 4679              		.loc 21 76 31 view .LVU1285
 4680 00c8 F0EEE77A 		vabs.f32	s15, s15
 4681              	.LBE1356:
 4682              	.LBE1357:
1486:Veno-Echo.cpp ****                 {
 4683              		.loc 20 1486 17 view .LVU1286
 4684 00cc F4EEC77A 		vcmpe.f32	s15, s14
 4685 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4686 00d4 CBDD     		ble	.L255
1488:Veno-Echo.cpp ****                 }
 4687              		.loc 20 1488 21 is_stmt 1 view .LVU1287
1488:Veno-Echo.cpp ****                 }
 4688              		.loc 20 1488 36 is_stmt 0 view .LVU1288
 4689 00d6 0122     		movs	r2, #1
 4690 00d8 1A70     		strb	r2, [r3]
 4691              	.L264:
1493:Veno-Echo.cpp ****         {
 4692              		.loc 20 1493 9 is_stmt 1 view .LVU1289
 4693              	.LBB1358:
1495:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4694              		.loc 20 1495 13 view .LVU1290
 4695              	.LBB1359:
 4696              	.LBB1360:
  17:../DaisySP/Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:../DaisySP/Source/Synthesis/oscillator.h ****     */
  19:../DaisySP/Source/Synthesis/oscillator.h ****     enum
  20:../DaisySP/Source/Synthesis/oscillator.h ****     {
  21:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SIN,
  22:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_TRI,
  23:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SAW,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 196


  24:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  25:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  26:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  27:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  28:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  29:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_LAST,
  30:../DaisySP/Source/Synthesis/oscillator.h ****     };
  31:../DaisySP/Source/Synthesis/oscillator.h **** 
  32:../DaisySP/Source/Synthesis/oscillator.h **** 
  33:../DaisySP/Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  34:../DaisySP/Source/Synthesis/oscillator.h **** 
  35:../DaisySP/Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:../DaisySP/Source/Synthesis/oscillator.h **** 
  37:../DaisySP/Source/Synthesis/oscillator.h ****         Defaults:
  38:../DaisySP/Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
  39:../DaisySP/Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  40:../DaisySP/Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  41:../DaisySP/Source/Synthesis/oscillator.h ****     */
  42:../DaisySP/Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  43:../DaisySP/Source/Synthesis/oscillator.h ****     {
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
  45:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  46:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  47:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
  49:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
  52:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
  53:../DaisySP/Source/Synthesis/oscillator.h ****     }
  54:../DaisySP/Source/Synthesis/oscillator.h **** 
  55:../DaisySP/Source/Synthesis/oscillator.h **** 
  56:../DaisySP/Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:../DaisySP/Source/Synthesis/oscillator.h ****     */
  58:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
  59:../DaisySP/Source/Synthesis/oscillator.h ****     {
  60:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = f;
 4697              		.loc 8 60 20 is_stmt 0 view .LVU1291
 4698 00da 1C4C     		ldr	r4, .L270+48
 4699              	.LBE1360:
 4700              	.LBE1359:
1495:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4701              		.loc 20 1495 32 view .LVU1292
 4702 00dc B0EE480A 		vmov.f32	s0, s16
 4703              	.LVL235:
1495:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4704              		.loc 20 1495 32 view .LVU1293
 4705 00e0 B2EE041A 		vmov.f32	s2, #1.0e+1
 4706 00e4 0020     		movs	r0, #0
 4707 00e6 DFED1A0A 		vldr.32	s1, .L270+52
 4708 00ea FFF7FEFF 		bl	_Z5scalefff9CurveType
 4709              	.LVL236:
 4710              	.LBB1364:
 4711              	.LBB1361:
  61:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4712              		.loc 8 61 34 view .LVU1294
 4713 00ee 2046     		mov	r0, r4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 197


 4714              	.LBE1361:
 4715              	.LBE1364:
1495:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4716              		.loc 20 1495 32 view .LVU1295
 4717 00f0 B0EE408A 		vmov.f32	s16, s0
 4718              	.LVL237:
1496:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
 4719              		.loc 20 1496 13 is_stmt 1 view .LVU1296
 4720              	.LBB1365:
 4721              	.LBI1359:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 4722              		.loc 8 58 17 view .LVU1297
 4723              	.LBB1362:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4724              		.loc 8 60 9 view .LVU1298
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4725              		.loc 8 60 20 is_stmt 0 view .LVU1299
 4726 00f4 84ED020A 		vstr.32	s0, [r4, #8]
 4727              		.loc 8 61 9 is_stmt 1 view .LVU1300
 4728              		.loc 8 61 34 is_stmt 0 view .LVU1301
 4729 00f8 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 4730              	.LVL238:
 4731              		.loc 8 61 34 view .LVU1302
 4732              	.LBE1362:
 4733              	.LBE1365:
1497:Veno-Echo.cpp ****             save_flag = true;
 4734              		.loc 20 1497 33 view .LVU1303
 4735 00fc 1549     		ldr	r1, .L270+56
 4736              	.LBB1366:
 4737              	.LBB1367:
 4738              	.LBB1368:
 4739              	.LBB1369:
 4740              	.LBB1370:
 4741              		.loc 22 397 18 view .LVU1304
 4742 00fe 164B     		ldr	r3, .L270+60
 4743 0100 0122     		movs	r2, #1
 4744              	.LBE1370:
 4745              	.LBE1369:
 4746              	.LBE1368:
 4747              	.LBE1367:
 4748              	.LBE1366:
1497:Veno-Echo.cpp ****             save_flag = true;
 4749              		.loc 20 1497 33 view .LVU1305
 4750 0102 81ED038A 		vstr.32	s16, [r1, #12]
 4751              	.LBB1375:
 4752              	.LBB1363:
 4753              		.loc 8 61 20 view .LVU1306
 4754 0106 84ED060A 		vstr.32	s0, [r4, #24]
 4755              	.LVL239:
 4756              		.loc 8 61 20 view .LVU1307
 4757              	.LBE1363:
 4758              	.LBE1375:
1497:Veno-Echo.cpp ****             save_flag = true;
 4759              		.loc 20 1497 13 is_stmt 1 view .LVU1308
1498:Veno-Echo.cpp ****         }
 4760              		.loc 20 1498 13 view .LVU1309
 4761              	.LBB1376:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 198


 4762              	.LBI1366:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 4763              		.loc 23 80 5 view .LVU1310
 4764              	.LBB1374:
 4765              		.loc 23 81 7 view .LVU1311
 4766              	.LBB1373:
 4767              	.LBI1368:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 4768              		.loc 22 288 7 view .LVU1312
 4769              	.LBB1372:
 4770              	.LBI1369:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 4771              		.loc 22 390 7 view .LVU1313
 4772              	.LBB1371:
 4773              		.loc 22 397 18 is_stmt 0 view .LVU1314
 4774 010a BFF35B8F 		dmb	ish
 4775 010e 1A70     		strb	r2, [r3]
 4776 0110 BFF35B8F 		dmb	ish
 4777              	.LVL240:
 4778              		.loc 22 397 18 view .LVU1315
 4779              	.LBE1371:
 4780              	.LBE1372:
 4781              	.LBE1373:
 4782              	.LBE1374:
 4783              	.LBE1376:
 4784              	.LBE1358:
 4785              	.LBE1378:
 4786              	.LBE1382:
1501:Veno-Echo.cpp **** 
 4787              		.loc 20 1501 1 view .LVU1316
 4788 0114 BDEC028B 		vldm	sp!, {d8}
 4789              		.cfi_restore 80
 4790              		.cfi_restore 81
 4791              		.cfi_def_cfa_offset 8
 4792              	.LVL241:
1501:Veno-Echo.cpp **** 
 4793              		.loc 20 1501 1 view .LVU1317
 4794 0118 10BD     		pop	{r4, pc}
 4795              	.L271:
 4796 011a 00BF     		.align	2
 4797              	.L270:
 4798 011c 18000000 		.word	.LANCHOR4+24
 4799 0120 00000000 		.word	.LANCHOR7
 4800 0124 00000000 		.word	.LANCHOR69
 4801 0128 00000000 		.word	.LANCHOR70
 4802 012c 00000000 		.word	.LANCHOR71
 4803 0130 00000000 		.word	.LANCHOR75
 4804 0134 00000000 		.word	0
 4805 0138 00000000 		.word	.LANCHOR72
 4806 013c 6F12033D 		.word	1023611503
 4807 0140 00000000 		.word	.LANCHOR73
 4808 0144 00000000 		.word	.LANCHOR74
 4809 0148 0AD7A33B 		.word	1000593162
 4810 014c 00000000 		.word	.LANCHOR76
 4811 0150 CDCCCC3D 		.word	1036831949
 4812 0154 00000000 		.word	.LANCHOR15
 4813 0158 00000000 		.word	.LANCHOR16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 199


 4814              		.cfi_endproc
 4815              	.LFE4324:
 4817              		.section	.text._Z18Update_filterXfadev,"ax",%progbits
 4818              		.align	1
 4819              		.p2align 2,,3
 4820              		.global	_Z18Update_filterXfadev
 4821              		.syntax unified
 4822              		.thumb
 4823              		.thumb_func
 4824              		.fpu fpv5-d16
 4826              	_Z18Update_filterXfadev:
 4827              	.LFB4325:
1504:Veno-Echo.cpp ****     static bool lastShift{};
 4828              		.loc 20 1504 1 is_stmt 1 view -0
 4829              		.cfi_startproc
 4830              		@ args = 0, pretend = 0, frame = 0
 4831              		@ frame_needed = 0, uses_anonymous_args = 0
1505:Veno-Echo.cpp ****     static bool filterXfade_pickup{};
 4832              		.loc 20 1505 5 view .LVU1319
1506:Veno-Echo.cpp ****     static bool PostFilters_pickup{};
 4833              		.loc 20 1506 5 view .LVU1320
1507:Veno-Echo.cpp **** 
 4834              		.loc 20 1507 5 view .LVU1321
1509:Veno-Echo.cpp **** 
 4835              		.loc 20 1509 5 view .LVU1322
1512:Veno-Echo.cpp **** 
 4836              		.loc 20 1512 5 view .LVU1323
1512:Veno-Echo.cpp **** 
 4837              		.loc 20 1512 45 is_stmt 0 view .LVU1324
 4838 0000 0322     		movs	r2, #3
 4839 0002 0721     		movs	r1, #7
 4840 0004 4648     		ldr	r0, .L294
1504:Veno-Echo.cpp ****     static bool lastShift{};
 4841              		.loc 20 1504 1 view .LVU1325
 4842 0006 10B5     		push	{r4, lr}
 4843              		.cfi_def_cfa_offset 8
 4844              		.cfi_offset 4, -8
 4845              		.cfi_offset 14, -4
 4846 0008 2DED028B 		vpush.64	{d8}
 4847              		.cfi_def_cfa_offset 16
 4848              		.cfi_offset 80, -16
 4849              		.cfi_offset 81, -12
1512:Veno-Echo.cpp **** 
 4850              		.loc 20 1512 45 view .LVU1326
 4851 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 4852              	.LVL242:
 4853              	.LBB1383:
1514:Veno-Echo.cpp ****     {   
 4854              		.loc 20 1514 9 view .LVU1327
 4855 0010 444B     		ldr	r3, .L294+4
 4856              	.LBE1383:
1512:Veno-Echo.cpp **** 
 4857              		.loc 20 1512 45 view .LVU1328
 4858 0012 B0EE408A 		vmov.f32	s16, s0
 4859              	.LVL243:
1514:Veno-Echo.cpp ****     {   
 4860              		.loc 20 1514 5 is_stmt 1 view .LVU1329
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 200


 4861              	.LBB1413:
 4862              	.LBB1384:
1518:Veno-Echo.cpp ****         {
 4863              		.loc 20 1518 19 is_stmt 0 view .LVU1330
 4864 0016 444A     		ldr	r2, .L294+8
 4865              	.LBE1384:
1514:Veno-Echo.cpp ****     {   
 4866              		.loc 20 1514 5 view .LVU1331
 4867 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4868 001a FBB9     		cbnz	r3, .L273
 4869              	.LBB1393:
1516:Veno-Echo.cpp ****         //update pickup
 4870              		.loc 20 1516 9 is_stmt 1 view .LVU1332
1518:Veno-Echo.cpp ****         {
 4871              		.loc 20 1518 9 view .LVU1333
 4872 001c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4873 001e 49B3     		cbz	r1, .L274
1520:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
 4874              		.loc 20 1520 13 view .LVU1334
1521:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4875              		.loc 20 1521 32 is_stmt 0 view .LVU1335
 4876 0020 4248     		ldr	r0, .L294+12
1522:Veno-Echo.cpp ****         }
 4877              		.loc 20 1522 29 view .LVU1336
 4878 0022 4349     		ldr	r1, .L294+16
1520:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
 4879              		.loc 20 1520 23 view .LVU1337
 4880 0024 1370     		strb	r3, [r2]
1521:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4881              		.loc 20 1521 13 is_stmt 1 view .LVU1338
1521:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4882              		.loc 20 1521 32 is_stmt 0 view .LVU1339
 4883 0026 0370     		strb	r3, [r0]
1522:Veno-Echo.cpp ****         }
 4884              		.loc 20 1522 13 is_stmt 1 view .LVU1340
1522:Veno-Echo.cpp ****         }
 4885              		.loc 20 1522 29 is_stmt 0 view .LVU1341
 4886 0028 81ED000A 		vstr.32	s0, [r1]
 4887              	.L275:
1536:Veno-Echo.cpp **** 
 4888              		.loc 20 1536 9 is_stmt 1 view .LVU1342
 4889              	.LVL244:
1538:Veno-Echo.cpp ****         {
 4890              		.loc 20 1538 9 view .LVU1343
1546:Veno-Echo.cpp ****         }
 4891              		.loc 20 1546 13 view .LVU1344
1546:Veno-Echo.cpp ****         }
 4892              		.loc 20 1546 38 is_stmt 0 view .LVU1345
 4893 002c 414B     		ldr	r3, .L294+20
 4894 002e B7EE001A 		vmov.f32	s2, #1.0e+0
 4895 0032 0120     		movs	r0, #1
 4896 0034 DFED400A 		vldr.32	s1, .L294+24
 4897 0038 93ED000A 		vldr.32	s0, [r3]
 4898              	.LVL245:
1546:Veno-Echo.cpp ****         }
 4899              		.loc 20 1546 38 view .LVU1346
 4900 003c FFF7FEFF 		bl	_Z5scalefff9CurveType
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 201


 4901              	.LVL246:
 4902              	.L285:
1549:Veno-Echo.cpp ****     }
 4903              		.loc 20 1549 9 is_stmt 1 view .LVU1347
 4904              	.LBB1385:
 4905              	.LBI1385:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4906              		.loc 25 135 13 view .LVU1348
 4907              	.LBB1386:
 4908              		.loc 25 137 5 view .LVU1349
 4909              		.loc 25 137 9 is_stmt 0 view .LVU1350
 4910 0040 3E4B     		ldr	r3, .L294+28
 4911 0042 9FED3F7A 		vldr.32	s14, .L294+32
 4912 0046 D3ED007A 		vldr.32	s15, [r3]
 4913              		.loc 25 137 24 view .LVU1351
 4914 004a 30EE670A 		vsub.f32	s0, s0, s15
 4915              	.LVL247:
 4916              		.loc 25 137 24 view .LVU1352
 4917              	.LBE1386:
 4918              	.LBE1385:
 4919              	.LBE1393:
 4920              	.LBE1413:
1592:Veno-Echo.cpp **** 
 4921              		.loc 20 1592 1 view .LVU1353
 4922 004e BDEC028B 		vldm	sp!, {d8}
 4923              		.cfi_remember_state
 4924              		.cfi_restore 80
 4925              		.cfi_restore 81
 4926              		.cfi_def_cfa_offset 8
 4927              	.LVL248:
 4928              	.LBB1414:
 4929              	.LBB1394:
 4930              	.LBB1388:
 4931              	.LBB1387:
 4932              		.loc 25 137 9 view .LVU1354
 4933 0052 E0EE077A 		vfma.f32	s15, s0, s14
 4934 0056 C3ED007A 		vstr.32	s15, [r3]
 4935              	.LBE1387:
 4936              	.LBE1388:
 4937              	.LBE1394:
 4938              	.LBE1414:
1592:Veno-Echo.cpp **** 
 4939              		.loc 20 1592 1 view .LVU1355
 4940 005a 10BD     		pop	{r4, pc}
 4941              	.LVL249:
 4942              	.L273:
 4943              		.cfi_restore_state
 4944              	.LBB1415:
 4945              	.LBB1395:
1554:Veno-Echo.cpp **** 
 4946              		.loc 20 1554 9 is_stmt 1 view .LVU1356
1556:Veno-Echo.cpp ****         {
 4947              		.loc 20 1556 9 view .LVU1357
 4948 005c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4949 005e 4BBB     		cbnz	r3, .L279
1558:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4950              		.loc 20 1558 13 view .LVU1358
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 202


1558:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4951              		.loc 20 1558 23 is_stmt 0 view .LVU1359
 4952 0060 0124     		movs	r4, #1
1559:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4953              		.loc 20 1559 32 view .LVU1360
 4954 0062 3848     		ldr	r0, .L294+36
1560:Veno-Echo.cpp ****         }
 4955              		.loc 20 1560 29 view .LVU1361
 4956 0064 3849     		ldr	r1, .L294+40
1558:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4957              		.loc 20 1558 23 view .LVU1362
 4958 0066 1470     		strb	r4, [r2]
1559:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4959              		.loc 20 1559 13 is_stmt 1 view .LVU1363
1559:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4960              		.loc 20 1559 32 is_stmt 0 view .LVU1364
 4961 0068 0370     		strb	r3, [r0]
1560:Veno-Echo.cpp ****         }
 4962              		.loc 20 1560 13 is_stmt 1 view .LVU1365
1560:Veno-Echo.cpp ****         }
 4963              		.loc 20 1560 29 is_stmt 0 view .LVU1366
 4964 006a 81ED000A 		vstr.32	s0, [r1]
 4965              	.L272:
1560:Veno-Echo.cpp ****         }
 4966              		.loc 20 1560 29 view .LVU1367
 4967              	.LBE1395:
 4968              	.LBE1415:
1592:Veno-Echo.cpp **** 
 4969              		.loc 20 1592 1 view .LVU1368
 4970 006e BDEC028B 		vldm	sp!, {d8}
 4971              		.cfi_remember_state
 4972              		.cfi_restore 80
 4973              		.cfi_restore 81
 4974              		.cfi_def_cfa_offset 8
 4975 0072 10BD     		pop	{r4, pc}
 4976              	.L274:
 4977              		.cfi_restore_state
 4978              	.LBB1416:
 4979              	.LBB1410:
1527:Veno-Echo.cpp ****             {
 4980              		.loc 20 1527 13 is_stmt 1 view .LVU1369
1527:Veno-Echo.cpp ****             {
 4981              		.loc 20 1527 16 is_stmt 0 view .LVU1370
 4982 0074 2D4B     		ldr	r3, .L294+12
1527:Veno-Echo.cpp ****             {
 4983              		.loc 20 1527 13 view .LVU1371
 4984 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4985 0078 7AB9     		cbnz	r2, .L276
1529:Veno-Echo.cpp ****                 {
 4986              		.loc 20 1529 17 is_stmt 1 view .LVU1372
 4987              	.LVL250:
 4988              	.LBB1389:
 4989              	.LBI1389:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4990              		.loc 21 75 3 view .LVU1373
 4991              	.LBB1390:
 4992              		.loc 21 76 5 view .LVU1374
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 203


 4993              		.loc 21 76 5 is_stmt 0 view .LVU1375
 4994              	.LBE1390:
 4995              	.LBE1389:
1529:Veno-Echo.cpp ****                 {
 4996              		.loc 20 1529 23 view .LVU1376
 4997 007a 2D4A     		ldr	r2, .L294+16
1529:Veno-Echo.cpp ****                 {
 4998              		.loc 20 1529 17 view .LVU1377
 4999 007c 9FED337A 		vldr.32	s14, .L294+44
1529:Veno-Echo.cpp ****                 {
 5000              		.loc 20 1529 23 view .LVU1378
 5001 0080 D2ED007A 		vldr.32	s15, [r2]
 5002 0084 70EE677A 		vsub.f32	s15, s0, s15
 5003              	.LBB1392:
 5004              	.LBB1391:
 5005              		.loc 21 76 31 view .LVU1379
 5006 0088 F0EEE77A 		vabs.f32	s15, s15
 5007              	.LBE1391:
 5008              	.LBE1392:
1529:Veno-Echo.cpp ****                 {
 5009              		.loc 20 1529 17 view .LVU1380
 5010 008c F4EEC77A 		vcmpe.f32	s15, s14
 5011 0090 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5012 0094 CADD     		ble	.L275
1531:Veno-Echo.cpp ****                 }
 5013              		.loc 20 1531 21 is_stmt 1 view .LVU1381
1531:Veno-Echo.cpp ****                 }
 5014              		.loc 20 1531 40 is_stmt 0 view .LVU1382
 5015 0096 0122     		movs	r2, #1
 5016 0098 1A70     		strb	r2, [r3]
 5017              	.L276:
1536:Veno-Echo.cpp **** 
 5018              		.loc 20 1536 9 is_stmt 1 view .LVU1383
 5019              	.LVL251:
1538:Veno-Echo.cpp ****         {
 5020              		.loc 20 1538 9 view .LVU1384
1540:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 5021              		.loc 20 1540 13 view .LVU1385
1540:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 5022              		.loc 20 1540 38 is_stmt 0 view .LVU1386
 5023 009a B7EE001A 		vmov.f32	s2, #1.0e+0
 5024 009e 0120     		movs	r0, #1
 5025 00a0 B0EE480A 		vmov.f32	s0, s16
 5026              	.LVL252:
1540:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 5027              		.loc 20 1540 38 view .LVU1387
 5028 00a4 DFED240A 		vldr.32	s1, .L294+24
 5029 00a8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 5030              	.LVL253:
1541:Veno-Echo.cpp ****         }
 5031              		.loc 20 1541 30 view .LVU1388
 5032 00ac 214B     		ldr	r3, .L294+20
 5033              	.LVL254:
1541:Veno-Echo.cpp ****         }
 5034              		.loc 20 1541 13 is_stmt 1 view .LVU1389
1541:Veno-Echo.cpp ****         }
 5035              		.loc 20 1541 30 is_stmt 0 view .LVU1390
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 204


 5036 00ae 83ED008A 		vstr.32	s16, [r3]
 5037 00b2 C5E7     		b	.L285
 5038              	.LVL255:
 5039              	.L279:
1541:Veno-Echo.cpp ****         }
 5040              		.loc 20 1541 30 view .LVU1391
 5041              	.LBE1410:
 5042              	.LBB1411:
1565:Veno-Echo.cpp ****             {
 5043              		.loc 20 1565 13 is_stmt 1 view .LVU1392
1565:Veno-Echo.cpp ****             {
 5044              		.loc 20 1565 16 is_stmt 0 view .LVU1393
 5045 00b4 234B     		ldr	r3, .L294+36
1565:Veno-Echo.cpp ****             {
 5046              		.loc 20 1565 13 view .LVU1394
 5047 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5048 00b8 7AB9     		cbnz	r2, .L281
1567:Veno-Echo.cpp ****                 {
 5049              		.loc 20 1567 17 is_stmt 1 view .LVU1395
 5050              	.LVL256:
 5051              	.LBB1396:
 5052              	.LBI1396:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5053              		.loc 21 75 3 view .LVU1396
 5054              	.LBB1397:
 5055              		.loc 21 76 5 view .LVU1397
 5056              		.loc 21 76 5 is_stmt 0 view .LVU1398
 5057              	.LBE1397:
 5058              	.LBE1396:
1567:Veno-Echo.cpp ****                 {
 5059              		.loc 20 1567 23 view .LVU1399
 5060 00ba 234A     		ldr	r2, .L294+40
1567:Veno-Echo.cpp ****                 {
 5061              		.loc 20 1567 17 view .LVU1400
 5062 00bc 9FED237A 		vldr.32	s14, .L294+44
1567:Veno-Echo.cpp ****                 {
 5063              		.loc 20 1567 23 view .LVU1401
 5064 00c0 D2ED007A 		vldr.32	s15, [r2]
 5065 00c4 70EE677A 		vsub.f32	s15, s0, s15
 5066              	.LBB1399:
 5067              	.LBB1398:
 5068              		.loc 21 76 31 view .LVU1402
 5069 00c8 F0EEE77A 		vabs.f32	s15, s15
 5070              	.LBE1398:
 5071              	.LBE1399:
1567:Veno-Echo.cpp ****                 {
 5072              		.loc 20 1567 17 view .LVU1403
 5073 00cc F4EEC77A 		vcmpe.f32	s15, s14
 5074 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5075 00d4 CBDD     		ble	.L272
1569:Veno-Echo.cpp ****                 }
 5076              		.loc 20 1569 21 is_stmt 1 view .LVU1404
1569:Veno-Echo.cpp ****                 }
 5077              		.loc 20 1569 40 is_stmt 0 view .LVU1405
 5078 00d6 0122     		movs	r2, #1
 5079 00d8 1A70     		strb	r2, [r3]
 5080              	.L281:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 205


1574:Veno-Echo.cpp ****         {
 5081              		.loc 20 1574 9 is_stmt 1 view .LVU1406
1576:Veno-Echo.cpp ****             {
 5082              		.loc 20 1576 13 view .LVU1407
 5083 00da DFED1D7A 		vldr.32	s15, .L294+48
 5084 00de B4EEE78A 		vcmpe.f32	s16, s15
 5085 00e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5086 00e6 0FD5     		bpl	.L293
1578:Veno-Echo.cpp ****             }
 5087              		.loc 20 1578 17 view .LVU1408
1578:Veno-Echo.cpp ****             }
 5088              		.loc 20 1578 29 is_stmt 0 view .LVU1409
 5089 00e8 1A4B     		ldr	r3, .L294+52
 5090 00ea 0022     		movs	r2, #0
 5091 00ec 1A70     		strb	r2, [r3]
 5092              	.L283:
1588:Veno-Echo.cpp ****             save_flag = true;
 5093              		.loc 20 1588 13 is_stmt 1 view .LVU1410
1588:Veno-Echo.cpp ****             save_flag = true;
 5094              		.loc 20 1588 39 is_stmt 0 view .LVU1411
 5095 00ee 1A49     		ldr	r1, .L294+56
 5096              	.LBB1400:
 5097              	.LBB1401:
 5098              	.LBB1402:
 5099              	.LBB1403:
 5100              	.LBB1404:
 5101              		.loc 22 397 18 view .LVU1412
 5102 00f0 0122     		movs	r2, #1
 5103 00f2 1A4B     		ldr	r3, .L294+60
 5104              	.LBE1404:
 5105              	.LBE1403:
 5106              	.LBE1402:
 5107              	.LBE1401:
 5108              	.LBE1400:
1588:Veno-Echo.cpp ****             save_flag = true;
 5109              		.loc 20 1588 39 view .LVU1413
 5110 00f4 81ED078A 		vstr.32	s16, [r1, #28]
1589:Veno-Echo.cpp ****         }  
 5111              		.loc 20 1589 13 is_stmt 1 view .LVU1414
 5112              	.LVL257:
 5113              	.LBB1409:
 5114              	.LBI1400:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 5115              		.loc 23 80 5 view .LVU1415
 5116              	.LBB1408:
 5117              		.loc 23 81 7 view .LVU1416
 5118              	.LBB1407:
 5119              	.LBI1402:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 5120              		.loc 22 288 7 view .LVU1417
 5121              	.LBB1406:
 5122              	.LBI1403:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 5123              		.loc 22 390 7 view .LVU1418
 5124              	.LBB1405:
 5125              		.loc 22 397 18 is_stmt 0 view .LVU1419
 5126 00f8 BFF35B8F 		dmb	ish
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 206


 5127 00fc 1A70     		strb	r2, [r3]
 5128 00fe BFF35B8F 		dmb	ish
 5129              	.LVL258:
 5130              		.loc 22 397 18 view .LVU1420
 5131              	.LBE1405:
 5132              	.LBE1406:
 5133              	.LBE1407:
 5134              	.LBE1408:
 5135              	.LBE1409:
 5136              	.LBE1411:
 5137              	.LBE1416:
1592:Veno-Echo.cpp **** 
 5138              		.loc 20 1592 1 view .LVU1421
 5139 0102 BDEC028B 		vldm	sp!, {d8}
 5140              		.cfi_remember_state
 5141              		.cfi_restore 80
 5142              		.cfi_restore 81
 5143              		.cfi_def_cfa_offset 8
 5144 0106 10BD     		pop	{r4, pc}
 5145              	.L293:
 5146              		.cfi_restore_state
 5147              	.LBB1417:
 5148              	.LBB1412:
1580:Veno-Echo.cpp ****             {
 5149              		.loc 20 1580 18 is_stmt 1 view .LVU1422
 5150 0108 DFED157A 		vldr.32	s15, .L294+64
 5151 010c B4EEE78A 		vcmpe.f32	s16, s15
 5152 0110 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5153 0114 EBDD     		ble	.L283
1582:Veno-Echo.cpp ****             }
 5154              		.loc 20 1582 17 view .LVU1423
1582:Veno-Echo.cpp ****             }
 5155              		.loc 20 1582 29 is_stmt 0 view .LVU1424
 5156 0116 0F4B     		ldr	r3, .L294+52
 5157 0118 0122     		movs	r2, #1
 5158 011a 1A70     		strb	r2, [r3]
 5159 011c E7E7     		b	.L283
 5160              	.L295:
 5161 011e 00BF     		.align	2
 5162              	.L294:
 5163 0120 18000000 		.word	.LANCHOR4+24
 5164 0124 00000000 		.word	.LANCHOR7
 5165 0128 00000000 		.word	.LANCHOR77
 5166 012c 00000000 		.word	.LANCHOR78
 5167 0130 00000000 		.word	.LANCHOR79
 5168 0134 00000000 		.word	.LANCHOR84
 5169 0138 00000000 		.word	0
 5170 013c 00000000 		.word	.LANCHOR80
 5171 0140 6F12033D 		.word	1023611503
 5172 0144 00000000 		.word	.LANCHOR81
 5173 0148 00000000 		.word	.LANCHOR82
 5174 014c 0AD7A33B 		.word	1000593162
 5175 0150 6666E63E 		.word	1055286886
 5176 0154 00000000 		.word	.LANCHOR83
 5177 0158 00000000 		.word	.LANCHOR15
 5178 015c 00000000 		.word	.LANCHOR16
 5179 0160 CDCC0C3F 		.word	1057803469
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 207


 5180              	.LBE1412:
 5181              	.LBE1417:
 5182              		.cfi_endproc
 5183              	.LFE4325:
 5185              		.section	.text._Z8GetModCVv,"ax",%progbits
 5186              		.align	1
 5187              		.p2align 2,,3
 5188              		.global	_Z8GetModCVv
 5189              		.syntax unified
 5190              		.thumb
 5191              		.thumb_func
 5192              		.fpu fpv5-d16
 5194              	_Z8GetModCVv:
 5195              	.LFB4326:
1595:Veno-Echo.cpp ****     //get modulation CV input
 5196              		.loc 20 1595 1 is_stmt 1 view -0
 5197              		.cfi_startproc
 5198              		@ args = 0, pretend = 0, frame = 0
 5199              		@ frame_needed = 0, uses_anonymous_args = 0
1597:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 5200              		.loc 20 1597 5 view .LVU1426
1595:Veno-Echo.cpp ****     //get modulation CV input
 5201              		.loc 20 1595 1 is_stmt 0 view .LVU1427
 5202 0000 08B5     		push	{r3, lr}
 5203              		.cfi_def_cfa_offset 8
 5204              		.cfi_offset 3, -8
 5205              		.cfi_offset 14, -4
1597:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 5206              		.loc 20 1597 30 view .LVU1428
 5207 0002 0621     		movs	r1, #6
 5208 0004 0648     		ldr	r0, .L298
 5209 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 5210              	.LVL259:
 5211 000a 0020     		movs	r0, #0
 5212 000c 9FED051A 		vldr.32	s2, .L298+4
 5213 0010 DFED050A 		vldr.32	s1, .L298+8
 5214 0014 FFF7FEFF 		bl	_Z5scalefff9CurveType
 5215              	.LVL260:
1597:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 5216              		.loc 20 1597 23 view .LVU1429
 5217 0018 044B     		ldr	r3, .L298+12
 5218 001a 83ED000A 		vstr.32	s0, [r3]
1599:Veno-Echo.cpp **** 
 5219              		.loc 20 1599 1 view .LVU1430
 5220 001e 08BD     		pop	{r3, pc}
 5221              	.L299:
 5222              		.align	2
 5223              	.L298:
 5224 0020 18000000 		.word	.LANCHOR4+24
 5225 0024 00004843 		.word	1128792064
 5226 0028 000048C3 		.word	3276275712
 5227 002c 00000000 		.word	.LANCHOR85
 5228              		.cfi_endproc
 5229              	.LFE4326:
 5231              		.section	.text._Z10Update_Modv,"ax",%progbits
 5232              		.align	1
 5233              		.p2align 2,,3
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 208


 5234              		.global	_Z10Update_Modv
 5235              		.syntax unified
 5236              		.thumb
 5237              		.thumb_func
 5238              		.fpu fpv5-d16
 5240              	_Z10Update_Modv:
 5241              	.LFB4327:
1602:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 5242              		.loc 20 1602 1 is_stmt 1 view -0
 5243              		.cfi_startproc
 5244              		@ args = 0, pretend = 0, frame = 0
 5245              		@ frame_needed = 0, uses_anonymous_args = 0
1603:Veno-Echo.cpp ****     static float modulation_CV{};
 5246              		.loc 20 1603 5 view .LVU1432
1604:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
 5247              		.loc 20 1604 5 view .LVU1433
1605:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 5248              		.loc 20 1605 5 view .LVU1434
 5249              	.LVL261:
 5250              	.LBB1418:
 5251              	.LBI1418:
 135:../DaisySP/Source/Utility/dsp.h **** {
 5252              		.loc 25 135 13 view .LVU1435
 5253              	.LBB1419:
 5254              		.loc 25 137 5 view .LVU1436
 5255              	.LBE1419:
 5256              	.LBE1418:
1602:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 5257              		.loc 20 1602 1 is_stmt 0 view .LVU1437
 5258 0000 38B5     		push	{r3, r4, r5, lr}
 5259              		.cfi_def_cfa_offset 16
 5260              		.cfi_offset 3, -16
 5261              		.cfi_offset 4, -12
 5262              		.cfi_offset 5, -8
 5263              		.cfi_offset 14, -4
1605:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 5264              		.loc 20 1605 13 view .LVU1438
 5265 0002 154A     		ldr	r2, .L302
 5266              	.LBB1426:
 5267              	.LBB1420:
 5268              		.loc 25 137 9 view .LVU1439
 5269 0004 154C     		ldr	r4, .L302+4
 5270              	.LBE1420:
 5271              	.LBE1426:
 5272              	.LBB1427:
 5273              	.LBB1428:
 5274 0006 164D     		ldr	r5, .L302+8
 5275              	.LBE1428:
 5276              	.LBE1427:
1606:Veno-Echo.cpp ****     //calculate InternalMod
 5277              		.loc 20 1606 13 view .LVU1440
 5278 0008 164B     		ldr	r3, .L302+12
 5279              	.LBB1434:
 5280              	.LBB1421:
 5281              		.loc 25 137 9 view .LVU1441
 5282 000a 94ED007A 		vldr.32	s14, [r4]
 5283              	.LBE1421:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 209


 5284              	.LBE1434:
 5285              	.LBB1435:
 5286              	.LBB1429:
 5287 000e D5ED007A 		vldr.32	s15, [r5]
 5288              	.LBE1429:
 5289              	.LBE1435:
 5290              	.LBB1436:
 5291              	.LBB1422:
 5292              		.loc 25 137 24 view .LVU1442
 5293 0012 92ED006A 		vldr.32	s12, [r2]
 5294              	.LBE1422:
 5295              	.LBE1436:
 5296              	.LBB1437:
 5297              	.LBB1430:
 5298 0016 D3ED006A 		vldr.32	s13, [r3]
 5299              	.LBE1430:
 5300              	.LBE1437:
 5301              	.LBB1438:
 5302              	.LBB1423:
 5303 001a 36EE476A 		vsub.f32	s12, s12, s14
 5304              		.loc 25 137 9 view .LVU1443
 5305 001e DFED125A 		vldr.32	s11, .L302+16
 5306              	.LBE1423:
 5307              	.LBE1438:
 5308              	.LBB1439:
 5309              	.LBB1431:
 5310              		.loc 25 137 24 view .LVU1444
 5311 0022 76EEE76A 		vsub.f32	s13, s13, s15
 5312              	.LBE1431:
 5313              	.LBE1439:
1608:Veno-Echo.cpp ****     //apply modulation to delay lines
 5314              		.loc 20 1608 34 view .LVU1445
 5315 0026 1148     		ldr	r0, .L302+20
 5316              	.LBB1440:
 5317              	.LBB1424:
 5318              		.loc 25 137 9 view .LVU1446
 5319 0028 A6EE257A 		vfma.f32	s14, s12, s11
 5320              	.LBE1424:
 5321              	.LBE1440:
 5322              	.LBB1441:
 5323              	.LBB1432:
 5324 002c E6EEA57A 		vfma.f32	s15, s13, s11
 5325              	.LBE1432:
 5326              	.LBE1441:
 5327              	.LBB1442:
 5328              	.LBB1425:
 5329 0030 84ED007A 		vstr.32	s14, [r4]
 5330              	.LVL262:
 5331              		.loc 25 137 9 view .LVU1447
 5332              	.LBE1425:
 5333              	.LBE1442:
1606:Veno-Echo.cpp ****     //calculate InternalMod
 5334              		.loc 20 1606 5 is_stmt 1 view .LVU1448
 5335              	.LBB1443:
 5336              	.LBI1427:
 135:../DaisySP/Source/Utility/dsp.h **** {
 5337              		.loc 25 135 13 view .LVU1449
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 210


 5338              	.LBB1433:
 5339              		.loc 25 137 5 view .LVU1450
 5340              		.loc 25 137 9 is_stmt 0 view .LVU1451
 5341 0034 C5ED007A 		vstr.32	s15, [r5]
 5342              	.LVL263:
 5343              		.loc 25 137 9 view .LVU1452
 5344              	.LBE1433:
 5345              	.LBE1443:
1608:Veno-Echo.cpp ****     //apply modulation to delay lines
 5346              		.loc 20 1608 5 is_stmt 1 view .LVU1453
1608:Veno-Echo.cpp ****     //apply modulation to delay lines
 5347              		.loc 20 1608 34 is_stmt 0 view .LVU1454
 5348 0038 FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 5349              	.LVL264:
1610:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5350              		.loc 20 1610 5 is_stmt 1 view .LVU1455
1610:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5351              		.loc 20 1610 40 is_stmt 0 view .LVU1456
 5352 003c 95ED007A 		vldr.32	s14, [r5]
 5353 0040 D4ED007A 		vldr.32	s15, [r4]
 5354              	.LBB1444:
 5355              	.LBB1445:
  51:DelayMulti.h  **** 
  52:DelayMulti.h  **** //functions:
  53:DelayMulti.h  **** 
  54:DelayMulti.h  **** //initialises delay class
  55:DelayMulti.h  **** void init(dsy_gpio_pin ledpin, float samplerate);
  56:DelayMulti.h  **** 
  57:DelayMulti.h  **** //Updates delay time from pot value and base tempo (set ratio)
  58:DelayMulti.h  **** bool SetDelayTime(float delaytime_pot, bool syncMode);
  59:DelayMulti.h  **** 
  60:DelayMulti.h  **** //Updates xfades, updates delayline with delayTime[] + modulation and 
  61:DelayMulti.h  **** //returns combined output from delay heads, and updates LEDs. 
  62:DelayMulti.h  **** //Call at audio samplerate
  63:DelayMulti.h  **** const float& GetOutput();
  64:DelayMulti.h  **** 
  65:DelayMulti.h  **** //Writes to delayline
  66:DelayMulti.h  **** void Write(const float& in);
  67:DelayMulti.h  **** 
  68:DelayMulti.h  **** //this must be called once per sample
  69:DelayMulti.h  **** void SetModulation(const float& mod){mod_ = mod;}
 5356              		.loc 17 69 43 view .LVU1457
 5357 0044 0A4A     		ldr	r2, .L302+24
 5358              	.LBE1445:
 5359              	.LBE1444:
1610:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5360              		.loc 20 1610 40 view .LVU1458
 5361 0046 E0EE077A 		vfma.f32	s15, s0, s14
 5362              	.LBB1448:
 5363              	.LBI1444:
 5364              		.loc 17 69 6 is_stmt 1 view .LVU1459
 5365              	.LVL265:
 5366              	.LBB1446:
 5367              		.loc 17 69 38 view .LVU1460
 5368              	.LBE1446:
 5369              	.LBE1448:
 5370              	.LBB1449:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 211


 5371              	.LBB1450:
 5372              		.loc 17 69 43 is_stmt 0 view .LVU1461
 5373 004a 0A4B     		ldr	r3, .L302+28
 5374              	.LBE1450:
 5375              	.LBE1449:
 5376              	.LBB1452:
 5377              	.LBB1447:
 5378 004c C2ED3E7A 		vstr.32	s15, [r2, #248]
 5379              	.LBE1447:
 5380              	.LBE1452:
1611:Veno-Echo.cpp **** }
 5381              		.loc 20 1611 5 is_stmt 1 view .LVU1462
 5382              	.LVL266:
 5383              	.LBB1453:
 5384              	.LBI1449:
 5385              		.loc 17 69 6 view .LVU1463
 5386              	.LBB1451:
 5387              		.loc 17 69 38 view .LVU1464
 5388              		.loc 17 69 43 is_stmt 0 view .LVU1465
 5389 0050 C3ED3E7A 		vstr.32	s15, [r3, #248]
 5390              	.LBE1451:
 5391              	.LBE1453:
1612:Veno-Echo.cpp **** 
 5392              		.loc 20 1612 1 view .LVU1466
 5393 0054 38BD     		pop	{r3, r4, r5, pc}
 5394              	.L303:
 5395 0056 00BF     		.align	2
 5396              	.L302:
 5397 0058 00000000 		.word	.LANCHOR85
 5398 005c 00000000 		.word	.LANCHOR86
 5399 0060 00000000 		.word	.LANCHOR87
 5400 0064 00000000 		.word	.LANCHOR68
 5401 0068 0AD7233C 		.word	1008981770
 5402 006c 00000000 		.word	.LANCHOR76
 5403 0070 00000000 		.word	.LANCHOR0
 5404 0074 00000000 		.word	.LANCHOR1
 5405              		.cfi_endproc
 5406              	.LFE4327:
 5408              		.section	.text._Z11UpdateClockv,"ax",%progbits
 5409              		.align	1
 5410              		.p2align 2,,3
 5411              		.global	_Z11UpdateClockv
 5412              		.syntax unified
 5413              		.thumb
 5414              		.thumb_func
 5415              		.fpu fpv5-d16
 5417              	_Z11UpdateClockv:
 5418              	.LFB4328:
1615:Veno-Echo.cpp ****     static int divCounter{};
 5419              		.loc 20 1615 1 is_stmt 1 view -0
 5420              		.cfi_startproc
 5421              		@ args = 0, pretend = 0, frame = 0
 5422              		@ frame_needed = 0, uses_anonymous_args = 0
1616:Veno-Echo.cpp ****     ClockIn.Debounce();
 5423              		.loc 20 1616 5 view .LVU1468
1617:Veno-Echo.cpp **** 
 5424              		.loc 20 1617 5 view .LVU1469
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 212


1615:Veno-Echo.cpp ****     static int divCounter{};
 5425              		.loc 20 1615 1 is_stmt 0 view .LVU1470
 5426 0000 10B5     		push	{r4, lr}
 5427              		.cfi_def_cfa_offset 8
 5428              		.cfi_offset 4, -8
 5429              		.cfi_offset 14, -4
1617:Veno-Echo.cpp **** 
 5430              		.loc 20 1617 21 view .LVU1471
 5431 0002 104C     		ldr	r4, .L313
 5432 0004 2046     		mov	r0, r4
 5433 0006 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 5434              	.LVL267:
1620:Veno-Echo.cpp ****     {   
 5435              		.loc 20 1620 5 is_stmt 1 view .LVU1472
  42:../libdaisy/src/hid/switch.h **** 
  43:../libdaisy/src/hid/switch.h ****     /** 
  44:../libdaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  45:../libdaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  46:../libdaisy/src/hid/switch.h ****     \param update_rate the rate at which the Debounce() function will be called. (used for timing).
  47:../libdaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  48:../libdaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  49:../libdaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  50:../libdaisy/src/hid/switch.h ****     */
  51:../libdaisy/src/hid/switch.h ****     void
  52:../libdaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  53:../libdaisy/src/hid/switch.h **** 
  54:../libdaisy/src/hid/switch.h ****     /**
  55:../libdaisy/src/hid/switch.h ****        Simplified Init.
  56:../libdaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  57:../libdaisy/src/hid/switch.h ****        \param update_rate the rate at which the Debounce() function will be called. (used for timin
  58:../libdaisy/src/hid/switch.h ****     */
  59:../libdaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate);
  60:../libdaisy/src/hid/switch.h **** 
  61:../libdaisy/src/hid/switch.h ****     /** 
  62:../libdaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  63:../libdaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  64:../libdaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  65:../libdaisy/src/hid/switch.h ****     */
  66:../libdaisy/src/hid/switch.h ****     void Debounce();
  67:../libdaisy/src/hid/switch.h **** 
  68:../libdaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  69:../libdaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return state_ == 0x7f; }
 5436              		.loc 1 69 38 view .LVU1473
1620:Veno-Echo.cpp ****     {   
 5437              		.loc 20 1620 5 is_stmt 0 view .LVU1474
 5438 000a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 5439 000c 7F2B     		cmp	r3, #127
 5440 000e 00D0     		beq	.L312
 5441              	.L304:
1635:Veno-Echo.cpp **** 
 5442              		.loc 20 1635 1 view .LVU1475
 5443 0010 10BD     		pop	{r4, pc}
 5444              	.L312:
1622:Veno-Echo.cpp ****         //tempoLED_BASE.resetPhase();
 5445              		.loc 20 1622 9 is_stmt 1 view .LVU1476
1624:Veno-Echo.cpp ****         {
 5446              		.loc 20 1624 9 view .LVU1477
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 213


1626:Veno-Echo.cpp ****             {
 5447              		.loc 20 1626 13 view .LVU1478
1626:Veno-Echo.cpp ****             {
 5448              		.loc 20 1626 29 is_stmt 0 view .LVU1479
 5449 0012 0D48     		ldr	r0, .L313+4
 5450 0014 FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 5451              	.LVL268:
1626:Veno-Echo.cpp ****             {
 5452              		.loc 20 1626 13 view .LVU1480
 5453 0018 0028     		cmp	r0, #0
 5454 001a F9D0     		beq	.L304
 5455              	.LBB1463:
 5456              	.LBI1463:
1614:Veno-Echo.cpp **** {
 5457              		.loc 20 1614 6 is_stmt 1 view .LVU1481
 5458              	.LBB1464:
1628:Veno-Echo.cpp ****                 AltControls.tapLength = BaseTempo.getTapLength();
 5459              		.loc 20 1628 17 view .LVU1482
1628:Veno-Echo.cpp ****                 AltControls.tapLength = BaseTempo.getTapLength();
 5460              		.loc 20 1628 39 is_stmt 0 view .LVU1483
 5461 001c 0A48     		ldr	r0, .L313+4
 5462 001e FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 5463              	.LVL269:
 5464 0022 0A48     		ldr	r0, .L313+8
 5465 0024 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 5466              	.LVL270:
1629:Veno-Echo.cpp ****                 save_flag = true;
 5467              		.loc 20 1629 17 is_stmt 1 view .LVU1484
1629:Veno-Echo.cpp ****                 save_flag = true;
 5468              		.loc 20 1629 63 is_stmt 0 view .LVU1485
 5469 0028 0748     		ldr	r0, .L313+4
 5470 002a FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 5471              	.LVL271:
1629:Veno-Echo.cpp ****                 save_flag = true;
 5472              		.loc 20 1629 39 view .LVU1486
 5473 002e 0849     		ldr	r1, .L313+12
 5474              	.LBB1465:
 5475              	.LBB1466:
 5476              	.LBB1467:
 5477              	.LBB1468:
 5478              		.loc 22 397 18 view .LVU1487
 5479 0030 0122     		movs	r2, #1
 5480 0032 084B     		ldr	r3, .L313+16
 5481              	.LBE1468:
 5482              	.LBE1467:
 5483              	.LBE1466:
 5484              	.LBE1465:
1629:Veno-Echo.cpp ****                 save_flag = true;
 5485              		.loc 20 1629 39 view .LVU1488
 5486 0034 81ED080A 		vstr.32	s0, [r1, #32]
1630:Veno-Echo.cpp ****             }
 5487              		.loc 20 1630 17 is_stmt 1 view .LVU1489
 5488              	.LVL272:
 5489              	.LBB1472:
 5490              	.LBI1465:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 5491              		.loc 23 80 5 view .LVU1490
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 214


 5492              	.LBE1472:
 5493              	.LBE1464:
 5494              	.LBE1463:
 5495              		.loc 23 81 7 view .LVU1491
 5496              	.LBB1475:
 5497              	.LBB1474:
 5498              	.LBB1473:
 5499              	.LBB1471:
 5500              	.LBI1466:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 5501              		.loc 22 288 7 view .LVU1492
 5502              	.LBB1470:
 5503              	.LBI1467:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 5504              		.loc 22 390 7 view .LVU1493
 5505              	.LBB1469:
 5506              		.loc 22 397 18 is_stmt 0 view .LVU1494
 5507 0038 BFF35B8F 		dmb	ish
 5508 003c 1A70     		strb	r2, [r3]
 5509 003e BFF35B8F 		dmb	ish
 5510              	.LVL273:
 5511              		.loc 22 397 18 view .LVU1495
 5512              	.LBE1469:
 5513              	.LBE1470:
 5514              	.LBE1471:
 5515              	.LBE1473:
 5516              	.LBE1474:
 5517              	.LBE1475:
1635:Veno-Echo.cpp **** 
 5518              		.loc 20 1635 1 view .LVU1496
 5519 0042 10BD     		pop	{r4, pc}
 5520              	.L314:
 5521              		.align	2
 5522              	.L313:
 5523 0044 00000000 		.word	.LANCHOR88
 5524 0048 00000000 		.word	.LANCHOR26
 5525 004c 00000000 		.word	.LANCHOR89
 5526 0050 00000000 		.word	.LANCHOR15
 5527 0054 00000000 		.word	.LANCHOR16
 5528              		.cfi_endproc
 5529              	.LFE4328:
 5531              		.section	.text._Z21Update_DelayBaseTempov,"ax",%progbits
 5532              		.align	1
 5533              		.p2align 2,,3
 5534              		.global	_Z21Update_DelayBaseTempov
 5535              		.syntax unified
 5536              		.thumb
 5537              		.thumb_func
 5538              		.fpu fpv5-d16
 5540              	_Z21Update_DelayBaseTempov:
 5541              	.LFB4330:
1788:Veno-Echo.cpp ****     delayL.SetBaseTempo(BaseTempo.getDelayLength());
 5542              		.loc 20 1788 1 is_stmt 1 view -0
 5543              		.cfi_startproc
 5544              		@ args = 0, pretend = 0, frame = 0
 5545              		@ frame_needed = 0, uses_anonymous_args = 0
1789:Veno-Echo.cpp ****     delayR.SetBaseTempo(BaseTempo.getDelayLength());
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 215


 5546              		.loc 20 1789 5 view .LVU1498
1788:Veno-Echo.cpp ****     delayL.SetBaseTempo(BaseTempo.getDelayLength());
 5547              		.loc 20 1788 1 is_stmt 0 view .LVU1499
 5548 0000 08B5     		push	{r3, lr}
 5549              		.cfi_def_cfa_offset 8
 5550              		.cfi_offset 3, -8
 5551              		.cfi_offset 14, -4
1789:Veno-Echo.cpp ****     delayR.SetBaseTempo(BaseTempo.getDelayLength());
 5552              		.loc 20 1789 49 view .LVU1500
 5553 0002 0648     		ldr	r0, .L317
 5554 0004 FFF7FEFF 		bl	_ZN8Taptempo14getDelayLengthEv
 5555              	.LVL274:
 5556              	.LBB1476:
 5557              	.LBI1476:
  70:DelayMulti.h  **** //void SetSync(const bool& syncMode){syncMode_ = syncMode;}
  71:DelayMulti.h  **** void SetBaseTempo(const float& tempo){baseTempo_ = tempo;}
 5558              		.loc 17 71 6 is_stmt 1 view .LVU1501
 5559              	.LBB1477:
 5560              		.loc 17 71 39 view .LVU1502
 5561              		.loc 17 71 50 is_stmt 0 view .LVU1503
 5562 0008 054B     		ldr	r3, .L317+4
 5563              	.LBE1477:
 5564              	.LBE1476:
1790:Veno-Echo.cpp **** }
 5565              		.loc 20 1790 49 view .LVU1504
 5566 000a 0448     		ldr	r0, .L317
 5567              	.LBB1479:
 5568              	.LBB1478:
 5569              		.loc 17 71 50 view .LVU1505
 5570 000c 83ED480A 		vstr.32	s0, [r3, #288]
 5571              	.LBE1478:
 5572              	.LBE1479:
1790:Veno-Echo.cpp **** }
 5573              		.loc 20 1790 5 is_stmt 1 view .LVU1506
1790:Veno-Echo.cpp **** }
 5574              		.loc 20 1790 49 is_stmt 0 view .LVU1507
 5575 0010 FFF7FEFF 		bl	_ZN8Taptempo14getDelayLengthEv
 5576              	.LVL275:
 5577              	.LBB1480:
 5578              	.LBI1480:
 5579              		.loc 17 71 6 is_stmt 1 view .LVU1508
 5580              	.LBB1481:
 5581              		.loc 17 71 39 view .LVU1509
 5582              		.loc 17 71 50 is_stmt 0 view .LVU1510
 5583 0014 034B     		ldr	r3, .L317+8
 5584 0016 83ED480A 		vstr.32	s0, [r3, #288]
 5585              	.LBE1481:
 5586              	.LBE1480:
1791:Veno-Echo.cpp **** 
 5587              		.loc 20 1791 1 view .LVU1511
 5588 001a 08BD     		pop	{r3, pc}
 5589              	.L318:
 5590              		.align	2
 5591              	.L317:
 5592 001c 00000000 		.word	.LANCHOR26
 5593 0020 00000000 		.word	.LANCHOR0
 5594 0024 00000000 		.word	.LANCHOR1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 216


 5595              		.cfi_endproc
 5596              	.LFE4330:
 5598              		.section	.text._Z21Update_DelayTempoLEDsv,"ax",%progbits
 5599              		.align	1
 5600              		.p2align 2,,3
 5601              		.global	_Z21Update_DelayTempoLEDsv
 5602              		.syntax unified
 5603              		.thumb
 5604              		.thumb_func
 5605              		.fpu fpv5-d16
 5607              	_Z21Update_DelayTempoLEDsv:
 5608              	.LFB4331:
1794:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
 5609              		.loc 20 1794 1 is_stmt 1 view -0
 5610              		.cfi_startproc
 5611              		@ args = 0, pretend = 0, frame = 0
 5612              		@ frame_needed = 0, uses_anonymous_args = 0
1795:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
 5613              		.loc 20 1795 5 view .LVU1513
1794:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
 5614              		.loc 20 1794 1 is_stmt 0 view .LVU1514
 5615 0000 70B5     		push	{r4, r5, r6, lr}
 5616              		.cfi_def_cfa_offset 16
 5617              		.cfi_offset 4, -16
 5618              		.cfi_offset 5, -12
 5619              		.cfi_offset 6, -8
 5620              		.cfi_offset 14, -4
1795:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
 5621              		.loc 20 1795 26 view .LVU1515
 5622 0002 0C4E     		ldr	r6, .L321
 5623 0004 0C4D     		ldr	r5, .L321+4
1796:Veno-Echo.cpp ****     DELAYL_DEBUG = delayL.GetDelayTime();
 5624              		.loc 20 1796 26 view .LVU1516
 5625 0006 0D4C     		ldr	r4, .L321+8
1795:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
 5626              		.loc 20 1795 26 view .LVU1517
 5627 0008 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 5628 000a 2846     		mov	r0, r5
 5629 000c FFF7FEFF 		bl	_ZN10DelayMulti14updateTempoLEDEb
 5630              	.LVL276:
1796:Veno-Echo.cpp ****     DELAYL_DEBUG = delayL.GetDelayTime();
 5631              		.loc 20 1796 5 is_stmt 1 view .LVU1518
1796:Veno-Echo.cpp ****     DELAYL_DEBUG = delayL.GetDelayTime();
 5632              		.loc 20 1796 26 is_stmt 0 view .LVU1519
 5633 0010 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 5634 0012 2046     		mov	r0, r4
 5635 0014 FFF7FEFF 		bl	_ZN10DelayMulti14updateTempoLEDEb
 5636              	.LVL277:
1797:Veno-Echo.cpp ****     DELAYR_DEBUG = delayR.GetDelayTime();
 5637              		.loc 20 1797 5 is_stmt 1 view .LVU1520
1797:Veno-Echo.cpp ****     DELAYR_DEBUG = delayR.GetDelayTime();
 5638              		.loc 20 1797 39 is_stmt 0 view .LVU1521
 5639 0018 2846     		mov	r0, r5
 5640 001a FFF7FEFF 		bl	_ZN10DelayMulti12GetDelayTimeEv
 5641              	.LVL278:
1797:Veno-Echo.cpp ****     DELAYR_DEBUG = delayR.GetDelayTime();
 5642              		.loc 20 1797 18 view .LVU1522
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 217


 5643 001e 084B     		ldr	r3, .L321+12
1798:Veno-Echo.cpp **** }
 5644              		.loc 20 1798 39 view .LVU1523
 5645 0020 2046     		mov	r0, r4
1797:Veno-Echo.cpp ****     DELAYR_DEBUG = delayR.GetDelayTime();
 5646              		.loc 20 1797 18 view .LVU1524
 5647 0022 83ED000A 		vstr.32	s0, [r3]
1798:Veno-Echo.cpp **** }
 5648              		.loc 20 1798 5 is_stmt 1 view .LVU1525
1798:Veno-Echo.cpp **** }
 5649              		.loc 20 1798 39 is_stmt 0 view .LVU1526
 5650 0026 FFF7FEFF 		bl	_ZN10DelayMulti12GetDelayTimeEv
 5651              	.LVL279:
1798:Veno-Echo.cpp **** }
 5652              		.loc 20 1798 18 view .LVU1527
 5653 002a 064B     		ldr	r3, .L321+16
 5654 002c 83ED000A 		vstr.32	s0, [r3]
1799:Veno-Echo.cpp **** 
 5655              		.loc 20 1799 1 view .LVU1528
 5656 0030 70BD     		pop	{r4, r5, r6, pc}
 5657              	.L322:
 5658 0032 00BF     		.align	2
 5659              	.L321:
 5660 0034 00000000 		.word	.LANCHOR12
 5661 0038 00000000 		.word	.LANCHOR0
 5662 003c 00000000 		.word	.LANCHOR1
 5663 0040 00000000 		.word	.LANCHOR90
 5664 0044 00000000 		.word	.LANCHOR91
 5665              		.cfi_endproc
 5666              	.LFE4331:
 5668              		.section	.text._Z19Update_BaseTempoLEDv,"ax",%progbits
 5669              		.align	1
 5670              		.p2align 2,,3
 5671              		.global	_Z19Update_BaseTempoLEDv
 5672              		.syntax unified
 5673              		.thumb
 5674              		.thumb_func
 5675              		.fpu fpv5-d16
 5677              	_Z19Update_BaseTempoLEDv:
 5678              	.LFB4332:
1802:Veno-Echo.cpp ****     tempoLED_BASE.update();
 5679              		.loc 20 1802 1 is_stmt 1 view -0
 5680              		.cfi_startproc
 5681              		@ args = 0, pretend = 0, frame = 0
 5682              		@ frame_needed = 0, uses_anonymous_args = 0
1803:Veno-Echo.cpp **** 
 5683              		.loc 20 1803 5 view .LVU1530
1803:Veno-Echo.cpp **** 
 5684              		.loc 20 1803 25 is_stmt 0 view .LVU1531
 5685 0000 1848     		ldr	r0, .L327
1802:Veno-Echo.cpp ****     tempoLED_BASE.update();
 5686              		.loc 20 1802 1 view .LVU1532
 5687 0002 08B5     		push	{r3, lr}
 5688              		.cfi_def_cfa_offset 8
 5689              		.cfi_offset 3, -8
 5690              		.cfi_offset 14, -4
1803:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 218


 5691              		.loc 20 1803 25 view .LVU1533
 5692 0004 FFF7FEFF 		bl	_ZN8TempoLED6updateEv
 5693              	.LVL280:
1805:Veno-Echo.cpp **** 
 5694              		.loc 20 1805 5 is_stmt 1 view .LVU1534
1807:Veno-Echo.cpp ****     {
 5695              		.loc 20 1807 5 view .LVU1535
1807:Veno-Echo.cpp ****     {
 5696              		.loc 20 1807 27 is_stmt 0 view .LVU1536
 5697 0008 1648     		ldr	r0, .L327
 5698 000a FFF7FEFF 		bl	_ZN8TempoLED5isEOCEv
 5699              	.LVL281:
1807:Veno-Echo.cpp ****     {
 5700              		.loc 20 1807 5 view .LVU1537
 5701 000e D0B9     		cbnz	r0, .L324
 5702 0010 154B     		ldr	r3, .L327+4
 5703 0012 1B68     		ldr	r3, [r3]
 5704              	.L325:
1812:Veno-Echo.cpp ****     //update base phase for both delay lines
 5705              		.loc 20 1812 5 is_stmt 1 view .LVU1538
 5706              	.LVL282:
 5707              	.LBB1482:
 5708              	.LBI1482:
  71:LEDs.h        **** 
 5709              		.loc 14 71 7 view .LVU1539
 5710              	.LBB1483:
  71:LEDs.h        **** 
 5711              		.loc 14 71 20 view .LVU1540
  71:LEDs.h        **** 
 5712              		.loc 14 71 20 is_stmt 0 view .LVU1541
 5713              	.LBE1483:
 5714              	.LBE1482:
  17:oscillator_p.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:oscillator_p.h ****     */
  19:oscillator_p.h ****     enum
  20:oscillator_p.h ****     {
  21:oscillator_p.h ****         WAVE_SIN,
  22:oscillator_p.h ****         WAVE_TRI,
  23:oscillator_p.h ****         WAVE_SAW,
  24:oscillator_p.h ****         WAVE_RAMP,
  25:oscillator_p.h ****         WAVE_SQUARE,
  26:oscillator_p.h ****         WAVE_POLYBLEP_TRI,
  27:oscillator_p.h ****         WAVE_POLYBLEP_SAW,
  28:oscillator_p.h ****         WAVE_POLYBLEP_SQUARE,
  29:oscillator_p.h ****         WAVE_LAST,
  30:oscillator_p.h ****     };
  31:oscillator_p.h **** 
  32:oscillator_p.h **** 
  33:oscillator_p.h ****     /** Initializes the Oscillator
  34:oscillator_p.h **** 
  35:oscillator_p.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:oscillator_p.h **** 
  37:oscillator_p.h ****         Defaults:
  38:oscillator_p.h ****         - freq_ = 100 Hz
  39:oscillator_p.h ****         - amp_ = 0.5
  40:oscillator_p.h ****         - waveform_ = sine wave.
  41:oscillator_p.h ****     */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 219


  42:oscillator_p.h ****     void Init(float sample_rate)
  43:oscillator_p.h ****     {
  44:oscillator_p.h ****         sr_        = sample_rate;
  45:oscillator_p.h ****         sr_recip_  = 1.0f / sample_rate;
  46:oscillator_p.h ****         freq_      = 100.0f;
  47:oscillator_p.h ****         amp_       = 0.5f;
  48:oscillator_p.h ****         phase_     = 0.0f;
  49:oscillator_p.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:oscillator_p.h ****         waveform_  = WAVE_SIN;
  51:oscillator_p.h ****         eoc_       = true;
  52:oscillator_p.h ****         eor_       = true;
  53:oscillator_p.h ****     }
  54:oscillator_p.h **** 
  55:oscillator_p.h **** 
  56:oscillator_p.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:oscillator_p.h ****     */
  58:oscillator_p.h ****     inline void SetFreq(const float f)
  59:oscillator_p.h ****     {
  60:oscillator_p.h ****         freq_      = f;
  61:oscillator_p.h ****         phase_inc_ = CalcPhaseInc(f);
  62:oscillator_p.h ****     }
  63:oscillator_p.h **** 
  64:oscillator_p.h **** 
  65:oscillator_p.h ****     /** Sets the amplitude of the waveform.
  66:oscillator_p.h ****     */
  67:oscillator_p.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:oscillator_p.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:oscillator_p.h ****     */
  70:oscillator_p.h ****     inline void SetWaveform(const uint8_t wf)
  71:oscillator_p.h ****     {
  72:oscillator_p.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
  73:oscillator_p.h ****     }
  74:oscillator_p.h **** 
  75:oscillator_p.h ****     /** Returns true if cycle is at end of rise. Set during call to Process.
  76:oscillator_p.h ****     */
  77:oscillator_p.h ****     inline bool IsEOR() { return eor_; }
  78:oscillator_p.h **** 
  79:oscillator_p.h ****     /** Returns true if cycle is at end of cycle. Set during call to Process.
  80:oscillator_p.h ****     */
  81:oscillator_p.h ****     inline bool IsEOC() { return eoc_; }
  82:oscillator_p.h **** 
  83:oscillator_p.h ****     /** Returns true if cycle rising.
  84:oscillator_p.h ****     */
  85:oscillator_p.h ****     inline bool IsRising() { return phase_ < PI_F; }
  86:oscillator_p.h **** 
  87:oscillator_p.h ****     /** Returns true if cycle falling.
  88:oscillator_p.h ****     */
  89:oscillator_p.h ****     inline bool IsFalling() { return phase_ >= PI_F; }
  90:oscillator_p.h **** 
  91:oscillator_p.h ****     //Returns phase angle
  92:oscillator_p.h ****     inline float GetPhase() { return phase_; }
 5715              		.loc 15 92 31 is_stmt 1 view .LVU1542
 5716              	.LBB1485:
 5717              	.LBB1484:
  71:LEDs.h        **** 
 5718              		.loc 14 71 41 is_stmt 0 view .LVU1543
 5719 0014 134A     		ldr	r2, .L327
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 220


 5720              	.LBE1484:
 5721              	.LBE1485:
1812:Veno-Echo.cpp ****     //update base phase for both delay lines
 5722              		.loc 20 1812 50 view .LVU1544
 5723 0016 B1EE086A 		vmov.f32	s12, #6.0e+0
1812:Veno-Echo.cpp ****     //update base phase for both delay lines
 5724              		.loc 20 1812 73 view .LVU1545
 5725 001a 07EE903A 		vmov	s15, r3	@ int
1812:Veno-Echo.cpp ****     //update base phase for both delay lines
 5726              		.loc 20 1812 55 view .LVU1546
 5727 001e DFED136A 		vldr.32	s13, .L327+8
1812:Veno-Echo.cpp ****     //update base phase for both delay lines
 5728              		.loc 20 1812 50 view .LVU1547
 5729 0022 D2ED0C5A 		vldr.32	s11, [r2, #48]
1812:Veno-Echo.cpp ****     //update base phase for both delay lines
 5730              		.loc 20 1812 73 view .LVU1548
 5731 0026 F8EEE77A 		vcvt.f32.s32	s15, s15
 5732              	.LBB1486:
 5733              	.LBB1487:
  72:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 5734              		.loc 17 72 54 view .LVU1549
 5735 002a 1149     		ldr	r1, .L327+12
 5736              	.LBE1487:
 5737              	.LBE1486:
1812:Veno-Echo.cpp ****     //update base phase for both delay lines
 5738              		.loc 20 1812 50 view .LVU1550
 5739 002c 85EE867A 		vdiv.f32	s14, s11, s12
 5740              	.LBB1489:
 5741              	.LBB1490:
 5742              		.loc 17 72 54 view .LVU1551
 5743 0030 104A     		ldr	r2, .L327+16
 5744              	.LBE1490:
 5745              	.LBE1489:
1816:Veno-Echo.cpp **** }
 5746              		.loc 20 1816 17 view .LVU1552
 5747 0032 114B     		ldr	r3, .L327+20
1812:Veno-Echo.cpp ****     //update base phase for both delay lines
 5748              		.loc 20 1812 55 view .LVU1553
 5749 0034 A7EEA67A 		vfma.f32	s14, s15, s13
 5750              	.LVL283:
1814:Veno-Echo.cpp ****     delayR.SetBasePhase( dividedPhase );
 5751              		.loc 20 1814 5 is_stmt 1 view .LVU1554
 5752              	.LBB1492:
 5753              	.LBI1486:
 5754              		.loc 17 72 6 view .LVU1555
 5755              	.LBB1488:
 5756              		.loc 17 72 43 view .LVU1556
 5757              		.loc 17 72 54 is_stmt 0 view .LVU1557
 5758 0038 81ED477A 		vstr.32	s14, [r1, #284]
 5759              	.LBE1488:
 5760              	.LBE1492:
1815:Veno-Echo.cpp ****     PHASE_DEBUG = dividedPhase;
 5761              		.loc 20 1815 5 is_stmt 1 view .LVU1558
 5762              	.LVL284:
 5763              	.LBB1493:
 5764              	.LBI1489:
 5765              		.loc 17 72 6 view .LVU1559
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 221


 5766              	.LBB1491:
 5767              		.loc 17 72 43 view .LVU1560
 5768              		.loc 17 72 54 is_stmt 0 view .LVU1561
 5769 003c 82ED477A 		vstr.32	s14, [r2, #284]
 5770              	.LBE1491:
 5771              	.LBE1493:
1816:Veno-Echo.cpp **** }
 5772              		.loc 20 1816 5 is_stmt 1 view .LVU1562
1816:Veno-Echo.cpp **** }
 5773              		.loc 20 1816 17 is_stmt 0 view .LVU1563
 5774 0040 83ED007A 		vstr.32	s14, [r3]
 5775              	.LVL285:
1817:Veno-Echo.cpp **** 
 5776              		.loc 20 1817 1 view .LVU1564
 5777 0044 08BD     		pop	{r3, pc}
 5778              	.LVL286:
 5779              	.L324:
1809:Veno-Echo.cpp ****     }
 5780              		.loc 20 1809 9 is_stmt 1 view .LVU1565
1809:Veno-Echo.cpp ****     }
 5781              		.loc 20 1809 38 is_stmt 0 view .LVU1566
 5782 0046 0849     		ldr	r1, .L327+4
1809:Veno-Echo.cpp ****     }
 5783              		.loc 20 1809 43 view .LVU1567
 5784 0048 0C4B     		ldr	r3, .L327+24
1809:Veno-Echo.cpp ****     }
 5785              		.loc 20 1809 38 view .LVU1568
 5786 004a 0A68     		ldr	r2, [r1]
 5787 004c 0132     		adds	r2, r2, #1
1809:Veno-Echo.cpp ****     }
 5788              		.loc 20 1809 43 view .LVU1569
 5789 004e 83FB0203 		smull	r0, r3, r3, r2
 5790 0052 A3EBE273 		sub	r3, r3, r2, asr #31
 5791 0056 03EB4303 		add	r3, r3, r3, lsl #1
 5792 005a A2EB4303 		sub	r3, r2, r3, lsl #1
1809:Veno-Echo.cpp ****     }
 5793              		.loc 20 1809 22 view .LVU1570
 5794 005e 0B60     		str	r3, [r1]
 5795 0060 D8E7     		b	.L325
 5796              	.L328:
 5797 0062 00BF     		.align	2
 5798              	.L327:
 5799 0064 00000000 		.word	.LANCHOR89
 5800 0068 00000000 		.word	.LANCHOR92
 5801 006c 920A863F 		.word	1065749138
 5802 0070 00000000 		.word	.LANCHOR0
 5803 0074 00000000 		.word	.LANCHOR1
 5804 0078 00000000 		.word	.LANCHOR93
 5805 007c ABAAAA2A 		.word	715827883
 5806              		.cfi_endproc
 5807              	.LFE4332:
 5809              		.section	.text._Z13ApplySettingsRK8Settings,"ax",%progbits
 5810              		.align	1
 5811              		.p2align 2,,3
 5812              		.global	_Z13ApplySettingsRK8Settings
 5813              		.syntax unified
 5814              		.thumb
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 222


 5815              		.thumb_func
 5816              		.fpu fpv5-d16
 5818              	_Z13ApplySettingsRK8Settings:
 5819              	.LVL287:
 5820              	.LFB4333:
1821:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5821              		.loc 20 1821 1 is_stmt 1 view -0
 5822              		.cfi_startproc
 5823              		@ args = 0, pretend = 0, frame = 0
 5824              		@ frame_needed = 0, uses_anonymous_args = 0
1822:Veno-Echo.cpp ****     {
 5825              		.loc 20 1822 5 view .LVU1572
 5826 0000 9FEDDA7A 		vldr.32	s14, .L414
1822:Veno-Echo.cpp ****     {
 5827              		.loc 20 1822 17 is_stmt 0 view .LVU1573
 5828 0004 D0ED007A 		vldr.32	s15, [r0]
1822:Veno-Echo.cpp ****     {
 5829              		.loc 20 1822 5 view .LVU1574
 5830 0008 F4EEC77A 		vcmpe.f32	s15, s14
1821:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5831              		.loc 20 1821 1 view .LVU1575
 5832 000c 38B5     		push	{r3, r4, r5, lr}
 5833              		.cfi_def_cfa_offset 16
 5834              		.cfi_offset 3, -16
 5835              		.cfi_offset 4, -12
 5836              		.cfi_offset 5, -8
 5837              		.cfi_offset 14, -4
1822:Veno-Echo.cpp ****     {
 5838              		.loc 20 1822 5 view .LVU1576
 5839 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1821:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5840              		.loc 20 1821 1 view .LVU1577
 5841 0012 0446     		mov	r4, r0
 5842              	.LBB1494:
 5843              	.LBB1495:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5844              		.loc 20 70 28 view .LVU1578
 5845 0014 D64B     		ldr	r3, .L414+4
 5846              	.LBE1495:
 5847              	.LBE1494:
1822:Veno-Echo.cpp ****     {
 5848              		.loc 20 1822 5 view .LVU1579
 5849 0016 C0F23281 		blt	.L330
1822:Veno-Echo.cpp ****     {
 5850              		.loc 20 1822 43 discriminator 1 view .LVU1580
 5851 001a 9FEDD67A 		vldr.32	s14, .L414+8
 5852 001e F4EEC77A 		vcmpe.f32	s15, s14
 5853 0022 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5854 0026 00F22A81 		bhi	.L330
1824:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5855              		.loc 20 1824 9 is_stmt 1 view .LVU1581
 5856              	.LVL288:
 5857              	.LBB1509:
 5858              	.LBI1494:
  68:Veno-Echo.cpp ****     {
 5859              		.loc 20 68 10 view .LVU1582
 5860              	.LBB1507:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 223


  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5861              		.loc 20 70 9 view .LVU1583
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5862              		.loc 20 70 28 is_stmt 0 view .LVU1584
 5863 002a 93ED017A 		vldr.32	s14, [r3, #4]
 5864              	.LVL289:
 5865              	.LBB1496:
 5866              	.LBI1496:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5867              		.loc 21 75 3 is_stmt 1 view .LVU1585
 5868              	.LBB1497:
 5869              		.loc 21 76 5 view .LVU1586
 5870              		.loc 21 76 5 is_stmt 0 view .LVU1587
 5871              	.LBE1497:
 5872              	.LBE1496:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5873              		.loc 20 70 53 view .LVU1588
 5874 002e 9FEDD26A 		vldr.32	s12, .L414+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5875              		.loc 20 70 15 view .LVU1589
 5876 0032 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5877              		.loc 20 70 53 view .LVU1590
 5878 0036 27EE067A 		vmul.f32	s14, s14, s12
 5879              	.LBB1499:
 5880              	.LBB1498:
 5881              		.loc 21 76 31 view .LVU1591
 5882 003a F0EEE66A 		vabs.f32	s13, s13
 5883              	.LBE1498:
 5884              	.LBE1499:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5885              		.loc 20 70 9 view .LVU1592
 5886 003e F4EEC76A 		vcmpe.f32	s13, s14
 5887 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5888 0046 0FDD     		ble	.L333
  74:Veno-Echo.cpp ****             //del -> Reset();
 5889              		.loc 20 74 29 view .LVU1593
 5890 0048 BCEEE77A 		vcvt.u32.f32	s14, s15
 5891              	.LBB1500:
 5892              	.LBB1501:
 5893              		.loc 19 72 9 view .LVU1594
 5894 004c CB4D     		ldr	r5, .L414+16
 5895              	.LBE1501:
 5896              	.LBE1500:
 5897              	.LBE1507:
 5898              	.LBE1509:
1824:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5899              		.loc 20 1824 33 view .LVU1595
 5900 004e 1968     		ldr	r1, [r3]
 5901              	.LBB1510:
 5902              	.LBB1508:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5903              		.loc 20 73 13 is_stmt 1 view .LVU1596
 5904              	.LBB1504:
 5905              	.LBB1502:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5906              		.loc 19 71 9 is_stmt 0 view .LVU1597
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 224


 5907 0050 0020     		movs	r0, #0
 5908              	.LVL290:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5909              		.loc 19 71 9 view .LVU1598
 5910              	.LBE1502:
 5911              	.LBE1504:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5912              		.loc 20 73 27 view .LVU1599
 5913 0052 C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5914              		.loc 20 74 13 is_stmt 1 view .LVU1600
 5915              	.LVL291:
 5916              	.LBB1505:
 5917              	.LBI1500:
  69:delayline_reverse.h ****     {
 5918              		.loc 19 69 17 view .LVU1601
  69:delayline_reverse.h ****     {
 5919              		.loc 19 69 17 is_stmt 0 view .LVU1602
 5920              	.LBE1505:
  74:Veno-Echo.cpp ****             //del -> Reset();
 5921              		.loc 20 74 29 view .LVU1603
 5922 0056 17EE102A 		vmov	r2, s14	@ int
 5923              	.LBB1506:
 5924              	.LBB1503:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5925              		.loc 19 71 9 view .LVU1604
 5926 005a 0860     		str	r0, [r1]	@ float
 5927 005c D4ED007A 		vldr.32	s15, [r4]
 5928              	.LVL292:
 5929              		.loc 19 72 9 view .LVU1605
 5930 0060 AA42     		cmp	r2, r5
 5931 0062 28BF     		it	cs
 5932 0064 2A46     		movcs	r2, r5
 5933 0066 0A61     		str	r2, [r1, #16]
 5934              	.LVL293:
 5935              	.L333:
 5936              		.loc 19 72 9 view .LVU1606
 5937              	.LBE1503:
 5938              	.LBE1506:
 5939              	.LBE1508:
 5940              	.LBE1510:
1825:Veno-Echo.cpp ****     }
 5941              		.loc 20 1825 9 is_stmt 1 view .LVU1607
 5942              	.LBB1511:
 5943              	.LBI1511:
  68:Veno-Echo.cpp ****     {
 5944              		.loc 20 68 10 view .LVU1608
 5945              	.LBB1512:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5946              		.loc 20 70 9 view .LVU1609
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5947              		.loc 20 70 28 is_stmt 0 view .LVU1610
 5948 0068 C54B     		ldr	r3, .L414+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5949              		.loc 20 70 53 view .LVU1611
 5950 006a 9FEDC36A 		vldr.32	s12, .L414+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 225


 5951              		.loc 20 70 28 view .LVU1612
 5952 006e 93ED017A 		vldr.32	s14, [r3, #4]
 5953              	.LVL294:
 5954              	.LBB1513:
 5955              	.LBI1513:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5956              		.loc 21 75 3 is_stmt 1 view .LVU1613
 5957              	.LBB1514:
 5958              		.loc 21 76 5 view .LVU1614
 5959              		.loc 21 76 5 is_stmt 0 view .LVU1615
 5960              	.LBE1514:
 5961              	.LBE1513:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5962              		.loc 20 70 15 view .LVU1616
 5963 0072 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5964              		.loc 20 70 53 view .LVU1617
 5965 0076 27EE067A 		vmul.f32	s14, s14, s12
 5966              	.LBB1516:
 5967              	.LBB1515:
 5968              		.loc 21 76 31 view .LVU1618
 5969 007a F0EEE66A 		vabs.f32	s13, s13
 5970              	.LBE1515:
 5971              	.LBE1516:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5972              		.loc 20 70 9 view .LVU1619
 5973 007e F4EEC76A 		vcmpe.f32	s13, s14
 5974 0082 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5975 0086 00F3D381 		bgt	.L409
 5976              	.LVL295:
 5977              	.L336:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5978              		.loc 20 70 9 view .LVU1620
 5979              	.LBE1512:
 5980              	.LBE1511:
1833:Veno-Echo.cpp ****     {
 5981              		.loc 20 1833 5 is_stmt 1 view .LVU1621
 5982 008a F7EE007A 		vmov.f32	s15, #1.0e+0
1833:Veno-Echo.cpp ****     {
 5983              		.loc 20 1833 17 is_stmt 0 view .LVU1622
 5984 008e 94ED010A 		vldr.32	s0, [r4, #4]
1833:Veno-Echo.cpp ****     {
 5985              		.loc 20 1833 5 view .LVU1623
 5986 0092 B4EEE70A 		vcmpe.f32	s0, s15
 5987 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5988 009a 06DB     		blt	.L341
1833:Veno-Echo.cpp ****     {
 5989              		.loc 20 1833 35 discriminator 1 view .LVU1624
 5990 009c F0EE087A 		vmov.f32	s15, #3.0e+0
 5991 00a0 B4EEE70A 		vcmpe.f32	s0, s15
 5992 00a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5993 00a8 01D9     		bls	.L406
 5994              	.L341:
1839:Veno-Echo.cpp ****     }
 5995              		.loc 20 1839 9 is_stmt 1 view .LVU1625
1839:Veno-Echo.cpp ****     }
 5996              		.loc 20 1839 30 is_stmt 0 view .LVU1626
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 226


 5997 00aa B7EE000A 		vmov.f32	s0, #1.0e+0
 5998              	.L406:
 5999 00ae B548     		ldr	r0, .L414+24
 6000 00b0 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 6001              	.LVL296:
1842:Veno-Echo.cpp ****     {
 6002              		.loc 20 1842 5 is_stmt 1 view .LVU1627
1842:Veno-Echo.cpp ****     {
 6003              		.loc 20 1842 17 is_stmt 0 view .LVU1628
 6004 00b4 D4ED027A 		vldr.32	s15, [r4, #8]
1842:Veno-Echo.cpp ****     {
 6005              		.loc 20 1842 5 view .LVU1629
 6006 00b8 F5EEC07A 		vcmpe.f32	s15, #0
 6007 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6008 00c0 C0F2B381 		blt	.L401
1842:Veno-Echo.cpp ****     {
 6009              		.loc 20 1842 42 discriminator 1 view .LVU1630
 6010 00c4 DFEDB06A 		vldr.32	s13, .L414+28
1848:Veno-Echo.cpp ****     }
 6011              		.loc 20 1848 18 discriminator 1 view .LVU1631
 6012 00c8 9FEDB07A 		vldr.32	s14, .L414+32
 6013 00cc F4EEE67A 		vcmpe.f32	s15, s13
 6014 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6015 00d4 88BF     		it	hi
 6016 00d6 F0EE477A 		vmovhi.f32	s15, s14
 6017              	.L345:
1851:Veno-Echo.cpp ****     {
 6018              		.loc 20 1851 17 view .LVU1632
 6019 00da 94ED030A 		vldr.32	s0, [r4, #12]
1851:Veno-Echo.cpp ****     {
 6020              		.loc 20 1851 5 view .LVU1633
 6021 00de 9FEDAC7A 		vldr.32	s14, .L414+36
 6022 00e2 AC4B     		ldr	r3, .L414+40
 6023 00e4 B4EEC70A 		vcmpe.f32	s0, s14
 6024              	.LBB1527:
 6025              	.LBB1528:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6026              		.loc 8 60 20 view .LVU1634
 6027 00e8 AB4D     		ldr	r5, .L414+44
 6028 00ea C3ED007A 		vstr.32	s15, [r3]
 6029              	.LBE1528:
 6030              	.LBE1527:
1851:Veno-Echo.cpp ****     {
 6031              		.loc 20 1851 5 is_stmt 1 view .LVU1635
 6032 00ee F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6033 00f2 06DB     		blt	.L348
1851:Veno-Echo.cpp ****     {
 6034              		.loc 20 1851 40 is_stmt 0 discriminator 1 view .LVU1636
 6035 00f4 F2EE047A 		vmov.f32	s15, #1.0e+1
 6036 00f8 B4EEE70A 		vcmpe.f32	s0, s15
 6037 00fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6038 0100 01D9     		bls	.L407
 6039              	.L348:
1857:Veno-Echo.cpp ****     }
 6040              		.loc 20 1857 9 is_stmt 1 view .LVU1637
 6041              	.LVL297:
 6042              	.LBB1529:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 227


 6043              	.LBI1529:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 6044              		.loc 8 58 17 view .LVU1638
 6045              	.LBB1530:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6046              		.loc 8 60 9 view .LVU1639
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6047              		.loc 8 60 20 is_stmt 0 view .LVU1640
 6048 0102 9FEDA60A 		vldr.32	s0, .L414+48
 6049              	.LVL298:
 6050              	.L407:
 6051              		.loc 8 61 34 view .LVU1641
 6052 0106 2846     		mov	r0, r5
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6053              		.loc 8 60 20 view .LVU1642
 6054 0108 85ED020A 		vstr.32	s0, [r5, #8]
 6055              		.loc 8 61 9 is_stmt 1 view .LVU1643
 6056              		.loc 8 61 34 is_stmt 0 view .LVU1644
 6057 010c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 6058              	.LVL299:
 6059              	.LBE1530:
 6060              	.LBE1529:
1860:Veno-Echo.cpp ****     {
 6061              		.loc 20 1860 5 view .LVU1645
 6062 0110 DFEDA37A 		vldr.32	s15, .L414+52
 6063              	.LBB1532:
 6064              	.LBB1531:
 6065              		.loc 8 61 20 view .LVU1646
 6066 0114 85ED060A 		vstr.32	s0, [r5, #24]
 6067              	.LBE1531:
 6068              	.LBE1532:
1860:Veno-Echo.cpp ****     {
 6069              		.loc 20 1860 5 is_stmt 1 view .LVU1647
1860:Veno-Echo.cpp ****     {
 6070              		.loc 20 1860 17 is_stmt 0 view .LVU1648
 6071 0118 94ED050A 		vldr.32	s0, [r4, #20]
1860:Veno-Echo.cpp ****     {
 6072              		.loc 20 1860 5 view .LVU1649
 6073 011c B4EEE70A 		vcmpe.f32	s0, s15
 6074 0120 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6075 0124 07DB     		blt	.L352
1860:Veno-Echo.cpp ****     {
 6076              		.loc 20 1860 40 discriminator 1 view .LVU1650
 6077 0126 DFED9F7A 		vldr.32	s15, .L414+56
 6078 012a B4EEE70A 		vcmpe.f32	s0, s15
 6079 012e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6080 0132 40F26781 		bls	.L410
 6081              	.L352:
1869:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 6082              		.loc 20 1869 9 is_stmt 1 view .LVU1651
1869:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 6083              		.loc 20 1869 22 is_stmt 0 view .LVU1652
 6084 0136 9FED9B0A 		vldr.32	s0, .L414+56
 6085 013a 9B48     		ldr	r0, .L414+60
 6086 013c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6087              	.LVL300:
1870:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 228


 6088              		.loc 20 1870 9 is_stmt 1 view .LVU1653
1870:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 6089              		.loc 20 1870 22 is_stmt 0 view .LVU1654
 6090 0140 9FED980A 		vldr.32	s0, .L414+56
 6091 0144 9948     		ldr	r0, .L414+64
 6092 0146 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6093              	.LVL301:
1871:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 6094              		.loc 20 1871 9 is_stmt 1 view .LVU1655
1871:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 6095              		.loc 20 1871 27 is_stmt 0 view .LVU1656
 6096 014a 9FED960A 		vldr.32	s0, .L414+56
 6097 014e 9848     		ldr	r0, .L414+68
 6098 0150 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6099              	.LVL302:
1872:Veno-Echo.cpp ****     }
 6100              		.loc 20 1872 9 is_stmt 1 view .LVU1657
1872:Veno-Echo.cpp ****     }
 6101              		.loc 20 1872 27 is_stmt 0 view .LVU1658
 6102 0154 9FED930A 		vldr.32	s0, .L414+56
 6103 0158 9648     		ldr	r0, .L414+72
 6104 015a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6105              	.LVL303:
 6106              	.L355:
1875:Veno-Echo.cpp ****     {
 6107              		.loc 20 1875 5 is_stmt 1 view .LVU1659
1875:Veno-Echo.cpp ****     {
 6108              		.loc 20 1875 17 is_stmt 0 view .LVU1660
 6109 015e 94ED040A 		vldr.32	s0, [r4, #16]
1875:Veno-Echo.cpp ****     {
 6110              		.loc 20 1875 5 view .LVU1661
 6111 0162 DFED957A 		vldr.32	s15, .L414+76
 6112 0166 B4EEE70A 		vcmpe.f32	s0, s15
 6113 016a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6114 016e 07DB     		blt	.L356
1875:Veno-Echo.cpp ****     {
 6115              		.loc 20 1875 40 discriminator 1 view .LVU1662
 6116 0170 DFED927A 		vldr.32	s15, .L414+80
 6117 0174 B4EEE70A 		vcmpe.f32	s0, s15
 6118 0178 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6119 017c 40F2E380 		bls	.L411
 6120              	.L356:
1884:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 6121              		.loc 20 1884 9 is_stmt 1 view .LVU1663
1884:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 6122              		.loc 20 1884 22 is_stmt 0 view .LVU1664
 6123 0180 9FED8F0A 		vldr.32	s0, .L414+84
 6124 0184 8F48     		ldr	r0, .L414+88
 6125 0186 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6126              	.LVL304:
1885:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 6127              		.loc 20 1885 9 is_stmt 1 view .LVU1665
1885:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 6128              		.loc 20 1885 22 is_stmt 0 view .LVU1666
 6129 018a 9FED8D0A 		vldr.32	s0, .L414+84
 6130 018e 8E48     		ldr	r0, .L414+92
 6131 0190 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 229


 6132              	.LVL305:
1886:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 6133              		.loc 20 1886 9 is_stmt 1 view .LVU1667
1886:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 6134              		.loc 20 1886 27 is_stmt 0 view .LVU1668
 6135 0194 9FED8A0A 		vldr.32	s0, .L414+84
 6136 0198 8C48     		ldr	r0, .L414+96
 6137 019a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6138              	.LVL306:
1887:Veno-Echo.cpp **** 
 6139              		.loc 20 1887 9 is_stmt 1 view .LVU1669
1887:Veno-Echo.cpp **** 
 6140              		.loc 20 1887 27 is_stmt 0 view .LVU1670
 6141 019e 9FED880A 		vldr.32	s0, .L414+84
 6142 01a2 8B48     		ldr	r0, .L414+100
 6143 01a4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6144              	.LVL307:
 6145              	.L359:
1891:Veno-Echo.cpp ****     {
 6146              		.loc 20 1891 5 is_stmt 1 view .LVU1671
1891:Veno-Echo.cpp ****     {
 6147              		.loc 20 1891 17 is_stmt 0 view .LVU1672
 6148 01a8 94ED060A 		vldr.32	s0, [r4, #24]
1891:Veno-Echo.cpp ****     {
 6149              		.loc 20 1891 5 view .LVU1673
 6150 01ac B5EEC00A 		vcmpe.f32	s0, #0
 6151 01b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6152 01b4 07DB     		blt	.L360
1891:Veno-Echo.cpp ****     {
 6153              		.loc 20 1891 38 discriminator 1 view .LVU1674
 6154 01b6 F6EE007A 		vmov.f32	s15, #5.0e-1
 6155 01ba B4EEE70A 		vcmpe.f32	s0, s15
 6156 01be F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6157 01c2 40F29980 		bls	.L412
 6158              	.L360:
1905:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 6159              		.loc 20 1905 9 is_stmt 1 view .LVU1675
1905:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 6160              		.loc 20 1905 26 is_stmt 0 view .LVU1676
 6161 01c6 9FED710A 		vldr.32	s0, .L414+32
 6162 01ca 7948     		ldr	r0, .L414+68
 6163 01cc FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6164              	.LVL308:
1906:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 6165              		.loc 20 1906 9 is_stmt 1 view .LVU1677
1906:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 6166              		.loc 20 1906 26 is_stmt 0 view .LVU1678
 6167 01d0 9FED6E0A 		vldr.32	s0, .L414+32
 6168 01d4 7D48     		ldr	r0, .L414+96
 6169 01d6 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6170              	.LVL309:
1907:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 6171              		.loc 20 1907 9 is_stmt 1 view .LVU1679
1907:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 6172              		.loc 20 1907 26 is_stmt 0 view .LVU1680
 6173 01da 9FED6C0A 		vldr.32	s0, .L414+32
 6174 01de 7548     		ldr	r0, .L414+72
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 230


 6175 01e0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6176              	.LVL310:
1908:Veno-Echo.cpp ****     }
 6177              		.loc 20 1908 9 is_stmt 1 view .LVU1681
1908:Veno-Echo.cpp ****     }
 6178              		.loc 20 1908 26 is_stmt 0 view .LVU1682
 6179 01e4 9FED690A 		vldr.32	s0, .L414+32
 6180 01e8 7948     		ldr	r0, .L414+100
 6181 01ea FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6182              	.LVL311:
 6183              	.L363:
1911:Veno-Echo.cpp ****     {
 6184              		.loc 20 1911 5 is_stmt 1 view .LVU1683
1911:Veno-Echo.cpp ****     {
 6185              		.loc 20 1911 16 is_stmt 0 view .LVU1684
 6186 01ee D4ED077A 		vldr.32	s15, [r4, #28]
1911:Veno-Echo.cpp ****     {
 6187              		.loc 20 1911 5 view .LVU1685
 6188 01f2 9FED787A 		vldr.32	s14, .L414+104
1917:Veno-Echo.cpp ****     }
 6189              		.loc 20 1917 21 view .LVU1686
 6190 01f6 784B     		ldr	r3, .L414+108
1911:Veno-Echo.cpp ****     {
 6191              		.loc 20 1911 5 view .LVU1687
 6192 01f8 F4EEC77A 		vcmpe.f32	s15, s14
 6193 01fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6194 0200 06D4     		bmi	.L367
1915:Veno-Echo.cpp ****     {
 6195              		.loc 20 1915 14 is_stmt 1 view .LVU1688
 6196 0202 9FED767A 		vldr.32	s14, .L414+112
 6197 0206 F4EEC77A 		vcmpe.f32	s15, s14
 6198 020a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6199 020e 70DC     		bgt	.L413
 6200              	.L367:
1913:Veno-Echo.cpp ****     }
 6201              		.loc 20 1913 9 view .LVU1689
1913:Veno-Echo.cpp ****     }
 6202              		.loc 20 1913 21 is_stmt 0 view .LVU1690
 6203 0210 0022     		movs	r2, #0
 6204 0212 1A70     		strb	r2, [r3]
 6205              	.L366:
1925:Veno-Echo.cpp ****         && (setting.tapLength <= static_cast<float> (maxtap)) )
 6206              		.loc 20 1925 5 is_stmt 1 view .LVU1691
1925:Veno-Echo.cpp ****         && (setting.tapLength <= static_cast<float> (maxtap)) )
 6207              		.loc 20 1925 18 is_stmt 0 view .LVU1692
 6208 0214 94ED080A 		vldr.32	s0, [r4, #32]
1925:Veno-Echo.cpp ****         && (setting.tapLength <= static_cast<float> (maxtap)) )
 6209              		.loc 20 1925 5 view .LVU1693
 6210 0218 DFED717A 		vldr.32	s15, .L414+116
 6211 021c B4EEE70A 		vcmpe.f32	s0, s15
 6212 0220 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6213 0224 06DB     		blt	.L369
1926:Veno-Echo.cpp ****     {
 6214              		.loc 20 1926 9 view .LVU1694
 6215 0226 DFED6F7A 		vldr.32	s15, .L414+120
 6216 022a B4EEE70A 		vcmpe.f32	s0, s15
 6217 022e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 231


 6218 0232 01D9     		bls	.L408
 6219              	.L369:
1934:Veno-Echo.cpp ****         tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 6220              		.loc 20 1934 9 is_stmt 1 view .LVU1695
1934:Veno-Echo.cpp ****         tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 6221              		.loc 20 1934 31 is_stmt 0 view .LVU1696
 6222 0234 9FED6C0A 		vldr.32	s0, .L414+124
 6223              	.L408:
 6224 0238 5248     		ldr	r0, .L414+24
 6225 023a FFF7FEFF 		bl	_ZN8Taptempo12setTapLengthEf
 6226              	.LVL312:
1935:Veno-Echo.cpp ****     }
 6227              		.loc 20 1935 9 is_stmt 1 view .LVU1697
1935:Veno-Echo.cpp ****     }
 6228              		.loc 20 1935 31 is_stmt 0 view .LVU1698
 6229 023e 5148     		ldr	r0, .L414+24
 6230 0240 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 6231              	.LVL313:
 6232 0244 6948     		ldr	r0, .L414+128
 6233 0246 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 6234              	.LVL314:
1938:Veno-Echo.cpp ****     {
 6235              		.loc 20 1938 5 is_stmt 1 view .LVU1699
 6236 024a DFED697A 		vldr.32	s15, .L414+132
 6237 024e 94ED097A 		vldr.32	s14, [r4, #36]
1940:Veno-Echo.cpp ****     }
 6238              		.loc 20 1940 24 is_stmt 0 view .LVU1700
 6239 0252 6848     		ldr	r0, .L414+136
1938:Veno-Echo.cpp ****     {
 6240              		.loc 20 1938 5 view .LVU1701
 6241 0254 B4EEE77A 		vcmpe.f32	s14, s15
 6242 0258 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6243 025c 42DD     		ble	.L403
1940:Veno-Echo.cpp ****     }
 6244              		.loc 20 1940 9 is_stmt 1 view .LVU1702
1940:Veno-Echo.cpp ****     }
 6245              		.loc 20 1940 24 is_stmt 0 view .LVU1703
 6246 025e FFF7FEFF 		bl	_ZN9ButtonLED6turnONEv
 6247              	.LVL315:
 6248              	.L375:
1947:Veno-Echo.cpp ****     {
 6249              		.loc 20 1947 5 is_stmt 1 view .LVU1704
 6250 0262 DFED637A 		vldr.32	s15, .L414+132
 6251 0266 94ED0A7A 		vldr.32	s14, [r4, #40]
1949:Veno-Echo.cpp ****     }
 6252              		.loc 20 1949 24 is_stmt 0 view .LVU1705
 6253 026a 6348     		ldr	r0, .L414+140
1947:Veno-Echo.cpp ****     {
 6254              		.loc 20 1947 5 view .LVU1706
 6255 026c B4EEE77A 		vcmpe.f32	s14, s15
 6256 0270 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6257 0274 39DD     		ble	.L404
1949:Veno-Echo.cpp ****     }
 6258              		.loc 20 1949 9 is_stmt 1 view .LVU1707
1956:Veno-Echo.cpp **** 
 6259              		.loc 20 1956 1 is_stmt 0 view .LVU1708
 6260 0276 BDE83840 		pop	{r3, r4, r5, lr}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 232


 6261              		.cfi_remember_state
 6262              		.cfi_restore 14
 6263              		.cfi_restore 5
 6264              		.cfi_restore 4
 6265              		.cfi_restore 3
 6266              		.cfi_def_cfa_offset 0
 6267              	.LVL316:
1949:Veno-Echo.cpp ****     }
 6268              		.loc 20 1949 24 view .LVU1709
 6269 027a FFF7FEBF 		b	_ZN9ButtonLED6turnONEv
 6270              	.LVL317:
 6271              	.L330:
 6272              		.cfi_restore_state
1829:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 6273              		.loc 20 1829 9 is_stmt 1 view .LVU1710
 6274              	.LBB1533:
 6275              	.LBI1533:
  68:Veno-Echo.cpp ****     {
 6276              		.loc 20 68 10 view .LVU1711
 6277              	.LBB1534:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6278              		.loc 20 70 9 view .LVU1712
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6279              		.loc 20 70 28 is_stmt 0 view .LVU1713
 6280 027e D3ED017A 		vldr.32	s15, [r3, #4]
 6281              	.LVL318:
 6282              	.LBB1535:
 6283              	.LBI1535:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 6284              		.loc 21 75 3 is_stmt 1 view .LVU1714
 6285              	.LBB1536:
 6286              		.loc 21 76 5 view .LVU1715
 6287              		.loc 21 76 5 is_stmt 0 view .LVU1716
 6288              	.LBE1536:
 6289              	.LBE1535:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6290              		.loc 20 70 15 view .LVU1717
 6291 0282 DFED5E6A 		vldr.32	s13, .L414+144
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6292              		.loc 20 70 53 view .LVU1718
 6293 0286 9FED3C6A 		vldr.32	s12, .L414+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6294              		.loc 20 70 15 view .LVU1719
 6295 028a 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6296              		.loc 20 70 53 view .LVU1720
 6297 028e 67EE867A 		vmul.f32	s15, s15, s12
 6298              	.LBB1538:
 6299              	.LBB1537:
 6300              		.loc 21 76 31 view .LVU1721
 6301 0292 B0EEC77A 		vabs.f32	s14, s14
 6302              	.LBE1537:
 6303              	.LBE1538:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6304              		.loc 20 70 9 view .LVU1722
 6305 0296 B4EEE77A 		vcmpe.f32	s14, s15
 6306 029a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 233


 6307 029e 06DD     		ble	.L337
 6308              	.LBE1534:
 6309              	.LBE1533:
1829:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 6310              		.loc 20 1829 33 view .LVU1723
 6311 02a0 1A68     		ldr	r2, [r3]
 6312              	.LBB1544:
 6313              	.LBB1543:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6314              		.loc 20 73 13 is_stmt 1 view .LVU1724
 6315              	.LBB1539:
 6316              	.LBB1540:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6317              		.loc 19 71 9 is_stmt 0 view .LVU1725
 6318 02a2 0021     		movs	r1, #0
 6319              		.loc 19 72 9 view .LVU1726
 6320 02a4 5648     		ldr	r0, .L414+148
 6321              	.LVL319:
 6322              		.loc 19 72 9 view .LVU1727
 6323              	.LBE1540:
 6324              	.LBE1539:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6325              		.loc 20 73 27 view .LVU1728
 6326 02a6 C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6327              		.loc 20 74 13 is_stmt 1 view .LVU1729
 6328              	.LVL320:
 6329              	.LBB1542:
 6330              	.LBI1539:
  69:delayline_reverse.h ****     {
 6331              		.loc 19 69 17 view .LVU1730
 6332              	.LBB1541:
 6333              		.loc 19 72 9 is_stmt 0 view .LVU1731
 6334 02aa 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6335              		.loc 19 71 9 view .LVU1732
 6336 02ac 1160     		str	r1, [r2]	@ float
 6337              	.LVL321:
 6338              	.L337:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6339              		.loc 19 71 9 view .LVU1733
 6340              	.LBE1541:
 6341              	.LBE1542:
 6342              	.LBE1543:
 6343              	.LBE1544:
1830:Veno-Echo.cpp ****     }
 6344              		.loc 20 1830 9 is_stmt 1 view .LVU1734
 6345              	.LBB1545:
 6346              	.LBI1545:
  68:Veno-Echo.cpp ****     {
 6347              		.loc 20 68 10 view .LVU1735
 6348              	.LBB1546:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6349              		.loc 20 70 9 view .LVU1736
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6350              		.loc 20 70 28 is_stmt 0 view .LVU1737
 6351 02ae 344B     		ldr	r3, .L414+20
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 234


  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6352              		.loc 20 70 15 view .LVU1738
 6353 02b0 DFED526A 		vldr.32	s13, .L414+144
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6354              		.loc 20 70 28 view .LVU1739
 6355 02b4 D3ED017A 		vldr.32	s15, [r3, #4]
 6356              	.LVL322:
 6357              	.LBB1547:
 6358              	.LBI1547:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 6359              		.loc 21 75 3 is_stmt 1 view .LVU1740
 6360              	.LBB1548:
 6361              		.loc 21 76 5 view .LVU1741
 6362              		.loc 21 76 5 is_stmt 0 view .LVU1742
 6363              	.LBE1548:
 6364              	.LBE1547:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6365              		.loc 20 70 53 view .LVU1743
 6366 02b8 9FED2F6A 		vldr.32	s12, .L414+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6367              		.loc 20 70 15 view .LVU1744
 6368 02bc 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6369              		.loc 20 70 53 view .LVU1745
 6370 02c0 67EE867A 		vmul.f32	s15, s15, s12
 6371              	.LBB1550:
 6372              	.LBB1549:
 6373              		.loc 21 76 31 view .LVU1746
 6374 02c4 B0EEC77A 		vabs.f32	s14, s14
 6375              	.LBE1549:
 6376              	.LBE1550:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6377              		.loc 20 70 9 view .LVU1747
 6378 02c8 B4EEE77A 		vcmpe.f32	s14, s15
 6379 02cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6380 02d0 7FF7DBAE 		ble	.L336
 6381              	.LBE1546:
 6382              	.LBE1545:
1830:Veno-Echo.cpp ****     }
 6383              		.loc 20 1830 33 view .LVU1748
 6384 02d4 1A68     		ldr	r2, [r3]
 6385              	.LBB1556:
 6386              	.LBB1555:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6387              		.loc 20 73 13 is_stmt 1 view .LVU1749
 6388              	.LBB1551:
 6389              	.LBB1552:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6390              		.loc 19 71 9 is_stmt 0 view .LVU1750
 6391 02d6 0021     		movs	r1, #0
 6392              		.loc 19 72 9 view .LVU1751
 6393 02d8 4948     		ldr	r0, .L414+148
 6394              	.LBE1552:
 6395              	.LBE1551:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6396              		.loc 20 73 27 view .LVU1752
 6397 02da C3ED016A 		vstr.32	s13, [r3, #4]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 235


  74:Veno-Echo.cpp ****             //del -> Reset();
 6398              		.loc 20 74 13 is_stmt 1 view .LVU1753
 6399              	.LVL323:
 6400              	.LBB1554:
 6401              	.LBI1551:
  69:delayline_reverse.h ****     {
 6402              		.loc 19 69 17 view .LVU1754
 6403              	.LBB1553:
 6404              		.loc 19 72 9 is_stmt 0 view .LVU1755
 6405 02de 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6406              		.loc 19 71 9 view .LVU1756
 6407 02e0 1160     		str	r1, [r2]	@ float
  73:delayline_reverse.h ****     }
 6408              		.loc 19 73 5 view .LVU1757
 6409 02e2 D2E6     		b	.L336
 6410              	.LVL324:
 6411              	.L403:
 6412              		.loc 19 73 5 view .LVU1758
 6413              	.LBE1553:
 6414              	.LBE1554:
 6415              	.LBE1555:
 6416              	.LBE1556:
1944:Veno-Echo.cpp ****     }
 6417              		.loc 20 1944 9 is_stmt 1 view .LVU1759
1944:Veno-Echo.cpp ****     }
 6418              		.loc 20 1944 25 is_stmt 0 view .LVU1760
 6419 02e4 FFF7FEFF 		bl	_ZN9ButtonLED7turnOFFEv
 6420              	.LVL325:
 6421 02e8 BBE7     		b	.L375
 6422              	.L404:
1953:Veno-Echo.cpp ****     }
 6423              		.loc 20 1953 9 is_stmt 1 view .LVU1761
1956:Veno-Echo.cpp **** 
 6424              		.loc 20 1956 1 is_stmt 0 view .LVU1762
 6425 02ea BDE83840 		pop	{r3, r4, r5, lr}
 6426              		.cfi_remember_state
 6427              		.cfi_restore 14
 6428              		.cfi_restore 5
 6429              		.cfi_restore 4
 6430              		.cfi_restore 3
 6431              		.cfi_def_cfa_offset 0
 6432              	.LVL326:
1953:Veno-Echo.cpp ****     }
 6433              		.loc 20 1953 25 view .LVU1763
 6434 02ee FFF7FEBF 		b	_ZN9ButtonLED7turnOFFEv
 6435              	.LVL327:
 6436              	.L413:
 6437              		.cfi_restore_state
1917:Veno-Echo.cpp ****     }
 6438              		.loc 20 1917 9 is_stmt 1 view .LVU1764
1917:Veno-Echo.cpp ****     }
 6439              		.loc 20 1917 21 is_stmt 0 view .LVU1765
 6440 02f2 0122     		movs	r2, #1
 6441 02f4 1A70     		strb	r2, [r3]
 6442 02f6 8DE7     		b	.L366
 6443              	.L412:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 236


1893:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 6444              		.loc 20 1893 9 is_stmt 1 view .LVU1766
1893:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 6445              		.loc 20 1893 21 is_stmt 0 view .LVU1767
 6446 02f8 2B48     		ldr	r0, .L414+60
 6447 02fa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6448              	.LVL328:
1894:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 6449              		.loc 20 1894 9 is_stmt 1 view .LVU1768
1894:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 6450              		.loc 20 1894 21 is_stmt 0 view .LVU1769
 6451 02fe 94ED060A 		vldr.32	s0, [r4, #24]
 6452 0302 3048     		ldr	r0, .L414+88
 6453 0304 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6454              	.LVL329:
1895:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 6455              		.loc 20 1895 9 is_stmt 1 view .LVU1770
1895:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 6456              		.loc 20 1895 21 is_stmt 0 view .LVU1771
 6457 0308 94ED060A 		vldr.32	s0, [r4, #24]
 6458 030c 2748     		ldr	r0, .L414+64
 6459 030e FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6460              	.LVL330:
1896:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 6461              		.loc 20 1896 9 is_stmt 1 view .LVU1772
1896:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 6462              		.loc 20 1896 21 is_stmt 0 view .LVU1773
 6463 0312 94ED060A 		vldr.32	s0, [r4, #24]
 6464 0316 2C48     		ldr	r0, .L414+92
 6465 0318 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6466              	.LVL331:
1897:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 6467              		.loc 20 1897 9 is_stmt 1 view .LVU1774
1897:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 6468              		.loc 20 1897 26 is_stmt 0 view .LVU1775
 6469 031c 94ED060A 		vldr.32	s0, [r4, #24]
 6470 0320 2348     		ldr	r0, .L414+68
 6471 0322 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6472              	.LVL332:
1898:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 6473              		.loc 20 1898 9 is_stmt 1 view .LVU1776
1898:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 6474              		.loc 20 1898 26 is_stmt 0 view .LVU1777
 6475 0326 94ED060A 		vldr.32	s0, [r4, #24]
 6476 032a 2848     		ldr	r0, .L414+96
 6477 032c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6478              	.LVL333:
1899:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 6479              		.loc 20 1899 9 is_stmt 1 view .LVU1778
1899:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 6480              		.loc 20 1899 26 is_stmt 0 view .LVU1779
 6481 0330 94ED060A 		vldr.32	s0, [r4, #24]
 6482 0334 1F48     		ldr	r0, .L414+72
 6483 0336 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6484              	.LVL334:
1900:Veno-Echo.cpp ****     }
 6485              		.loc 20 1900 9 is_stmt 1 view .LVU1780
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 237


1900:Veno-Echo.cpp ****     }
 6486              		.loc 20 1900 26 is_stmt 0 view .LVU1781
 6487 033a 94ED060A 		vldr.32	s0, [r4, #24]
 6488 033e 2448     		ldr	r0, .L414+100
 6489 0340 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6490              	.LVL335:
 6491 0344 53E7     		b	.L363
 6492              	.L411:
1877:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 6493              		.loc 20 1877 9 is_stmt 1 view .LVU1782
1877:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 6494              		.loc 20 1877 22 is_stmt 0 view .LVU1783
 6495 0346 1F48     		ldr	r0, .L414+88
 6496 0348 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6497              	.LVL336:
1878:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 6498              		.loc 20 1878 9 is_stmt 1 view .LVU1784
1878:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 6499              		.loc 20 1878 22 is_stmt 0 view .LVU1785
 6500 034c 94ED040A 		vldr.32	s0, [r4, #16]
 6501 0350 1D48     		ldr	r0, .L414+92
 6502 0352 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6503              	.LVL337:
1879:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 6504              		.loc 20 1879 9 is_stmt 1 view .LVU1786
1879:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 6505              		.loc 20 1879 27 is_stmt 0 view .LVU1787
 6506 0356 94ED040A 		vldr.32	s0, [r4, #16]
 6507 035a 1C48     		ldr	r0, .L414+96
 6508 035c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6509              	.LVL338:
1880:Veno-Echo.cpp ****     }
 6510              		.loc 20 1880 9 is_stmt 1 view .LVU1788
1880:Veno-Echo.cpp ****     }
 6511              		.loc 20 1880 27 is_stmt 0 view .LVU1789
 6512 0360 94ED040A 		vldr.32	s0, [r4, #16]
 6513 0364 1A48     		ldr	r0, .L414+100
 6514 0366 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6515              	.LVL339:
 6516 036a 1DE7     		b	.L359
 6517              	.L415:
 6518              		.align	2
 6519              	.L414:
 6520 036c 0050C346 		.word	1187205120
 6521 0370 00000000 		.word	.LANCHOR2
 6522 0374 00606A48 		.word	1214930944
 6523 0378 0AD7A33B 		.word	1000593162
 6524 037c BF270900 		.word	599999
 6525 0380 00000000 		.word	.LANCHOR3
 6526 0384 00000000 		.word	.LANCHOR26
 6527 0388 0000FA43 		.word	1140457472
 6528 038c 00000000 		.word	0
 6529 0390 CDCCCC3D 		.word	1036831949
 6530 0394 00000000 		.word	.LANCHOR68
 6531 0398 00000000 		.word	.LANCHOR76
 6532 039c 9A99A140 		.word	1084332442
 6533 03a0 0080BB44 		.word	1153138688
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 238


 6534 03a4 00803B46 		.word	1178304512
 6535 03a8 00000000 		.word	.LANCHOR47
 6536 03ac 00000000 		.word	.LANCHOR48
 6537 03b0 00000000 		.word	.LANCHOR49
 6538 03b4 00000000 		.word	.LANCHOR50
 6539 03b8 0000C842 		.word	1120403456
 6540 03bc 00004844 		.word	1145569280
 6541 03c0 00004843 		.word	1128792064
 6542 03c4 00000000 		.word	.LANCHOR35
 6543 03c8 00000000 		.word	.LANCHOR36
 6544 03cc 00000000 		.word	.LANCHOR37
 6545 03d0 00000000 		.word	.LANCHOR38
 6546 03d4 6666E63E 		.word	1055286886
 6547 03d8 00000000 		.word	.LANCHOR83
 6548 03dc CDCC0C3F 		.word	1057803469
 6549 03e0 00409C46 		.word	1184645120
 6550 03e4 001BB74A 		.word	1253513984
 6551 03e8 0024F448 		.word	1223959552
 6552 03ec 00000000 		.word	.LANCHOR89
 6553 03f0 48E1FA3E 		.word	1056629064
 6554 03f4 00000000 		.word	.LANCHOR94
 6555 03f8 00000000 		.word	.LANCHOR95
 6556 03fc 00650148 		.word	1208050944
 6557 0400 94050200 		.word	132500
 6558              	.L410:
1862:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 6559              		.loc 20 1862 9 is_stmt 1 view .LVU1790
1862:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 6560              		.loc 20 1862 22 is_stmt 0 view .LVU1791
 6561 0404 1248     		ldr	r0, .L416
 6562 0406 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6563              	.LVL340:
1863:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 6564              		.loc 20 1863 9 is_stmt 1 view .LVU1792
1863:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 6565              		.loc 20 1863 22 is_stmt 0 view .LVU1793
 6566 040a 94ED050A 		vldr.32	s0, [r4, #20]
 6567 040e 1148     		ldr	r0, .L416+4
 6568 0410 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6569              	.LVL341:
1864:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 6570              		.loc 20 1864 9 is_stmt 1 view .LVU1794
1864:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 6571              		.loc 20 1864 27 is_stmt 0 view .LVU1795
 6572 0414 94ED050A 		vldr.32	s0, [r4, #20]
 6573 0418 0F48     		ldr	r0, .L416+8
 6574 041a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6575              	.LVL342:
1865:Veno-Echo.cpp ****     }
 6576              		.loc 20 1865 9 is_stmt 1 view .LVU1796
1865:Veno-Echo.cpp ****     }
 6577              		.loc 20 1865 27 is_stmt 0 view .LVU1797
 6578 041e 94ED050A 		vldr.32	s0, [r4, #20]
 6579 0422 0E48     		ldr	r0, .L416+12
 6580 0424 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6581              	.LVL343:
 6582 0428 99E6     		b	.L355
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 239


 6583              	.L401:
1848:Veno-Echo.cpp ****     }
 6584              		.loc 20 1848 18 view .LVU1798
 6585 042a DFED0D7A 		vldr.32	s15, .L416+16
 6586 042e 54E6     		b	.L345
 6587              	.LVL344:
 6588              	.L409:
 6589              	.LBB1557:
 6590              	.LBB1525:
  74:Veno-Echo.cpp ****             //del -> Reset();
 6591              		.loc 20 74 29 view .LVU1799
 6592 0430 BCEEE77A 		vcvt.u32.f32	s14, s15
 6593              	.LBB1517:
 6594              	.LBB1518:
  72:delayline_reverse.h ****     }
 6595              		.loc 19 72 9 view .LVU1800
 6596 0434 0B4D     		ldr	r5, .L416+20
 6597              	.LBE1518:
 6598              	.LBE1517:
 6599              	.LBE1525:
 6600              	.LBE1557:
1825:Veno-Echo.cpp ****     }
 6601              		.loc 20 1825 33 view .LVU1801
 6602 0436 1968     		ldr	r1, [r3]
 6603              	.LBB1558:
 6604              	.LBB1526:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6605              		.loc 20 73 13 is_stmt 1 view .LVU1802
 6606              	.LBB1522:
 6607              	.LBB1519:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6608              		.loc 19 71 9 is_stmt 0 view .LVU1803
 6609 0438 0020     		movs	r0, #0
 6610              	.LBE1519:
 6611              	.LBE1522:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6612              		.loc 20 73 27 view .LVU1804
 6613 043a C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6614              		.loc 20 74 29 view .LVU1805
 6615 043e 17EE102A 		vmov	r2, s14	@ int
 6616              	.LBB1523:
 6617              	.LBB1520:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6618              		.loc 19 71 9 view .LVU1806
 6619 0442 0860     		str	r0, [r1]	@ float
 6620              	.LVL345:
  72:delayline_reverse.h ****     }
 6621              		.loc 19 72 9 view .LVU1807
 6622 0444 AA42     		cmp	r2, r5
 6623 0446 28BF     		it	cs
 6624 0448 2A46     		movcs	r2, r5
 6625              	.LBE1520:
 6626              	.LBE1523:
  74:Veno-Echo.cpp ****             //del -> Reset();
 6627              		.loc 20 74 13 is_stmt 1 view .LVU1808
 6628              	.LVL346:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 240


 6629              	.LBB1524:
 6630              	.LBI1517:
  69:delayline_reverse.h ****     {
 6631              		.loc 19 69 17 view .LVU1809
 6632              	.LBB1521:
  72:delayline_reverse.h ****     }
 6633              		.loc 19 72 9 is_stmt 0 view .LVU1810
 6634 044a 0A61     		str	r2, [r1, #16]
 6635              		.loc 19 73 5 view .LVU1811
 6636 044c 1DE6     		b	.L336
 6637              	.L417:
 6638 044e 00BF     		.align	2
 6639              	.L416:
 6640 0450 00000000 		.word	.LANCHOR47
 6641 0454 00000000 		.word	.LANCHOR48
 6642 0458 00000000 		.word	.LANCHOR49
 6643 045c 00000000 		.word	.LANCHOR50
 6644 0460 00000000 		.word	0
 6645 0464 BF270900 		.word	599999
 6646              	.LBE1521:
 6647              	.LBE1524:
 6648              	.LBE1526:
 6649              	.LBE1558:
 6650              		.cfi_endproc
 6651              	.LFE4333:
 6653              		.section	.text.startup.main,"ax",%progbits
 6654              		.align	1
 6655              		.p2align 2,,3
 6656              		.global	main
 6657              		.syntax unified
 6658              		.thumb
 6659              		.thumb_func
 6660              		.fpu fpv5-d16
 6662              	main:
 6663              	.LFB4311:
 642:Veno-Echo.cpp ****     // initialize hardware.
 6664              		.loc 20 642 1 is_stmt 1 view -0
 6665              		.cfi_startproc
 6666              		@ Volatile: function does not return.
 6667              		@ args = 0, pretend = 0, frame = 328
 6668              		@ frame_needed = 0, uses_anonymous_args = 0
 644:Veno-Echo.cpp ****     hw.Init();
 6669              		.loc 20 644 5 view .LVU1813
 642:Veno-Echo.cpp ****     // initialize hardware.
 6670              		.loc 20 642 1 is_stmt 0 view .LVU1814
 6671 0000 80B5     		push	{r7, lr}
 6672              		.cfi_def_cfa_offset 8
 6673              		.cfi_offset 7, -8
 6674              		.cfi_offset 14, -4
 644:Veno-Echo.cpp ****     hw.Init();
 6675              		.loc 20 644 17 view .LVU1815
 6676 0002 CF48     		ldr	r0, .L428
 642:Veno-Echo.cpp ****     // initialize hardware.
 6677              		.loc 20 642 1 view .LVU1816
 6678 0004 D4B0     		sub	sp, sp, #336
 6679              		.cfi_def_cfa_offset 344
 644:Veno-Echo.cpp ****     hw.Init();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 241


 6680              		.loc 20 644 17 view .LVU1817
 6681 0006 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 6682              	.LVL347:
 645:Veno-Echo.cpp ****     
 6683              		.loc 20 645 5 is_stmt 1 view .LVU1818
 645:Veno-Echo.cpp ****     
 6684              		.loc 20 645 12 is_stmt 0 view .LVU1819
 6685 000a 0021     		movs	r1, #0
 6686 000c CC48     		ldr	r0, .L428
 649:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6687              		.loc 20 649 16 view .LVU1820
 6688 000e B2EE0E8A 		vmov.f32	s16, #1.5e+1
 645:Veno-Echo.cpp ****     
 6689              		.loc 20 645 12 view .LVU1821
 6690 0012 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 6691              	.LVL348:
 649:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6692              		.loc 20 649 5 is_stmt 1 view .LVU1822
 649:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6693              		.loc 20 649 16 is_stmt 0 view .LVU1823
 6694 0016 1D20     		movs	r0, #29
 6695 0018 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6696              	.LVL349:
 6697 001c 0346     		mov	r3, r0	@ movhi
 6698 001e 0620     		movs	r0, #6
 656:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6699              		.loc 20 656 22 view .LVU1824
 6700 0020 0224     		movs	r4, #2
 649:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6701              		.loc 20 649 16 view .LVU1825
 6702 0022 ADF80830 		strh	r3, [sp, #8]	@ movhi
 6703 0026 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6704              	.LVL350:
 6705 002a 0346     		mov	r3, r0	@ movhi
 649:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6706              		.loc 20 649 80 view .LVU1826
 6707 002c C448     		ldr	r0, .L428
 6708              	.LBB1559:
 6709              	.LBB1560:
  61:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
  62:../DaisySP/Source/Dynamics/crossfade.h ****     Expected input: See [Curve Options](##curve-options)
  63:../DaisySP/Source/Dynamics/crossfade.h ****     */
  64:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetCurve(uint8_t curve) { curve_ = curve; }
 6710              		.loc 10 64 50 view .LVU1827
 6711 002e 4FF00108 		mov	r8, #1
 6712              	.LBE1560:
 6713              	.LBE1559:
 6714              	.LBB1563:
 6715              	.LBB1564:
  40:../DaisySP/Source/Control/adsr.h ****     /** Initializes the Adsr module.
  41:../DaisySP/Source/Control/adsr.h ****         \param sample_rate - The sample rate of the audio engine being run. 
  42:../DaisySP/Source/Control/adsr.h ****     */
  43:../DaisySP/Source/Control/adsr.h ****     void Init(float sample_rate);
  44:../DaisySP/Source/Control/adsr.h **** 
  45:../DaisySP/Source/Control/adsr.h **** 
  46:../DaisySP/Source/Control/adsr.h ****     /** Processes one sample through the filter and returns one sample.
  47:../DaisySP/Source/Control/adsr.h ****         \param gate - trigger the envelope, hold it to sustain 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 242


  48:../DaisySP/Source/Control/adsr.h ****     */
  49:../DaisySP/Source/Control/adsr.h ****     float Process(bool gate);
  50:../DaisySP/Source/Control/adsr.h **** 
  51:../DaisySP/Source/Control/adsr.h ****     /** Sets time
  52:../DaisySP/Source/Control/adsr.h ****         Set time per segment in seconds
  53:../DaisySP/Source/Control/adsr.h ****     */
  54:../DaisySP/Source/Control/adsr.h ****     inline void SetTime(int seg, float time) { seg_time_[seg] = time; }
  55:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
  56:../DaisySP/Source/Control/adsr.h ****         \param sus_level - sets sustain level
  57:../DaisySP/Source/Control/adsr.h ****     */
  58:../DaisySP/Source/Control/adsr.h ****     inline void SetSustainLevel(float sus_level) { sus_ = sus_level; }
 6716              		.loc 7 58 57 view .LVU1828
 6717 0032 F7EE008A 		vmov.f32	s17, #1.0e+0
 6718              	.LBE1564:
 6719              	.LBE1563:
 649:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6720              		.loc 20 649 16 view .LVU1829
 6721 0036 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 649:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6722              		.loc 20 649 80 view .LVU1830
 6723 003a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6724              	.LVL351:
 649:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6725              		.loc 20 649 16 view .LVU1831
 6726 003e 0123     		movs	r3, #1
 6727 0040 80EE080A 		vdiv.f32	s0, s0, s16
 6728 0044 BF48     		ldr	r0, .L428+4
 663:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6729              		.loc 20 663 20 view .LVU1832
 6730 0046 C04F     		ldr	r7, .L428+8
 6731              	.LBB1567:
 6732              	.LBB1568:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6733              		.loc 7 54 63 view .LVU1833
 6734 0048 C04D     		ldr	r5, .L428+12
 6735              	.LBE1568:
 6736              	.LBE1567:
 669:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6737              		.loc 20 669 20 view .LVU1834
 6738 004a C14E     		ldr	r6, .L428+16
 649:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6739              		.loc 20 649 16 view .LVU1835
 6740 004c DDE90212 		ldrd	r1, r2, [sp, #8]
 6741 0050 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6742              	.LVL352:
 650:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6743              		.loc 20 650 5 is_stmt 1 view .LVU1836
 650:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6744              		.loc 20 650 16 is_stmt 0 view .LVU1837
 6745 0054 1E20     		movs	r0, #30
 6746 0056 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6747              	.LVL353:
 6748 005a 0346     		mov	r3, r0	@ movhi
 6749 005c 0720     		movs	r0, #7
 6750 005e ADF81030 		strh	r3, [sp, #16]	@ movhi
 6751 0062 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6752              	.LVL354:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 243


 6753 0066 0346     		mov	r3, r0	@ movhi
 650:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6754              		.loc 20 650 80 view .LVU1838
 6755 0068 B548     		ldr	r0, .L428
 650:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6756              		.loc 20 650 16 view .LVU1839
 6757 006a ADF81430 		strh	r3, [sp, #20]	@ movhi
 650:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6758              		.loc 20 650 80 view .LVU1840
 6759 006e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6760              	.LVL355:
 650:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6761              		.loc 20 650 16 view .LVU1841
 6762 0072 0123     		movs	r3, #1
 6763 0074 80EE080A 		vdiv.f32	s0, s0, s16
 6764 0078 B648     		ldr	r0, .L428+20
 6765 007a DDE90412 		ldrd	r1, r2, [sp, #16]
 6766 007e FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6767              	.LVL356:
 651:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6768              		.loc 20 651 5 is_stmt 1 view .LVU1842
 651:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6769              		.loc 20 651 18 is_stmt 0 view .LVU1843
 6770 0082 0A20     		movs	r0, #10
 6771 0084 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6772              	.LVL357:
 6773 0088 0346     		mov	r3, r0	@ movhi
 6774 008a 0220     		movs	r0, #2
 6775 008c ADF81830 		strh	r3, [sp, #24]	@ movhi
 6776 0090 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6777              	.LVL358:
 6778 0094 0346     		mov	r3, r0	@ movhi
 651:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6779              		.loc 20 651 85 view .LVU1844
 6780 0096 AA48     		ldr	r0, .L428
 651:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6781              		.loc 20 651 18 view .LVU1845
 6782 0098 ADF81C30 		strh	r3, [sp, #28]	@ movhi
 651:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6783              		.loc 20 651 85 view .LVU1846
 6784 009c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6785              	.LVL359:
 651:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6786              		.loc 20 651 18 view .LVU1847
 6787 00a0 0023     		movs	r3, #0
 6788 00a2 80EE080A 		vdiv.f32	s0, s0, s16
 6789 00a6 AC48     		ldr	r0, .L428+24
 6790 00a8 DDE90612 		ldrd	r1, r2, [sp, #24]
 6791 00ac FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6792              	.LVL360:
 652:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6793              		.loc 20 652 5 is_stmt 1 view .LVU1848
 652:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6794              		.loc 20 652 18 is_stmt 0 view .LVU1849
 6795 00b0 0B20     		movs	r0, #11
 6796 00b2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6797              	.LVL361:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 244


 6798 00b6 0346     		mov	r3, r0	@ movhi
 6799 00b8 0320     		movs	r0, #3
 6800 00ba ADF82030 		strh	r3, [sp, #32]	@ movhi
 6801 00be FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6802              	.LVL362:
 6803 00c2 0346     		mov	r3, r0	@ movhi
 652:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6804              		.loc 20 652 85 view .LVU1850
 6805 00c4 9E48     		ldr	r0, .L428
 652:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6806              		.loc 20 652 18 view .LVU1851
 6807 00c6 ADF82430 		strh	r3, [sp, #36]	@ movhi
 652:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6808              		.loc 20 652 85 view .LVU1852
 6809 00ca FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6810              	.LVL363:
 652:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6811              		.loc 20 652 18 view .LVU1853
 6812 00ce 0023     		movs	r3, #0
 6813 00d0 80EE080A 		vdiv.f32	s0, s0, s16
 6814 00d4 A148     		ldr	r0, .L428+28
 6815 00d6 DDE90812 		ldrd	r1, r2, [sp, #32]
 6816 00da FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6817              	.LVL364:
 653:Veno-Echo.cpp **** 
 6818              		.loc 20 653 5 is_stmt 1 view .LVU1854
 653:Veno-Echo.cpp **** 
 6819              		.loc 20 653 20 is_stmt 0 view .LVU1855
 6820 00de 1820     		movs	r0, #24
 6821 00e0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6822              	.LVL365:
 6823 00e4 0346     		mov	r3, r0	@ movhi
 6824 00e6 0420     		movs	r0, #4
 6825 00e8 ADF82830 		strh	r3, [sp, #40]	@ movhi
 6826 00ec FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6827              	.LVL366:
 6828 00f0 0346     		mov	r3, r0	@ movhi
 653:Veno-Echo.cpp **** 
 6829              		.loc 20 653 93 view .LVU1856
 6830 00f2 9348     		ldr	r0, .L428
 653:Veno-Echo.cpp **** 
 6831              		.loc 20 653 20 view .LVU1857
 6832 00f4 ADF82C30 		strh	r3, [sp, #44]	@ movhi
 653:Veno-Echo.cpp **** 
 6833              		.loc 20 653 93 view .LVU1858
 6834 00f8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6835              	.LVL367:
 653:Veno-Echo.cpp **** 
 6836              		.loc 20 653 20 view .LVU1859
 6837 00fc 2346     		mov	r3, r4
 6838 00fe 80EE080A 		vdiv.f32	s0, s0, s16
 6839 0102 9748     		ldr	r0, .L428+32
 6840 0104 DDE90A12 		ldrd	r1, r2, [sp, #40]
 6841 0108 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6842              	.LVL368:
 656:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6843              		.loc 20 656 5 is_stmt 1 view .LVU1860
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 245


 656:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6844              		.loc 20 656 22 is_stmt 0 view .LVU1861
 6845 010c 0020     		movs	r0, #0
 6846 010e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6847              	.LVL369:
 6848 0112 0346     		mov	r3, r0	@ movhi
 656:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6849              		.loc 20 656 55 view .LVU1862
 6850 0114 8A48     		ldr	r0, .L428
 656:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6851              		.loc 20 656 22 view .LVU1863
 6852 0116 ADF83030 		strh	r3, [sp, #48]	@ movhi
 656:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6853              		.loc 20 656 55 view .LVU1864
 6854 011a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6855              	.LVL370:
 656:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6856              		.loc 20 656 22 view .LVU1865
 6857 011e 0123     		movs	r3, #1
 6858 0120 80EE080A 		vdiv.f32	s0, s0, s16
 6859 0124 0C99     		ldr	r1, [sp, #48]
 6860 0126 1A46     		mov	r2, r3
 6861 0128 8E48     		ldr	r0, .L428+36
 6862 012a 0094     		str	r4, [sp]
 6863 012c FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6864              	.LVL371:
 657:Veno-Echo.cpp **** 
 6865              		.loc 20 657 5 is_stmt 1 view .LVU1866
 657:Veno-Echo.cpp **** 
 6866              		.loc 20 657 22 is_stmt 0 view .LVU1867
 6867 0130 0120     		movs	r0, #1
 6868 0132 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6869              	.LVL372:
 6870 0136 0346     		mov	r3, r0	@ movhi
 657:Veno-Echo.cpp **** 
 6871              		.loc 20 657 55 view .LVU1868
 6872 0138 8148     		ldr	r0, .L428
 657:Veno-Echo.cpp **** 
 6873              		.loc 20 657 22 view .LVU1869
 6874 013a ADF83430 		strh	r3, [sp, #52]	@ movhi
 657:Veno-Echo.cpp **** 
 6875              		.loc 20 657 55 view .LVU1870
 6876 013e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6877              	.LVL373:
 657:Veno-Echo.cpp **** 
 6878              		.loc 20 657 22 view .LVU1871
 6879 0142 4246     		mov	r2, r8
 6880 0144 80EE080A 		vdiv.f32	s0, s0, s16
 6881 0148 0D99     		ldr	r1, [sp, #52]
 6882 014a 4346     		mov	r3, r8
 6883 014c 8648     		ldr	r0, .L428+40
 6884 014e 0094     		str	r4, [sp]
 6885              	.LBB1571:
 6886              	.LBB1572:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6887              		.loc 7 54 63 view .LVU1872
 6888 0150 4FF07C54 		mov	r4, #1056964608
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 246


 6889              	.LBE1572:
 6890              	.LBE1571:
 657:Veno-Echo.cpp **** 
 6891              		.loc 20 657 22 view .LVU1873
 6892 0154 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6893              	.LVL374:
 660:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6894              		.loc 20 660 5 is_stmt 1 view .LVU1874
 660:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6895              		.loc 20 660 14 is_stmt 0 view .LVU1875
 6896 0158 1720     		movs	r0, #23
 6897 015a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6898              	.LVL375:
 6899 015e 0346     		mov	r3, r0	@ movhi
 660:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6900              		.loc 20 660 48 view .LVU1876
 6901 0160 7748     		ldr	r0, .L428
 660:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6902              		.loc 20 660 14 view .LVU1877
 6903 0162 ADF83830 		strh	r3, [sp, #56]	@ movhi
 660:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6904              		.loc 20 660 48 view .LVU1878
 6905 0166 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6906              	.LVL376:
 660:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6907              		.loc 20 660 14 view .LVU1879
 6908 016a 0E99     		ldr	r1, [sp, #56]
 6909 016c 80EE080A 		vdiv.f32	s0, s0, s16
 6910 0170 7E48     		ldr	r0, .L428+44
 6911 0172 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 6912              	.LVL377:
 661:Veno-Echo.cpp ****     
 6913              		.loc 20 661 5 is_stmt 1 view .LVU1880
 661:Veno-Echo.cpp ****     
 6914              		.loc 20 661 17 is_stmt 0 view .LVU1881
 6915 0176 0520     		movs	r0, #5
 6916 0178 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6917              	.LVL378:
 6918 017c 0346     		mov	r3, r0	@ movhi
 6919 017e 7048     		ldr	r0, .L428
 6920 0180 ADF83C30 		strh	r3, [sp, #60]	@ movhi
 6921 0184 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6922              	.LVL379:
 6923 0188 0F99     		ldr	r1, [sp, #60]
 6924 018a 7948     		ldr	r0, .L428+48
 6925 018c FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 6926              	.LVL380:
 663:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6927              		.loc 20 663 5 is_stmt 1 view .LVU1882
 663:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6928              		.loc 20 663 20 is_stmt 0 view .LVU1883
 6929 0190 6B48     		ldr	r0, .L428
 6930 0192 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6931              	.LVL381:
 6932 0196 3846     		mov	r0, r7
 6933 0198 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6934              	.LVL382:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 247


 664:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 6935              		.loc 20 664 5 is_stmt 1 view .LVU1884
 6936              	.LBB1575:
 6937              	.LBI1571:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6938              		.loc 7 54 17 view .LVU1885
 6939              	.LBB1573:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6940              		.loc 7 54 48 view .LVU1886
 6941              	.LBE1573:
 6942              	.LBE1575:
 669:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6943              		.loc 20 669 20 is_stmt 0 view .LVU1887
 6944 019c 6848     		ldr	r0, .L428
 6945              	.LBB1576:
 6946              	.LBB1565:
 6947              		.loc 7 58 57 view .LVU1888
 6948 019e C7ED008A 		vstr.32	s17, [r7]
 6949              	.LBE1565:
 6950              	.LBE1576:
 6951              	.LBB1577:
 6952              	.LBB1574:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6953              		.loc 7 54 63 view .LVU1889
 6954 01a2 BC60     		str	r4, [r7, #8]	@ float
 6955              	.LVL383:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6956              		.loc 7 54 63 view .LVU1890
 6957              	.LBE1574:
 6958              	.LBE1577:
 665:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 6959              		.loc 20 665 5 is_stmt 1 view .LVU1891
 6960              	.LBB1578:
 6961              	.LBI1567:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6962              		.loc 7 54 17 view .LVU1892
 6963              	.LBB1569:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6964              		.loc 7 54 48 view .LVU1893
 6965              	.LBE1569:
 6966              	.LBE1578:
 6967              	.LBB1579:
 6968              	.LBB1580:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6969              		.loc 7 54 63 is_stmt 0 view .LVU1894
 6970 01a4 7C61     		str	r4, [r7, #20]	@ float
 6971              	.LBE1580:
 6972              	.LBE1579:
 6973              	.LBB1582:
 6974              	.LBB1570:
 6975 01a6 FD60     		str	r5, [r7, #12]	@ float
 6976              	.LVL384:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6977              		.loc 7 54 63 view .LVU1895
 6978              	.LBE1570:
 6979              	.LBE1582:
 666:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 248


 6980              		.loc 20 666 5 is_stmt 1 view .LVU1896
 6981              	.LBB1583:
 6982              	.LBI1579:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6983              		.loc 7 54 17 view .LVU1897
 6984              	.LBB1581:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6985              		.loc 7 54 48 view .LVU1898
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6986              		.loc 7 54 48 is_stmt 0 view .LVU1899
 6987              	.LBE1581:
 6988              	.LBE1583:
 667:Veno-Echo.cpp **** 
 6989              		.loc 20 667 5 is_stmt 1 view .LVU1900
 6990              	.LBB1584:
 6991              	.LBI1563:
 6992              		.loc 7 58 17 view .LVU1901
 6993              	.LBB1566:
 6994              		.loc 7 58 52 view .LVU1902
 6995              		.loc 7 58 52 is_stmt 0 view .LVU1903
 6996              	.LBE1566:
 6997              	.LBE1584:
 669:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6998              		.loc 20 669 5 is_stmt 1 view .LVU1904
 669:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6999              		.loc 20 669 20 is_stmt 0 view .LVU1905
 7000 01a8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7001              	.LVL385:
 675:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7002              		.loc 20 675 17 view .LVU1906
 7003 01ac 714F     		ldr	r7, .L428+52
 669:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 7004              		.loc 20 669 20 view .LVU1907
 7005 01ae 3046     		mov	r0, r6
 7006 01b0 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 7007              	.LVL386:
 670:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 7008              		.loc 20 670 5 is_stmt 1 view .LVU1908
 7009              	.LBB1585:
 7010              	.LBI1585:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7011              		.loc 7 54 17 view .LVU1909
 7012              	.LBB1586:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7013              		.loc 7 54 48 view .LVU1910
 7014              	.LBE1586:
 7015              	.LBE1585:
 675:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7016              		.loc 20 675 17 is_stmt 0 view .LVU1911
 7017 01b4 6248     		ldr	r0, .L428
 7018              	.LBB1588:
 7019              	.LBB1589:
 7020              		.loc 7 58 57 view .LVU1912
 7021 01b6 C6ED008A 		vstr.32	s17, [r6]
 7022              	.LBE1589:
 7023              	.LBE1588:
 7024              	.LBB1591:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 249


 7025              	.LBB1587:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7026              		.loc 7 54 63 view .LVU1913
 7027 01ba B460     		str	r4, [r6, #8]	@ float
 7028              	.LVL387:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7029              		.loc 7 54 63 view .LVU1914
 7030              	.LBE1587:
 7031              	.LBE1591:
 671:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 7032              		.loc 20 671 5 is_stmt 1 view .LVU1915
 7033              	.LBB1592:
 7034              	.LBI1592:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7035              		.loc 7 54 17 view .LVU1916
 7036              	.LBB1593:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7037              		.loc 7 54 48 view .LVU1917
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7038              		.loc 7 54 63 is_stmt 0 view .LVU1918
 7039 01bc F560     		str	r5, [r6, #12]	@ float
 7040              	.LVL388:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7041              		.loc 7 54 63 view .LVU1919
 7042              	.LBE1593:
 7043              	.LBE1592:
 672:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 7044              		.loc 20 672 5 is_stmt 1 view .LVU1920
 7045              	.LBB1594:
 7046              	.LBI1594:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7047              		.loc 7 54 17 view .LVU1921
 7048              	.LBB1595:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7049              		.loc 7 54 48 view .LVU1922
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7050              		.loc 7 54 63 is_stmt 0 view .LVU1923
 7051 01be 7461     		str	r4, [r6, #20]	@ float
 7052              	.LVL389:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7053              		.loc 7 54 63 view .LVU1924
 7054              	.LBE1595:
 7055              	.LBE1594:
 673:Veno-Echo.cpp **** 
 7056              		.loc 20 673 5 is_stmt 1 view .LVU1925
 7057              	.LBB1596:
 7058              	.LBI1588:
 7059              		.loc 7 58 17 view .LVU1926
 7060              	.LBB1590:
 7061              		.loc 7 58 52 view .LVU1927
 7062              		.loc 7 58 52 is_stmt 0 view .LVU1928
 7063              	.LBE1590:
 7064              	.LBE1596:
 675:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7065              		.loc 20 675 5 is_stmt 1 view .LVU1929
 675:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7066              		.loc 20 675 17 is_stmt 0 view .LVU1930
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 250


 7067 01c0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7068              	.LVL390:
 681:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7069              		.loc 20 681 17 view .LVU1931
 7070 01c4 6C4E     		ldr	r6, .L428+56
 675:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7071              		.loc 20 675 17 view .LVU1932
 7072 01c6 3846     		mov	r0, r7
 7073 01c8 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 7074              	.LVL391:
 676:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 7075              		.loc 20 676 5 is_stmt 1 view .LVU1933
 7076              	.LBB1597:
 7077              	.LBI1597:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7078              		.loc 7 54 17 view .LVU1934
 7079              	.LBB1598:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7080              		.loc 7 54 48 view .LVU1935
 7081              	.LBE1598:
 7082              	.LBE1597:
 681:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7083              		.loc 20 681 17 is_stmt 0 view .LVU1936
 7084 01cc 5C48     		ldr	r0, .L428
 7085              	.LBB1600:
 7086              	.LBB1601:
 7087              		.loc 7 58 57 view .LVU1937
 7088 01ce C7ED008A 		vstr.32	s17, [r7]
 7089              	.LBE1601:
 7090              	.LBE1600:
 7091              	.LBB1603:
 7092              	.LBB1599:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7093              		.loc 7 54 63 view .LVU1938
 7094 01d2 BD60     		str	r5, [r7, #8]	@ float
 7095              	.LVL392:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7096              		.loc 7 54 63 view .LVU1939
 7097              	.LBE1599:
 7098              	.LBE1603:
 677:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 7099              		.loc 20 677 5 is_stmt 1 view .LVU1940
 7100              	.LBB1604:
 7101              	.LBI1604:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7102              		.loc 7 54 17 view .LVU1941
 7103              	.LBB1605:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7104              		.loc 7 54 48 view .LVU1942
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7105              		.loc 7 54 63 is_stmt 0 view .LVU1943
 7106 01d4 FD60     		str	r5, [r7, #12]	@ float
 7107              	.LVL393:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7108              		.loc 7 54 63 view .LVU1944
 7109              	.LBE1605:
 7110              	.LBE1604:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 251


 678:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 7111              		.loc 20 678 5 is_stmt 1 view .LVU1945
 7112              	.LBB1606:
 7113              	.LBI1606:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7114              		.loc 7 54 17 view .LVU1946
 7115              	.LBB1607:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7116              		.loc 7 54 48 view .LVU1947
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7117              		.loc 7 54 63 is_stmt 0 view .LVU1948
 7118 01d6 7D61     		str	r5, [r7, #20]	@ float
 7119              	.LVL394:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7120              		.loc 7 54 63 view .LVU1949
 7121              	.LBE1607:
 7122              	.LBE1606:
 679:Veno-Echo.cpp **** 
 7123              		.loc 20 679 5 is_stmt 1 view .LVU1950
 7124              	.LBB1608:
 7125              	.LBI1600:
 7126              		.loc 7 58 17 view .LVU1951
 7127              	.LBB1602:
 7128              		.loc 7 58 52 view .LVU1952
 7129              		.loc 7 58 52 is_stmt 0 view .LVU1953
 7130              	.LBE1602:
 7131              	.LBE1608:
 681:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7132              		.loc 20 681 5 is_stmt 1 view .LVU1954
 681:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7133              		.loc 20 681 17 is_stmt 0 view .LVU1955
 7134 01d8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7135              	.LVL395:
 7136 01dc 3046     		mov	r0, r6
 700:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 7137              		.loc 20 700 17 view .LVU1956
 7138 01de 9FED678A 		vldr.32	s16, .L428+60
 681:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7139              		.loc 20 681 17 view .LVU1957
 7140 01e2 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 7141              	.LVL396:
 682:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 7142              		.loc 20 682 5 is_stmt 1 view .LVU1958
 7143              	.LBB1609:
 7144              	.LBI1609:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7145              		.loc 7 54 17 view .LVU1959
 7146              	.LBB1610:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7147              		.loc 7 54 48 view .LVU1960
 7148              	.LBE1610:
 7149              	.LBE1609:
 7150              	.LBB1612:
 7151              	.LBB1613:
 7152              	.LBB1614:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7153              		.loc 10 45 16 is_stmt 0 view .LVU1961
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 252


 7154 01e6 6649     		ldr	r1, .L428+64
 7155              	.LBE1614:
 7156              	.LBE1613:
 7157              	.LBE1612:
 7158              	.LBB1619:
 7159              	.LBB1620:
 7160              	.LBB1621:
 7161 01e8 664A     		ldr	r2, .L428+68
 7162              	.LBE1621:
 7163              	.LBE1620:
 7164              	.LBE1619:
 7165              	.LBB1626:
 7166              	.LBB1627:
 7167              	.LBB1628:
 7168 01ea 674B     		ldr	r3, .L428+72
 7169              	.LBE1628:
 7170              	.LBE1627:
 7171              	.LBE1626:
 7172              	.LBB1633:
 7173              	.LBB1617:
 7174              	.LBB1615:
 7175 01ec 0C60     		str	r4, [r1]	@ float
 7176              	.LBE1615:
 7177              	.LBE1617:
 7178              	.LBE1633:
 7179              	.LBB1634:
 7180              	.LBB1624:
 7181              	.LBB1622:
 7182 01ee 1460     		str	r4, [r2]	@ float
 7183              	.LBE1622:
 7184              	.LBE1624:
 7185              	.LBE1634:
 7186              	.LBB1635:
 7187              	.LBB1631:
 7188              	.LBB1629:
 7189 01f0 1C60     		str	r4, [r3]	@ float
 7190              	.LBE1629:
 7191              	.LBE1631:
 7192              	.LBE1635:
 7193              	.LBB1636:
 7194              	.LBB1561:
 7195              		.loc 10 64 50 view .LVU1962
 7196 01f2 81F80480 		strb	r8, [r1, #4]
 7197              	.LBE1561:
 7198              	.LBE1636:
 7199              	.LBB1637:
 7200              	.LBB1638:
 7201 01f6 82F80480 		strb	r8, [r2, #4]
 7202              	.LBE1638:
 7203              	.LBE1637:
 7204              	.LBB1640:
 7205              	.LBB1641:
 7206 01fa 83F80480 		strb	r8, [r3, #4]
 7207              	.LBE1641:
 7208              	.LBE1640:
 696:Veno-Echo.cpp **** 
 7209              		.loc 20 696 15 view .LVU1963
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 253


 7210 01fe 5048     		ldr	r0, .L428
 7211              	.LBB1643:
 7212              	.LBB1644:
 7213              		.loc 7 58 57 view .LVU1964
 7214 0200 C6ED008A 		vstr.32	s17, [r6]
 7215              	.LBE1644:
 7216              	.LBE1643:
 7217              	.LBB1646:
 7218              	.LBB1611:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7219              		.loc 7 54 63 view .LVU1965
 7220 0204 B560     		str	r5, [r6, #8]	@ float
 7221              	.LVL397:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7222              		.loc 7 54 63 view .LVU1966
 7223              	.LBE1611:
 7224              	.LBE1646:
 683:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 7225              		.loc 20 683 5 is_stmt 1 view .LVU1967
 7226              	.LBB1647:
 7227              	.LBI1647:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7228              		.loc 7 54 17 view .LVU1968
 7229              	.LBB1648:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7230              		.loc 7 54 48 view .LVU1969
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7231              		.loc 7 54 63 is_stmt 0 view .LVU1970
 7232 0206 F560     		str	r5, [r6, #12]	@ float
 7233              	.LVL398:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7234              		.loc 7 54 63 view .LVU1971
 7235              	.LBE1648:
 7236              	.LBE1647:
 684:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 7237              		.loc 20 684 5 is_stmt 1 view .LVU1972
 7238              	.LBB1649:
 7239              	.LBI1649:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7240              		.loc 7 54 17 view .LVU1973
 7241              	.LBB1650:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7242              		.loc 7 54 48 view .LVU1974
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7243              		.loc 7 54 63 is_stmt 0 view .LVU1975
 7244 0208 7561     		str	r5, [r6, #20]	@ float
 7245              	.LVL399:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7246              		.loc 7 54 63 view .LVU1976
 7247              	.LBE1650:
 7248              	.LBE1649:
 685:Veno-Echo.cpp **** 
 7249              		.loc 20 685 5 is_stmt 1 view .LVU1977
 7250              	.LBB1651:
 7251              	.LBI1643:
 7252              		.loc 7 58 17 view .LVU1978
 7253              	.LBB1645:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 254


 7254              		.loc 7 58 52 view .LVU1979
 7255              		.loc 7 58 52 is_stmt 0 view .LVU1980
 7256              	.LBE1645:
 7257              	.LBE1651:
 688:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 7258              		.loc 20 688 5 is_stmt 1 view .LVU1981
 7259              	.LBB1652:
 7260              	.LBI1612:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7261              		.loc 10 51 17 view .LVU1982
 7262              	.LBE1652:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7263              		.loc 10 51 26 view .LVU1983
 7264              	.LBB1653:
 7265              	.LBB1618:
 7266              	.LBI1613:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7267              		.loc 10 43 17 view .LVU1984
 7268              	.LBB1616:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7269              		.loc 10 45 9 view .LVU1985
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7270              		.loc 10 46 9 view .LVU1986
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7271              		.loc 10 46 9 is_stmt 0 view .LVU1987
 7272              	.LBE1616:
 7273              	.LBE1618:
 7274              	.LBE1653:
 689:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 7275              		.loc 20 689 5 is_stmt 1 view .LVU1988
 7276              	.LBB1654:
 7277              	.LBI1559:
 7278              		.loc 10 64 17 view .LVU1989
 7279              	.LBB1562:
 7280              		.loc 10 64 43 view .LVU1990
 7281              		.loc 10 64 43 is_stmt 0 view .LVU1991
 7282              	.LBE1562:
 7283              	.LBE1654:
 690:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 7284              		.loc 20 690 5 is_stmt 1 view .LVU1992
 7285              	.LBB1655:
 7286              	.LBI1619:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7287              		.loc 10 51 17 view .LVU1993
 7288              	.LBE1655:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7289              		.loc 10 51 26 view .LVU1994
 7290              	.LBB1656:
 7291              	.LBB1625:
 7292              	.LBI1620:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7293              		.loc 10 43 17 view .LVU1995
 7294              	.LBB1623:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7295              		.loc 10 45 9 view .LVU1996
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7296              		.loc 10 46 9 view .LVU1997
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 255


  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7297              		.loc 10 46 9 is_stmt 0 view .LVU1998
 7298              	.LBE1623:
 7299              	.LBE1625:
 7300              	.LBE1656:
 691:Veno-Echo.cpp **** 
 7301              		.loc 20 691 5 is_stmt 1 view .LVU1999
 7302              	.LBB1657:
 7303              	.LBI1637:
 7304              		.loc 10 64 17 view .LVU2000
 7305              	.LBB1639:
 7306              		.loc 10 64 43 view .LVU2001
 7307              		.loc 10 64 43 is_stmt 0 view .LVU2002
 7308              	.LBE1639:
 7309              	.LBE1657:
 693:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 7310              		.loc 20 693 5 is_stmt 1 view .LVU2003
 7311              	.LBB1658:
 7312              	.LBI1626:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7313              		.loc 10 51 17 view .LVU2004
 7314              	.LBE1658:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7315              		.loc 10 51 26 view .LVU2005
 7316              	.LBB1659:
 7317              	.LBB1632:
 7318              	.LBI1627:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7319              		.loc 10 43 17 view .LVU2006
 7320              	.LBB1630:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7321              		.loc 10 45 9 view .LVU2007
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7322              		.loc 10 46 9 view .LVU2008
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7323              		.loc 10 46 9 is_stmt 0 view .LVU2009
 7324              	.LBE1630:
 7325              	.LBE1632:
 7326              	.LBE1659:
 694:Veno-Echo.cpp **** 
 7327              		.loc 20 694 5 is_stmt 1 view .LVU2010
 7328              	.LBB1660:
 7329              	.LBI1640:
 7330              		.loc 10 64 17 view .LVU2011
 7331              	.LBB1642:
 7332              		.loc 10 64 43 view .LVU2012
 7333              		.loc 10 64 43 is_stmt 0 view .LVU2013
 7334              	.LBE1642:
 7335              	.LBE1660:
 696:Veno-Echo.cpp **** 
 7336              		.loc 20 696 5 is_stmt 1 view .LVU2014
 696:Veno-Echo.cpp **** 
 7337              		.loc 20 696 15 is_stmt 0 view .LVU2015
 7338 020a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7339              	.LVL400:
 7340 020e FFF7FEFF 		bl	_Z10InitDelaysf
 7341              	.LVL401:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 256


 699:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 7342              		.loc 20 699 5 is_stmt 1 view .LVU2016
 699:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 7343              		.loc 20 699 15 is_stmt 0 view .LVU2017
 7344 0212 4B48     		ldr	r0, .L428
 7345 0214 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7346              	.LVL402:
 7347 0218 5C48     		ldr	r0, .L428+76
 7348 021a FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7349              	.LVL403:
 700:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 7350              		.loc 20 700 5 is_stmt 1 view .LVU2018
 700:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 7351              		.loc 20 700 17 is_stmt 0 view .LVU2019
 7352 021e B0EE480A 		vmov.f32	s0, s16
 7353 0222 5A48     		ldr	r0, .L428+76
 7354 0224 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7355              	.LVL404:
 701:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 7356              		.loc 20 701 5 is_stmt 1 view .LVU2020
 701:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 7357              		.loc 20 701 18 is_stmt 0 view .LVU2021
 7358 0228 9FED590A 		vldr.32	s0, .L428+80
 7359 022c 5748     		ldr	r0, .L428+76
 7360 022e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7361              	.LVL405:
 702:Veno-Echo.cpp **** 
 7362              		.loc 20 702 5 is_stmt 1 view .LVU2022
 702:Veno-Echo.cpp **** 
 7363              		.loc 20 702 19 is_stmt 0 view .LVU2023
 7364 0232 9FED580A 		vldr.32	s0, .L428+84
 7365 0236 5548     		ldr	r0, .L428+76
 7366 0238 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7367              	.LVL406:
 704:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 7368              		.loc 20 704 5 is_stmt 1 view .LVU2024
 704:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 7369              		.loc 20 704 15 is_stmt 0 view .LVU2025
 7370 023c 4048     		ldr	r0, .L428
 7371 023e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7372              	.LVL407:
 7373 0242 5548     		ldr	r0, .L428+88
 7374 0244 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7375              	.LVL408:
 705:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 7376              		.loc 20 705 5 is_stmt 1 view .LVU2026
 705:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 7377              		.loc 20 705 17 is_stmt 0 view .LVU2027
 7378 0248 B0EE480A 		vmov.f32	s0, s16
 7379 024c 5248     		ldr	r0, .L428+88
 7380 024e FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7381              	.LVL409:
 706:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 7382              		.loc 20 706 5 is_stmt 1 view .LVU2028
 706:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 7383              		.loc 20 706 18 is_stmt 0 view .LVU2029
 7384 0252 9FED4F0A 		vldr.32	s0, .L428+80
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 257


 7385 0256 5048     		ldr	r0, .L428+88
 7386 0258 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7387              	.LVL410:
 707:Veno-Echo.cpp **** 
 7388              		.loc 20 707 5 is_stmt 1 view .LVU2030
 707:Veno-Echo.cpp **** 
 7389              		.loc 20 707 19 is_stmt 0 view .LVU2031
 7390 025c 9FED4D0A 		vldr.32	s0, .L428+84
 7391 0260 4D48     		ldr	r0, .L428+88
 7392 0262 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7393              	.LVL411:
 710:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 7394              		.loc 20 710 5 is_stmt 1 view .LVU2032
 710:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 7395              		.loc 20 710 15 is_stmt 0 view .LVU2033
 7396 0266 3648     		ldr	r0, .L428
 7397 0268 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7398              	.LVL412:
 7399 026c 4B48     		ldr	r0, .L428+92
 7400 026e FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7401              	.LVL413:
 711:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 7402              		.loc 20 711 5 is_stmt 1 view .LVU2034
 711:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 7403              		.loc 20 711 17 is_stmt 0 view .LVU2035
 7404 0272 B0EE480A 		vmov.f32	s0, s16
 7405 0276 4948     		ldr	r0, .L428+92
 7406 0278 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7407              	.LVL414:
 712:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 7408              		.loc 20 712 5 is_stmt 1 view .LVU2036
 712:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 7409              		.loc 20 712 18 is_stmt 0 view .LVU2037
 7410 027c 9FED480A 		vldr.32	s0, .L428+96
 7411 0280 4648     		ldr	r0, .L428+92
 7412 0282 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7413              	.LVL415:
 713:Veno-Echo.cpp **** 
 7414              		.loc 20 713 5 is_stmt 1 view .LVU2038
 713:Veno-Echo.cpp **** 
 7415              		.loc 20 713 19 is_stmt 0 view .LVU2039
 7416 0286 9FED430A 		vldr.32	s0, .L428+84
 7417 028a 4448     		ldr	r0, .L428+92
 7418 028c FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7419              	.LVL416:
 715:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 7420              		.loc 20 715 5 is_stmt 1 view .LVU2040
 715:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 7421              		.loc 20 715 15 is_stmt 0 view .LVU2041
 7422 0290 2B48     		ldr	r0, .L428
 7423 0292 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7424              	.LVL417:
 7425 0296 4348     		ldr	r0, .L428+100
 7426 0298 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7427              	.LVL418:
 716:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 7428              		.loc 20 716 5 is_stmt 1 view .LVU2042
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 258


 716:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 7429              		.loc 20 716 17 is_stmt 0 view .LVU2043
 7430 029c B0EE480A 		vmov.f32	s0, s16
 7431 02a0 4048     		ldr	r0, .L428+100
 7432 02a2 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7433              	.LVL419:
 717:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 7434              		.loc 20 717 5 is_stmt 1 view .LVU2044
 717:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 7435              		.loc 20 717 18 is_stmt 0 view .LVU2045
 7436 02a6 9FED3E0A 		vldr.32	s0, .L428+96
 7437 02aa 3E48     		ldr	r0, .L428+100
 7438 02ac FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7439              	.LVL420:
 718:Veno-Echo.cpp **** 
 7440              		.loc 20 718 5 is_stmt 1 view .LVU2046
 718:Veno-Echo.cpp **** 
 7441              		.loc 20 718 19 is_stmt 0 view .LVU2047
 7442 02b0 9FED380A 		vldr.32	s0, .L428+84
 7443 02b4 3B48     		ldr	r0, .L428+100
 7444 02b6 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7445              	.LVL421:
 721:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 7446              		.loc 20 721 5 is_stmt 1 view .LVU2048
 721:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 7447              		.loc 20 721 20 is_stmt 0 view .LVU2049
 7448 02ba 2148     		ldr	r0, .L428
 7449 02bc FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7450              	.LVL422:
 7451 02c0 3948     		ldr	r0, .L428+104
 7452 02c2 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7453              	.LVL423:
 722:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 7454              		.loc 20 722 5 is_stmt 1 view .LVU2050
 722:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 7455              		.loc 20 722 22 is_stmt 0 view .LVU2051
 7456 02c6 B0EE480A 		vmov.f32	s0, s16
 7457 02ca 3748     		ldr	r0, .L428+104
 7458 02cc FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7459              	.LVL424:
 723:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 7460              		.loc 20 723 5 is_stmt 1 view .LVU2052
 723:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 7461              		.loc 20 723 23 is_stmt 0 view .LVU2053
 7462 02d0 9FED2F0A 		vldr.32	s0, .L428+80
 7463 02d4 3448     		ldr	r0, .L428+104
 7464 02d6 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7465              	.LVL425:
 724:Veno-Echo.cpp **** 
 7466              		.loc 20 724 5 is_stmt 1 view .LVU2054
 724:Veno-Echo.cpp **** 
 7467              		.loc 20 724 24 is_stmt 0 view .LVU2055
 7468 02da 9FED2E0A 		vldr.32	s0, .L428+84
 7469 02de 3248     		ldr	r0, .L428+104
 7470 02e0 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7471              	.LVL426:
 726:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 259


 7472              		.loc 20 726 5 is_stmt 1 view .LVU2056
 726:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 7473              		.loc 20 726 20 is_stmt 0 view .LVU2057
 7474 02e4 1648     		ldr	r0, .L428
 7475 02e6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7476              	.LVL427:
 7477 02ea 3048     		ldr	r0, .L428+108
 7478 02ec FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7479              	.LVL428:
 727:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 7480              		.loc 20 727 5 is_stmt 1 view .LVU2058
 727:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 7481              		.loc 20 727 22 is_stmt 0 view .LVU2059
 7482 02f0 B0EE480A 		vmov.f32	s0, s16
 7483 02f4 2D48     		ldr	r0, .L428+108
 7484 02f6 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7485              	.LVL429:
 728:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 7486              		.loc 20 728 5 is_stmt 1 view .LVU2060
 728:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 7487              		.loc 20 728 23 is_stmt 0 view .LVU2061
 7488 02fa 9FED250A 		vldr.32	s0, .L428+80
 7489 02fe 2B48     		ldr	r0, .L428+108
 7490 0300 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7491              	.LVL430:
 729:Veno-Echo.cpp **** 
 7492              		.loc 20 729 5 is_stmt 1 view .LVU2062
 729:Veno-Echo.cpp **** 
 7493              		.loc 20 729 24 is_stmt 0 view .LVU2063
 7494 0304 9FED230A 		vldr.32	s0, .L428+84
 7495 0308 2848     		ldr	r0, .L428+108
 7496 030a FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7497              	.LVL431:
 732:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 7498              		.loc 20 732 5 is_stmt 1 view .LVU2064
 732:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 7499              		.loc 20 732 20 is_stmt 0 view .LVU2065
 7500 030e 0C48     		ldr	r0, .L428
 7501 0310 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7502              	.LVL432:
 7503 0314 2648     		ldr	r0, .L428+112
 7504 0316 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7505              	.LVL433:
 733:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 7506              		.loc 20 733 5 is_stmt 1 view .LVU2066
 733:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 7507              		.loc 20 733 22 is_stmt 0 view .LVU2067
 7508 031a B0EE480A 		vmov.f32	s0, s16
 7509 031e 2448     		ldr	r0, .L428+112
 7510 0320 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7511              	.LVL434:
 734:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 7512              		.loc 20 734 5 is_stmt 1 view .LVU2068
 734:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 7513              		.loc 20 734 23 is_stmt 0 view .LVU2069
 7514 0324 9FED1E0A 		vldr.32	s0, .L428+96
 7515 0328 2148     		ldr	r0, .L428+112
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 260


 7516 032a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7517              	.LVL435:
 735:Veno-Echo.cpp **** 
 7518              		.loc 20 735 5 is_stmt 1 view .LVU2070
 735:Veno-Echo.cpp **** 
 7519              		.loc 20 735 24 is_stmt 0 view .LVU2071
 7520 032e 9FED190A 		vldr.32	s0, .L428+84
 7521 0332 1F48     		ldr	r0, .L428+112
 7522 0334 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7523              	.LVL436:
 737:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 7524              		.loc 20 737 5 is_stmt 1 view .LVU2072
 737:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 7525              		.loc 20 737 20 is_stmt 0 view .LVU2073
 7526 0338 0148     		ldr	r0, .L428
 7527 033a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7528              	.LVL437:
 7529 033e 39E0     		b	.L429
 7530              	.L430:
 7531              		.align	2
 7532              	.L428:
 7533 0340 00000000 		.word	.LANCHOR4
 7534 0344 00000000 		.word	.LANCHOR96
 7535 0348 00000000 		.word	.LANCHOR102
 7536 034c 0AD7233C 		.word	1008981770
 7537 0350 00000000 		.word	.LANCHOR103
 7538 0354 00000000 		.word	.LANCHOR97
 7539 0358 00000000 		.word	.LANCHOR94
 7540 035c 00000000 		.word	.LANCHOR95
 7541 0360 00000000 		.word	.LANCHOR98
 7542 0364 00000000 		.word	.LANCHOR99
 7543 0368 00000000 		.word	.LANCHOR100
 7544 036c 00000000 		.word	.LANCHOR101
 7545 0370 00000000 		.word	.LANCHOR88
 7546 0374 00000000 		.word	.LANCHOR104
 7547 0378 00000000 		.word	.LANCHOR105
 7548 037c 00000000 		.word	0
 7549 0380 00000000 		.word	.LANCHOR106
 7550 0384 00000000 		.word	.LANCHOR107
 7551 0388 00000000 		.word	.LANCHOR65
 7552 038c 00000000 		.word	.LANCHOR47
 7553 0390 00803B46 		.word	1178304512
 7554 0394 3333333F 		.word	1060320051
 7555 0398 00000000 		.word	.LANCHOR48
 7556 039c 00000000 		.word	.LANCHOR35
 7557 03a0 00004843 		.word	1128792064
 7558 03a4 00000000 		.word	.LANCHOR36
 7559 03a8 00000000 		.word	.LANCHOR49
 7560 03ac 00000000 		.word	.LANCHOR50
 7561 03b0 00000000 		.word	.LANCHOR37
 7562              	.L429:
 7563 03b4 9E48     		ldr	r0, .L431
 7564 03b6 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7565              	.LVL438:
 738:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 7566              		.loc 20 738 5 is_stmt 1 view .LVU2074
 738:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 261


 7567              		.loc 20 738 22 is_stmt 0 view .LVU2075
 7568 03ba B0EE480A 		vmov.f32	s0, s16
 7569 03be 9C48     		ldr	r0, .L431
 7570 03c0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7571              	.LVL439:
 739:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 7572              		.loc 20 739 5 is_stmt 1 view .LVU2076
 739:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 7573              		.loc 20 739 23 is_stmt 0 view .LVU2077
 7574 03c4 9FED9B0A 		vldr.32	s0, .L431+4
 7575 03c8 9948     		ldr	r0, .L431
 7576 03ca FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7577              	.LVL440:
 740:Veno-Echo.cpp **** 
 7578              		.loc 20 740 5 is_stmt 1 view .LVU2078
 740:Veno-Echo.cpp **** 
 7579              		.loc 20 740 24 is_stmt 0 view .LVU2079
 7580 03ce 9FED9A0A 		vldr.32	s0, .L431+8
 7581 03d2 9748     		ldr	r0, .L431
 7582 03d4 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7583              	.LVL441:
 742:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 7584              		.loc 20 742 5 is_stmt 1 view .LVU2080
 742:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 7585              		.loc 20 742 21 is_stmt 0 view .LVU2081
 7586 03d8 9848     		ldr	r0, .L431+12
 7587 03da FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7588              	.LVL442:
 7589 03de 9848     		ldr	r0, .L431+16
 7590 03e0 FFF7FEFF 		bl	_ZN7daisysp7DcBlock4InitEf
 7591              	.LVL443:
 743:Veno-Echo.cpp **** 
 7592              		.loc 20 743 5 is_stmt 1 view .LVU2082
 743:Veno-Echo.cpp **** 
 7593              		.loc 20 743 21 is_stmt 0 view .LVU2083
 7594 03e4 9548     		ldr	r0, .L431+12
 7595 03e6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7596              	.LVL444:
 7597 03ea 9648     		ldr	r0, .L431+20
 7598 03ec FFF7FEFF 		bl	_ZN7daisysp7DcBlock4InitEf
 7599              	.LVL445:
 746:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 7600              		.loc 20 746 5 is_stmt 1 view .LVU2084
 746:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 7601              		.loc 20 746 13 is_stmt 0 view .LVU2085
 7602 03f0 9248     		ldr	r0, .L431+12
 7603 03f2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7604              	.LVL446:
 7605 03f6 F0EE407A 		vmov.f32	s15, s0
 7606              	.LVL447:
 7607              	.LBB1661:
 7608              	.LBI1661:
  42:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7609              		.loc 8 42 10 is_stmt 1 view .LVU2086
 7610              	.LBB1662:
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7611              		.loc 8 44 9 view .LVU2087
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 262


  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7612              		.loc 8 44 20 is_stmt 0 view .LVU2088
 7613 03fa 934F     		ldr	r7, .L431+24
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7614              		.loc 8 46 20 view .LVU2089
 7615 03fc 9FED930A 		vldr.32	s0, .L431+28
 7616              	.LVL448:
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7617              		.loc 8 45 27 view .LVU2090
 7618 0400 88EEA77A 		vdiv.f32	s14, s17, s15
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7619              		.loc 8 49 34 view .LVU2091
 7620 0404 3846     		mov	r0, r7
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 7621              		.loc 8 47 20 view .LVU2092
 7622 0406 7C60     		str	r4, [r7, #4]	@ float
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7623              		.loc 8 44 20 view .LVU2093
 7624 0408 C7ED037A 		vstr.32	s15, [r7, #12]
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7625              		.loc 8 45 9 is_stmt 1 view .LVU2094
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 7626              		.loc 8 48 20 is_stmt 0 view .LVU2095
 7627 040c 87ED058A 		vstr.32	s16, [r7, #20]
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7628              		.loc 8 46 20 view .LVU2096
 7629 0410 87ED020A 		vstr.32	s0, [r7, #8]
 7630 0414 8E4C     		ldr	r4, .L431+32
 7631 0416 8F4D     		ldr	r5, .L431+36
 7632 0418 8F4E     		ldr	r6, .L431+40
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7633              		.loc 8 45 20 view .LVU2097
 7634 041a 87ED047A 		vstr.32	s14, [r7, #16]
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7635              		.loc 8 46 9 is_stmt 1 view .LVU2098
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 7636              		.loc 8 47 9 view .LVU2099
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 7637              		.loc 8 48 9 view .LVU2100
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7638              		.loc 8 49 9 view .LVU2101
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7639              		.loc 8 49 34 is_stmt 0 view .LVU2102
 7640 041e FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 7641              	.LVL449:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7642              		.loc 8 52 20 view .LVU2103
 7643 0422 40F20113 		movw	r3, #257
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7644              		.loc 8 49 34 view .LVU2104
 7645 0426 F0EE407A 		vmov.f32	s15, s0
 7646              	.LBE1662:
 7647              	.LBE1661:
 7648              	.LBB1665:
 7649              	.LBB1666:
 7650              		.loc 8 61 34 view .LVU2105
 7651 042a 3846     		mov	r0, r7
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 263


 7652              	.LBE1666:
 7653              	.LBE1665:
 7654              	.LBB1670:
 7655              	.LBB1671:
  62:../DaisySP/Source/Synthesis/oscillator.h ****     }
  63:../DaisySP/Source/Synthesis/oscillator.h **** 
  64:../DaisySP/Source/Synthesis/oscillator.h **** 
  65:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  66:../DaisySP/Source/Synthesis/oscillator.h ****     */
  67:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:../DaisySP/Source/Synthesis/oscillator.h ****     */
  70:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  71:../DaisySP/Source/Synthesis/oscillator.h ****     {
  72:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 7656              		.loc 8 72 19 view .LVU2106
 7657 042c 87F80080 		strb	r8, [r7]
 7658              	.LBE1671:
 7659              	.LBE1670:
 7660              	.LBB1673:
 7661              	.LBB1663:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7662              		.loc 8 52 20 view .LVU2107
 7663 0430 BB84     		strh	r3, [r7, #36]	@ movhi
 7664              	.LBE1663:
 7665              	.LBE1673:
 7666              	.LBB1674:
 7667              	.LBB1667:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7668              		.loc 8 61 34 view .LVU2108
 7669 0432 B0EE680A 		vmov.f32	s0, s17
 7670              	.LBE1667:
 7671              	.LBE1674:
 7672              	.LBB1675:
 7673              	.LBB1664:
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7674              		.loc 8 49 20 view .LVU2109
 7675 0436 C7ED067A 		vstr.32	s15, [r7, #24]
  50:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
 7676              		.loc 8 50 9 is_stmt 1 view .LVU2110
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
 7677              		.loc 8 51 9 view .LVU2111
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7678              		.loc 8 52 9 view .LVU2112
 7679              	.LVL450:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7680              		.loc 8 52 9 is_stmt 0 view .LVU2113
 7681              	.LBE1664:
 7682              	.LBE1675:
 747:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 7683              		.loc 20 747 5 is_stmt 1 view .LVU2114
 7684              	.LBB1676:
 7685              	.LBI1670:
  70:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7686              		.loc 8 70 17 view .LVU2115
 7687              	.LBB1672:
 7688              		.loc 8 72 9 view .LVU2116
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 264


 7689              		.loc 8 72 9 is_stmt 0 view .LVU2117
 7690              	.LBE1672:
 7691              	.LBE1676:
 748:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 7692              		.loc 20 748 5 is_stmt 1 view .LVU2118
 7693              	.LBB1677:
 7694              	.LBI1665:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7695              		.loc 8 58 17 view .LVU2119
 7696              	.LBB1668:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 7697              		.loc 8 60 9 view .LVU2120
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7698              		.loc 8 61 9 view .LVU2121
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 7699              		.loc 8 60 20 is_stmt 0 view .LVU2122
 7700 043a C7ED028A 		vstr.32	s17, [r7, #8]
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7701              		.loc 8 61 34 view .LVU2123
 7702 043e FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 7703              	.LVL451:
 7704 0442 F0EE407A 		vmov.f32	s15, s0
 7705              	.LBE1668:
 7706              	.LBE1677:
 751:Veno-Echo.cpp **** 
 7707              		.loc 20 751 19 view .LVU2124
 7708 0446 854A     		ldr	r2, .L431+44
 7709 0448 44F62061 		movw	r1, #20000
 7710 044c B7EE040A 		vmov.f32	s0, #1.25e+0
 7711 0450 8348     		ldr	r0, .L431+48
 7712              	.LBB1678:
 7713              	.LBB1679:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7714              		.loc 8 67 46 view .LVU2125
 7715 0452 C7ED018A 		vstr.32	s17, [r7, #4]
 7716              	.LBE1679:
 7717              	.LBE1678:
 7718              	.LBB1681:
 7719              	.LBB1669:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7720              		.loc 8 61 20 view .LVU2126
 7721 0456 C7ED067A 		vstr.32	s15, [r7, #24]
 7722              	.LVL452:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7723              		.loc 8 61 20 view .LVU2127
 7724              	.LBE1669:
 7725              	.LBE1681:
 749:Veno-Echo.cpp **** 
 7726              		.loc 20 749 5 is_stmt 1 view .LVU2128
 7727              	.LBB1682:
 7728              	.LBI1678:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7729              		.loc 8 67 17 view .LVU2129
 7730              	.LBB1680:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7731              		.loc 8 67 41 view .LVU2130
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 265


 7732              		.loc 8 67 41 is_stmt 0 view .LVU2131
 7733              	.LBE1680:
 7734              	.LBE1682:
 751:Veno-Echo.cpp **** 
 7735              		.loc 20 751 5 is_stmt 1 view .LVU2132
 751:Veno-Echo.cpp **** 
 7736              		.loc 20 751 19 is_stmt 0 view .LVU2133
 7737 045a FFF7FEFF 		bl	_ZN8Taptempo4initEmmf
 7738              	.LVL453:
 755:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7739              		.loc 20 755 5 is_stmt 1 view .LVU2134
 755:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7740              		.loc 20 755 23 is_stmt 0 view .LVU2135
 7741 045e 1820     		movs	r0, #24
 766:Veno-Echo.cpp **** 
 7742              		.loc 20 766 17 view .LVU2136
 7743 0460 1CAF     		add	r7, sp, #112
 755:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7744              		.loc 20 755 23 view .LVU2137
 7745 0462 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7746              	.LVL454:
 7747 0466 0346     		mov	r3, r0	@ movhi
 7748 0468 7448     		ldr	r0, .L431+12
 7749 046a ADF84030 		strh	r3, [sp, #64]	@ movhi
 7750 046e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7751              	.LVL455:
 7752 0472 1099     		ldr	r1, [sp, #64]
 7753 0474 7B48     		ldr	r0, .L431+52
 7754 0476 FFF7FEFF 		bl	_ZN8TempoLED4initE12dsy_gpio_pinf
 7755              	.LVL456:
 756:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7756              		.loc 20 756 5 is_stmt 1 view .LVU2138
 756:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7757              		.loc 20 756 27 is_stmt 0 view .LVU2139
 7758 047a 7948     		ldr	r0, .L431+48
 7759 047c FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 7760              	.LVL457:
 7761 0480 7848     		ldr	r0, .L431+52
 7762 0482 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 7763              	.LVL458:
 757:Veno-Echo.cpp **** 
 7764              		.loc 20 757 5 is_stmt 1 view .LVU2140
 757:Veno-Echo.cpp **** 
 7765              		.loc 20 757 29 is_stmt 0 view .LVU2141
 7766 0486 7748     		ldr	r0, .L431+52
 7767 0488 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 7768              	.LVL459:
 761:Veno-Echo.cpp ****     //ApplySettings(defaultAltControls);
 7769              		.loc 20 761 5 is_stmt 1 view .LVU2142
 761:Veno-Echo.cpp ****     //ApplySettings(defaultAltControls);
 7770              		.loc 20 761 41 is_stmt 0 view .LVU2143
 7771 048c 1CA8     		add	r0, sp, #112
 7772 048e FFF7FEFF 		bl	_Z12LoadSettingsv
 7773              	.LVL460:
 765:Veno-Echo.cpp ****     AltControls = SavedSettings;
 7774              		.loc 20 765 5 is_stmt 1 view .LVU2144
 765:Veno-Echo.cpp ****     AltControls = SavedSettings;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 266


 7775              		.loc 20 765 18 is_stmt 0 view .LVU2145
 7776 0492 1CA8     		add	r0, sp, #112
 7777 0494 FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 7778              	.LVL461:
 766:Veno-Echo.cpp **** 
 7779              		.loc 20 766 5 is_stmt 1 view .LVU2146
 766:Veno-Echo.cpp **** 
 7780              		.loc 20 766 17 is_stmt 0 view .LVU2147
 7781 0498 DFF8D4C1 		ldr	ip, .L431+64
 7782 049c 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 7783 049e ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 7784 04a2 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 7785 04a4 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 7786 04a8 97E80700 		ldm	r7, {r0, r1, r2}
 7787 04ac 8CE80700 		stm	ip, {r0, r1, r2}
 771:Veno-Echo.cpp **** 
 7788              		.loc 20 771 5 is_stmt 1 view .LVU2148
 773:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 7789              		.loc 20 773 5 view .LVU2149
 773:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 7790              		.loc 20 773 28 is_stmt 0 view .LVU2150
 7791 04b0 0F20     		movs	r0, #15
 7792 04b2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7793              	.LVL462:
 7794 04b6 0346     		mov	r3, r0	@ movhi
 7795 04b8 32A8     		add	r0, sp, #200
 7796 04ba ADF84430 		strh	r3, [sp, #68]	@ movhi
 7797 04be 1199     		ldr	r1, [sp, #68]
 7798 04c0 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7799              	.LVL463:
 774:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 7800              		.loc 20 774 5 is_stmt 1 view .LVU2151
 774:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 7801              		.loc 20 774 28 is_stmt 0 view .LVU2152
 7802 04c4 1020     		movs	r0, #16
 7803 04c6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7804              	.LVL464:
 7805 04ca 0346     		mov	r3, r0	@ movhi
 7806 04cc 0DF1D900 		add	r0, sp, #217
 7807 04d0 ADF84830 		strh	r3, [sp, #72]	@ movhi
 7808 04d4 1299     		ldr	r1, [sp, #72]
 7809 04d6 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7810              	.LVL465:
 775:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 7811              		.loc 20 775 5 is_stmt 1 view .LVU2153
 775:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 7812              		.loc 20 775 28 is_stmt 0 view .LVU2154
 7813 04da 1120     		movs	r0, #17
 7814 04dc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7815              	.LVL466:
 7816 04e0 0346     		mov	r3, r0	@ movhi
 7817 04e2 0DF1EA00 		add	r0, sp, #234
 7818 04e6 ADF84C30 		strh	r3, [sp, #76]	@ movhi
 7819 04ea 1399     		ldr	r1, [sp, #76]
 7820 04ec FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7821              	.LVL467:
 776:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 267


 7822              		.loc 20 776 5 is_stmt 1 view .LVU2155
 776:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 7823              		.loc 20 776 28 is_stmt 0 view .LVU2156
 7824 04f0 1220     		movs	r0, #18
 7825 04f2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7826              	.LVL468:
 7827 04f6 0346     		mov	r3, r0	@ movhi
 7828 04f8 0DF1FB00 		add	r0, sp, #251
 7829 04fc ADF85030 		strh	r3, [sp, #80]	@ movhi
 7830 0500 1499     		ldr	r1, [sp, #80]
 7831 0502 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7832              	.LVL469:
 777:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 7833              		.loc 20 777 5 is_stmt 1 view .LVU2157
 777:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 7834              		.loc 20 777 28 is_stmt 0 view .LVU2158
 7835 0506 1320     		movs	r0, #19
 7836 0508 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7837              	.LVL470:
 7838 050c 0346     		mov	r3, r0	@ movhi
 7839 050e 43A8     		add	r0, sp, #268
 7840 0510 ADF85430 		strh	r3, [sp, #84]	@ movhi
 7841 0514 1599     		ldr	r1, [sp, #84]
 7842 0516 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7843              	.LVL471:
 778:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 7844              		.loc 20 778 5 is_stmt 1 view .LVU2159
 778:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 7845              		.loc 20 778 28 is_stmt 0 view .LVU2160
 7846 051a 1420     		movs	r0, #20
 7847 051c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7848              	.LVL472:
 7849 0520 0346     		mov	r3, r0	@ movhi
 7850 0522 0DF21D10 		addw	r0, sp, #285
 7851 0526 ADF85830 		strh	r3, [sp, #88]	@ movhi
 7852 052a 1699     		ldr	r1, [sp, #88]
 7853 052c FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7854              	.LVL473:
 780:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 7855              		.loc 20 780 5 is_stmt 1 view .LVU2161
 780:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 7856              		.loc 20 780 28 is_stmt 0 view .LVU2162
 7857 0530 1620     		movs	r0, #22
 7858 0532 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7859              	.LVL474:
 7860 0536 0346     		mov	r3, r0	@ movhi
 7861 0538 0DF59770 		add	r0, sp, #302
 7862 053c ADF85C30 		strh	r3, [sp, #92]	@ movhi
 7863 0540 1799     		ldr	r1, [sp, #92]
 7864 0542 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7865              	.LVL475:
 781:Veno-Echo.cpp **** 
 7866              		.loc 20 781 5 is_stmt 1 view .LVU2163
 781:Veno-Echo.cpp **** 
 7867              		.loc 20 781 25 is_stmt 0 view .LVU2164
 7868 0546 1920     		movs	r0, #25
 7869 0548 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 268


 7870              	.LVL476:
 7871 054c 0346     		mov	r3, r0	@ movhi
 7872 054e 0E20     		movs	r0, #14
 7873 0550 ADF86030 		strh	r3, [sp, #96]	@ movhi
 7874 0554 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7875              	.LVL477:
 7876 0558 0346     		mov	r3, r0	@ movhi
 7877 055a 0D20     		movs	r0, #13
 7878 055c ADF86430 		strh	r3, [sp, #100]	@ movhi
 7879 0560 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7880              	.LVL478:
 7881 0564 0346     		mov	r3, r0	@ movhi
 7882 0566 0C20     		movs	r0, #12
 7883 0568 ADF86830 		strh	r3, [sp, #104]	@ movhi
 7884 056c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7885              	.LVL479:
 7886 0570 BDF86810 		ldrh	r1, [sp, #104]
 7887 0574 0822     		movs	r2, #8
 7888 0576 199B     		ldr	r3, [sp, #100]
 7889 0578 ADF80010 		strh	r1, [sp]	@ movhi
 7890 057c ADF80400 		strh	r0, [sp, #4]	@ movhi
 7891 0580 1899     		ldr	r1, [sp, #96]
 7892 0582 ADF86C00 		strh	r0, [sp, #108]	@ movhi
 7893 0586 0DF23F10 		addw	r0, sp, #319
 7894 058a FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
 7895              	.LVL480:
 784:Veno-Echo.cpp ****     hw.adc.Start();
 7896              		.loc 20 784 5 is_stmt 1 view .LVU2165
 784:Veno-Echo.cpp ****     hw.adc.Start();
 7897              		.loc 20 784 16 is_stmt 0 view .LVU2166
 7898 058e 32A9     		add	r1, sp, #200
 7899 0590 0623     		movs	r3, #6
 7900 0592 0822     		movs	r2, #8
 7901 0594 3448     		ldr	r0, .L431+56
 7902 0596 FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 7903              	.LVL481:
 785:Veno-Echo.cpp **** 
 7904              		.loc 20 785 5 is_stmt 1 view .LVU2167
 785:Veno-Echo.cpp **** 
 7905              		.loc 20 785 17 is_stmt 0 view .LVU2168
 7906 059a 3348     		ldr	r0, .L431+56
 7907 059c FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 7908              	.LVL482:
 788:Veno-Echo.cpp ****     // start audio callback
 7909              		.loc 20 788 5 is_stmt 1 view .LVU2169
 788:Veno-Echo.cpp ****     // start audio callback
 7910              		.loc 20 788 25 is_stmt 0 view .LVU2170
 7911 05a0 4146     		mov	r1, r8
 7912 05a2 2648     		ldr	r0, .L431+12
 7913 05a4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 7914              	.LVL483:
 790:Veno-Echo.cpp **** 
 7915              		.loc 20 790 5 is_stmt 1 view .LVU2171
 790:Veno-Echo.cpp **** 
 7916              		.loc 20 790 18 is_stmt 0 view .LVU2172
 7917 05a8 3049     		ldr	r1, .L431+60
 7918 05aa 2448     		ldr	r0, .L431+12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 269


 7919 05ac FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
 7920              	.LVL484:
 7921              	.L419:
 794:Veno-Echo.cpp ****      {  
 7922              		.loc 20 794 6 is_stmt 1 view .LVU2173
 7923              	.LBB1683:
 797:Veno-Echo.cpp ****         //static bool SaveWaitFlag{};
 7924              		.loc 20 797 9 view .LVU2174
 800:Veno-Echo.cpp ****         {
 7925              		.loc 20 800 9 view .LVU2175
 7926              	.LBB1684:
 7927              	.LBB1685:
 7928              	.LBI1685:
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) volatile noexcept
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator bool() const noexcept
 7929              		.loc 23 87 5 view .LVU2176
 7930              	.LBE1685:
 7931              	.LBE1684:
 7932              	.LBE1683:
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.load(); }
 7933              		.loc 23 88 7 view .LVU2177
 7934              	.LBB1716:
 7935              	.LBB1713:
 7936              	.LBB1691:
 7937              	.LBB1686:
 7938              	.LBI1686:
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i,
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    memory_order __m = memory_order_seq_cst) volatile noexcept
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE __int_type
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       load(memory_order __m = memory_order_seq_cst) const noexcept
 7939              		.loc 22 413 7 view .LVU2178
 7940              		.loc 22 413 7 is_stmt 0 view .LVU2179
 7941              	.LBE1686:
 7942              	.LBE1691:
 802:Veno-Echo.cpp ****             saveState = WAITING;    //set flag - start waiting
 7943              		.loc 20 802 13 is_stmt 1 view .LVU2180
 7944              	.LBB1692:
 7945              	.LBI1692:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 7946              		.loc 23 80 5 view .LVU2181
 7947              	.LBE1692:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 270


 7948              	.LBE1713:
 7949              	.LBE1716:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 7950              		.loc 23 81 7 view .LVU2182
 7951              	.LBB1717:
 7952              	.LBB1714:
 7953              	.LBB1701:
 7954              	.LBB1693:
 7955              	.LBI1693:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 7956              		.loc 22 288 7 view .LVU2183
 7957              	.LBB1694:
 7958              	.LBI1694:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 7959              		.loc 22 390 7 view .LVU2184
 7960              	.LBE1694:
 7961              	.LBE1693:
 7962              	.LBE1701:
 7963              	.LBB1702:
 809:Veno-Echo.cpp ****            {
 7964              		.loc 20 809 12 view .LVU2185
 7965              	.LBE1702:
 7966              	.LBB1707:
 7967              	.LBB1689:
 7968              	.LBB1687:
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_release);
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_load_n(&_M_i, int(__m));
 7969              		.loc 22 419 24 is_stmt 0 view .LVU2186
 7970 05b0 BFF35B8F 		dmb	ish
 7971 05b4 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 7972              	.LBE1687:
 7973              	.LBE1689:
 7974              	.LBE1707:
 7975              	.LBB1708:
 7976              	.LBB1699:
 7977              	.LBB1697:
 7978              	.LBB1695:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 7979              		.loc 22 397 18 view .LVU2187
 7980 05b6 0021     		movs	r1, #0
 7981              	.LBE1695:
 7982              	.LBE1697:
 7983              	.LBE1699:
 7984              	.LBE1708:
 803:Veno-Echo.cpp ****             saveTimer = System::GetNow();   //reset timer
 7985              		.loc 20 803 23 view .LVU2188
 7986 05b8 0122     		movs	r2, #1
 7987              	.LBB1709:
 7988              	.LBB1690:
 7989              	.LBB1688:
 7990              		.loc 22 419 24 view .LVU2189
 7991 05ba BFF35B8F 		dmb	ish
 7992              	.LBE1688:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 271


 7993              	.LBE1690:
 7994              	.LBE1709:
 800:Veno-Echo.cpp ****         {
 7995              		.loc 20 800 9 view .LVU2190
 7996 05be 4BB1     		cbz	r3, .L420
 7997              	.LBB1710:
 7998              	.LBB1700:
 7999              	.LBB1698:
 8000              	.LBB1696:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8001              		.loc 22 397 18 view .LVU2191
 8002 05c0 BFF35B8F 		dmb	ish
 8003 05c4 2170     		strb	r1, [r4]
 8004 05c6 BFF35B8F 		dmb	ish
 8005              	.LVL485:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8006              		.loc 22 397 18 view .LVU2192
 8007              	.LBE1696:
 8008              	.LBE1698:
 8009              	.LBE1700:
 8010              	.LBE1710:
 803:Veno-Echo.cpp ****             saveTimer = System::GetNow();   //reset timer
 8011              		.loc 20 803 13 is_stmt 1 view .LVU2193
 803:Veno-Echo.cpp ****             saveTimer = System::GetNow();   //reset timer
 8012              		.loc 20 803 23 is_stmt 0 view .LVU2194
 8013 05ca 2A70     		strb	r2, [r5]
 804:Veno-Echo.cpp ****         }
 8014              		.loc 20 804 13 is_stmt 1 view .LVU2195
 804:Veno-Echo.cpp ****         }
 8015              		.loc 20 804 39 is_stmt 0 view .LVU2196
 8016 05cc FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8017              	.LVL486:
 804:Veno-Echo.cpp ****         }
 8018              		.loc 20 804 23 view .LVU2197
 8019 05d0 3060     		str	r0, [r6]
 8020 05d2 EDE7     		b	.L419
 8021              	.LVL487:
 8022              	.L420:
 8023              	.LBB1711:
 8024              	.LBB1703:
 809:Veno-Echo.cpp ****            {
 8025              		.loc 20 809 25 view .LVU2198
 8026 05d4 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 809:Veno-Echo.cpp ****            {
 8027              		.loc 20 809 12 view .LVU2199
 8028 05d6 012B     		cmp	r3, #1
 8029 05d8 0BD0     		beq	.L427
 8030              	.L422:
 8031              	.LBE1703:
 825:Veno-Echo.cpp ****            {
 8032              		.loc 20 825 12 is_stmt 1 view .LVU2200
 8033 05da 022B     		cmp	r3, #2
 8034 05dc E8D1     		bne	.L419
 827:Veno-Echo.cpp ****             {
 8035              		.loc 20 827 13 view .LVU2201
 827:Veno-Echo.cpp ****             {
 8036              		.loc 20 827 30 is_stmt 0 view .LVU2202
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 272


 8037 05de FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8038              	.LVL488:
 829:Veno-Echo.cpp ****             }
 8039              		.loc 20 829 21 is_stmt 1 view .LVU2203
 827:Veno-Echo.cpp ****             {
 8040              		.loc 20 827 33 is_stmt 0 view .LVU2204
 8041 05e2 3368     		ldr	r3, [r6]
 829:Veno-Echo.cpp ****             }
 8042              		.loc 20 829 31 view .LVU2205
 8043 05e4 0022     		movs	r2, #0
 827:Veno-Echo.cpp ****             {
 8044              		.loc 20 827 33 view .LVU2206
 8045 05e6 C01A     		subs	r0, r0, r3
 827:Veno-Echo.cpp ****             {
 8046              		.loc 20 827 13 view .LVU2207
 8047 05e8 B0F5966F 		cmp	r0, #1200
 8048 05ec E0D9     		bls	.L419
 829:Veno-Echo.cpp ****             }
 8049              		.loc 20 829 31 view .LVU2208
 8050 05ee 2A70     		strb	r2, [r5]
 8051 05f0 DEE7     		b	.L419
 8052              	.L427:
 8053              	.LBE1711:
 8054              	.LBE1714:
 8055              	.LBE1717:
 811:Veno-Echo.cpp ****                 {
 8056              		.loc 20 811 16 is_stmt 1 view .LVU2209
 8057              	.LBB1718:
 8058              	.LBB1715:
 8059              	.LBB1712:
 8060              	.LBB1706:
 8061              	.LBB1704:
 811:Veno-Echo.cpp ****                 {
 8062              		.loc 20 811 33 is_stmt 0 view .LVU2210
 8063 05f2 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8064              	.LVL489:
 811:Veno-Echo.cpp ****                 {
 8065              		.loc 20 811 36 view .LVU2211
 8066 05f6 3368     		ldr	r3, [r6]
 8067 05f8 C01A     		subs	r0, r0, r3
 811:Veno-Echo.cpp ****                 {
 8068              		.loc 20 811 16 view .LVU2212
 8069 05fa B0F57A7F 		cmp	r0, #1000
 8070 05fe 01D8     		bhi	.L423
 8071              	.L426:
 8072 0600 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 8073 0602 EAE7     		b	.L422
 8074              	.L423:
 8075              	.LBB1705:
 813:Veno-Echo.cpp ****                     
 8076              		.loc 20 813 21 is_stmt 1 view .LVU2213
 815:Veno-Echo.cpp ****                     if (SaveSettings(ToSave) == DSY_MEMORY_OK)  //save settings
 8077              		.loc 20 815 30 is_stmt 0 view .LVU2214
 8078 0604 DFF868C0 		ldr	ip, .L431+64
 8079 0608 27AF     		add	r7, sp, #156
 813:Veno-Echo.cpp ****                     
 8080              		.loc 20 813 31 view .LVU2215
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 273


 8081 060a 4FF0020E 		mov	lr, #2
 815:Veno-Echo.cpp ****                     if (SaveSettings(ToSave) == DSY_MEMORY_OK)  //save settings
 8082              		.loc 20 815 30 view .LVU2216
 8083 060e BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 8084 0612 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 8085 0614 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 8086 0618 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 8087 061a 9CE80700 		ldm	ip, {r0, r1, r2}
 8088 061e 87E80700 		stm	r7, {r0, r1, r2}
 816:Veno-Echo.cpp ****                     {
 8089              		.loc 20 816 37 view .LVU2217
 8090 0622 27A8     		add	r0, sp, #156
 813:Veno-Echo.cpp ****                     
 8091              		.loc 20 813 31 view .LVU2218
 8092 0624 85F800E0 		strb	lr, [r5]
 815:Veno-Echo.cpp ****                     if (SaveSettings(ToSave) == DSY_MEMORY_OK)  //save settings
 8093              		.loc 20 815 21 is_stmt 1 view .LVU2219
 816:Veno-Echo.cpp ****                     {
 8094              		.loc 20 816 21 view .LVU2220
 816:Veno-Echo.cpp ****                     {
 8095              		.loc 20 816 37 is_stmt 0 view .LVU2221
 8096 0628 FFF7FEFF 		bl	_Z12SaveSettingsRK8Settings
 8097              	.LVL490:
 8098 062c E8E7     		b	.L426
 8099              	.L432:
 8100 062e 00BF     		.align	2
 8101              	.L431:
 8102 0630 00000000 		.word	.LANCHOR38
 8103 0634 00004843 		.word	1128792064
 8104 0638 3333333F 		.word	1060320051
 8105 063c 00000000 		.word	.LANCHOR4
 8106 0640 00000000 		.word	.LANCHOR108
 8107 0644 00000000 		.word	.LANCHOR109
 8108 0648 00000000 		.word	.LANCHOR76
 8109 064c 0000C842 		.word	1120403456
 8110 0650 00000000 		.word	.LANCHOR16
 8111 0654 00000000 		.word	.LANCHOR110
 8112 0658 00000000 		.word	.LANCHOR111
 8113 065c 808D5B00 		.word	6000000
 8114 0660 00000000 		.word	.LANCHOR26
 8115 0664 00000000 		.word	.LANCHOR89
 8116 0668 18000000 		.word	.LANCHOR4+24
 8117 066c 00000000 		.word	_ZL13AudioCallbackPfS_j
 8118 0670 00000000 		.word	.LANCHOR15
 8119              	.LBE1705:
 8120              	.LBE1704:
 8121              	.LBE1706:
 8122              	.LBE1712:
 8123              	.LBE1715:
 8124              	.LBE1718:
 8125              		.cfi_endproc
 8126              	.LFE4311:
 8128              		.section	.text._Z13TurnOnAllLEDsv,"ax",%progbits
 8129              		.align	1
 8130              		.p2align 2,,3
 8131              		.global	_Z13TurnOnAllLEDsv
 8132              		.syntax unified
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 274


 8133              		.thumb
 8134              		.thumb_func
 8135              		.fpu fpv5-d16
 8137              	_Z13TurnOnAllLEDsv:
 8138              	.LFB4334:
1959:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 8139              		.loc 20 1959 1 is_stmt 1 view -0
 8140              		.cfi_startproc
 8141              		@ args = 0, pretend = 0, frame = 0
 8142              		@ frame_needed = 0, uses_anonymous_args = 0
1960:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 8143              		.loc 20 1960 5 view .LVU2223
1959:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 8144              		.loc 20 1959 1 is_stmt 0 view .LVU2224
 8145 0000 08B5     		push	{r3, lr}
 8146              		.cfi_def_cfa_offset 8
 8147              		.cfi_offset 3, -8
 8148              		.cfi_offset 14, -4
1960:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 8149              		.loc 20 1960 26 view .LVU2225
 8150 0002 B7EE000A 		vmov.f32	s0, #1.0e+0
 8151 0006 1148     		ldr	r0, .L435
 8152 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8153              	.LVL491:
1961:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 8154              		.loc 20 1961 5 is_stmt 1 view .LVU2226
1961:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 8155              		.loc 20 1961 28 is_stmt 0 view .LVU2227
 8156 000c B7EE000A 		vmov.f32	s0, #1.0e+0
 8157 0010 0F48     		ldr	r0, .L435+4
 8158 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8159              	.LVL492:
1962:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 8160              		.loc 20 1962 5 is_stmt 1 view .LVU2228
1962:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 8161              		.loc 20 1962 28 is_stmt 0 view .LVU2229
 8162 0016 B7EE000A 		vmov.f32	s0, #1.0e+0
 8163 001a 0E48     		ldr	r0, .L435+8
 8164 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8165              	.LVL493:
1963:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 8166              		.loc 20 1963 5 is_stmt 1 view .LVU2230
1963:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 8167              		.loc 20 1963 21 is_stmt 0 view .LVU2231
 8168 0020 B7EE000A 		vmov.f32	s0, #1.0e+0
 8169 0024 0C48     		ldr	r0, .L435+12
 8170 0026 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8171              	.LVL494:
1964:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 8172              		.loc 20 1964 5 is_stmt 1 view .LVU2232
1964:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 8173              		.loc 20 1964 21 is_stmt 0 view .LVU2233
 8174 002a B7EE000A 		vmov.f32	s0, #1.0e+0
 8175 002e 0B48     		ldr	r0, .L435+16
 8176 0030 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8177              	.LVL495:
1965:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 275


 8178              		.loc 20 1965 5 is_stmt 1 view .LVU2234
1965:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 8179              		.loc 20 1965 19 is_stmt 0 view .LVU2235
 8180 0034 B7EE000A 		vmov.f32	s0, #1.0e+0
 8181 0038 0948     		ldr	r0, .L435+20
 8182 003a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8183              	.LVL496:
1966:Veno-Echo.cpp **** }
 8184              		.loc 20 1966 5 is_stmt 1 view .LVU2236
1966:Veno-Echo.cpp **** }
 8185              		.loc 20 1966 19 is_stmt 0 view .LVU2237
 8186 003e B7EE000A 		vmov.f32	s0, #1.0e+0
 8187 0042 0848     		ldr	r0, .L435+24
1967:Veno-Echo.cpp **** 
 8188              		.loc 20 1967 1 view .LVU2238
 8189 0044 BDE80840 		pop	{r3, lr}
 8190              		.cfi_restore 14
 8191              		.cfi_restore 3
 8192              		.cfi_def_cfa_offset 0
1966:Veno-Echo.cpp **** }
 8193              		.loc 20 1966 19 view .LVU2239
 8194 0048 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 8195              	.LVL497:
 8196              	.L436:
 8197              		.align	2
 8198              	.L435:
 8199 004c 00000000 		.word	.LANCHOR89
 8200 0050 04000000 		.word	.LANCHOR0+4
 8201 0054 04000000 		.word	.LANCHOR1+4
 8202 0058 00000000 		.word	.LANCHOR94
 8203 005c 00000000 		.word	.LANCHOR95
 8204 0060 00000000 		.word	.LANCHOR96
 8205 0064 00000000 		.word	.LANCHOR97
 8206              		.cfi_endproc
 8207              	.LFE4334:
 8209              		.section	.text._Z12ResetAllLEDsv,"ax",%progbits
 8210              		.align	1
 8211              		.p2align 2,,3
 8212              		.global	_Z12ResetAllLEDsv
 8213              		.syntax unified
 8214              		.thumb
 8215              		.thumb_func
 8216              		.fpu fpv5-d16
 8218              	_Z12ResetAllLEDsv:
 8219              	.LFB4335:
1970:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 8220              		.loc 20 1970 1 is_stmt 1 view -0
 8221              		.cfi_startproc
 8222              		@ args = 0, pretend = 0, frame = 0
 8223              		@ frame_needed = 0, uses_anonymous_args = 0
1971:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 8224              		.loc 20 1971 5 view .LVU2241
1970:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 8225              		.loc 20 1970 1 is_stmt 0 view .LVU2242
 8226 0000 08B5     		push	{r3, lr}
 8227              		.cfi_def_cfa_offset 8
 8228              		.cfi_offset 3, -8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 276


 8229              		.cfi_offset 14, -4
1971:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 8230              		.loc 20 1971 26 view .LVU2243
 8231 0002 9FED1E0A 		vldr.32	s0, .L444
 8232 0006 1E48     		ldr	r0, .L444+4
 8233 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8234              	.LVL498:
1972:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 8235              		.loc 20 1972 5 is_stmt 1 view .LVU2244
1972:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 8236              		.loc 20 1972 28 is_stmt 0 view .LVU2245
 8237 000c 9FED1B0A 		vldr.32	s0, .L444
 8238 0010 1C48     		ldr	r0, .L444+8
 8239 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8240              	.LVL499:
1973:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 8241              		.loc 20 1973 5 is_stmt 1 view .LVU2246
1973:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 8242              		.loc 20 1973 28 is_stmt 0 view .LVU2247
 8243 0016 1C48     		ldr	r0, .L444+12
 8244 0018 9FED180A 		vldr.32	s0, .L444
 8245 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8246              	.LVL500:
1974:Veno-Echo.cpp ****     {
 8247              		.loc 20 1974 5 is_stmt 1 view .LVU2248
1974:Veno-Echo.cpp ****     {
 8248              		.loc 20 1974 26 is_stmt 0 view .LVU2249
 8249 0020 1A48     		ldr	r0, .L444+16
 8250 0022 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8251              	.LVL501:
1974:Veno-Echo.cpp ****     {
 8252              		.loc 20 1974 5 view .LVU2250
 8253 0026 C8B9     		cbnz	r0, .L438
1976:Veno-Echo.cpp ****     }
 8254              		.loc 20 1976 9 is_stmt 1 view .LVU2251
1976:Veno-Echo.cpp ****     }
 8255              		.loc 20 1976 25 is_stmt 0 view .LVU2252
 8256 0028 1848     		ldr	r0, .L444+16
 8257 002a 9FED140A 		vldr.32	s0, .L444
 8258 002e FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8259              	.LVL502:
1983:Veno-Echo.cpp ****     {
 8260              		.loc 20 1983 5 is_stmt 1 view .LVU2253
1983:Veno-Echo.cpp ****     {
 8261              		.loc 20 1983 26 is_stmt 0 view .LVU2254
 8262 0032 1748     		ldr	r0, .L444+20
 8263 0034 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8264              	.LVL503:
1983:Veno-Echo.cpp ****     {
 8265              		.loc 20 1983 5 view .LVU2255
 8266 0038 D0B9     		cbnz	r0, .L440
 8267              	.L443:
1985:Veno-Echo.cpp ****     }
 8268              		.loc 20 1985 9 is_stmt 1 view .LVU2256
1985:Veno-Echo.cpp ****     }
 8269              		.loc 20 1985 25 is_stmt 0 view .LVU2257
 8270 003a 9FED100A 		vldr.32	s0, .L444
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 277


 8271 003e 1448     		ldr	r0, .L444+20
 8272 0040 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8273              	.LVL504:
 8274              	.L441:
1992:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 8275              		.loc 20 1992 5 is_stmt 1 view .LVU2258
1992:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 8276              		.loc 20 1992 19 is_stmt 0 view .LVU2259
 8277 0044 9FED0D0A 		vldr.32	s0, .L444
 8278 0048 1248     		ldr	r0, .L444+24
 8279 004a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8280              	.LVL505:
1993:Veno-Echo.cpp **** }
 8281              		.loc 20 1993 5 is_stmt 1 view .LVU2260
1993:Veno-Echo.cpp **** }
 8282              		.loc 20 1993 19 is_stmt 0 view .LVU2261
 8283 004e 9FED0B0A 		vldr.32	s0, .L444
 8284 0052 1148     		ldr	r0, .L444+28
1994:Veno-Echo.cpp **** 
 8285              		.loc 20 1994 1 view .LVU2262
 8286 0054 BDE80840 		pop	{r3, lr}
 8287              		.cfi_remember_state
 8288              		.cfi_restore 14
 8289              		.cfi_restore 3
 8290              		.cfi_def_cfa_offset 0
1993:Veno-Echo.cpp **** }
 8291              		.loc 20 1993 19 view .LVU2263
 8292 0058 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 8293              	.LVL506:
 8294              	.L438:
 8295              		.cfi_restore_state
1980:Veno-Echo.cpp ****     }
 8296              		.loc 20 1980 8 is_stmt 1 view .LVU2264
1980:Veno-Echo.cpp ****     }
 8297              		.loc 20 1980 24 is_stmt 0 view .LVU2265
 8298 005c 0B48     		ldr	r0, .L444+16
 8299 005e B7EE000A 		vmov.f32	s0, #1.0e+0
 8300 0062 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8301              	.LVL507:
1983:Veno-Echo.cpp ****     {
 8302              		.loc 20 1983 5 is_stmt 1 view .LVU2266
1983:Veno-Echo.cpp ****     {
 8303              		.loc 20 1983 26 is_stmt 0 view .LVU2267
 8304 0066 0A48     		ldr	r0, .L444+20
 8305 0068 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8306              	.LVL508:
1983:Veno-Echo.cpp ****     {
 8307              		.loc 20 1983 5 view .LVU2268
 8308 006c 0028     		cmp	r0, #0
 8309 006e E4D0     		beq	.L443
 8310              	.L440:
1989:Veno-Echo.cpp ****     }
 8311              		.loc 20 1989 9 is_stmt 1 view .LVU2269
1989:Veno-Echo.cpp ****     }
 8312              		.loc 20 1989 25 is_stmt 0 view .LVU2270
 8313 0070 B7EE000A 		vmov.f32	s0, #1.0e+0
 8314 0074 0648     		ldr	r0, .L444+20
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 278


 8315 0076 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8316              	.LVL509:
 8317 007a E3E7     		b	.L441
 8318              	.L445:
 8319              		.align	2
 8320              	.L444:
 8321 007c 00000000 		.word	0
 8322 0080 00000000 		.word	.LANCHOR89
 8323 0084 04000000 		.word	.LANCHOR0+4
 8324 0088 04000000 		.word	.LANCHOR1+4
 8325 008c 00000000 		.word	.LANCHOR94
 8326 0090 00000000 		.word	.LANCHOR95
 8327 0094 00000000 		.word	.LANCHOR96
 8328 0098 00000000 		.word	.LANCHOR97
 8329              		.cfi_endproc
 8330              	.LFE4335:
 8332              		.section	.text._Z14Update_Buttonsv,"ax",%progbits
 8333              		.align	1
 8334              		.p2align 2,,3
 8335              		.global	_Z14Update_Buttonsv
 8336              		.syntax unified
 8337              		.thumb
 8338              		.thumb_func
 8339              		.fpu fpv5-d16
 8341              	_Z14Update_Buttonsv:
 8342              	.LFB4329:
1638:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 8343              		.loc 20 1638 1 is_stmt 1 view -0
 8344              		.cfi_startproc
 8345              		@ args = 0, pretend = 0, frame = 0
 8346              		@ frame_needed = 0, uses_anonymous_args = 0
1639:Veno-Echo.cpp ****     static uint32_t resetTime{};
 8347              		.loc 20 1639 5 view .LVU2272
1640:Veno-Echo.cpp ****     static int buttonstate{};
 8348              		.loc 20 1640 5 view .LVU2273
1641:Veno-Echo.cpp **** 
 8349              		.loc 20 1641 5 view .LVU2274
1643:Veno-Echo.cpp ****     Rev_R_sw.update();
 8350              		.loc 20 1643 5 view .LVU2275
1638:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 8351              		.loc 20 1638 1 is_stmt 0 view .LVU2276
 8352 0000 70B5     		push	{r4, r5, r6, lr}
 8353              		.cfi_def_cfa_offset 16
 8354              		.cfi_offset 4, -16
 8355              		.cfi_offset 5, -12
 8356              		.cfi_offset 6, -8
 8357              		.cfi_offset 14, -4
1643:Veno-Echo.cpp ****     Rev_R_sw.update();
 8358              		.loc 20 1643 20 view .LVU2277
 8359 0002 9948     		ldr	r0, .L501
 8360 0004 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8361              	.LVL510:
1644:Veno-Echo.cpp ****     LPF_sw.update();
 8362              		.loc 20 1644 5 is_stmt 1 view .LVU2278
1644:Veno-Echo.cpp ****     LPF_sw.update();
 8363              		.loc 20 1644 20 is_stmt 0 view .LVU2279
 8364 0008 9848     		ldr	r0, .L501+4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 279


 8365 000a FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8366              	.LVL511:
1645:Veno-Echo.cpp ****     HPF_sw.update();
 8367              		.loc 20 1645 5 is_stmt 1 view .LVU2280
1645:Veno-Echo.cpp ****     HPF_sw.update();
 8368              		.loc 20 1645 18 is_stmt 0 view .LVU2281
 8369 000e 9848     		ldr	r0, .L501+8
 8370 0010 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8371              	.LVL512:
1646:Veno-Echo.cpp ****     Tap_Button.update();
 8372              		.loc 20 1646 5 is_stmt 1 view .LVU2282
1649:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8373              		.loc 20 1649 26 is_stmt 0 view .LVU2283
 8374 0014 974C     		ldr	r4, .L501+12
1646:Veno-Echo.cpp ****     Tap_Button.update();
 8375              		.loc 20 1646 18 view .LVU2284
 8376 0016 9848     		ldr	r0, .L501+16
 8377 0018 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8378              	.LVL513:
1647:Veno-Echo.cpp **** 
 8379              		.loc 20 1647 5 is_stmt 1 view .LVU2285
1647:Veno-Echo.cpp **** 
 8380              		.loc 20 1647 22 is_stmt 0 view .LVU2286
 8381 001c 9748     		ldr	r0, .L501+20
 8382 001e FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8383              	.LVL514:
1649:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8384              		.loc 20 1649 5 is_stmt 1 view .LVU2287
1649:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8385              		.loc 20 1649 26 is_stmt 0 view .LVU2288
 8386 0022 2046     		mov	r0, r4
 8387 0024 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8388              	.LVL515:
1650:Veno-Echo.cpp ****     //TapButton.Debounce();
 8389              		.loc 20 1650 5 is_stmt 1 view .LVU2289
1650:Veno-Echo.cpp ****     //TapButton.Debounce();
 8390              		.loc 20 1650 26 is_stmt 0 view .LVU2290
 8391 0028 9548     		ldr	r0, .L501+24
 8392 002a FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8393              	.LVL516:
1652:Veno-Echo.cpp ****     ClockIn.Debounce();
 8394              		.loc 20 1652 5 is_stmt 1 view .LVU2291
1652:Veno-Echo.cpp ****     ClockIn.Debounce();
 8395              		.loc 20 1652 18 is_stmt 0 view .LVU2292
 8396 002e 9548     		ldr	r0, .L501+28
 8397 0030 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8398              	.LVL517:
1653:Veno-Echo.cpp ****     //gate inputs
 8399              		.loc 20 1653 5 is_stmt 1 view .LVU2293
1653:Veno-Echo.cpp ****     //gate inputs
 8400              		.loc 20 1653 21 is_stmt 0 view .LVU2294
 8401 0034 9448     		ldr	r0, .L501+32
 8402 0036 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8403              	.LVL518:
1655:Veno-Echo.cpp ****     {
 8404              		.loc 20 1655 5 is_stmt 1 view .LVU2295
 8405              		.loc 1 69 38 view .LVU2296
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 280


1655:Veno-Echo.cpp ****     {
 8406              		.loc 20 1655 5 is_stmt 0 view .LVU2297
 8407 003a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 8408 003c 7F2B     		cmp	r3, #127
 8409 003e 00F0DC80 		beq	.L493
 8410              	.L447:
1669:Veno-Echo.cpp ****     {
 8411              		.loc 20 1669 5 is_stmt 1 view .LVU2298
 8412              	.LVL519:
 8413              		.loc 1 69 38 view .LVU2299
1669:Veno-Echo.cpp ****     {
 8414              		.loc 20 1669 32 is_stmt 0 view .LVU2300
 8415 0042 8F4B     		ldr	r3, .L501+24
1669:Veno-Echo.cpp ****     {
 8416              		.loc 20 1669 5 view .LVU2301
 8417 0044 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8418 0046 7F2B     		cmp	r3, #127
 8419 0048 00F0BE80 		beq	.L494
 8420              	.L449:
1685:Veno-Echo.cpp ****     {
 8421              		.loc 20 1685 5 is_stmt 1 view .LVU2302
1685:Veno-Echo.cpp ****     {
 8422              		.loc 20 1685 28 is_stmt 0 view .LVU2303
 8423 004c 8648     		ldr	r0, .L501
1687:Veno-Echo.cpp ****         if (buttonstate == 3)
 8424              		.loc 20 1687 21 view .LVU2304
 8425 004e 8F4C     		ldr	r4, .L501+36
1685:Veno-Echo.cpp ****     {
 8426              		.loc 20 1685 28 view .LVU2305
 8427 0050 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8428              	.LVL520:
1685:Veno-Echo.cpp ****     {
 8429              		.loc 20 1685 5 view .LVU2306
 8430 0054 D0B1     		cbz	r0, .L451
1687:Veno-Echo.cpp ****         if (buttonstate == 3)
 8431              		.loc 20 1687 9 is_stmt 1 view .LVU2307
1687:Veno-Echo.cpp ****         if (buttonstate == 3)
 8432              		.loc 20 1687 21 is_stmt 0 view .LVU2308
 8433 0056 2368     		ldr	r3, [r4]
 8434 0058 0133     		adds	r3, r3, #1
1688:Veno-Echo.cpp ****         {
 8435              		.loc 20 1688 9 view .LVU2309
 8436 005a 032B     		cmp	r3, #3
1687:Veno-Echo.cpp ****         if (buttonstate == 3)
 8437              		.loc 20 1687 21 view .LVU2310
 8438 005c 2360     		str	r3, [r4]
1688:Veno-Echo.cpp ****         {
 8439              		.loc 20 1688 9 is_stmt 1 view .LVU2311
 8440 005e 00F0E580 		beq	.L495
 8441              	.L452:
1692:Veno-Echo.cpp ****         {
 8442              		.loc 20 1692 9 view .LVU2312
1692:Veno-Echo.cpp ****         {
 8443              		.loc 20 1692 29 is_stmt 0 view .LVU2313
 8444 0062 8148     		ldr	r0, .L501
 8445 0064 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8446              	.LVL521:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 281


1698:Veno-Echo.cpp ****         }
 8447              		.loc 20 1698 31 view .LVU2314
 8448 0068 F7EE007A 		vmov.f32	s15, #1.0e+0
 8449 006c 9FED887A 		vldr.32	s14, .L501+40
 8450 0070 0028     		cmp	r0, #0
 8451 0072 8849     		ldr	r1, .L501+44
 8452              	.LBB1719:
 8453              	.LBB1720:
 8454              	.LBB1721:
 8455              	.LBB1722:
 8456              	.LBB1723:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8457              		.loc 22 397 18 view .LVU2315
 8458 0074 4FF00102 		mov	r2, #1
 8459 0078 874B     		ldr	r3, .L501+48
 8460              	.LBE1723:
 8461              	.LBE1722:
 8462              	.LBE1721:
 8463              	.LBE1720:
 8464              	.LBE1719:
1698:Veno-Echo.cpp ****         }
 8465              		.loc 20 1698 31 view .LVU2316
 8466 007a 47FE277A 		vseleq.f32	s15, s14, s15
 8467 007e C1ED097A 		vstr.32	s15, [r1, #36]
1700:Veno-Echo.cpp ****     }
 8468              		.loc 20 1700 9 is_stmt 1 view .LVU2317
 8469              	.LVL522:
 8470              	.LBB1728:
 8471              	.LBI1719:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8472              		.loc 23 80 5 view .LVU2318
 8473              	.LBB1727:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8474              		.loc 23 81 7 view .LVU2319
 8475              	.LBB1726:
 8476              	.LBI1721:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8477              		.loc 22 288 7 view .LVU2320
 8478              	.LBB1725:
 8479              	.LBI1722:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8480              		.loc 22 390 7 view .LVU2321
 8481              	.LBB1724:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8482              		.loc 22 397 18 is_stmt 0 view .LVU2322
 8483 0082 BFF35B8F 		dmb	ish
 8484 0086 1A70     		strb	r2, [r3]
 8485 0088 BFF35B8F 		dmb	ish
 8486              	.LVL523:
 8487              	.L451:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8488              		.loc 22 397 18 view .LVU2323
 8489              	.LBE1724:
 8490              	.LBE1725:
 8491              	.LBE1726:
 8492              	.LBE1727:
 8493              	.LBE1728:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 282


1703:Veno-Echo.cpp ****     {
 8494              		.loc 20 1703 5 is_stmt 1 view .LVU2324
1703:Veno-Echo.cpp ****     {
 8495              		.loc 20 1703 29 is_stmt 0 view .LVU2325
 8496 008c 7648     		ldr	r0, .L501
 8497 008e FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8498              	.LVL524:
1703:Veno-Echo.cpp ****     {
 8499              		.loc 20 1703 5 view .LVU2326
 8500 0092 10B1     		cbz	r0, .L454
1705:Veno-Echo.cpp ****     }
 8501              		.loc 20 1705 9 is_stmt 1 view .LVU2327
1705:Veno-Echo.cpp ****     }
 8502              		.loc 20 1705 21 is_stmt 0 view .LVU2328
 8503 0094 2368     		ldr	r3, [r4]
 8504 0096 013B     		subs	r3, r3, #1
 8505 0098 2360     		str	r3, [r4]
 8506              	.L454:
1708:Veno-Echo.cpp ****     {
 8507              		.loc 20 1708 5 is_stmt 1 view .LVU2329
1708:Veno-Echo.cpp ****     {
 8508              		.loc 20 1708 28 is_stmt 0 view .LVU2330
 8509 009a 7448     		ldr	r0, .L501+4
 8510 009c FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8511              	.LVL525:
1708:Veno-Echo.cpp ****     {
 8512              		.loc 20 1708 5 view .LVU2331
 8513 00a0 D0B1     		cbz	r0, .L455
1710:Veno-Echo.cpp ****         if (buttonstate == 3)
 8514              		.loc 20 1710 9 is_stmt 1 view .LVU2332
1710:Veno-Echo.cpp ****         if (buttonstate == 3)
 8515              		.loc 20 1710 21 is_stmt 0 view .LVU2333
 8516 00a2 2368     		ldr	r3, [r4]
 8517 00a4 0133     		adds	r3, r3, #1
1711:Veno-Echo.cpp ****         {
 8518              		.loc 20 1711 9 view .LVU2334
 8519 00a6 032B     		cmp	r3, #3
1710:Veno-Echo.cpp ****         if (buttonstate == 3)
 8520              		.loc 20 1710 21 view .LVU2335
 8521 00a8 2360     		str	r3, [r4]
1711:Veno-Echo.cpp ****         {
 8522              		.loc 20 1711 9 is_stmt 1 view .LVU2336
 8523 00aa 00F0C480 		beq	.L496
 8524              	.L456:
1715:Veno-Echo.cpp ****         {
 8525              		.loc 20 1715 9 view .LVU2337
1715:Veno-Echo.cpp ****         {
 8526              		.loc 20 1715 29 is_stmt 0 view .LVU2338
 8527 00ae 6F48     		ldr	r0, .L501+4
 8528 00b0 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8529              	.LVL526:
1721:Veno-Echo.cpp ****         }
 8530              		.loc 20 1721 31 view .LVU2339
 8531 00b4 F7EE007A 		vmov.f32	s15, #1.0e+0
 8532 00b8 9FED757A 		vldr.32	s14, .L501+40
 8533 00bc 0028     		cmp	r0, #0
 8534 00be 7549     		ldr	r1, .L501+44
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 283


 8535              	.LBB1729:
 8536              	.LBB1730:
 8537              	.LBB1731:
 8538              	.LBB1732:
 8539              	.LBB1733:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8540              		.loc 22 397 18 view .LVU2340
 8541 00c0 4FF00102 		mov	r2, #1
 8542 00c4 744B     		ldr	r3, .L501+48
 8543              	.LBE1733:
 8544              	.LBE1732:
 8545              	.LBE1731:
 8546              	.LBE1730:
 8547              	.LBE1729:
1721:Veno-Echo.cpp ****         }
 8548              		.loc 20 1721 31 view .LVU2341
 8549 00c6 47FE277A 		vseleq.f32	s15, s14, s15
 8550 00ca C1ED0A7A 		vstr.32	s15, [r1, #40]
1723:Veno-Echo.cpp ****     }
 8551              		.loc 20 1723 9 is_stmt 1 view .LVU2342
 8552              	.LVL527:
 8553              	.LBB1738:
 8554              	.LBI1729:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8555              		.loc 23 80 5 view .LVU2343
 8556              	.LBB1737:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8557              		.loc 23 81 7 view .LVU2344
 8558              	.LBB1736:
 8559              	.LBI1731:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8560              		.loc 22 288 7 view .LVU2345
 8561              	.LBB1735:
 8562              	.LBI1732:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8563              		.loc 22 390 7 view .LVU2346
 8564              	.LBB1734:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8565              		.loc 22 397 18 is_stmt 0 view .LVU2347
 8566 00ce BFF35B8F 		dmb	ish
 8567 00d2 1A70     		strb	r2, [r3]
 8568 00d4 BFF35B8F 		dmb	ish
 8569              	.LVL528:
 8570              	.L455:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8571              		.loc 22 397 18 view .LVU2348
 8572              	.LBE1734:
 8573              	.LBE1735:
 8574              	.LBE1736:
 8575              	.LBE1737:
 8576              	.LBE1738:
1726:Veno-Echo.cpp ****     {
 8577              		.loc 20 1726 5 is_stmt 1 view .LVU2349
1726:Veno-Echo.cpp ****     {
 8578              		.loc 20 1726 29 is_stmt 0 view .LVU2350
 8579 00d8 6448     		ldr	r0, .L501+4
 8580 00da FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 284


 8581              	.LVL529:
1726:Veno-Echo.cpp ****     {
 8582              		.loc 20 1726 5 view .LVU2351
 8583 00de 10B1     		cbz	r0, .L458
1728:Veno-Echo.cpp ****     }
 8584              		.loc 20 1728 9 is_stmt 1 view .LVU2352
1728:Veno-Echo.cpp ****     }
 8585              		.loc 20 1728 21 is_stmt 0 view .LVU2353
 8586 00e0 2368     		ldr	r3, [r4]
 8587 00e2 013B     		subs	r3, r3, #1
 8588 00e4 2360     		str	r3, [r4]
 8589              	.L458:
1731:Veno-Echo.cpp ****     {
 8590              		.loc 20 1731 5 is_stmt 1 view .LVU2354
1731:Veno-Echo.cpp ****     {
 8591              		.loc 20 1731 30 is_stmt 0 view .LVU2355
 8592 00e6 6548     		ldr	r0, .L501+20
 8593 00e8 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8594              	.LVL530:
1731:Veno-Echo.cpp ****     {
 8595              		.loc 20 1731 5 view .LVU2356
 8596 00ec 0028     		cmp	r0, #0
 8597 00ee 55D1     		bne	.L497
 8598              	.L460:
1752:Veno-Echo.cpp ****     {
 8599              		.loc 20 1752 5 is_stmt 1 view .LVU2357
1752:Veno-Echo.cpp ****     {
 8600              		.loc 20 1752 31 is_stmt 0 view .LVU2358
 8601 00f0 6248     		ldr	r0, .L501+20
 8602 00f2 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8603              	.LVL531:
1752:Veno-Echo.cpp ****     {
 8604              		.loc 20 1752 5 view .LVU2359
 8605 00f6 38B1     		cbz	r0, .L463
1754:Veno-Echo.cpp ****         buttonstate -= 1;
 8606              		.loc 20 1754 9 is_stmt 1 view .LVU2360
1755:Veno-Echo.cpp ****         mute = false;
 8607              		.loc 20 1755 21 is_stmt 0 view .LVU2361
 8608 00f8 2368     		ldr	r3, [r4]
1754:Veno-Echo.cpp ****         buttonstate -= 1;
 8609              		.loc 20 1754 15 view .LVU2362
 8610 00fa 0022     		movs	r2, #0
 8611 00fc 6748     		ldr	r0, .L501+52
1755:Veno-Echo.cpp ****         mute = false;
 8612              		.loc 20 1755 21 view .LVU2363
 8613 00fe 013B     		subs	r3, r3, #1
1756:Veno-Echo.cpp ****     }
 8614              		.loc 20 1756 14 view .LVU2364
 8615 0100 6749     		ldr	r1, .L501+56
1754:Veno-Echo.cpp ****         buttonstate -= 1;
 8616              		.loc 20 1754 15 view .LVU2365
 8617 0102 0270     		strb	r2, [r0]
1755:Veno-Echo.cpp ****         mute = false;
 8618              		.loc 20 1755 9 is_stmt 1 view .LVU2366
1755:Veno-Echo.cpp ****         mute = false;
 8619              		.loc 20 1755 21 is_stmt 0 view .LVU2367
 8620 0104 2360     		str	r3, [r4]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 285


1756:Veno-Echo.cpp ****     }
 8621              		.loc 20 1756 9 is_stmt 1 view .LVU2368
1756:Veno-Echo.cpp ****     }
 8622              		.loc 20 1756 14 is_stmt 0 view .LVU2369
 8623 0106 0A70     		strb	r2, [r1]
 8624              	.L463:
1759:Veno-Echo.cpp ****     {
 8625              		.loc 20 1759 5 is_stmt 1 view .LVU2370
1759:Veno-Echo.cpp ****     {
 8626              		.loc 20 1759 28 is_stmt 0 view .LVU2371
 8627 0108 5C48     		ldr	r0, .L501+20
 8628 010a FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8629              	.LVL532:
1759:Veno-Echo.cpp ****     {
 8630              		.loc 20 1759 5 view .LVU2372
 8631 010e 60B9     		cbnz	r0, .L498
 8632              	.L465:
1767:Veno-Echo.cpp ****     {
 8633              		.loc 20 1767 5 is_stmt 1 view .LVU2373
 8634 0110 2368     		ldr	r3, [r4]
 8635 0112 032B     		cmp	r3, #3
 8636 0114 16D0     		beq	.L499
 8637              	.L468:
1784:Veno-Echo.cpp **** }
 8638              		.loc 20 1784 5 view .LVU2374
 8639              	.LBB1739:
 8640              	.LBI1739:
  70:../libdaisy/src/hid/switch.h **** 
  71:../libdaisy/src/hid/switch.h ****     /** \return true if the button was just released */
  72:../libdaisy/src/hid/switch.h ****     inline bool FallingEdge() const { return state_ == 0x80; }
  73:../libdaisy/src/hid/switch.h **** 
  74:../libdaisy/src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  75:../libdaisy/src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 8641              		.loc 1 75 17 view .LVU2375
 8642              	.LVL533:
 8643              	.LBB1740:
 8644              		.loc 1 75 35 view .LVU2376
 8645              	.LBE1740:
 8646              	.LBE1739:
1784:Veno-Echo.cpp **** }
 8647              		.loc 20 1784 31 is_stmt 0 view .LVU2377
 8648 0116 5B4B     		ldr	r3, .L501+28
1784:Veno-Echo.cpp **** }
 8649              		.loc 20 1784 14 view .LVU2378
 8650 0118 624A     		ldr	r2, .L501+60
 8651              	.LBB1742:
 8652              	.LBB1741:
 8653              		.loc 1 75 52 view .LVU2379
 8654 011a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8655 011c A3F1FF03 		sub	r3, #255
 8656 0120 B3FA83F3 		clz	r3, r3
 8657 0124 5B09     		lsrs	r3, r3, #5
 8658 0126 1370     		strb	r3, [r2]
 8659              	.LBE1741:
 8660              	.LBE1742:
1785:Veno-Echo.cpp **** 
 8661              		.loc 20 1785 1 view .LVU2380
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 286


 8662 0128 70BD     		pop	{r4, r5, r6, pc}
 8663              	.LVL534:
 8664              	.L498:
1761:Veno-Echo.cpp ****         {
 8665              		.loc 20 1761 9 is_stmt 1 view .LVU2381
1761:Veno-Echo.cpp ****         {
 8666              		.loc 20 1761 29 is_stmt 0 view .LVU2382
 8667 012a FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8668              	.LVL535:
1761:Veno-Echo.cpp ****         {
 8669              		.loc 20 1761 32 view .LVU2383
 8670 012e 5E4B     		ldr	r3, .L501+64
 8671 0130 1B68     		ldr	r3, [r3]
 8672 0132 C01A     		subs	r0, r0, r3
1761:Veno-Echo.cpp ****         {
 8673              		.loc 20 1761 9 view .LVU2384
 8674 0134 3228     		cmp	r0, #50
 8675 0136 EBD9     		bls	.L465
1763:Veno-Echo.cpp ****         } 
 8676              		.loc 20 1763 13 is_stmt 1 view .LVU2385
1763:Veno-Echo.cpp ****         } 
 8677              		.loc 20 1763 19 is_stmt 0 view .LVU2386
 8678 0138 584B     		ldr	r3, .L501+52
 8679 013a 0122     		movs	r2, #1
 8680 013c 1A70     		strb	r2, [r3]
1767:Veno-Echo.cpp ****     {
 8681              		.loc 20 1767 5 is_stmt 1 view .LVU2387
 8682 013e 2368     		ldr	r3, [r4]
 8683 0140 032B     		cmp	r3, #3
 8684 0142 E8D1     		bne	.L468
 8685              	.L499:
1770:Veno-Echo.cpp ****             {
 8686              		.loc 20 1770 13 view .LVU2388
1770:Veno-Echo.cpp ****             {
 8687              		.loc 20 1770 36 is_stmt 0 view .LVU2389
 8688 0144 594E     		ldr	r6, .L501+68
1770:Veno-Echo.cpp ****             {
 8689              		.loc 20 1770 33 view .LVU2390
 8690 0146 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8691              	.LVL536:
1770:Veno-Echo.cpp ****             {
 8692              		.loc 20 1770 13 view .LVU2391
 8693 014a 40F6B833 		movw	r3, #3000
1770:Veno-Echo.cpp ****             {
 8694              		.loc 20 1770 36 view .LVU2392
 8695 014e 3268     		ldr	r2, [r6]
 8696 0150 801A     		subs	r0, r0, r2
1770:Veno-Echo.cpp ****             {
 8697              		.loc 20 1770 13 view .LVU2393
 8698 0152 9842     		cmp	r0, r3
 8699 0154 DFD9     		bls	.L468
1772:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 8700              		.loc 20 1772 17 is_stmt 1 view .LVU2394
1772:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 8701              		.loc 20 1772 32 is_stmt 0 view .LVU2395
 8702 0156 4448     		ldr	r0, .L501
 8703 0158 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 287


 8704              	.LVL537:
1773:Veno-Echo.cpp ****                 ResetAllLEDs();
 8705              		.loc 20 1773 17 is_stmt 1 view .LVU2396
1773:Veno-Echo.cpp ****                 ResetAllLEDs();
 8706              		.loc 20 1773 32 is_stmt 0 view .LVU2397
 8707 015c 4348     		ldr	r0, .L501+4
 8708 015e FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8709              	.LVL538:
1774:Veno-Echo.cpp ****                 //don't let reset or shift update
 8710              		.loc 20 1774 17 is_stmt 1 view .LVU2398
1778:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8711              		.loc 20 1778 29 is_stmt 0 view .LVU2399
 8712 0162 534D     		ldr	r5, .L501+72
1774:Veno-Echo.cpp ****                 //don't let reset or shift update
 8713              		.loc 20 1774 29 view .LVU2400
 8714 0164 FFF7FEFF 		bl	_Z12ResetAllLEDsv
 8715              	.LVL539:
1776:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8716              		.loc 20 1776 17 is_stmt 1 view .LVU2401
1776:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8717              		.loc 20 1776 23 is_stmt 0 view .LVU2402
 8718 0168 4C4B     		ldr	r3, .L501+52
 8719 016a 0022     		movs	r2, #0
1777:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8720              		.loc 20 1777 30 view .LVU2403
 8721 016c 5048     		ldr	r0, .L501+72
1778:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8722              		.loc 20 1778 29 view .LVU2404
 8723 016e 494C     		ldr	r4, .L501+44
1776:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8724              		.loc 20 1776 23 view .LVU2405
 8725 0170 1A70     		strb	r2, [r3]
1777:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8726              		.loc 20 1777 17 is_stmt 1 view .LVU2406
1777:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8727              		.loc 20 1777 30 is_stmt 0 view .LVU2407
 8728 0172 FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 8729              	.LVL540:
1778:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8730              		.loc 20 1778 17 is_stmt 1 view .LVU2408
1778:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8731              		.loc 20 1778 29 is_stmt 0 view .LVU2409
 8732 0176 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8733 0178 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8734 017a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8735 017c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8736 017e 95E80700 		ldm	r5, {r0, r1, r2}
 8737 0182 84E80700 		stm	r4, {r0, r1, r2}
1779:Veno-Echo.cpp ****                 save_flag = true;
 8738              		.loc 20 1779 17 is_stmt 1 view .LVU2410
1779:Veno-Echo.cpp ****                 save_flag = true;
 8739              		.loc 20 1779 43 is_stmt 0 view .LVU2411
 8740 0186 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8741              	.LVL541:
 8742              	.LBB1743:
 8743              	.LBB1744:
 8744              	.LBB1745:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 288


 8745              	.LBB1746:
 8746              	.LBB1747:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8747              		.loc 22 397 18 view .LVU2412
 8748 018a 434B     		ldr	r3, .L501+48
 8749 018c 0122     		movs	r2, #1
 8750              	.LBE1747:
 8751              	.LBE1746:
 8752              	.LBE1745:
 8753              	.LBE1744:
 8754              	.LBE1743:
1779:Veno-Echo.cpp ****                 save_flag = true;
 8755              		.loc 20 1779 27 view .LVU2413
 8756 018e 3060     		str	r0, [r6]
1780:Veno-Echo.cpp ****             }
 8757              		.loc 20 1780 17 is_stmt 1 view .LVU2414
 8758              	.LVL542:
 8759              	.LBB1752:
 8760              	.LBI1743:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8761              		.loc 23 80 5 view .LVU2415
 8762              	.LBB1751:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8763              		.loc 23 81 7 view .LVU2416
 8764              	.LBB1750:
 8765              	.LBI1745:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8766              		.loc 22 288 7 view .LVU2417
 8767              	.LBB1749:
 8768              	.LBI1746:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8769              		.loc 22 390 7 view .LVU2418
 8770              	.LBB1748:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8771              		.loc 22 397 18 is_stmt 0 view .LVU2419
 8772 0190 BFF35B8F 		dmb	ish
 8773 0194 1A70     		strb	r2, [r3]
 8774 0196 BFF35B8F 		dmb	ish
 8775              	.LVL543:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8776              		.loc 22 397 18 view .LVU2420
 8777              	.LBE1748:
 8778              	.LBE1749:
 8779              	.LBE1750:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8780              		.loc 23 81 35 view .LVU2421
 8781 019a BCE7     		b	.L468
 8782              	.LVL544:
 8783              	.L497:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8784              		.loc 23 81 35 view .LVU2422
 8785              	.LBE1751:
 8786              	.LBE1752:
1733:Veno-Echo.cpp ****         {
 8787              		.loc 20 1733 9 is_stmt 1 view .LVU2423
1733:Veno-Echo.cpp ****         {
 8788              		.loc 20 1733 25 is_stmt 0 view .LVU2424
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 289


 8789 019c 4548     		ldr	r0, .L501+76
 8790 019e FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 8791              	.LVL545:
1733:Veno-Echo.cpp ****         {
 8792              		.loc 20 1733 9 view .LVU2425
 8793 01a2 0028     		cmp	r0, #0
 8794 01a4 4CD1     		bne	.L500
 8795              	.L461:
1739:Veno-Echo.cpp ****         
 8796              		.loc 20 1739 9 is_stmt 1 view .LVU2426
1739:Veno-Echo.cpp ****         
 8797              		.loc 20 1739 33 is_stmt 0 view .LVU2427
 8798 01a6 4448     		ldr	r0, .L501+80
 8799 01a8 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 8800              	.LVL546:
1742:Veno-Echo.cpp ****         buttonstate += 1;
 8801              		.loc 20 1742 9 is_stmt 1 view .LVU2428
1742:Veno-Echo.cpp ****         buttonstate += 1;
 8802              		.loc 20 1742 35 is_stmt 0 view .LVU2429
 8803 01ac FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8804              	.LVL547:
1743:Veno-Echo.cpp ****         
 8805              		.loc 20 1743 21 view .LVU2430
 8806 01b0 2368     		ldr	r3, [r4]
1742:Veno-Echo.cpp ****         buttonstate += 1;
 8807              		.loc 20 1742 19 view .LVU2431
 8808 01b2 3D4A     		ldr	r2, .L501+64
1743:Veno-Echo.cpp ****         
 8809              		.loc 20 1743 21 view .LVU2432
 8810 01b4 0133     		adds	r3, r3, #1
1742:Veno-Echo.cpp ****         buttonstate += 1;
 8811              		.loc 20 1742 19 view .LVU2433
 8812 01b6 1060     		str	r0, [r2]
1743:Veno-Echo.cpp ****         
 8813              		.loc 20 1743 9 is_stmt 1 view .LVU2434
1745:Veno-Echo.cpp ****         {
 8814              		.loc 20 1745 9 is_stmt 0 view .LVU2435
 8815 01b8 032B     		cmp	r3, #3
1743:Veno-Echo.cpp ****         
 8816              		.loc 20 1743 21 view .LVU2436
 8817 01ba 2360     		str	r3, [r4]
1745:Veno-Echo.cpp ****         {
 8818              		.loc 20 1745 9 is_stmt 1 view .LVU2437
 8819 01bc 98D1     		bne	.L460
1747:Veno-Echo.cpp ****         }
 8820              		.loc 20 1747 13 view .LVU2438
1747:Veno-Echo.cpp ****         }
 8821              		.loc 20 1747 39 is_stmt 0 view .LVU2439
 8822 01be FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8823              	.LVL548:
1747:Veno-Echo.cpp ****         }
 8824              		.loc 20 1747 23 view .LVU2440
 8825 01c2 3A4B     		ldr	r3, .L501+68
 8826 01c4 1860     		str	r0, [r3]
 8827 01c6 93E7     		b	.L460
 8828              	.L494:
1671:Veno-Echo.cpp ****         if(Rev_R_sw.getState())
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 290


 8829              		.loc 20 1671 9 is_stmt 1 view .LVU2441
1671:Veno-Echo.cpp ****         if(Rev_R_sw.getState())
 8830              		.loc 20 1671 24 is_stmt 0 view .LVU2442
 8831 01c8 2848     		ldr	r0, .L501+4
 8832 01ca FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8833              	.LVL549:
1672:Veno-Echo.cpp ****         {
 8834              		.loc 20 1672 9 is_stmt 1 view .LVU2443
1672:Veno-Echo.cpp ****         {
 8835              		.loc 20 1672 29 is_stmt 0 view .LVU2444
 8836 01ce 2748     		ldr	r0, .L501+4
 8837 01d0 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8838              	.LVL550:
1678:Veno-Echo.cpp ****         }
 8839              		.loc 20 1678 31 view .LVU2445
 8840 01d4 F7EE007A 		vmov.f32	s15, #1.0e+0
 8841 01d8 9FED2D7A 		vldr.32	s14, .L501+40
 8842 01dc 0028     		cmp	r0, #0
 8843 01de 2D49     		ldr	r1, .L501+44
 8844              	.LBB1753:
 8845              	.LBB1754:
 8846              	.LBB1755:
 8847              	.LBB1756:
 8848              	.LBB1757:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8849              		.loc 22 397 18 view .LVU2446
 8850 01e0 4FF00102 		mov	r2, #1
 8851 01e4 2C4B     		ldr	r3, .L501+48
 8852              	.LBE1757:
 8853              	.LBE1756:
 8854              	.LBE1755:
 8855              	.LBE1754:
 8856              	.LBE1753:
1678:Veno-Echo.cpp ****         }
 8857              		.loc 20 1678 31 view .LVU2447
 8858 01e6 47FE277A 		vseleq.f32	s15, s14, s15
 8859 01ea C1ED0A7A 		vstr.32	s15, [r1, #40]
1680:Veno-Echo.cpp ****     }
 8860              		.loc 20 1680 9 is_stmt 1 view .LVU2448
 8861              	.LVL551:
 8862              	.LBB1762:
 8863              	.LBI1753:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8864              		.loc 23 80 5 view .LVU2449
 8865              	.LBB1761:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8866              		.loc 23 81 7 view .LVU2450
 8867              	.LBB1760:
 8868              	.LBI1755:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8869              		.loc 22 288 7 view .LVU2451
 8870              	.LBB1759:
 8871              	.LBI1756:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8872              		.loc 22 390 7 view .LVU2452
 8873              	.LBB1758:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 291


 8874              		.loc 22 397 18 is_stmt 0 view .LVU2453
 8875 01ee BFF35B8F 		dmb	ish
 8876 01f2 1A70     		strb	r2, [r3]
 8877 01f4 BFF35B8F 		dmb	ish
 8878              	.LVL552:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8879              		.loc 22 397 18 view .LVU2454
 8880              	.LBE1758:
 8881              	.LBE1759:
 8882              	.LBE1760:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8883              		.loc 23 81 35 view .LVU2455
 8884 01f8 28E7     		b	.L449
 8885              	.LVL553:
 8886              	.L493:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8887              		.loc 23 81 35 view .LVU2456
 8888              	.LBE1761:
 8889              	.LBE1762:
1657:Veno-Echo.cpp ****         if(Rev_L_sw.getState())
 8890              		.loc 20 1657 9 is_stmt 1 view .LVU2457
1657:Veno-Echo.cpp ****         if(Rev_L_sw.getState())
 8891              		.loc 20 1657 24 is_stmt 0 view .LVU2458
 8892 01fa 1B48     		ldr	r0, .L501
 8893 01fc FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8894              	.LVL554:
1658:Veno-Echo.cpp ****         {
 8895              		.loc 20 1658 9 is_stmt 1 view .LVU2459
1658:Veno-Echo.cpp ****         {
 8896              		.loc 20 1658 29 is_stmt 0 view .LVU2460
 8897 0200 1948     		ldr	r0, .L501
 8898 0202 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8899              	.LVL555:
1664:Veno-Echo.cpp ****         }
 8900              		.loc 20 1664 31 view .LVU2461
 8901 0206 F7EE007A 		vmov.f32	s15, #1.0e+0
 8902 020a 9FED217A 		vldr.32	s14, .L501+40
 8903 020e 0028     		cmp	r0, #0
 8904 0210 2049     		ldr	r1, .L501+44
 8905              	.LBB1763:
 8906              	.LBB1764:
 8907              	.LBB1765:
 8908              	.LBB1766:
 8909              	.LBB1767:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8910              		.loc 22 397 18 view .LVU2462
 8911 0212 4FF00102 		mov	r2, #1
 8912 0216 204B     		ldr	r3, .L501+48
 8913              	.LBE1767:
 8914              	.LBE1766:
 8915              	.LBE1765:
 8916              	.LBE1764:
 8917              	.LBE1763:
1664:Veno-Echo.cpp ****         }
 8918              		.loc 20 1664 31 view .LVU2463
 8919 0218 47FE277A 		vseleq.f32	s15, s14, s15
 8920 021c C1ED097A 		vstr.32	s15, [r1, #36]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 292


1666:Veno-Echo.cpp ****     }
 8921              		.loc 20 1666 9 is_stmt 1 view .LVU2464
 8922              	.LVL556:
 8923              	.LBB1772:
 8924              	.LBI1763:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8925              		.loc 23 80 5 view .LVU2465
 8926              	.LBB1771:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8927              		.loc 23 81 7 view .LVU2466
 8928              	.LBB1770:
 8929              	.LBI1765:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8930              		.loc 22 288 7 view .LVU2467
 8931              	.LBB1769:
 8932              	.LBI1766:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8933              		.loc 22 390 7 view .LVU2468
 8934              	.LBB1768:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8935              		.loc 22 397 18 is_stmt 0 view .LVU2469
 8936 0220 BFF35B8F 		dmb	ish
 8937 0224 1A70     		strb	r2, [r3]
 8938 0226 BFF35B8F 		dmb	ish
 8939              	.LVL557:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8940              		.loc 22 397 18 view .LVU2470
 8941              	.LBE1768:
 8942              	.LBE1769:
 8943              	.LBE1770:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8944              		.loc 23 81 35 view .LVU2471
 8945 022a 0AE7     		b	.L447
 8946              	.LVL558:
 8947              	.L495:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8948              		.loc 23 81 35 view .LVU2472
 8949              	.LBE1771:
 8950              	.LBE1772:
1690:Veno-Echo.cpp ****         }
 8951              		.loc 20 1690 13 is_stmt 1 view .LVU2473
1690:Veno-Echo.cpp ****         }
 8952              		.loc 20 1690 39 is_stmt 0 view .LVU2474
 8953 022c FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8954              	.LVL559:
1690:Veno-Echo.cpp ****         }
 8955              		.loc 20 1690 23 view .LVU2475
 8956 0230 1E4B     		ldr	r3, .L501+68
 8957 0232 1860     		str	r0, [r3]
 8958 0234 15E7     		b	.L452
 8959              	.L496:
1713:Veno-Echo.cpp ****         }
 8960              		.loc 20 1713 13 is_stmt 1 view .LVU2476
1713:Veno-Echo.cpp ****         }
 8961              		.loc 20 1713 39 is_stmt 0 view .LVU2477
 8962 0236 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8963              	.LVL560:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 293


1713:Veno-Echo.cpp ****         }
 8964              		.loc 20 1713 23 view .LVU2478
 8965 023a 1C4B     		ldr	r3, .L501+68
 8966 023c 1860     		str	r0, [r3]
 8967 023e 36E7     		b	.L456
 8968              	.L500:
1735:Veno-Echo.cpp ****             AltControls.tapLength = BaseTempo.getTapLength();
 8969              		.loc 20 1735 13 is_stmt 1 view .LVU2479
1735:Veno-Echo.cpp ****             AltControls.tapLength = BaseTempo.getTapLength();
 8970              		.loc 20 1735 35 is_stmt 0 view .LVU2480
 8971 0240 1C48     		ldr	r0, .L501+76
 8972 0242 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 8973              	.LVL561:
 8974 0246 1C48     		ldr	r0, .L501+80
 8975 0248 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 8976              	.LVL562:
1736:Veno-Echo.cpp ****             save_flag = true;
 8977              		.loc 20 1736 13 is_stmt 1 view .LVU2481
1736:Veno-Echo.cpp ****             save_flag = true;
 8978              		.loc 20 1736 59 is_stmt 0 view .LVU2482
 8979 024c 1948     		ldr	r0, .L501+76
 8980 024e FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 8981              	.LVL563:
1736:Veno-Echo.cpp ****             save_flag = true;
 8982              		.loc 20 1736 35 view .LVU2483
 8983 0252 1049     		ldr	r1, .L501+44
 8984              	.LBB1773:
 8985              	.LBB1774:
 8986              	.LBB1775:
 8987              	.LBB1776:
 8988              	.LBB1777:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8989              		.loc 22 397 18 view .LVU2484
 8990 0254 0122     		movs	r2, #1
 8991 0256 104B     		ldr	r3, .L501+48
 8992              	.LBE1777:
 8993              	.LBE1776:
 8994              	.LBE1775:
 8995              	.LBE1774:
 8996              	.LBE1773:
1736:Veno-Echo.cpp ****             save_flag = true;
 8997              		.loc 20 1736 35 view .LVU2485
 8998 0258 81ED080A 		vstr.32	s0, [r1, #32]
1737:Veno-Echo.cpp ****         }
 8999              		.loc 20 1737 13 is_stmt 1 view .LVU2486
 9000              	.LVL564:
 9001              	.LBB1782:
 9002              	.LBI1773:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 9003              		.loc 23 80 5 view .LVU2487
 9004              	.LBB1781:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 9005              		.loc 23 81 7 view .LVU2488
 9006              	.LBB1780:
 9007              	.LBI1775:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 9008              		.loc 22 288 7 view .LVU2489
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 294


 9009              	.LBB1779:
 9010              	.LBI1776:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 9011              		.loc 22 390 7 view .LVU2490
 9012              	.LBB1778:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 9013              		.loc 22 397 18 is_stmt 0 view .LVU2491
 9014 025c BFF35B8F 		dmb	ish
 9015 0260 1A70     		strb	r2, [r3]
 9016 0262 BFF35B8F 		dmb	ish
 9017              	.LVL565:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 9018              		.loc 22 397 18 view .LVU2492
 9019              	.LBE1778:
 9020              	.LBE1779:
 9021              	.LBE1780:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 9022              		.loc 23 81 35 view .LVU2493
 9023 0266 9EE7     		b	.L461
 9024              	.L502:
 9025              		.align	2
 9026              	.L501:
 9027 0268 00000000 		.word	.LANCHOR94
 9028 026c 00000000 		.word	.LANCHOR95
 9029 0270 00000000 		.word	.LANCHOR96
 9030 0274 00000000 		.word	.LANCHOR99
 9031 0278 00000000 		.word	.LANCHOR97
 9032 027c 00000000 		.word	.LANCHOR98
 9033 0280 00000000 		.word	.LANCHOR100
 9034 0284 00000000 		.word	.LANCHOR101
 9035 0288 00000000 		.word	.LANCHOR88
 9036 028c 00000000 		.word	.LANCHOR112
 9037 0290 00000000 		.word	0
 9038 0294 00000000 		.word	.LANCHOR15
 9039 0298 00000000 		.word	.LANCHOR16
 9040 029c 00000000 		.word	.LANCHOR7
 9041 02a0 00000000 		.word	.LANCHOR115
 9042 02a4 00000000 		.word	.LANCHOR12
 9043 02a8 00000000 		.word	.LANCHOR114
 9044 02ac 00000000 		.word	.LANCHOR113
 9045 02b0 00000000 		.word	.LANCHOR116
 9046 02b4 00000000 		.word	.LANCHOR26
 9047 02b8 00000000 		.word	.LANCHOR89
 9048              	.LBE1781:
 9049              	.LBE1782:
 9050              		.cfi_endproc
 9051              	.LFE4329:
 9053              		.section	.text._ZL13AudioCallbackPfS_j,"ax",%progbits
 9054              		.align	1
 9055              		.p2align 2,,3
 9056              		.syntax unified
 9057              		.thumb
 9058              		.thumb_func
 9059              		.fpu fpv5-d16
 9061              	_ZL13AudioCallbackPfS_j:
 9062              	.LVL566:
 9063              	.LFB4309:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 295


 247:Veno-Echo.cpp **** 
 9064              		.loc 20 247 1 is_stmt 1 view -0
 9065              		.cfi_startproc
 9066              		@ args = 0, pretend = 0, frame = 72
 9067              		@ frame_needed = 0, uses_anonymous_args = 0
 258:Veno-Echo.cpp **** 
 9068              		.loc 20 258 1 view .LVU2495
 276:Veno-Echo.cpp **** 
 9069              		.loc 20 276 1 view .LVU2496
 276:Veno-Echo.cpp **** 
 9070              		.loc 20 276 20 is_stmt 0 view .LVU2497
 9071 0000 DFF890C0 		ldr	ip, .L644+12
 276:Veno-Echo.cpp **** 
 9072              		.loc 20 276 25 view .LVU2498
 9073 0004 204B     		ldr	r3, .L644
 247:Veno-Echo.cpp **** 
 9074              		.loc 20 247 1 view .LVU2499
 9075 0006 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 9076              		.cfi_def_cfa_offset 36
 9077              		.cfi_offset 4, -36
 9078              		.cfi_offset 5, -32
 9079              		.cfi_offset 6, -28
 9080              		.cfi_offset 7, -24
 9081              		.cfi_offset 8, -20
 9082              		.cfi_offset 9, -16
 9083              		.cfi_offset 10, -12
 9084              		.cfi_offset 11, -8
 9085              		.cfi_offset 14, -4
 276:Veno-Echo.cpp **** 
 9086              		.loc 20 276 20 view .LVU2500
 9087 000a DCF80040 		ldr	r4, [ip]
 247:Veno-Echo.cpp **** 
 9088              		.loc 20 247 1 view .LVU2501
 9089 000e 1546     		mov	r5, r2
 9090 0010 0646     		mov	r6, r0
 9091 0012 0F46     		mov	r7, r1
 276:Veno-Echo.cpp **** 
 9092              		.loc 20 276 20 view .LVU2502
 9093 0014 0134     		adds	r4, r4, #1
 276:Veno-Echo.cpp **** 
 9094              		.loc 20 276 25 view .LVU2503
 9095 0016 83FB0432 		smull	r3, r2, r3, r4
 9096              	.LVL567:
 276:Veno-Echo.cpp **** 
 9097              		.loc 20 276 25 view .LVU2504
 9098 001a E317     		asrs	r3, r4, #31
 9099 001c 2244     		add	r2, r2, r4
 9100 001e C3EBE203 		rsb	r3, r3, r2, asr #3
 9101 0022 C3EB0313 		rsb	r3, r3, r3, lsl #4
 9102 0026 E31A     		subs	r3, r4, r3
 247:Veno-Echo.cpp **** 
 9103              		.loc 20 247 1 view .LVU2505
 9104 0028 2DED0E8B 		vpush.64	{d8, d9, d10, d11, d12, d13, d14}
 9105              		.cfi_def_cfa_offset 92
 9106              		.cfi_offset 80, -92
 9107              		.cfi_offset 81, -88
 9108              		.cfi_offset 82, -84
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 296


 9109              		.cfi_offset 83, -80
 9110              		.cfi_offset 84, -76
 9111              		.cfi_offset 85, -72
 9112              		.cfi_offset 86, -68
 9113              		.cfi_offset 87, -64
 9114              		.cfi_offset 88, -60
 9115              		.cfi_offset 89, -56
 9116              		.cfi_offset 90, -52
 9117              		.cfi_offset 91, -48
 9118              		.cfi_offset 92, -44
 9119              		.cfi_offset 93, -40
 276:Veno-Echo.cpp **** 
 9120              		.loc 20 276 9 view .LVU2506
 9121 002c CCF80030 		str	r3, [ip]
 289:Veno-Echo.cpp ****         {
 9122              		.loc 20 289 9 is_stmt 1 view .LVU2507
 247:Veno-Echo.cpp **** 
 9123              		.loc 20 247 1 is_stmt 0 view .LVU2508
 9124 0030 93B0     		sub	sp, sp, #76
 9125              		.cfi_def_cfa_offset 168
 9126 0032 0E2B     		cmp	r3, #14
 9127 0034 17D8     		bhi	.L504
 9128 0036 DFE813F0 		tbh	[pc, r3, lsl #1]
 9129              	.L506:
 9130 003a 9C05     		.2byte	(.L520-.L506)/2
 9131 003c 0F00     		.2byte	(.L519-.L506)/2
 9132 003e A605     		.2byte	(.L518-.L506)/2
 9133 0040 AF05     		.2byte	(.L517-.L506)/2
 9134 0042 F105     		.2byte	(.L516-.L506)/2
 9135 0044 FA05     		.2byte	(.L515-.L506)/2
 9136 0046 0306     		.2byte	(.L514-.L506)/2
 9137 0048 0C06     		.2byte	(.L513-.L506)/2
 9138 004a 1506     		.2byte	(.L512-.L506)/2
 9139 004c 1E06     		.2byte	(.L511-.L506)/2
 9140 004e 2706     		.2byte	(.L510-.L506)/2
 9141 0050 3006     		.2byte	(.L509-.L506)/2
 9142 0052 3906     		.2byte	(.L508-.L506)/2
 9143 0054 4206     		.2byte	(.L507-.L506)/2
 9144 0056 9305     		.2byte	(.L505-.L506)/2
 9145              		.p2align 1
 9146              	.L519:
 298:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 9147              		.loc 20 298 13 is_stmt 1 view .LVU2509
 299:Veno-Echo.cpp ****             break;
 9148              		.loc 20 299 17 view .LVU2510
 9149              	.LBB1869:
 9150              	.LBI1869:
 844:Veno-Echo.cpp **** {
 9151              		.loc 20 844 6 view .LVU2511
 9152              	.LBB1870:
 846:Veno-Echo.cpp **** }
 9153              		.loc 20 846 5 view .LVU2512
 846:Veno-Echo.cpp **** }
 9154              		.loc 20 846 36 is_stmt 0 view .LVU2513
 9155 0058 0021     		movs	r1, #0
 9156              	.LVL568:
 846:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 297


 9157              		.loc 20 846 36 view .LVU2514
 9158 005a 0C48     		ldr	r0, .L644+4
 9159              	.LVL569:
 846:Veno-Echo.cpp **** }
 9160              		.loc 20 846 36 view .LVU2515
 9161 005c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 9162              	.LVL570:
 846:Veno-Echo.cpp **** }
 9163              		.loc 20 846 19 view .LVU2516
 9164 0060 0B4B     		ldr	r3, .L644+8
 9165 0062 83ED000A 		vstr.32	s0, [r3]
 9166              	.L504:
 9167              	.LVL571:
 846:Veno-Echo.cpp **** }
 9168              		.loc 20 846 19 view .LVU2517
 9169              	.LBE1870:
 9170              	.LBE1869:
 9171              	.LBB1871:
 379:Veno-Echo.cpp ****     {   
 9172              		.loc 20 379 25 is_stmt 1 discriminator 1 view .LVU2518
 9173 0066 002D     		cmp	r5, #0
 9174 0068 00F05C85 		beq	.L503
 379:Veno-Echo.cpp ****     {   
 9175              		.loc 20 379 25 is_stmt 0 view .LVU2519
 9176 006c 0023     		movs	r3, #0
 9177 006e 013D     		subs	r5, r5, #1
 9178              	.LVL572:
 379:Veno-Echo.cpp ****     {   
 9179              		.loc 20 379 25 view .LVU2520
 9180 0070 DFF82480 		ldr	r8, .L644+16
 9181 0074 B346     		mov	fp, r6
 9182 0076 0293     		str	r3, [sp, #8]
 9183 0078 25F00103 		bic	r3, r5, #1
 9184 007c DFF81C90 		ldr	r9, .L644+20
 9185 0080 0097     		str	r7, [sp]
 9186 0082 0593     		str	r3, [sp, #20]
 9187 0084 62E1     		b	.L576
 9188              	.L645:
 9189 0086 00BF     		.align	2
 9190              	.L644:
 9191 0088 89888888 		.word	-2004318071
 9192 008c 18000000 		.word	.LANCHOR4+24
 9193 0090 00000000 		.word	.LANCHOR5
 9194 0094 00000000 		.word	.LANCHOR117
 9195 0098 00000000 		.word	.LANCHOR132
 9196 009c 00000000 		.word	.LANCHOR133
 9197              	.LVL573:
 9198              	.L643:
 9199              	.LBB1872:
 9200              	.LBB1873:
 9201              	.LBB1874:
2001:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9202              		.loc 20 2001 10 is_stmt 1 view .LVU2521
 9203 00a0 B8EE007A 		vmov.f32	s14, #-2.0e+0
2002:Veno-Echo.cpp ****     else
 9204              		.loc 20 2002 19 is_stmt 0 view .LVU2522
 9205 00a4 F4EE477A 		vcmp.f32	s15, s14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 298


 9206 00a8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9207 00ac 48BF     		it	mi
 9208 00ae F0EE477A 		vmovmi.f32	s15, s14
 9209              	.LVL574:
 9210              	.L542:
2006:Veno-Echo.cpp **** }
 9211              		.loc 20 2006 5 is_stmt 1 view .LVU2523
2006:Veno-Echo.cpp **** }
 9212              		.loc 20 2006 5 is_stmt 0 view .LVU2524
 9213              	.LBE1874:
 9214              	.LBE1873:
 9215              	.LBB1877:
 9216              	.LBB1878:
1999:Veno-Echo.cpp ****         returnval = limit;
 9217              		.loc 20 1999 5 view .LVU2525
 9218 00b2 B0EE007A 		vmov.f32	s14, #2.0e+0
 9219              	.LBE1878:
 9220              	.LBE1877:
 434:Veno-Echo.cpp **** 
 9221              		.loc 20 434 34 view .LVU2526
 9222 00b6 9DED090A 		vldr.32	s0, [sp, #36]
 433:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 9223              		.loc 20 433 23 view .LVU2527
 9224 00ba CDED087A 		vstr.32	s15, [sp, #32]
 434:Veno-Echo.cpp **** 
 9225              		.loc 20 434 9 is_stmt 1 view .LVU2528
 9226              	.LVL575:
 9227              	.LBB1882:
 9228              	.LBI1877:
1996:Veno-Echo.cpp **** {
 9229              		.loc 20 1996 7 view .LVU2529
 9230              	.LBB1879:
1998:Veno-Echo.cpp ****     if (input > limit)
 9231              		.loc 20 1998 5 view .LVU2530
1999:Veno-Echo.cpp ****         returnval = limit;
 9232              		.loc 20 1999 5 view .LVU2531
 9233 00be B4EEC70A 		vcmpe.f32	s0, s14
 9234 00c2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9235 00c6 00F36C84 		bgt	.L580
2001:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9236              		.loc 20 2001 10 view .LVU2532
 9237 00ca B8EE007A 		vmov.f32	s14, #-2.0e+0
 9238              	.LBE1879:
 9239              	.LBE1882:
 9240              	.LBB1883:
 436:Veno-Echo.cpp **** {
 9241              		.loc 20 436 1 is_stmt 0 view .LVU2533
 9242 00ce DC4B     		ldr	r3, .L646
 9243 00d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9244              	.LBE1883:
 9245              	.LBB1905:
 9246              	.LBB1880:
2002:Veno-Echo.cpp ****     else
 9247              		.loc 20 2002 19 view .LVU2534
 9248 00d2 B4EE470A 		vcmp.f32	s0, s14
 9249 00d6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9250 00da 48BF     		it	mi
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 299


 9251 00dc B0EE470A 		vmovmi.f32	s0, s14
 9252              	.LVL576:
2006:Veno-Echo.cpp **** }
 9253              		.loc 20 2006 5 is_stmt 1 view .LVU2535
2006:Veno-Echo.cpp **** }
 9254              		.loc 20 2006 5 is_stmt 0 view .LVU2536
 9255              	.LBE1880:
 9256              	.LBE1905:
 434:Veno-Echo.cpp **** 
 9257              		.loc 20 434 23 view .LVU2537
 9258 00e0 8DED090A 		vstr.32	s0, [sp, #36]
 436:Veno-Echo.cpp **** {
 9259              		.loc 20 436 1 is_stmt 1 view .LVU2538
 9260              	.LBB1906:
 9261 00e4 002B     		cmp	r3, #0
 9262 00e6 00F06584 		beq	.L640
 9263              	.L546:
 9264              	.LBE1906:
 480:Veno-Echo.cpp ****         static float RNegFB{};
 9265              		.loc 20 480 9 view .LVU2539
 481:Veno-Echo.cpp **** 
 9266              		.loc 20 481 9 view .LVU2540
 484:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9267              		.loc 20 484 9 view .LVU2541
 484:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9268              		.loc 20 484 22 is_stmt 0 view .LVU2542
 9269 00ea D64B     		ldr	r3, .L646+4
 9270              	.LBB1907:
 9271              	.LBB1908:
  53:envFollow.h   **** 
  54:envFollow.h   ****     float GetEnv(float sample)
  55:envFollow.h   ****     {
  56:envFollow.h   ****         //remove average DC offset:
  57:envFollow.h   ****         avg = (w * sample) + ((1-w) * avg);
 9272              		.loc 12 57 16 view .LVU2543
 9273 00ec D8ED042A 		vldr.32	s5, [r8, #16]
 9274              	.LBE1908:
 9275              	.LBE1907:
 484:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9276              		.loc 20 484 22 view .LVU2544
 9277 00f0 D3ED004A 		vldr.32	s9, [r3]
 9278 00f4 D44B     		ldr	r3, .L646+8
 9279              	.LBB1920:
 9280              	.LBB1909:
 9281              		.loc 12 57 37 view .LVU2545
 9282 00f6 98ED006A 		vldr.32	s12, [r8]
 9283              	.LBE1909:
 9284              	.LBE1920:
 484:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9285              		.loc 20 484 22 view .LVU2546
 9286 00fa 93ED007A 		vldr.32	s14, [r3]
 487:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9287              		.loc 20 487 22 view .LVU2547
 9288 00fe D34B     		ldr	r3, .L646+12
 484:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9289              		.loc 20 484 9 view .LVU2548
 9290 0100 F4EEC74A 		vcmpe.f32	s9, s14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 300


 9291              	.LBB1921:
 9292              	.LBB1922:
 9293              		.loc 12 57 16 view .LVU2549
 9294 0104 D9ED043A 		vldr.32	s7, [r9, #16]
  58:envFollow.h   ****         sample_noDC = sample - avg;
  59:envFollow.h   **** 
  60:envFollow.h   ****         //take absolute
  61:envFollow.h   ****         pos_sample = fabsf(sample_noDC);
  62:envFollow.h   ****         //return static_cast<int>(pos_sample);
  63:envFollow.h   **** 
  64:envFollow.h   ****         //remove ripple
  65:envFollow.h   ****         avg_env = (w_env * pos_sample) + ((1-w_env) * avg_env);
 9295              		.loc 12 65 20 view .LVU2550
 9296 0108 99ED054A 		vldr.32	s8, [r9, #20]
 9297              		.loc 12 65 53 view .LVU2551
 9298 010c 99ED032A 		vldr.32	s4, [r9, #12]
 9299              	.LBE1922:
 9300              	.LBE1921:
 484:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9301              		.loc 20 484 9 view .LVU2552
 9302 0110 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9303              	.LBB1931:
 9304              	.LBB1910:
 9305              		.loc 12 65 20 view .LVU2553
 9306 0114 98ED053A 		vldr.32	s6, [r8, #20]
 9307              		.loc 12 65 53 view .LVU2554
 9308 0118 98ED031A 		vldr.32	s2, [r8, #12]
 9309              	.LBE1910:
 9310              	.LBE1931:
 503:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9311              		.loc 20 503 13 view .LVU2555
 9312 011c DFEDCC1A 		vldr.32	s3, .L646+16
 9313 0120 58BF     		it	pl
 9314 0122 74EEC74A 		vsubpl.f32	s9, s9, s14
 487:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9315              		.loc 20 487 9 is_stmt 1 view .LVU2556
 487:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9316              		.loc 20 487 22 is_stmt 0 view .LVU2557
 9317 0126 93ED007A 		vldr.32	s14, [r3]
 9318 012a CA4B     		ldr	r3, .L646+20
 9319 012c D3ED006A 		vldr.32	s13, [r3]
 490:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 9320              		.loc 20 490 15 view .LVU2558
 9321 0130 67EEA44A 		vmul.f32	s9, s15, s9
 9322              	.LBB1932:
 9323              	.LBB1923:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9324              		.loc 12 57 37 view .LVU2559
 9325 0134 D9ED007A 		vldr.32	s15, [r9]
 9326              	.LBE1923:
 9327              	.LBE1932:
 487:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9328              		.loc 20 487 9 view .LVU2560
 9329 0138 B4EEE67A 		vcmpe.f32	s14, s13
 494:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9330              		.loc 20 494 36 view .LVU2561
 9331 013c C64B     		ldr	r3, .L646+24
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 301


 487:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9332              		.loc 20 487 9 view .LVU2562
 9333 013e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9334 0142 58BF     		it	pl
 9335 0144 37EE667A 		vsubpl.f32	s14, s14, s13
 490:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 9336              		.loc 20 490 9 is_stmt 1 view .LVU2563
 9337              	.LVL577:
 491:Veno-Echo.cpp **** 
 9338              		.loc 20 491 9 view .LVU2564
 494:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9339              		.loc 20 494 36 is_stmt 0 view .LVU2565
 9340 0148 F7EE006A 		vmov.f32	s13, #1.0e+0
 491:Veno-Echo.cpp **** 
 9341              		.loc 20 491 15 view .LVU2566
 9342 014c 20EE070A 		vmul.f32	s0, s0, s14
 9343              	.LVL578:
 494:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9344              		.loc 20 494 9 is_stmt 1 view .LVU2567
 9345              	.LBB1933:
 9346              	.LBB1911:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9347              		.loc 12 57 33 is_stmt 0 view .LVU2568
 9348 0150 36EEE25A 		vsub.f32	s10, s13, s5
 9349              	.LBE1911:
 9350              	.LBE1933:
 9351              	.LBB1934:
 9352              	.LBB1924:
 9353 0154 76EEE35A 		vsub.f32	s11, s13, s7
 9354              	.LBE1924:
 9355              	.LBE1934:
 9356              	.LBB1935:
 9357              	.LBB1912:
 9358              		.loc 12 65 45 view .LVU2569
 9359 0158 36EEC37A 		vsub.f32	s14, s13, s6
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9360              		.loc 12 57 37 view .LVU2570
 9361 015c 25EE065A 		vmul.f32	s10, s10, s12
 9362              	.LBE1912:
 9363              	.LBE1935:
 494:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9364              		.loc 20 494 36 view .LVU2571
 9365 0160 93ED006A 		vldr.32	s12, [r3]
 9366              	.LBB1936:
 9367              	.LBB1925:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9368              		.loc 12 57 37 view .LVU2572
 9369 0164 65EEA75A 		vmul.f32	s11, s11, s15
 9370              		.loc 12 65 45 view .LVU2573
 9371 0168 76EEC47A 		vsub.f32	s15, s13, s8
 9372              	.LBE1925:
 9373              	.LBE1936:
 9374              	.LBB1937:
 9375              	.LBB1913:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9376              		.loc 12 57 28 view .LVU2574
 9377 016c A4EEA25A 		vfma.f32	s10, s9, s5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 302


 9378              	.LBE1913:
 9379              	.LBE1937:
 9380              	.LBB1938:
 9381              	.LBB1926:
 9382 0170 E0EE235A 		vfma.f32	s11, s0, s7
 9383              		.loc 12 65 53 view .LVU2575
 9384 0174 67EE827A 		vmul.f32	s15, s15, s4
 9385              	.LBE1926:
 9386              	.LBE1938:
 9387              	.LBB1939:
 9388              	.LBB1914:
 9389 0178 27EE017A 		vmul.f32	s14, s14, s2
 9390              	.LBE1914:
 9391              	.LBE1939:
 494:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9392              		.loc 20 494 36 view .LVU2576
 9393 017c 76EEC66A 		vsub.f32	s13, s13, s12
 9394              	.LBB1940:
 9395              	.LBB1915:
  58:envFollow.h   **** 
 9396              		.loc 12 58 30 view .LVU2577
 9397 0180 34EEC52A 		vsub.f32	s4, s9, s10
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9398              		.loc 12 57 13 view .LVU2578
 9399 0184 88ED005A 		vstr.32	s10, [r8]
 9400              	.LBE1915:
 9401              	.LBE1940:
 9402              	.LBB1941:
 9403              	.LBB1927:
  58:envFollow.h   **** 
 9404              		.loc 12 58 30 view .LVU2579
 9405 0188 70EE652A 		vsub.f32	s5, s0, s11
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9406              		.loc 12 57 13 view .LVU2580
 9407 018c C9ED005A 		vstr.32	s11, [r9]
 9408              	.LBE1927:
 9409              	.LBE1941:
 494:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9410              		.loc 20 494 89 view .LVU2581
 9411 0190 66EE005A 		vmul.f32	s11, s12, s0
 9412              	.LBB1942:
 9413              	.LBB1916:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9414              		.loc 12 61 27 view .LVU2582
 9415 0194 F0EEC23A 		vabs.f32	s7, s4
  58:envFollow.h   **** 
 9416              		.loc 12 58 21 view .LVU2583
 9417 0198 88ED022A 		vstr.32	s4, [r8, #8]
 9418              	.LBE1916:
 9419              	.LBE1942:
 9420              	.LBB1943:
 9421              	.LBB1928:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9422              		.loc 12 61 27 view .LVU2584
 9423 019c B0EEE25A 		vabs.f32	s10, s5
  58:envFollow.h   **** 
 9424              		.loc 12 58 21 view .LVU2585
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 303


 9425 01a0 C9ED022A 		vstr.32	s5, [r9, #8]
 9426              	.LBE1928:
 9427              	.LBE1943:
 495:Veno-Echo.cpp **** 
 9428              		.loc 20 495 89 view .LVU2586
 9429 01a4 26EE246A 		vmul.f32	s12, s12, s9
 9430              	.LBB1944:
 9431              	.LBB1917:
 9432              		.loc 12 65 40 view .LVU2587
 9433 01a8 A3EE837A 		vfma.f32	s14, s7, s6
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9434              		.loc 12 61 20 view .LVU2588
 9435 01ac C8ED013A 		vstr.32	s7, [r8, #4]
 9436              	.LBE1917:
 9437              	.LBE1944:
 9438              	.LBB1945:
 9439              	.LBB1929:
 9440              		.loc 12 65 40 view .LVU2589
 9441 01b0 E5EE047A 		vfma.f32	s15, s10, s8
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9442              		.loc 12 61 20 view .LVU2590
 9443 01b4 89ED015A 		vstr.32	s10, [r9, #4]
 9444              	.LBE1929:
 9445              	.LBE1945:
 494:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9446              		.loc 20 494 15 view .LVU2591
 9447 01b8 E6EEA45A 		vfma.f32	s11, s13, s9
 9448              	.LVL579:
 495:Veno-Echo.cpp **** 
 9449              		.loc 20 495 9 is_stmt 1 view .LVU2592
 495:Veno-Echo.cpp **** 
 9450              		.loc 20 495 15 is_stmt 0 view .LVU2593
 9451 01bc A6EE806A 		vfma.f32	s12, s13, s0
 9452              	.LVL580:
 499:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 9453              		.loc 20 499 9 is_stmt 1 view .LVU2594
 9454              	.LBB1946:
 9455              	.LBI1907:
  54:envFollow.h   ****     {
 9456              		.loc 12 54 11 view .LVU2595
 9457              	.LBB1918:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9458              		.loc 12 57 9 view .LVU2596
  58:envFollow.h   **** 
 9459              		.loc 12 58 9 view .LVU2597
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9460              		.loc 12 61 9 view .LVU2598
 9461              		.loc 12 65 9 view .LVU2599
 9462              	.LBE1918:
 9463              	.LBE1946:
 503:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9464              		.loc 20 503 13 is_stmt 0 view .LVU2600
 9465 01c0 B4EEE17A 		vcmpe.f32	s14, s3
 9466              	.LBB1947:
 9467              	.LBB1919:
 9468              		.loc 12 65 17 view .LVU2601
 9469 01c4 88ED037A 		vstr.32	s14, [r8, #12]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 304


  66:envFollow.h   **** 
  67:envFollow.h   ****         return avg_env;
 9470              		.loc 12 67 9 is_stmt 1 view .LVU2602
 9471              	.LVL581:
 9472              		.loc 12 67 9 is_stmt 0 view .LVU2603
 9473              	.LBE1919:
 9474              	.LBE1947:
 500:Veno-Echo.cpp **** 
 9475              		.loc 20 500 9 is_stmt 1 view .LVU2604
 9476              	.LBB1948:
 9477              	.LBI1921:
  54:envFollow.h   ****     {
 9478              		.loc 12 54 11 view .LVU2605
 9479              	.LBB1930:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9480              		.loc 12 57 9 view .LVU2606
  58:envFollow.h   **** 
 9481              		.loc 12 58 9 view .LVU2607
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9482              		.loc 12 61 9 view .LVU2608
  65:envFollow.h   **** 
 9483              		.loc 12 65 9 view .LVU2609
  65:envFollow.h   **** 
 9484              		.loc 12 65 17 is_stmt 0 view .LVU2610
 9485 01c8 C9ED037A 		vstr.32	s15, [r9, #12]
 9486              		.loc 12 67 9 is_stmt 1 view .LVU2611
 9487              	.LVL582:
 9488              		.loc 12 67 9 is_stmt 0 view .LVU2612
 9489              	.LBE1930:
 9490              	.LBE1948:
 503:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9491              		.loc 20 503 13 is_stmt 1 view .LVU2613
 9492 01cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9493 01d0 C0F2E483 		blt	.L632
 504:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9494              		.loc 20 504 17 view .LVU2614
 504:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9495              		.loc 20 504 32 is_stmt 0 view .LVU2615
 9496 01d4 37EE617A 		vsub.f32	s14, s14, s3
 9497              	.LVL583:
 504:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9498              		.loc 20 504 47 view .LVU2616
 9499 01d8 F0EE086A 		vmov.f32	s13, #3.0e+0
 9500 01dc 27EE267A 		vmul.f32	s14, s14, s13
 9501              	.L552:
 508:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 9502              		.loc 20 508 13 view .LVU2617
 9503 01e0 DFED9B6A 		vldr.32	s13, .L646+16
 9504 01e4 984B     		ldr	r3, .L646+8
 9505 01e6 F4EEE67A 		vcmpe.f32	s15, s13
 9506 01ea 83ED007A 		vstr.32	s14, [r3]
 508:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 9507              		.loc 20 508 13 is_stmt 1 view .LVU2618
 9508 01ee F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9509 01f2 C0F2D083 		blt	.L633
 509:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9510              		.loc 20 509 17 view .LVU2619
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 305


 509:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9511              		.loc 20 509 32 is_stmt 0 view .LVU2620
 9512 01f6 77EEE67A 		vsub.f32	s15, s15, s13
 9513              	.LVL584:
 509:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9514              		.loc 20 509 47 view .LVU2621
 9515 01fa B0EE087A 		vmov.f32	s14, #3.0e+0
 9516 01fe 67EE877A 		vmul.f32	s15, s15, s14
 9517              	.L554:
 9518 0202 944B     		ldr	r3, .L646+20
 513:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 9519              		.loc 20 513 15 view .LVU2622
 9520 0204 38EEA50A 		vadd.f32	s0, s17, s11
 9521              	.LVL585:
 514:Veno-Echo.cpp ****  
 9522              		.loc 20 514 15 view .LVU2623
 9523 0208 38EE068A 		vadd.f32	s16, s16, s12
 9524              	.LVL586:
 514:Veno-Echo.cpp ****  
 9525              		.loc 20 514 15 view .LVU2624
 9526 020c C3ED007A 		vstr.32	s15, [r3]
 513:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 9527              		.loc 20 513 9 is_stmt 1 view .LVU2625
 9528              	.LVL587:
 514:Veno-Echo.cpp ****  
 9529              		.loc 20 514 9 view .LVU2626
 517:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 9530              		.loc 20 517 9 view .LVU2627
 9531              	.LBB1949:
 9532              	.LBI1949:
1996:Veno-Echo.cpp **** {
 9533              		.loc 20 1996 7 view .LVU2628
 9534              	.LBB1950:
1998:Veno-Echo.cpp ****     if (input > limit)
 9535              		.loc 20 1998 5 view .LVU2629
1999:Veno-Echo.cpp ****         returnval = limit;
 9536              		.loc 20 1999 5 view .LVU2630
 9537 0210 F0EE007A 		vmov.f32	s15, #2.0e+0
 9538 0214 B4EEE70A 		vcmpe.f32	s0, s15
 9539 0218 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9540 021c 00F35D84 		bgt	.L586
2001:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9541              		.loc 20 2001 10 view .LVU2631
 9542 0220 F8EE007A 		vmov.f32	s15, #-2.0e+0
2002:Veno-Echo.cpp ****     else
 9543              		.loc 20 2002 19 is_stmt 0 view .LVU2632
 9544 0224 B4EE670A 		vcmp.f32	s0, s15
 9545 0228 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9546 022c 48BF     		it	mi
 9547 022e B0EE670A 		vmovmi.f32	s0, s15
 9548              	.LVL588:
 9549              	.L556:
2006:Veno-Echo.cpp **** }
 9550              		.loc 20 2006 5 is_stmt 1 view .LVU2633
2006:Veno-Echo.cpp **** }
 9551              		.loc 20 2006 5 is_stmt 0 view .LVU2634
 9552              	.LBE1950:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 306


 9553              	.LBE1949:
 518:Veno-Echo.cpp **** 
 9554              		.loc 20 518 9 is_stmt 1 view .LVU2635
 9555              	.LBB1952:
 9556              	.LBI1952:
1996:Veno-Echo.cpp **** {
 9557              		.loc 20 1996 7 view .LVU2636
 9558              	.LBB1953:
1998:Veno-Echo.cpp ****     if (input > limit)
 9559              		.loc 20 1998 5 view .LVU2637
1999:Veno-Echo.cpp ****         returnval = limit;
 9560              		.loc 20 1999 5 view .LVU2638
 9561 0232 F0EE007A 		vmov.f32	s15, #2.0e+0
 9562 0236 B4EEE78A 		vcmpe.f32	s16, s15
 9563 023a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9564 023e 00F34884 		bgt	.L587
2001:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9565              		.loc 20 2001 10 view .LVU2639
 9566 0242 F8EE007A 		vmov.f32	s15, #-2.0e+0
2002:Veno-Echo.cpp ****     else
 9567              		.loc 20 2002 19 is_stmt 0 view .LVU2640
 9568 0246 B4EE678A 		vcmp.f32	s16, s15
 9569 024a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9570 024e 48BF     		it	mi
 9571 0250 B0EE678A 		vmovmi.f32	s16, s15
 9572              	.LVL589:
 9573              	.L558:
2006:Veno-Echo.cpp **** }
 9574              		.loc 20 2006 5 is_stmt 1 view .LVU2641
2006:Veno-Echo.cpp **** }
 9575              		.loc 20 2006 5 is_stmt 0 view .LVU2642
 9576              	.LBE1953:
 9577              	.LBE1952:
 520:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 9578              		.loc 20 520 9 is_stmt 1 view .LVU2643
 520:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 9579              		.loc 20 520 42 is_stmt 0 view .LVU2644
 9580 0254 8148     		ldr	r0, .L646+28
 9581 0256 FFF7FEFF 		bl	_ZN7daisysp7DcBlock7ProcessEf
 9582              	.LVL590:
 520:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 9583              		.loc 20 520 21 view .LVU2645
 9584 025a 11A9     		add	r1, sp, #68
 9585 025c 8048     		ldr	r0, .L646+32
 520:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 9586              		.loc 20 520 42 view .LVU2646
 9587 025e 8DED110A 		vstr.32	s0, [sp, #68]
 520:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 9588              		.loc 20 520 21 view .LVU2647
 9589 0262 FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 9590              	.LVL591:
 521:Veno-Echo.cpp **** 
 9591              		.loc 20 521 9 is_stmt 1 view .LVU2648
 521:Veno-Echo.cpp **** 
 9592              		.loc 20 521 42 is_stmt 0 view .LVU2649
 9593 0266 7F48     		ldr	r0, .L646+36
 9594 0268 B0EE480A 		vmov.f32	s0, s16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 307


 9595 026c FFF7FEFF 		bl	_ZN7daisysp7DcBlock7ProcessEf
 9596              	.LVL592:
 521:Veno-Echo.cpp **** 
 9597              		.loc 20 521 21 view .LVU2650
 9598 0270 11A9     		add	r1, sp, #68
 9599 0272 7D48     		ldr	r0, .L646+40
 521:Veno-Echo.cpp **** 
 9600              		.loc 20 521 42 view .LVU2651
 9601 0274 8DED110A 		vstr.32	s0, [sp, #68]
 521:Veno-Echo.cpp **** 
 9602              		.loc 20 521 21 view .LVU2652
 9603 0278 FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 9604              	.LVL593:
 524:Veno-Echo.cpp ****         float mixR;
 9605              		.loc 20 524 9 is_stmt 1 view .LVU2653
 525:Veno-Echo.cpp **** 
 9606              		.loc 20 525 9 view .LVU2654
 527:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 9607              		.loc 20 527 9 view .LVU2655
 527:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 9608              		.loc 20 527 53 is_stmt 0 view .LVU2656
 9609 027c 09AA     		add	r2, sp, #36
 9610 027e 08A9     		add	r1, sp, #32
 9611 0280 7A48     		ldr	r0, .L646+44
 9612 0282 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9613              	.LVL594:
 528:Veno-Echo.cpp **** 
 9614              		.loc 20 528 53 view .LVU2657
 9615 0286 08AA     		add	r2, sp, #32
 9616 0288 09A9     		add	r1, sp, #36
 9617 028a 7848     		ldr	r0, .L646+44
 527:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 9618              		.loc 20 527 81 view .LVU2658
 9619 028c 8DED0A0A 		vstr.32	s0, [sp, #40]
 528:Veno-Echo.cpp **** 
 9620              		.loc 20 528 9 is_stmt 1 view .LVU2659
 528:Veno-Echo.cpp **** 
 9621              		.loc 20 528 53 is_stmt 0 view .LVU2660
 9622 0290 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9623              	.LVL595:
 9624              	.LBB1955:
 9625              	.LBB1956:
1999:Veno-Echo.cpp ****         returnval = limit;
 9626              		.loc 20 1999 5 view .LVU2661
 9627 0294 B0EE007A 		vmov.f32	s14, #2.0e+0
 9628              	.LBE1956:
 9629              	.LBE1955:
 531:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 9630              		.loc 20 531 38 view .LVU2662
 9631 0298 DDED0A7A 		vldr.32	s15, [sp, #40]
 531:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 9632              		.loc 20 531 9 is_stmt 1 view .LVU2663
 9633              	.LVL596:
 9634              	.LBB1959:
 9635              	.LBI1955:
1996:Veno-Echo.cpp **** {
 9636              		.loc 20 1996 7 view .LVU2664
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 308


 9637              	.LBB1957:
1998:Veno-Echo.cpp ****     if (input > limit)
 9638              		.loc 20 1998 5 view .LVU2665
1999:Veno-Echo.cpp ****         returnval = limit;
 9639              		.loc 20 1999 5 view .LVU2666
 9640 029c F4EEC77A 		vcmpe.f32	s15, s14
 9641 02a0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9642 02a4 00F31D84 		bgt	.L588
2001:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9643              		.loc 20 2001 10 view .LVU2667
 9644 02a8 B8EE007A 		vmov.f32	s14, #-2.0e+0
2002:Veno-Echo.cpp ****     else
 9645              		.loc 20 2002 19 is_stmt 0 view .LVU2668
 9646 02ac F4EE477A 		vcmp.f32	s15, s14
 9647 02b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9648 02b4 48BF     		it	mi
 9649 02b6 F0EE477A 		vmovmi.f32	s15, s14
 9650              	.LVL597:
 9651              	.L560:
2006:Veno-Echo.cpp **** }
 9652              		.loc 20 2006 5 is_stmt 1 view .LVU2669
2006:Veno-Echo.cpp **** }
 9653              		.loc 20 2006 5 is_stmt 0 view .LVU2670
 9654              	.LBE1957:
 9655              	.LBE1959:
 9656              	.LBB1960:
 9657              	.LBB1961:
1999:Veno-Echo.cpp ****         returnval = limit;
 9658              		.loc 20 1999 5 view .LVU2671
 9659 02ba B0EE007A 		vmov.f32	s14, #2.0e+0
 9660              	.LBE1961:
 9661              	.LBE1960:
 531:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 9662              		.loc 20 531 27 view .LVU2672
 9663 02be CDED0A7A 		vstr.32	s15, [sp, #40]
 532:Veno-Echo.cpp **** 
 9664              		.loc 20 532 9 is_stmt 1 view .LVU2673
 9665              	.LVL598:
 9666              	.LBB1965:
 9667              	.LBI1960:
1996:Veno-Echo.cpp **** {
 9668              		.loc 20 1996 7 view .LVU2674
 9669              	.LBB1962:
1998:Veno-Echo.cpp ****     if (input > limit)
 9670              		.loc 20 1998 5 view .LVU2675
1999:Veno-Echo.cpp ****         returnval = limit;
 9671              		.loc 20 1999 5 view .LVU2676
 9672 02c2 B4EEC70A 		vcmpe.f32	s0, s14
 9673 02c6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9674 02ca 00F3CB82 		bgt	.L589
2001:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9675              		.loc 20 2001 10 view .LVU2677
 9676 02ce B8EE007A 		vmov.f32	s14, #-2.0e+0
 9677              	.LBE1962:
 9678              	.LBE1965:
 9679              	.LBB1966:
 534:Veno-Echo.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 309


 9680              		.loc 20 534 1 is_stmt 0 view .LVU2678
 9681 02d2 5B4B     		ldr	r3, .L646
 9682 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9683              	.LBE1966:
 9684              	.LBB1989:
 9685              	.LBB1963:
2002:Veno-Echo.cpp ****     else
 9686              		.loc 20 2002 19 view .LVU2679
 9687 02d6 B4EE470A 		vcmp.f32	s0, s14
 9688 02da F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9689 02de 48BF     		it	mi
 9690 02e0 B0EE470A 		vmovmi.f32	s0, s14
 9691              	.LVL599:
2006:Veno-Echo.cpp **** }
 9692              		.loc 20 2006 5 is_stmt 1 view .LVU2680
2006:Veno-Echo.cpp **** }
 9693              		.loc 20 2006 5 is_stmt 0 view .LVU2681
 9694              	.LBE1963:
 9695              	.LBE1989:
 532:Veno-Echo.cpp **** 
 9696              		.loc 20 532 27 view .LVU2682
 9697 02e4 8DED0B0A 		vstr.32	s0, [sp, #44]
 534:Veno-Echo.cpp **** {
 9698              		.loc 20 534 1 is_stmt 1 view .LVU2683
 9699              	.LBB1990:
 9700 02e8 002B     		cmp	r3, #0
 9701 02ea 40F0C482 		bne	.L641
 9702              	.LVL600:
 9703              	.L564:
 534:Veno-Echo.cpp **** {
 9704              		.loc 20 534 1 is_stmt 0 view .LVU2684
 9705              	.LBE1990:
 575:Veno-Echo.cpp ****         {
 9706              		.loc 20 575 9 is_stmt 1 view .LVU2685
 575:Veno-Echo.cpp ****         {
 9707              		.loc 20 575 19 is_stmt 0 view .LVU2686
 9708 02ee 604B     		ldr	r3, .L646+48
 575:Veno-Echo.cpp ****         {
 9709              		.loc 20 575 9 view .LVU2687
 9710 02f0 F6EE006A 		vmov.f32	s13, #5.0e-1
 575:Veno-Echo.cpp ****         {
 9711              		.loc 20 575 19 view .LVU2688
 9712 02f4 93ED007A 		vldr.32	s14, [r3]
 575:Veno-Echo.cpp ****         {
 9713              		.loc 20 575 9 view .LVU2689
 9714 02f8 B4EEE67A 		vcmpe.f32	s14, s13
 9715 02fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9716 0300 40F18782 		bpl	.L634
 577:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9717              		.loc 20 577 13 is_stmt 1 view .LVU2690
 577:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9718              		.loc 20 577 34 is_stmt 0 view .LVU2691
 9719 0304 37EE077A 		vadd.f32	s14, s14, s14
 577:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9720              		.loc 20 577 18 view .LVU2692
 9721 0308 9BED006A 		vldr.32	s12, [fp]
 578:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 310


 9722              		.loc 20 578 18 view .LVU2693
 9723 030c DBED016A 		vldr.32	s13, [fp, #4]
 577:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9724              		.loc 20 577 18 view .LVU2694
 9725 0310 A7EE276A 		vfma.f32	s12, s14, s15
 578:Veno-Echo.cpp ****         }
 9726              		.loc 20 578 18 view .LVU2695
 9727 0314 E7EE006A 		vfma.f32	s13, s14, s0
 577:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9728              		.loc 20 577 18 view .LVU2696
 9729 0318 F0EE467A 		vmov.f32	s15, s12
 9730              	.LVL601:
 578:Veno-Echo.cpp ****         }
 9731              		.loc 20 578 13 is_stmt 1 view .LVU2697
 578:Veno-Echo.cpp ****         }
 9732              		.loc 20 578 18 is_stmt 0 view .LVU2698
 9733 031c B0EE660A 		vmov.f32	s0, s13
 9734              	.LVL602:
 9735              	.L570:
 592:Veno-Echo.cpp ****         {
 9736              		.loc 20 592 9 is_stmt 1 view .LVU2699
 9737 0320 544B     		ldr	r3, .L646+52
 9738 0322 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9739 0324 002B     		cmp	r3, #0
 9740 0326 00F06E82 		beq	.L573
 594:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 9741              		.loc 20 594 13 view .LVU2700
 594:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 9742              		.loc 20 594 20 is_stmt 0 view .LVU2701
 9743 032a 0023     		movs	r3, #0
 9744 032c 009A     		ldr	r2, [sp]
 9745 032e 1360     		str	r3, [r2]	@ float
 595:Veno-Echo.cpp ****         }
 9746              		.loc 20 595 13 is_stmt 1 view .LVU2702
 595:Veno-Echo.cpp ****         }
 9747              		.loc 20 595 22 is_stmt 0 view .LVU2703
 9748 0330 5360     		str	r3, [r2, #4]	@ float
 9749              	.L574:
 9750              	.LBE1872:
 379:Veno-Echo.cpp ****     {   
 9751              		.loc 20 379 5 is_stmt 1 discriminator 2 view .LVU2704
 9752 0332 009B     		ldr	r3, [sp]
 9753 0334 0BF1080B 		add	fp, fp, #8
 379:Veno-Echo.cpp ****     {   
 9754              		.loc 20 379 35 is_stmt 0 discriminator 2 view .LVU2705
 9755 0338 029A     		ldr	r2, [sp, #8]
 379:Veno-Echo.cpp ****     {   
 9756              		.loc 20 379 25 discriminator 2 view .LVU2706
 9757 033a 0599     		ldr	r1, [sp, #20]
 9758 033c 0833     		adds	r3, r3, #8
 9759 033e 8A42     		cmp	r2, r1
 9760 0340 0093     		str	r3, [sp]
 379:Veno-Echo.cpp ****     {   
 9761              		.loc 20 379 35 discriminator 2 view .LVU2707
 9762 0342 02F10203 		add	r3, r2, #2
 9763              	.LVL603:
 379:Veno-Echo.cpp ****     {   
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 311


 9764              		.loc 20 379 25 is_stmt 1 discriminator 2 view .LVU2708
 9765 0346 00F0ED83 		beq	.L503
 9766 034a 0293     		str	r3, [sp, #8]
 9767              	.LVL604:
 9768              	.L576:
 9769              	.LBB2251:
 381:Veno-Echo.cpp ****         Update_Mod();
 9770              		.loc 20 381 9 view .LVU2709
 381:Veno-Echo.cpp ****         Update_Mod();
 9771              		.loc 20 381 20 is_stmt 0 view .LVU2710
 9772 034c FFF7FEFF 		bl	_Z11UpdateClockv
 9773              	.LVL605:
 382:Veno-Echo.cpp **** 
 9774              		.loc 20 382 9 is_stmt 1 view .LVU2711
 9775              	.LBB1991:
 9776              	.LBB1992:
 9777              	.LBB1993:
 9778              	.LBB1994:
  74:delayline_reverse.h **** 
  75:delayline_reverse.h ****     /** sets the delay time in samples
  76:delayline_reverse.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  77:delayline_reverse.h ****     */
  78:delayline_reverse.h ****     inline void SetDelay1(float delay)
  79:delayline_reverse.h ****     {
  80:delayline_reverse.h ****         int32_t int_delay = static_cast<int32_t>(delay);
  81:delayline_reverse.h ****         frac1_             = delay - static_cast<float>(int_delay);
  82:delayline_reverse.h ****         delay1_ = static_cast<size_t>(int_delay) < max_size ? int_delay
  83:delayline_reverse.h ****                                                            : max_size - 1;
  84:delayline_reverse.h ****     }
  85:delayline_reverse.h **** 
  86:delayline_reverse.h ****     /** writes the sample of type T to the delay line, and advances the write ptr
  87:delayline_reverse.h ****     */
  88:delayline_reverse.h ****     inline void Write(const T sample)
  89:delayline_reverse.h ****     {
  90:delayline_reverse.h ****         line_[write_ptr_] = sample;
  91:delayline_reverse.h ****         //advance write ptr in forward direction
  92:delayline_reverse.h ****         write_ptr_        = (write_ptr_ + 1 + max_size) % max_size; //increment forwards
  93:delayline_reverse.h ****         
  94:delayline_reverse.h ****         //increment head difference
  95:delayline_reverse.h ****         headDiff_        = (headDiff_ + 1 + delay1_) % delay1_;   
  96:delayline_reverse.h **** 
  97:delayline_reverse.h ****         //advance read ptrs in reverse direction
  98:delayline_reverse.h ****         read_ptr1_ = (read_ptr1_ - 1 + max_size) % max_size;
  99:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 100:delayline_reverse.h ****  
 101:delayline_reverse.h ****         if (headDiff_ > (delay1_ - fadetime - 1))  //start cross fade region
 102:delayline_reverse.h ****         {
 103:delayline_reverse.h ****             if(!fading_)
 104:delayline_reverse.h ****             {
 105:delayline_reverse.h ****                 fading_ = true; //start fading
 106:delayline_reverse.h ****                 
 107:delayline_reverse.h ****                 if(!playinghead_) 
 108:delayline_reverse.h ****                 {
 109:delayline_reverse.h ****                     //jump ptr2 to fadetime beyond write position
 110:delayline_reverse.h ****                     read_ptr2_ = write_ptr_ - 1;
 111:delayline_reverse.h ****                 }
 112:delayline_reverse.h ****     
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 312


 113:delayline_reverse.h ****                 else
 114:delayline_reverse.h ****                 {
 115:delayline_reverse.h ****                     //jump ptr1 to fadetime beyond write position
 116:delayline_reverse.h ****                     read_ptr1_ = write_ptr_ - 1; 
 117:delayline_reverse.h ****                 }
 118:delayline_reverse.h ****             }
 119:delayline_reverse.h **** 
 120:delayline_reverse.h ****             else
 121:delayline_reverse.h ****             {
 122:delayline_reverse.h ****                 //continue fading
 123:delayline_reverse.h ****             }
 124:delayline_reverse.h ****         }
 125:delayline_reverse.h **** 
 126:delayline_reverse.h ****         if(fading_)
 127:delayline_reverse.h ****         {
 128:delayline_reverse.h ****             if(!playinghead_)   //head1 playing
 129:delayline_reverse.h ****             {
 130:delayline_reverse.h ****                 fadepos_ = fadepos_ + (1.0f / (fadetime) ); //increment up to 1.
 131:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 132:delayline_reverse.h ****                 {
 133:delayline_reverse.h ****                     fadepos_ = 1.0f;
 134:delayline_reverse.h ****                     fading_ = false;    //stop fading
 135:delayline_reverse.h ****                     playinghead_ = true;
 136:delayline_reverse.h ****                 }
 137:delayline_reverse.h ****             }
 138:delayline_reverse.h **** 
 139:delayline_reverse.h ****             else    //head2 playing
 140:delayline_reverse.h ****             {
 141:delayline_reverse.h ****                 fadepos_ = fadepos_ - (1.0f / (fadetime) ); //increment down to 0
 142:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 143:delayline_reverse.h ****                 {
 144:delayline_reverse.h ****                     fadepos_ = 0.0f;
 145:delayline_reverse.h ****                     fading_ = false;    //stop fading
 146:delayline_reverse.h ****                     playinghead_ = false;
 147:delayline_reverse.h ****                 }
 148:delayline_reverse.h ****             }
 149:delayline_reverse.h ****         }
 150:delayline_reverse.h ****         else    //not fading
 151:delayline_reverse.h ****         {
 152:delayline_reverse.h ****         }
 153:delayline_reverse.h **** 
 154:delayline_reverse.h ****         
 155:delayline_reverse.h ****     }
 156:delayline_reverse.h **** 
 157:delayline_reverse.h ****     /** returns the next sample of type T in the delay line, interpolated if necessary.
 158:delayline_reverse.h ****     */
 159:delayline_reverse.h ****     inline const T ReadRev() const
 160:delayline_reverse.h ****     {
 161:delayline_reverse.h ****         T a1 = line_[read_ptr1_];
 162:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 163:delayline_reverse.h **** 
 164:delayline_reverse.h ****         float read1 = a1;
 165:delayline_reverse.h ****         float read2 = a2;
 166:delayline_reverse.h **** 
 167:delayline_reverse.h ****         float scalar_1, scalar_2;
 168:delayline_reverse.h **** 
 169:delayline_reverse.h ****         //hann
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 313


 170:delayline_reverse.h ****         //scalar_1 = sinf(fadepos_ * ((float)M_PI * 0.5f));
 171:delayline_reverse.h ****         //scalar_2 = sinf((1.0f - fadepos_) * ((float)M_PI * 0.5f));
 172:delayline_reverse.h **** 
 173:delayline_reverse.h ****         //flattenned hann
 174:delayline_reverse.h ****         scalar_1 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*fadepos_)  +   (1.0f/16.0f)*s
 9779              		.loc 19 174 71 is_stmt 0 view .LVU2712
 9780 0350 DFF890A1 		ldr	r10, .L646+164
 9781              	.LBE1994:
 9782              	.LBE1993:
 9783              	.LBE1992:
 9784              	.LBE1991:
 382:Veno-Echo.cpp **** 
 9785              		.loc 20 382 19 view .LVU2713
 9786 0354 FFF7FEFF 		bl	_Z10Update_Modv
 9787              	.LVL606:
 385:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9788              		.loc 20 385 9 is_stmt 1 view .LVU2714
 385:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9789              		.loc 20 385 51 is_stmt 0 view .LVU2715
 9790 0358 4748     		ldr	r0, .L646+56
 9791 035a FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9792              	.LVL607:
 9793 035e 0146     		mov	r1, r0
 9794 0360 4648     		ldr	r0, .L646+60
 9795              	.LBB2046:
 9796              	.LBB2029:
 9797              	.LBB2012:
 9798              	.LBB1995:
 175:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9799              		.loc 19 175 77 view .LVU2716
 9800 0362 F7EE00AA 		vmov.f32	s21, #1.0e+0
 9801              	.LBE1995:
 9802              	.LBE2012:
 9803              	.LBE2029:
 9804              	.LBE2046:
 385:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9805              		.loc 20 385 51 view .LVU2717
 9806 0366 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9807              	.LVL608:
 386:Veno-Echo.cpp ****         
 9808              		.loc 20 386 51 view .LVU2718
 9809 036a 4548     		ldr	r0, .L646+64
 385:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9810              		.loc 20 385 51 view .LVU2719
 9811 036c F0EE40BA 		vmov.f32	s23, s0
 9812              	.LVL609:
 386:Veno-Echo.cpp ****         
 9813              		.loc 20 386 9 is_stmt 1 view .LVU2720
 386:Veno-Echo.cpp ****         
 9814              		.loc 20 386 51 is_stmt 0 view .LVU2721
 9815 0370 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9816              	.LVL610:
 386:Veno-Echo.cpp ****         
 9817              		.loc 20 386 51 view .LVU2722
 9818 0374 0146     		mov	r1, r0
 9819 0376 4348     		ldr	r0, .L646+68
 9820 0378 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 314


 9821              	.LVL611:
 388:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9822              		.loc 20 388 44 view .LVU2723
 9823 037c 4248     		ldr	r0, .L646+72
 386:Veno-Echo.cpp ****         
 9824              		.loc 20 386 51 view .LVU2724
 9825 037e B0EE409A 		vmov.f32	s18, s0
 9826              	.LVL612:
 388:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9827              		.loc 20 388 9 is_stmt 1 view .LVU2725
 388:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9828              		.loc 20 388 44 is_stmt 0 view .LVU2726
 9829 0382 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9830              	.LVL613:
 388:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9831              		.loc 20 388 44 view .LVU2727
 9832 0386 0146     		mov	r1, r0
 9833 0388 4048     		ldr	r0, .L646+76
 9834 038a FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9835              	.LVL614:
 389:Veno-Echo.cpp **** 
 9836              		.loc 20 389 44 view .LVU2728
 9837 038e 4048     		ldr	r0, .L646+80
 388:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9838              		.loc 20 388 44 view .LVU2729
 9839 0390 B0EE408A 		vmov.f32	s16, s0
 9840              	.LVL615:
 389:Veno-Echo.cpp **** 
 9841              		.loc 20 389 9 is_stmt 1 view .LVU2730
 389:Veno-Echo.cpp **** 
 9842              		.loc 20 389 44 is_stmt 0 view .LVU2731
 9843 0394 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9844              	.LVL616:
 389:Veno-Echo.cpp **** 
 9845              		.loc 20 389 44 view .LVU2732
 9846 0398 0146     		mov	r1, r0
 9847 039a 3E48     		ldr	r0, .L646+84
 9848 039c FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9849              	.LVL617:
 9850              	.LBB2047:
 9851              	.LBB2048:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9852              		.loc 10 60 42 view .LVU2733
 9853 03a0 3D48     		ldr	r0, .L646+88
 9854              	.LBE2048:
 9855              	.LBE2047:
 412:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9856              		.loc 20 412 49 view .LVU2734
 9857 03a2 3E4B     		ldr	r3, .L646+92
 389:Veno-Echo.cpp **** 
 9858              		.loc 20 389 44 view .LVU2735
 9859 03a4 F0EE407A 		vmov.f32	s15, s0
 9860              	.LVL618:
 392:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 9861              		.loc 20 392 9 is_stmt 1 view .LVU2736
 9862              	.LBB2050:
 9863              	.LBI2047:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 315


  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9864              		.loc 10 60 17 view .LVU2737
 9865              	.LBB2049:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9866              		.loc 10 60 37 view .LVU2738
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9867              		.loc 10 60 42 is_stmt 0 view .LVU2739
 9868 03a8 C0ED00BA 		vstr.32	s23, [r0]
 9869              	.LVL619:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9870              		.loc 10 60 42 view .LVU2740
 9871              	.LBE2049:
 9872              	.LBE2050:
 393:Veno-Echo.cpp ****         
 9873              		.loc 20 393 9 is_stmt 1 view .LVU2741
 9874              	.LBB2051:
 9875              	.LBI2051:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9876              		.loc 10 60 17 view .LVU2742
 9877              	.LBB2052:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9878              		.loc 10 60 37 view .LVU2743
 9879              	.LBE2052:
 9880              	.LBE2051:
 9881              	.LBB2055:
 9882              	.LBB2030:
 9883              	.LBB2013:
 9884              	.LBB1996:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9885              		.loc 19 174 82 is_stmt 0 view .LVU2744
 9886 03ac F6EE028A 		vmov.f32	s17, #5.625e-1
 9887              	.LBE1996:
 9888              	.LBE2013:
 9889              	.LBE2030:
 9890              	.LBE2055:
 9891              	.LBB2056:
 9892              	.LBB2053:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9893              		.loc 10 60 42 view .LVU2745
 9894 03b0 3B48     		ldr	r0, .L646+96
 9895              	.LBE2053:
 9896              	.LBE2056:
 412:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9897              		.loc 20 412 49 view .LVU2746
 9898 03b2 1D68     		ldr	r5, [r3]
 9899              	.LBB2057:
 9900              	.LBB2054:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9901              		.loc 10 60 42 view .LVU2747
 9902 03b4 80ED009A 		vstr.32	s18, [r0]
 9903              	.LVL620:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9904              		.loc 10 60 42 view .LVU2748
 9905              	.LBE2054:
 9906              	.LBE2057:
 395:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 9907              		.loc 20 395 9 is_stmt 1 view .LVU2749
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 316


 9908              	.LBB2058:
 9909              	.LBI2058:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9910              		.loc 10 60 17 view .LVU2750
 9911              	.LBB2059:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9912              		.loc 10 60 37 view .LVU2751
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9913              		.loc 10 60 42 is_stmt 0 view .LVU2752
 9914 03b8 3A48     		ldr	r0, .L646+100
 9915              	.LBE2059:
 9916              	.LBE2058:
 9917              	.LBB2061:
 9918              	.LBB2031:
 9919              	.LBB2014:
 9920              	.LBB1997:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9921              		.loc 19 174 71 view .LVU2753
 9922 03ba 05EB0A03 		add	r3, r5, r10
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9923              		.loc 19 174 46 view .LVU2754
 9924 03be 9FED3AAA 		vldr.32	s20, .L646+104
 9925              	.LBE1997:
 9926              	.LBE2014:
 9927              	.LBE2031:
 9928              	.LBE2061:
 9929              	.LBB2062:
 9930              	.LBB2060:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9931              		.loc 10 60 42 view .LVU2755
 9932 03c2 80ED008A 		vstr.32	s16, [r0]
 9933              	.LVL621:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9934              		.loc 10 60 42 view .LVU2756
 9935              	.LBE2060:
 9936              	.LBE2062:
 396:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 9937              		.loc 20 396 9 is_stmt 1 view .LVU2757
 9938              	.LBB2063:
 9939              	.LBI2063:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9940              		.loc 10 60 17 view .LVU2758
 9941              	.LBB2064:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9942              		.loc 10 60 37 view .LVU2759
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9943              		.loc 10 60 42 is_stmt 0 view .LVU2760
 9944 03c6 3948     		ldr	r0, .L646+108
 9945              	.LBE2064:
 9946              	.LBE2063:
 9947              	.LBB2066:
 9948              	.LBB2032:
 9949              	.LBB2015:
 9950              	.LBB1998:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9951              		.loc 19 174 71 view .LVU2761
 9952 03c8 93ED00BA 		vldr.32	s22, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 317


 9953              	.LBE1998:
 9954              	.LBE2015:
 9955              	.LBE2032:
 9956              	.LBE2066:
 9957              	.LBB2067:
 9958              	.LBB2065:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9959              		.loc 10 60 42 view .LVU2762
 9960 03cc 80ED008A 		vstr.32	s16, [r0]
 9961              	.LVL622:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9962              		.loc 10 60 42 view .LVU2763
 9963              	.LBE2065:
 9964              	.LBE2067:
 397:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 9965              		.loc 20 397 9 is_stmt 1 view .LVU2764
 9966              	.LBB2068:
 9967              	.LBI2068:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9968              		.loc 10 60 17 view .LVU2765
 9969              	.LBB2069:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9970              		.loc 10 60 37 view .LVU2766
 9971              	.LBE2069:
 9972              	.LBE2068:
 9973              	.LBB2072:
 9974              	.LBB2073:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9975              		.loc 10 60 42 is_stmt 0 view .LVU2767
 9976 03d0 3748     		ldr	r0, .L646+112
 9977              	.LBE2073:
 9978              	.LBE2072:
 9979              	.LBB2076:
 9980              	.LBB2033:
 9981              	.LBB2016:
 9982              	.LBB1999:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9983              		.loc 19 174 46 view .LVU2768
 9984 03d2 2BEE0A0A 		vmul.f32	s0, s22, s20
 9985              	.LVL623:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9986              		.loc 19 174 71 view .LVU2769
 9987 03d6 0493     		str	r3, [sp, #16]
 9988              		.loc 19 175 77 view .LVU2770
 9989 03d8 3AEECBCA 		vsub.f32	s24, s21, s22
 9990              	.LBE1999:
 9991              	.LBE2016:
 9992              	.LBE2033:
 9993              	.LBE2076:
 9994              	.LBB2077:
 9995              	.LBB2074:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9996              		.loc 10 60 42 view .LVU2771
 9997 03dc 80ED008A 		vstr.32	s16, [r0]
 9998              	.LBE2074:
 9999              	.LBE2077:
 405:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 318


 10000              		.loc 20 405 27 view .LVU2772
 10001 03e0 344B     		ldr	r3, .L646+116
 10002              	.LBB2078:
 10003              	.LBB2079:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10004              		.loc 10 60 42 view .LVU2773
 10005 03e2 3548     		ldr	r0, .L646+120
 10006              	.LBE2079:
 10007              	.LBE2078:
 405:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 10008              		.loc 20 405 27 view .LVU2774
 10009 03e4 1B68     		ldr	r3, [r3]	@ float
 10010              	.LBB2082:
 10011              	.LBB2080:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10012              		.loc 10 60 42 view .LVU2775
 10013 03e6 80ED008A 		vstr.32	s16, [r0]
 10014              	.LBE2080:
 10015              	.LBE2082:
 10016              	.LBB2083:
 10017              	.LBB2070:
 10018 03ea 3448     		ldr	r0, .L646+124
 10019              	.LBE2070:
 10020              	.LBE2083:
 10021              	.LBB2084:
 10022              	.LBB2034:
 10023              	.LBB2017:
 10024              	.LBB2000:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10025              		.loc 19 174 103 view .LVU2776
 10026 03ec DFED349A 		vldr.32	s19, .L646+128
 10027              	.LBE2000:
 10028              	.LBE2017:
 10029              	.LBE2034:
 10030              	.LBE2084:
 10031              	.LBB2085:
 10032              	.LBB2071:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10033              		.loc 10 60 42 view .LVU2777
 10034 03f0 C0ED007A 		vstr.32	s15, [r0]
 10035              	.LVL624:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10036              		.loc 10 60 42 view .LVU2778
 10037              	.LBE2071:
 10038              	.LBE2085:
 398:Veno-Echo.cpp **** 
 10039              		.loc 20 398 9 is_stmt 1 view .LVU2779
 10040              	.LBB2086:
 10041              	.LBI2086:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10042              		.loc 10 60 17 view .LVU2780
 10043              	.LBB2087:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10044              		.loc 10 60 37 view .LVU2781
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10045              		.loc 10 60 42 is_stmt 0 view .LVU2782
 10046 03f4 3348     		ldr	r0, .L646+132
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 319


 10047              	.LBE2087:
 10048              	.LBE2086:
 10049              	.LBB2089:
 10050              	.LBB2035:
 10051              	.LBB2018:
 10052              	.LBB2001:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10053              		.loc 19 174 98 view .LVU2783
 10054 03f6 9FED349A 		vldr.32	s18, .L646+136
 10055              	.LVL625:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10056              		.loc 19 174 98 view .LVU2784
 10057              	.LBE2001:
 10058              	.LBE2018:
 10059              	.LBE2035:
 10060              	.LBE2089:
 10061              	.LBB2090:
 10062              	.LBB2088:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10063              		.loc 10 60 42 view .LVU2785
 10064 03fa C0ED007A 		vstr.32	s15, [r0]
 10065              	.LVL626:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10066              		.loc 10 60 42 view .LVU2786
 10067              	.LBE2088:
 10068              	.LBE2090:
 400:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 10069              		.loc 20 400 9 is_stmt 1 view .LVU2787
 10070              	.LBB2091:
 10071              	.LBI2072:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10072              		.loc 10 60 17 view .LVU2788
 10073              	.LBB2075:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10074              		.loc 10 60 37 view .LVU2789
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10075              		.loc 10 60 37 is_stmt 0 view .LVU2790
 10076              	.LBE2075:
 10077              	.LBE2091:
 401:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 10078              		.loc 20 401 9 is_stmt 1 view .LVU2791
 10079              	.LBB2092:
 10080              	.LBI2078:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10081              		.loc 10 60 17 view .LVU2792
 10082              	.LBB2081:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10083              		.loc 10 60 37 view .LVU2793
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10084              		.loc 10 60 37 is_stmt 0 view .LVU2794
 10085              	.LBE2081:
 10086              	.LBE2092:
 402:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 10087              		.loc 20 402 9 is_stmt 1 view .LVU2795
 10088              	.LBB2093:
 10089              	.LBI2093:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 320


 10090              		.loc 10 60 17 view .LVU2796
 10091              	.LBB2094:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10092              		.loc 10 60 37 view .LVU2797
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10093              		.loc 10 60 42 is_stmt 0 view .LVU2798
 10094 03fe 3348     		ldr	r0, .L646+140
 10095              	.LBE2094:
 10096              	.LBE2093:
 10097              	.LBB2096:
 10098              	.LBB2036:
 10099              	.LBB2019:
 10100              	.LBB2002:
 162:delayline_reverse.h **** 
 10101              		.loc 19 162 23 view .LVU2799
 10102 0400 D5E90267 		ldrd	r6, r7, [r5, #8]
 10103              	.LBE2002:
 10104              	.LBE2019:
 10105              	.LBE2036:
 10106              	.LBE2096:
 10107              	.LBB2097:
 10108              	.LBB2095:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10109              		.loc 10 60 42 view .LVU2800
 10110 0404 C0ED007A 		vstr.32	s15, [r0]
 10111              	.LVL627:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10112              		.loc 10 60 42 view .LVU2801
 10113              	.LBE2095:
 10114              	.LBE2097:
 403:Veno-Echo.cpp **** 
 10115              		.loc 20 403 9 is_stmt 1 view .LVU2802
 10116              	.LBB2098:
 10117              	.LBI2098:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10118              		.loc 10 60 17 view .LVU2803
 10119              	.LBB2099:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10120              		.loc 10 60 37 view .LVU2804
 10121              	.LBE2099:
 10122              	.LBE2098:
 10123              	.LBB2102:
 10124              	.LBB2037:
 10125              	.LBB2020:
 10126              	.LBB2003:
 162:delayline_reverse.h **** 
 10127              		.loc 19 162 11 is_stmt 0 view .LVU2805
 10128 0408 05EB8702 		add	r2, r5, r7, lsl #2
 10129              	.LBE2003:
 10130              	.LBE2020:
 10131              	.LBE2037:
 10132              	.LBE2102:
 10133              	.LBB2103:
 10134              	.LBB2100:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10135              		.loc 10 60 42 view .LVU2806
 10136 040c 3048     		ldr	r0, .L646+144
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 321


 10137              	.LBE2100:
 10138              	.LBE2103:
 10139              	.LBB2104:
 10140              	.LBB2038:
 10141              	.LBB2021:
 10142              	.LBB2004:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10143              		.loc 19 161 11 view .LVU2807
 10144 040e 05EB8601 		add	r1, r5, r6, lsl #2
 162:delayline_reverse.h **** 
 10145              		.loc 19 162 11 view .LVU2808
 10146 0412 D2ED06DA 		vldr.32	s27, [r2, #24]
 10147              	.LBE2004:
 10148              	.LBE2021:
 10149              	.LBE2038:
 10150              	.LBE2104:
 10151              	.LBB2105:
 10152              	.LBB2106:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10153              		.loc 10 60 42 view .LVU2809
 10154 0416 2F4A     		ldr	r2, .L646+148
 10155              	.LBE2106:
 10156              	.LBE2105:
 10157              	.LBB2108:
 10158              	.LBB2101:
 10159 0418 C0ED007A 		vstr.32	s15, [r0]
 10160              	.LVL628:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10161              		.loc 10 60 42 view .LVU2810
 10162              	.LBE2101:
 10163              	.LBE2108:
 405:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 10164              		.loc 20 405 9 is_stmt 1 view .LVU2811
 10165              	.LBB2109:
 10166              	.LBI2105:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10167              		.loc 10 60 17 view .LVU2812
 10168              	.LBB2107:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10169              		.loc 10 60 37 view .LVU2813
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10170              		.loc 10 60 42 is_stmt 0 view .LVU2814
 10171 041c 1360     		str	r3, [r2]	@ float
 10172              	.LVL629:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10173              		.loc 10 60 42 view .LVU2815
 10174              	.LBE2107:
 10175              	.LBE2109:
 406:Veno-Echo.cpp **** 
 10176              		.loc 20 406 9 is_stmt 1 view .LVU2816
 10177              	.LBB2110:
 10178              	.LBI2110:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10179              		.loc 10 60 17 view .LVU2817
 10180              	.LBB2111:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10181              		.loc 10 60 37 view .LVU2818
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 322


  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10182              		.loc 10 60 42 is_stmt 0 view .LVU2819
 10183 041e 2E4A     		ldr	r2, .L646+152
 10184              	.LBE2111:
 10185              	.LBE2110:
 10186              	.LBB2113:
 10187              	.LBB2039:
 10188              	.LBB2022:
 10189              	.LBB2005:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10190              		.loc 19 161 11 view .LVU2820
 10191 0420 91ED06EA 		vldr.32	s28, [r1, #24]
 10192              	.LBE2005:
 10193              	.LBE2022:
 10194              	.LBE2039:
 10195              	.LBE2113:
 10196              	.LBB2114:
 10197              	.LBB2112:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10198              		.loc 10 60 42 view .LVU2821
 10199 0424 1360     		str	r3, [r2]	@ float
 10200              	.LVL630:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10201              		.loc 10 60 42 view .LVU2822
 10202              	.LBE2112:
 10203              	.LBE2114:
 408:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 10204              		.loc 20 408 9 is_stmt 1 view .LVU2823
 10205              	.LBB2115:
 10206              	.LBI2115:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10207              		.loc 10 60 17 view .LVU2824
 10208              	.LBB2116:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10209              		.loc 10 60 37 view .LVU2825
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10210              		.loc 10 60 42 is_stmt 0 view .LVU2826
 10211 0426 2D4A     		ldr	r2, .L646+156
 10212 0428 1360     		str	r3, [r2]	@ float
 10213              	.LVL631:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10214              		.loc 10 60 42 view .LVU2827
 10215              	.LBE2116:
 10216              	.LBE2115:
 409:Veno-Echo.cpp **** 
 10217              		.loc 20 409 9 is_stmt 1 view .LVU2828
 10218              	.LBB2117:
 10219              	.LBI2117:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10220              		.loc 10 60 17 view .LVU2829
 10221              	.LBB2118:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10222              		.loc 10 60 37 view .LVU2830
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10223              		.loc 10 60 42 is_stmt 0 view .LVU2831
 10224 042a 2D4A     		ldr	r2, .L646+160
 10225 042c 1360     		str	r3, [r2]	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 323


 10226              	.LVL632:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10227              		.loc 10 60 42 view .LVU2832
 10228              	.LBE2118:
 10229              	.LBE2117:
 412:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 10230              		.loc 20 412 9 is_stmt 1 view .LVU2833
 10231              	.LBB2119:
 10232              	.LBI1991:
  79:Veno-Echo.cpp ****     {
 10233              		.loc 20 79 11 view .LVU2834
 10234              	.LBB2040:
  82:Veno-Echo.cpp ****         return read;
 10235              		.loc 20 82 9 view .LVU2835
 10236              	.LBB2023:
 10237              	.LBI1993:
 159:delayline_reverse.h ****     {
 10238              		.loc 19 159 20 view .LVU2836
 10239              	.LBB2006:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10240              		.loc 19 174 46 is_stmt 0 view .LVU2837
 10241 042e FFF7FEFF 		bl	sinf
 10242              	.LVL633:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10243              		.loc 19 174 46 view .LVU2838
 10244 0432 F0EE40BA 		vmov.f32	s23, s0
 10245              	.LVL634:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10246              		.loc 19 174 103 view .LVU2839
 10247 0436 2BEE290A 		vmul.f32	s0, s22, s19
 10248 043a FFF7FEFF 		bl	sinf
 10249              	.LVL635:
 10250 043e 53E0     		b	.L647
 10251              	.L648:
 10252              		.align	2
 10253              	.L646:
 10254 0440 00000000 		.word	.LANCHOR83
 10255 0444 00000000 		.word	.LANCHOR32
 10256 0448 00000000 		.word	.LANCHOR130
 10257 044c 00000000 		.word	.LANCHOR44
 10258 0450 CDCCCC3E 		.word	1053609165
 10259 0454 00000000 		.word	.LANCHOR131
 10260 0458 00000000 		.word	.LANCHOR72
 10261 045c 00000000 		.word	.LANCHOR108
 10262 0460 00000000 		.word	.LANCHOR0
 10263 0464 00000000 		.word	.LANCHOR109
 10264 0468 00000000 		.word	.LANCHOR1
 10265 046c 00000000 		.word	.LANCHOR65
 10266 0470 00000000 		.word	.LANCHOR56
 10267 0474 00000000 		.word	.LANCHOR115
 10268 0478 00000000 		.word	.LANCHOR94
 10269 047c 00000000 		.word	.LANCHOR102
 10270 0480 00000000 		.word	.LANCHOR95
 10271 0484 00000000 		.word	.LANCHOR103
 10272 0488 00000000 		.word	.LANCHOR97
 10273 048c 00000000 		.word	.LANCHOR105
 10274 0490 00000000 		.word	.LANCHOR96
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 324


 10275 0494 00000000 		.word	.LANCHOR104
 10276 0498 00000000 		.word	.LANCHOR106
 10277 049c 00000000 		.word	.LANCHOR2
 10278 04a0 00000000 		.word	.LANCHOR107
 10279 04a4 00000000 		.word	.LANCHOR118
 10280 04a8 DB0FC93F 		.word	1070141403
 10281 04ac 00000000 		.word	.LANCHOR119
 10282 04b0 00000000 		.word	.LANCHOR122
 10283 04b4 00000000 		.word	.LANCHOR80
 10284 04b8 00000000 		.word	.LANCHOR123
 10285 04bc 00000000 		.word	.LANCHOR120
 10286 04c0 E4CB9640 		.word	1083624420
 10287 04c4 00000000 		.word	.LANCHOR121
 10288 04c8 0000803D 		.word	1031798784
 10289 04cc 00000000 		.word	.LANCHOR124
 10290 04d0 00000000 		.word	.LANCHOR125
 10291 04d4 00000000 		.word	.LANCHOR126
 10292 04d8 00000000 		.word	.LANCHOR127
 10293 04dc 00000000 		.word	.LANCHOR128
 10294 04e0 00000000 		.word	.LANCHOR129
 10295 04e4 209F2400 		.word	2400032
 10296              	.L647:
 10297 04e8 B0EE408A 		vmov.f32	s16, s0
 10298              	.LVL636:
 10299              		.loc 19 175 46 view .LVU2840
 10300 04ec 2CEE0A0A 		vmul.f32	s0, s24, s20
 10301 04f0 FFF7FEFF 		bl	sinf
 10302              	.LVL637:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10303              		.loc 19 174 98 view .LVU2841
 10304 04f4 28EE098A 		vmul.f32	s16, s16, s18
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10305              		.loc 19 174 82 view .LVU2842
 10306 04f8 ABEEA88A 		vfma.f32	s16, s23, s17
 10307              	.LVL638:
 10308              		.loc 19 175 46 view .LVU2843
 10309 04fc F0EE40BA 		vmov.f32	s23, s0
 10310              		.loc 19 175 112 view .LVU2844
 10311 0500 2CEE290A 		vmul.f32	s0, s24, s19
 10312 0504 FFF7FEFF 		bl	sinf
 10313              	.LVL639:
 10314              		.loc 19 175 107 view .LVU2845
 10315 0508 60EE097A 		vmul.f32	s15, s0, s18
 10316              	.LBE2006:
 10317              	.LBE2023:
 10318              	.LBE2040:
 10319              	.LBE2119:
 413:Veno-Echo.cpp **** 
 10320              		.loc 20 413 49 view .LVU2846
 10321 050c C94B     		ldr	r3, .L649
 10322              	.LBB2120:
 10323              	.LBB2041:
 10324              	.LBB2024:
 10325              	.LBB2007:
 10326              		.loc 19 175 91 view .LVU2847
 10327 050e EBEEA87A 		vfma.f32	s15, s23, s17
 10328              	.LVL640:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 325


 10329              		.loc 19 175 91 view .LVU2848
 10330              	.LBE2007:
 10331              	.LBE2024:
 10332              	.LBE2041:
 10333              	.LBE2120:
 413:Veno-Echo.cpp **** 
 10334              		.loc 20 413 49 view .LVU2849
 10335 0512 1C68     		ldr	r4, [r3]
 10336              	.LBB2121:
 10337              	.LBB2042:
 10338              	.LBB2025:
 10339              	.LBB2008:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10340              		.loc 19 174 9 view .LVU2850
 10341 0514 38EE088A 		vadd.f32	s16, s16, s16
 10342              	.LVL641:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10343              		.loc 19 174 9 view .LVU2851
 10344              	.LBE2008:
 10345              	.LBE2025:
 10346              	.LBE2042:
 10347              	.LBE2121:
 10348              	.LBB2122:
 10349              	.LBB2123:
 10350              	.LBB2124:
 10351              	.LBB2125:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10352              		.loc 19 174 71 view .LVU2852
 10353 0518 04EB0A01 		add	r1, r4, r10
 162:delayline_reverse.h **** 
 10354              		.loc 19 162 11 view .LVU2853
 10355 051c D4E90223 		ldrd	r2, r3, [r4, #8]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10356              		.loc 19 174 71 view .LVU2854
 10357 0520 91ED00CA 		vldr.32	s24, [r1]
 10358              	.LBE2125:
 10359              	.LBE2124:
 10360              	.LBE2123:
 10361              	.LBE2122:
 10362              	.LBB2156:
 10363              	.LBB2043:
 10364              	.LBB2026:
 10365              	.LBB2009:
 10366              		.loc 19 175 9 view .LVU2855
 10367 0524 77EEA77A 		vadd.f32	s15, s15, s15
 10368              	.LVL642:
 10369              		.loc 19 175 9 view .LVU2856
 10370              	.LBE2009:
 10371              	.LBE2026:
 10372              	.LBE2043:
 10373              	.LBE2156:
 10374              	.LBB2157:
 10375              	.LBB2146:
 10376              	.LBB2136:
 10377              	.LBB2126:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10378              		.loc 19 161 11 view .LVU2857
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 326


 10379 0528 04EB8202 		add	r2, r4, r2, lsl #2
 162:delayline_reverse.h **** 
 10380              		.loc 19 162 11 view .LVU2858
 10381 052c 04EB8303 		add	r3, r4, r3, lsl #2
 10382              		.loc 19 175 77 view .LVU2859
 10383 0530 7AEECCAA 		vsub.f32	s21, s21, s24
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10384              		.loc 19 174 46 view .LVU2860
 10385 0534 2CEE0A0A 		vmul.f32	s0, s24, s20
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10386              		.loc 19 161 11 view .LVU2861
 10387 0538 92ED06DA 		vldr.32	s26, [r2, #24]
 10388              	.LBE2126:
 10389              	.LBE2136:
 10390              	.LBE2146:
 10391              	.LBE2157:
 10392              	.LBB2158:
 10393              	.LBB2044:
 10394              	.LBB2027:
 10395              	.LBB2010:
 176:delayline_reverse.h **** 
 177:delayline_reverse.h ****         return (read2 * scalar_1) + (read1 * scalar_2); 
 10396              		.loc 19 177 44 view .LVU2862
 10397 053c 67EE8E7A 		vmul.f32	s15, s15, s28
 10398              	.LVL643:
 10399              		.loc 19 177 44 view .LVU2863
 10400              	.LBE2010:
 10401              	.LBE2027:
 10402              	.LBE2044:
 10403              	.LBE2158:
 10404              	.LBB2159:
 10405              	.LBB2147:
 10406              	.LBB2137:
 10407              	.LBB2127:
 162:delayline_reverse.h **** 
 10408              		.loc 19 162 11 view .LVU2864
 10409 0540 D3ED06CA 		vldr.32	s25, [r3, #24]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10410              		.loc 19 174 71 view .LVU2865
 10411 0544 0391     		str	r1, [sp, #12]
 10412              	.LBE2127:
 10413              	.LBE2137:
 10414              	.LBE2147:
 10415              	.LBE2159:
 10416              	.LBB2160:
 10417              	.LBB2045:
 10418              	.LBB2028:
 10419              	.LBB2011:
 10420              		.loc 19 177 54 view .LVU2866
 10421 0546 EDEE887A 		vfma.f32	s15, s27, s16
 10422              	.LVL644:
 10423              		.loc 19 177 54 view .LVU2867
 10424              	.LBE2011:
 10425              	.LBE2028:
  83:Veno-Echo.cpp ****     }
 10426              		.loc 20 83 9 is_stmt 1 view .LVU2868
  83:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 327


 10427              		.loc 20 83 9 is_stmt 0 view .LVU2869
 10428              	.LBE2045:
 10429              	.LBE2160:
 412:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 10430              		.loc 20 412 50 view .LVU2870
 10431 054a CDED067A 		vstr.32	s15, [sp, #24]
 413:Veno-Echo.cpp **** 
 10432              		.loc 20 413 9 is_stmt 1 view .LVU2871
 10433              	.LVL645:
 10434              	.LBB2161:
 10435              	.LBI2122:
  79:Veno-Echo.cpp ****     {
 10436              		.loc 20 79 11 view .LVU2872
 10437              	.LBB2148:
  82:Veno-Echo.cpp ****         return read;
 10438              		.loc 20 82 9 view .LVU2873
 10439              	.LBB2138:
 10440              	.LBI2124:
 159:delayline_reverse.h ****     {
 10441              		.loc 19 159 20 view .LVU2874
 10442              	.LBB2128:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10443              		.loc 19 174 46 is_stmt 0 view .LVU2875
 10444 054e FFF7FEFF 		bl	sinf
 10445              	.LVL646:
 10446 0552 F0EE40BA 		vmov.f32	s23, s0
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10447              		.loc 19 174 103 view .LVU2876
 10448 0556 2CEE290A 		vmul.f32	s0, s24, s19
 10449 055a FFF7FEFF 		bl	sinf
 10450              	.LVL647:
 10451 055e B0EE408A 		vmov.f32	s16, s0
 175:delayline_reverse.h **** 
 10452              		.loc 19 175 46 view .LVU2877
 10453 0562 2AEE8A0A 		vmul.f32	s0, s21, s20
 10454 0566 FFF7FEFF 		bl	sinf
 10455              	.LVL648:
 10456 056a F0EE407A 		vmov.f32	s15, s0
 175:delayline_reverse.h **** 
 10457              		.loc 19 175 112 view .LVU2878
 10458 056e 2AEEA90A 		vmul.f32	s0, s21, s19
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10459              		.loc 19 174 98 view .LVU2879
 10460 0572 28EE098A 		vmul.f32	s16, s16, s18
 175:delayline_reverse.h **** 
 10461              		.loc 19 175 46 view .LVU2880
 10462 0576 F0EE679A 		vmov.f32	s19, s15
 175:delayline_reverse.h **** 
 10463              		.loc 19 175 112 view .LVU2881
 10464 057a FFF7FEFF 		bl	sinf
 10465              	.LVL649:
 10466              	.LBE2128:
 10467              	.LBE2138:
 10468              	.LBE2148:
 10469              	.LBE2161:
 10470              	.LBB2162:
 10471              	.LBB2163:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 328


 10472              	.LBB2164:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10473              		.loc 19 98 38 view .LVU2882
 10474 057e AE48     		ldr	r0, .L649+4
 10475              	.LBE2164:
 10476              	.LBE2163:
 10477              	.LBE2162:
 10478              	.LBB2187:
 10479              	.LBB2149:
 10480              	.LBB2139:
 10481              	.LBB2129:
 175:delayline_reverse.h **** 
 10482              		.loc 19 175 107 view .LVU2883
 10483 0580 60EE097A 		vmul.f32	s15, s0, s18
 10484              	.LBE2129:
 10485              	.LBE2139:
 10486              	.LBE2149:
 10487              	.LBE2187:
 10488              	.LBB2188:
 10489              	.LBB2176:
 10490              	.LBB2165:
  92:delayline_reverse.h ****         
 10491              		.loc 19 92 57 view .LVU2884
 10492 0584 AD4B     		ldr	r3, .L649+8
 10493              	.LBE2165:
 10494              	.LBE2176:
 10495              	.LBE2188:
 10496              	.LBB2189:
 10497              	.LBB2150:
 10498              	.LBB2140:
 10499              	.LBB2130:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10500              		.loc 19 174 82 view .LVU2885
 10501 0586 ABEEA88A 		vfma.f32	s16, s23, s17
 10502              	.LVL650:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10503              		.loc 19 174 82 view .LVU2886
 10504              	.LBE2130:
 10505              	.LBE2140:
 10506              	.LBE2150:
 10507              	.LBE2189:
 10508              	.LBB2190:
 10509              	.LBB2177:
 10510              	.LBB2166:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10511              		.loc 19 98 38 view .LVU2887
 10512 058a 0644     		add	r6, r6, r0
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10513              		.loc 19 90 15 view .LVU2888
 10514 058c D5F804E0 		ldr	lr, [r5, #4]
 10515              	.LBE2166:
 10516              	.LBE2177:
 10517              	.LBE2190:
 10518              	.LBB2191:
 10519              	.LBB2151:
 10520              	.LBB2141:
 10521              	.LBB2131:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 329


 175:delayline_reverse.h **** 
 10522              		.loc 19 175 91 view .LVU2889
 10523 0590 E9EEA87A 		vfma.f32	s15, s19, s17
 10524              	.LVL651:
 175:delayline_reverse.h **** 
 10525              		.loc 19 175 91 view .LVU2890
 10526              	.LBE2131:
 10527              	.LBE2141:
 10528              	.LBE2151:
 10529              	.LBE2191:
 10530              	.LBB2192:
 10531              	.LBB2178:
 10532              	.LBB2167:
  99:delayline_reverse.h ****  
 10533              		.loc 19 99 38 view .LVU2891
 10534 0594 3844     		add	r0, r0, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10535              		.loc 19 98 50 view .LVU2892
 10536 0596 A3FB06C1 		umull	ip, r1, r3, r6
  92:delayline_reverse.h ****         
 10537              		.loc 19 92 57 view .LVU2893
 10538 059a DFF8C4C2 		ldr	ip, .L649+44
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10539              		.loc 19 90 9 view .LVU2894
 10540 059e 05EB8E0A 		add	r10, r5, lr, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10541              		.loc 19 98 50 view .LVU2895
 10542 05a2 890C     		lsrs	r1, r1, #18
 10543              	.LBE2167:
 10544              	.LBE2178:
 10545              	.LBE2192:
 10546              	.LBB2193:
 10547              	.LBB2152:
 10548              	.LBB2142:
 10549              	.LBB2132:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10550              		.loc 19 174 9 view .LVU2896
 10551 05a4 38EE088A 		vadd.f32	s16, s16, s16
 10552              	.LVL652:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10553              		.loc 19 174 9 view .LVU2897
 10554              	.LBE2132:
 10555              	.LBE2142:
 10556              	.LBE2152:
 10557              	.LBE2193:
 10558              	.LBB2194:
 10559              	.LBB2179:
 10560              	.LBB2168:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10561              		.loc 19 98 50 view .LVU2898
 10562 05a8 0CFB1161 		mls	r1, ip, r1, r6
  92:delayline_reverse.h ****         
 10563              		.loc 19 92 45 view .LVU2899
 10564 05ac A44E     		ldr	r6, .L649+12
 10565              	.LBE2168:
 10566              	.LBE2179:
 10567              	.LBE2194:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 330


 10568              	.LBB2195:
 10569              	.LBB2153:
 10570              	.LBB2143:
 10571              	.LBB2133:
 175:delayline_reverse.h **** 
 10572              		.loc 19 175 9 view .LVU2900
 10573 05ae 37EEA70A 		vadd.f32	s0, s15, s15
 10574              	.LVL653:
 175:delayline_reverse.h **** 
 10575              		.loc 19 175 9 view .LVU2901
 10576              	.LBE2133:
 10577              	.LBE2143:
 10578              	.LBE2153:
 10579              	.LBE2195:
 416:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 10580              		.loc 20 416 26 view .LVU2902
 10581 05b2 DBED007A 		vldr.32	s15, [fp]
 10582              	.LBB2196:
 10583              	.LBB2180:
 10584              	.LBB2169:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10585              		.loc 19 98 50 view .LVU2903
 10586 05b6 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 10587              		.loc 19 92 45 view .LVU2904
 10588 05b8 7644     		add	r6, r6, lr
  99:delayline_reverse.h ****  
 10589              		.loc 19 99 50 view .LVU2905
 10590 05ba A3FB001E 		umull	r1, lr, r3, r0
  92:delayline_reverse.h ****         
 10591              		.loc 19 92 57 view .LVU2906
 10592 05be A3FB0613 		umull	r1, r3, r3, r6
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10593              		.loc 19 98 9 view .LVU2907
 10594 05c2 0199     		ldr	r1, [sp, #4]
  99:delayline_reverse.h ****  
 10595              		.loc 19 99 50 view .LVU2908
 10596 05c4 4FEA9E4E 		lsr	lr, lr, #18
 10597              	.LBE2169:
 10598              	.LBE2180:
 10599              	.LBE2196:
 10600              	.LBB2197:
 10601              	.LBB2154:
 10602              	.LBB2144:
 10603              	.LBB2134:
 10604              		.loc 19 177 44 view .LVU2909
 10605 05c8 20EE0D0A 		vmul.f32	s0, s0, s26
 10606              	.LVL654:
 10607              		.loc 19 177 44 view .LVU2910
 10608              	.LBE2134:
 10609              	.LBE2144:
 10610              	.LBE2154:
 10611              	.LBE2197:
 10612              	.LBB2198:
 10613              	.LBB2181:
 10614              	.LBB2170:
  92:delayline_reverse.h ****         
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 331


 10615              		.loc 19 92 57 view .LVU2911
 10616 05cc 9B0C     		lsrs	r3, r3, #18
  99:delayline_reverse.h ****  
 10617              		.loc 19 99 50 view .LVU2912
 10618 05ce 0CFB1E00 		mls	r0, ip, lr, r0
 10619              	.LBE2170:
 10620              	.LBE2181:
 10621              	.LBE2198:
 10622              	.LBB2199:
 10623              	.LBB2155:
 10624              	.LBB2145:
 10625              	.LBB2135:
 10626              		.loc 19 177 54 view .LVU2913
 10627 05d2 ACEE880A 		vfma.f32	s0, s25, s16
 10628              	.LVL655:
 10629              		.loc 19 177 54 view .LVU2914
 10630              	.LBE2135:
 10631              	.LBE2145:
  83:Veno-Echo.cpp ****     }
 10632              		.loc 20 83 9 is_stmt 1 view .LVU2915
  83:Veno-Echo.cpp ****     }
 10633              		.loc 20 83 9 is_stmt 0 view .LVU2916
 10634              	.LBE2155:
 10635              	.LBE2199:
 10636              	.LBB2200:
 10637              	.LBB2182:
 10638              	.LBB2171:
  92:delayline_reverse.h ****         
 10639              		.loc 19 92 57 view .LVU2917
 10640 05d6 0CFB1363 		mls	r3, ip, r3, r6
  95:delayline_reverse.h **** 
 10641              		.loc 19 95 43 view .LVU2918
 10642 05da D5E90472 		ldrd	r7, r2, [r5, #16]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10643              		.loc 19 90 9 view .LVU2919
 10644 05de CAED067A 		vstr.32	s15, [r10, #24]
  95:delayline_reverse.h **** 
 10645              		.loc 19 95 43 view .LVU2920
 10646 05e2 3A44     		add	r2, r2, r7
 101:delayline_reverse.h ****         {
 10647              		.loc 19 101 36 view .LVU2921
 10648 05e4 DFF864A2 		ldr	r10, .L649+24
  95:delayline_reverse.h **** 
 10649              		.loc 19 95 43 view .LVU2922
 10650 05e8 0132     		adds	r2, r2, #1
 101:delayline_reverse.h ****         {
 10651              		.loc 19 101 36 view .LVU2923
 10652 05ea 55F80AE0 		ldr	lr, [r5, r10]
 101:delayline_reverse.h ****         {
 10653              		.loc 19 101 45 view .LVU2924
 10654 05ee 07F1FF3A 		add	r10, r7, #-1
 10655              	.LBE2171:
 10656              	.LBE2182:
 10657              	.LBE2200:
 413:Veno-Echo.cpp **** 
 10658              		.loc 20 413 50 view .LVU2925
 10659 05f2 8DED070A 		vstr.32	s0, [sp, #28]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 332


 416:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 10660              		.loc 20 416 9 is_stmt 1 view .LVU2926
 10661              	.LVL656:
 10662              	.LBB2201:
 10663              	.LBI2162:
  92:Veno-Echo.cpp ****     {
 10664              		.loc 20 92 10 view .LVU2927
  92:Veno-Echo.cpp ****     {
 10665              		.loc 20 92 10 is_stmt 0 view .LVU2928
 10666              	.LBE2201:
 10667              	.LBE2251:
 10668              	.LBE1871:
  94:Veno-Echo.cpp ****     }
 10669              		.loc 20 94 9 is_stmt 1 view .LVU2929
 10670              	.LBB2263:
 10671              	.LBB2252:
 10672              	.LBB2202:
 10673              	.LBB2183:
 10674              	.LBI2163:
  88:delayline_reverse.h ****     {
 10675              		.loc 19 88 17 view .LVU2930
 10676              	.LBB2172:
  99:delayline_reverse.h ****  
 10677              		.loc 19 99 9 is_stmt 0 view .LVU2931
 10678 05f6 C5E90210 		strd	r1, r0, [r5, #8]
  95:delayline_reverse.h **** 
 10679              		.loc 19 95 54 view .LVU2932
 10680 05fa B2FBF7F1 		udiv	r1, r2, r7
 101:delayline_reverse.h ****         {
 10681              		.loc 19 101 45 view .LVU2933
 10682 05fe AAEB0E0A 		sub	r10, r10, lr
  95:delayline_reverse.h **** 
 10683              		.loc 19 95 54 view .LVU2934
 10684 0602 07FB1122 		mls	r2, r7, r1, r2
  92:delayline_reverse.h ****         
 10685              		.loc 19 92 9 view .LVU2935
 10686 0606 6B60     		str	r3, [r5, #4]
 101:delayline_reverse.h ****         {
 10687              		.loc 19 101 9 view .LVU2936
 10688 0608 5245     		cmp	r2, r10
  95:delayline_reverse.h **** 
 10689              		.loc 19 95 9 view .LVU2937
 10690 060a 6A61     		str	r2, [r5, #20]
 101:delayline_reverse.h ****         {
 10691              		.loc 19 101 9 view .LVU2938
 10692 060c 40F2DA80 		bls	.L522
 103:delayline_reverse.h ****             {
 10693              		.loc 19 103 17 view .LVU2939
 10694 0610 8C49     		ldr	r1, .L649+16
 103:delayline_reverse.h ****             {
 10695              		.loc 19 103 13 view .LVU2940
 10696 0612 685C     		ldrb	r0, [r5, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 10697              		.loc 19 103 17 view .LVU2941
 10698 0614 6A18     		adds	r2, r5, r1
 103:delayline_reverse.h ****             {
 10699              		.loc 19 103 13 view .LVU2942
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 333


 10700 0616 0028     		cmp	r0, #0
 10701 0618 40F0DA80 		bne	.L637
 107:delayline_reverse.h ****                 {
 10702              		.loc 19 107 21 view .LVU2943
 10703 061c 8A48     		ldr	r0, .L649+20
 105:delayline_reverse.h ****                 
 10704              		.loc 19 105 17 view .LVU2944
 10705 061e 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 10706              		.loc 19 110 45 view .LVU2945
 10707 0620 013B     		subs	r3, r3, #1
 107:delayline_reverse.h ****                 {
 10708              		.loc 19 107 17 view .LVU2946
 10709 0622 2E5C     		ldrb	r6, [r5, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 10710              		.loc 19 107 21 view .LVU2947
 10711 0624 2844     		add	r0, r0, r5
 105:delayline_reverse.h ****                 
 10712              		.loc 19 105 17 view .LVU2948
 10713 0626 6F54     		strb	r7, [r5, r1]
 107:delayline_reverse.h ****                 {
 10714              		.loc 19 107 17 view .LVU2949
 10715 0628 002E     		cmp	r6, #0
 10716 062a 40F07782 		bne	.L524
 110:delayline_reverse.h ****                 }
 10717              		.loc 19 110 21 view .LVU2950
 10718 062e EB60     		str	r3, [r5, #12]
 10719              	.L525:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10720              		.loc 19 130 45 view .LVU2951
 10721 0630 07EE90EA 		vmov	s15, lr	@ int
 10722              	.LVL657:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10723              		.loc 19 130 45 view .LVU2952
 10724 0634 B7EE007A 		vmov.f32	s14, #1.0e+0
 10725 0638 F8EE676A 		vcvt.f32.u32	s13, s15
 10726 063c C7EE267A 		vdiv.f32	s15, s14, s13
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10727              		.loc 19 130 37 view .LVU2953
 10728 0640 37EE8BBA 		vadd.f32	s22, s15, s22
 131:delayline_reverse.h ****                 {
 10729              		.loc 19 131 17 view .LVU2954
 10730 0644 B4EEC7BA 		vcmpe.f32	s22, s14
 10731 0648 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10732 064c 40F3D780 		ble	.L638
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10733              		.loc 19 133 21 view .LVU2955
 10734 0650 049B     		ldr	r3, [sp, #16]
 134:delayline_reverse.h ****                     playinghead_ = true;
 10735              		.loc 19 134 21 view .LVU2956
 10736 0652 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10737              		.loc 19 133 21 view .LVU2957
 10738 0654 83ED007A 		vstr.32	s14, [r3]
 135:delayline_reverse.h ****                 }
 10739              		.loc 19 135 21 view .LVU2958
 10740 0658 0123     		movs	r3, #1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 334


 134:delayline_reverse.h ****                     playinghead_ = true;
 10741              		.loc 19 134 21 view .LVU2959
 10742 065a 1170     		strb	r1, [r2]
 135:delayline_reverse.h ****                 }
 10743              		.loc 19 135 21 view .LVU2960
 10744 065c 0370     		strb	r3, [r0]
 10745              	.LVL658:
 10746              	.L528:
 135:delayline_reverse.h ****                 }
 10747              		.loc 19 135 21 view .LVU2961
 10748              	.LBE2172:
 10749              	.LBE2183:
 10750              	.LBE2202:
 417:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 10751              		.loc 20 417 9 is_stmt 1 view .LVU2962
 10752              	.LBB2203:
 10753              	.LBB2204:
 10754              	.LBB2205:
  95:delayline_reverse.h **** 
 10755              		.loc 19 95 45 is_stmt 0 view .LVU2963
 10756 065e 2169     		ldr	r1, [r4, #16]
 10757 0660 0BF10403 		add	r3, fp, #4
  95:delayline_reverse.h **** 
 10758              		.loc 19 95 43 view .LVU2964
 10759 0664 6069     		ldr	r0, [r4, #20]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10760              		.loc 19 90 15 view .LVU2965
 10761 0666 6568     		ldr	r5, [r4, #4]
 10762 0668 08EE103A 		vmov	s16, r3	@ int
  95:delayline_reverse.h **** 
 10763              		.loc 19 95 43 view .LVU2966
 10764 066c 0844     		add	r0, r0, r1
  92:delayline_reverse.h ****         
 10765              		.loc 19 92 45 view .LVU2967
 10766 066e 744F     		ldr	r7, .L649+12
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10767              		.loc 19 90 9 view .LVU2968
 10768 0670 04EB850E 		add	lr, r4, r5, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10769              		.loc 19 98 38 view .LVU2969
 10770 0674 704B     		ldr	r3, .L649+4
  95:delayline_reverse.h **** 
 10771              		.loc 19 95 43 view .LVU2970
 10772 0676 421C     		adds	r2, r0, #1
  92:delayline_reverse.h ****         
 10773              		.loc 19 92 45 view .LVU2971
 10774 0678 2F44     		add	r7, r7, r5
 101:delayline_reverse.h ****         {
 10775              		.loc 19 101 45 view .LVU2972
 10776 067a 01F1FF3C 		add	ip, r1, #-1
 10777              	.LBE2205:
 10778              	.LBE2204:
 10779              	.LBE2203:
 417:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 10780              		.loc 20 417 26 view .LVU2973
 10781 067e DBED017A 		vldr.32	s15, [fp, #4]
 10782              	.LVL659:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 335


 10783              	.LBB2216:
 10784              	.LBI2203:
  92:Veno-Echo.cpp ****     {
 10785              		.loc 20 92 10 is_stmt 1 view .LVU2974
  92:Veno-Echo.cpp ****     {
 10786              		.loc 20 92 10 is_stmt 0 view .LVU2975
 10787              	.LBE2216:
 10788              	.LBE2252:
 10789              	.LBE2263:
  94:Veno-Echo.cpp ****     }
 10790              		.loc 20 94 9 is_stmt 1 view .LVU2976
 10791              	.LBB2264:
 10792              	.LBB2253:
 10793              	.LBB2217:
 10794              	.LBB2211:
 10795              	.LBI2204:
  88:delayline_reverse.h ****     {
 10796              		.loc 19 88 17 view .LVU2977
 10797              	.LBB2206:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10798              		.loc 19 98 38 is_stmt 0 view .LVU2978
 10799 0682 D4E90205 		ldrd	r0, r5, [r4, #8]
 10800 0686 00EB030A 		add	r10, r0, r3
  99:delayline_reverse.h ****  
 10801              		.loc 19 99 38 view .LVU2979
 10802 068a 1D44     		add	r5, r5, r3
  92:delayline_reverse.h ****         
 10803              		.loc 19 92 57 view .LVU2980
 10804 068c 03F1E043 		add	r3, r3, #1879048192
  95:delayline_reverse.h **** 
 10805              		.loc 19 95 54 view .LVU2981
 10806 0690 B2FBF1F0 		udiv	r0, r2, r1
 10807 0694 01FB1020 		mls	r0, r1, r0, r2
 101:delayline_reverse.h ****         {
 10808              		.loc 19 101 36 view .LVU2982
 10809 0698 6C49     		ldr	r1, .L649+24
  92:delayline_reverse.h ****         
 10810              		.loc 19 92 57 view .LVU2983
 10811 069a A3F54013 		sub	r3, r3, #3145728
 101:delayline_reverse.h ****         {
 10812              		.loc 19 101 36 view .LVU2984
 10813 069e 6158     		ldr	r1, [r4, r1]
  92:delayline_reverse.h ****         
 10814              		.loc 19 92 57 view .LVU2985
 10815 06a0 A3F63A23 		subw	r3, r3, #2618
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10816              		.loc 19 90 9 view .LVU2986
 10817 06a4 CEED067A 		vstr.32	s15, [lr, #24]
 101:delayline_reverse.h ****         {
 10818              		.loc 19 101 36 view .LVU2987
 10819 06a8 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 10820              		.loc 19 92 57 view .LVU2988
 10821 06aa A3FB0762 		umull	r6, r2, r3, r7
 10822 06ae DFF8B0E1 		ldr	lr, .L649+44
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10823              		.loc 19 98 50 view .LVU2989
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 336


 10824 06b2 A3FB0A61 		umull	r6, r1, r3, r10
  99:delayline_reverse.h ****  
 10825              		.loc 19 99 50 view .LVU2990
 10826 06b6 A3FB0563 		umull	r6, r3, r3, r5
 101:delayline_reverse.h ****         {
 10827              		.loc 19 101 45 view .LVU2991
 10828 06ba 019E     		ldr	r6, [sp, #4]
  92:delayline_reverse.h ****         
 10829              		.loc 19 92 57 view .LVU2992
 10830 06bc 920C     		lsrs	r2, r2, #18
  95:delayline_reverse.h **** 
 10831              		.loc 19 95 9 view .LVU2993
 10832 06be 6061     		str	r0, [r4, #20]
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10833              		.loc 19 98 50 view .LVU2994
 10834 06c0 890C     		lsrs	r1, r1, #18
 101:delayline_reverse.h ****         {
 10835              		.loc 19 101 45 view .LVU2995
 10836 06c2 ACEB060C 		sub	ip, ip, r6
  99:delayline_reverse.h ****  
 10837              		.loc 19 99 50 view .LVU2996
 10838 06c6 9B0C     		lsrs	r3, r3, #18
  92:delayline_reverse.h ****         
 10839              		.loc 19 92 57 view .LVU2997
 10840 06c8 0EFB1272 		mls	r2, lr, r2, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10841              		.loc 19 98 50 view .LVU2998
 10842 06cc 0EFB11A1 		mls	r1, lr, r1, r10
 101:delayline_reverse.h ****         {
 10843              		.loc 19 101 9 view .LVU2999
 10844 06d0 6045     		cmp	r0, ip
  99:delayline_reverse.h ****  
 10845              		.loc 19 99 50 view .LVU3000
 10846 06d2 0EFB1353 		mls	r3, lr, r3, r5
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10847              		.loc 19 98 9 view .LVU3001
 10848 06d6 C4E90121 		strd	r2, r1, [r4, #4]
  99:delayline_reverse.h ****  
 10849              		.loc 19 99 9 view .LVU3002
 10850 06da E360     		str	r3, [r4, #12]
 101:delayline_reverse.h ****         {
 10851              		.loc 19 101 9 view .LVU3003
 10852 06dc 51D9     		bls	.L532
 103:delayline_reverse.h ****             {
 10853              		.loc 19 103 17 view .LVU3004
 10854 06de 5949     		ldr	r1, .L649+16
 103:delayline_reverse.h ****             {
 10855              		.loc 19 103 13 view .LVU3005
 10856 06e0 605C     		ldrb	r0, [r4, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 10857              		.loc 19 103 17 view .LVU3006
 10858 06e2 6318     		adds	r3, r4, r1
 103:delayline_reverse.h ****             {
 10859              		.loc 19 103 13 view .LVU3007
 10860 06e4 0028     		cmp	r0, #0
 10861 06e6 51D1     		bne	.L639
 107:delayline_reverse.h ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 337


 10862              		.loc 19 107 21 view .LVU3008
 10863 06e8 5748     		ldr	r0, .L649+20
 105:delayline_reverse.h ****                 
 10864              		.loc 19 105 17 view .LVU3009
 10865 06ea 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 10866              		.loc 19 110 45 view .LVU3010
 10867 06ec 013A     		subs	r2, r2, #1
 107:delayline_reverse.h ****                 {
 10868              		.loc 19 107 17 view .LVU3011
 10869 06ee 255C     		ldrb	r5, [r4, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 10870              		.loc 19 107 21 view .LVU3012
 10871 06f0 2044     		add	r0, r0, r4
 105:delayline_reverse.h ****                 
 10872              		.loc 19 105 17 view .LVU3013
 10873 06f2 6754     		strb	r7, [r4, r1]
 107:delayline_reverse.h ****                 {
 10874              		.loc 19 107 17 view .LVU3014
 10875 06f4 002D     		cmp	r5, #0
 10876 06f6 40F01382 		bne	.L534
 110:delayline_reverse.h ****                 }
 10877              		.loc 19 110 21 view .LVU3015
 10878 06fa E260     		str	r2, [r4, #12]
 10879              	.L535:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10880              		.loc 19 130 45 view .LVU3016
 10881 06fc DDED017A 		vldr.32	s15, [sp, #4]	@ int
 10882              	.LVL660:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10883              		.loc 19 130 45 view .LVU3017
 10884 0700 B7EE007A 		vmov.f32	s14, #1.0e+0
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10885              		.loc 19 130 37 view .LVU3018
 10886 0704 039A     		ldr	r2, [sp, #12]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10887              		.loc 19 130 45 view .LVU3019
 10888 0706 B8EE676A 		vcvt.f32.u32	s12, s15
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10889              		.loc 19 130 37 view .LVU3020
 10890 070a D2ED006A 		vldr.32	s13, [r2]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10891              		.loc 19 130 45 view .LVU3021
 10892 070e C7EE067A 		vdiv.f32	s15, s14, s12
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10893              		.loc 19 130 37 view .LVU3022
 10894 0712 77EEA67A 		vadd.f32	s15, s15, s13
 131:delayline_reverse.h ****                 {
 10895              		.loc 19 131 17 view .LVU3023
 10896 0716 F4EEC77A 		vcmpe.f32	s15, s14
 10897 071a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10898 071e 40F31282 		ble	.L642
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10899              		.loc 19 133 21 view .LVU3024
 10900 0722 039A     		ldr	r2, [sp, #12]
 134:delayline_reverse.h ****                     playinghead_ = true;
 10901              		.loc 19 134 21 view .LVU3025
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 338


 10902 0724 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10903              		.loc 19 133 21 view .LVU3026
 10904 0726 82ED007A 		vstr.32	s14, [r2]
 135:delayline_reverse.h ****                 }
 10905              		.loc 19 135 21 view .LVU3027
 10906 072a 0122     		movs	r2, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 10907              		.loc 19 134 21 view .LVU3028
 10908 072c 1970     		strb	r1, [r3]
 135:delayline_reverse.h ****                 }
 10909              		.loc 19 135 21 view .LVU3029
 10910 072e 0270     		strb	r2, [r0]
 10911              	.LVL661:
 10912              	.L538:
 135:delayline_reverse.h ****                 }
 10913              		.loc 19 135 21 view .LVU3030
 10914              	.LBE2206:
 10915              	.LBE2211:
 10916              	.LBE2217:
 422:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 10917              		.loc 20 422 9 is_stmt 1 view .LVU3031
 422:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 10918              		.loc 20 422 56 is_stmt 0 view .LVU3032
 10919 0730 06AA     		add	r2, sp, #24
 10920 0732 5946     		mov	r1, fp
 10921 0734 4648     		ldr	r0, .L649+28
 10922 0736 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10923              	.LVL662:
 423:Veno-Echo.cpp **** 
 10924              		.loc 20 423 56 view .LVU3033
 10925 073a 18EE101A 		vmov	r1, s16	@ int
 10926 073e 07AA     		add	r2, sp, #28
 10927 0740 4448     		ldr	r0, .L649+32
 422:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 10928              		.loc 20 422 56 view .LVU3034
 10929 0742 F0EE408A 		vmov.f32	s17, s0
 10930              	.LVL663:
 423:Veno-Echo.cpp **** 
 10931              		.loc 20 423 9 is_stmt 1 view .LVU3035
 423:Veno-Echo.cpp **** 
 10932              		.loc 20 423 56 is_stmt 0 view .LVU3036
 10933 0746 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10934              	.LVL664:
 426:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10935              		.loc 20 426 46 view .LVU3037
 10936 074a 4348     		ldr	r0, .L649+36
 423:Veno-Echo.cpp **** 
 10937              		.loc 20 423 56 view .LVU3038
 10938 074c B0EE408A 		vmov.f32	s16, s0
 10939              	.LVL665:
 426:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10940              		.loc 20 426 9 is_stmt 1 view .LVU3039
 426:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10941              		.loc 20 426 46 is_stmt 0 view .LVU3040
 10942 0750 FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 10943              	.LVL666:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 339


 426:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10944              		.loc 20 426 46 view .LVU3041
 10945 0754 0346     		mov	r3, r0
 427:Veno-Echo.cpp **** 
 10946              		.loc 20 427 46 view .LVU3042
 10947 0756 4148     		ldr	r0, .L649+40
 426:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10948              		.loc 20 426 45 view .LVU3043
 10949 0758 1B68     		ldr	r3, [r3]	@ float
 426:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10950              		.loc 20 426 47 view .LVU3044
 10951 075a 0893     		str	r3, [sp, #32]	@ float
 427:Veno-Echo.cpp **** 
 10952              		.loc 20 427 9 is_stmt 1 view .LVU3045
 427:Veno-Echo.cpp **** 
 10953              		.loc 20 427 46 is_stmt 0 view .LVU3046
 10954 075c FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 10955              	.LVL667:
 427:Veno-Echo.cpp **** 
 10956              		.loc 20 427 45 view .LVU3047
 10957 0760 0368     		ldr	r3, [r0]	@ float
 427:Veno-Echo.cpp **** 
 10958              		.loc 20 427 47 view .LVU3048
 10959 0762 0993     		str	r3, [sp, #36]	@ float
 430:Veno-Echo.cpp **** 
 10960              		.loc 20 430 9 is_stmt 1 view .LVU3049
 430:Veno-Echo.cpp **** 
 10961              		.loc 20 430 28 is_stmt 0 view .LVU3050
 10962 0764 FFF7FEFF 		bl	_Z19Update_BaseTempoLEDv
 10963              	.LVL668:
 433:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 10964              		.loc 20 433 9 is_stmt 1 view .LVU3051
 10965              	.LBB2218:
 10966              	.LBB1875:
1999:Veno-Echo.cpp ****         returnval = limit;
 10967              		.loc 20 1999 5 is_stmt 0 view .LVU3052
 10968 0768 B0EE007A 		vmov.f32	s14, #2.0e+0
 10969              	.LBE1875:
 10970              	.LBE2218:
 433:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 10971              		.loc 20 433 34 view .LVU3053
 10972 076c DDED087A 		vldr.32	s15, [sp, #32]
 10973              	.LVL669:
 10974              	.LBB2219:
 10975              	.LBI1873:
1996:Veno-Echo.cpp **** {
 10976              		.loc 20 1996 7 is_stmt 1 view .LVU3054
 10977              	.LBB1876:
1998:Veno-Echo.cpp ****     if (input > limit)
 10978              		.loc 20 1998 5 view .LVU3055
1999:Veno-Echo.cpp ****         returnval = limit;
 10979              		.loc 20 1999 5 view .LVU3056
 10980 0770 F4EEC77A 		vcmpe.f32	s15, s14
 10981 0774 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10982 0778 7FF792AC 		ble	.L643
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10983              		.loc 20 2000 19 is_stmt 0 view .LVU3057
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 340


 10984 077c F0EE477A 		vmov.f32	s15, s14
 10985              	.LVL670:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10986              		.loc 20 2000 19 view .LVU3058
 10987 0780 97E4     		b	.L542
 10988              	.LVL671:
 10989              	.L532:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10990              		.loc 20 2000 19 view .LVU3059
 10991              	.LBE1876:
 10992              	.LBE2219:
 10993              	.LBB2220:
 10994              	.LBB2212:
 10995              	.LBB2207:
 126:delayline_reverse.h ****         {
 10996              		.loc 19 126 12 view .LVU3060
 10997 0782 304B     		ldr	r3, .L649+16
 126:delayline_reverse.h ****         {
 10998              		.loc 19 126 9 view .LVU3061
 10999 0784 E25C     		ldrb	r2, [r4, r3]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 11000              		.loc 19 126 12 view .LVU3062
 11001 0786 2344     		add	r3, r3, r4
 126:delayline_reverse.h ****         {
 11002              		.loc 19 126 9 view .LVU3063
 11003 0788 002A     		cmp	r2, #0
 11004 078a D1D0     		beq	.L538
 11005              	.L639:
 126:delayline_reverse.h ****         {
 11006              		.loc 19 126 9 view .LVU3064
 11007 078c 2E4A     		ldr	r2, .L649+20
 11008 078e A018     		adds	r0, r4, r2
 11009 0790 A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 11010              		.loc 19 128 13 view .LVU3065
 11011 0792 002A     		cmp	r2, #0
 11012 0794 B2D0     		beq	.L535
 11013              	.L536:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11014              		.loc 19 141 45 view .LVU3066
 11015 0796 DDED017A 		vldr.32	s15, [sp, #4]	@ int
 11016              	.LVL672:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11017              		.loc 19 141 45 view .LVU3067
 11018 079a B7EE006A 		vmov.f32	s12, #1.0e+0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11019              		.loc 19 141 37 view .LVU3068
 11020 079e 0399     		ldr	r1, [sp, #12]
 142:delayline_reverse.h ****                 {
 11021              		.loc 19 142 17 view .LVU3069
 11022 07a0 0022     		movs	r2, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11023              		.loc 19 141 45 view .LVU3070
 11024 07a2 F8EE676A 		vcvt.f32.u32	s13, s15
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11025              		.loc 19 141 37 view .LVU3071
 11026 07a6 D1ED007A 		vldr.32	s15, [r1]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 341


 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11027              		.loc 19 141 45 view .LVU3072
 11028 07aa 86EE267A 		vdiv.f32	s14, s12, s13
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11029              		.loc 19 141 37 view .LVU3073
 11030 07ae 77EEC77A 		vsub.f32	s15, s15, s14
 142:delayline_reverse.h ****                 {
 11031              		.loc 19 142 17 view .LVU3074
 11032 07b2 F5EEC07A 		vcmpe.f32	s15, #0
 11033 07b6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11034 07ba 00F1B881 		bmi	.L541
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11035              		.loc 19 141 17 view .LVU3075
 11036 07be C1ED007A 		vstr.32	s15, [r1]
 11037 07c2 B5E7     		b	.L538
 11038              	.LVL673:
 11039              	.L522:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11040              		.loc 19 141 17 view .LVU3076
 11041              	.LBE2207:
 11042              	.LBE2212:
 11043              	.LBE2220:
 11044              	.LBB2221:
 11045              	.LBB2184:
 11046              	.LBB2173:
 126:delayline_reverse.h ****         {
 11047              		.loc 19 126 12 view .LVU3077
 11048 07c4 1F4A     		ldr	r2, .L649+16
 126:delayline_reverse.h ****         {
 11049              		.loc 19 126 9 view .LVU3078
 11050 07c6 AB5C     		ldrb	r3, [r5, r2]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 11051              		.loc 19 126 12 view .LVU3079
 11052 07c8 2A44     		add	r2, r2, r5
 126:delayline_reverse.h ****         {
 11053              		.loc 19 126 9 view .LVU3080
 11054 07ca 002B     		cmp	r3, #0
 11055 07cc 3FF447AF 		beq	.L528
 11056              	.L637:
 126:delayline_reverse.h ****         {
 11057              		.loc 19 126 9 view .LVU3081
 11058 07d0 1D4B     		ldr	r3, .L649+20
 11059 07d2 E818     		adds	r0, r5, r3
 11060 07d4 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 11061              		.loc 19 128 13 view .LVU3082
 11062 07d6 002B     		cmp	r3, #0
 11063 07d8 3FF42AAF 		beq	.L525
 11064              	.L526:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11065              		.loc 19 141 45 view .LVU3083
 11066 07dc 07EE90EA 		vmov	s15, lr	@ int
 11067              	.LVL674:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11068              		.loc 19 141 45 view .LVU3084
 11069 07e0 F7EE006A 		vmov.f32	s13, #1.0e+0
 142:delayline_reverse.h ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 342


 11070              		.loc 19 142 17 view .LVU3085
 11071 07e4 0023     		movs	r3, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11072              		.loc 19 141 45 view .LVU3086
 11073 07e6 B8EE677A 		vcvt.f32.u32	s14, s15
 11074 07ea C6EE877A 		vdiv.f32	s15, s13, s14
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11075              		.loc 19 141 37 view .LVU3087
 11076 07ee 3BEE67BA 		vsub.f32	s22, s22, s15
 142:delayline_reverse.h ****                 {
 11077              		.loc 19 142 17 view .LVU3088
 11078 07f2 B5EEC0BA 		vcmpe.f32	s22, #0
 11079 07f6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11080 07fa 00F19E81 		bmi	.L531
 11081              	.L638:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11082              		.loc 19 141 17 view .LVU3089
 11083 07fe 049B     		ldr	r3, [sp, #16]
 11084 0800 83ED00BA 		vstr.32	s22, [r3]
 11085 0804 2BE7     		b	.L528
 11086              	.LVL675:
 11087              	.L573:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11088              		.loc 19 141 17 view .LVU3090
 11089              	.LBE2173:
 11090              	.LBE2184:
 11091              	.LBE2221:
 599:Veno-Echo.cpp ****             out[i+1] = mixR;
 11092              		.loc 20 599 13 is_stmt 1 view .LVU3091
 599:Veno-Echo.cpp ****             out[i+1] = mixR;
 11093              		.loc 20 599 20 is_stmt 0 view .LVU3092
 11094 0806 009B     		ldr	r3, [sp]
 11095 0808 C3ED007A 		vstr.32	s15, [r3]
 600:Veno-Echo.cpp ****         }
 11096              		.loc 20 600 13 is_stmt 1 view .LVU3093
 600:Veno-Echo.cpp ****         }
 11097              		.loc 20 600 22 is_stmt 0 view .LVU3094
 11098 080c 83ED010A 		vstr.32	s0, [r3, #4]
 11099 0810 8FE5     		b	.L574
 11100              	.LVL676:
 11101              	.L634:
 580:Veno-Echo.cpp ****         {
 11102              		.loc 20 580 14 is_stmt 1 view .LVU3095
 11103 0812 40F36A81 		ble	.L635
 582:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11104              		.loc 20 582 13 view .LVU3096
 582:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11105              		.loc 20 582 24 is_stmt 0 view .LVU3097
 11106 0816 F7EE006A 		vmov.f32	s13, #1.0e+0
 582:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11107              		.loc 20 582 18 view .LVU3098
 11108 081a DBED005A 		vldr.32	s11, [fp]
 583:Veno-Echo.cpp ****         }
 11109              		.loc 20 583 18 view .LVU3099
 11110 081e 9BED016A 		vldr.32	s12, [fp, #4]
 582:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11111              		.loc 20 582 24 view .LVU3100
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 343


 11112 0822 36EEC77A 		vsub.f32	s14, s13, s14
 582:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11113              		.loc 20 582 33 view .LVU3101
 11114 0826 37EE077A 		vadd.f32	s14, s14, s14
 582:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11115              		.loc 20 582 18 view .LVU3102
 11116 082a E7EE257A 		vfma.f32	s15, s14, s11
 11117              	.LVL677:
 583:Veno-Echo.cpp ****         }
 11118              		.loc 20 583 13 is_stmt 1 view .LVU3103
 583:Veno-Echo.cpp ****         }
 11119              		.loc 20 583 18 is_stmt 0 view .LVU3104
 11120 082e A7EE060A 		vfma.f32	s0, s14, s12
 11121              	.LVL678:
 583:Veno-Echo.cpp ****         }
 11122              		.loc 20 583 18 view .LVU3105
 11123 0832 75E5     		b	.L570
 11124              	.L650:
 11125              		.align	2
 11126              	.L649:
 11127 0834 00000000 		.word	.LANCHOR3
 11128 0838 BF270900 		.word	599999
 11129 083c 851DD96F 		.word	1876499845
 11130 0840 C1270900 		.word	600001
 11131 0844 249F2400 		.word	2400036
 11132 0848 1C9F2400 		.word	2400028
 11133 084c 189F2400 		.word	2400024
 11134 0850 00000000 		.word	.LANCHOR106
 11135 0854 00000000 		.word	.LANCHOR107
 11136 0858 00000000 		.word	.LANCHOR0
 11137 085c 00000000 		.word	.LANCHOR1
 11138 0860 C0270900 		.word	600000
 11139              	.LVL679:
 11140              	.L589:
 11141              	.LBB2222:
 534:Veno-Echo.cpp **** {
 11142              		.loc 20 534 1 view .LVU3106
 11143 0864 D14B     		ldr	r3, .L651
 11144              	.LBE2222:
 11145              	.LBB2223:
 11146              	.LBB1964:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11147              		.loc 20 2000 19 view .LVU3107
 11148 0866 B0EE470A 		vmov.f32	s0, s14
 11149              	.LVL680:
2006:Veno-Echo.cpp **** }
 11150              		.loc 20 2006 5 is_stmt 1 view .LVU3108
2006:Veno-Echo.cpp **** }
 11151              		.loc 20 2006 5 is_stmt 0 view .LVU3109
 11152              	.LBE1964:
 11153              	.LBE2223:
 11154              	.LBB2224:
 534:Veno-Echo.cpp **** {
 11155              		.loc 20 534 1 view .LVU3110
 11156 086a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11157              	.LBE2224:
 532:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 344


 11158              		.loc 20 532 27 view .LVU3111
 11159 086c 8DED0B0A 		vstr.32	s0, [sp, #44]
 534:Veno-Echo.cpp **** {
 11160              		.loc 20 534 1 is_stmt 1 view .LVU3112
 11161              	.LBB2225:
 11162 0870 002B     		cmp	r3, #0
 11163 0872 3FF43CAD 		beq	.L564
 11164              	.L641:
 11165              	.LBB1967:
 540:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11166              		.loc 20 540 9 view .LVU3113
 540:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11167              		.loc 20 540 27 is_stmt 0 view .LVU3114
 11168 0876 9FEDCE8A 		vldr.32	s16, .L651+4
 11169              	.LVL681:
 540:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11170              		.loc 20 540 27 view .LVU3115
 11171 087a CE4D     		ldr	r5, .L651+8
 11172 087c 27EE880A 		vmul.f32	s0, s15, s16
 541:Veno-Echo.cpp **** 
 11173              		.loc 20 541 27 view .LVU3116
 11174 0880 CD4C     		ldr	r4, .L651+12
 540:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11175              		.loc 20 540 27 view .LVU3117
 11176 0882 2846     		mov	r0, r5
 11177 0884 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11178              	.LVL682:
 541:Veno-Echo.cpp **** 
 11179              		.loc 20 541 9 is_stmt 1 view .LVU3118
 541:Veno-Echo.cpp **** 
 11180              		.loc 20 541 27 is_stmt 0 view .LVU3119
 11181 0888 9DED0B0A 		vldr.32	s0, [sp, #44]
 11182 088c 2046     		mov	r0, r4
 11183 088e 20EE080A 		vmul.f32	s0, s0, s16
 11184 0892 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11185              	.LVL683:
 544:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11186              		.loc 20 544 9 is_stmt 1 view .LVU3120
 544:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11187              		.loc 20 544 9 is_stmt 0 view .LVU3121
 11188              	.LBE1967:
 11189              	.LBE2225:
 11190              	.LBE2253:
 11191              	.LBE2264:
  23:../DaisySP/Source/Filters/svf.h ****     /** Initializes the filter
  24:../DaisySP/Source/Filters/svf.h ****         float sample_rate - sample rate of the audio engine being run, and the frequency that the P
  25:../DaisySP/Source/Filters/svf.h ****     */
  26:../DaisySP/Source/Filters/svf.h ****     void Init(float sample_rate);
  27:../DaisySP/Source/Filters/svf.h **** 
  28:../DaisySP/Source/Filters/svf.h **** 
  29:../DaisySP/Source/Filters/svf.h ****     /** 
  30:../DaisySP/Source/Filters/svf.h ****         Process the input signal, updating all of the outputs.
  31:../DaisySP/Source/Filters/svf.h ****     */
  32:../DaisySP/Source/Filters/svf.h ****     void Process(float in);
  33:../DaisySP/Source/Filters/svf.h **** 
  34:../DaisySP/Source/Filters/svf.h **** 
  35:../DaisySP/Source/Filters/svf.h ****     /** sets the frequency of the cutoff frequency. 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 345


  36:../DaisySP/Source/Filters/svf.h ****         f must be between 0.0 and sample_rate / 3
  37:../DaisySP/Source/Filters/svf.h ****     */
  38:../DaisySP/Source/Filters/svf.h ****     void SetFreq(float f);
  39:../DaisySP/Source/Filters/svf.h **** 
  40:../DaisySP/Source/Filters/svf.h ****     /** sets the resonance of the filter.
  41:../DaisySP/Source/Filters/svf.h ****         Must be between 0.0 and 1.0 to ensure stability.
  42:../DaisySP/Source/Filters/svf.h ****     */
  43:../DaisySP/Source/Filters/svf.h ****     void SetRes(float r);
  44:../DaisySP/Source/Filters/svf.h **** 
  45:../DaisySP/Source/Filters/svf.h ****     /** sets the drive of the filter 
  46:../DaisySP/Source/Filters/svf.h ****         affects the response of the resonance of the filter
  47:../DaisySP/Source/Filters/svf.h ****     */
  48:../DaisySP/Source/Filters/svf.h ****     void SetDrive(float d);
  49:../DaisySP/Source/Filters/svf.h ****     /** lowpass output
  50:../DaisySP/Source/Filters/svf.h ****         \return low pass output of the filter
  51:../DaisySP/Source/Filters/svf.h ****     */
  52:../DaisySP/Source/Filters/svf.h ****     inline float Low() { return out_low_; }
 11192              		.loc 9 52 26 is_stmt 1 view .LVU3122
 11193              	.LBB2265:
 11194              	.LBB2254:
 11195              	.LBB2226:
 11196              	.LBB1982:
 544:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11197              		.loc 20 544 50 is_stmt 0 view .LVU3123
 11198 0896 F2EE046A 		vmov.f32	s13, #1.0e+1
 11199 089a 95ED0C7A 		vldr.32	s14, [r5, #48]
 548:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11200              		.loc 20 548 59 view .LVU3124
 11201 089e 0AA9     		add	r1, sp, #40
 545:Veno-Echo.cpp ****         
 11202              		.loc 20 545 50 view .LVU3125
 11203 08a0 D4ED0C7A 		vldr.32	s15, [r4, #48]
 548:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11204              		.loc 20 548 59 view .LVU3126
 11205 08a4 0CAA     		add	r2, sp, #48
 544:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11206              		.loc 20 544 50 view .LVU3127
 11207 08a6 27EE267A 		vmul.f32	s14, s14, s13
 548:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11208              		.loc 20 548 59 view .LVU3128
 11209 08aa C448     		ldr	r0, .L651+16
 545:Veno-Echo.cpp ****         
 11210              		.loc 20 545 50 view .LVU3129
 11211 08ac 67EEA67A 		vmul.f32	s15, s15, s13
 544:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11212              		.loc 20 544 57 view .LVU3130
 11213 08b0 8DED0C7A 		vstr.32	s14, [sp, #48]
 545:Veno-Echo.cpp ****         
 11214              		.loc 20 545 9 is_stmt 1 view .LVU3131
 11215              	.LVL684:
 545:Veno-Echo.cpp ****         
 11216              		.loc 20 545 9 is_stmt 0 view .LVU3132
 11217              	.LBE1982:
 11218              	.LBE2226:
 11219              	.LBE2254:
 11220              	.LBE2265:
 11221              		.loc 9 52 26 is_stmt 1 view .LVU3133
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 346


 11222              	.LBB2266:
 11223              	.LBB2255:
 11224              	.LBB2227:
 11225              	.LBB1983:
 545:Veno-Echo.cpp ****         
 11226              		.loc 20 545 57 is_stmt 0 view .LVU3134
 11227 08b4 CDED0D7A 		vstr.32	s15, [sp, #52]
 548:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11228              		.loc 20 548 9 is_stmt 1 view .LVU3135
 548:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11229              		.loc 20 548 59 is_stmt 0 view .LVU3136
 11230 08b8 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11231              	.LVL685:
 549:Veno-Echo.cpp **** 
 11232              		.loc 20 549 59 view .LVU3137
 11233 08bc 0BA9     		add	r1, sp, #44
 11234 08be 0DAA     		add	r2, sp, #52
 11235 08c0 BF48     		ldr	r0, .L651+20
 548:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11236              		.loc 20 548 97 view .LVU3138
 11237 08c2 8DED0E0A 		vstr.32	s0, [sp, #56]
 549:Veno-Echo.cpp **** 
 11238              		.loc 20 549 9 is_stmt 1 view .LVU3139
 549:Veno-Echo.cpp **** 
 11239              		.loc 20 549 59 is_stmt 0 view .LVU3140
 11240 08c6 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11241              	.LVL686:
 11242              	.LBB1968:
 11243              	.LBB1969:
1999:Veno-Echo.cpp ****         returnval = limit;
 11244              		.loc 20 1999 5 view .LVU3141
 11245 08ca F0EE006A 		vmov.f32	s13, #2.0e+0
 11246              	.LBE1969:
 11247              	.LBE1968:
 552:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11248              		.loc 20 552 41 view .LVU3142
 11249 08ce 9DED0E7A 		vldr.32	s14, [sp, #56]
 549:Veno-Echo.cpp **** 
 11250              		.loc 20 549 59 view .LVU3143
 11251 08d2 F0EE407A 		vmov.f32	s15, s0
 552:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11252              		.loc 20 552 9 is_stmt 1 view .LVU3144
 11253              	.LVL687:
 11254              	.LBB1973:
 11255              	.LBI1968:
1996:Veno-Echo.cpp **** {
 11256              		.loc 20 1996 7 view .LVU3145
 11257              	.LBB1970:
1998:Veno-Echo.cpp ****     if (input > limit)
 11258              		.loc 20 1998 5 view .LVU3146
1999:Veno-Echo.cpp ****         returnval = limit;
 11259              		.loc 20 1999 5 view .LVU3147
 11260 08d6 B4EEE67A 		vcmpe.f32	s14, s13
 11261 08da F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11262 08de 00F30D81 		bgt	.L590
2001:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11263              		.loc 20 2001 10 view .LVU3148
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 347


 11264 08e2 F8EE006A 		vmov.f32	s13, #-2.0e+0
 11265 08e6 B4EEE67A 		vcmpe.f32	s14, s13
 11266 08ea F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11267 08ee 00F12D81 		bmi	.L591
 11268 08f2 27EE080A 		vmul.f32	s0, s14, s16
 11269              	.LVL688:
 11270              	.L565:
2006:Veno-Echo.cpp **** }
 11271              		.loc 20 2006 5 view .LVU3149
2006:Veno-Echo.cpp **** }
 11272              		.loc 20 2006 5 is_stmt 0 view .LVU3150
 11273              	.LBE1970:
 11274              	.LBE1973:
 11275              	.LBB1974:
 11276              	.LBB1975:
1999:Veno-Echo.cpp ****         returnval = limit;
 11277              		.loc 20 1999 5 view .LVU3151
 11278 08f6 F0EE006A 		vmov.f32	s13, #2.0e+0
 11279              	.LBE1975:
 11280              	.LBE1974:
 552:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11281              		.loc 20 552 30 view .LVU3152
 11282 08fa 8DED0E7A 		vstr.32	s14, [sp, #56]
 553:Veno-Echo.cpp **** 
 11283              		.loc 20 553 9 is_stmt 1 view .LVU3153
 11284              	.LVL689:
 11285              	.LBB1978:
 11286              	.LBI1974:
1996:Veno-Echo.cpp **** {
 11287              		.loc 20 1996 7 view .LVU3154
 11288              	.LBB1976:
1998:Veno-Echo.cpp ****     if (input > limit)
 11289              		.loc 20 1998 5 view .LVU3155
1999:Veno-Echo.cpp ****         returnval = limit;
 11290              		.loc 20 1999 5 view .LVU3156
 11291 08fe F4EEE67A 		vcmpe.f32	s15, s13
 11292 0902 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11293 0906 00F30681 		bgt	.L592
2001:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11294              		.loc 20 2001 10 view .LVU3157
 11295 090a B8EE007A 		vmov.f32	s14, #-2.0e+0
2002:Veno-Echo.cpp ****     else
 11296              		.loc 20 2002 19 is_stmt 0 view .LVU3158
 11297 090e F4EE477A 		vcmp.f32	s15, s14
 11298 0912 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11299 0916 48BF     		it	mi
 11300 0918 F0EE477A 		vmovmi.f32	s15, s14
 11301              	.LVL690:
 11302              	.L566:
2006:Veno-Echo.cpp **** }
 11303              		.loc 20 2006 5 is_stmt 1 view .LVU3159
2006:Veno-Echo.cpp **** }
 11304              		.loc 20 2006 5 is_stmt 0 view .LVU3160
 11305              	.LBE1976:
 11306              	.LBE1978:
 556:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11307              		.loc 20 556 27 view .LVU3161
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 348


 11308 091c A94D     		ldr	r5, .L651+24
 557:Veno-Echo.cpp **** 
 11309              		.loc 20 557 27 view .LVU3162
 11310 091e AA4C     		ldr	r4, .L651+28
 556:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11311              		.loc 20 556 27 view .LVU3163
 11312 0920 2846     		mov	r0, r5
 553:Veno-Echo.cpp **** 
 11313              		.loc 20 553 30 view .LVU3164
 11314 0922 CDED0F7A 		vstr.32	s15, [sp, #60]
 556:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11315              		.loc 20 556 9 is_stmt 1 view .LVU3165
 556:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11316              		.loc 20 556 27 is_stmt 0 view .LVU3166
 11317 0926 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11318              	.LVL691:
 557:Veno-Echo.cpp **** 
 11319              		.loc 20 557 9 is_stmt 1 view .LVU3167
 557:Veno-Echo.cpp **** 
 11320              		.loc 20 557 27 is_stmt 0 view .LVU3168
 11321 092a DFEDA17A 		vldr.32	s15, .L651+4
 11322 092e 9DED0F0A 		vldr.32	s0, [sp, #60]
 11323 0932 2046     		mov	r0, r4
 11324 0934 20EE270A 		vmul.f32	s0, s0, s15
 11325 0938 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11326              	.LVL692:
 559:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11327              		.loc 20 559 9 is_stmt 1 view .LVU3169
 559:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11328              		.loc 20 559 9 is_stmt 0 view .LVU3170
 11329              	.LBE1983:
 11330              	.LBE2227:
 11331              	.LBE2255:
 11332              	.LBE2266:
  53:../DaisySP/Source/Filters/svf.h ****     /** highpass output
  54:../DaisySP/Source/Filters/svf.h ****         \return high pass output of the filter
  55:../DaisySP/Source/Filters/svf.h ****     */
  56:../DaisySP/Source/Filters/svf.h ****     inline float High() { return out_high_; }
 11333              		.loc 9 56 27 is_stmt 1 view .LVU3171
 11334              	.LBB2267:
 11335              	.LBB2256:
 11336              	.LBB2228:
 11337              	.LBB1984:
 559:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11338              		.loc 20 559 51 is_stmt 0 view .LVU3172
 11339 093c F2EE046A 		vmov.f32	s13, #1.0e+1
 11340 0940 95ED0D7A 		vldr.32	s14, [r5, #52]
 562:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11341              		.loc 20 562 55 view .LVU3173
 11342 0944 0EA9     		add	r1, sp, #56
 560:Veno-Echo.cpp **** 
 11343              		.loc 20 560 51 view .LVU3174
 11344 0946 D4ED0D7A 		vldr.32	s15, [r4, #52]
 562:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11345              		.loc 20 562 55 view .LVU3175
 11346 094a 10AA     		add	r2, sp, #64
 559:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 349


 11347              		.loc 20 559 51 view .LVU3176
 11348 094c 27EE267A 		vmul.f32	s14, s14, s13
 562:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11349              		.loc 20 562 55 view .LVU3177
 11350 0950 9E48     		ldr	r0, .L651+32
 560:Veno-Echo.cpp **** 
 11351              		.loc 20 560 51 view .LVU3178
 11352 0952 67EEA67A 		vmul.f32	s15, s15, s13
 559:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11353              		.loc 20 559 58 view .LVU3179
 11354 0956 8DED107A 		vstr.32	s14, [sp, #64]
 560:Veno-Echo.cpp **** 
 11355              		.loc 20 560 9 is_stmt 1 view .LVU3180
 11356              	.LVL693:
 560:Veno-Echo.cpp **** 
 11357              		.loc 20 560 9 is_stmt 0 view .LVU3181
 11358              	.LBE1984:
 11359              	.LBE2228:
 11360              	.LBE2256:
 11361              	.LBE2267:
 11362              		.loc 9 56 27 is_stmt 1 view .LVU3182
 11363              	.LBB2268:
 11364              	.LBB2257:
 11365              	.LBB2229:
 11366              	.LBB1985:
 560:Veno-Echo.cpp **** 
 11367              		.loc 20 560 58 is_stmt 0 view .LVU3183
 11368 095a CDED117A 		vstr.32	s15, [sp, #68]
 562:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11369              		.loc 20 562 9 is_stmt 1 view .LVU3184
 562:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11370              		.loc 20 562 55 is_stmt 0 view .LVU3185
 11371 095e FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11372              	.LVL694:
 563:Veno-Echo.cpp **** 
 11373              		.loc 20 563 55 view .LVU3186
 11374 0962 0FA9     		add	r1, sp, #60
 11375 0964 11AA     		add	r2, sp, #68
 11376 0966 9A48     		ldr	r0, .L651+36
 562:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11377              		.loc 20 562 30 view .LVU3187
 11378 0968 8DED0E0A 		vstr.32	s0, [sp, #56]
 563:Veno-Echo.cpp **** 
 11379              		.loc 20 563 9 is_stmt 1 view .LVU3188
 563:Veno-Echo.cpp **** 
 11380              		.loc 20 563 55 is_stmt 0 view .LVU3189
 11381 096c FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11382              	.LVL695:
 566:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11383              		.loc 20 566 53 view .LVU3190
 11384 0970 0EAA     		add	r2, sp, #56
 11385 0972 0AA9     		add	r1, sp, #40
 11386 0974 9748     		ldr	r0, .L651+40
 563:Veno-Echo.cpp **** 
 11387              		.loc 20 563 30 view .LVU3191
 11388 0976 8DED0F0A 		vstr.32	s0, [sp, #60]
 566:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 350


 11389              		.loc 20 566 9 is_stmt 1 view .LVU3192
 566:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11390              		.loc 20 566 53 is_stmt 0 view .LVU3193
 11391 097a FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11392              	.LVL696:
 567:Veno-Echo.cpp **** 
 11393              		.loc 20 567 53 view .LVU3194
 11394 097e 0FAA     		add	r2, sp, #60
 11395 0980 0BA9     		add	r1, sp, #44
 11396 0982 9548     		ldr	r0, .L651+44
 566:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11397              		.loc 20 566 27 view .LVU3195
 11398 0984 8DED0A0A 		vstr.32	s0, [sp, #40]
 567:Veno-Echo.cpp **** 
 11399              		.loc 20 567 9 is_stmt 1 view .LVU3196
 567:Veno-Echo.cpp **** 
 11400              		.loc 20 567 53 is_stmt 0 view .LVU3197
 11401 0988 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11402              	.LVL697:
 11403 098c DDED0A7A 		vldr.32	s15, [sp, #40]
 567:Veno-Echo.cpp **** 
 11404              		.loc 20 567 27 view .LVU3198
 11405 0990 8DED0B0A 		vstr.32	s0, [sp, #44]
 11406              	.LBE1985:
 11407 0994 ABE4     		b	.L564
 11408              	.LVL698:
 11409              	.L633:
 567:Veno-Echo.cpp **** 
 11410              		.loc 20 567 27 view .LVU3199
 11411              	.LBE2229:
 510:Veno-Echo.cpp **** 
 11412              		.loc 20 510 25 view .LVU3200
 11413 0996 DFED917A 		vldr.32	s15, .L651+48
 11414              	.LVL699:
 510:Veno-Echo.cpp **** 
 11415              		.loc 20 510 25 view .LVU3201
 11416 099a 32E4     		b	.L554
 11417              	.LVL700:
 11418              	.L632:
 506:Veno-Echo.cpp ****             
 11419              		.loc 20 506 25 view .LVU3202
 11420 099c 9FED8F7A 		vldr.32	s14, .L651+48
 11421              	.LVL701:
 506:Veno-Echo.cpp ****             
 11422              		.loc 20 506 25 view .LVU3203
 11423 09a0 1EE4     		b	.L552
 11424              	.LVL702:
 11425              	.L580:
 11426              	.LBB2230:
 436:Veno-Echo.cpp **** {
 11427              		.loc 20 436 1 view .LVU3204
 11428 09a2 824B     		ldr	r3, .L651
 11429              	.LBE2230:
 11430              	.LBB2231:
 11431              	.LBB1881:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11432              		.loc 20 2000 19 view .LVU3205
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 351


 11433 09a4 B0EE470A 		vmov.f32	s0, s14
 11434              	.LVL703:
2006:Veno-Echo.cpp **** }
 11435              		.loc 20 2006 5 is_stmt 1 view .LVU3206
2006:Veno-Echo.cpp **** }
 11436              		.loc 20 2006 5 is_stmt 0 view .LVU3207
 11437              	.LBE1881:
 11438              	.LBE2231:
 11439              	.LBB2232:
 436:Veno-Echo.cpp **** {
 11440              		.loc 20 436 1 view .LVU3208
 11441 09a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11442              	.LBE2232:
 434:Veno-Echo.cpp **** 
 11443              		.loc 20 434 23 view .LVU3209
 11444 09aa 8DED090A 		vstr.32	s0, [sp, #36]
 436:Veno-Echo.cpp **** {
 11445              		.loc 20 436 1 is_stmt 1 view .LVU3210
 11446              	.LBB2233:
 11447 09ae 002B     		cmp	r3, #0
 11448 09b0 7FF49BAB 		bne	.L546
 11449              	.L640:
 11450              	.LBB1884:
 442:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 11451              		.loc 20 442 9 view .LVU3211
 442:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 11452              		.loc 20 442 22 is_stmt 0 view .LVU3212
 11453 09b4 9FED7E9A 		vldr.32	s18, .L651+4
 11454 09b8 894D     		ldr	r5, .L651+52
 11455 09ba 27EE890A 		vmul.f32	s0, s15, s18
 443:Veno-Echo.cpp **** 
 11456              		.loc 20 443 22 view .LVU3213
 11457 09be 894C     		ldr	r4, .L651+56
 442:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 11458              		.loc 20 442 22 view .LVU3214
 11459 09c0 2846     		mov	r0, r5
 11460 09c2 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11461              	.LVL704:
 443:Veno-Echo.cpp **** 
 11462              		.loc 20 443 9 is_stmt 1 view .LVU3215
 443:Veno-Echo.cpp **** 
 11463              		.loc 20 443 22 is_stmt 0 view .LVU3216
 11464 09c6 9DED090A 		vldr.32	s0, [sp, #36]
 11465 09ca 2046     		mov	r0, r4
 11466 09cc 20EE090A 		vmul.f32	s0, s0, s18
 11467 09d0 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11468              	.LVL705:
 446:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11469              		.loc 20 446 9 is_stmt 1 view .LVU3217
 446:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11470              		.loc 20 446 9 is_stmt 0 view .LVU3218
 11471              	.LBE1884:
 11472              	.LBE2233:
 11473              	.LBE2257:
 11474              	.LBE2268:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 11475              		.loc 9 52 26 is_stmt 1 view .LVU3219
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 352


 11476              	.LBB2269:
 11477              	.LBB2258:
 11478              	.LBB2234:
 11479              	.LBB1899:
 446:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11480              		.loc 20 446 40 is_stmt 0 view .LVU3220
 11481 09d4 F2EE046A 		vmov.f32	s13, #1.0e+1
 11482 09d8 95ED0C7A 		vldr.32	s14, [r5, #48]
 450:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11483              		.loc 20 450 49 view .LVU3221
 11484 09dc 0CAA     		add	r2, sp, #48
 447:Veno-Echo.cpp ****         
 11485              		.loc 20 447 40 view .LVU3222
 11486 09de D4ED0C7A 		vldr.32	s15, [r4, #48]
 450:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11487              		.loc 20 450 49 view .LVU3223
 11488 09e2 08A9     		add	r1, sp, #32
 446:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11489              		.loc 20 446 40 view .LVU3224
 11490 09e4 27EE267A 		vmul.f32	s14, s14, s13
 450:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11491              		.loc 20 450 49 view .LVU3225
 11492 09e8 7F48     		ldr	r0, .L651+60
 447:Veno-Echo.cpp ****         
 11493              		.loc 20 447 40 view .LVU3226
 11494 09ea 67EEA67A 		vmul.f32	s15, s15, s13
 446:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11495              		.loc 20 446 47 view .LVU3227
 11496 09ee 8DED0C7A 		vstr.32	s14, [sp, #48]
 447:Veno-Echo.cpp ****         
 11497              		.loc 20 447 9 is_stmt 1 view .LVU3228
 11498              	.LVL706:
 447:Veno-Echo.cpp ****         
 11499              		.loc 20 447 9 is_stmt 0 view .LVU3229
 11500              	.LBE1899:
 11501              	.LBE2234:
 11502              	.LBE2258:
 11503              	.LBE2269:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 11504              		.loc 9 52 26 is_stmt 1 view .LVU3230
 11505              	.LBB2270:
 11506              	.LBB2259:
 11507              	.LBB2235:
 11508              	.LBB1900:
 447:Veno-Echo.cpp ****         
 11509              		.loc 20 447 47 is_stmt 0 view .LVU3231
 11510 09f2 CDED0D7A 		vstr.32	s15, [sp, #52]
 450:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11511              		.loc 20 450 9 is_stmt 1 view .LVU3232
 450:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11512              		.loc 20 450 49 is_stmt 0 view .LVU3233
 11513 09f6 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11514              	.LVL707:
 451:Veno-Echo.cpp **** 
 11515              		.loc 20 451 49 view .LVU3234
 11516 09fa 0DAA     		add	r2, sp, #52
 11517 09fc 09A9     		add	r1, sp, #36
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 353


 11518 09fe 7B48     		ldr	r0, .L651+64
 450:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11519              		.loc 20 450 78 view .LVU3235
 11520 0a00 8DED0E0A 		vstr.32	s0, [sp, #56]
 451:Veno-Echo.cpp **** 
 11521              		.loc 20 451 9 is_stmt 1 view .LVU3236
 451:Veno-Echo.cpp **** 
 11522              		.loc 20 451 49 is_stmt 0 view .LVU3237
 11523 0a04 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11524              	.LVL708:
 11525              	.LBB1885:
 11526              	.LBB1886:
1999:Veno-Echo.cpp ****         returnval = limit;
 11527              		.loc 20 1999 5 view .LVU3238
 11528 0a08 F0EE006A 		vmov.f32	s13, #2.0e+0
 11529              	.LBE1886:
 11530              	.LBE1885:
 454:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 11531              		.loc 20 454 36 view .LVU3239
 11532 0a0c 9DED0E7A 		vldr.32	s14, [sp, #56]
 451:Veno-Echo.cpp **** 
 11533              		.loc 20 451 49 view .LVU3240
 11534 0a10 F0EE407A 		vmov.f32	s15, s0
 454:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 11535              		.loc 20 454 9 is_stmt 1 view .LVU3241
 11536              	.LVL709:
 11537              	.LBB1890:
 11538              	.LBI1885:
1996:Veno-Echo.cpp **** {
 11539              		.loc 20 1996 7 view .LVU3242
 11540              	.LBB1887:
1998:Veno-Echo.cpp ****     if (input > limit)
 11541              		.loc 20 1998 5 view .LVU3243
1999:Veno-Echo.cpp ****         returnval = limit;
 11542              		.loc 20 1999 5 view .LVU3244
 11543 0a14 B4EEE67A 		vcmpe.f32	s14, s13
 11544 0a18 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11545 0a1c 76DC     		bgt	.L581
2001:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11546              		.loc 20 2001 10 view .LVU3245
 11547 0a1e F8EE006A 		vmov.f32	s13, #-2.0e+0
 11548 0a22 B4EEE67A 		vcmpe.f32	s14, s13
 11549 0a26 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11550 0a2a 00F19480 		bmi	.L582
 11551 0a2e 27EE090A 		vmul.f32	s0, s14, s18
 11552              	.LVL710:
 11553              	.L547:
2006:Veno-Echo.cpp **** }
 11554              		.loc 20 2006 5 view .LVU3246
2006:Veno-Echo.cpp **** }
 11555              		.loc 20 2006 5 is_stmt 0 view .LVU3247
 11556              	.LBE1887:
 11557              	.LBE1890:
 11558              	.LBB1891:
 11559              	.LBB1892:
1999:Veno-Echo.cpp ****         returnval = limit;
 11560              		.loc 20 1999 5 view .LVU3248
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 354


 11561 0a32 F0EE006A 		vmov.f32	s13, #2.0e+0
 11562              	.LBE1892:
 11563              	.LBE1891:
 454:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 11564              		.loc 20 454 25 view .LVU3249
 11565 0a36 8DED0E7A 		vstr.32	s14, [sp, #56]
 455:Veno-Echo.cpp **** 
 11566              		.loc 20 455 9 is_stmt 1 view .LVU3250
 11567              	.LVL711:
 11568              	.LBB1895:
 11569              	.LBI1891:
1996:Veno-Echo.cpp **** {
 11570              		.loc 20 1996 7 view .LVU3251
 11571              	.LBB1893:
1998:Veno-Echo.cpp ****     if (input > limit)
 11572              		.loc 20 1998 5 view .LVU3252
1999:Veno-Echo.cpp ****         returnval = limit;
 11573              		.loc 20 1999 5 view .LVU3253
 11574 0a3a F4EEE67A 		vcmpe.f32	s15, s13
 11575 0a3e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11576 0a42 60DC     		bgt	.L583
2001:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11577              		.loc 20 2001 10 view .LVU3254
 11578 0a44 B8EE007A 		vmov.f32	s14, #-2.0e+0
2002:Veno-Echo.cpp ****     else
 11579              		.loc 20 2002 19 is_stmt 0 view .LVU3255
 11580 0a48 F4EE477A 		vcmp.f32	s15, s14
 11581 0a4c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11582 0a50 48BF     		it	mi
 11583 0a52 F0EE477A 		vmovmi.f32	s15, s14
 11584              	.LVL712:
 11585              	.L548:
2006:Veno-Echo.cpp **** }
 11586              		.loc 20 2006 5 is_stmt 1 view .LVU3256
2006:Veno-Echo.cpp **** }
 11587              		.loc 20 2006 5 is_stmt 0 view .LVU3257
 11588              	.LBE1893:
 11589              	.LBE1895:
 458:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 11590              		.loc 20 458 22 view .LVU3258
 11591 0a56 664D     		ldr	r5, .L651+68
 459:Veno-Echo.cpp **** 
 11592              		.loc 20 459 22 view .LVU3259
 11593 0a58 664C     		ldr	r4, .L651+72
 458:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 11594              		.loc 20 458 22 view .LVU3260
 11595 0a5a 2846     		mov	r0, r5
 455:Veno-Echo.cpp **** 
 11596              		.loc 20 455 25 view .LVU3261
 11597 0a5c CDED0F7A 		vstr.32	s15, [sp, #60]
 458:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 11598              		.loc 20 458 9 is_stmt 1 view .LVU3262
 458:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 11599              		.loc 20 458 22 is_stmt 0 view .LVU3263
 11600 0a60 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11601              	.LVL713:
 459:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 355


 11602              		.loc 20 459 9 is_stmt 1 view .LVU3264
 459:Veno-Echo.cpp **** 
 11603              		.loc 20 459 22 is_stmt 0 view .LVU3265
 11604 0a64 DFED527A 		vldr.32	s15, .L651+4
 11605 0a68 9DED0F0A 		vldr.32	s0, [sp, #60]
 11606 0a6c 2046     		mov	r0, r4
 11607 0a6e 20EE270A 		vmul.f32	s0, s0, s15
 11608 0a72 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11609              	.LVL714:
 461:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11610              		.loc 20 461 9 is_stmt 1 view .LVU3266
 461:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11611              		.loc 20 461 9 is_stmt 0 view .LVU3267
 11612              	.LBE1900:
 11613              	.LBE2235:
 11614              	.LBE2259:
 11615              	.LBE2270:
 11616              		.loc 9 56 27 is_stmt 1 view .LVU3268
 11617              	.LBB2271:
 11618              	.LBB2260:
 11619              	.LBB2236:
 11620              	.LBB1901:
 461:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11621              		.loc 20 461 41 is_stmt 0 view .LVU3269
 11622 0a76 F2EE046A 		vmov.f32	s13, #1.0e+1
 11623 0a7a 95ED0D7A 		vldr.32	s14, [r5, #52]
 464:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11624              		.loc 20 464 45 view .LVU3270
 11625 0a7e 0EA9     		add	r1, sp, #56
 462:Veno-Echo.cpp **** 
 11626              		.loc 20 462 41 view .LVU3271
 11627 0a80 D4ED0D7A 		vldr.32	s15, [r4, #52]
 464:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11628              		.loc 20 464 45 view .LVU3272
 11629 0a84 10AA     		add	r2, sp, #64
 461:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11630              		.loc 20 461 41 view .LVU3273
 11631 0a86 27EE267A 		vmul.f32	s14, s14, s13
 464:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11632              		.loc 20 464 45 view .LVU3274
 11633 0a8a 5B48     		ldr	r0, .L651+76
 462:Veno-Echo.cpp **** 
 11634              		.loc 20 462 41 view .LVU3275
 11635 0a8c 67EEA67A 		vmul.f32	s15, s15, s13
 461:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11636              		.loc 20 461 48 view .LVU3276
 11637 0a90 8DED107A 		vstr.32	s14, [sp, #64]
 462:Veno-Echo.cpp **** 
 11638              		.loc 20 462 9 is_stmt 1 view .LVU3277
 11639              	.LVL715:
 462:Veno-Echo.cpp **** 
 11640              		.loc 20 462 9 is_stmt 0 view .LVU3278
 11641              	.LBE1901:
 11642              	.LBE2236:
 11643              	.LBE2260:
 11644              	.LBE2271:
 11645              		.loc 9 56 27 is_stmt 1 view .LVU3279
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 356


 11646              	.LBB2272:
 11647              	.LBB2261:
 11648              	.LBB2237:
 11649              	.LBB1902:
 462:Veno-Echo.cpp **** 
 11650              		.loc 20 462 48 is_stmt 0 view .LVU3280
 11651 0a94 CDED117A 		vstr.32	s15, [sp, #68]
 464:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11652              		.loc 20 464 9 is_stmt 1 view .LVU3281
 464:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11653              		.loc 20 464 45 is_stmt 0 view .LVU3282
 11654 0a98 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11655              	.LVL716:
 465:Veno-Echo.cpp **** 
 11656              		.loc 20 465 45 view .LVU3283
 11657 0a9c 0FA9     		add	r1, sp, #60
 11658 0a9e 11AA     		add	r2, sp, #68
 11659 0aa0 5648     		ldr	r0, .L651+80
 464:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11660              		.loc 20 464 25 view .LVU3284
 11661 0aa2 8DED0E0A 		vstr.32	s0, [sp, #56]
 465:Veno-Echo.cpp **** 
 11662              		.loc 20 465 9 is_stmt 1 view .LVU3285
 465:Veno-Echo.cpp **** 
 11663              		.loc 20 465 45 is_stmt 0 view .LVU3286
 11664 0aa6 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11665              	.LVL717:
 469:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 11666              		.loc 20 469 44 view .LVU3287
 11667 0aaa 0EAA     		add	r2, sp, #56
 11668 0aac 08A9     		add	r1, sp, #32
 11669 0aae 5448     		ldr	r0, .L651+84
 465:Veno-Echo.cpp **** 
 11670              		.loc 20 465 25 view .LVU3288
 11671 0ab0 8DED0F0A 		vstr.32	s0, [sp, #60]
 469:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 11672              		.loc 20 469 9 is_stmt 1 view .LVU3289
 469:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 11673              		.loc 20 469 44 is_stmt 0 view .LVU3290
 11674 0ab4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11675              	.LVL718:
 470:Veno-Echo.cpp **** 
 11676              		.loc 20 470 44 view .LVU3291
 11677 0ab8 0FAA     		add	r2, sp, #60
 11678 0aba 09A9     		add	r1, sp, #36
 11679 0abc 5148     		ldr	r0, .L651+88
 469:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 11680              		.loc 20 469 23 view .LVU3292
 11681 0abe 8DED080A 		vstr.32	s0, [sp, #32]
 470:Veno-Echo.cpp **** 
 11682              		.loc 20 470 9 is_stmt 1 view .LVU3293
 470:Veno-Echo.cpp **** 
 11683              		.loc 20 470 44 is_stmt 0 view .LVU3294
 11684 0ac2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11685              	.LVL719:
 11686 0ac6 DDED087A 		vldr.32	s15, [sp, #32]
 470:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 357


 11687              		.loc 20 470 23 view .LVU3295
 11688 0aca 8DED090A 		vstr.32	s0, [sp, #36]
 11689              	.LBE1902:
 11690 0ace FFF70CBB 		b	.L546
 11691              	.LVL720:
 11692              	.L587:
 470:Veno-Echo.cpp **** 
 11693              		.loc 20 470 23 view .LVU3296
 11694              	.LBE2237:
 11695              	.LBB2238:
 11696              	.LBB1954:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11697              		.loc 20 2000 19 view .LVU3297
 11698 0ad2 B0EE678A 		vmov.f32	s16, s15
 11699              	.LVL721:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11700              		.loc 20 2000 19 view .LVU3298
 11701 0ad6 FFF7BDBB 		b	.L558
 11702              	.LVL722:
 11703              	.L586:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11704              		.loc 20 2000 19 view .LVU3299
 11705              	.LBE1954:
 11706              	.LBE2238:
 11707              	.LBB2239:
 11708              	.LBB1951:
 11709 0ada B0EE670A 		vmov.f32	s0, s15
 11710              	.LVL723:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11711              		.loc 20 2000 19 view .LVU3300
 11712 0ade FFF7A8BB 		b	.L556
 11713              	.LVL724:
 11714              	.L588:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11715              		.loc 20 2000 19 view .LVU3301
 11716              	.LBE1951:
 11717              	.LBE2239:
 11718              	.LBB2240:
 11719              	.LBB1958:
 11720 0ae2 F0EE477A 		vmov.f32	s15, s14
 11721              	.LVL725:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11722              		.loc 20 2000 19 view .LVU3302
 11723 0ae6 FFF7E8BB 		b	.L560
 11724              	.LVL726:
 11725              	.L635:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11726              		.loc 20 2000 19 view .LVU3303
 11727              	.LBE1958:
 11728              	.LBE2240:
 587:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 11729              		.loc 20 587 13 is_stmt 1 view .LVU3304
 587:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 11730              		.loc 20 587 18 is_stmt 0 view .LVU3305
 11731 0aea DBED006A 		vldr.32	s13, [fp]
 588:Veno-Echo.cpp ****         }
 11732              		.loc 20 588 18 view .LVU3306
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 358


 11733 0aee 9BED017A 		vldr.32	s14, [fp, #4]
 587:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 11734              		.loc 20 587 18 view .LVU3307
 11735 0af2 77EEA67A 		vadd.f32	s15, s15, s13
 11736              	.LVL727:
 588:Veno-Echo.cpp ****         }
 11737              		.loc 20 588 13 is_stmt 1 view .LVU3308
 588:Veno-Echo.cpp ****         }
 11738              		.loc 20 588 18 is_stmt 0 view .LVU3309
 11739 0af6 30EE070A 		vadd.f32	s0, s0, s14
 11740              	.LVL728:
 588:Veno-Echo.cpp ****         }
 11741              		.loc 20 588 18 view .LVU3310
 11742 0afa 11E4     		b	.L570
 11743              	.LVL729:
 11744              	.L590:
 11745              	.LBB2241:
 11746              	.LBB1986:
 11747              	.LBB1979:
 11748              	.LBB1971:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11749              		.loc 20 2000 19 view .LVU3311
 11750 0afc B0EE667A 		vmov.f32	s14, s13
 11751              	.LVL730:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11752              		.loc 20 2000 19 view .LVU3312
 11753 0b00 9FED410A 		vldr.32	s0, .L651+92
 11754 0b04 F7E6     		b	.L565
 11755              	.LVL731:
 11756              	.L583:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11757              		.loc 20 2000 19 view .LVU3313
 11758              	.LBE1971:
 11759              	.LBE1979:
 11760              	.LBE1986:
 11761              	.LBE2241:
 11762              	.LBB2242:
 11763              	.LBB1903:
 11764              	.LBB1896:
 11765              	.LBB1894:
 11766 0b06 F0EE667A 		vmov.f32	s15, s13
 11767              	.LVL732:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11768              		.loc 20 2000 19 view .LVU3314
 11769 0b0a A4E7     		b	.L548
 11770              	.LVL733:
 11771              	.L581:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11772              		.loc 20 2000 19 view .LVU3315
 11773              	.LBE1894:
 11774              	.LBE1896:
 11775              	.LBB1897:
 11776              	.LBB1888:
 11777 0b0c B0EE667A 		vmov.f32	s14, s13
 11778              	.LVL734:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11779              		.loc 20 2000 19 view .LVU3316
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 359


 11780 0b10 9FED3D0A 		vldr.32	s0, .L651+92
 11781 0b14 8DE7     		b	.L547
 11782              	.LVL735:
 11783              	.L592:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11784              		.loc 20 2000 19 view .LVU3317
 11785              	.LBE1888:
 11786              	.LBE1897:
 11787              	.LBE1903:
 11788              	.LBE2242:
 11789              	.LBB2243:
 11790              	.LBB1987:
 11791              	.LBB1980:
 11792              	.LBB1977:
 11793 0b16 F0EE667A 		vmov.f32	s15, s13
 11794              	.LVL736:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11795              		.loc 20 2000 19 view .LVU3318
 11796 0b1a FFE6     		b	.L566
 11797              	.LVL737:
 11798              	.L524:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11799              		.loc 20 2000 19 view .LVU3319
 11800              	.LBE1977:
 11801              	.LBE1980:
 11802              	.LBE1987:
 11803              	.LBE2243:
 11804              	.LBB2244:
 11805              	.LBB2185:
 11806              	.LBB2174:
 116:delayline_reverse.h ****                 }
 11807              		.loc 19 116 21 view .LVU3320
 11808 0b1c AB60     		str	r3, [r5, #8]
 11809 0b1e 5DE6     		b	.L526
 11810              	.LVL738:
 11811              	.L534:
 116:delayline_reverse.h ****                 }
 11812              		.loc 19 116 21 view .LVU3321
 11813              	.LBE2174:
 11814              	.LBE2185:
 11815              	.LBE2244:
 11816              	.LBB2245:
 11817              	.LBB2213:
 11818              	.LBB2208:
 11819 0b20 A260     		str	r2, [r4, #8]
 11820 0b22 38E6     		b	.L536
 11821              	.LVL739:
 11822              	.L503:
 116:delayline_reverse.h ****                 }
 11823              		.loc 19 116 21 view .LVU3322
 11824              	.LBE2208:
 11825              	.LBE2213:
 11826              	.LBE2245:
 11827              	.LBE2261:
 11828              	.LBE2272:
 608:Veno-Echo.cpp **** 
 11829              		.loc 20 608 1 view .LVU3323
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 360


 11830 0b24 13B0     		add	sp, sp, #76
 11831              		.cfi_remember_state
 11832              		.cfi_def_cfa_offset 92
 11833              		@ sp needed
 11834 0b26 BDEC0E8B 		vldm	sp!, {d8-d14}
 11835              		.cfi_restore 92
 11836              		.cfi_restore 93
 11837              		.cfi_restore 90
 11838              		.cfi_restore 91
 11839              		.cfi_restore 88
 11840              		.cfi_restore 89
 11841              		.cfi_restore 86
 11842              		.cfi_restore 87
 11843              		.cfi_restore 84
 11844              		.cfi_restore 85
 11845              		.cfi_restore 82
 11846              		.cfi_restore 83
 11847              		.cfi_restore 80
 11848              		.cfi_restore 81
 11849              		.cfi_def_cfa_offset 36
 11850 0b2a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 11851              	.LVL740:
 11852              	.L541:
 11853              		.cfi_restore_state
 11854              	.LBB2273:
 11855              	.LBB2262:
 11856              	.LBB2246:
 11857              	.LBB2214:
 11858              	.LBB2209:
 145:delayline_reverse.h ****                     playinghead_ = false;
 11859              		.loc 19 145 21 view .LVU3324
 11860 0b2e 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11861              		.loc 19 144 21 view .LVU3325
 11862 0b30 039C     		ldr	r4, [sp, #12]
 11863              	.LVL741:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11864              		.loc 19 144 21 view .LVU3326
 11865 0b32 2260     		str	r2, [r4]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 11866              		.loc 19 145 21 view .LVU3327
 11867 0b34 1970     		strb	r1, [r3]
 146:delayline_reverse.h ****                 }
 11868              		.loc 19 146 21 view .LVU3328
 11869 0b36 0170     		strb	r1, [r0]
 11870 0b38 FAE5     		b	.L538
 11871              	.LVL742:
 11872              	.L531:
 146:delayline_reverse.h ****                 }
 11873              		.loc 19 146 21 view .LVU3329
 11874              	.LBE2209:
 11875              	.LBE2214:
 11876              	.LBE2246:
 11877              	.LBB2247:
 11878              	.LBB2186:
 11879              	.LBB2175:
 145:delayline_reverse.h ****                     playinghead_ = false;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 361


 11880              		.loc 19 145 21 view .LVU3330
 11881 0b3a 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11882              		.loc 19 144 21 view .LVU3331
 11883 0b3c 049D     		ldr	r5, [sp, #16]
 11884              	.LVL743:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11885              		.loc 19 144 21 view .LVU3332
 11886 0b3e 2B60     		str	r3, [r5]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 11887              		.loc 19 145 21 view .LVU3333
 11888 0b40 1170     		strb	r1, [r2]
 146:delayline_reverse.h ****                 }
 11889              		.loc 19 146 21 view .LVU3334
 11890 0b42 0170     		strb	r1, [r0]
 11891 0b44 8BE5     		b	.L528
 11892              	.LVL744:
 11893              	.L642:
 146:delayline_reverse.h ****                 }
 11894              		.loc 19 146 21 view .LVU3335
 11895              	.LBE2175:
 11896              	.LBE2186:
 11897              	.LBE2247:
 11898              	.LBB2248:
 11899              	.LBB2215:
 11900              	.LBB2210:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 11901              		.loc 19 130 17 view .LVU3336
 11902 0b46 C2ED007A 		vstr.32	s15, [r2]
 11903 0b4a F1E5     		b	.L538
 11904              	.LVL745:
 11905              	.L591:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 11906              		.loc 19 130 17 view .LVU3337
 11907              	.LBE2210:
 11908              	.LBE2215:
 11909              	.LBE2248:
 11910              	.LBB2249:
 11911              	.LBB1988:
 11912              	.LBB1981:
 11913              	.LBB1972:
2002:Veno-Echo.cpp ****     else
 11914              		.loc 20 2002 19 view .LVU3338
 11915 0b4c B0EE667A 		vmov.f32	s14, s13
 11916              	.LVL746:
2002:Veno-Echo.cpp ****     else
 11917              		.loc 20 2002 19 view .LVU3339
 11918 0b50 9FED2E0A 		vldr.32	s0, .L651+96
 11919 0b54 CFE6     		b	.L565
 11920              	.LVL747:
 11921              	.L582:
2002:Veno-Echo.cpp ****     else
 11922              		.loc 20 2002 19 view .LVU3340
 11923              	.LBE1972:
 11924              	.LBE1981:
 11925              	.LBE1988:
 11926              	.LBE2249:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 362


 11927              	.LBB2250:
 11928              	.LBB1904:
 11929              	.LBB1898:
 11930              	.LBB1889:
 11931 0b56 B0EE667A 		vmov.f32	s14, s13
 11932              	.LVL748:
2002:Veno-Echo.cpp ****     else
 11933              		.loc 20 2002 19 view .LVU3341
 11934 0b5a 9FED2C0A 		vldr.32	s0, .L651+96
 11935 0b5e 68E7     		b	.L547
 11936              	.LVL749:
 11937              	.L505:
2002:Veno-Echo.cpp ****     else
 11938              		.loc 20 2002 19 view .LVU3342
 11939              	.LBE1889:
 11940              	.LBE1898:
 11941              	.LBE1904:
 11942              	.LBE2250:
 11943              	.LBE2262:
 11944              	.LBE2273:
 371:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 11945              		.loc 20 371 13 is_stmt 1 view .LVU3343
 372:Veno-Echo.cpp ****                 {
 11946              		.loc 20 372 17 view .LVU3344
 372:Veno-Echo.cpp ****                 {
 11947              		.loc 20 372 30 is_stmt 0 view .LVU3345
 11948 0b60 2B4B     		ldr	r3, .L651+100
 372:Veno-Echo.cpp ****                 {
 11949              		.loc 20 372 17 view .LVU3346
 11950 0b62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11951 0b64 022B     		cmp	r3, #2
 11952 0b66 3FF47EAA 		beq	.L504
 374:Veno-Echo.cpp ****                 }
 11953              		.loc 20 374 21 is_stmt 1 view .LVU3347
 374:Veno-Echo.cpp ****                 }
 11954              		.loc 20 374 39 is_stmt 0 view .LVU3348
 11955 0b6a FFF7FEFF 		bl	_Z18Update_filterXfadev
 11956              	.LVL750:
 374:Veno-Echo.cpp ****                 }
 11957              		.loc 20 374 39 view .LVU3349
 11958 0b6e FFF77ABA 		b	.L504
 11959              	.LVL751:
 11960              	.L520:
 291:Veno-Echo.cpp ****                 Update_Buttons();
 11961              		.loc 20 291 13 is_stmt 1 view .LVU3350
 292:Veno-Echo.cpp ****                 GetModCV();
 11962              		.loc 20 292 17 view .LVU3351
 292:Veno-Echo.cpp ****                 GetModCV();
 11963              		.loc 20 292 31 is_stmt 0 view .LVU3352
 11964 0b72 FFF7FEFF 		bl	_Z14Update_Buttonsv
 11965              	.LVL752:
 293:Veno-Echo.cpp ****                 Update_DelayBaseTempo();
 11966              		.loc 20 293 17 is_stmt 1 view .LVU3353
 293:Veno-Echo.cpp ****                 Update_DelayBaseTempo();
 11967              		.loc 20 293 25 is_stmt 0 view .LVU3354
 11968 0b76 FFF7FEFF 		bl	_Z8GetModCVv
 11969              	.LVL753:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 363


 294:Veno-Echo.cpp ****                 Update_DelayTempoLEDs();
 11970              		.loc 20 294 17 is_stmt 1 view .LVU3355
 294:Veno-Echo.cpp ****                 Update_DelayTempoLEDs();
 11971              		.loc 20 294 38 is_stmt 0 view .LVU3356
 11972 0b7a FFF7FEFF 		bl	_Z21Update_DelayBaseTempov
 11973              	.LVL754:
 295:Veno-Echo.cpp ****             break;
 11974              		.loc 20 295 17 is_stmt 1 view .LVU3357
 295:Veno-Echo.cpp ****             break;
 11975              		.loc 20 295 38 is_stmt 0 view .LVU3358
 11976 0b7e FFF7FEFF 		bl	_Z21Update_DelayTempoLEDsv
 11977              	.LVL755:
 296:Veno-Echo.cpp **** 
 11978              		.loc 20 296 13 is_stmt 1 view .LVU3359
 11979 0b82 FFF770BA 		b	.L504
 11980              	.LVL756:
 11981              	.L518:
 302:Veno-Echo.cpp ****                 if(saveState != SAVING)
 11982              		.loc 20 302 13 view .LVU3360
 303:Veno-Echo.cpp ****                 {
 11983              		.loc 20 303 17 view .LVU3361
 303:Veno-Echo.cpp ****                 {
 11984              		.loc 20 303 30 is_stmt 0 view .LVU3362
 11985 0b86 224B     		ldr	r3, .L651+100
 303:Veno-Echo.cpp ****                 {
 11986              		.loc 20 303 17 view .LVU3363
 11987 0b88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11988 0b8a 022B     		cmp	r3, #2
 11989 0b8c 3FF46BAA 		beq	.L504
 305:Veno-Echo.cpp ****                 }
 11990              		.loc 20 305 21 is_stmt 1 view .LVU3364
 305:Veno-Echo.cpp ****                 }
 11991              		.loc 20 305 38 is_stmt 0 view .LVU3365
 11992 0b90 FFF7FEFF 		bl	_Z17Update_DelayTimeLv
 11993              	.LVL757:
 305:Veno-Echo.cpp ****                 }
 11994              		.loc 20 305 38 view .LVU3366
 11995 0b94 FFF767BA 		b	.L504
 11996              	.LVL758:
 11997              	.L517:
 309:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 11998              		.loc 20 309 13 is_stmt 1 view .LVU3367
 310:Veno-Echo.cpp ****             break;
 11999              		.loc 20 310 17 view .LVU3368
 12000              	.LBB2274:
 12001              	.LBI2274:
 943:Veno-Echo.cpp **** {
 12002              		.loc 20 943 6 view .LVU3369
 12003              	.LBB2275:
 945:Veno-Echo.cpp **** }
 12004              		.loc 20 945 5 view .LVU3370
 945:Veno-Echo.cpp **** }
 12005              		.loc 20 945 36 is_stmt 0 view .LVU3371
 12006 0b98 0121     		movs	r1, #1
 12007              	.LVL759:
 945:Veno-Echo.cpp **** }
 12008              		.loc 20 945 36 view .LVU3372
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 364


 12009 0b9a 1E48     		ldr	r0, .L651+104
 12010              	.LVL760:
 945:Veno-Echo.cpp **** }
 12011              		.loc 20 945 36 view .LVU3373
 12012 0b9c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12013              	.LVL761:
 945:Veno-Echo.cpp **** }
 12014              		.loc 20 945 19 view .LVU3374
 12015 0ba0 1D4B     		ldr	r3, .L651+108
 12016 0ba2 83ED000A 		vstr.32	s0, [r3]
 946:Veno-Echo.cpp **** 
 12017              		.loc 20 946 1 view .LVU3375
 12018 0ba6 FFF75EBA 		b	.L504
 12019              	.L652:
 12020 0baa 00BF     		.align	2
 12021              	.L651:
 12022 0bac 00000000 		.word	.LANCHOR83
 12023 0bb0 CDCCCC3D 		.word	1036831949
 12024 0bb4 00000000 		.word	.LANCHOR49
 12025 0bb8 00000000 		.word	.LANCHOR50
 12026 0bbc 00000000 		.word	.LANCHOR124
 12027 0bc0 00000000 		.word	.LANCHOR125
 12028 0bc4 00000000 		.word	.LANCHOR37
 12029 0bc8 00000000 		.word	.LANCHOR38
 12030 0bcc 00000000 		.word	.LANCHOR122
 12031 0bd0 00000000 		.word	.LANCHOR123
 12032 0bd4 00000000 		.word	.LANCHOR128
 12033 0bd8 00000000 		.word	.LANCHOR129
 12034 0bdc 00000000 		.word	0
 12035 0be0 00000000 		.word	.LANCHOR47
 12036 0be4 00000000 		.word	.LANCHOR48
 12037 0be8 00000000 		.word	.LANCHOR120
 12038 0bec 00000000 		.word	.LANCHOR121
 12039 0bf0 00000000 		.word	.LANCHOR35
 12040 0bf4 00000000 		.word	.LANCHOR36
 12041 0bf8 00000000 		.word	.LANCHOR118
 12042 0bfc 00000000 		.word	.LANCHOR119
 12043 0c00 00000000 		.word	.LANCHOR126
 12044 0c04 00000000 		.word	.LANCHOR127
 12045 0c08 CDCC4C3E 		.word	1045220557
 12046 0c0c CDCC4CBE 		.word	3192704205
 12047 0c10 00000000 		.word	.LANCHOR110
 12048 0c14 18000000 		.word	.LANCHOR4+24
 12049 0c18 00000000 		.word	.LANCHOR17
 12050              	.LVL762:
 12051              	.L516:
 946:Veno-Echo.cpp **** 
 12052              		.loc 20 946 1 view .LVU3376
 12053              	.LBE2275:
 12054              	.LBE2274:
 313:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12055              		.loc 20 313 13 is_stmt 1 view .LVU3377
 314:Veno-Echo.cpp ****                 {
 12056              		.loc 20 314 17 view .LVU3378
 314:Veno-Echo.cpp ****                 {
 12057              		.loc 20 314 30 is_stmt 0 view .LVU3379
 12058 0c1c 2C4B     		ldr	r3, .L653
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 365


 314:Veno-Echo.cpp ****                 {
 12059              		.loc 20 314 17 view .LVU3380
 12060 0c1e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12061 0c20 022B     		cmp	r3, #2
 12062 0c22 3FF420AA 		beq	.L504
 316:Veno-Echo.cpp ****                 }
 12063              		.loc 20 316 21 is_stmt 1 view .LVU3381
 316:Veno-Echo.cpp ****                 }
 12064              		.loc 20 316 38 is_stmt 0 view .LVU3382
 12065 0c26 FFF7FEFF 		bl	_Z17Update_DelayTimeRv
 12066              	.LVL763:
 316:Veno-Echo.cpp ****                 }
 12067              		.loc 20 316 38 view .LVU3383
 12068 0c2a FFF71CBA 		b	.L504
 12069              	.LVL764:
 12070              	.L515:
 320:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 12071              		.loc 20 320 13 is_stmt 1 view .LVU3384
 321:Veno-Echo.cpp ****             break;
 12072              		.loc 20 321 17 view .LVU3385
 12073              	.LBB2276:
 12074              	.LBI2276:
1042:Veno-Echo.cpp **** {
 12075              		.loc 20 1042 6 view .LVU3386
 12076              	.LBB2277:
1044:Veno-Echo.cpp **** }
 12077              		.loc 20 1044 5 view .LVU3387
1044:Veno-Echo.cpp **** }
 12078              		.loc 20 1044 35 is_stmt 0 view .LVU3388
 12079 0c2e 0221     		movs	r1, #2
 12080              	.LVL765:
1044:Veno-Echo.cpp **** }
 12081              		.loc 20 1044 35 view .LVU3389
 12082 0c30 2848     		ldr	r0, .L653+4
 12083              	.LVL766:
1044:Veno-Echo.cpp **** }
 12084              		.loc 20 1044 35 view .LVU3390
 12085 0c32 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12086              	.LVL767:
1044:Veno-Echo.cpp **** }
 12087              		.loc 20 1044 18 view .LVU3391
 12088 0c36 284B     		ldr	r3, .L653+8
 12089 0c38 83ED000A 		vstr.32	s0, [r3]
1045:Veno-Echo.cpp **** void Update_feedbackL()
 12090              		.loc 20 1045 1 view .LVU3392
 12091 0c3c FFF713BA 		b	.L504
 12092              	.LVL768:
 12093              	.L514:
1045:Veno-Echo.cpp **** void Update_feedbackL()
 12094              		.loc 20 1045 1 view .LVU3393
 12095              	.LBE2277:
 12096              	.LBE2276:
 324:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12097              		.loc 20 324 13 is_stmt 1 view .LVU3394
 325:Veno-Echo.cpp ****                 {
 12098              		.loc 20 325 17 view .LVU3395
 325:Veno-Echo.cpp ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 366


 12099              		.loc 20 325 30 is_stmt 0 view .LVU3396
 12100 0c40 234B     		ldr	r3, .L653
 325:Veno-Echo.cpp ****                 {
 12101              		.loc 20 325 17 view .LVU3397
 12102 0c42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12103 0c44 022B     		cmp	r3, #2
 12104 0c46 3FF40EAA 		beq	.L504
 327:Veno-Echo.cpp ****                 }
 12105              		.loc 20 327 21 is_stmt 1 view .LVU3398
 327:Veno-Echo.cpp ****                 }
 12106              		.loc 20 327 37 is_stmt 0 view .LVU3399
 12107 0c4a FFF7FEFF 		bl	_Z16Update_feedbackLv
 12108              	.LVL769:
 327:Veno-Echo.cpp ****                 }
 12109              		.loc 20 327 37 view .LVU3400
 12110 0c4e FFF70ABA 		b	.L504
 12111              	.LVL770:
 12112              	.L513:
 331:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 12113              		.loc 20 331 13 is_stmt 1 view .LVU3401
 332:Veno-Echo.cpp ****             break;
 12114              		.loc 20 332 17 view .LVU3402
 12115              	.LBB2278:
 12116              	.LBI2278:
1131:Veno-Echo.cpp **** {
 12117              		.loc 20 1131 6 view .LVU3403
 12118              	.LBB2279:
1133:Veno-Echo.cpp **** }
 12119              		.loc 20 1133 5 view .LVU3404
1133:Veno-Echo.cpp **** }
 12120              		.loc 20 1133 35 is_stmt 0 view .LVU3405
 12121 0c52 0321     		movs	r1, #3
 12122              	.LVL771:
1133:Veno-Echo.cpp **** }
 12123              		.loc 20 1133 35 view .LVU3406
 12124 0c54 1F48     		ldr	r0, .L653+4
 12125              	.LVL772:
1133:Veno-Echo.cpp **** }
 12126              		.loc 20 1133 35 view .LVU3407
 12127 0c56 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12128              	.LVL773:
1133:Veno-Echo.cpp **** }
 12129              		.loc 20 1133 18 view .LVU3408
 12130 0c5a 204B     		ldr	r3, .L653+12
 12131 0c5c 83ED000A 		vstr.32	s0, [r3]
1134:Veno-Echo.cpp **** 
 12132              		.loc 20 1134 1 view .LVU3409
 12133 0c60 FFF701BA 		b	.L504
 12134              	.LVL774:
 12135              	.L512:
1134:Veno-Echo.cpp **** 
 12136              		.loc 20 1134 1 view .LVU3410
 12137              	.LBE2279:
 12138              	.LBE2278:
 335:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12139              		.loc 20 335 13 is_stmt 1 view .LVU3411
 336:Veno-Echo.cpp ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 367


 12140              		.loc 20 336 17 view .LVU3412
 336:Veno-Echo.cpp ****                 {
 12141              		.loc 20 336 30 is_stmt 0 view .LVU3413
 12142 0c64 1A4B     		ldr	r3, .L653
 336:Veno-Echo.cpp ****                 {
 12143              		.loc 20 336 17 view .LVU3414
 12144 0c66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12145 0c68 022B     		cmp	r3, #2
 12146 0c6a 3FF4FCA9 		beq	.L504
 338:Veno-Echo.cpp ****                 }
 12147              		.loc 20 338 21 is_stmt 1 view .LVU3415
 338:Veno-Echo.cpp ****                 }
 12148              		.loc 20 338 37 is_stmt 0 view .LVU3416
 12149 0c6e FFF7FEFF 		bl	_Z16Update_feedbackRv
 12150              	.LVL775:
 338:Veno-Echo.cpp ****                 }
 12151              		.loc 20 338 37 view .LVU3417
 12152 0c72 FFF7F8B9 		b	.L504
 12153              	.LVL776:
 12154              	.L511:
 342:Veno-Echo.cpp ****                 Update_drywet_CV();
 12155              		.loc 20 342 13 is_stmt 1 view .LVU3418
 343:Veno-Echo.cpp ****             break;
 12156              		.loc 20 343 17 view .LVU3419
 12157              	.LBB2280:
 12158              	.LBI2280:
1222:Veno-Echo.cpp **** {
 12159              		.loc 20 1222 6 view .LVU3420
 12160              	.LBB2281:
1224:Veno-Echo.cpp **** }
 12161              		.loc 20 1224 5 view .LVU3421
1224:Veno-Echo.cpp **** }
 12162              		.loc 20 1224 32 is_stmt 0 view .LVU3422
 12163 0c76 0421     		movs	r1, #4
 12164              	.LVL777:
1224:Veno-Echo.cpp **** }
 12165              		.loc 20 1224 32 view .LVU3423
 12166 0c78 1648     		ldr	r0, .L653+4
 12167              	.LVL778:
1224:Veno-Echo.cpp **** }
 12168              		.loc 20 1224 32 view .LVU3424
 12169 0c7a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12170              	.LVL779:
1224:Veno-Echo.cpp **** }
 12171              		.loc 20 1224 15 view .LVU3425
 12172 0c7e 184B     		ldr	r3, .L653+16
 12173 0c80 83ED000A 		vstr.32	s0, [r3]
1225:Veno-Echo.cpp **** 
 12174              		.loc 20 1225 1 view .LVU3426
 12175 0c84 FFF7EFB9 		b	.L504
 12176              	.LVL780:
 12177              	.L510:
1225:Veno-Echo.cpp **** 
 12178              		.loc 20 1225 1 view .LVU3427
 12179              	.LBE2281:
 12180              	.LBE2280:
 346:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 368


 12181              		.loc 20 346 13 is_stmt 1 view .LVU3428
 347:Veno-Echo.cpp ****                 {
 12182              		.loc 20 347 17 view .LVU3429
 347:Veno-Echo.cpp ****                 {
 12183              		.loc 20 347 30 is_stmt 0 view .LVU3430
 12184 0c88 114B     		ldr	r3, .L653
 347:Veno-Echo.cpp ****                 {
 12185              		.loc 20 347 17 view .LVU3431
 12186 0c8a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12187 0c8c 022B     		cmp	r3, #2
 12188 0c8e 3FF4EAA9 		beq	.L504
 349:Veno-Echo.cpp ****                 }
 12189              		.loc 20 349 21 is_stmt 1 view .LVU3432
 349:Veno-Echo.cpp ****                 }
 12190              		.loc 20 349 34 is_stmt 0 view .LVU3433
 12191 0c92 FFF7FEFF 		bl	_Z13Update_drywetv
 12192              	.LVL781:
 349:Veno-Echo.cpp ****                 }
 12193              		.loc 20 349 34 view .LVU3434
 12194 0c96 FFF7E6B9 		b	.L504
 12195              	.LVL782:
 12196              	.L509:
 353:Veno-Echo.cpp ****                 Update_width_CV();
 12197              		.loc 20 353 13 is_stmt 1 view .LVU3435
 354:Veno-Echo.cpp ****             break;
 12198              		.loc 20 354 17 view .LVU3436
 12199              	.LBB2282:
 12200              	.LBI2282:
1337:Veno-Echo.cpp **** {
 12201              		.loc 20 1337 6 view .LVU3437
 12202              	.LBB2283:
1339:Veno-Echo.cpp **** }
 12203              		.loc 20 1339 5 view .LVU3438
1339:Veno-Echo.cpp **** }
 12204              		.loc 20 1339 30 is_stmt 0 view .LVU3439
 12205 0c9a 0521     		movs	r1, #5
 12206              	.LVL783:
1339:Veno-Echo.cpp **** }
 12207              		.loc 20 1339 30 view .LVU3440
 12208 0c9c 0D48     		ldr	r0, .L653+4
 12209              	.LVL784:
1339:Veno-Echo.cpp **** }
 12210              		.loc 20 1339 30 view .LVU3441
 12211 0c9e FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12212              	.LVL785:
1339:Veno-Echo.cpp **** }
 12213              		.loc 20 1339 13 view .LVU3442
 12214 0ca2 104B     		ldr	r3, .L653+20
 12215 0ca4 83ED000A 		vstr.32	s0, [r3]
1340:Veno-Echo.cpp **** 
 12216              		.loc 20 1340 1 view .LVU3443
 12217 0ca8 FFF7DDB9 		b	.L504
 12218              	.LVL786:
 12219              	.L508:
1340:Veno-Echo.cpp **** 
 12220              		.loc 20 1340 1 view .LVU3444
 12221              	.LBE2283:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 369


 12222              	.LBE2282:
 357:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12223              		.loc 20 357 13 is_stmt 1 view .LVU3445
 358:Veno-Echo.cpp ****                 {
 12224              		.loc 20 358 17 view .LVU3446
 358:Veno-Echo.cpp ****                 {
 12225              		.loc 20 358 30 is_stmt 0 view .LVU3447
 12226 0cac 084B     		ldr	r3, .L653
 358:Veno-Echo.cpp ****                 {
 12227              		.loc 20 358 17 view .LVU3448
 12228 0cae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12229 0cb0 022B     		cmp	r3, #2
 12230 0cb2 3FF4D8A9 		beq	.L504
 360:Veno-Echo.cpp ****                 }
 12231              		.loc 20 360 21 is_stmt 1 view .LVU3449
 360:Veno-Echo.cpp ****                 }
 12232              		.loc 20 360 33 is_stmt 0 view .LVU3450
 12233 0cb6 FFF7FEFF 		bl	_Z12Update_widthv
 12234              	.LVL787:
 360:Veno-Echo.cpp ****                 }
 12235              		.loc 20 360 33 view .LVU3451
 12236 0cba FFF7D4B9 		b	.L504
 12237              	.LVL788:
 12238              	.L507:
 364:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12239              		.loc 20 364 13 is_stmt 1 view .LVU3452
 365:Veno-Echo.cpp ****                 {
 12240              		.loc 20 365 17 view .LVU3453
 365:Veno-Echo.cpp ****                 {
 12241              		.loc 20 365 30 is_stmt 0 view .LVU3454
 12242 0cbe 044B     		ldr	r3, .L653
 365:Veno-Echo.cpp ****                 {
 12243              		.loc 20 365 17 view .LVU3455
 12244 0cc0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12245 0cc2 022B     		cmp	r3, #2
 12246 0cc4 3FF4CFA9 		beq	.L504
 367:Veno-Echo.cpp ****                 }
 12247              		.loc 20 367 21 is_stmt 1 view .LVU3456
 367:Veno-Echo.cpp ****                 }
 12248              		.loc 20 367 41 is_stmt 0 view .LVU3457
 12249 0cc8 FFF7FEFF 		bl	_Z20Update_crossfeedbackv
 12250              	.LVL789:
 367:Veno-Echo.cpp ****                 }
 12251              		.loc 20 367 41 view .LVU3458
 12252 0ccc FFF7CBB9 		b	.L504
 12253              	.L654:
 12254              		.align	2
 12255              	.L653:
 12256 0cd0 00000000 		.word	.LANCHOR110
 12257 0cd4 18000000 		.word	.LANCHOR4+24
 12258 0cd8 00000000 		.word	.LANCHOR27
 12259 0cdc 00000000 		.word	.LANCHOR39
 12260 0ce0 00000000 		.word	.LANCHOR51
 12261 0ce4 00000000 		.word	.LANCHOR59
 12262              		.cfi_endproc
 12263              	.LFE4309:
 12265              		.section	.text._Z9HardLimitff,"ax",%progbits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 370


 12266              		.align	1
 12267              		.p2align 2,,3
 12268              		.global	_Z9HardLimitff
 12269              		.syntax unified
 12270              		.thumb
 12271              		.thumb_func
 12272              		.fpu fpv5-d16
 12274              	_Z9HardLimitff:
 12275              	.LVL790:
 12276              	.LFB4336:
1997:Veno-Echo.cpp ****     float returnval{};
 12277              		.loc 20 1997 1 is_stmt 1 view -0
 12278              		.cfi_startproc
 12279              		@ args = 0, pretend = 0, frame = 0
 12280              		@ frame_needed = 0, uses_anonymous_args = 0
 12281              		@ link register save eliminated.
1998:Veno-Echo.cpp ****     if (input > limit)
 12282              		.loc 20 1998 5 view .LVU3460
1999:Veno-Echo.cpp ****         returnval = limit;
 12283              		.loc 20 1999 5 view .LVU3461
 12284 0000 B4EEE00A 		vcmpe.f32	s0, s1
 12285 0004 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12286 0008 07DC     		bgt	.L656
2001:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 12287              		.loc 20 2001 10 view .LVU3462
2001:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 12288              		.loc 20 2001 28 is_stmt 0 view .LVU3463
 12289 000a F1EE600A 		vneg.f32	s1, s1
 12290              	.LVL791:
2001:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 12291              		.loc 20 2001 10 view .LVU3464
 12292 000e F4EEC00A 		vcmpe.f32	s1, s0
 12293 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
2004:Veno-Echo.cpp **** 
 12294              		.loc 20 2004 19 view .LVU3465
 12295 0016 70FE800A 		vselgt.f32	s1, s1, s0
 12296              	.L656:
 12297              	.LVL792:
2006:Veno-Echo.cpp **** }
 12298              		.loc 20 2006 5 is_stmt 1 view .LVU3466
2007:Veno-Echo.cpp **** 
 12299              		.loc 20 2007 1 is_stmt 0 view .LVU3467
 12300 001a B0EE600A 		vmov.f32	s0, s1
 12301              	.LVL793:
2007:Veno-Echo.cpp **** 
 12302              		.loc 20 2007 1 view .LVU3468
 12303 001e 7047     		bx	lr
 12304              		.cfi_endproc
 12305              	.LFE4336:
 12307              		.section	.text._Z10PotCVComboff,"ax",%progbits
 12308              		.align	1
 12309              		.p2align 2,,3
 12310              		.global	_Z10PotCVComboff
 12311              		.syntax unified
 12312              		.thumb
 12313              		.thumb_func
 12314              		.fpu fpv5-d16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 371


 12316              	_Z10PotCVComboff:
 12317              	.LVL794:
 12318              	.LFB4337:
2010:Veno-Echo.cpp ****     float output{};
 12319              		.loc 20 2010 1 is_stmt 1 view -0
 12320              		.cfi_startproc
 12321              		@ args = 0, pretend = 0, frame = 0
 12322              		@ frame_needed = 0, uses_anonymous_args = 0
 12323              		@ link register save eliminated.
2011:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 12324              		.loc 20 2011 5 view .LVU3470
2012:Veno-Echo.cpp **** 
 12325              		.loc 20 2012 5 view .LVU3471
2012:Veno-Echo.cpp **** 
 12326              		.loc 20 2012 39 is_stmt 0 view .LVU3472
 12327 0000 F7EE007A 		vmov.f32	s15, #1.0e+0
2012:Veno-Echo.cpp **** 
 12328              		.loc 20 2012 49 view .LVU3473
 12329 0004 F6EE006A 		vmov.f32	s13, #5.0e-1
2012:Veno-Echo.cpp **** 
 12330              		.loc 20 2012 12 view .LVU3474
 12331 0008 B0EE007A 		vmov.f32	s14, #2.0e+0
2012:Veno-Echo.cpp **** 
 12332              		.loc 20 2012 39 view .LVU3475
 12333 000c 77EEE00A 		vsub.f32	s1, s15, s1
 12334              	.LVL795:
2012:Veno-Echo.cpp **** 
 12335              		.loc 20 2012 49 view .LVU3476
 12336 0010 70EEE60A 		vsub.f32	s1, s1, s13
2012:Veno-Echo.cpp **** 
 12337              		.loc 20 2012 12 view .LVU3477
 12338 0014 A0EE870A 		vfma.f32	s0, s1, s14
 12339              	.LVL796:
2014:Veno-Echo.cpp ****     {
 12340              		.loc 20 2014 5 is_stmt 1 view .LVU3478
 12341 0018 B5EEC00A 		vcmpe.f32	s0, #0
 12342 001c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12343 0020 06D4     		bmi	.L662
2019:Veno-Echo.cpp ****     {
 12344              		.loc 20 2019 5 view .LVU3479
2021:Veno-Echo.cpp ****     }
 12345              		.loc 20 2021 16 is_stmt 0 view .LVU3480
 12346 0022 B4EE670A 		vcmp.f32	s0, s15
 12347 0026 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12348 002a 37FE800A 		vselgt.f32	s0, s15, s0
 12349              	.LVL797:
2021:Veno-Echo.cpp ****     }
 12350              		.loc 20 2021 16 view .LVU3481
 12351 002e 7047     		bx	lr
 12352              	.LVL798:
 12353              	.L662:
2016:Veno-Echo.cpp ****     }
 12354              		.loc 20 2016 16 view .LVU3482
 12355 0030 9FED010A 		vldr.32	s0, .L664
 12356              	.LVL799:
2024:Veno-Echo.cpp **** }
 12357              		.loc 20 2024 5 is_stmt 1 view .LVU3483
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 372


2025:Veno-Echo.cpp **** 
 12358              		.loc 20 2025 1 is_stmt 0 view .LVU3484
 12359 0034 7047     		bx	lr
 12360              	.L665:
 12361 0036 00BF     		.align	2
 12362              	.L664:
 12363 0038 00000000 		.word	0
 12364              		.cfi_endproc
 12365              	.LFE4337:
 12367              		.section	.text._Z16checkPickupStateffbb,"ax",%progbits
 12368              		.align	1
 12369              		.p2align 2,,3
 12370              		.global	_Z16checkPickupStateffbb
 12371              		.syntax unified
 12372              		.thumb
 12373              		.thumb_func
 12374              		.fpu fpv5-d16
 12376              	_Z16checkPickupStateffbb:
 12377              	.LVL800:
 12378              	.LFB4338:
2029:Veno-Echo.cpp ****     bool retval{};
 12379              		.loc 20 2029 1 is_stmt 1 view -0
 12380              		.cfi_startproc
 12381              		@ args = 0, pretend = 0, frame = 0
 12382              		@ frame_needed = 0, uses_anonymous_args = 0
 12383              		@ link register save eliminated.
2030:Veno-Echo.cpp ****     
 12384              		.loc 20 2030 5 view .LVU3486
2032:Veno-Echo.cpp ****     {
 12385              		.loc 20 2032 5 view .LVU3487
 12386 0000 69B1     		cbz	r1, .L667
2034:Veno-Echo.cpp ****         {
 12387              		.loc 20 2034 9 view .LVU3488
 12388              	.LVL801:
 12389              	.LBB2284:
 12390              	.LBI2284:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 12391              		.loc 21 75 3 view .LVU3489
 12392              	.LBB2285:
 12393              		.loc 21 76 5 view .LVU3490
 12394              		.loc 21 76 5 is_stmt 0 view .LVU3491
 12395              	.LBE2285:
 12396              	.LBE2284:
2034:Veno-Echo.cpp ****         {
 12397              		.loc 20 2034 15 view .LVU3492
 12398 0002 70EE600A 		vsub.f32	s1, s0, s1
 12399              	.LVL802:
2034:Veno-Echo.cpp ****         {
 12400              		.loc 20 2034 9 view .LVU3493
 12401 0006 DFED0D7A 		vldr.32	s15, .L670
 12402              	.LBB2287:
 12403              	.LBB2286:
 12404              		.loc 21 76 31 view .LVU3494
 12405 000a B0EEE00A 		vabs.f32	s0, s1
 12406              	.LVL803:
 12407              		.loc 21 76 31 view .LVU3495
 12408              	.LBE2286:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 373


 12409              	.LBE2287:
2034:Veno-Echo.cpp ****         {
 12410              		.loc 20 2034 9 view .LVU3496
 12411 000e B4EEE70A 		vcmpe.f32	s0, s15
 12412 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12413 0016 D4BF     		ite	le
 12414 0018 0120     		movle	r0, #1
 12415              	.LVL804:
2034:Veno-Echo.cpp ****         {
 12416              		.loc 20 2034 9 view .LVU3497
 12417 001a 0020     		movgt	r0, #0
 12418 001c 7047     		bx	lr
 12419              	.LVL805:
 12420              	.L667:
2046:Veno-Echo.cpp ****     {
 12421              		.loc 20 2046 5 is_stmt 1 view .LVU3498
 12422 001e 60B9     		cbnz	r0, .L668
2048:Veno-Echo.cpp ****         {
 12423              		.loc 20 2048 9 view .LVU3499
 12424              	.LVL806:
 12425              	.LBB2288:
 12426              	.LBI2288:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 12427              		.loc 21 75 3 view .LVU3500
 12428              	.LBB2289:
 12429              		.loc 21 76 5 view .LVU3501
 12430              		.loc 21 76 5 is_stmt 0 view .LVU3502
 12431              	.LBE2289:
 12432              	.LBE2288:
2048:Veno-Echo.cpp ****         {
 12433              		.loc 20 2048 15 view .LVU3503
 12434 0020 30EE600A 		vsub.f32	s0, s0, s1
 12435              	.LVL807:
2048:Veno-Echo.cpp ****         {
 12436              		.loc 20 2048 9 view .LVU3504
 12437 0024 DFED057A 		vldr.32	s15, .L670
 12438              	.LBB2291:
 12439              	.LBB2290:
 12440              		.loc 21 76 31 view .LVU3505
 12441 0028 B0EEC00A 		vabs.f32	s0, s0
 12442              	.LBE2290:
 12443              	.LBE2291:
2048:Veno-Echo.cpp ****         {
 12444              		.loc 20 2048 9 view .LVU3506
 12445 002c B4EEE70A 		vcmpe.f32	s0, s15
 12446 0030 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12447 0034 CCBF     		ite	gt
 12448 0036 0120     		movgt	r0, #1
 12449              	.LVL808:
2048:Veno-Echo.cpp ****         {
 12450              		.loc 20 2048 9 view .LVU3507
 12451 0038 0020     		movle	r0, #0
 12452              	.L668:
 12453              	.LVL809:
2065:Veno-Echo.cpp **** 
 12454              		.loc 20 2065 5 is_stmt 1 view .LVU3508
2067:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 374


 12455              		.loc 20 2067 1 is_stmt 0 view .LVU3509
 12456 003a 7047     		bx	lr
 12457              	.L671:
 12458              		.align	2
 12459              	.L670:
 12460 003c 0AD7A33B 		.word	1000593162
 12461              		.cfi_endproc
 12462              	.LFE4338:
 12464              		.section	.text._Z20checkPickupState_altff11pickupStateb,"ax",%progbits
 12465              		.align	1
 12466              		.p2align 2,,3
 12467              		.global	_Z20checkPickupState_altff11pickupStateb
 12468              		.syntax unified
 12469              		.thumb
 12470              		.thumb_func
 12471              		.fpu fpv5-d16
 12473              	_Z20checkPickupState_altff11pickupStateb:
 12474              	.LVL810:
 12475              	.LFB4339:
2071:Veno-Echo.cpp ****     pickupState retval{};
 12476              		.loc 20 2071 1 is_stmt 1 view -0
 12477              		.cfi_startproc
 12478              		@ args = 0, pretend = 0, frame = 0
 12479              		@ frame_needed = 0, uses_anonymous_args = 0
 12480              		@ link register save eliminated.
2072:Veno-Echo.cpp **** 
 12481              		.loc 20 2072 5 view .LVU3511
2074:Veno-Echo.cpp ****     {
 12482              		.loc 20 2074 5 view .LVU3512
 12483 0000 A1B1     		cbz	r1, .L673
2076:Veno-Echo.cpp ****         {
 12484              		.loc 20 2076 9 view .LVU3513
2076:Veno-Echo.cpp ****         {
 12485              		.loc 20 2076 31 is_stmt 0 view .LVU3514
 12486 0002 DFED1A7A 		vldr.32	s15, .L690
 12487 0006 30EEE77A 		vsub.f32	s14, s1, s15
2076:Veno-Echo.cpp ****         {
 12488              		.loc 20 2076 9 view .LVU3515
 12489 000a B4EEC07A 		vcmpe.f32	s14, s0
 12490 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12491 0012 01DD     		ble	.L688
 12492 0014 0020     		movs	r0, #0
 12493              	.LVL811:
2076:Veno-Echo.cpp ****         {
 12494              		.loc 20 2076 9 view .LVU3516
 12495 0016 7047     		bx	lr
 12496              	.LVL812:
 12497              	.L688:
2081:Veno-Echo.cpp ****         {
 12498              		.loc 20 2081 14 is_stmt 1 view .LVU3517
2081:Veno-Echo.cpp ****         {
 12499              		.loc 20 2081 36 is_stmt 0 view .LVU3518
 12500 0018 70EEA70A 		vadd.f32	s1, s1, s15
 12501              	.LVL813:
2081:Veno-Echo.cpp ****         {
 12502              		.loc 20 2081 14 view .LVU3519
 12503 001c F4EEC00A 		vcmpe.f32	s1, s0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 375


 12504 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
2088:Veno-Echo.cpp ****         }
 12505              		.loc 20 2088 20 view .LVU3520
 12506 0024 4CBF     		ite	mi
 12507 0026 0120     		movmi	r0, #1
 12508              	.LVL814:
2088:Veno-Echo.cpp ****         }
 12509              		.loc 20 2088 20 view .LVU3521
 12510 0028 0220     		movpl	r0, #2
 12511 002a 7047     		bx	lr
 12512              	.LVL815:
 12513              	.L673:
2094:Veno-Echo.cpp ****         {
 12514              		.loc 20 2094 9 is_stmt 1 view .LVU3522
 12515 002c 0128     		cmp	r0, #1
 12516 002e 04D0     		beq	.L676
 12517 0030 0228     		cmp	r0, #2
 12518 0032 01D0     		beq	.L674
 12519 0034 68B1     		cbz	r0, .L689
 12520 0036 0846     		mov	r0, r1
 12521              	.LVL816:
 12522              	.L674:
2115:Veno-Echo.cpp **** }
 12523              		.loc 20 2115 5 view .LVU3523
2116:Veno-Echo.cpp **** 
 12524              		.loc 20 2116 1 is_stmt 0 view .LVU3524
 12525 0038 7047     		bx	lr
 12526              	.LVL817:
 12527              	.L676:
2103:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
 12528              		.loc 20 2103 13 is_stmt 1 view .LVU3525
2104:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12529              		.loc 20 2104 13 view .LVU3526
2104:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12530              		.loc 20 2104 35 is_stmt 0 view .LVU3527
 12531 003a DFED0C7A 		vldr.32	s15, .L690
 12532 003e 70EEA70A 		vadd.f32	s1, s1, s15
 12533              	.LVL818:
2104:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12534              		.loc 20 2104 13 view .LVU3528
 12535 0042 F4EEC00A 		vcmpe.f32	s1, s0
 12536 0046 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12537 004a CCBF     		ite	gt
 12538 004c 0220     		movgt	r0, #2
 12539              	.LVL819:
2104:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12540              		.loc 20 2104 13 view .LVU3529
 12541 004e 0120     		movle	r0, #1
 12542 0050 7047     		bx	lr
 12543              	.LVL820:
 12544              	.L689:
2096:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
 12545              		.loc 20 2096 13 is_stmt 1 view .LVU3530
2097:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12546              		.loc 20 2097 13 view .LVU3531
2097:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12547              		.loc 20 2097 35 is_stmt 0 view .LVU3532
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 376


 12548 0052 DFED067A 		vldr.32	s15, .L690
 12549 0056 70EEE70A 		vsub.f32	s1, s1, s15
 12550              	.LVL821:
2097:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12551              		.loc 20 2097 13 view .LVU3533
 12552 005a F4EEC00A 		vcmpe.f32	s1, s0
 12553 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12554 0062 4CBF     		ite	mi
 12555 0064 0220     		movmi	r0, #2
 12556              	.LVL822:
2097:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12557              		.loc 20 2097 13 view .LVU3534
 12558 0066 0020     		movpl	r0, #0
 12559 0068 7047     		bx	lr
 12560              	.L691:
 12561 006a 00BF     		.align	2
 12562              	.L690:
 12563 006c 0AD7A33B 		.word	1000593162
 12564              		.cfi_endproc
 12565              	.LFE4339:
 12567              		.section	.text._Z11GetTapRatio9TapRatios,"ax",%progbits
 12568              		.align	1
 12569              		.p2align 2,,3
 12570              		.global	_Z11GetTapRatio9TapRatios
 12571              		.syntax unified
 12572              		.thumb
 12573              		.thumb_func
 12574              		.fpu fpv5-d16
 12576              	_Z11GetTapRatio9TapRatios:
 12577              	.LVL823:
 12578              	.LFB4340:
2119:Veno-Echo.cpp **** double retVal{};
 12579              		.loc 20 2119 1 is_stmt 1 view -0
 12580              		.cfi_startproc
 12581              		@ args = 0, pretend = 0, frame = 0
 12582              		@ frame_needed = 0, uses_anonymous_args = 0
 12583              		@ link register save eliminated.
2120:Veno-Echo.cpp ****     switch(ratio)
 12584              		.loc 20 2120 1 view .LVU3536
2121:Veno-Echo.cpp ****     {
 12585              		.loc 20 2121 5 view .LVU3537
 12586 0000 0138     		subs	r0, r0, #1
 12587              	.LVL824:
2121:Veno-Echo.cpp ****     {
 12588              		.loc 20 2121 5 is_stmt 0 view .LVU3538
 12589 0002 C0B2     		uxtb	r0, r0
 12590 0004 0228     		cmp	r0, #2
 12591 0006 05D8     		bhi	.L694
 12592 0008 044B     		ldr	r3, .L695
 12593 000a 03EBC000 		add	r0, r3, r0, lsl #3
 12594 000e 90ED000B 		vldr.64	d0, [r0]
 12595 0012 7047     		bx	lr
 12596              	.L694:
2119:Veno-Echo.cpp **** double retVal{};
 12597              		.loc 20 2119 1 view .LVU3539
 12598 0014 B7EE000B 		vmov.f64	d0, #1.0e+0
 12599              	.LVL825:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 377


 12600              		.loc 20 2144 1 is_stmt 1 view .LVU3540
2145:Veno-Echo.cpp **** }
 12601              		.loc 20 2145 1 is_stmt 0 view .LVU3541
 12602 0018 7047     		bx	lr
 12603              	.L696:
 12604 001a 00BF     		.align	2
 12605              	.L695:
 12606 001c 00000000 		.word	.LANCHOR25
 12607              		.cfi_endproc
 12608              	.LFE4340:
 12610              		.section	.text.startup._GLOBAL__sub_I_delMemsL,"ax",%progbits
 12611              		.align	1
 12612              		.p2align 2,,3
 12613              		.syntax unified
 12614              		.thumb
 12615              		.thumb_func
 12616              		.fpu fpv5-d16
 12618              	_GLOBAL__sub_I_delMemsL:
 12619              	.LFB4919:
 12620              		.loc 20 2145 1 is_stmt 1 view -0
 12621              		.cfi_startproc
 12622              		@ args = 0, pretend = 0, frame = 0
 12623              		@ frame_needed = 0, uses_anonymous_args = 0
 12624              	.LBB2448:
 12625              	.LBI2448:
 12626              		.loc 20 2145 1 view .LVU3543
 12627              	.LVL826:
 12628              	.LBB2449:
 12629              	.LBB2450:
 12630              	.LBI2450:
  21:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 12631              		.loc 2 21 5 view .LVU3544
 12632              	.LBB2451:
 12633              	.LBB2452:
 12634              	.LBI2452:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12635              		.loc 6 36 5 view .LVU3545
 12636              	.LBE2452:
 12637              	.LBE2451:
 12638              	.LBE2450:
 12639              	.LBE2449:
 12640              	.LBE2448:
 12641              		.loc 20 2145 1 is_stmt 0 view .LVU3546
 12642 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 12643              		.cfi_def_cfa_offset 24
 12644              		.cfi_offset 4, -24
 12645              		.cfi_offset 5, -20
 12646              		.cfi_offset 6, -16
 12647              		.cfi_offset 7, -12
 12648              		.cfi_offset 8, -8
 12649              		.cfi_offset 14, -4
 12650              	.LBB2571:
 12651              	.LBB2567:
 12652              	.LBB2467:
 12653              	.LBB2465:
 12654              	.LBB2457:
 12655              	.LBB2453:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 378


 12656              	.LBB2454:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12657              		.loc 6 36 35 view .LVU3547
 12658 0004 9748     		ldr	r0, .L699
 12659 0006 0026     		movs	r6, #0
 12660              	.LBE2454:
 12661              	.LBE2453:
 12662              	.LBE2457:
 12663              	.LBE2465:
 12664              	.LBE2467:
 12665              		.file 26 "Veno-Echo.h"
   1:Veno-Echo.h   **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.h   **** // 
   3:Veno-Echo.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.h   **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.h   **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.h   **** // 
  10:Veno-Echo.h   **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.h   **** // all copies or substantial portions of the Software.
  12:Veno-Echo.h   **** // 
  13:Veno-Echo.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.h   **** // THE SOFTWARE.
  20:Veno-Echo.h   **** // 
  21:Veno-Echo.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.h   **** 
  23:Veno-Echo.h   **** #ifndef VENO_ECHO_H
  24:Veno-Echo.h   **** #define VENO_ECHO_H
  25:Veno-Echo.h   **** 
  26:Veno-Echo.h   **** //defines for HW pins:
  27:Veno-Echo.h   **** 
  28:Veno-Echo.h   **** 
  29:Veno-Echo.h   **** 
  30:Veno-Echo.h   **** #include "daisy_seed.h"
  31:Veno-Echo.h   **** using namespace daisy;
  32:Veno-Echo.h   **** 
  33:Veno-Echo.h   **** static DaisySeed hw;
 12666              		.loc 26 33 18 view .LVU3548
 12667 0008 974C     		ldr	r4, .L699+4
  40:Veno-Echo.cpp **** static Svf LPF_R;
 12668              		.loc 20 40 12 view .LVU3549
 12669 000a 984D     		ldr	r5, .L699+8
 12670              		.loc 26 33 18 view .LVU3550
 12671 000c 2246     		mov	r2, r4
 12672 000e 9849     		ldr	r1, .L699+12
 12673              	.LBB2468:
 12674              	.LBB2466:
 12675              	.LBB2458:
 12676              	.LBB2456:
 12677              	.LBB2455:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 379


  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12678              		.loc 6 36 35 view .LVU3551
 12679 0010 4661     		str	r6, [r0, #20]
 12680              	.LVL827:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12681              		.loc 6 36 35 view .LVU3552
 12682              	.LBE2455:
 12683              	.LBE2456:
 12684              	.LBE2458:
 12685              	.LBB2459:
 12686              	.LBI2459:
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 12687              		.loc 5 84 5 is_stmt 1 view .LVU3553
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 12688              		.loc 5 84 5 is_stmt 0 view .LVU3554
 12689              	.LBE2459:
 12690              	.LBB2460:
 12691              	.LBI2460:
 12692              		.file 27 "../libdaisy/src/per/dac.h"
   1:../libdaisy/src/per/dac.h **** #pragma once
   2:../libdaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../libdaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../libdaisy/src/per/dac.h **** 
   5:../libdaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../libdaisy/src/per/dac.h **** 
   7:../libdaisy/src/per/dac.h **** namespace daisy
   8:../libdaisy/src/per/dac.h **** {
   9:../libdaisy/src/per/dac.h **** /** DAC handle for Built-in DAC Peripheral 
  10:../libdaisy/src/per/dac.h ****  ** 
  11:../libdaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  12:../libdaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  13:../libdaisy/src/per/dac.h ****  **
  14:../libdaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal periphearls is also not supported.
  15:../libdaisy/src/per/dac.h ****  **
  16:../libdaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  17:../libdaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  18:../libdaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  19:../libdaisy/src/per/dac.h ****  ***/
  20:../libdaisy/src/per/dac.h **** class DacHandle
  21:../libdaisy/src/per/dac.h **** {
  22:../libdaisy/src/per/dac.h ****   public:
  23:../libdaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  24:../libdaisy/src/per/dac.h ****     enum class Result
  25:../libdaisy/src/per/dac.h ****     {
  26:../libdaisy/src/per/dac.h ****         OK,
  27:../libdaisy/src/per/dac.h ****         ERR,
  28:../libdaisy/src/per/dac.h ****     };
  29:../libdaisy/src/per/dac.h **** 
  30:../libdaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  31:../libdaisy/src/per/dac.h ****     enum class Channel
  32:../libdaisy/src/per/dac.h ****     {
  33:../libdaisy/src/per/dac.h ****         ONE,
  34:../libdaisy/src/per/dac.h ****         TWO,
  35:../libdaisy/src/per/dac.h ****         BOTH,
  36:../libdaisy/src/per/dac.h ****     };
  37:../libdaisy/src/per/dac.h **** 
  38:../libdaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 380


  39:../libdaisy/src/per/dac.h ****      **
  40:../libdaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  41:../libdaisy/src/per/dac.h ****      **
  42:../libdaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  43:../libdaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  44:../libdaisy/src/per/dac.h ****      ***/
  45:../libdaisy/src/per/dac.h ****     enum class Mode
  46:../libdaisy/src/per/dac.h ****     {
  47:../libdaisy/src/per/dac.h ****         POLLING,
  48:../libdaisy/src/per/dac.h ****         DMA,
  49:../libdaisy/src/per/dac.h ****     };
  50:../libdaisy/src/per/dac.h **** 
  51:../libdaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  52:../libdaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  53:../libdaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  54:../libdaisy/src/per/dac.h ****      ***/
  55:../libdaisy/src/per/dac.h ****     enum class BitDepth
  56:../libdaisy/src/per/dac.h ****     {
  57:../libdaisy/src/per/dac.h ****         BITS_8,
  58:../libdaisy/src/per/dac.h ****         BITS_12
  59:../libdaisy/src/per/dac.h ****     };
  60:../libdaisy/src/per/dac.h **** 
  61:../libdaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  62:../libdaisy/src/per/dac.h ****     enum class BufferState
  63:../libdaisy/src/per/dac.h ****     {
  64:../libdaisy/src/per/dac.h ****         ENABLED,
  65:../libdaisy/src/per/dac.h ****         DISABLED,
  66:../libdaisy/src/per/dac.h ****     };
  67:../libdaisy/src/per/dac.h **** 
  68:../libdaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  69:../libdaisy/src/per/dac.h ****     struct Config
  70:../libdaisy/src/per/dac.h ****     {
  71:../libdaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  72:../libdaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  73:../libdaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  74:../libdaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  75:../libdaisy/src/per/dac.h ****         uint32_t target_samplerate;
  76:../libdaisy/src/per/dac.h **** 
  77:../libdaisy/src/per/dac.h ****         Channel     chn;
  78:../libdaisy/src/per/dac.h ****         Mode        mode;
  79:../libdaisy/src/per/dac.h ****         BitDepth    bitdepth;
  80:../libdaisy/src/per/dac.h ****         BufferState buff_state;
  81:../libdaisy/src/per/dac.h ****     };
  82:../libdaisy/src/per/dac.h **** 
  83:../libdaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 12693              		.loc 27 83 5 is_stmt 1 view .LVU3555
 12694              	.LBB2461:
 12695              	.LBB2462:
 12696              		.loc 27 83 33 is_stmt 0 view .LVU3556
 12697 0012 0662     		str	r6, [r0, #32]
 12698              	.LVL828:
 12699              		.loc 27 83 33 view .LVU3557
 12700              	.LBE2462:
 12701              	.LBE2461:
 12702              	.LBE2460:
 12703              	.LBB2463:
 12704              	.LBI2463:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 381


  40:../libdaisy/src/hid/usb.h **** 
 12705              		.loc 4 40 5 is_stmt 1 view .LVU3558
  40:../libdaisy/src/hid/usb.h **** 
 12706              		.loc 4 40 5 is_stmt 0 view .LVU3559
 12707              	.LBE2463:
 12708              	.LBB2464:
 12709              	.LBI2464:
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 12710              		.loc 3 56 5 is_stmt 1 view .LVU3560
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 12711              		.loc 3 56 5 is_stmt 0 view .LVU3561
 12712              	.LBE2464:
 12713              	.LBE2466:
 12714              	.LBE2468:
 12715              		.loc 26 33 18 view .LVU3562
 12716 0014 FFF7FEFF 		bl	__aeabi_atexit
 12717              	.LVL829:
 12718              	.LBB2469:
 12719              	.LBI2469:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12720              		.loc 9 21 5 is_stmt 1 view .LVU3563
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12721              		.loc 9 21 5 is_stmt 0 view .LVU3564
 12722              	.LBE2469:
  40:Veno-Echo.cpp **** static Svf LPF_R;
 12723              		.loc 20 40 12 view .LVU3565
 12724 0018 2246     		mov	r2, r4
 12725 001a 2946     		mov	r1, r5
 12726 001c 9548     		ldr	r0, .L699+16
 12727 001e FFF7FEFF 		bl	__aeabi_atexit
 12728              	.LVL830:
 12729              	.LBB2470:
 12730              	.LBI2470:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12731              		.loc 9 21 5 is_stmt 1 view .LVU3566
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12732              		.loc 9 21 5 is_stmt 0 view .LVU3567
 12733              	.LBE2470:
  41:Veno-Echo.cpp **** static Svf HPF_L;
 12734              		.loc 20 41 12 view .LVU3568
 12735 0022 2246     		mov	r2, r4
 12736 0024 2946     		mov	r1, r5
 12737 0026 9448     		ldr	r0, .L699+20
 12738 0028 FFF7FEFF 		bl	__aeabi_atexit
 12739              	.LVL831:
 12740              	.LBB2471:
 12741              	.LBI2471:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12742              		.loc 9 21 5 is_stmt 1 view .LVU3569
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12743              		.loc 9 21 5 is_stmt 0 view .LVU3570
 12744              	.LBE2471:
  42:Veno-Echo.cpp **** static Svf HPF_R;
 12745              		.loc 20 42 12 view .LVU3571
 12746 002c 2246     		mov	r2, r4
 12747 002e 2946     		mov	r1, r5
 12748 0030 9248     		ldr	r0, .L699+24
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 382


 12749 0032 FFF7FEFF 		bl	__aeabi_atexit
 12750              	.LVL832:
 12751              	.LBB2472:
 12752              	.LBI2472:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12753              		.loc 9 21 5 is_stmt 1 view .LVU3572
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12754              		.loc 9 21 5 is_stmt 0 view .LVU3573
 12755              	.LBE2472:
  43:Veno-Echo.cpp **** 
 12756              		.loc 20 43 12 view .LVU3574
 12757 0036 2246     		mov	r2, r4
 12758 0038 2946     		mov	r1, r5
 12759 003a 9148     		ldr	r0, .L699+28
 12760 003c FFF7FEFF 		bl	__aeabi_atexit
 12761              	.LVL833:
 12762              	.LBB2473:
 12763              	.LBI2473:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12764              		.loc 9 21 5 is_stmt 1 view .LVU3575
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12765              		.loc 9 21 5 is_stmt 0 view .LVU3576
 12766              	.LBE2473:
  45:Veno-Echo.cpp **** static Svf LPF_R_post;
 12767              		.loc 20 45 12 view .LVU3577
 12768 0040 2246     		mov	r2, r4
 12769 0042 2946     		mov	r1, r5
 12770 0044 8F48     		ldr	r0, .L699+32
 12771 0046 FFF7FEFF 		bl	__aeabi_atexit
 12772              	.LVL834:
 12773              	.LBB2474:
 12774              	.LBI2474:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12775              		.loc 9 21 5 is_stmt 1 view .LVU3578
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12776              		.loc 9 21 5 is_stmt 0 view .LVU3579
 12777              	.LBE2474:
  46:Veno-Echo.cpp **** static Svf HPF_L_post;
 12778              		.loc 20 46 12 view .LVU3580
 12779 004a 2246     		mov	r2, r4
 12780 004c 2946     		mov	r1, r5
 12781 004e 8E48     		ldr	r0, .L699+36
 12782 0050 FFF7FEFF 		bl	__aeabi_atexit
 12783              	.LVL835:
 12784              	.LBB2475:
 12785              	.LBI2475:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12786              		.loc 9 21 5 is_stmt 1 view .LVU3581
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12787              		.loc 9 21 5 is_stmt 0 view .LVU3582
 12788              	.LBE2475:
  47:Veno-Echo.cpp **** static Svf HPF_R_post;
 12789              		.loc 20 47 12 view .LVU3583
 12790 0054 2246     		mov	r2, r4
 12791 0056 2946     		mov	r1, r5
 12792 0058 8C48     		ldr	r0, .L699+40
 12793 005a FFF7FEFF 		bl	__aeabi_atexit
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 383


 12794              	.LVL836:
 12795              	.LBB2476:
 12796              	.LBI2476:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12797              		.loc 9 21 5 is_stmt 1 view .LVU3584
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12798              		.loc 9 21 5 is_stmt 0 view .LVU3585
 12799              	.LBE2476:
  48:Veno-Echo.cpp **** 
 12800              		.loc 20 48 12 view .LVU3586
 12801 005e 2246     		mov	r2, r4
 12802 0060 2946     		mov	r1, r5
 12803 0062 8B48     		ldr	r0, .L699+44
 12804 0064 FFF7FEFF 		bl	__aeabi_atexit
 12805              	.LVL837:
 12806              	.LBB2477:
 12807              	.LBI2477:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12808              		.loc 8 15 5 is_stmt 1 view .LVU3587
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12809              		.loc 8 15 5 is_stmt 0 view .LVU3588
 12810              	.LBE2477:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 12811              		.loc 20 50 19 view .LVU3589
 12812 0068 2246     		mov	r2, r4
 12813 006a 8A49     		ldr	r1, .L699+48
 12814              	.LBB2478:
 12815              	.LBB2479:
 12816              	.LBB2480:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12817              		.loc 12 45 13 view .LVU3590
 12818 006c 0025     		movs	r5, #0
 12819              	.LBE2480:
 12820              	.LBE2479:
 12821              	.LBE2478:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 12822              		.loc 20 50 19 view .LVU3591
 12823 006e 8A48     		ldr	r0, .L699+52
 12824 0070 FFF7FEFF 		bl	__aeabi_atexit
 12825              	.LVL838:
 12826              	.LBB2485:
 12827              	.LBI2478:
  43:envFollow.h   ****     {
 12828              		.loc 12 43 5 is_stmt 1 view .LVU3592
 12829              	.LBB2483:
 12830              	.LBB2481:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12831              		.loc 12 45 9 view .LVU3593
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12832              		.loc 12 48 11 is_stmt 0 view .LVU3594
 12833 0074 894F     		ldr	r7, .L699+56
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12834              		.loc 12 45 13 view .LVU3595
 12835 0076 8A48     		ldr	r0, .L699+60
 12836              	.LBE2481:
 12837              	.LBE2483:
 12838              	.LBE2485:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 384


  51:Veno-Echo.cpp **** 
 12839              		.loc 20 51 18 view .LVU3596
 12840 0078 2246     		mov	r2, r4
 12841 007a 8A49     		ldr	r1, .L699+64
 12842              	.LBB2486:
 12843              	.LBB2484:
 12844              	.LBB2482:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12845              		.loc 12 45 13 view .LVU3597
 12846 007c 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12847              		.loc 12 46 9 is_stmt 1 view .LVU3598
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12848              		.loc 12 46 20 is_stmt 0 view .LVU3599
 12849 007e 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12850              		.loc 12 47 9 is_stmt 1 view .LVU3600
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12851              		.loc 12 47 17 is_stmt 0 view .LVU3601
 12852 0080 C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12853              		.loc 12 48 9 is_stmt 1 view .LVU3602
  50:envFollow.h   ****     }  
 12854              		.loc 12 50 21 is_stmt 0 view .LVU3603
 12855 0082 8560     		str	r5, [r0, #8]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12856              		.loc 12 48 11 view .LVU3604
 12857 0084 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12858              		.loc 12 49 9 is_stmt 1 view .LVU3605
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12859              		.loc 12 49 15 is_stmt 0 view .LVU3606
 12860 0086 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 12861              		.loc 12 50 9 is_stmt 1 view .LVU3607
 12862              	.LVL839:
  50:envFollow.h   ****     }  
 12863              		.loc 12 50 9 is_stmt 0 view .LVU3608
 12864              	.LBE2482:
 12865              	.LBE2484:
 12866              	.LBE2486:
  51:Veno-Echo.cpp **** 
 12867              		.loc 20 51 18 view .LVU3609
 12868 0088 FFF7FEFF 		bl	__aeabi_atexit
 12869              	.LVL840:
 12870              	.LBB2487:
 12871              	.LBI2487:
  43:envFollow.h   ****     {
 12872              		.loc 12 43 5 is_stmt 1 view .LVU3610
 12873              	.LBB2488:
 12874              	.LBB2489:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12875              		.loc 12 45 9 view .LVU3611
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12876              		.loc 12 45 13 is_stmt 0 view .LVU3612
 12877 008c 8648     		ldr	r0, .L699+68
 12878              	.LBE2489:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 385


 12879              	.LBE2488:
 12880              	.LBE2487:
  53:Veno-Echo.cpp **** 
 12881              		.loc 20 53 16 view .LVU3613
 12882 008e DFF8E082 		ldr	r8, .L699+268
  51:Veno-Echo.cpp **** 
 12883              		.loc 20 51 27 view .LVU3614
 12884 0092 2246     		mov	r2, r4
 12885 0094 8349     		ldr	r1, .L699+64
 12886              	.LBB2492:
 12887              	.LBB2491:
 12888              	.LBB2490:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12889              		.loc 12 45 13 view .LVU3615
 12890 0096 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12891              		.loc 12 46 9 is_stmt 1 view .LVU3616
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12892              		.loc 12 46 20 is_stmt 0 view .LVU3617
 12893 0098 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12894              		.loc 12 47 9 is_stmt 1 view .LVU3618
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12895              		.loc 12 47 17 is_stmt 0 view .LVU3619
 12896 009a C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12897              		.loc 12 48 9 is_stmt 1 view .LVU3620
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12898              		.loc 12 48 11 is_stmt 0 view .LVU3621
 12899 009c 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12900              		.loc 12 49 9 is_stmt 1 view .LVU3622
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12901              		.loc 12 49 15 is_stmt 0 view .LVU3623
 12902 009e 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 12903              		.loc 12 50 9 is_stmt 1 view .LVU3624
  50:envFollow.h   ****     }  
 12904              		.loc 12 50 21 is_stmt 0 view .LVU3625
 12905 00a0 8560     		str	r5, [r0, #8]	@ float
 12906              	.LVL841:
  50:envFollow.h   ****     }  
 12907              		.loc 12 50 21 view .LVU3626
 12908              	.LBE2490:
 12909              	.LBE2491:
 12910              	.LBE2492:
  51:Veno-Echo.cpp **** 
 12911              		.loc 20 51 27 view .LVU3627
 12912 00a2 FFF7FEFF 		bl	__aeabi_atexit
 12913              	.LVL842:
 12914              	.LBB2493:
 12915              	.LBI2493:
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 12916              		.loc 11 14 5 is_stmt 1 view .LVU3628
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 12917              		.loc 11 14 5 is_stmt 0 view .LVU3629
 12918              	.LBE2493:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 386


  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 12919              		.loc 20 56 76 view .LVU3630
 12920 00a6 814F     		ldr	r7, .L699+72
  53:Veno-Echo.cpp **** 
 12921              		.loc 20 53 16 view .LVU3631
 12922 00a8 2246     		mov	r2, r4
 12923 00aa 4146     		mov	r1, r8
 12924 00ac 8048     		ldr	r0, .L699+76
 12925 00ae FFF7FEFF 		bl	__aeabi_atexit
 12926              	.LVL843:
 12927              	.LBB2494:
 12928              	.LBI2494:
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 12929              		.loc 11 14 5 is_stmt 1 view .LVU3632
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 12930              		.loc 11 14 5 is_stmt 0 view .LVU3633
 12931              	.LBE2494:
  53:Veno-Echo.cpp **** 
 12932              		.loc 20 53 29 view .LVU3634
 12933 00b2 2246     		mov	r2, r4
 12934 00b4 4146     		mov	r1, r8
 12935 00b6 7F48     		ldr	r0, .L699+80
 12936 00b8 FFF7FEFF 		bl	__aeabi_atexit
 12937              	.LVL844:
 12938              	.LBB2495:
 12939              	.LBI2495:
  48:delayline_multitap.h ****     {
 12940              		.loc 18 48 5 is_stmt 1 view .LVU3635
  48:delayline_multitap.h ****     {
 12941              		.loc 18 48 5 is_stmt 0 view .LVU3636
 12942              	.LBE2495:
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 12943              		.loc 20 59 80 view .LVU3637
 12944 00bc 7E4D     		ldr	r5, .L699+84
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 12945              		.loc 20 56 76 view .LVU3638
 12946 00be 2246     		mov	r2, r4
 12947 00c0 3946     		mov	r1, r7
 12948 00c2 7E48     		ldr	r0, .L699+88
 12949 00c4 FFF7FEFF 		bl	__aeabi_atexit
 12950              	.LVL845:
 12951              	.LBB2496:
 12952              	.LBI2496:
  48:delayline_multitap.h ****     {
 12953              		.loc 18 48 5 is_stmt 1 view .LVU3639
  48:delayline_multitap.h ****     {
 12954              		.loc 18 48 5 is_stmt 0 view .LVU3640
 12955              	.LBE2496:
  57:Veno-Echo.cpp **** 
 12956              		.loc 20 57 76 view .LVU3641
 12957 00c8 2246     		mov	r2, r4
 12958 00ca 3946     		mov	r1, r7
 12959 00cc 7C48     		ldr	r0, .L699+92
 12960 00ce FFF7FEFF 		bl	__aeabi_atexit
 12961              	.LVL846:
 12962              	.LBB2497:
 12963              	.LBI2497:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 387


  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12964              		.loc 19 38 5 is_stmt 1 view .LVU3642
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12965              		.loc 19 38 5 is_stmt 0 view .LVU3643
 12966              	.LBE2497:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 12967              		.loc 20 98 12 view .LVU3644
 12968 00d2 7C4F     		ldr	r7, .L699+96
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 12969              		.loc 20 59 80 view .LVU3645
 12970 00d4 2246     		mov	r2, r4
 12971 00d6 2946     		mov	r1, r5
 12972 00d8 7B48     		ldr	r0, .L699+100
 12973 00da FFF7FEFF 		bl	__aeabi_atexit
 12974              	.LVL847:
 12975              	.LBB2498:
 12976              	.LBI2498:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12977              		.loc 19 38 5 is_stmt 1 view .LVU3646
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12978              		.loc 19 38 5 is_stmt 0 view .LVU3647
 12979              	.LBE2498:
  60:Veno-Echo.cpp **** 
 12980              		.loc 20 60 80 view .LVU3648
 12981 00de 2246     		mov	r2, r4
 12982 00e0 2946     		mov	r1, r5
 12983 00e2 7A48     		ldr	r0, .L699+104
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12984              		.loc 20 102 11 view .LVU3649
 12985 00e4 7A4D     		ldr	r5, .L699+108
  60:Veno-Echo.cpp **** 
 12986              		.loc 20 60 80 view .LVU3650
 12987 00e6 FFF7FEFF 		bl	__aeabi_atexit
 12988              	.LVL848:
 12989              	.LBB2499:
 12990              	.LBI2499:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12991              		.loc 17 49 1 is_stmt 1 view .LVU3651
 12992              	.LBB2500:
 12993              	.LBB2501:
 12994              	.LBI2501:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 12995              		.loc 14 47 1 view .LVU3652
 12996              	.LBB2502:
 12997              	.LBB2503:
 12998              	.LBI2503:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12999              		.loc 16 24 5 view .LVU3653
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13000              		.loc 16 24 5 is_stmt 0 view .LVU3654
 13001              	.LBE2503:
 13002              	.LBB2504:
 13003              	.LBI2504:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 13004              		.loc 15 15 5 is_stmt 1 view .LVU3655
  15:oscillator_p.h ****     ~Oscillator_p() {}
 13005              		.loc 15 15 5 is_stmt 0 view .LVU3656
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 388


 13006              	.LBE2504:
 13007              	.LBE2502:
 13008              	.LBE2501:
 13009              	.LBE2500:
 13010              	.LBE2499:
 13011              	.LBE2567:
 13012              	.LBE2571:
  49:DelayMulti.h  **** ~DelayMulti() {}
 13013              		.loc 17 49 14 is_stmt 1 view .LVU3657
  49:DelayMulti.h  **** ~DelayMulti() {}
 13014              		.loc 17 49 14 view .LVU3658
 13015              	.LBB2572:
 13016              	.LBB2568:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 13017              		.loc 20 98 12 is_stmt 0 view .LVU3659
 13018 00ea 2246     		mov	r2, r4
 13019 00ec 3946     		mov	r1, r7
 13020 00ee 7948     		ldr	r0, .L699+112
 13021 00f0 FFF7FEFF 		bl	__aeabi_atexit
 13022              	.LVL849:
 13023              	.LBB2505:
 13024              	.LBI2505:
  49:DelayMulti.h  **** ~DelayMulti() {}
 13025              		.loc 17 49 1 is_stmt 1 view .LVU3660
 13026              	.LBB2506:
 13027              	.LBB2507:
 13028              	.LBI2507:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 13029              		.loc 14 47 1 view .LVU3661
 13030              	.LBB2508:
 13031              	.LBB2509:
 13032              	.LBI2509:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13033              		.loc 16 24 5 view .LVU3662
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13034              		.loc 16 24 5 is_stmt 0 view .LVU3663
 13035              	.LBE2509:
 13036              	.LBB2510:
 13037              	.LBI2510:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 13038              		.loc 15 15 5 is_stmt 1 view .LVU3664
  15:oscillator_p.h ****     ~Oscillator_p() {}
 13039              		.loc 15 15 5 is_stmt 0 view .LVU3665
 13040              	.LBE2510:
 13041              	.LBE2508:
 13042              	.LBE2507:
 13043              	.LBE2506:
 13044              	.LBE2505:
 13045              	.LBE2568:
 13046              	.LBE2572:
  49:DelayMulti.h  **** ~DelayMulti() {}
 13047              		.loc 17 49 14 is_stmt 1 view .LVU3666
  49:DelayMulti.h  **** ~DelayMulti() {}
 13048              		.loc 17 49 14 view .LVU3667
 13049              	.LBB2573:
 13050              	.LBB2569:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 389


 13051              		.loc 20 98 19 is_stmt 0 view .LVU3668
 13052 00f4 2246     		mov	r2, r4
 13053 00f6 3946     		mov	r1, r7
 13054 00f8 7748     		ldr	r0, .L699+116
 13055 00fa FFF7FEFF 		bl	__aeabi_atexit
 13056              	.LVL850:
 13057              	.LBB2511:
 13058              	.LBI2511:
  78:LEDs.h        ****     ~ButtonLED() {}
 13059              		.loc 14 78 5 is_stmt 1 view .LVU3669
 13060              	.LBB2512:
 13061              	.LBB2513:
 13062              	.LBI2513:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13063              		.loc 1 40 5 view .LVU3670
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13064              		.loc 1 40 5 is_stmt 0 view .LVU3671
 13065              	.LBE2513:
 13066              	.LBB2514:
 13067              	.LBI2514:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13068              		.loc 16 24 5 is_stmt 1 view .LVU3672
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13069              		.loc 16 24 5 is_stmt 0 view .LVU3673
 13070              	.LBE2514:
 13071              	.LBE2512:
 13072              	.LBE2511:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13073              		.loc 20 102 11 view .LVU3674
 13074 00fe 2246     		mov	r2, r4
 13075 0100 2946     		mov	r1, r5
 13076 0102 7648     		ldr	r0, .L699+120
 13077 0104 FFF7FEFF 		bl	__aeabi_atexit
 13078              	.LVL851:
 13079              	.LBB2515:
 13080              	.LBI2515:
  78:LEDs.h        ****     ~ButtonLED() {}
 13081              		.loc 14 78 5 is_stmt 1 view .LVU3675
 13082              	.LBB2516:
 13083              	.LBB2517:
 13084              	.LBI2517:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13085              		.loc 1 40 5 view .LVU3676
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13086              		.loc 1 40 5 is_stmt 0 view .LVU3677
 13087              	.LBE2517:
 13088              	.LBB2518:
 13089              	.LBI2518:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13090              		.loc 16 24 5 is_stmt 1 view .LVU3678
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13091              		.loc 16 24 5 is_stmt 0 view .LVU3679
 13092              	.LBE2518:
 13093              	.LBE2516:
 13094              	.LBE2515:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13095              		.loc 20 102 18 view .LVU3680
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 390


 13096 0108 2246     		mov	r2, r4
 13097 010a 2946     		mov	r1, r5
 13098 010c 7448     		ldr	r0, .L699+124
 13099 010e FFF7FEFF 		bl	__aeabi_atexit
 13100              	.LVL852:
 13101              	.LBB2519:
 13102              	.LBI2519:
  78:LEDs.h        ****     ~ButtonLED() {}
 13103              		.loc 14 78 5 is_stmt 1 view .LVU3681
 13104              	.LBB2520:
 13105              	.LBB2521:
 13106              	.LBI2521:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13107              		.loc 1 40 5 view .LVU3682
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13108              		.loc 1 40 5 is_stmt 0 view .LVU3683
 13109              	.LBE2521:
 13110              	.LBB2522:
 13111              	.LBI2522:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13112              		.loc 16 24 5 is_stmt 1 view .LVU3684
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13113              		.loc 16 24 5 is_stmt 0 view .LVU3685
 13114              	.LBE2522:
 13115              	.LBE2520:
 13116              	.LBE2519:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13117              		.loc 20 102 25 view .LVU3686
 13118 0112 2246     		mov	r2, r4
 13119 0114 2946     		mov	r1, r5
 13120 0116 7348     		ldr	r0, .L699+128
 13121 0118 FFF7FEFF 		bl	__aeabi_atexit
 13122              	.LVL853:
 13123              	.LBB2523:
 13124              	.LBI2523:
  78:LEDs.h        ****     ~ButtonLED() {}
 13125              		.loc 14 78 5 is_stmt 1 view .LVU3687
 13126              	.LBB2524:
 13127              	.LBB2525:
 13128              	.LBI2525:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13129              		.loc 1 40 5 view .LVU3688
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13130              		.loc 1 40 5 is_stmt 0 view .LVU3689
 13131              	.LBE2525:
 13132              	.LBB2526:
 13133              	.LBI2526:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13134              		.loc 16 24 5 is_stmt 1 view .LVU3690
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13135              		.loc 16 24 5 is_stmt 0 view .LVU3691
 13136              	.LBE2526:
 13137              	.LBE2524:
 13138              	.LBE2523:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13139              		.loc 20 102 34 view .LVU3692
 13140 011c 2246     		mov	r2, r4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 391


 13141 011e 2946     		mov	r1, r5
 13142 0120 7148     		ldr	r0, .L699+132
 13143 0122 FFF7FEFF 		bl	__aeabi_atexit
 13144              	.LVL854:
 13145              	.LBB2527:
 13146              	.LBI2527:
  78:LEDs.h        ****     ~ButtonLED() {}
 13147              		.loc 14 78 5 is_stmt 1 view .LVU3693
 13148              	.LBB2528:
 13149              	.LBB2529:
 13150              	.LBI2529:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13151              		.loc 1 40 5 view .LVU3694
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13152              		.loc 1 40 5 is_stmt 0 view .LVU3695
 13153              	.LBE2529:
 13154              	.LBB2530:
 13155              	.LBI2530:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13156              		.loc 16 24 5 is_stmt 1 view .LVU3696
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13157              		.loc 16 24 5 is_stmt 0 view .LVU3697
 13158              	.LBE2530:
 13159              	.LBE2528:
 13160              	.LBE2527:
 149:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 13161              		.loc 20 149 13 view .LVU3698
 13162 0126 714F     		ldr	r7, .L699+136
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13163              		.loc 20 102 44 view .LVU3699
 13164 0128 2246     		mov	r2, r4
 13165 012a 2946     		mov	r1, r5
 13166 012c 7048     		ldr	r0, .L699+140
 13167 012e FFF7FEFF 		bl	__aeabi_atexit
 13168              	.LVL855:
 13169              	.LBB2531:
 13170              	.LBI2531:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 13171              		.loc 14 47 1 is_stmt 1 view .LVU3700
 13172              	.LBB2532:
 13173              	.LBB2533:
 13174              	.LBI2533:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13175              		.loc 16 24 5 view .LVU3701
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13176              		.loc 16 24 5 is_stmt 0 view .LVU3702
 13177              	.LBE2533:
 13178              	.LBB2534:
 13179              	.LBI2534:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 13180              		.loc 15 15 5 is_stmt 1 view .LVU3703
  15:oscillator_p.h ****     ~Oscillator_p() {}
 13181              		.loc 15 15 5 is_stmt 0 view .LVU3704
 13182              	.LBE2534:
 13183              	.LBE2532:
 13184              	.LBE2531:
 103:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 392


 13185              		.loc 20 103 10 view .LVU3705
 13186 0132 2246     		mov	r2, r4
 13187 0134 6F49     		ldr	r1, .L699+144
 13188 0136 7048     		ldr	r0, .L699+148
 13189 0138 FFF7FEFF 		bl	__aeabi_atexit
 13190              	.LVL856:
 13191              	.LBB2535:
 13192              	.LBI2535:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13193              		.loc 7 38 5 is_stmt 1 view .LVU3706
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13194              		.loc 7 38 5 is_stmt 0 view .LVU3707
 13195              	.LBE2535:
 149:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 13196              		.loc 20 149 13 view .LVU3708
 13197 013c 2246     		mov	r2, r4
 13198 013e 3946     		mov	r1, r7
 13199 0140 6E48     		ldr	r0, .L699+152
 13200 0142 FFF7FEFF 		bl	__aeabi_atexit
 13201              	.LVL857:
 13202              	.LBB2536:
 13203              	.LBI2536:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13204              		.loc 7 38 5 is_stmt 1 view .LVU3709
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13205              		.loc 7 38 5 is_stmt 0 view .LVU3710
 13206              	.LBE2536:
 150:Veno-Echo.cpp **** 
 13207              		.loc 20 150 13 view .LVU3711
 13208 0146 2246     		mov	r2, r4
 13209 0148 3946     		mov	r1, r7
 13210 014a 6D48     		ldr	r0, .L699+156
 155:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 13211              		.loc 20 155 18 view .LVU3712
 13212 014c 6D4D     		ldr	r5, .L699+160
 150:Veno-Echo.cpp **** 
 13213              		.loc 20 150 13 view .LVU3713
 13214 014e FFF7FEFF 		bl	__aeabi_atexit
 13215              	.LVL858:
 13216              	.LBB2537:
 13217              	.LBI2537:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13218              		.loc 7 38 5 is_stmt 1 view .LVU3714
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13219              		.loc 7 38 5 is_stmt 0 view .LVU3715
 13220              	.LBE2537:
 152:Veno-Echo.cpp **** static Adsr HPF_Env;
 13221              		.loc 20 152 13 view .LVU3716
 13222 0152 2246     		mov	r2, r4
 13223 0154 3946     		mov	r1, r7
 13224 0156 6C48     		ldr	r0, .L699+164
 13225 0158 FFF7FEFF 		bl	__aeabi_atexit
 13226              	.LVL859:
 13227              	.LBB2538:
 13228              	.LBI2538:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13229              		.loc 7 38 5 is_stmt 1 view .LVU3717
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 393


  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13230              		.loc 7 38 5 is_stmt 0 view .LVU3718
 13231              	.LBE2538:
 153:Veno-Echo.cpp **** 
 13232              		.loc 20 153 13 view .LVU3719
 13233 015c 2246     		mov	r2, r4
 13234 015e 3946     		mov	r1, r7
 13235 0160 6A48     		ldr	r0, .L699+168
 13236 0162 FFF7FEFF 		bl	__aeabi_atexit
 13237              	.LVL860:
 13238              	.LBB2539:
 13239              	.LBI2539:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13240              		.loc 10 36 5 is_stmt 1 view .LVU3720
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13241              		.loc 10 36 5 is_stmt 0 view .LVU3721
 13242              	.LBE2539:
 155:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 13243              		.loc 20 155 18 view .LVU3722
 13244 0166 2246     		mov	r2, r4
 13245 0168 2946     		mov	r1, r5
 13246 016a 6948     		ldr	r0, .L699+172
 13247 016c FFF7FEFF 		bl	__aeabi_atexit
 13248              	.LVL861:
 13249              	.LBB2540:
 13250              	.LBI2540:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13251              		.loc 10 36 5 is_stmt 1 view .LVU3723
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13252              		.loc 10 36 5 is_stmt 0 view .LVU3724
 13253              	.LBE2540:
 156:Veno-Echo.cpp **** 
 13254              		.loc 20 156 18 view .LVU3725
 13255 0170 2246     		mov	r2, r4
 13256 0172 2946     		mov	r1, r5
 13257 0174 6748     		ldr	r0, .L699+176
 13258 0176 FFF7FEFF 		bl	__aeabi_atexit
 13259              	.LVL862:
 13260              	.LBB2541:
 13261              	.LBI2541:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13262              		.loc 10 36 5 is_stmt 1 view .LVU3726
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13263              		.loc 10 36 5 is_stmt 0 view .LVU3727
 13264              	.LBE2541:
 158:Veno-Echo.cpp **** 
 13265              		.loc 20 158 18 view .LVU3728
 13266 017a 2246     		mov	r2, r4
 13267 017c 2946     		mov	r1, r5
 13268 017e 6648     		ldr	r0, .L699+180
 13269 0180 FFF7FEFF 		bl	__aeabi_atexit
 13270              	.LVL863:
 13271              	.LBB2542:
 13272              	.LBI2542:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13273              		.loc 10 36 5 is_stmt 1 view .LVU3729
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 394


 13274              		.loc 10 36 5 is_stmt 0 view .LVU3730
 13275              	.LBE2542:
 161:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 13276              		.loc 20 161 18 view .LVU3731
 13277 0184 2246     		mov	r2, r4
 13278 0186 2946     		mov	r1, r5
 13279 0188 6448     		ldr	r0, .L699+184
 13280 018a FFF7FEFF 		bl	__aeabi_atexit
 13281              	.LVL864:
 13282              	.LBB2543:
 13283              	.LBI2543:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13284              		.loc 10 36 5 is_stmt 1 view .LVU3732
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13285              		.loc 10 36 5 is_stmt 0 view .LVU3733
 13286              	.LBE2543:
 162:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 13287              		.loc 20 162 18 view .LVU3734
 13288 018e 2246     		mov	r2, r4
 13289 0190 2946     		mov	r1, r5
 13290 0192 6348     		ldr	r0, .L699+188
 13291 0194 FFF7FEFF 		bl	__aeabi_atexit
 13292              	.LVL865:
 13293              	.LBB2544:
 13294              	.LBI2544:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13295              		.loc 10 36 5 is_stmt 1 view .LVU3735
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13296              		.loc 10 36 5 is_stmt 0 view .LVU3736
 13297              	.LBE2544:
 163:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 13298              		.loc 20 163 18 view .LVU3737
 13299 0198 2246     		mov	r2, r4
 13300 019a 2946     		mov	r1, r5
 13301 019c 6148     		ldr	r0, .L699+192
 13302 019e FFF7FEFF 		bl	__aeabi_atexit
 13303              	.LVL866:
 13304              	.LBB2545:
 13305              	.LBI2545:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13306              		.loc 10 36 5 is_stmt 1 view .LVU3738
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13307              		.loc 10 36 5 is_stmt 0 view .LVU3739
 13308              	.LBE2545:
 164:Veno-Echo.cpp **** 
 13309              		.loc 20 164 18 view .LVU3740
 13310 01a2 2246     		mov	r2, r4
 13311 01a4 2946     		mov	r1, r5
 13312 01a6 6048     		ldr	r0, .L699+196
 13313 01a8 FFF7FEFF 		bl	__aeabi_atexit
 13314              	.LVL867:
 13315              	.LBB2546:
 13316              	.LBI2546:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13317              		.loc 10 36 5 is_stmt 1 view .LVU3741
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13318              		.loc 10 36 5 is_stmt 0 view .LVU3742
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 395


 13319              	.LBE2546:
 167:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 13320              		.loc 20 167 18 view .LVU3743
 13321 01ac 2246     		mov	r2, r4
 13322 01ae 2946     		mov	r1, r5
 13323 01b0 5E48     		ldr	r0, .L699+200
 13324 01b2 FFF7FEFF 		bl	__aeabi_atexit
 13325              	.LVL868:
 13326              	.LBB2547:
 13327              	.LBI2547:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13328              		.loc 10 36 5 is_stmt 1 view .LVU3744
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13329              		.loc 10 36 5 is_stmt 0 view .LVU3745
 13330              	.LBE2547:
 168:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 13331              		.loc 20 168 18 view .LVU3746
 13332 01b6 2246     		mov	r2, r4
 13333 01b8 2946     		mov	r1, r5
 13334 01ba 5D48     		ldr	r0, .L699+204
 13335 01bc FFF7FEFF 		bl	__aeabi_atexit
 13336              	.LVL869:
 13337              	.LBB2548:
 13338              	.LBI2548:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13339              		.loc 10 36 5 is_stmt 1 view .LVU3747
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13340              		.loc 10 36 5 is_stmt 0 view .LVU3748
 13341              	.LBE2548:
 169:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 13342              		.loc 20 169 18 view .LVU3749
 13343 01c0 2246     		mov	r2, r4
 13344 01c2 2946     		mov	r1, r5
 13345 01c4 5B48     		ldr	r0, .L699+208
 13346 01c6 FFF7FEFF 		bl	__aeabi_atexit
 13347              	.LVL870:
 13348              	.LBB2549:
 13349              	.LBI2549:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13350              		.loc 10 36 5 is_stmt 1 view .LVU3750
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13351              		.loc 10 36 5 is_stmt 0 view .LVU3751
 13352              	.LBE2549:
 170:Veno-Echo.cpp **** 
 13353              		.loc 20 170 18 view .LVU3752
 13354 01ca 2246     		mov	r2, r4
 13355 01cc 2946     		mov	r1, r5
 13356 01ce 5A48     		ldr	r0, .L699+212
 13357 01d0 FFF7FEFF 		bl	__aeabi_atexit
 13358              	.LVL871:
 13359              	.LBB2550:
 13360              	.LBI2550:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13361              		.loc 10 36 5 is_stmt 1 view .LVU3753
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13362              		.loc 10 36 5 is_stmt 0 view .LVU3754
 13363              	.LBE2550:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 396


 173:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 13364              		.loc 20 173 18 view .LVU3755
 13365 01d4 2246     		mov	r2, r4
 13366 01d6 2946     		mov	r1, r5
 13367 01d8 5848     		ldr	r0, .L699+216
 13368 01da FFF7FEFF 		bl	__aeabi_atexit
 13369              	.LVL872:
 13370              	.LBB2551:
 13371              	.LBI2551:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13372              		.loc 10 36 5 is_stmt 1 view .LVU3756
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13373              		.loc 10 36 5 is_stmt 0 view .LVU3757
 13374              	.LBE2551:
 174:Veno-Echo.cpp **** 
 13375              		.loc 20 174 18 view .LVU3758
 13376 01de 2246     		mov	r2, r4
 13377 01e0 2946     		mov	r1, r5
 13378 01e2 5748     		ldr	r0, .L699+220
 13379 01e4 FFF7FEFF 		bl	__aeabi_atexit
 13380              	.LVL873:
 13381              	.LBB2552:
 13382              	.LBI2552:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13383              		.loc 10 36 5 is_stmt 1 view .LVU3759
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13384              		.loc 10 36 5 is_stmt 0 view .LVU3760
 13385              	.LBE2552:
 180:Veno-Echo.cpp **** Switch ReverseGateR;
 13386              		.loc 20 180 8 view .LVU3761
 13387 01e8 564F     		ldr	r7, .L699+224
 176:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 13388              		.loc 20 176 18 view .LVU3762
 13389 01ea 2246     		mov	r2, r4
 13390 01ec 2946     		mov	r1, r5
 13391 01ee 5648     		ldr	r0, .L699+228
 13392 01f0 FFF7FEFF 		bl	__aeabi_atexit
 13393              	.LVL874:
 13394              	.LBB2553:
 13395              	.LBI2553:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13396              		.loc 10 36 5 is_stmt 1 view .LVU3763
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13397              		.loc 10 36 5 is_stmt 0 view .LVU3764
 13398              	.LBE2553:
 177:Veno-Echo.cpp **** 
 13399              		.loc 20 177 18 view .LVU3765
 13400 01f4 2246     		mov	r2, r4
 13401 01f6 2946     		mov	r1, r5
 13402 01f8 5448     		ldr	r0, .L699+232
 13403 01fa FFF7FEFF 		bl	__aeabi_atexit
 13404              	.LVL875:
 13405              	.LBB2554:
 13406              	.LBI2554:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13407              		.loc 1 40 5 is_stmt 1 view .LVU3766
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 397


 13408              		.loc 1 40 5 is_stmt 0 view .LVU3767
 13409              	.LBE2554:
 180:Veno-Echo.cpp **** Switch ReverseGateR;
 13410              		.loc 20 180 8 view .LVU3768
 13411 01fe 2246     		mov	r2, r4
 13412 0200 3946     		mov	r1, r7
 13413 0202 5348     		ldr	r0, .L699+236
 13414 0204 FFF7FEFF 		bl	__aeabi_atexit
 13415              	.LVL876:
 13416              	.LBB2555:
 13417              	.LBI2555:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13418              		.loc 1 40 5 is_stmt 1 view .LVU3769
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13419              		.loc 1 40 5 is_stmt 0 view .LVU3770
 13420              	.LBE2555:
 181:Veno-Echo.cpp **** 
 13421              		.loc 20 181 8 view .LVU3771
 13422 0208 2246     		mov	r2, r4
 13423 020a 3946     		mov	r1, r7
 13424 020c 5148     		ldr	r0, .L699+240
 13425 020e FFF7FEFF 		bl	__aeabi_atexit
 13426              	.LVL877:
 13427              	.LBB2556:
 13428              	.LBI2556:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13429              		.loc 1 40 5 is_stmt 1 view .LVU3772
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13430              		.loc 1 40 5 is_stmt 0 view .LVU3773
 13431              	.LBE2556:
 184:Veno-Echo.cpp **** Switch ClockIn;
 13432              		.loc 20 184 8 view .LVU3774
 13433 0212 2246     		mov	r2, r4
 13434 0214 3946     		mov	r1, r7
 13435 0216 5048     		ldr	r0, .L699+244
 13436 0218 FFF7FEFF 		bl	__aeabi_atexit
 13437              	.LVL878:
 13438              	.LBB2557:
 13439              	.LBI2557:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13440              		.loc 1 40 5 is_stmt 1 view .LVU3775
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13441              		.loc 1 40 5 is_stmt 0 view .LVU3776
 13442              	.LBE2557:
 185:Veno-Echo.cpp **** 
 13443              		.loc 20 185 8 view .LVU3777
 13444 021c 2246     		mov	r2, r4
 13445 021e 3946     		mov	r1, r7
 13446 0220 4E48     		ldr	r0, .L699+248
 13447 0222 FFF7FEFF 		bl	__aeabi_atexit
 13448              	.LVL879:
 13449              	.LBB2558:
 13450              	.LBI2558:
  44:taptempo.h    ****     {
 13451              		.loc 13 44 5 is_stmt 1 view .LVU3778
 13452              	.LBB2559:
 13453              	.LBB2560:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 398


  46:taptempo.h    ****         tap_tolerance_ = 1.25f;
 13454              		.loc 13 46 9 view .LVU3779
  54:taptempo.h    ****         clockLength_ = 0;
 13455              		.loc 13 54 19 is_stmt 0 view .LVU3780
 13456 0226 4FF07E55 		mov	r5, #1065353216
  46:taptempo.h    ****         tap_tolerance_ = 1.25f;
 13457              		.loc 13 46 18 view .LVU3781
 13458 022a 4D48     		ldr	r0, .L699+252
  57:taptempo.h    ****     }
 13459              		.loc 13 57 22 view .LVU3782
 13460 022c 42F21073 		movw	r3, #10000
  47:taptempo.h    ****         maxtap_ = 2000000;
 13461              		.loc 13 47 24 view .LVU3783
 13462 0230 4C49     		ldr	r1, .L699+256
 13463              	.LBE2560:
 13464              	.LBE2559:
 13465              	.LBE2558:
 188:Veno-Echo.cpp **** 
 13466              		.loc 20 188 10 view .LVU3784
 13467 0232 2246     		mov	r2, r4
 13468              	.LBB2565:
 13469              	.LBB2563:
 13470              	.LBB2561:
  48:taptempo.h    ****         mintap_ = 80000;
 13471              		.loc 13 48 17 view .LVU3785
 13472 0234 DFF83CE1 		ldr	lr, .L699+272
  51:taptempo.h    ****         lastTime_ = 0;
 13473              		.loc 13 51 16 view .LVU3786
 13474 0238 4B4F     		ldr	r7, .L699+260
  49:taptempo.h    ****         lastTapLength_ = 0;
 13475              		.loc 13 49 17 view .LVU3787
 13476 023a DFF83CC1 		ldr	ip, .L699+276
  46:taptempo.h    ****         tap_tolerance_ = 1.25f;
 13477              		.loc 13 46 18 view .LVU3788
 13478 023e 80F82460 		strb	r6, [r0, #36]
  47:taptempo.h    ****         maxtap_ = 2000000;
 13479              		.loc 13 47 9 is_stmt 1 view .LVU3789
  53:taptempo.h    ****         tapRatio_ = 1.0f;
 13480              		.loc 13 53 22 is_stmt 0 view .LVU3790
 13481 0242 8660     		str	r6, [r0, #8]
  47:taptempo.h    ****         maxtap_ = 2000000;
 13482              		.loc 13 47 24 view .LVU3791
 13483 0244 8162     		str	r1, [r0, #40]	@ float
  48:taptempo.h    ****         mintap_ = 80000;
 13484              		.loc 13 48 9 is_stmt 1 view .LVU3792
  51:taptempo.h    ****         lastTime_ = 0;
 13485              		.loc 13 51 16 is_stmt 0 view .LVU3793
 13486 0246 C762     		str	r7, [r0, #44]	@ float
  54:taptempo.h    ****         clockLength_ = 0;
 13487              		.loc 13 54 19 view .LVU3794
 13488 0248 0563     		str	r5, [r0, #48]	@ float
 13489              	.LBE2561:
 13490              	.LBE2563:
 13491              	.LBE2565:
 188:Veno-Echo.cpp **** 
 13492              		.loc 20 188 10 view .LVU3795
 13493 024a 4849     		ldr	r1, .L699+264
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 399


 13494              	.LBB2566:
 13495              	.LBB2564:
 13496              	.LBB2562:
  57:taptempo.h    ****     }
 13497              		.loc 13 57 22 view .LVU3796
 13498 024c 0362     		str	r3, [r0, #32]
  52:taptempo.h    ****         currentTime_ = 0;
 13499              		.loc 13 52 19 view .LVU3797
 13500 024e C0E90366 		strd	r6, r6, [r0, #12]
  56:taptempo.h    ****         clockThresh_ = 10000; //Us change
 13501              		.loc 13 56 26 view .LVU3798
 13502 0252 C0E90666 		strd	r6, r6, [r0, #24]
  49:taptempo.h    ****         lastTapLength_ = 0;
 13503              		.loc 13 49 17 view .LVU3799
 13504 0256 C0E900CE 		strd	ip, lr, [r0]
  50:taptempo.h    ****         tempo_ = 500000.0f;
 13505              		.loc 13 50 9 is_stmt 1 view .LVU3800
  51:taptempo.h    ****         lastTime_ = 0;
 13506              		.loc 13 51 9 view .LVU3801
  52:taptempo.h    ****         currentTime_ = 0;
 13507              		.loc 13 52 9 view .LVU3802
  53:taptempo.h    ****         tapRatio_ = 1.0f;
 13508              		.loc 13 53 9 view .LVU3803
  54:taptempo.h    ****         clockLength_ = 0;
 13509              		.loc 13 54 9 view .LVU3804
  55:taptempo.h    ****         lastClockLength_ = 0;
 13510              		.loc 13 55 9 view .LVU3805
  56:taptempo.h    ****         clockThresh_ = 10000; //Us change
 13511              		.loc 13 56 9 view .LVU3806
  57:taptempo.h    ****     }
 13512              		.loc 13 57 9 view .LVU3807
 13513              	.LVL880:
  57:taptempo.h    ****     }
 13514              		.loc 13 57 9 is_stmt 0 view .LVU3808
 13515              	.LBE2562:
 13516              	.LBE2564:
 13517              	.LBE2566:
 13518              	.LBE2569:
 13519              	.LBE2573:
 13520              		.loc 20 2145 1 view .LVU3809
 13521 025a BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 13522              		.cfi_restore 14
 13523              		.cfi_restore 8
 13524              		.cfi_restore 7
 13525              		.cfi_restore 6
 13526              		.cfi_restore 5
 13527              		.cfi_restore 4
 13528              		.cfi_def_cfa_offset 0
 13529              	.LBB2574:
 13530              	.LBB2570:
 188:Veno-Echo.cpp **** 
 13531              		.loc 20 188 10 view .LVU3810
 13532 025e FFF7FEBF 		b	__aeabi_atexit
 13533              	.LVL881:
 13534              	.L700:
 13535 0262 00BF     		.align	2
 13536              	.L699:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 400


 13537 0264 00000000 		.word	.LANCHOR4
 13538 0268 00000000 		.word	__dso_handle
 13539 026c 00000000 		.word	_ZN7daisysp3SvfD1Ev
 13540 0270 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 13541 0274 00000000 		.word	.LANCHOR47
 13542 0278 00000000 		.word	.LANCHOR48
 13543 027c 00000000 		.word	.LANCHOR35
 13544 0280 00000000 		.word	.LANCHOR36
 13545 0284 00000000 		.word	.LANCHOR49
 13546 0288 00000000 		.word	.LANCHOR50
 13547 028c 00000000 		.word	.LANCHOR37
 13548 0290 00000000 		.word	.LANCHOR38
 13549 0294 00000000 		.word	_ZN7daisysp10OscillatorD1Ev
 13550 0298 00000000 		.word	.LANCHOR76
 13551 029c 17B7D138 		.word	953267991
 13552 02a0 00000000 		.word	.LANCHOR132
 13553 02a4 00000000 		.word	_ZN7daisysp9EnvFollowD1Ev
 13554 02a8 00000000 		.word	.LANCHOR133
 13555 02ac 00000000 		.word	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 13556 02b0 00000000 		.word	.LANCHOR108
 13557 02b4 00000000 		.word	.LANCHOR109
 13558 02b8 00000000 		.word	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 13559 02bc 00000000 		.word	delMemsL
 13560 02c0 00000000 		.word	delMemsR
 13561 02c4 00000000 		.word	_ZN10DelayMultiD1Ev
 13562 02c8 00000000 		.word	delMemsL_REV
 13563 02cc 00000000 		.word	delMemsR_REV
 13564 02d0 00000000 		.word	_ZN9ButtonLEDD1Ev
 13565 02d4 00000000 		.word	.LANCHOR0
 13566 02d8 00000000 		.word	.LANCHOR1
 13567 02dc 00000000 		.word	.LANCHOR96
 13568 02e0 00000000 		.word	.LANCHOR97
 13569 02e4 00000000 		.word	.LANCHOR94
 13570 02e8 00000000 		.word	.LANCHOR95
 13571 02ec 00000000 		.word	_ZN7daisysp4AdsrD1Ev
 13572 02f0 00000000 		.word	.LANCHOR98
 13573 02f4 00000000 		.word	_ZN8TempoLEDD1Ev
 13574 02f8 00000000 		.word	.LANCHOR89
 13575 02fc 00000000 		.word	.LANCHOR102
 13576 0300 00000000 		.word	.LANCHOR103
 13577 0304 00000000 		.word	_ZN7daisysp9CrossFadeD1Ev
 13578 0308 00000000 		.word	.LANCHOR104
 13579 030c 00000000 		.word	.LANCHOR105
 13580 0310 00000000 		.word	.LANCHOR106
 13581 0314 00000000 		.word	.LANCHOR107
 13582 0318 00000000 		.word	.LANCHOR65
 13583 031c 00000000 		.word	.LANCHOR120
 13584 0320 00000000 		.word	.LANCHOR121
 13585 0324 00000000 		.word	.LANCHOR118
 13586 0328 00000000 		.word	.LANCHOR119
 13587 032c 00000000 		.word	.LANCHOR124
 13588 0330 00000000 		.word	.LANCHOR125
 13589 0334 00000000 		.word	.LANCHOR122
 13590 0338 00000000 		.word	.LANCHOR123
 13591 033c 00000000 		.word	.LANCHOR126
 13592 0340 00000000 		.word	.LANCHOR127
 13593 0344 00000000 		.word	_ZN5daisy6SwitchD1Ev
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 401


 13594 0348 00000000 		.word	.LANCHOR128
 13595 034c 00000000 		.word	.LANCHOR129
 13596 0350 00000000 		.word	.LANCHOR99
 13597 0354 00000000 		.word	.LANCHOR100
 13598 0358 00000000 		.word	.LANCHOR101
 13599 035c 00000000 		.word	.LANCHOR88
 13600 0360 00000000 		.word	.LANCHOR26
 13601 0364 0000A03F 		.word	1067450368
 13602 0368 0024F448 		.word	1223959552
 13603 036c 00000000 		.word	_ZN8TaptempoD1Ev
 13604 0370 00000000 		.word	_ZN7daisysp7DcBlockD1Ev
 13605 0374 80841E00 		.word	2000000
 13606 0378 80380100 		.word	80000
 13607              	.LBE2570:
 13608              	.LBE2574:
 13609              		.cfi_endproc
 13610              	.LFE4919:
 13612              		.section	.init_array,"aw",%init_array
 13613              		.align	2
 13614 0000 00000000 		.word	_GLOBAL__sub_I_delMemsL(target1)
 13615              		.global	AltControls
 13616              		.global	BaseTempo
 13617              		.global	ClockIn
 13618              		.global	Sync
 13619              		.global	ReverseGateR
 13620              		.global	ReverseGateL
 13621              		.global	PHASE_DEBUG
 13622              		.global	DELAYR_DEBUG
 13623              		.global	DELAYL_DEBUG
 13624              		.global	saveState
 13625              		.global	save_flag
 13626              		.global	PostFilters
 13627              		.global	ClockInFlag
 13628              		.global	mute
 13629              		.global	shift
 13630              		.global	syncMode
 13631              		.global	modulation_CV_Raw
 13632              		.global	ModDepth
 13633              		.global	filterXfade
 13634              		.global	width_CV
 13635              		.global	width
 13636              		.global	drywet_CV
 13637              		.global	drywet
 13638              		.global	crossfeedback_CV
 13639              		.global	crossfeedback
 13640              		.global	feedbackR_CV
 13641              		.global	feedbackR
 13642              		.global	feedbackL_CV
 13643              		.global	feedbackL
 13644              		.global	delayTimeR_CV
 13645              		.global	delayTimeL_CV
 13646              		.global	tempoLED_BASE
 13647              		.global	Tap_Button
 13648              		.global	Rev_R_sw
 13649              		.global	Rev_L_sw
 13650              		.global	HPF_sw
 13651              		.global	LPF_sw
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 402


 13652              		.global	delaysR_REV
 13653              		.global	delaysL_REV
 13654              		.global	delayR
 13655              		.global	delayL
 13656              		.global	delMemsR_REV
 13657              		.global	delMemsL_REV
 13658              		.global	delMemsR
 13659              		.global	delMemsL
 13660              		.section	.bss.AltControls,"aw",%nobits
 13661              		.align	2
 13662              		.set	.LANCHOR15,. + 0
 13665              	AltControls:
 13666 0000 00000000 		.space	44
 13666      00000000 
 13666      00000000 
 13666      00000000 
 13666      00000000 
 13667              		.section	.bss.BaseTempo,"aw",%nobits
 13668              		.align	2
 13669              		.set	.LANCHOR26,. + 0
 13672              	BaseTempo:
 13673 0000 00000000 		.space	52
 13673      00000000 
 13673      00000000 
 13673      00000000 
 13673      00000000 
 13674              		.section	.bss.ClockIn,"aw",%nobits
 13675              		.align	2
 13676              		.set	.LANCHOR88,. + 0
 13679              	ClockIn:
 13680 0000 00000000 		.space	16
 13680      00000000 
 13680      00000000 
 13680      00000000 
 13681              		.section	.bss.ClockInFlag,"aw",%nobits
 13684              	ClockInFlag:
 13685 0000 00       		.space	1
 13686              		.section	.bss.DELAYL_DEBUG,"aw",%nobits
 13687              		.align	2
 13688              		.set	.LANCHOR90,. + 0
 13691              	DELAYL_DEBUG:
 13692 0000 00000000 		.space	4
 13693              		.section	.bss.DELAYR_DEBUG,"aw",%nobits
 13694              		.align	2
 13695              		.set	.LANCHOR91,. + 0
 13698              	DELAYR_DEBUG:
 13699 0000 00000000 		.space	4
 13700              		.section	.bss.HPF_sw,"aw",%nobits
 13701              		.align	2
 13702              		.set	.LANCHOR97,. + 0
 13705              	HPF_sw:
 13706 0000 00000000 		.space	52
 13706      00000000 
 13706      00000000 
 13706      00000000 
 13706      00000000 
 13707              		.section	.bss.LPF_sw,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 403


 13708              		.align	2
 13709              		.set	.LANCHOR96,. + 0
 13712              	LPF_sw:
 13713 0000 00000000 		.space	52
 13713      00000000 
 13713      00000000 
 13713      00000000 
 13713      00000000 
 13714              		.section	.bss.ModDepth,"aw",%nobits
 13715              		.align	2
 13716              		.set	.LANCHOR68,. + 0
 13719              	ModDepth:
 13720 0000 00000000 		.space	4
 13721              		.section	.bss.PHASE_DEBUG,"aw",%nobits
 13722              		.align	2
 13723              		.set	.LANCHOR93,. + 0
 13726              	PHASE_DEBUG:
 13727 0000 00000000 		.space	4
 13728              		.section	.bss.PostFilters,"aw",%nobits
 13729              		.set	.LANCHOR83,. + 0
 13732              	PostFilters:
 13733 0000 00       		.space	1
 13734              		.section	.bss.Rev_L_sw,"aw",%nobits
 13735              		.align	2
 13736              		.set	.LANCHOR94,. + 0
 13739              	Rev_L_sw:
 13740 0000 00000000 		.space	52
 13740      00000000 
 13740      00000000 
 13740      00000000 
 13740      00000000 
 13741              		.section	.bss.Rev_R_sw,"aw",%nobits
 13742              		.align	2
 13743              		.set	.LANCHOR95,. + 0
 13746              	Rev_R_sw:
 13747 0000 00000000 		.space	52
 13747      00000000 
 13747      00000000 
 13747      00000000 
 13747      00000000 
 13748              		.section	.bss.ReverseGateL,"aw",%nobits
 13749              		.align	2
 13750              		.set	.LANCHOR99,. + 0
 13753              	ReverseGateL:
 13754 0000 00000000 		.space	16
 13754      00000000 
 13754      00000000 
 13754      00000000 
 13755              		.section	.bss.ReverseGateR,"aw",%nobits
 13756              		.align	2
 13757              		.set	.LANCHOR100,. + 0
 13760              	ReverseGateR:
 13761 0000 00000000 		.space	16
 13761      00000000 
 13761      00000000 
 13761      00000000 
 13762              		.section	.bss.Sync,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 404


 13763              		.align	2
 13764              		.set	.LANCHOR101,. + 0
 13767              	Sync:
 13768 0000 00000000 		.space	16
 13768      00000000 
 13768      00000000 
 13768      00000000 
 13769              		.section	.bss.Tap_Button,"aw",%nobits
 13770              		.align	2
 13771              		.set	.LANCHOR98,. + 0
 13774              	Tap_Button:
 13775 0000 00000000 		.space	52
 13775      00000000 
 13775      00000000 
 13775      00000000 
 13775      00000000 
 13776              		.section	.bss._ZL10FwdRevLEnv,"aw",%nobits
 13777              		.align	2
 13778              		.set	.LANCHOR102,. + 0
 13781              	_ZL10FwdRevLEnv:
 13782 0000 00000000 		.space	56
 13782      00000000 
 13782      00000000 
 13782      00000000 
 13782      00000000 
 13783              		.section	.bss._ZL10FwdRevREnv,"aw",%nobits
 13784              		.align	2
 13785              		.set	.LANCHOR103,. + 0
 13788              	_ZL10FwdRevREnv:
 13789 0000 00000000 		.space	56
 13789      00000000 
 13789      00000000 
 13789      00000000 
 13789      00000000 
 13790              		.section	.bss._ZL10HPF_LXfade,"aw",%nobits
 13791              		.align	2
 13792              		.set	.LANCHOR118,. + 0
 13795              	_ZL10HPF_LXfade:
 13796 0000 00000000 		.space	8
 13796      00000000 
 13797              		.section	.bss._ZL10HPF_L_post,"aw",%nobits
 13798              		.align	2
 13799              		.set	.LANCHOR37,. + 0
 13802              	_ZL10HPF_L_post:
 13803 0000 00000000 		.space	76
 13803      00000000 
 13803      00000000 
 13803      00000000 
 13803      00000000 
 13804              		.section	.bss._ZL10HPF_RXfade,"aw",%nobits
 13805              		.align	2
 13806              		.set	.LANCHOR119,. + 0
 13809              	_ZL10HPF_RXfade:
 13810 0000 00000000 		.space	8
 13810      00000000 
 13811              		.section	.bss._ZL10HPF_R_post,"aw",%nobits
 13812              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 405


 13813              		.set	.LANCHOR38,. + 0
 13816              	_ZL10HPF_R_post:
 13817 0000 00000000 		.space	76
 13817      00000000 
 13817      00000000 
 13817      00000000 
 13817      00000000 
 13818              		.section	.bss._ZL10LPF_LXfade,"aw",%nobits
 13819              		.align	2
 13820              		.set	.LANCHOR120,. + 0
 13823              	_ZL10LPF_LXfade:
 13824 0000 00000000 		.space	8
 13824      00000000 
 13825              		.section	.bss._ZL10LPF_L_post,"aw",%nobits
 13826              		.align	2
 13827              		.set	.LANCHOR49,. + 0
 13830              	_ZL10LPF_L_post:
 13831 0000 00000000 		.space	76
 13831      00000000 
 13831      00000000 
 13831      00000000 
 13831      00000000 
 13832              		.section	.bss._ZL10LPF_RXfade,"aw",%nobits
 13833              		.align	2
 13834              		.set	.LANCHOR121,. + 0
 13837              	_ZL10LPF_RXfade:
 13838 0000 00000000 		.space	8
 13838      00000000 
 13839              		.section	.bss._ZL10LPF_R_post,"aw",%nobits
 13840              		.align	2
 13841              		.set	.LANCHOR50,. + 0
 13844              	_ZL10LPF_R_post:
 13845 0000 00000000 		.space	76
 13845      00000000 
 13845      00000000 
 13845      00000000 
 13845      00000000 
 13846              		.section	.bss._ZL10WidthXfade,"aw",%nobits
 13847              		.align	2
 13848              		.set	.LANCHOR65,. + 0
 13851              	_ZL10WidthXfade:
 13852 0000 00000000 		.space	8
 13852      00000000 
 13853              		.section	.bss._ZL11DcBlock_LFB,"aw",%nobits
 13854              		.align	2
 13855              		.set	.LANCHOR108,. + 0
 13858              	_ZL11DcBlock_LFB:
 13859 0000 00000000 		.space	12
 13859      00000000 
 13859      00000000 
 13860              		.section	.bss._ZL11DcBlock_RFB,"aw",%nobits
 13861              		.align	2
 13862              		.set	.LANCHOR109,. + 0
 13865              	_ZL11DcBlock_RFB:
 13866 0000 00000000 		.space	12
 13866      00000000 
 13866      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 406


 13867              		.section	.bss._ZL11FilterMix_L,"aw",%nobits
 13868              		.align	2
 13869              		.set	.LANCHOR126,. + 0
 13872              	_ZL11FilterMix_L:
 13873 0000 00000000 		.space	8
 13873      00000000 
 13874              		.section	.bss._ZL11FilterMix_R,"aw",%nobits
 13875              		.align	2
 13876              		.set	.LANCHOR127,. + 0
 13879              	_ZL11FilterMix_R:
 13880 0000 00000000 		.space	8
 13880      00000000 
 13881              		.section	.bss._ZL12FwdRevLXfade,"aw",%nobits
 13882              		.align	2
 13883              		.set	.LANCHOR106,. + 0
 13886              	_ZL12FwdRevLXfade:
 13887 0000 00000000 		.space	8
 13887      00000000 
 13888              		.section	.bss._ZL12FwdRevRXfade,"aw",%nobits
 13889              		.align	2
 13890              		.set	.LANCHOR107,. + 0
 13893              	_ZL12FwdRevRXfade:
 13894 0000 00000000 		.space	8
 13894      00000000 
 13895              		.section	.bss._ZL15HPF_LXfade_post,"aw",%nobits
 13896              		.align	2
 13897              		.set	.LANCHOR122,. + 0
 13900              	_ZL15HPF_LXfade_post:
 13901 0000 00000000 		.space	8
 13901      00000000 
 13902              		.section	.bss._ZL15HPF_RXfade_post,"aw",%nobits
 13903              		.align	2
 13904              		.set	.LANCHOR123,. + 0
 13907              	_ZL15HPF_RXfade_post:
 13908 0000 00000000 		.space	8
 13908      00000000 
 13909              		.section	.bss._ZL15LPF_LXfade_post,"aw",%nobits
 13910              		.align	2
 13911              		.set	.LANCHOR124,. + 0
 13914              	_ZL15LPF_LXfade_post:
 13915 0000 00000000 		.space	8
 13915      00000000 
 13916              		.section	.bss._ZL15LPF_RXfade_post,"aw",%nobits
 13917              		.align	2
 13918              		.set	.LANCHOR125,. + 0
 13921              	_ZL15LPF_RXfade_post:
 13922 0000 00000000 		.space	8
 13922      00000000 
 13923              		.section	.bss._ZL16FilterMix_L_post,"aw",%nobits
 13924              		.align	2
 13925              		.set	.LANCHOR128,. + 0
 13928              	_ZL16FilterMix_L_post:
 13929 0000 00000000 		.space	8
 13929      00000000 
 13930              		.section	.bss._ZL16FilterMix_R_post,"aw",%nobits
 13931              		.align	2
 13932              		.set	.LANCHOR129,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 407


 13935              	_ZL16FilterMix_R_post:
 13936 0000 00000000 		.space	8
 13936      00000000 
 13937              		.section	.bss._ZL2hw,"aw",%nobits
 13938              		.align	2
 13939              		.set	.LANCHOR4,. + 0
 13942              	_ZL2hw:
 13943 0000 00000000 		.space	60
 13943      00000000 
 13943      00000000 
 13943      00000000 
 13943      00000000 
 13944              		.section	.bss._ZL3lfo,"aw",%nobits
 13945              		.align	2
 13946              		.set	.LANCHOR76,. + 0
 13949              	_ZL3lfo:
 13950 0000 00000000 		.space	40
 13950      00000000 
 13950      00000000 
 13950      00000000 
 13950      00000000 
 13951              		.section	.bss._ZL5HPF_L,"aw",%nobits
 13952              		.align	2
 13953              		.set	.LANCHOR35,. + 0
 13956              	_ZL5HPF_L:
 13957 0000 00000000 		.space	76
 13957      00000000 
 13957      00000000 
 13957      00000000 
 13957      00000000 
 13958              		.section	.bss._ZL5HPF_R,"aw",%nobits
 13959              		.align	2
 13960              		.set	.LANCHOR36,. + 0
 13963              	_ZL5HPF_R:
 13964 0000 00000000 		.space	76
 13964      00000000 
 13964      00000000 
 13964      00000000 
 13964      00000000 
 13965              		.section	.bss._ZL5LPF_L,"aw",%nobits
 13966              		.align	2
 13967              		.set	.LANCHOR47,. + 0
 13970              	_ZL5LPF_L:
 13971 0000 00000000 		.space	76
 13971      00000000 
 13971      00000000 
 13971      00000000 
 13971      00000000 
 13972              		.section	.bss._ZL5LPF_R,"aw",%nobits
 13973              		.align	2
 13974              		.set	.LANCHOR48,. + 0
 13977              	_ZL5LPF_R:
 13978 0000 00000000 		.space	76
 13978      00000000 
 13978      00000000 
 13978      00000000 
 13978      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 408


 13979              		.section	.bss._ZL7HPF_Env,"aw",%nobits
 13980              		.align	2
 13981              		.set	.LANCHOR105,. + 0
 13984              	_ZL7HPF_Env:
 13985 0000 00000000 		.space	56
 13985      00000000 
 13985      00000000 
 13985      00000000 
 13985      00000000 
 13986              		.section	.bss._ZL7LPF_Env,"aw",%nobits
 13987              		.align	2
 13988              		.set	.LANCHOR104,. + 0
 13991              	_ZL7LPF_Env:
 13992 0000 00000000 		.space	56
 13992      00000000 
 13992      00000000 
 13992      00000000 
 13992      00000000 
 13993              		.section	.bss._ZL7LeftEnv,"aw",%nobits
 13994              		.align	2
 13995              		.set	.LANCHOR132,. + 0
 13998              	_ZL7LeftEnv:
 13999 0000 00000000 		.space	24
 13999      00000000 
 13999      00000000 
 13999      00000000 
 13999      00000000 
 14000              		.section	.bss._ZL8RightEnv,"aw",%nobits
 14001              		.align	2
 14002              		.set	.LANCHOR133,. + 0
 14005              	_ZL8RightEnv:
 14006 0000 00000000 		.space	24
 14006      00000000 
 14006      00000000 
 14006      00000000 
 14006      00000000 
 14007              		.section	.bss._ZZ10Update_ModvE13modulation_CV,"aw",%nobits
 14008              		.align	2
 14009              		.set	.LANCHOR86,. + 0
 14012              	_ZZ10Update_ModvE13modulation_CV:
 14013 0000 00000000 		.space	4
 14014              		.section	.bss._ZZ10Update_ModvE17ModDepth_Filtered,"aw",%nobits
 14015              		.align	2
 14016              		.set	.LANCHOR87,. + 0
 14019              	_ZZ10Update_ModvE17ModDepth_Filtered:
 14020 0000 00000000 		.space	4
 14021              		.section	.bss._ZZ12Update_widthvE10width_Last,"aw",%nobits
 14022              		.align	2
 14023              		.set	.LANCHOR63,. + 0
 14026              	_ZZ12Update_widthvE10width_Last:
 14027 0000 00000000 		.space	4
 14028              		.section	.bss._ZZ12Update_widthvE12ModDepth_new,"aw",%nobits
 14029              		.align	2
 14030              		.set	.LANCHOR67,. + 0
 14033              	_ZZ12Update_widthvE12ModDepth_new:
 14034 0000 00000000 		.space	4
 14035              		.section	.bss._ZZ12Update_widthvE12width_pickup,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 409


 14036              		.set	.LANCHOR61,. + 0
 14039              	_ZZ12Update_widthvE12width_pickup:
 14040 0000 00       		.space	1
 14041              		.section	.bss._ZZ12Update_widthvE15ModDepth_pickup,"aw",%nobits
 14042              		.set	.LANCHOR66,. + 0
 14045              	_ZZ12Update_widthvE15ModDepth_pickup:
 14046 0000 00       		.space	1
 14047              		.section	.bss._ZZ12Update_widthvE9lastShift,"aw",%nobits
 14048              		.set	.LANCHOR60,. + 0
 14051              	_ZZ12Update_widthvE9lastShift:
 14052 0000 00       		.space	1
 14053              		.section	.bss._ZZ12Update_widthvE9width_new,"aw",%nobits
 14054              		.align	2
 14055              		.set	.LANCHOR62,. + 0
 14058              	_ZZ12Update_widthvE9width_new:
 14059 0000 00000000 		.space	4
 14060              		.section	.bss._ZZ13Update_drywetvE10Res_pickup,"aw",%nobits
 14061              		.set	.LANCHOR57,. + 0
 14064              	_ZZ13Update_drywetvE10Res_pickup:
 14065 0000 00       		.space	1
 14066              		.section	.bss._ZZ13Update_drywetvE10drywet_new,"aw",%nobits
 14067              		.align	2
 14068              		.set	.LANCHOR54,. + 0
 14071              	_ZZ13Update_drywetvE10drywet_new:
 14072 0000 00000000 		.space	4
 14073              		.section	.bss._ZZ13Update_drywetvE11drywet_Last,"aw",%nobits
 14074              		.align	2
 14075              		.set	.LANCHOR55,. + 0
 14078              	_ZZ13Update_drywetvE11drywet_Last:
 14079 0000 00000000 		.space	4
 14080              		.section	.bss._ZZ13Update_drywetvE13drywet_pickup,"aw",%nobits
 14081              		.set	.LANCHOR53,. + 0
 14084              	_ZZ13Update_drywetvE13drywet_pickup:
 14085 0000 00       		.space	1
 14086              		.section	.bss._ZZ13Update_drywetvE7Res_new,"aw",%nobits
 14087              		.align	2
 14088              		.set	.LANCHOR58,. + 0
 14091              	_ZZ13Update_drywetvE7Res_new:
 14092 0000 00000000 		.space	4
 14093              		.section	.bss._ZZ13Update_drywetvE9lastShift,"aw",%nobits
 14094              		.set	.LANCHOR52,. + 0
 14097              	_ZZ13Update_drywetvE9lastShift:
 14098 0000 00       		.space	1
 14099              		.section	.bss._ZZ14Update_ButtonsvE11buttonstate,"aw",%nobits
 14100              		.align	2
 14101              		.set	.LANCHOR112,. + 0
 14104              	_ZZ14Update_ButtonsvE11buttonstate:
 14105 0000 00000000 		.space	4
 14106              		.section	.bss._ZZ14Update_ButtonsvE9resetTime,"aw",%nobits
 14107              		.align	2
 14108              		.set	.LANCHOR113,. + 0
 14111              	_ZZ14Update_ButtonsvE9resetTime:
 14112 0000 00000000 		.space	4
 14113              		.section	.bss._ZZ14Update_ButtonsvE9shiftTime,"aw",%nobits
 14114              		.align	2
 14115              		.set	.LANCHOR114,. + 0
 14118              	_ZZ14Update_ButtonsvE9shiftTime:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 410


 14119 0000 00000000 		.space	4
 14120              		.section	.bss._ZZ16Update_feedbackLvE12HPCutoff_new,"aw",%nobits
 14121              		.align	2
 14122              		.set	.LANCHOR34,. + 0
 14125              	_ZZ16Update_feedbackLvE12HPCutoff_new:
 14126 0000 00000000 		.space	4
 14127              		.section	.bss._ZZ16Update_feedbackLvE13feedbackL_new,"aw",%nobits
 14128              		.align	2
 14129              		.set	.LANCHOR30,. + 0
 14132              	_ZZ16Update_feedbackLvE13feedbackL_new:
 14133 0000 00000000 		.space	4
 14134              		.section	.bss._ZZ16Update_feedbackLvE14feedbackL_Last,"aw",%nobits
 14135              		.align	2
 14136              		.set	.LANCHOR31,. + 0
 14139              	_ZZ16Update_feedbackLvE14feedbackL_Last:
 14140 0000 00000000 		.space	4
 14141              		.section	.bss._ZZ16Update_feedbackLvE15HPCutoff_pickup,"aw",%nobits
 14142              		.set	.LANCHOR33,. + 0
 14145              	_ZZ16Update_feedbackLvE15HPCutoff_pickup:
 14146 0000 00       		.space	1
 14147              		.section	.bss._ZZ16Update_feedbackLvE16feedbackL_pickup,"aw",%nobits
 14148              		.set	.LANCHOR29,. + 0
 14151              	_ZZ16Update_feedbackLvE16feedbackL_pickup:
 14152 0000 00       		.space	1
 14153              		.section	.bss._ZZ16Update_feedbackLvE9lastShift,"aw",%nobits
 14154              		.set	.LANCHOR28,. + 0
 14157              	_ZZ16Update_feedbackLvE9lastShift:
 14158 0000 00       		.space	1
 14159              		.section	.bss._ZZ16Update_feedbackRvE12LPCutoff_new,"aw",%nobits
 14160              		.align	2
 14161              		.set	.LANCHOR46,. + 0
 14164              	_ZZ16Update_feedbackRvE12LPCutoff_new:
 14165 0000 00000000 		.space	4
 14166              		.section	.bss._ZZ16Update_feedbackRvE13feedbackR_new,"aw",%nobits
 14167              		.align	2
 14168              		.set	.LANCHOR42,. + 0
 14171              	_ZZ16Update_feedbackRvE13feedbackR_new:
 14172 0000 00000000 		.space	4
 14173              		.section	.bss._ZZ16Update_feedbackRvE14feedbackR_Last,"aw",%nobits
 14174              		.align	2
 14175              		.set	.LANCHOR43,. + 0
 14178              	_ZZ16Update_feedbackRvE14feedbackR_Last:
 14179 0000 00000000 		.space	4
 14180              		.section	.bss._ZZ16Update_feedbackRvE15LPCutoff_pickup,"aw",%nobits
 14181              		.set	.LANCHOR45,. + 0
 14184              	_ZZ16Update_feedbackRvE15LPCutoff_pickup:
 14185 0000 00       		.space	1
 14186              		.section	.bss._ZZ16Update_feedbackRvE16feedbackR_pickup,"aw",%nobits
 14187              		.set	.LANCHOR41,. + 0
 14190              	_ZZ16Update_feedbackRvE16feedbackR_pickup:
 14191 0000 00       		.space	1
 14192              		.section	.bss._ZZ16Update_feedbackRvE9lastShift,"aw",%nobits
 14193              		.set	.LANCHOR40,. + 0
 14196              	_ZZ16Update_feedbackRvE9lastShift:
 14197 0000 00       		.space	1
 14198              		.section	.bss._ZZ17Update_DelayTimeLvE14delayTimeL_new,"aw",%nobits
 14199              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 411


 14200              		.set	.LANCHOR10,. + 0
 14203              	_ZZ17Update_DelayTimeLvE14delayTimeL_new:
 14204 0000 00000000 		.space	4
 14205              		.section	.bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last,"aw",%nobits
 14206              		.align	2
 14207              		.set	.LANCHOR11,. + 0
 14210              	_ZZ17Update_DelayTimeLvE15delayTimeL_Last:
 14211 0000 00000000 		.space	4
 14212              		.section	.bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new,"aw",%nobits
 14213              		.align	2
 14214              		.set	.LANCHOR14,. + 0
 14217              	_ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:
 14218 0000 00000000 		.space	4
 14219              		.section	.bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup,"aw",%nobits
 14220              		.set	.LANCHOR9,. + 0
 14223              	_ZZ17Update_DelayTimeLvE17delayTimeL_pickup:
 14224 0000 00       		.space	1
 14225              		.section	.bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup,"aw",%nobits
 14226              		.set	.LANCHOR13,. + 0
 14229              	_ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:
 14230 0000 00       		.space	1
 14231              		.section	.bss._ZZ17Update_DelayTimeLvE8counterL,"aw",%nobits
 14232              		.align	2
 14233              		.set	.LANCHOR6,. + 0
 14236              	_ZZ17Update_DelayTimeLvE8counterL:
 14237 0000 00000000 		.space	4
 14238              		.section	.bss._ZZ17Update_DelayTimeLvE9lastShift,"aw",%nobits
 14239              		.set	.LANCHOR8,. + 0
 14242              	_ZZ17Update_DelayTimeLvE9lastShift:
 14243 0000 00       		.space	1
 14244              		.section	.bss._ZZ17Update_DelayTimeRvE12tapRatio_new,"aw",%nobits
 14245              		.align	2
 14246              		.set	.LANCHOR24,. + 0
 14249              	_ZZ17Update_DelayTimeRvE12tapRatio_new:
 14250 0000 00000000 		.space	4
 14251              		.section	.bss._ZZ17Update_DelayTimeRvE14delayTimeR_new,"aw",%nobits
 14252              		.align	2
 14253              		.set	.LANCHOR21,. + 0
 14256              	_ZZ17Update_DelayTimeRvE14delayTimeR_new:
 14257 0000 00000000 		.space	4
 14258              		.section	.bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last,"aw",%nobits
 14259              		.align	2
 14260              		.set	.LANCHOR22,. + 0
 14263              	_ZZ17Update_DelayTimeRvE15delayTimeR_Last:
 14264 0000 00000000 		.space	4
 14265              		.section	.bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup,"aw",%nobits
 14266              		.set	.LANCHOR23,. + 0
 14269              	_ZZ17Update_DelayTimeRvE15tapRatio_pickup:
 14270 0000 00       		.space	1
 14271              		.section	.bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup,"aw",%nobits
 14272              		.set	.LANCHOR20,. + 0
 14275              	_ZZ17Update_DelayTimeRvE17delayTimeR_pickup:
 14276 0000 00       		.space	1
 14277              		.section	.bss._ZZ17Update_DelayTimeRvE8counterR,"aw",%nobits
 14278              		.align	2
 14279              		.set	.LANCHOR18,. + 0
 14282              	_ZZ17Update_DelayTimeRvE8counterR:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 412


 14283 0000 00000000 		.space	4
 14284              		.section	.bss._ZZ17Update_DelayTimeRvE9lastShift,"aw",%nobits
 14285              		.set	.LANCHOR19,. + 0
 14288              	_ZZ17Update_DelayTimeRvE9lastShift:
 14289 0000 00       		.space	1
 14290              		.section	.bss._ZZ18Update_filterXfadevE15PostFilters_new,"aw",%nobits
 14291              		.align	2
 14292              		.set	.LANCHOR82,. + 0
 14295              	_ZZ18Update_filterXfadevE15PostFilters_new:
 14296 0000 00000000 		.space	4
 14297              		.section	.bss._ZZ18Update_filterXfadevE15filterXfade_new,"aw",%nobits
 14298              		.align	2
 14299              		.set	.LANCHOR79,. + 0
 14302              	_ZZ18Update_filterXfadevE15filterXfade_new:
 14303 0000 00000000 		.space	4
 14304              		.section	.bss._ZZ18Update_filterXfadevE16filterXfade_last,"aw",%nobits
 14305              		.align	2
 14306              		.set	.LANCHOR84,. + 0
 14309              	_ZZ18Update_filterXfadevE16filterXfade_last:
 14310 0000 00000000 		.space	4
 14311              		.section	.bss._ZZ18Update_filterXfadevE18PostFilters_pickup,"aw",%nobits
 14312              		.set	.LANCHOR81,. + 0
 14315              	_ZZ18Update_filterXfadevE18PostFilters_pickup:
 14316 0000 00       		.space	1
 14317              		.section	.bss._ZZ18Update_filterXfadevE18filterXfade_pickup,"aw",%nobits
 14318              		.set	.LANCHOR78,. + 0
 14321              	_ZZ18Update_filterXfadevE18filterXfade_pickup:
 14322 0000 00       		.space	1
 14323              		.section	.bss._ZZ18Update_filterXfadevE9lastShift,"aw",%nobits
 14324              		.set	.LANCHOR77,. + 0
 14327              	_ZZ18Update_filterXfadevE9lastShift:
 14328 0000 00       		.space	1
 14329              		.section	.bss._ZZ19Update_BaseTempoLEDvE12phaseCounter,"aw",%nobits
 14330              		.align	2
 14331              		.set	.LANCHOR92,. + 0
 14334              	_ZZ19Update_BaseTempoLEDvE12phaseCounter:
 14335 0000 00000000 		.space	4
 14336              		.section	.bss._ZZ20Update_crossfeedbackvE11modRate_new,"aw",%nobits
 14337              		.align	2
 14338              		.set	.LANCHOR74,. + 0
 14341              	_ZZ20Update_crossfeedbackvE11modRate_new:
 14342 0000 00000000 		.space	4
 14343              		.section	.bss._ZZ20Update_crossfeedbackvE14modRate_pickup,"aw",%nobits
 14344              		.set	.LANCHOR73,. + 0
 14347              	_ZZ20Update_crossfeedbackvE14modRate_pickup:
 14348 0000 00       		.space	1
 14349              		.section	.bss._ZZ20Update_crossfeedbackvE17crossfeedback_new,"aw",%nobits
 14350              		.align	2
 14351              		.set	.LANCHOR71,. + 0
 14354              	_ZZ20Update_crossfeedbackvE17crossfeedback_new:
 14355 0000 00000000 		.space	4
 14356              		.section	.bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last,"aw",%nobits
 14357              		.align	2
 14358              		.set	.LANCHOR75,. + 0
 14361              	_ZZ20Update_crossfeedbackvE18crossfeedback_Last:
 14362 0000 00000000 		.space	4
 14363              		.section	.bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 413


 14364              		.set	.LANCHOR70,. + 0
 14367              	_ZZ20Update_crossfeedbackvE20crossfeedback_pickup:
 14368 0000 00       		.space	1
 14369              		.section	.bss._ZZ20Update_crossfeedbackvE9lastShift,"aw",%nobits
 14370              		.set	.LANCHOR69,. + 0
 14373              	_ZZ20Update_crossfeedbackvE9lastShift:
 14374 0000 00       		.space	1
 14375              		.section	.bss._ZZ4mainE9saveTimer,"aw",%nobits
 14376              		.align	2
 14377              		.set	.LANCHOR111,. + 0
 14380              	_ZZ4mainE9saveTimer:
 14381 0000 00000000 		.space	4
 14382              		.section	.bss._ZZL13AudioCallbackPfS_jE6LNegFB,"aw",%nobits
 14383              		.align	2
 14384              		.set	.LANCHOR130,. + 0
 14387              	_ZZL13AudioCallbackPfS_jE6LNegFB:
 14388 0000 00000000 		.space	4
 14389              		.section	.bss._ZZL13AudioCallbackPfS_jE6RNegFB,"aw",%nobits
 14390              		.align	2
 14391              		.set	.LANCHOR131,. + 0
 14394              	_ZZL13AudioCallbackPfS_jE6RNegFB:
 14395 0000 00000000 		.space	4
 14396              		.section	.bss._ZZL13AudioCallbackPfS_jE7Counter,"aw",%nobits
 14397              		.align	2
 14398              		.set	.LANCHOR117,. + 0
 14401              	_ZZL13AudioCallbackPfS_jE7Counter:
 14402 0000 00000000 		.space	4
 14403              		.section	.bss.crossfeedback,"aw",%nobits
 14404              		.align	2
 14405              		.set	.LANCHOR72,. + 0
 14408              	crossfeedback:
 14409 0000 00000000 		.space	4
 14410              		.section	.bss.crossfeedback_CV,"aw",%nobits
 14411              		.align	2
 14414              	crossfeedback_CV:
 14415 0000 00000000 		.space	4
 14416              		.section	.bss.delayL,"aw",%nobits
 14417              		.align	2
 14418              		.set	.LANCHOR0,. + 0
 14421              	delayL:
 14422 0000 00000000 		.space	296
 14422      00000000 
 14422      00000000 
 14422      00000000 
 14422      00000000 
 14423              		.section	.bss.delayR,"aw",%nobits
 14424              		.align	2
 14425              		.set	.LANCHOR1,. + 0
 14428              	delayR:
 14429 0000 00000000 		.space	296
 14429      00000000 
 14429      00000000 
 14429      00000000 
 14429      00000000 
 14430              		.section	.bss.delayTimeL_CV,"aw",%nobits
 14431              		.align	2
 14432              		.set	.LANCHOR5,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 414


 14435              	delayTimeL_CV:
 14436 0000 00000000 		.space	4
 14437              		.section	.bss.delayTimeR_CV,"aw",%nobits
 14438              		.align	2
 14439              		.set	.LANCHOR17,. + 0
 14442              	delayTimeR_CV:
 14443 0000 00000000 		.space	4
 14444              		.section	.bss.delaysL_REV,"aw",%nobits
 14445              		.align	2
 14446              		.set	.LANCHOR2,. + 0
 14449              	delaysL_REV:
 14450 0000 00000000 		.space	8
 14450      00000000 
 14451              		.section	.bss.delaysR_REV,"aw",%nobits
 14452              		.align	2
 14453              		.set	.LANCHOR3,. + 0
 14456              	delaysR_REV:
 14457 0000 00000000 		.space	8
 14457      00000000 
 14458              		.section	.bss.drywet_CV,"aw",%nobits
 14459              		.align	2
 14460              		.set	.LANCHOR51,. + 0
 14463              	drywet_CV:
 14464 0000 00000000 		.space	4
 14465              		.section	.bss.feedbackL,"aw",%nobits
 14466              		.align	2
 14467              		.set	.LANCHOR32,. + 0
 14470              	feedbackL:
 14471 0000 00000000 		.space	4
 14472              		.section	.bss.feedbackL_CV,"aw",%nobits
 14473              		.align	2
 14474              		.set	.LANCHOR27,. + 0
 14477              	feedbackL_CV:
 14478 0000 00000000 		.space	4
 14479              		.section	.bss.feedbackR,"aw",%nobits
 14480              		.align	2
 14481              		.set	.LANCHOR44,. + 0
 14484              	feedbackR:
 14485 0000 00000000 		.space	4
 14486              		.section	.bss.feedbackR_CV,"aw",%nobits
 14487              		.align	2
 14488              		.set	.LANCHOR39,. + 0
 14491              	feedbackR_CV:
 14492 0000 00000000 		.space	4
 14493              		.section	.bss.filterXfade,"aw",%nobits
 14494              		.align	2
 14495              		.set	.LANCHOR80,. + 0
 14498              	filterXfade:
 14499 0000 00000000 		.space	4
 14500              		.section	.bss.modulation_CV_Raw,"aw",%nobits
 14501              		.align	2
 14502              		.set	.LANCHOR85,. + 0
 14505              	modulation_CV_Raw:
 14506 0000 00000000 		.space	4
 14507              		.section	.bss.mute,"aw",%nobits
 14508              		.set	.LANCHOR115,. + 0
 14511              	mute:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 415


 14512 0000 00       		.space	1
 14513              		.section	.bss.saveState,"aw",%nobits
 14514              		.set	.LANCHOR110,. + 0
 14517              	saveState:
 14518 0000 00       		.space	1
 14519              		.section	.bss.save_flag,"aw",%nobits
 14520              		.align	2
 14521              		.set	.LANCHOR16,. + 0
 14524              	save_flag:
 14525 0000 00       		.space	1
 14526              		.section	.bss.shift,"aw",%nobits
 14527              		.set	.LANCHOR7,. + 0
 14530              	shift:
 14531 0000 00       		.space	1
 14532              		.section	.bss.syncMode,"aw",%nobits
 14533              		.set	.LANCHOR12,. + 0
 14536              	syncMode:
 14537 0000 00       		.space	1
 14538              		.section	.bss.tempoLED_BASE,"aw",%nobits
 14539              		.align	2
 14540              		.set	.LANCHOR89,. + 0
 14543              	tempoLED_BASE:
 14544 0000 00000000 		.space	72
 14544      00000000 
 14544      00000000 
 14544      00000000 
 14544      00000000 
 14545              		.section	.bss.width_CV,"aw",%nobits
 14546              		.align	2
 14547              		.set	.LANCHOR59,. + 0
 14550              	width_CV:
 14551 0000 00000000 		.space	4
 14552              		.section	.data.drywet,"aw"
 14553              		.align	2
 14554              		.set	.LANCHOR56,. + 0
 14557              	drywet:
 14558 0000 0000003F 		.word	1056964608
 14559              		.section	.data.width,"aw"
 14560              		.align	2
 14561              		.set	.LANCHOR64,. + 0
 14564              	width:
 14565 0000 0000803F 		.word	1065353216
 14566              		.section	.rodata.CSWTCH.368,"a"
 14567              		.align	3
 14568              		.set	.LANCHOR25,. + 0
 14571              	CSWTCH.368:
 14572 0000 00000000 		.word	0
 14573 0004 0000F83F 		.word	1073217536
 14574 0008 00000000 		.word	0
 14575 000c 00000040 		.word	1073741824
 14576 0010 00000000 		.word	0
 14577 0014 00000840 		.word	1074266112
 14578              		.section	.rodata._ZL18defaultAltControls,"a"
 14579              		.align	2
 14580              		.set	.LANCHOR116,. + 0
 14583              	_ZL18defaultAltControls:
 14584 0000 00650148 		.word	1208050944
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 416


 14585 0004 0000803F 		.word	1065353216
 14586 0008 00000000 		.word	0
 14587 000c 9A99A140 		.word	1084332442
 14588 0010 00004843 		.word	1128792064
 14589 0014 00803B46 		.word	1178304512
 14590 0018 00000000 		.word	0
 14591 001c 00000000 		.word	0
 14592 0020 0024F448 		.word	1223959552
 14593 0024 00000000 		.word	0
 14594 0028 00000000 		.word	0
 14595              		.section	.sdram_bss,"aw"
 14596              		.align	2
 14599              	delMemsR_REV:
 14600 0000 00000000 		.space	2400040
 14600      00000000 
 14600      00000000 
 14600      00000000 
 14600      00000000 
 14603              	delMemsL_REV:
 14604 249f28 00000000 		.space	2400040
 14604      00000000 
 14604      00000000 
 14604      00000000 
 14604      00000000 
 14607              	delMemsR:
 14608 493e50 00000000 		.space	6912136
 14608      00000000 
 14608      00000000 
 14608      00000000 
 14608      00000000 
 14611              	delMemsL:
 14612 b2b6d8 00000000 		.space	6912136
 14612      00000000 
 14612      00000000 
 14612      00000000 
 14612      00000000 
 14613              		.text
 14614              	.Letext0:
 14615              		.file 28 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_d
 14616              		.file 29 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdin
 14617              		.file 30 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdint.h"
 14618              		.file 31 "../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 14619              		.file 32 "../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 14620              		.file 33 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 14621              		.file 34 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14622              		.file 35 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14623              		.file 36 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14624              		.file 37 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14625              		.file 38 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14626              		.file 39 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14627              		.file 40 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14628              		.file 41 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14629              		.file 42 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14630              		.file 43 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14631              		.file 44 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14632              		.file 45 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14633              		.file 46 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 417


 14634              		.file 47 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14635              		.file 48 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14636              		.file 49 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14637              		.file 50 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14638              		.file 51 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14639              		.file 52 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14640              		.file 53 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14641              		.file 54 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14642              		.file 55 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock.h
 14643              		.file 56 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_types
 14644              		.file 57 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reent.
 14645              		.file 58 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
 14646              		.file 59 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdlib.h"
 14647              		.file 60 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14648              		.file 61 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 14649              		.file 62 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 14650              		.file 63 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14651              		.file 64 "../libdaisy/src/daisy_core.h"
 14652              		.file 65 "../libdaisy/src/per/tim.h"
 14653              		.file 66 "../libdaisy/src/per/sai.h"
 14654              		.file 67 "../libdaisy/src/util/wav_format.h"
 14655              		.file 68 "../libdaisy/src/per/qspi.h"
 14656              		.file 69 "../libdaisy/src/per/gpio.h"
 14657              		.file 70 "../libdaisy/src/dev/sdram.h"
 14658              		.file 71 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 14659              		.file 72 "<built-in>"
 14660              		.file 73 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdio.h"
 14661              		.file 74 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/unistd
 14662              		.file 75 "../libdaisy/src/util/oled_fonts.h"
 14663              		.file 76 "../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 14664              		.file 77 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 14665              		.file 78 "../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 14666              		.file 79 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 14667              		.file 80 "../libdaisy/src/util/sd_diskio.h"
 14668              		.file 81 "../libdaisy/src/sys/fatfs.h"
 14669              		.file 82 "../DaisySP/Source/Control/adenv.h"
 14670              		.file 83 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/wchar.h"
 14671              		.file 84 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/locale.h"
 14672              		.file 85 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/ctype.h"
 14673              		.file 86 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/errno.
 14674              		.file 87 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/string.h"
 14675              		.file 88 "QSPI_Settings.h"
 14676              		.file 89 "scale.h"
 14677              		.file 90 "constants.h"
 14678              		.file 91 "../libdaisy/src/dev/sr_595.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 418


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Veno-Echo.cpp
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:17     .text._ZN5daisy6SwitchD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:43     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:92     .text._ZN7daisysp4AdsrD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:100    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:100    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:117    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:125    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:125    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:142    .text._ZN7daisysp3SvfD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:150    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:150    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:167    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:175    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:175    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:192    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:200    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 _ZN7daisysp7DcBlockD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:200    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 _ZN7daisysp7DcBlockD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:217    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:242    .text._ZN8TaptempoD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:267    .text._ZN8TempoLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:304    .text._ZN9ButtonLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:312    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:312    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:338    .text._ZN10DelayMultiD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:346    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:346    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:377    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:385    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:385    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:402    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:410    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:410    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:427    .text._Z10InitDelaysf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:435    .text._Z10InitDelaysf:0000000000000000 _Z10InitDelaysf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:987    .text._Z10InitDelaysf:0000000000000178 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14611  .sdram_bss:0000000000b2b6d8 delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14607  .sdram_bss:0000000000493e50 delMemsR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14603  .sdram_bss:0000000000249f28 delMemsL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14599  .sdram_bss:0000000000000000 delMemsR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:1012   .text._Z20Update_DelayTimeL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:1020   .text._Z20Update_DelayTimeL_CVv:0000000000000000 _Z20Update_DelayTimeL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:1045   .text._Z20Update_DelayTimeL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:1051   .text._Z17Update_DelayTimeLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:1059   .text._Z17Update_DelayTimeLv:0000000000000000 _Z17Update_DelayTimeLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:1636   .text._Z17Update_DelayTimeLv:00000000000001e0 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 419


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:1666   .text._Z20Update_DelayTimeR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:1674   .text._Z20Update_DelayTimeR_CVv:0000000000000000 _Z20Update_DelayTimeR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:1699   .text._Z20Update_DelayTimeR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:1705   .text._Z17Update_DelayTimeRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:1713   .text._Z17Update_DelayTimeRv:0000000000000000 _Z17Update_DelayTimeRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:2202   .text._Z17Update_DelayTimeRv:00000000000001ac $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:2229   .text._Z19Update_feedbackL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:2237   .text._Z19Update_feedbackL_CVv:0000000000000000 _Z19Update_feedbackL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:2262   .text._Z19Update_feedbackL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:2268   .text._Z16Update_feedbackLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:2276   .text._Z16Update_feedbackLv:0000000000000000 _Z16Update_feedbackLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:2731   .text._Z16Update_feedbackLv:000000000000019c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:2760   .text._Z19Update_feedbackR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:2768   .text._Z19Update_feedbackR_CVv:0000000000000000 _Z19Update_feedbackR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:2793   .text._Z19Update_feedbackR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:2799   .text._Z16Update_feedbackRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:2807   .text._Z16Update_feedbackRv:0000000000000000 _Z16Update_feedbackRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:3261   .text._Z16Update_feedbackRv:000000000000019c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:3290   .text._Z16Update_drywet_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:3298   .text._Z16Update_drywet_CVv:0000000000000000 _Z16Update_drywet_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:3323   .text._Z16Update_drywet_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:3329   .text._Z13Update_drywetv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:3337   .text._Z13Update_drywetv:0000000000000000 _Z13Update_drywetv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:3846   .text._Z13Update_drywetv:00000000000001f8 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:3883   .text._Z15Update_width_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:3891   .text._Z15Update_width_CVv:0000000000000000 _Z15Update_width_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:3916   .text._Z15Update_width_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:3922   .text._Z12Update_widthv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:3930   .text._Z12Update_widthv:0000000000000000 _Z12Update_widthv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:4403   .text._Z12Update_widthv:0000000000000190 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:4429   .text._Z20Update_crossfeedbackv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:4437   .text._Z20Update_crossfeedbackv:0000000000000000 _Z20Update_crossfeedbackv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:4798   .text._Z20Update_crossfeedbackv:000000000000011c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:4818   .text._Z18Update_filterXfadev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:4826   .text._Z18Update_filterXfadev:0000000000000000 _Z18Update_filterXfadev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:5163   .text._Z18Update_filterXfadev:0000000000000120 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:5186   .text._Z8GetModCVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:5194   .text._Z8GetModCVv:0000000000000000 _Z8GetModCVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:5224   .text._Z8GetModCVv:0000000000000020 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:5232   .text._Z10Update_Modv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:5240   .text._Z10Update_Modv:0000000000000000 _Z10Update_Modv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:5397   .text._Z10Update_Modv:0000000000000058 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:5409   .text._Z11UpdateClockv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:5417   .text._Z11UpdateClockv:0000000000000000 _Z11UpdateClockv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:5523   .text._Z11UpdateClockv:0000000000000044 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:5532   .text._Z21Update_DelayBaseTempov:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:5540   .text._Z21Update_DelayBaseTempov:0000000000000000 _Z21Update_DelayBaseTempov
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:5592   .text._Z21Update_DelayBaseTempov:000000000000001c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:5599   .text._Z21Update_DelayTempoLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:5607   .text._Z21Update_DelayTempoLEDsv:0000000000000000 _Z21Update_DelayTempoLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:5660   .text._Z21Update_DelayTempoLEDsv:0000000000000034 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:5669   .text._Z19Update_BaseTempoLEDv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:5677   .text._Z19Update_BaseTempoLEDv:0000000000000000 _Z19Update_BaseTempoLEDv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:5799   .text._Z19Update_BaseTempoLEDv:0000000000000064 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:5810   .text._Z13ApplySettingsRK8Settings:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:5818   .text._Z13ApplySettingsRK8Settings:0000000000000000 _Z13ApplySettingsRK8Settings
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:6520   .text._Z13ApplySettingsRK8Settings:000000000000036c $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 420


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:6561   .text._Z13ApplySettingsRK8Settings:0000000000000404 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:6640   .text._Z13ApplySettingsRK8Settings:0000000000000450 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:6654   .text.startup.main:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:6662   .text.startup.main:0000000000000000 main
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:7533   .text.startup.main:0000000000000340 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:7563   .text.startup.main:00000000000003b4 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:8102   .text.startup.main:0000000000000630 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:9061   .text._ZL13AudioCallbackPfS_j:0000000000000000 _ZL13AudioCallbackPfS_j
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:8129   .text._Z13TurnOnAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:8137   .text._Z13TurnOnAllLEDsv:0000000000000000 _Z13TurnOnAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:8199   .text._Z13TurnOnAllLEDsv:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:8210   .text._Z12ResetAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:8218   .text._Z12ResetAllLEDsv:0000000000000000 _Z12ResetAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:8321   .text._Z12ResetAllLEDsv:000000000000007c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:8333   .text._Z14Update_Buttonsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:8341   .text._Z14Update_Buttonsv:0000000000000000 _Z14Update_Buttonsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:9027   .text._Z14Update_Buttonsv:0000000000000268 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:9054   .text._ZL13AudioCallbackPfS_j:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:9130   .text._ZL13AudioCallbackPfS_j:000000000000003a $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:9145   .text._ZL13AudioCallbackPfS_j:0000000000000058 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:9191   .text._ZL13AudioCallbackPfS_j:0000000000000088 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:9203   .text._ZL13AudioCallbackPfS_j:00000000000000a0 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:10254  .text._ZL13AudioCallbackPfS_j:0000000000000440 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:10297  .text._ZL13AudioCallbackPfS_j:00000000000004e8 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:11127  .text._ZL13AudioCallbackPfS_j:0000000000000834 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:11143  .text._ZL13AudioCallbackPfS_j:0000000000000864 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:12022  .text._ZL13AudioCallbackPfS_j:0000000000000bac $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:12058  .text._ZL13AudioCallbackPfS_j:0000000000000c1c $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:12256  .text._ZL13AudioCallbackPfS_j:0000000000000cd0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:12266  .text._Z9HardLimitff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:12274  .text._Z9HardLimitff:0000000000000000 _Z9HardLimitff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:12308  .text._Z10PotCVComboff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:12316  .text._Z10PotCVComboff:0000000000000000 _Z10PotCVComboff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:12363  .text._Z10PotCVComboff:0000000000000038 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:12368  .text._Z16checkPickupStateffbb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:12376  .text._Z16checkPickupStateffbb:0000000000000000 _Z16checkPickupStateffbb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:12460  .text._Z16checkPickupStateffbb:000000000000003c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:12465  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:12473  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 _Z20checkPickupState_altff11pickupStateb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:12563  .text._Z20checkPickupState_altff11pickupStateb:000000000000006c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:12568  .text._Z11GetTapRatio9TapRatios:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:12576  .text._Z11GetTapRatio9TapRatios:0000000000000000 _Z11GetTapRatio9TapRatios
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:12606  .text._Z11GetTapRatio9TapRatios:000000000000001c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:12611  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:12618  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 _GLOBAL__sub_I_delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13537  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000264 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13613  .init_array:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13665  .bss.AltControls:0000000000000000 AltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13672  .bss.BaseTempo:0000000000000000 BaseTempo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13679  .bss.ClockIn:0000000000000000 ClockIn
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13767  .bss.Sync:0000000000000000 Sync
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13760  .bss.ReverseGateR:0000000000000000 ReverseGateR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13753  .bss.ReverseGateL:0000000000000000 ReverseGateL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13726  .bss.PHASE_DEBUG:0000000000000000 PHASE_DEBUG
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13698  .bss.DELAYR_DEBUG:0000000000000000 DELAYR_DEBUG
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13691  .bss.DELAYL_DEBUG:0000000000000000 DELAYL_DEBUG
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14517  .bss.saveState:0000000000000000 saveState
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 421


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14524  .bss.save_flag:0000000000000000 save_flag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13732  .bss.PostFilters:0000000000000000 PostFilters
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13684  .bss.ClockInFlag:0000000000000000 ClockInFlag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14511  .bss.mute:0000000000000000 mute
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14530  .bss.shift:0000000000000000 shift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14536  .bss.syncMode:0000000000000000 syncMode
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14505  .bss.modulation_CV_Raw:0000000000000000 modulation_CV_Raw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13719  .bss.ModDepth:0000000000000000 ModDepth
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14498  .bss.filterXfade:0000000000000000 filterXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14550  .bss.width_CV:0000000000000000 width_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14564  .data.width:0000000000000000 width
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14463  .bss.drywet_CV:0000000000000000 drywet_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14557  .data.drywet:0000000000000000 drywet
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14414  .bss.crossfeedback_CV:0000000000000000 crossfeedback_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14408  .bss.crossfeedback:0000000000000000 crossfeedback
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14491  .bss.feedbackR_CV:0000000000000000 feedbackR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14484  .bss.feedbackR:0000000000000000 feedbackR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14477  .bss.feedbackL_CV:0000000000000000 feedbackL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14470  .bss.feedbackL:0000000000000000 feedbackL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14442  .bss.delayTimeR_CV:0000000000000000 delayTimeR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14435  .bss.delayTimeL_CV:0000000000000000 delayTimeL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14543  .bss.tempoLED_BASE:0000000000000000 tempoLED_BASE
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13774  .bss.Tap_Button:0000000000000000 Tap_Button
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13746  .bss.Rev_R_sw:0000000000000000 Rev_R_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13739  .bss.Rev_L_sw:0000000000000000 Rev_L_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13705  .bss.HPF_sw:0000000000000000 HPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13712  .bss.LPF_sw:0000000000000000 LPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14456  .bss.delaysR_REV:0000000000000000 delaysR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14449  .bss.delaysL_REV:0000000000000000 delaysL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14428  .bss.delayR:0000000000000000 delayR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14421  .bss.delayL:0000000000000000 delayL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13661  .bss.AltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13668  .bss.BaseTempo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13675  .bss.ClockIn:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13685  .bss.ClockInFlag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13687  .bss.DELAYL_DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13694  .bss.DELAYR_DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13701  .bss.HPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13708  .bss.LPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13715  .bss.ModDepth:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13722  .bss.PHASE_DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13733  .bss.PostFilters:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13735  .bss.Rev_L_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13742  .bss.Rev_R_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13749  .bss.ReverseGateL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13756  .bss.ReverseGateR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13763  .bss.Sync:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13770  .bss.Tap_Button:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13777  .bss._ZL10FwdRevLEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13781  .bss._ZL10FwdRevLEnv:0000000000000000 _ZL10FwdRevLEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13784  .bss._ZL10FwdRevREnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13788  .bss._ZL10FwdRevREnv:0000000000000000 _ZL10FwdRevREnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13791  .bss._ZL10HPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13795  .bss._ZL10HPF_LXfade:0000000000000000 _ZL10HPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13798  .bss._ZL10HPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13802  .bss._ZL10HPF_L_post:0000000000000000 _ZL10HPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13805  .bss._ZL10HPF_RXfade:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 422


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13809  .bss._ZL10HPF_RXfade:0000000000000000 _ZL10HPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13812  .bss._ZL10HPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13816  .bss._ZL10HPF_R_post:0000000000000000 _ZL10HPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13819  .bss._ZL10LPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13823  .bss._ZL10LPF_LXfade:0000000000000000 _ZL10LPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13826  .bss._ZL10LPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13830  .bss._ZL10LPF_L_post:0000000000000000 _ZL10LPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13833  .bss._ZL10LPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13837  .bss._ZL10LPF_RXfade:0000000000000000 _ZL10LPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13840  .bss._ZL10LPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13844  .bss._ZL10LPF_R_post:0000000000000000 _ZL10LPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13847  .bss._ZL10WidthXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13851  .bss._ZL10WidthXfade:0000000000000000 _ZL10WidthXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13854  .bss._ZL11DcBlock_LFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13858  .bss._ZL11DcBlock_LFB:0000000000000000 _ZL11DcBlock_LFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13861  .bss._ZL11DcBlock_RFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13865  .bss._ZL11DcBlock_RFB:0000000000000000 _ZL11DcBlock_RFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13868  .bss._ZL11FilterMix_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13872  .bss._ZL11FilterMix_L:0000000000000000 _ZL11FilterMix_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13875  .bss._ZL11FilterMix_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13879  .bss._ZL11FilterMix_R:0000000000000000 _ZL11FilterMix_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13882  .bss._ZL12FwdRevLXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13886  .bss._ZL12FwdRevLXfade:0000000000000000 _ZL12FwdRevLXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13889  .bss._ZL12FwdRevRXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13893  .bss._ZL12FwdRevRXfade:0000000000000000 _ZL12FwdRevRXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13896  .bss._ZL15HPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13900  .bss._ZL15HPF_LXfade_post:0000000000000000 _ZL15HPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13903  .bss._ZL15HPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13907  .bss._ZL15HPF_RXfade_post:0000000000000000 _ZL15HPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13910  .bss._ZL15LPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13914  .bss._ZL15LPF_LXfade_post:0000000000000000 _ZL15LPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13917  .bss._ZL15LPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13921  .bss._ZL15LPF_RXfade_post:0000000000000000 _ZL15LPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13924  .bss._ZL16FilterMix_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13928  .bss._ZL16FilterMix_L_post:0000000000000000 _ZL16FilterMix_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13931  .bss._ZL16FilterMix_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13935  .bss._ZL16FilterMix_R_post:0000000000000000 _ZL16FilterMix_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13938  .bss._ZL2hw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13942  .bss._ZL2hw:0000000000000000 _ZL2hw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13945  .bss._ZL3lfo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13949  .bss._ZL3lfo:0000000000000000 _ZL3lfo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13952  .bss._ZL5HPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13956  .bss._ZL5HPF_L:0000000000000000 _ZL5HPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13959  .bss._ZL5HPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13963  .bss._ZL5HPF_R:0000000000000000 _ZL5HPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13966  .bss._ZL5LPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13970  .bss._ZL5LPF_L:0000000000000000 _ZL5LPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13973  .bss._ZL5LPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13977  .bss._ZL5LPF_R:0000000000000000 _ZL5LPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13980  .bss._ZL7HPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13984  .bss._ZL7HPF_Env:0000000000000000 _ZL7HPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13987  .bss._ZL7LPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13991  .bss._ZL7LPF_Env:0000000000000000 _ZL7LPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13994  .bss._ZL7LeftEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:13998  .bss._ZL7LeftEnv:0000000000000000 _ZL7LeftEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14001  .bss._ZL8RightEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14005  .bss._ZL8RightEnv:0000000000000000 _ZL8RightEnv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 423


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14008  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14012  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 _ZZ10Update_ModvE13modulation_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14015  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14019  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 _ZZ10Update_ModvE17ModDepth_Filtered
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14022  .bss._ZZ12Update_widthvE10width_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14026  .bss._ZZ12Update_widthvE10width_Last:0000000000000000 _ZZ12Update_widthvE10width_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14029  .bss._ZZ12Update_widthvE12ModDepth_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14033  .bss._ZZ12Update_widthvE12ModDepth_new:0000000000000000 _ZZ12Update_widthvE12ModDepth_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14039  .bss._ZZ12Update_widthvE12width_pickup:0000000000000000 _ZZ12Update_widthvE12width_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14040  .bss._ZZ12Update_widthvE12width_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14045  .bss._ZZ12Update_widthvE15ModDepth_pickup:0000000000000000 _ZZ12Update_widthvE15ModDepth_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14046  .bss._ZZ12Update_widthvE15ModDepth_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14051  .bss._ZZ12Update_widthvE9lastShift:0000000000000000 _ZZ12Update_widthvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14052  .bss._ZZ12Update_widthvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14054  .bss._ZZ12Update_widthvE9width_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14058  .bss._ZZ12Update_widthvE9width_new:0000000000000000 _ZZ12Update_widthvE9width_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14064  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 _ZZ13Update_drywetvE10Res_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14065  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14067  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14071  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 _ZZ13Update_drywetvE10drywet_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14074  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14078  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 _ZZ13Update_drywetvE11drywet_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14084  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 _ZZ13Update_drywetvE13drywet_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14085  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14087  .bss._ZZ13Update_drywetvE7Res_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14091  .bss._ZZ13Update_drywetvE7Res_new:0000000000000000 _ZZ13Update_drywetvE7Res_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14097  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 _ZZ13Update_drywetvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14098  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14100  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14104  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 _ZZ14Update_ButtonsvE11buttonstate
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14107  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14111  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 _ZZ14Update_ButtonsvE9resetTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14114  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14118  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 _ZZ14Update_ButtonsvE9shiftTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14121  .bss._ZZ16Update_feedbackLvE12HPCutoff_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14125  .bss._ZZ16Update_feedbackLvE12HPCutoff_new:0000000000000000 _ZZ16Update_feedbackLvE12HPCutoff_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14128  .bss._ZZ16Update_feedbackLvE13feedbackL_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14132  .bss._ZZ16Update_feedbackLvE13feedbackL_new:0000000000000000 _ZZ16Update_feedbackLvE13feedbackL_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14135  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14139  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 _ZZ16Update_feedbackLvE14feedbackL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14145  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackLvE15HPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14146  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14151  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 _ZZ16Update_feedbackLvE16feedbackL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14152  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14157  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 _ZZ16Update_feedbackLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14158  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14160  .bss._ZZ16Update_feedbackRvE12LPCutoff_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14164  .bss._ZZ16Update_feedbackRvE12LPCutoff_new:0000000000000000 _ZZ16Update_feedbackRvE12LPCutoff_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14167  .bss._ZZ16Update_feedbackRvE13feedbackR_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14171  .bss._ZZ16Update_feedbackRvE13feedbackR_new:0000000000000000 _ZZ16Update_feedbackRvE13feedbackR_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14174  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14178  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 _ZZ16Update_feedbackRvE14feedbackR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14184  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackRvE15LPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14185  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14190  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 _ZZ16Update_feedbackRvE16feedbackR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14191  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14196  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 _ZZ16Update_feedbackRvE9lastShift
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 424


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14197  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14199  .bss._ZZ17Update_DelayTimeLvE14delayTimeL_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14203  .bss._ZZ17Update_DelayTimeLvE14delayTimeL_new:0000000000000000 _ZZ17Update_DelayTimeLvE14delayTimeL_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14206  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14210  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 _ZZ17Update_DelayTimeLvE15delayTimeL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14213  .bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14217  .bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:0000000000000000 _ZZ17Update_DelayTimeLvE17Rev_DelayTime_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14223  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE17delayTimeL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14224  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14229  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14230  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14232  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14236  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 _ZZ17Update_DelayTimeLvE8counterL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14242  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14243  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14245  .bss._ZZ17Update_DelayTimeRvE12tapRatio_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14249  .bss._ZZ17Update_DelayTimeRvE12tapRatio_new:0000000000000000 _ZZ17Update_DelayTimeRvE12tapRatio_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14252  .bss._ZZ17Update_DelayTimeRvE14delayTimeR_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14256  .bss._ZZ17Update_DelayTimeRvE14delayTimeR_new:0000000000000000 _ZZ17Update_DelayTimeRvE14delayTimeR_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14259  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14263  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 _ZZ17Update_DelayTimeRvE15delayTimeR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14269  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE15tapRatio_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14270  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14275  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE17delayTimeR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14276  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14278  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14282  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 _ZZ17Update_DelayTimeRvE8counterR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14288  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeRvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14289  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14291  .bss._ZZ18Update_filterXfadevE15PostFilters_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14295  .bss._ZZ18Update_filterXfadevE15PostFilters_new:0000000000000000 _ZZ18Update_filterXfadevE15PostFilters_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14298  .bss._ZZ18Update_filterXfadevE15filterXfade_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14302  .bss._ZZ18Update_filterXfadevE15filterXfade_new:0000000000000000 _ZZ18Update_filterXfadevE15filterXfade_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14305  .bss._ZZ18Update_filterXfadevE16filterXfade_last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14309  .bss._ZZ18Update_filterXfadevE16filterXfade_last:0000000000000000 _ZZ18Update_filterXfadevE16filterXfade_last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14315  .bss._ZZ18Update_filterXfadevE18PostFilters_pickup:0000000000000000 _ZZ18Update_filterXfadevE18PostFilters_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14316  .bss._ZZ18Update_filterXfadevE18PostFilters_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14321  .bss._ZZ18Update_filterXfadevE18filterXfade_pickup:0000000000000000 _ZZ18Update_filterXfadevE18filterXfade_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14322  .bss._ZZ18Update_filterXfadevE18filterXfade_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14327  .bss._ZZ18Update_filterXfadevE9lastShift:0000000000000000 _ZZ18Update_filterXfadevE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14328  .bss._ZZ18Update_filterXfadevE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14330  .bss._ZZ19Update_BaseTempoLEDvE12phaseCounter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14334  .bss._ZZ19Update_BaseTempoLEDvE12phaseCounter:0000000000000000 _ZZ19Update_BaseTempoLEDvE12phaseCounter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14337  .bss._ZZ20Update_crossfeedbackvE11modRate_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14341  .bss._ZZ20Update_crossfeedbackvE11modRate_new:0000000000000000 _ZZ20Update_crossfeedbackvE11modRate_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14347  .bss._ZZ20Update_crossfeedbackvE14modRate_pickup:0000000000000000 _ZZ20Update_crossfeedbackvE14modRate_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14348  .bss._ZZ20Update_crossfeedbackvE14modRate_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14350  .bss._ZZ20Update_crossfeedbackvE17crossfeedback_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14354  .bss._ZZ20Update_crossfeedbackvE17crossfeedback_new:0000000000000000 _ZZ20Update_crossfeedbackvE17crossfeedback_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14357  .bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14361  .bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last:0000000000000000 _ZZ20Update_crossfeedbackvE18crossfeedback_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14367  .bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup:0000000000000000 _ZZ20Update_crossfeedbackvE20crossfeedback_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14368  .bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14373  .bss._ZZ20Update_crossfeedbackvE9lastShift:0000000000000000 _ZZ20Update_crossfeedbackvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14374  .bss._ZZ20Update_crossfeedbackvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14376  .bss._ZZ4mainE9saveTimer:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14380  .bss._ZZ4mainE9saveTimer:0000000000000000 _ZZ4mainE9saveTimer
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 425


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14383  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14387  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6LNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14390  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14394  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6RNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14397  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14401  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 _ZZL13AudioCallbackPfS_jE7Counter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14404  .bss.crossfeedback:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14411  .bss.crossfeedback_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14417  .bss.delayL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14424  .bss.delayR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14431  .bss.delayTimeL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14438  .bss.delayTimeR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14445  .bss.delaysL_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14452  .bss.delaysR_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14459  .bss.drywet_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14466  .bss.feedbackL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14473  .bss.feedbackL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14480  .bss.feedbackR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14487  .bss.feedbackR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14494  .bss.filterXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14501  .bss.modulation_CV_Raw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14512  .bss.mute:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14518  .bss.saveState:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14520  .bss.save_flag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14531  .bss.shift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14537  .bss.syncMode:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14539  .bss.tempoLED_BASE:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14546  .bss.width_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14553  .data.drywet:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14560  .data.width:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14567  .rodata.CSWTCH.368:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14571  .rodata.CSWTCH.368:0000000000000000 CSWTCH.368
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14579  .rodata._ZL18defaultAltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14583  .rodata._ZL18defaultAltControls:0000000000000000 _ZL18defaultAltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s:14596  .sdram_bss:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy6SwitchD5Ev
                           .group:0000000000000000 _ZN5daisy9DaisySeedD5Ev
                           .group:0000000000000000 _ZN7daisysp4AdsrD5Ev
                           .group:0000000000000000 _ZN7daisysp10OscillatorD5Ev
                           .group:0000000000000000 _ZN7daisysp3SvfD5Ev
                           .group:0000000000000000 _ZN7daisysp9CrossFadeD5Ev
                           .group:0000000000000000 _ZN7daisysp7DcBlockD5Ev
                           .group:0000000000000000 _ZN7daisysp9EnvFollowD5Ev
                           .group:0000000000000000 _ZN8TaptempoD5Ev
                           .group:0000000000000000 _ZN8TempoLEDD5Ev
                           .group:0000000000000000 _ZN9ButtonLEDD5Ev
                           .group:0000000000000000 _ZN10DelayMultiD5Ev
                           .group:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED5Ev
                           .group:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED5Ev

UNDEFINED SYMBOLS
_ZN5daisy9DaisySeed6GetPinEh
_ZN10DelayMulti4initE12dsy_gpio_pinf
_ZNK5daisy9AdcHandle8GetFloatEh
_ZNK5daisy9AdcHandle11GetMuxFloatEhh
_ZN10DelayMulti12SetDelayTimeEfb
_Z5scalefff9CurveType
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccB6yIwL.s 			page 426


_ZN8Taptempo11setTapRatioEf
_ZN7daisysp3Svf7SetFreqEf
_ZN7daisysp3Svf6SetResEf
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN7daisysp10Oscillator7ProcessEv
_ZN5daisy6Switch8DebounceEv
_ZN8Taptempo3tapEv
_ZN8Taptempo10getTapFreqEv
_ZN8TempoLED8setTempoEf
_ZN8Taptempo12getTapLengthEv
_ZN8Taptempo14getDelayLengthEv
_ZN10DelayMulti14updateTempoLEDEb
_ZN10DelayMulti12GetDelayTimeEv
_ZN8TempoLED6updateEv
_ZN8TempoLED5isEOCEv
_ZN8Taptempo12setTapLengthEf
_ZN9ButtonLED6turnONEv
_ZN9ButtonLED7turnOFFEv
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN7daisysp4Adsr4InitEf
_ZN7daisysp3Svf4InitEf
_ZN7daisysp3Svf8SetDriveEf
_ZN7daisysp7DcBlock4InitEf
_ZN8Taptempo4initEmmf
_ZN8TempoLED4initE12dsy_gpio_pinf
_ZN8TempoLED10resetPhaseEv
_Z12LoadSettingsv
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
_ZN5daisy6System6GetNowEv
_Z12SaveSettingsRK8Settings
_ZN8TempoLED7LED_setEf
_ZN9ButtonLED7LED_setEf
_ZN9ButtonLED8getStateEv
_ZN9ButtonLED6updateEv
_ZN9ButtonLED10RisingEdgeEv
_ZN9ButtonLED11FallingEdgeEv
_ZN9ButtonLED6toggleEv
_ZN7daisysp7DcBlock7ProcessEf
_ZN10DelayMulti5WriteERKf
_ZN7daisysp9CrossFade7ProcessERfS1_
_ZN7daisysp4Adsr7ProcessEb
sinf
_ZN10DelayMulti9GetOutputEv
_ZN7daisysp3Svf7ProcessEf
__aeabi_atexit
__dso_handle
