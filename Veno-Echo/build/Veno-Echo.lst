ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Veno-Echo.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy6SwitchD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy6SwitchD2Ev:
  27              	.LVL0:
  28              	.LFB1523:
  29              		.file 1 "../libdaisy/src/hid/switch.h"
   1:../libdaisy/src/hid/switch.h **** #pragma once
   2:../libdaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../libdaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../libdaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../libdaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../libdaisy/src/hid/switch.h **** 
   7:../libdaisy/src/hid/switch.h **** namespace daisy
   8:../libdaisy/src/hid/switch.h **** {
   9:../libdaisy/src/hid/switch.h **** /** 
  10:../libdaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  11:../libdaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  12:../libdaisy/src/hid/switch.h ****     @author Stephen Hensley
  13:../libdaisy/src/hid/switch.h ****     @date December 2019
  14:../libdaisy/src/hid/switch.h ****     @ingroup controls
  15:../libdaisy/src/hid/switch.h **** */
  16:../libdaisy/src/hid/switch.h **** class Switch
  17:../libdaisy/src/hid/switch.h **** {
  18:../libdaisy/src/hid/switch.h ****   public:
  19:../libdaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  20:../libdaisy/src/hid/switch.h ****     enum Type
  21:../libdaisy/src/hid/switch.h ****     {
  22:../libdaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  23:../libdaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  24:../libdaisy/src/hid/switch.h ****     };
  25:../libdaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  26:../libdaisy/src/hid/switch.h ****     enum Polarity
  27:../libdaisy/src/hid/switch.h ****     {
  28:../libdaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  29:../libdaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 2


  30:../libdaisy/src/hid/switch.h ****     };
  31:../libdaisy/src/hid/switch.h **** 
  32:../libdaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  33:../libdaisy/src/hid/switch.h ****     enum Pull
  34:../libdaisy/src/hid/switch.h ****     {
  35:../libdaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  36:../libdaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  37:../libdaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  38:../libdaisy/src/hid/switch.h ****     };
  39:../libdaisy/src/hid/switch.h **** 
  40:../libdaisy/src/hid/switch.h ****     Switch() {}
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
  30              		.loc 1 41 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 41 16 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE1523:
  40              		.weak	_ZN5daisy6SwitchD1Ev
  41              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
  42 0002 00BF     		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN5daisy9DaisySeedD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN5daisy9DaisySeedD2Ev:
  52              	.LVL1:
  53              	.LFB1703:
  54              		.file 2 "../libdaisy/src/daisy_seed.h"
   1:../libdaisy/src/daisy_seed.h **** #pragma once
   2:../libdaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../libdaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../libdaisy/src/daisy_seed.h **** 
   5:../libdaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../libdaisy/src/daisy_seed.h **** 
   7:../libdaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../libdaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../libdaisy/src/daisy_seed.h **** 
  10:../libdaisy/src/daisy_seed.h **** namespace daisy
  11:../libdaisy/src/daisy_seed.h **** {
  12:../libdaisy/src/daisy_seed.h **** /**
  13:../libdaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../libdaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../libdaisy/src/daisy_seed.h **** 
  16:../libdaisy/src/daisy_seed.h ****    @ingroup boards
  17:../libdaisy/src/daisy_seed.h **** */
  18:../libdaisy/src/daisy_seed.h **** class DaisySeed
  19:../libdaisy/src/daisy_seed.h **** {
  20:../libdaisy/src/daisy_seed.h ****   public:
  21:../libdaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 3


  55              		.loc 2 22 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LBB793:
  61              	.LBI793:
  62              		.file 3 "../libdaisy/src/sys/system.h"
   1:../libdaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../libdaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../libdaisy/src/sys/system.h **** 
   4:../libdaisy/src/sys/system.h **** #include <cstdint>
   5:../libdaisy/src/sys/system.h **** #include "per/tim.h"
   6:../libdaisy/src/sys/system.h **** 
   7:../libdaisy/src/sys/system.h **** namespace daisy
   8:../libdaisy/src/sys/system.h **** {
   9:../libdaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  10:../libdaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  11:../libdaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  12:../libdaisy/src/sys/system.h ****  **
  13:../libdaisy/src/sys/system.h ****  ** @author shensley
  14:../libdaisy/src/sys/system.h ****  ** @addtogroup system
  15:../libdaisy/src/sys/system.h ****  */
  16:../libdaisy/src/sys/system.h **** class System
  17:../libdaisy/src/sys/system.h **** {
  18:../libdaisy/src/sys/system.h ****   public:
  19:../libdaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  20:../libdaisy/src/sys/system.h ****     struct Config
  21:../libdaisy/src/sys/system.h ****     {
  22:../libdaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  23:../libdaisy/src/sys/system.h ****         enum class SysClkFreq
  24:../libdaisy/src/sys/system.h ****         {
  25:../libdaisy/src/sys/system.h ****             FREQ_400MHZ,
  26:../libdaisy/src/sys/system.h ****             FREQ_480MHZ,
  27:../libdaisy/src/sys/system.h ****         };
  28:../libdaisy/src/sys/system.h **** 
  29:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  30:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  31:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  32:../libdaisy/src/sys/system.h ****          ** */
  33:../libdaisy/src/sys/system.h ****         void Defaults()
  34:../libdaisy/src/sys/system.h ****         {
  35:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_400MHZ;
  36:../libdaisy/src/sys/system.h ****             use_dcache = true;
  37:../libdaisy/src/sys/system.h ****             use_icache = true;
  38:../libdaisy/src/sys/system.h ****         }
  39:../libdaisy/src/sys/system.h **** 
  40:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  41:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  42:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  43:../libdaisy/src/sys/system.h ****          ** */
  44:../libdaisy/src/sys/system.h ****         void Boost()
  45:../libdaisy/src/sys/system.h ****         {
  46:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_480MHZ;
  47:../libdaisy/src/sys/system.h ****             use_dcache = true;
  48:../libdaisy/src/sys/system.h ****             use_icache = true;
  49:../libdaisy/src/sys/system.h ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 4


  50:../libdaisy/src/sys/system.h **** 
  51:../libdaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  52:../libdaisy/src/sys/system.h ****         bool       use_dcache;
  53:../libdaisy/src/sys/system.h ****         bool       use_icache;
  54:../libdaisy/src/sys/system.h ****     };
  55:../libdaisy/src/sys/system.h **** 
  56:../libdaisy/src/sys/system.h ****     System() {}
  57:../libdaisy/src/sys/system.h ****     ~System() {}
  63              		.loc 3 57 5 view .LVU3
  64              		.loc 3 57 5 is_stmt 0 view .LVU4
  65              	.LBE793:
  66              	.LBB794:
  67              	.LBI794:
  68              		.file 4 "../libdaisy/src/hid/usb.h"
   1:../libdaisy/src/hid/usb.h **** #pragma once
   2:../libdaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../libdaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../libdaisy/src/hid/usb.h **** #include <stdint.h>
   5:../libdaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../libdaisy/src/hid/usb.h **** 
   7:../libdaisy/src/hid/usb.h **** namespace daisy
   8:../libdaisy/src/hid/usb.h **** /** @addtogroup externals
   9:../libdaisy/src/hid/usb.h ****     @{
  10:../libdaisy/src/hid/usb.h **** */
  11:../libdaisy/src/hid/usb.h **** 
  12:../libdaisy/src/hid/usb.h **** {
  13:../libdaisy/src/hid/usb.h **** /** 
  14:../libdaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../libdaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../libdaisy/src/hid/usb.h ****     @date December 2019
  17:../libdaisy/src/hid/usb.h **** */
  18:../libdaisy/src/hid/usb.h **** class UsbHandle
  19:../libdaisy/src/hid/usb.h **** {
  20:../libdaisy/src/hid/usb.h ****   public:
  21:../libdaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../libdaisy/src/hid/usb.h ****     enum class Result
  23:../libdaisy/src/hid/usb.h ****     {
  24:../libdaisy/src/hid/usb.h ****         OK,
  25:../libdaisy/src/hid/usb.h ****         ERR,
  26:../libdaisy/src/hid/usb.h ****     };
  27:../libdaisy/src/hid/usb.h **** 
  28:../libdaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../libdaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../libdaisy/src/hid/usb.h ****     {
  31:../libdaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../libdaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../libdaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../libdaisy/src/hid/usb.h ****     };
  35:../libdaisy/src/hid/usb.h **** 
  36:../libdaisy/src/hid/usb.h **** 
  37:../libdaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../libdaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../libdaisy/src/hid/usb.h **** 
  40:../libdaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../libdaisy/src/hid/usb.h **** 
  42:../libdaisy/src/hid/usb.h ****     ~UsbHandle() {}
  69              		.loc 4 42 5 is_stmt 1 view .LVU5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 5


  70              		.loc 4 42 5 is_stmt 0 view .LVU6
  71              	.LBE794:
  72              	.LBB795:
  73              	.LBI795:
  74              		.file 5 "../libdaisy/src/per/adc.h"
   1:../libdaisy/src/per/adc.h **** #pragma once
   2:../libdaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../libdaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../libdaisy/src/per/adc.h **** #include <stdint.h>
   5:../libdaisy/src/per/adc.h **** #include <stdlib.h>
   6:../libdaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../libdaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../libdaisy/src/per/adc.h **** 
   9:../libdaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 14 /**< Maximum number of ADC channels */
  10:../libdaisy/src/per/adc.h **** 
  11:../libdaisy/src/per/adc.h **** namespace daisy
  12:../libdaisy/src/per/adc.h **** {
  13:../libdaisy/src/per/adc.h **** /** @addtogroup analog_digital_conversion
  14:../libdaisy/src/per/adc.h ****     @{
  15:../libdaisy/src/per/adc.h **** */
  16:../libdaisy/src/per/adc.h **** 
  17:../libdaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../libdaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../libdaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../libdaisy/src/per/adc.h **** */
  21:../libdaisy/src/per/adc.h **** 
  22:../libdaisy/src/per/adc.h **** /** Configuration Structure for a given channel */
  23:../libdaisy/src/per/adc.h **** struct AdcChannelConfig
  24:../libdaisy/src/per/adc.h **** {
  25:../libdaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  26:../libdaisy/src/per/adc.h ****     enum MuxPin
  27:../libdaisy/src/per/adc.h ****     {
  28:../libdaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  29:../libdaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  30:../libdaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  31:../libdaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  32:../libdaisy/src/per/adc.h ****     };
  33:../libdaisy/src/per/adc.h **** 
  34:../libdaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  35:../libdaisy/src/per/adc.h ****     \param pin Pin to init.
  36:../libdaisy/src/per/adc.h ****      */
  37:../libdaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  38:../libdaisy/src/per/adc.h **** 
  39:../libdaisy/src/per/adc.h ****     /** 
  40:../libdaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  41:../libdaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  42:../libdaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  43:../libdaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  44:../libdaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  45:../libdaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  46:../libdaisy/src/per/adc.h ****     \param mux_0 First mux pin
  47:../libdaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  48:../libdaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  49:../libdaisy/src/per/adc.h ****     \param adc_pin &
  50:../libdaisy/src/per/adc.h ****     */
  51:../libdaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  52:../libdaisy/src/per/adc.h ****                  size_t       mux_channels,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 6


  53:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  54:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  55:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  56:../libdaisy/src/per/adc.h **** 
  57:../libdaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  58:../libdaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  59:../libdaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  60:../libdaisy/src/per/adc.h **** };
  61:../libdaisy/src/per/adc.h **** 
  62:../libdaisy/src/per/adc.h **** /**
  63:../libdaisy/src/per/adc.h ****    Handler for analog to digital conversion
  64:../libdaisy/src/per/adc.h **** */
  65:../libdaisy/src/per/adc.h **** class AdcHandle
  66:../libdaisy/src/per/adc.h **** {
  67:../libdaisy/src/per/adc.h ****   public:
  68:../libdaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  69:../libdaisy/src/per/adc.h ****     enum OverSampling
  70:../libdaisy/src/per/adc.h ****     {
  71:../libdaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  72:../libdaisy/src/per/adc.h ****         OVS_4,    /**< & */
  73:../libdaisy/src/per/adc.h ****         OVS_8,    /**< & */
  74:../libdaisy/src/per/adc.h ****         OVS_16,   /**< & */
  75:../libdaisy/src/per/adc.h ****         OVS_32,   /**< & */
  76:../libdaisy/src/per/adc.h ****         OVS_64,   /**< & */
  77:../libdaisy/src/per/adc.h ****         OVS_128,  /**< & */
  78:../libdaisy/src/per/adc.h ****         OVS_256,  /**< & */
  79:../libdaisy/src/per/adc.h ****         OVS_512,  /**< & */
  80:../libdaisy/src/per/adc.h ****         OVS_1024, /**< & */
  81:../libdaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  82:../libdaisy/src/per/adc.h ****     };
  83:../libdaisy/src/per/adc.h **** 
  84:../libdaisy/src/per/adc.h ****     AdcHandle() {}
  85:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
  75              		.loc 5 85 5 is_stmt 1 view .LVU7
  76              		.loc 5 85 5 is_stmt 0 view .LVU8
  77              	.LBE795:
  78              	.LBB796:
  79              	.LBI796:
  80              		.file 6 "../libdaisy/src/hid/audio.h"
   1:../libdaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../libdaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../libdaisy/src/hid/audio.h **** 
   4:../libdaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../libdaisy/src/hid/audio.h **** 
   6:../libdaisy/src/hid/audio.h **** namespace daisy
   7:../libdaisy/src/hid/audio.h **** {
   8:../libdaisy/src/hid/audio.h **** class AudioHandle
   9:../libdaisy/src/hid/audio.h **** {
  10:../libdaisy/src/hid/audio.h ****   public:
  11:../libdaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  12:../libdaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  13:../libdaisy/src/hid/audio.h ****     struct Config
  14:../libdaisy/src/hid/audio.h ****     {
  15:../libdaisy/src/hid/audio.h ****         size_t                        blocksize;
  16:../libdaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  17:../libdaisy/src/hid/audio.h ****         float                         postgain;
  18:../libdaisy/src/hid/audio.h ****     };
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 7


  19:../libdaisy/src/hid/audio.h **** 
  20:../libdaisy/src/hid/audio.h ****     enum class Result
  21:../libdaisy/src/hid/audio.h ****     {
  22:../libdaisy/src/hid/audio.h ****         OK,
  23:../libdaisy/src/hid/audio.h ****         ERR,
  24:../libdaisy/src/hid/audio.h ****     };
  25:../libdaisy/src/hid/audio.h **** 
  26:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. Both arrays arranged by float[chn][sample] */
  27:../libdaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(float** in, float** out, size_t size);
  28:../libdaisy/src/hid/audio.h **** 
  29:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. 
  30:../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  31:../libdaisy/src/hid/audio.h ****      */
  32:../libdaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(float* in,
  33:../libdaisy/src/hid/audio.h ****                                               float* out,
  34:../libdaisy/src/hid/audio.h ****                                               size_t size);
  35:../libdaisy/src/hid/audio.h **** 
  36:../libdaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  37:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
  81              		.loc 6 37 5 is_stmt 1 view .LVU9
  82              		.loc 6 37 5 is_stmt 0 view .LVU10
  83              	.LBE796:
  84              		.loc 2 22 19 view .LVU11
  85 0000 7047     		bx	lr
  86              		.cfi_endproc
  87              	.LFE1703:
  89              		.weak	_ZN5daisy9DaisySeedD1Ev
  90              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  91 0002 00BF     		.section	.text._ZN7daisysp4AdsrD2Ev,"axG",%progbits,_ZN7daisysp4AdsrD5Ev,comdat
  92              		.align	1
  93              		.p2align 2,,3
  94              		.weak	_ZN7daisysp4AdsrD2Ev
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv5-d16
 100              	_ZN7daisysp4AdsrD2Ev:
 101              	.LVL2:
 102              	.LFB1726:
 103              		.file 7 "../DaisySP/Source/Control/adsr.h"
   1:../DaisySP/Source/Control/adsr.h **** #pragma once
   2:../DaisySP/Source/Control/adsr.h **** #ifndef DSY_ADSR_H
   3:../DaisySP/Source/Control/adsr.h **** #define DSY_ADSR_H
   4:../DaisySP/Source/Control/adsr.h **** 
   5:../DaisySP/Source/Control/adsr.h **** #include <stdint.h>
   6:../DaisySP/Source/Control/adsr.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Control/adsr.h **** 
   8:../DaisySP/Source/Control/adsr.h **** namespace daisysp
   9:../DaisySP/Source/Control/adsr.h **** {
  10:../DaisySP/Source/Control/adsr.h **** /** Distinct stages that the phase of the envelope can be located in.
  11:../DaisySP/Source/Control/adsr.h **** - IDLE   = located at phase location 0, and not currently running
  12:../DaisySP/Source/Control/adsr.h **** - ATTACK  = First segment of envelope where phase moves from 0 to 1
  13:../DaisySP/Source/Control/adsr.h **** - DECAY   = Second segment of envelope where phase moves from 1 to SUSTAIN value
  14:../DaisySP/Source/Control/adsr.h **** - SUSTAIN = Third segment of envelope, stays at SUSTAIN level until GATE is released
  15:../DaisySP/Source/Control/adsr.h **** - RELEASE =     Fourth segment of envelop where phase moves from SUSTAIN to 0
  16:../DaisySP/Source/Control/adsr.h **** - LAST    =  Last segment, aka release
  17:../DaisySP/Source/Control/adsr.h **** */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 8


  18:../DaisySP/Source/Control/adsr.h **** enum
  19:../DaisySP/Source/Control/adsr.h **** {
  20:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_IDLE,
  21:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_ATTACK,
  22:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_DECAY,
  23:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_SUSTAIN,
  24:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_RELEASE,
  25:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_LAST,
  26:../DaisySP/Source/Control/adsr.h **** };
  27:../DaisySP/Source/Control/adsr.h **** 
  28:../DaisySP/Source/Control/adsr.h **** 
  29:../DaisySP/Source/Control/adsr.h **** /** adsr envelope module
  30:../DaisySP/Source/Control/adsr.h **** 
  31:../DaisySP/Source/Control/adsr.h **** Original author(s) : Paul Batchelor
  32:../DaisySP/Source/Control/adsr.h **** 
  33:../DaisySP/Source/Control/adsr.h **** Ported from Soundpipe by Ben Sergentanis, May 2020
  34:../DaisySP/Source/Control/adsr.h **** */
  35:../DaisySP/Source/Control/adsr.h **** class Adsr
  36:../DaisySP/Source/Control/adsr.h **** {
  37:../DaisySP/Source/Control/adsr.h ****   public:
  38:../DaisySP/Source/Control/adsr.h ****     Adsr() {}
  39:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 104              		.loc 7 39 5 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109              		.loc 7 39 14 is_stmt 0 view .LVU13
 110 0000 7047     		bx	lr
 111              		.cfi_endproc
 112              	.LFE1726:
 114              		.weak	_ZN7daisysp4AdsrD1Ev
 115              		.thumb_set _ZN7daisysp4AdsrD1Ev,_ZN7daisysp4AdsrD2Ev
 116 0002 00BF     		.section	.text._ZN7daisysp10OscillatorD2Ev,"axG",%progbits,_ZN7daisysp10OscillatorD5Ev,comdat
 117              		.align	1
 118              		.p2align 2,,3
 119              		.weak	_ZN7daisysp10OscillatorD2Ev
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv5-d16
 125              	_ZN7daisysp10OscillatorD2Ev:
 126              	.LVL3:
 127              	.LFB3340:
 128              		.file 8 "../DaisySP/Source/Synthesis/oscillator.h"
   1:../DaisySP/Source/Synthesis/oscillator.h **** #pragma once
   2:../DaisySP/Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
   3:../DaisySP/Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
   4:../DaisySP/Source/Synthesis/oscillator.h **** #include <stdint.h>
   5:../DaisySP/Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
   6:../DaisySP/Source/Synthesis/oscillator.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Synthesis/oscillator.h **** 
   8:../DaisySP/Source/Synthesis/oscillator.h **** namespace daisysp
   9:../DaisySP/Source/Synthesis/oscillator.h **** {
  10:../DaisySP/Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:../DaisySP/Source/Synthesis/oscillator.h **** */
  12:../DaisySP/Source/Synthesis/oscillator.h **** class Oscillator
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 9


  13:../DaisySP/Source/Synthesis/oscillator.h **** {
  14:../DaisySP/Source/Synthesis/oscillator.h ****   public:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     Oscillator() {}
  16:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 129              		.loc 8 16 5 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134              		.loc 8 16 20 is_stmt 0 view .LVU15
 135 0000 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE3340:
 139              		.weak	_ZN7daisysp10OscillatorD1Ev
 140              		.thumb_set _ZN7daisysp10OscillatorD1Ev,_ZN7daisysp10OscillatorD2Ev
 141 0002 00BF     		.section	.text._ZN7daisysp3SvfD2Ev,"axG",%progbits,_ZN7daisysp3SvfD5Ev,comdat
 142              		.align	1
 143              		.p2align 2,,3
 144              		.weak	_ZN7daisysp3SvfD2Ev
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv5-d16
 150              	_ZN7daisysp3SvfD2Ev:
 151              	.LVL4:
 152              	.LFB3356:
 153              		.file 9 "../DaisySP/Source/Filters/svf.h"
   1:../DaisySP/Source/Filters/svf.h **** #pragma once
   2:../DaisySP/Source/Filters/svf.h **** #ifndef DSY_SVF_H
   3:../DaisySP/Source/Filters/svf.h **** #define DSY_SVF_H
   4:../DaisySP/Source/Filters/svf.h **** 
   5:../DaisySP/Source/Filters/svf.h **** namespace daisysp
   6:../DaisySP/Source/Filters/svf.h **** {
   7:../DaisySP/Source/Filters/svf.h **** /**      Double Sampled, Stable State Variable Filter
   8:../DaisySP/Source/Filters/svf.h **** 
   9:../DaisySP/Source/Filters/svf.h **** Credit to Andrew Simper from musicdsp.org
  10:../DaisySP/Source/Filters/svf.h **** 
  11:../DaisySP/Source/Filters/svf.h **** This is his "State Variable Filter (Double Sampled, Stable)"
  12:../DaisySP/Source/Filters/svf.h **** 
  13:../DaisySP/Source/Filters/svf.h **** Additional thanks to Laurent de Soras for stability limit, and 
  14:../DaisySP/Source/Filters/svf.h **** Stefan Diedrichsen for the correct notch output
  15:../DaisySP/Source/Filters/svf.h **** 
  16:../DaisySP/Source/Filters/svf.h **** Ported by: Stephen Hensley
  17:../DaisySP/Source/Filters/svf.h **** */
  18:../DaisySP/Source/Filters/svf.h **** class Svf
  19:../DaisySP/Source/Filters/svf.h **** {
  20:../DaisySP/Source/Filters/svf.h ****   public:
  21:../DaisySP/Source/Filters/svf.h ****     Svf() {}
  22:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 154              		.loc 9 22 5 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 159              		.loc 9 22 13 is_stmt 0 view .LVU17
 160 0000 7047     		bx	lr
 161              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 10


 162              	.LFE3356:
 164              		.weak	_ZN7daisysp3SvfD1Ev
 165              		.thumb_set _ZN7daisysp3SvfD1Ev,_ZN7daisysp3SvfD2Ev
 166 0002 00BF     		.section	.text._ZN7daisysp9CrossFadeD2Ev,"axG",%progbits,_ZN7daisysp9CrossFadeD5Ev,comdat
 167              		.align	1
 168              		.p2align 2,,3
 169              		.weak	_ZN7daisysp9CrossFadeD2Ev
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv5-d16
 175              	_ZN7daisysp9CrossFadeD2Ev:
 176              	.LVL5:
 177              	.LFB3461:
 178              		.file 10 "../DaisySP/Source/Dynamics/crossfade.h"
   1:../DaisySP/Source/Dynamics/crossfade.h **** #pragma once
   2:../DaisySP/Source/Dynamics/crossfade.h **** #ifndef DSY_CROSSFADE_H
   3:../DaisySP/Source/Dynamics/crossfade.h **** #define DSY_CROSSFADE_H
   4:../DaisySP/Source/Dynamics/crossfade.h **** #include <stdint.h>
   5:../DaisySP/Source/Dynamics/crossfade.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Dynamics/crossfade.h **** 
   7:../DaisySP/Source/Dynamics/crossfade.h **** namespace daisysp
   8:../DaisySP/Source/Dynamics/crossfade.h **** {
   9:../DaisySP/Source/Dynamics/crossfade.h **** /** Curve applied to the CrossFade
  10:../DaisySP/Source/Dynamics/crossfade.h **** - LIN = linear
  11:../DaisySP/Source/Dynamics/crossfade.h **** - CPOW = constant power
  12:../DaisySP/Source/Dynamics/crossfade.h **** - LOG = logarithmic
  13:../DaisySP/Source/Dynamics/crossfade.h **** - EXP  exponential
  14:../DaisySP/Source/Dynamics/crossfade.h **** - LAST = end of enum (used for array indexing)
  15:../DaisySP/Source/Dynamics/crossfade.h **** */
  16:../DaisySP/Source/Dynamics/crossfade.h **** enum
  17:../DaisySP/Source/Dynamics/crossfade.h **** {
  18:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LIN,
  19:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_CPOW,
  20:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LOG,
  21:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_EXP,
  22:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LAST,
  23:../DaisySP/Source/Dynamics/crossfade.h **** };
  24:../DaisySP/Source/Dynamics/crossfade.h **** 
  25:../DaisySP/Source/Dynamics/crossfade.h **** /** Performs a CrossFade between two signals
  26:../DaisySP/Source/Dynamics/crossfade.h **** 
  27:../DaisySP/Source/Dynamics/crossfade.h ****     Original author: Paul Batchelor
  28:../DaisySP/Source/Dynamics/crossfade.h **** 
  29:../DaisySP/Source/Dynamics/crossfade.h ****     Ported from Soundpipe by Andrew Ikenberry
  30:../DaisySP/Source/Dynamics/crossfade.h **** 
  31:../DaisySP/Source/Dynamics/crossfade.h ****     added curve option for constant power, etc.
  32:../DaisySP/Source/Dynamics/crossfade.h **** */
  33:../DaisySP/Source/Dynamics/crossfade.h **** class CrossFade
  34:../DaisySP/Source/Dynamics/crossfade.h **** {
  35:../DaisySP/Source/Dynamics/crossfade.h ****   public:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     CrossFade() {}
  37:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 179              		.loc 10 37 5 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 11


 184              		.loc 10 37 19 is_stmt 0 view .LVU19
 185 0000 7047     		bx	lr
 186              		.cfi_endproc
 187              	.LFE3461:
 189              		.weak	_ZN7daisysp9CrossFadeD1Ev
 190              		.thumb_set _ZN7daisysp9CrossFadeD1Ev,_ZN7daisysp9CrossFadeD2Ev
 191 0002 00BF     		.section	.text._ZN7daisysp7DcBlockD2Ev,"axG",%progbits,_ZN7daisysp7DcBlockD5Ev,comdat
 192              		.align	1
 193              		.p2align 2,,3
 194              		.weak	_ZN7daisysp7DcBlockD2Ev
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu fpv5-d16
 200              	_ZN7daisysp7DcBlockD2Ev:
 201              	.LVL6:
 202              	.LFB3753:
 203              		.file 11 "../DaisySP/Source/Utility/dcblock.h"
   1:../DaisySP/Source/Utility/dcblock.h **** 
   2:../DaisySP/Source/Utility/dcblock.h **** #pragma once
   3:../DaisySP/Source/Utility/dcblock.h **** #ifndef DSY_DCBLOCK_H
   4:../DaisySP/Source/Utility/dcblock.h **** #define DSY_DCBLOCK_H
   5:../DaisySP/Source/Utility/dcblock.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Utility/dcblock.h **** 
   7:../DaisySP/Source/Utility/dcblock.h **** namespace daisysp
   8:../DaisySP/Source/Utility/dcblock.h **** {
   9:../DaisySP/Source/Utility/dcblock.h **** /** Removes DC component of a signal
  10:../DaisySP/Source/Utility/dcblock.h ****     */
  11:../DaisySP/Source/Utility/dcblock.h **** class DcBlock
  12:../DaisySP/Source/Utility/dcblock.h **** {
  13:../DaisySP/Source/Utility/dcblock.h ****   public:
  14:../DaisySP/Source/Utility/dcblock.h ****     DcBlock(){};
  15:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 204              		.loc 11 15 5 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 209              		.loc 11 15 16 is_stmt 0 view .LVU21
 210 0000 7047     		bx	lr
 211              		.cfi_endproc
 212              	.LFE3753:
 214              		.weak	_ZN7daisysp7DcBlockD1Ev
 215              		.thumb_set _ZN7daisysp7DcBlockD1Ev,_ZN7daisysp7DcBlockD2Ev
 216 0002 00BF     		.section	.text._ZN7daisysp9EnvFollowD2Ev,"axG",%progbits,_ZN7daisysp9EnvFollowD5Ev,comdat
 217              		.align	1
 218              		.p2align 2,,3
 219              		.weak	_ZN7daisysp9EnvFollowD2Ev
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu fpv5-d16
 225              	_ZN7daisysp9EnvFollowD2Ev:
 226              	.LVL7:
 227              	.LFB3940:
 228              		.file 12 "envFollow.h"
   1:envFollow.h   **** // Copyright 2021 Adam Fulford
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 12


   2:envFollow.h   **** // 
   3:envFollow.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:envFollow.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:envFollow.h   **** // in the Software without restriction, including without limitation the rights
   6:envFollow.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:envFollow.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:envFollow.h   **** // furnished to do so, subject to the following conditions:
   9:envFollow.h   **** // 
  10:envFollow.h   **** // The above copyright notice and this permission notice shall be included in
  11:envFollow.h   **** // all copies or substantial portions of the Software.
  12:envFollow.h   **** // 
  13:envFollow.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:envFollow.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:envFollow.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:envFollow.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:envFollow.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:envFollow.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:envFollow.h   **** // THE SOFTWARE.
  20:envFollow.h   **** // 
  21:envFollow.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:envFollow.h   **** 
  23:envFollow.h   **** #ifndef ENV_FOLLOW_H
  24:envFollow.h   **** #define ENV_FOLLOW_H
  25:envFollow.h   **** #include <math.h>
  26:envFollow.h   **** 
  27:envFollow.h   **** namespace daisysp
  28:envFollow.h   **** {
  29:envFollow.h   **** 
  30:envFollow.h   **** class EnvFollow
  31:envFollow.h   **** {
  32:envFollow.h   ****     private:
  33:envFollow.h   ****     
  34:envFollow.h   ****     float avg;      //exp average of input
  35:envFollow.h   ****     float pos_sample;   //positive sample
  36:envFollow.h   ****     float sample_noDC;  //no DC sample
  37:envFollow.h   ****     float avg_env;  //average envelope
  38:envFollow.h   ****     float w;        //weighting
  39:envFollow.h   ****     float w_env;    //envelope weighting
  40:envFollow.h   **** 
  41:envFollow.h   ****     public:
  42:envFollow.h   **** 
  43:envFollow.h   ****     EnvFollow() //default constructor
  44:envFollow.h   ****     {
  45:envFollow.h   ****         avg = 0.0f;      //exp average of input
  46:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
  47:envFollow.h   ****         avg_env = 0.0f;  //average envelope
  48:envFollow.h   ****         w = 0.0001f;        //weighting
  49:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
  50:envFollow.h   ****         sample_noDC = 0.0f;
  51:envFollow.h   ****     }  
  52:envFollow.h   ****     ~EnvFollow() {}
 229              		.loc 12 52 5 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              		.loc 12 52 19 is_stmt 0 view .LVU23
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 13


 235 0000 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE3940:
 239              		.weak	_ZN7daisysp9EnvFollowD1Ev
 240              		.thumb_set _ZN7daisysp9EnvFollowD1Ev,_ZN7daisysp9EnvFollowD2Ev
 241 0002 00BF     		.section	.text._ZN8TaptempoD2Ev,"axG",%progbits,_ZN8TaptempoD5Ev,comdat
 242              		.align	1
 243              		.p2align 2,,3
 244              		.weak	_ZN8TaptempoD2Ev
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu fpv5-d16
 250              	_ZN8TaptempoD2Ev:
 251              	.LVL8:
 252              	.LFB3947:
 253              		.file 13 "taptempo.h"
   1:taptempo.h    **** // Copyright 2021 Adam Fulford
   2:taptempo.h    **** // 
   3:taptempo.h    **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:taptempo.h    **** // of this software and associated documentation files (the "Software"), to deal
   5:taptempo.h    **** // in the Software without restriction, including without limitation the rights
   6:taptempo.h    **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:taptempo.h    **** // copies of the Software, and to permit persons to whom the Software is
   8:taptempo.h    **** // furnished to do so, subject to the following conditions:
   9:taptempo.h    **** // 
  10:taptempo.h    **** // The above copyright notice and this permission notice shall be included in
  11:taptempo.h    **** // all copies or substantial portions of the Software.
  12:taptempo.h    **** // 
  13:taptempo.h    **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:taptempo.h    **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:taptempo.h    **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:taptempo.h    **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:taptempo.h    **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:taptempo.h    **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:taptempo.h    **** // THE SOFTWARE.
  20:taptempo.h    **** // 
  21:taptempo.h    **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:taptempo.h    **** 
  23:taptempo.h    **** #ifndef TAP_TEMPO_H
  24:taptempo.h    **** #define TAP_TEMPO_H
  25:taptempo.h    **** 
  26:taptempo.h    **** #include "daisysp.h"
  27:taptempo.h    **** #include "daisy_seed.h"
  28:taptempo.h    **** 
  29:taptempo.h    **** using namespace daisy;
  30:taptempo.h    **** using namespace daisysp;
  31:taptempo.h    **** 
  32:taptempo.h    **** class Taptempo
  33:taptempo.h    **** {
  34:taptempo.h    ****     private:
  35:taptempo.h    ****         uint32_t mintap_,maxtap_;
  36:taptempo.h    ****         uint32_t currentTime_,lastTime_,lastTapLength_,tapLength_;
  37:taptempo.h    ****         uint32_t clockLength_, lastClockLength_, clockThresh_;
  38:taptempo.h    ****         bool tapflag_;
  39:taptempo.h    ****         float tap_tolerance_;
  40:taptempo.h    ****         float tempo_, tapRatio_;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 14


  41:taptempo.h    **** 
  42:taptempo.h    ****     public:
  43:taptempo.h    **** 
  44:taptempo.h    ****     Taptempo()  //default constructor
  45:taptempo.h    ****     {
  46:taptempo.h    ****         tapflag_ = false;
  47:taptempo.h    ****         tap_tolerance_ = 1.25f;
  48:taptempo.h    ****         maxtap_ = 2000000;
  49:taptempo.h    ****         mintap_ = 80000;
  50:taptempo.h    ****         lastTapLength_ = 0;
  51:taptempo.h    ****         tempo_ = 500000.0f;
  52:taptempo.h    ****         lastTime_ = 0;
  53:taptempo.h    ****         currentTime_ = 0;
  54:taptempo.h    ****         tapRatio_ = 1.0f;
  55:taptempo.h    ****         clockLength_ = 0;
  56:taptempo.h    ****         lastClockLength_ = 0;
  57:taptempo.h    ****         clockThresh_ = 10000; //Us change
  58:taptempo.h    ****     }
  59:taptempo.h    ****     ~Taptempo() {}
 254              		.loc 13 59 5 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259              		.loc 13 59 18 is_stmt 0 view .LVU25
 260 0000 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE3947:
 264              		.weak	_ZN8TaptempoD1Ev
 265              		.thumb_set _ZN8TaptempoD1Ev,_ZN8TaptempoD2Ev
 266 0002 00BF     		.section	.text._ZN8TempoLEDD2Ev,"axG",%progbits,_ZN8TempoLEDD5Ev,comdat
 267              		.align	1
 268              		.p2align 2,,3
 269              		.weak	_ZN8TempoLEDD2Ev
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv5-d16
 275              	_ZN8TempoLEDD2Ev:
 276              	.LVL9:
 277              	.LFB3970:
 278              		.file 14 "LEDs.h"
   1:LEDs.h        **** // Copyright 2021 Adam Fulford
   2:LEDs.h        **** // 
   3:LEDs.h        **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:LEDs.h        **** // of this software and associated documentation files (the "Software"), to deal
   5:LEDs.h        **** // in the Software without restriction, including without limitation the rights
   6:LEDs.h        **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:LEDs.h        **** // copies of the Software, and to permit persons to whom the Software is
   8:LEDs.h        **** // furnished to do so, subject to the following conditions:
   9:LEDs.h        **** // 
  10:LEDs.h        **** // The above copyright notice and this permission notice shall be included in
  11:LEDs.h        **** // all copies or substantial portions of the Software.
  12:LEDs.h        **** // 
  13:LEDs.h        **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:LEDs.h        **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:LEDs.h        **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 15


  16:LEDs.h        **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:LEDs.h        **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:LEDs.h        **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:LEDs.h        **** // THE SOFTWARE.
  20:LEDs.h        **** // 
  21:LEDs.h        **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:LEDs.h        **** 
  23:LEDs.h        **** #ifndef LEDS_H
  24:LEDs.h        **** #define LEDS_H
  25:LEDs.h        **** 
  26:LEDs.h        **** #include "daisysp.h"
  27:LEDs.h        **** #include "daisy_seed.h"
  28:LEDs.h        **** #include "oscillator_p.h"
  29:LEDs.h        **** #include "constants.h"
  30:LEDs.h        **** 
  31:LEDs.h        **** using namespace daisysp;
  32:LEDs.h        **** using namespace daisy;
  33:LEDs.h        **** 
  34:LEDs.h        **** class TempoLED
  35:LEDs.h        **** {
  36:LEDs.h        **** 
  37:LEDs.h        **** Led led;
  38:LEDs.h        **** Oscillator_p blink;
  39:LEDs.h        **** TempoDivs div_last_;
  40:LEDs.h        **** //int phaseCounter_;
  41:LEDs.h        **** //int div_int;
  42:LEDs.h        **** //float phase_last_;
  43:LEDs.h        **** float GetDivInt(TempoDivs div);
  44:LEDs.h        **** 
  45:LEDs.h        **** public:
  46:LEDs.h        **** 
  47:LEDs.h        **** TempoLED(){}
  48:LEDs.h        **** ~TempoLED(){}   //destructor
 279              		.loc 14 48 1 is_stmt 1 view -0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284              	.LBB797:
 285              	.LBI797:
 286              		.file 15 "oscillator_p.h"
   1:oscillator_p.h **** #pragma once
   2:oscillator_p.h **** #ifndef DSY_OSCILLATOR_P_H
   3:oscillator_p.h **** #define DSY_OSCILLATOR_P_H
   4:oscillator_p.h **** #include <stdint.h>
   5:oscillator_p.h **** #include "Utility/dsp.h"
   6:oscillator_p.h **** #ifdef __cplusplus
   7:oscillator_p.h **** 
   8:oscillator_p.h **** namespace daisysp
   9:oscillator_p.h **** {
  10:oscillator_p.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:oscillator_p.h **** */
  12:oscillator_p.h **** class Oscillator_p
  13:oscillator_p.h **** {
  14:oscillator_p.h ****   public:
  15:oscillator_p.h ****     Oscillator_p() {}
  16:oscillator_p.h ****     ~Oscillator_p() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 16


 287              		.loc 15 16 5 view .LVU27
 288              		.loc 15 16 5 is_stmt 0 view .LVU28
 289              	.LBE797:
 290              	.LBB798:
 291              	.LBI798:
 292              		.file 16 "../libdaisy/src/hid/led.h"
   1:../libdaisy/src/hid/led.h **** 
   2:../libdaisy/src/hid/led.h **** #pragma once
   3:../libdaisy/src/hid/led.h **** #ifndef DSY_LED_H
   4:../libdaisy/src/hid/led.h **** #define DSY_LED_H
   5:../libdaisy/src/hid/led.h **** #include "daisy_core.h"
   6:../libdaisy/src/hid/led.h **** #include "per/gpio.h"
   7:../libdaisy/src/hid/led.h **** 
   8:../libdaisy/src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../libdaisy/src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../libdaisy/src/hid/led.h **** */
  11:../libdaisy/src/hid/led.h **** 
  12:../libdaisy/src/hid/led.h **** namespace daisy
  13:../libdaisy/src/hid/led.h **** {
  14:../libdaisy/src/hid/led.h **** /**
  15:../libdaisy/src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../libdaisy/src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../libdaisy/src/hid/led.h ****     @author shensley
  18:../libdaisy/src/hid/led.h ****     @date March 2020
  19:../libdaisy/src/hid/led.h ****     @ingroup feedback
  20:../libdaisy/src/hid/led.h **** */
  21:../libdaisy/src/hid/led.h **** class Led
  22:../libdaisy/src/hid/led.h **** {
  23:../libdaisy/src/hid/led.h ****   public:
  24:../libdaisy/src/hid/led.h ****     Led() {}
  25:../libdaisy/src/hid/led.h ****     ~Led() {}
 293              		.loc 16 25 5 is_stmt 1 view .LVU29
 294              		.loc 16 25 5 is_stmt 0 view .LVU30
 295              	.LBE798:
 296              		.loc 14 48 13 view .LVU31
 297 0000 7047     		bx	lr
 298              		.cfi_endproc
 299              	.LFE3970:
 301              		.weak	_ZN8TempoLEDD1Ev
 302              		.thumb_set _ZN8TempoLEDD1Ev,_ZN8TempoLEDD2Ev
 303 0002 00BF     		.section	.text._ZN9ButtonLEDD2Ev,"axG",%progbits,_ZN9ButtonLEDD5Ev,comdat
 304              		.align	1
 305              		.p2align 2,,3
 306              		.weak	_ZN9ButtonLEDD2Ev
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 310              		.fpu fpv5-d16
 312              	_ZN9ButtonLEDD2Ev:
 313              	.LVL10:
 314              	.LFB3977:
  49:LEDs.h        **** 
  50:LEDs.h        **** void init(dsy_gpio_pin ledpin, float samplerate);  //led pin number
  51:LEDs.h        **** 
  52:LEDs.h        **** void setTempo(float tempo);
  53:LEDs.h        **** 
  54:LEDs.h        **** void resetPhase();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 17


  55:LEDs.h        **** 
  56:LEDs.h        **** void resetPhaseCounter();
  57:LEDs.h        **** 
  58:LEDs.h        **** //update using oscillator
  59:LEDs.h        **** void update();
  60:LEDs.h        **** 
  61:LEDs.h        **** //update using external sync
  62:LEDs.h        **** void update(TempoDivs div, float phase);
  63:LEDs.h        **** 
  64:LEDs.h        **** void LED_set(float brightness);
  65:LEDs.h        **** 
  66:LEDs.h        **** bool isEOC();
  67:LEDs.h        **** 
  68:LEDs.h        **** //high if just had a div change
  69:LEDs.h        **** //bool divChange();
  70:LEDs.h        **** 
  71:LEDs.h        **** float GetPhase() { return blink.GetPhase(); }
  72:LEDs.h        **** 
  73:LEDs.h        **** };
  74:LEDs.h        **** 
  75:LEDs.h        **** class ButtonLED    //button with status LED
  76:LEDs.h        **** {
  77:LEDs.h        ****     public:
  78:LEDs.h        ****     ButtonLED() {}
  79:LEDs.h        ****     ~ButtonLED() {}
 315              		.loc 14 79 5 is_stmt 1 view -0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              		@ link register save eliminated.
 320              	.LBB799:
 321              	.LBI799:
 322              		.loc 16 25 5 view .LVU33
 323              		.loc 16 25 5 is_stmt 0 view .LVU34
 324              	.LBE799:
 325              	.LBB800:
 326              	.LBI800:
 327              		.loc 1 41 5 is_stmt 1 view .LVU35
 328              		.loc 1 41 5 is_stmt 0 view .LVU36
 329              	.LBE800:
 330              		.loc 14 79 19 view .LVU37
 331 0000 7047     		bx	lr
 332              		.cfi_endproc
 333              	.LFE3977:
 335              		.weak	_ZN9ButtonLEDD1Ev
 336              		.thumb_set _ZN9ButtonLEDD1Ev,_ZN9ButtonLEDD2Ev
 337 0002 00BF     		.section	.text._ZN10DelayMultiD2Ev,"axG",%progbits,_ZN10DelayMultiD5Ev,comdat
 338              		.align	1
 339              		.p2align 2,,3
 340              		.weak	_ZN10DelayMultiD2Ev
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu fpv5-d16
 346              	_ZN10DelayMultiD2Ev:
 347              	.LVL11:
 348              	.LFB3983:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 18


 349              		.file 17 "DelayMulti.h"
   1:DelayMulti.h  **** // Copyright 2021 Adam Fulford
   2:DelayMulti.h  **** // 
   3:DelayMulti.h  **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:DelayMulti.h  **** // of this software and associated documentation files (the "Software"), to deal
   5:DelayMulti.h  **** // in the Software without restriction, including without limitation the rights
   6:DelayMulti.h  **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:DelayMulti.h  **** // copies of the Software, and to permit persons to whom the Software is
   8:DelayMulti.h  **** // furnished to do so, subject to the following conditions:
   9:DelayMulti.h  **** // 
  10:DelayMulti.h  **** // The above copyright notice and this permission notice shall be included in
  11:DelayMulti.h  **** // all copies or substantial portions of the Software.
  12:DelayMulti.h  **** // 
  13:DelayMulti.h  **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:DelayMulti.h  **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:DelayMulti.h  **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:DelayMulti.h  **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:DelayMulti.h  **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:DelayMulti.h  **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:DelayMulti.h  **** // THE SOFTWARE.
  20:DelayMulti.h  **** // 
  21:DelayMulti.h  **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:DelayMulti.h  **** 
  23:DelayMulti.h  **** #ifndef DELAYMULTI_H
  24:DelayMulti.h  **** #define DELAYMULTI_H
  25:DelayMulti.h  **** 
  26:DelayMulti.h  **** #include "daisysp.h"
  27:DelayMulti.h  **** #include "daisy_seed.h"
  28:DelayMulti.h  **** #include "delayline_multitap.h" //modified delayline
  29:DelayMulti.h  **** #include "constants.h"
  30:DelayMulti.h  **** #include "LEDs.h"
  31:DelayMulti.h  **** #include "scale.h"
  32:DelayMulti.h  **** 
  33:DelayMulti.h  **** using namespace daisysp;
  34:DelayMulti.h  **** using namespace daisy;
  35:DelayMulti.h  **** 
  36:DelayMulti.h  **** constexpr size_t numHeads{1};
  37:DelayMulti.h  **** //constexpr size_t numHeadsSets{2};
  38:DelayMulti.h  **** constexpr size_t totalNumHeads{2};
  39:DelayMulti.h  **** 
  40:DelayMulti.h  **** constexpr float delaytime_threshold{50};   //in samples
  41:DelayMulti.h  **** constexpr uint32_t timethresh{25}; //length of wait before triggering xfade (used to be 75)
  42:DelayMulti.h  **** 
  43:DelayMulti.h  **** class DelayMulti
  44:DelayMulti.h  **** {
  45:DelayMulti.h  **** public:
  46:DelayMulti.h  **** DelayLineMultiTap <float, static_cast<size_t>(48000 * 36.0f)>  *del; //36 second buffer
  47:DelayMulti.h  **** //tempoLED
  48:DelayMulti.h  **** TempoLED tempoled;
  49:DelayMulti.h  **** DelayMulti() {}
  50:DelayMulti.h  **** ~DelayMulti() {}
 350              		.loc 17 50 1 is_stmt 1 view -0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354              		@ link register save eliminated.
 355              	.LBB801:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 19


 356              	.LBI801:
  48:LEDs.h        **** 
 357              		.loc 14 48 1 view .LVU39
 358              	.LBB802:
 359              	.LBI802:
 360              		.loc 15 16 5 view .LVU40
 361              		.loc 15 16 5 is_stmt 0 view .LVU41
 362              	.LBE802:
 363              	.LBB803:
 364              	.LBI803:
 365              		.loc 16 25 5 is_stmt 1 view .LVU42
 366              		.loc 16 25 5 is_stmt 0 view .LVU43
 367              	.LBE803:
 368              	.LBE801:
 369              		.loc 17 50 16 view .LVU44
 370 0000 7047     		bx	lr
 371              		.cfi_endproc
 372              	.LFE3983:
 374              		.weak	_ZN10DelayMultiD1Ev
 375              		.thumb_set _ZN10DelayMultiD1Ev,_ZN10DelayMultiD2Ev
 376 0002 00BF     		.section	.text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev,"axG",%progbits,_ZN7daisysp17DelayL
 377              		.align	1
 378              		.p2align 2,,3
 379              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 383              		.fpu fpv5-d16
 385              	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:
 386              	.LVL12:
 387              	.LFB4914:
 388              		.file 18 "delayline_multitap.h"
   1:delayline_multitap.h **** // Copyright 2021 Adam Fulford
   2:delayline_multitap.h **** // 
   3:delayline_multitap.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_multitap.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_multitap.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_multitap.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_multitap.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_multitap.h **** // furnished to do so, subject to the following conditions:
   9:delayline_multitap.h **** // 
  10:delayline_multitap.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_multitap.h **** // all copies or substantial portions of the Software.
  12:delayline_multitap.h **** // 
  13:delayline_multitap.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_multitap.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_multitap.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_multitap.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_multitap.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_multitap.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_multitap.h **** // THE SOFTWARE.
  20:delayline_multitap.h **** // 
  21:delayline_multitap.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_multitap.h **** 
  23:delayline_multitap.h **** #pragma once
  24:delayline_multitap.h **** #ifndef DSY_DELAY_MULTITAP_H
  25:delayline_multitap.h **** #define DSY_DELAY_MULTITAP_H
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 20


  26:delayline_multitap.h **** #include <stdlib.h>
  27:delayline_multitap.h **** #include <stdint.h>
  28:delayline_multitap.h **** #include <array>
  29:delayline_multitap.h **** namespace daisysp
  30:delayline_multitap.h **** {
  31:delayline_multitap.h **** /** Mulitap Delay line.
  32:delayline_multitap.h **** 
  33:delayline_multitap.h **** DelayLine<float, SAMPLE_RATE> del;
  34:delayline_multitap.h **** 
  35:delayline_multitap.h **** By: Adam Fulford
  36:delayline_multitap.h **** */
  37:delayline_multitap.h **** template <typename T, size_t max_size>
  38:delayline_multitap.h **** class DelayLineMultiTap
  39:delayline_multitap.h **** {
  40:delayline_multitap.h **** private:
  41:delayline_multitap.h ****     size_t write_ptr_;
  42:delayline_multitap.h ****     std::array<size_t, 16> delay_;    //array to hold delay times for upto 16 read heads.
  43:delayline_multitap.h ****     std::array<float, 16> frac_;
  44:delayline_multitap.h ****     T      line_[max_size];
  45:delayline_multitap.h ****     size_t num_heads_;
  46:delayline_multitap.h **** 
  47:delayline_multitap.h ****   public:
  48:delayline_multitap.h ****     DelayLineMultiTap() 
  49:delayline_multitap.h ****     {
  50:delayline_multitap.h ****        // num_heads_ = 16; //Why can't I do this in the default constructor?! Compiles but does not
  51:delayline_multitap.h ****     }
  52:delayline_multitap.h ****     ~DelayLineMultiTap() {}
 389              		.loc 18 52 5 is_stmt 1 view -0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              		@ link register save eliminated.
 394              		.loc 18 52 27 is_stmt 0 view .LVU46
 395 0000 7047     		bx	lr
 396              		.cfi_endproc
 397              	.LFE4914:
 399              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 400              		.thumb_set _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev,_ZN7daisysp17DelayLineMultiTapIfLj17280
 401 0002 00BF     		.section	.text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev,"axG",%progbits,_ZN7daisysp16DelayLin
 402              		.align	1
 403              		.p2align 2,,3
 404              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu fpv5-d16
 410              	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:
 411              	.LVL13:
 412              	.LFB4917:
 413              		.file 19 "delayline_reverse.h"
   1:delayline_reverse.h **** // Copyright 2021 Adam Fulford
   2:delayline_reverse.h **** // 
   3:delayline_reverse.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_reverse.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_reverse.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_reverse.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_reverse.h **** // copies of the Software, and to permit persons to whom the Software is
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 21


   8:delayline_reverse.h **** // furnished to do so, subject to the following conditions:
   9:delayline_reverse.h **** // 
  10:delayline_reverse.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_reverse.h **** // all copies or substantial portions of the Software.
  12:delayline_reverse.h **** // 
  13:delayline_reverse.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_reverse.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_reverse.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_reverse.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_reverse.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_reverse.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_reverse.h **** // THE SOFTWARE.
  20:delayline_reverse.h **** // 
  21:delayline_reverse.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_reverse.h **** 
  23:delayline_reverse.h **** #pragma once
  24:delayline_reverse.h **** #ifndef DSY_DELAY_REVERSE_H
  25:delayline_reverse.h **** #define DSY_DELAY_REVERSE_H
  26:delayline_reverse.h **** #include <stdlib.h>
  27:delayline_reverse.h **** #include <stdint.h>
  28:delayline_reverse.h **** #include <math.h>
  29:delayline_reverse.h **** namespace daisysp
  30:delayline_reverse.h **** {
  31:delayline_reverse.h **** /** Reverse Delay line
  32:delayline_reverse.h **** By: Adam Fulford
  33:delayline_reverse.h **** */
  34:delayline_reverse.h **** template <typename T, size_t max_size>
  35:delayline_reverse.h **** class DelayLineReverse
  36:delayline_reverse.h **** {
  37:delayline_reverse.h ****   public:
  38:delayline_reverse.h ****     DelayLineReverse() {}
  39:delayline_reverse.h ****     ~DelayLineReverse() {}
 414              		.loc 19 39 5 is_stmt 1 view -0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              		@ link register save eliminated.
 419              		.loc 19 39 26 is_stmt 0 view .LVU48
 420 0000 7047     		bx	lr
 421              		.cfi_endproc
 422              	.LFE4917:
 424              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 425              		.thumb_set _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev,_ZN7daisysp16DelayLineReverseIfLj600000EE
 426 0002 00BF     		.section	.text._Z10InitDelaysf,"ax",%progbits
 427              		.align	1
 428              		.p2align 2,,3
 429              		.global	_Z10InitDelaysf
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 433              		.fpu fpv5-d16
 435              	_Z10InitDelaysf:
 436              	.LVL14:
 437              	.LFB4310:
 438              		.file 20 "Veno-Echo.cpp"
   1:Veno-Echo.cpp **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.cpp **** // 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 22


   3:Veno-Echo.cpp **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.cpp **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.cpp **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.cpp **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.cpp **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.cpp **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.cpp **** // 
  10:Veno-Echo.cpp **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.cpp **** // all copies or substantial portions of the Software.
  12:Veno-Echo.cpp **** // 
  13:Veno-Echo.cpp **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.cpp **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.cpp **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.cpp **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.cpp **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.cpp **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.cpp **** // THE SOFTWARE.
  20:Veno-Echo.cpp **** // 
  21:Veno-Echo.cpp **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.cpp **** 
  23:Veno-Echo.cpp **** #include "Veno-Echo.h"
  24:Veno-Echo.cpp **** #include "QSPI_Settings.h"
  25:Veno-Echo.cpp **** #include "daisysp.h"
  26:Veno-Echo.cpp **** #include "delayline_multitap.h" //modified delayline
  27:Veno-Echo.cpp **** #include "delayline_reverse.h"  //reverse delayline
  28:Veno-Echo.cpp **** #include "envFollow.h"
  29:Veno-Echo.cpp **** #include "scale.h"
  30:Veno-Echo.cpp **** #include "constants.h"
  31:Veno-Echo.cpp **** #include "taptempo.h"
  32:Veno-Echo.cpp **** #include "LEDs.h"
  33:Veno-Echo.cpp **** #include "DelayMulti.h"
  34:Veno-Echo.cpp **** #include <math.h>
  35:Veno-Echo.cpp **** #include <string.h>
  36:Veno-Echo.cpp **** #include <atomic>
  37:Veno-Echo.cpp **** 
  38:Veno-Echo.cpp **** using namespace daisysp;
  39:Veno-Echo.cpp **** 
  40:Veno-Echo.cpp **** static Svf LPF_L;
  41:Veno-Echo.cpp **** static Svf LPF_R;
  42:Veno-Echo.cpp **** static Svf HPF_L;
  43:Veno-Echo.cpp **** static Svf HPF_R;
  44:Veno-Echo.cpp **** 
  45:Veno-Echo.cpp **** static Svf LPF_L_post;
  46:Veno-Echo.cpp **** static Svf LPF_R_post;
  47:Veno-Echo.cpp **** static Svf HPF_L_post;
  48:Veno-Echo.cpp **** static Svf HPF_R_post;
  49:Veno-Echo.cpp **** 
  50:Veno-Echo.cpp **** static Oscillator lfo;
  51:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
  52:Veno-Echo.cpp **** 
  53:Veno-Echo.cpp **** static DcBlock DcBlock_LFB, DcBlock_RFB; //DC blocks
  54:Veno-Echo.cpp **** 
  55:Veno-Echo.cpp **** // Declare a DelayLine of MAX_DELAY number of floats.
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsL;
  57:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
  58:Veno-Echo.cpp **** 
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsL_REV; //10 s
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 23


  60:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
  61:Veno-Echo.cpp **** 
  62:Veno-Echo.cpp **** struct DelayRev
  63:Veno-Echo.cpp **** {
  64:Veno-Echo.cpp ****     DelayLineReverse <float, static_cast<size_t>(maxRevDelay*2.5f)>  *del;
  65:Veno-Echo.cpp ****     float currentDelay_;
  66:Veno-Echo.cpp ****     //float delayTarget;
  67:Veno-Echo.cpp **** 
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
  69:Veno-Echo.cpp ****     {
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
  71:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
  72:Veno-Echo.cpp ****         {
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
  75:Veno-Echo.cpp ****             //del -> Reset();
  76:Veno-Echo.cpp ****         }
  77:Veno-Echo.cpp ****     }
  78:Veno-Echo.cpp **** 
  79:Veno-Echo.cpp ****     float Read()
  80:Veno-Echo.cpp ****     {
  81:Veno-Echo.cpp ****         //read from head1
  82:Veno-Echo.cpp ****         float read = del -> ReadRev();
  83:Veno-Echo.cpp ****         return read;
  84:Veno-Echo.cpp ****     }
  85:Veno-Echo.cpp **** 
  86:Veno-Echo.cpp ****     float FwdFbk()
  87:Veno-Echo.cpp ****     {
  88:Veno-Echo.cpp ****         float read = del -> ReadFwd();
  89:Veno-Echo.cpp ****         return read;
  90:Veno-Echo.cpp ****     }
  91:Veno-Echo.cpp **** 
  92:Veno-Echo.cpp ****     void Write(float in)    //sort out feedback in audiocallback
  93:Veno-Echo.cpp ****     {
  94:Veno-Echo.cpp ****         del -> Write(in);
  95:Veno-Echo.cpp ****     }
  96:Veno-Echo.cpp **** };
  97:Veno-Echo.cpp **** 
  98:Veno-Echo.cpp **** DelayMulti delayL,delayR;
  99:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 100:Veno-Echo.cpp **** 
 101:Veno-Echo.cpp **** //LED objects:
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 103:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 104:Veno-Echo.cpp **** 
 105:Veno-Echo.cpp **** 
 106:Veno-Echo.cpp **** float delayTimeL_CV{};
 107:Veno-Echo.cpp **** float delayTimeR_CV{};
 108:Veno-Echo.cpp **** 
 109:Veno-Echo.cpp **** float feedbackL{};
 110:Veno-Echo.cpp **** float feedbackL_CV{};
 111:Veno-Echo.cpp **** 
 112:Veno-Echo.cpp **** float feedbackR{};
 113:Veno-Echo.cpp **** float feedbackR_CV{};
 114:Veno-Echo.cpp **** 
 115:Veno-Echo.cpp **** float crossfeedback{};
 116:Veno-Echo.cpp **** float crossfeedback_CV{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 24


 117:Veno-Echo.cpp **** 
 118:Veno-Echo.cpp **** float drywet{0.5};
 119:Veno-Echo.cpp **** float drywet_CV{};
 120:Veno-Echo.cpp **** 
 121:Veno-Echo.cpp **** float width{1.0};
 122:Veno-Echo.cpp **** float width_CV{};
 123:Veno-Echo.cpp **** 
 124:Veno-Echo.cpp **** float filterXfade{};
 125:Veno-Echo.cpp **** 
 126:Veno-Echo.cpp **** TempoDivs div_L{};
 127:Veno-Echo.cpp **** TempoDivs div_R{};
 128:Veno-Echo.cpp **** 
 129:Veno-Echo.cpp **** float ModDepth{0.0f};   //100.0 is a lot!
 130:Veno-Echo.cpp **** 
 131:Veno-Echo.cpp **** //float modulation_CV{};
 132:Veno-Echo.cpp **** float modulation_CV_Raw{};
 133:Veno-Echo.cpp **** 
 134:Veno-Echo.cpp **** bool syncMode{false};
 135:Veno-Echo.cpp **** bool shift{false};  //global variable for secondary shift functions
 136:Veno-Echo.cpp **** bool mute{};
 137:Veno-Echo.cpp **** 
 138:Veno-Echo.cpp **** bool ClockInFlag{false};
 139:Veno-Echo.cpp **** 
 140:Veno-Echo.cpp **** bool PostFilters{false};
 141:Veno-Echo.cpp **** 
 142:Veno-Echo.cpp **** std::atomic<bool> save_flag{};
 143:Veno-Echo.cpp **** 
 144:Veno-Echo.cpp **** float DELAYL_DEBUG{};
 145:Veno-Echo.cpp **** float DELAYR_DEBUG{};
 146:Veno-Echo.cpp **** 
 147:Veno-Echo.cpp **** static Adsr FwdRevLEnv;
 148:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 149:Veno-Echo.cpp **** 
 150:Veno-Echo.cpp **** static Adsr LPF_Env;
 151:Veno-Echo.cpp **** static Adsr HPF_Env;
 152:Veno-Echo.cpp **** 
 153:Veno-Echo.cpp **** static CrossFade FwdRevLXfade;  //crossfades for reverse delay into fwd delay
 154:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 155:Veno-Echo.cpp **** 
 156:Veno-Echo.cpp **** static CrossFade WidthXfade;
 157:Veno-Echo.cpp **** 
 158:Veno-Echo.cpp **** //crossfades for switching in and out of filters
 159:Veno-Echo.cpp **** static CrossFade LPF_LXfade;
 160:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 161:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 162:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 163:Veno-Echo.cpp **** 
 164:Veno-Echo.cpp **** //crossfades for switching in and out of post filters
 165:Veno-Echo.cpp **** static CrossFade LPF_LXfade_post;
 166:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 167:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 168:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 169:Veno-Echo.cpp **** 
 170:Veno-Echo.cpp **** //cross fades for manual filter crossfading
 171:Veno-Echo.cpp **** static CrossFade FilterMix_L;
 172:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 173:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 25


 174:Veno-Echo.cpp **** static CrossFade FilterMix_L_post;
 175:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 176:Veno-Echo.cpp **** 
 177:Veno-Echo.cpp **** //Gate inputs
 178:Veno-Echo.cpp **** Switch ReverseGateL;
 179:Veno-Echo.cpp **** Switch ReverseGateR;
 180:Veno-Echo.cpp **** 
 181:Veno-Echo.cpp **** //Switch TapButton;
 182:Veno-Echo.cpp **** Switch Sync;
 183:Veno-Echo.cpp **** Switch ClockIn;
 184:Veno-Echo.cpp **** 
 185:Veno-Echo.cpp **** //Tap tempo
 186:Veno-Echo.cpp **** Taptempo BaseTempo; 
 187:Veno-Echo.cpp **** 
 188:Veno-Echo.cpp **** Settings AltControls;
 189:Veno-Echo.cpp **** 
 190:Veno-Echo.cpp **** //default alt control values
 191:Veno-Echo.cpp **** constexpr Settings defaultAltControls
 192:Veno-Echo.cpp **** {
 193:Veno-Echo.cpp ****     (minRevDelay + maxRevDelay) / 2.0f, //RevLength
 194:Veno-Echo.cpp ****     1.0f,   //tapRatio
 195:Veno-Echo.cpp ****     0.0f,   //ModDepth
 196:Veno-Echo.cpp ****     (maxModRate + minModRate) / 2.0f,   //ModFreq
 197:Veno-Echo.cpp ****     defaultHPCut,   //HP_Cutoff
 198:Veno-Echo.cpp ****     defaultLPCut,   //LP_Cutoff
 199:Veno-Echo.cpp ****     default_Res,     //Filter Resonance
 200:Veno-Echo.cpp ****     0.0f
 201:Veno-Echo.cpp **** };
 202:Veno-Echo.cpp **** 
 203:Veno-Echo.cpp **** void Update_DelayTimeL_CV();
 204:Veno-Echo.cpp **** void Update_DelayTimeL();
 205:Veno-Echo.cpp **** 
 206:Veno-Echo.cpp **** void Update_DelayTimeR_CV();
 207:Veno-Echo.cpp **** void Update_DelayTimeR();
 208:Veno-Echo.cpp **** 
 209:Veno-Echo.cpp **** void Update_feedbackL_CV();
 210:Veno-Echo.cpp **** void Update_feedbackL();
 211:Veno-Echo.cpp **** 
 212:Veno-Echo.cpp **** void Update_feedbackR_CV();
 213:Veno-Echo.cpp **** void Update_feedbackR();
 214:Veno-Echo.cpp **** 
 215:Veno-Echo.cpp **** void Update_drywet_CV();
 216:Veno-Echo.cpp **** void Update_drywet();
 217:Veno-Echo.cpp **** 
 218:Veno-Echo.cpp **** void Update_width_CV();
 219:Veno-Echo.cpp **** void Update_width();
 220:Veno-Echo.cpp **** 
 221:Veno-Echo.cpp **** void Update_crossfeedback();
 222:Veno-Echo.cpp **** void Update_filterXfade();
 223:Veno-Echo.cpp **** 
 224:Veno-Echo.cpp **** void Update_Buttons();
 225:Veno-Echo.cpp **** void Update_DelayBaseTempo();
 226:Veno-Echo.cpp **** void Update_BaseTempoLED();
 227:Veno-Echo.cpp **** void Update_DelayTempoLEDs();
 228:Veno-Echo.cpp **** void Update_Mod();
 229:Veno-Echo.cpp **** void GetModCV();
 230:Veno-Echo.cpp **** float SetTempoDiv(float input, TempoDivs *div);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 26


 231:Veno-Echo.cpp **** void UpdateClock();
 232:Veno-Echo.cpp **** double GetTapRatio(TapRatios ratio);
 233:Veno-Echo.cpp **** void ApplySettings(const Settings &setting);
 234:Veno-Echo.cpp **** void TurnOnAllLEDs();
 235:Veno-Echo.cpp **** void ResetAllLEDs();
 236:Veno-Echo.cpp **** float HardLimit(float input, float limit);
 237:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val);
 238:Veno-Echo.cpp **** bool checkPickupState(float value, float lastvalue, bool lastState, bool ShiftChange);
 239:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
 240:Veno-Echo.cpp **** 
 241:Veno-Echo.cpp **** static void AudioCallback(float *in, float *out, size_t size)
 242:Veno-Echo.cpp **** {
 243:Veno-Echo.cpp **** 
 244:Veno-Echo.cpp **** /*
 245:Veno-Echo.cpp **** static uint32_t funcLength{};
 246:Veno-Echo.cpp **** static uint32_t lastFuncTime{};
 247:Veno-Echo.cpp **** static uint32_t maxFuncLength{};
 248:Veno-Echo.cpp **** static uint32_t minFuncLength{500000000};
 249:Veno-Echo.cpp **** static uint32_t aveFuncLength{};
 250:Veno-Echo.cpp **** 
 251:Veno-Echo.cpp **** */
 252:Veno-Echo.cpp **** 
 253:Veno-Echo.cpp **** static int Counter{};
 254:Veno-Echo.cpp **** 
 255:Veno-Echo.cpp **** /*
 256:Veno-Echo.cpp ****     funcLength = System::GetUs() - lastFuncTime;
 257:Veno-Echo.cpp **** 
 258:Veno-Echo.cpp ****     aveFuncLength = (funcLength + 1023 * aveFuncLength) >> 10;
 259:Veno-Echo.cpp ****     if (funcLength > maxFuncLength)
 260:Veno-Echo.cpp ****     {
 261:Veno-Echo.cpp ****         maxFuncLength = funcLength;
 262:Veno-Echo.cpp ****     }
 263:Veno-Echo.cpp **** 
 264:Veno-Echo.cpp ****     if (funcLength < minFuncLength)
 265:Veno-Echo.cpp ****     {
 266:Veno-Echo.cpp ****         minFuncLength = funcLength;
 267:Veno-Echo.cpp ****     }
 268:Veno-Echo.cpp **** 
 269:Veno-Echo.cpp **** */
 270:Veno-Echo.cpp **** 
 271:Veno-Echo.cpp **** Counter = (Counter + 1) % updateDiv;
 272:Veno-Echo.cpp **** 
 273:Veno-Echo.cpp **** if(!save_flag)  //don't check ADCs if saving!
 274:Veno-Echo.cpp **** {
 275:Veno-Echo.cpp ****     /*
 276:Veno-Echo.cpp ****         //each call generate random dither length between 0 and 14
 277:Veno-Echo.cpp ****         uint16_t randomDither{uint16_t (rand() % 5)};
 278:Veno-Echo.cpp ****         //init timeofCall as current time
 279:Veno-Echo.cpp ****         uint32_t timeofCall{System::GetUs()};
 280:Veno-Echo.cpp **** 
 281:Veno-Echo.cpp ****         //wait for random Dither time
 282:Veno-Echo.cpp ****         while( (System::GetUs() - timeofCall ) < randomDither)
 283:Veno-Echo.cpp ****         {}
 284:Veno-Echo.cpp ****     */
 285:Veno-Echo.cpp **** 
 286:Veno-Echo.cpp ****         switch (Counter)
 287:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 27


 288:Veno-Echo.cpp ****             case 0:
 289:Veno-Echo.cpp ****                 Update_Buttons();
 290:Veno-Echo.cpp ****                 GetModCV();
 291:Veno-Echo.cpp ****                 Update_DelayBaseTempo();
 292:Veno-Echo.cpp ****                 Update_DelayTempoLEDs();
 293:Veno-Echo.cpp ****             break;
 294:Veno-Echo.cpp **** 
 295:Veno-Echo.cpp ****             case 1:
 296:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 297:Veno-Echo.cpp ****             break;
 298:Veno-Echo.cpp **** 
 299:Veno-Echo.cpp ****             case 2:
 300:Veno-Echo.cpp ****                 Update_DelayTimeL();
 301:Veno-Echo.cpp ****             break;
 302:Veno-Echo.cpp **** 
 303:Veno-Echo.cpp ****             case 3:
 304:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 305:Veno-Echo.cpp ****             break;
 306:Veno-Echo.cpp **** 
 307:Veno-Echo.cpp ****             case 4:
 308:Veno-Echo.cpp ****                 Update_DelayTimeR();
 309:Veno-Echo.cpp ****             break;
 310:Veno-Echo.cpp **** 
 311:Veno-Echo.cpp ****             case 5:
 312:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 313:Veno-Echo.cpp ****             break;
 314:Veno-Echo.cpp **** 
 315:Veno-Echo.cpp ****             case 6:
 316:Veno-Echo.cpp ****                 Update_feedbackL();
 317:Veno-Echo.cpp ****             break;
 318:Veno-Echo.cpp **** 
 319:Veno-Echo.cpp ****             case 7:
 320:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 321:Veno-Echo.cpp ****             break;
 322:Veno-Echo.cpp **** 
 323:Veno-Echo.cpp ****             case 8:
 324:Veno-Echo.cpp ****                 Update_feedbackR();
 325:Veno-Echo.cpp ****             break;
 326:Veno-Echo.cpp **** 
 327:Veno-Echo.cpp ****             case 9:
 328:Veno-Echo.cpp ****                 Update_drywet_CV();
 329:Veno-Echo.cpp ****             break;
 330:Veno-Echo.cpp **** 
 331:Veno-Echo.cpp ****             case 10:
 332:Veno-Echo.cpp ****                 Update_drywet();
 333:Veno-Echo.cpp ****             break;
 334:Veno-Echo.cpp **** 
 335:Veno-Echo.cpp ****             case 11:
 336:Veno-Echo.cpp ****                 Update_width_CV();
 337:Veno-Echo.cpp ****             break;
 338:Veno-Echo.cpp **** 
 339:Veno-Echo.cpp ****             case 12:
 340:Veno-Echo.cpp ****                 Update_width();
 341:Veno-Echo.cpp ****             break;
 342:Veno-Echo.cpp **** 
 343:Veno-Echo.cpp ****             case 13:
 344:Veno-Echo.cpp ****                 Update_crossfeedback();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 28


 345:Veno-Echo.cpp ****             break;
 346:Veno-Echo.cpp **** 
 347:Veno-Echo.cpp ****             case 14:
 348:Veno-Echo.cpp ****                 Update_filterXfade();
 349:Veno-Echo.cpp ****             break;
 350:Veno-Echo.cpp ****         }
 351:Veno-Echo.cpp **** }
 352:Veno-Echo.cpp **** 
 353:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
 354:Veno-Echo.cpp ****     {   
 355:Veno-Echo.cpp ****         UpdateClock(); 
 356:Veno-Echo.cpp ****         Update_Mod();
 357:Veno-Echo.cpp **** 
 358:Veno-Echo.cpp ****         //get xfade positions from envelopes:
 359:Veno-Echo.cpp ****         float FwdRevLXFadepos = FwdRevLEnv.Process(Rev_L_sw.getState());
 360:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 361:Veno-Echo.cpp ****         
 362:Veno-Echo.cpp ****         float HPFXFadepos = HPF_Env.Process(HPF_sw.getState());
 363:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 364:Veno-Echo.cpp **** 
 365:Veno-Echo.cpp ****         //set xfade positions      
 366:Veno-Echo.cpp ****         FwdRevLXfade.SetPos(FwdRevLXFadepos);
 367:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 368:Veno-Echo.cpp ****         
 369:Veno-Echo.cpp ****         HPF_LXfade.SetPos(HPFXFadepos);
 370:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 371:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 372:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 373:Veno-Echo.cpp **** 
 374:Veno-Echo.cpp ****         HPF_LXfade_post.SetPos(HPFXFadepos);
 375:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 376:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 377:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 378:Veno-Echo.cpp **** 
 379:Veno-Echo.cpp ****         FilterMix_L.SetPos(filterXfade);
 380:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 381:Veno-Echo.cpp **** 
 382:Veno-Echo.cpp ****         FilterMix_L_post.SetPos(filterXfade);
 383:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 384:Veno-Echo.cpp **** 
 385:Veno-Echo.cpp ****         //filter controls, read from reverse delay lines:
 386:Veno-Echo.cpp ****         float delayRevSignalL = delaysL_REV.Read();
 387:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 388:Veno-Echo.cpp **** 
 389:Veno-Echo.cpp ****         //write input to reverse delay (no feedback)
 390:Veno-Echo.cpp ****         delaysL_REV.Write(in[i]);
 391:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 392:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 393:Veno-Echo.cpp ****         //delaysR_REV.Write(Input_R);
 394:Veno-Echo.cpp **** 
 395:Veno-Echo.cpp ****         //process Xfade between reverse and direct input
 396:Veno-Echo.cpp ****         float FwdRevSignalLXFade = FwdRevLXfade.Process(in[i],delayRevSignalL);
 397:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 398:Veno-Echo.cpp **** 
 399:Veno-Echo.cpp ****         //Get combined output from all delay heads
 400:Veno-Echo.cpp ****         float delaySignal_L{delayL.GetOutput()};   
 401:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 29


 402:Veno-Echo.cpp **** 
 403:Veno-Echo.cpp ****         //Update Base Tempo LED
 404:Veno-Echo.cpp ****         Update_BaseTempoLED();
 405:Veno-Echo.cpp **** 
 406:Veno-Echo.cpp ****         //hard limit
 407:Veno-Echo.cpp ****         delaySignal_L = HardLimit(delaySignal_L,AudioLimit);
 408:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 409:Veno-Echo.cpp **** 
 410:Veno-Echo.cpp **** if(!PostFilters)
 411:Veno-Echo.cpp **** {
 412:Veno-Echo.cpp **** //****************************************************************************************
 413:Veno-Echo.cpp ****         //pre filters
 414:Veno-Echo.cpp ****         //process LPF
 415:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 416:Veno-Echo.cpp ****         LPF_L.Process(delaySignal_L * 0.1f);
 417:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 418:Veno-Echo.cpp **** 
 419:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 420:Veno-Echo.cpp ****         float LPF_L_signal{LPF_L.Low() * 10.0f};
 421:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 422:Veno-Echo.cpp ****         
 423:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 424:Veno-Echo.cpp ****         float filteredDelay_L{LPF_LXfade.Process(delaySignal_L, LPF_L_signal)};
 425:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 426:Veno-Echo.cpp **** 
 427:Veno-Echo.cpp ****         //hard limit
 428:Veno-Echo.cpp ****         filteredDelay_L = HardLimit(filteredDelay_L,AudioLimit);
 429:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 430:Veno-Echo.cpp **** 
 431:Veno-Echo.cpp ****         //process HPF
 432:Veno-Echo.cpp ****         HPF_L.Process(filteredDelay_L * 0.1f);
 433:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 434:Veno-Echo.cpp **** 
 435:Veno-Echo.cpp ****         float HPF_L_signal{HPF_L.High() * 10.0f};
 436:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 437:Veno-Echo.cpp **** 
 438:Veno-Echo.cpp ****         filteredDelay_L = HPF_LXfade.Process(filteredDelay_L, HPF_L_signal);
 439:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 440:Veno-Echo.cpp **** 
 441:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 442:Veno-Echo.cpp **** 
 443:Veno-Echo.cpp ****         delaySignal_L = FilterMix_L.Process(delaySignal_L,filteredDelay_L);
 444:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 445:Veno-Echo.cpp **** 
 446:Veno-Echo.cpp **** //****************************************************************************************
 447:Veno-Echo.cpp **** }
 448:Veno-Echo.cpp **** 
 449:Veno-Echo.cpp **** else
 450:Veno-Echo.cpp **** {
 451:Veno-Echo.cpp ****     /* code */
 452:Veno-Echo.cpp **** }
 453:Veno-Echo.cpp **** 
 454:Veno-Echo.cpp ****         static float LNegFB{};  //static so value can be used for next sample
 455:Veno-Echo.cpp ****         static float RNegFB{};
 456:Veno-Echo.cpp **** 
 457:Veno-Echo.cpp ****         //ensure we never get inverse feedback
 458:Veno-Echo.cpp ****         if(feedbackL < LNegFB) 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 30


 459:Veno-Echo.cpp ****             LNegFB = 0.0f;
 460:Veno-Echo.cpp ****         
 461:Veno-Echo.cpp ****         if(feedbackR < RNegFB)
 462:Veno-Echo.cpp ****             RNegFB = 0.0f;
 463:Veno-Echo.cpp **** 
 464:Veno-Echo.cpp ****         float feedbackSignalL{ (feedbackL - LNegFB) * delaySignal_L };
 465:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 466:Veno-Echo.cpp **** 
 467:Veno-Echo.cpp ****         //crossfeedback:
 468:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 469:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 470:Veno-Echo.cpp **** 
 471:Veno-Echo.cpp **** 
 472:Veno-Echo.cpp ****         //get envelopes for feedback signals
 473:Veno-Echo.cpp ****         float EnvL{LeftEnv.GetEnv(feedbackSignalL)};  
 474:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 475:Veno-Echo.cpp **** 
 476:Veno-Echo.cpp ****             //if envelope of feedback signal exceeds threshold calculate negative FB factor
 477:Veno-Echo.cpp ****             if (EnvL >= NegFBOffset)
 478:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 479:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 480:Veno-Echo.cpp ****             else LNegFB = 0.0;
 481:Veno-Echo.cpp ****             
 482:Veno-Echo.cpp ****             if (EnvR >= NegFBOffset)
 483:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 484:Veno-Echo.cpp ****             else RNegFB = 0.0;
 485:Veno-Echo.cpp **** 
 486:Veno-Echo.cpp ****         //write to fwd delay lines, including a DC block and hard limit
 487:Veno-Echo.cpp ****         float combinedL{feedbackSignalLR + FwdRevSignalLXFade};
 488:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 489:Veno-Echo.cpp ****  
 490:Veno-Echo.cpp ****         //hard limit
 491:Veno-Echo.cpp ****         combinedL = HardLimit(combinedL,AudioLimit);
 492:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 493:Veno-Echo.cpp **** 
 494:Veno-Echo.cpp ****         delayL.Write( DcBlock_LFB.Process(combinedL ) );
 495:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 496:Veno-Echo.cpp **** 
 497:Veno-Echo.cpp ****         // floats for wet dry mix
 498:Veno-Echo.cpp ****         float mixL;
 499:Veno-Echo.cpp ****         float mixR;
 500:Veno-Echo.cpp **** 
 501:Veno-Echo.cpp ****         float delaySignal_L_SUM = WidthXfade.Process(delaySignal_L,delaySignal_R);    //mix to mono
 502:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 503:Veno-Echo.cpp **** 
 504:Veno-Echo.cpp ****         //hard limit
 505:Veno-Echo.cpp ****         delaySignal_L_SUM = HardLimit(delaySignal_L_SUM,AudioLimit);
 506:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 507:Veno-Echo.cpp **** 
 508:Veno-Echo.cpp **** if(PostFilters)
 509:Veno-Echo.cpp **** {
 510:Veno-Echo.cpp ****     //****************************************************************************************
 511:Veno-Echo.cpp ****         //post filters
 512:Veno-Echo.cpp ****         //process LPF
 513:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 514:Veno-Echo.cpp ****         LPF_L_post.Process(delaySignal_L_SUM * 0.1f);
 515:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 31


 516:Veno-Echo.cpp **** 
 517:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 518:Veno-Echo.cpp ****         float LPF_L_signal_post{LPF_L_post.Low() * 10.0f};
 519:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 520:Veno-Echo.cpp ****         
 521:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 522:Veno-Echo.cpp ****         float filteredDelay_L_post{LPF_LXfade_post.Process(delaySignal_L_SUM, LPF_L_signal_post)};
 523:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 524:Veno-Echo.cpp **** 
 525:Veno-Echo.cpp ****         //hard limit
 526:Veno-Echo.cpp ****         filteredDelay_L_post = HardLimit(filteredDelay_L_post,AudioLimit);
 527:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 528:Veno-Echo.cpp **** 
 529:Veno-Echo.cpp ****         //process HPF
 530:Veno-Echo.cpp ****         HPF_L_post.Process(filteredDelay_L_post * 0.1f);
 531:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 532:Veno-Echo.cpp **** 
 533:Veno-Echo.cpp ****         float HPF_L_signal_post{HPF_L_post.High() * 10.0f};
 534:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 535:Veno-Echo.cpp **** 
 536:Veno-Echo.cpp ****         filteredDelay_L_post = HPF_LXfade_post.Process(filteredDelay_L_post, HPF_L_signal_post);
 537:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 538:Veno-Echo.cpp **** 
 539:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 540:Veno-Echo.cpp ****         delaySignal_L_SUM = FilterMix_L_post.Process(delaySignal_L_SUM,filteredDelay_L_post);
 541:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 542:Veno-Echo.cpp **** 
 543:Veno-Echo.cpp ****     //****************************************************************************************
 544:Veno-Echo.cpp **** }
 545:Veno-Echo.cpp **** else
 546:Veno-Echo.cpp **** {
 547:Veno-Echo.cpp ****     /* code */
 548:Veno-Echo.cpp **** }
 549:Veno-Echo.cpp ****         if(drywet < 0.5f)
 550:Veno-Echo.cpp ****         {
 551:Veno-Echo.cpp ****             mixL = in[i] + (2.0f * drywet * delaySignal_L_SUM);
 552:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 553:Veno-Echo.cpp ****         }
 554:Veno-Echo.cpp ****         else if(drywet > 0.5f)
 555:Veno-Echo.cpp ****         {
 556:Veno-Echo.cpp ****             mixL = ((1 - drywet)* 2.0f * in[i]) + delaySignal_L_SUM;
 557:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 558:Veno-Echo.cpp ****         }
 559:Veno-Echo.cpp ****         else
 560:Veno-Echo.cpp ****         {
 561:Veno-Echo.cpp ****             mixL = in[i] + delaySignal_L_SUM;
 562:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 563:Veno-Echo.cpp ****         }
 564:Veno-Echo.cpp **** 
 565:Veno-Echo.cpp ****         //send mixes to outputs
 566:Veno-Echo.cpp ****         if(mute)
 567:Veno-Echo.cpp ****         {
 568:Veno-Echo.cpp ****             out[i] = 0.0f;
 569:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 570:Veno-Echo.cpp ****         }
 571:Veno-Echo.cpp ****         else
 572:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 32


 573:Veno-Echo.cpp ****             out[i] = mixL;
 574:Veno-Echo.cpp ****             out[i+1] = mixR;
 575:Veno-Echo.cpp ****         }
 576:Veno-Echo.cpp **** 
 577:Veno-Echo.cpp ****         //write to DAC for debug
 578:Veno-Echo.cpp ****        // dsy_dac_write(DSY_DAC_CHN1, static_cast<int>( EnvL * 4095.0f));
 579:Veno-Echo.cpp **** 
 580:Veno-Echo.cpp ****     }
 581:Veno-Echo.cpp **** 
 582:Veno-Echo.cpp **** }
 583:Veno-Echo.cpp **** 
 584:Veno-Echo.cpp **** void InitDelays(float samplerate)
 585:Veno-Echo.cpp **** {
 439              		.loc 20 585 1 is_stmt 1 view -0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 16
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 586:Veno-Echo.cpp **** 
 587:Veno-Echo.cpp ****     //Init fwd delays
 588:Veno-Echo.cpp ****     delMemsL.Init(2);    //2 heads
 443              		.loc 20 588 5 view .LVU50
 444              	.LBB804:
 445              	.LBI804:
  53:delayline_multitap.h ****     
  54:delayline_multitap.h ****     /** initializes the delay line by clearing the values within, and setting delay head times to 0
  55:delayline_multitap.h ****     */
  56:delayline_multitap.h ****     void Init( size_t num_heads) 
 446              		.loc 18 56 10 view .LVU51
 447              	.LBB805:
 448              	.LBB806:
  57:delayline_multitap.h ****     {
  58:delayline_multitap.h ****         for(size_t i = 0; i < max_size; i++)
 449              		.loc 18 58 29 view .LVU52
 450 0000 5D4B     		ldr	r3, .L36
 451 0002 5E49     		ldr	r1, .L36+4
 452              	.LBE806:
 453              	.LBE805:
 454              	.LBE804:
 585:Veno-Echo.cpp **** 
 455              		.loc 20 585 1 is_stmt 0 view .LVU53
 456 0004 F0B5     		push	{r4, r5, r6, r7, lr}
 457              		.cfi_def_cfa_offset 20
 458              		.cfi_offset 4, -20
 459              		.cfi_offset 5, -16
 460              		.cfi_offset 6, -12
 461              		.cfi_offset 7, -8
 462              		.cfi_offset 14, -4
 463 0006 A3F18405 		sub	r5, r3, #132
 464 000a 85B0     		sub	sp, sp, #20
 465              		.cfi_def_cfa_offset 40
 466 000c 2846     		mov	r0, r5
 467              	.LVL15:
 468              	.L17:
 469              	.LBB811:
 470              	.LBB810:
 471              	.LBB807:
  59:delayline_multitap.h ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 33


  60:delayline_multitap.h ****             line_[i] = T(0);
 472              		.loc 18 60 13 view .LVU54
 473 000e 0022     		movs	r2, #0
 474 0010 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 475              		.loc 18 58 9 is_stmt 1 view .LVU55
  58:delayline_multitap.h ****         {
 476              		.loc 18 58 29 view .LVU56
 477 0014 8B42     		cmp	r3, r1
 478 0016 FAD1     		bne	.L17
 479              	.LBE807:
  61:delayline_multitap.h ****         }
  62:delayline_multitap.h **** 
  63:delayline_multitap.h ****         write_ptr_ = 0;
 480              		.loc 18 63 9 is_stmt 0 view .LVU57
 481 0018 0022     		movs	r2, #0
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 482              		.loc 18 64 9 view .LVU58
 483 001a 594C     		ldr	r4, .L36+8
 484 001c 0226     		movs	r6, #2
 485              	.LBB808:
  65:delayline_multitap.h **** 
  66:delayline_multitap.h ****         for (size_t i{ 0 }; i < num_heads_; ++i)
 486              		.loc 18 66 21 view .LVU59
 487 001e 1346     		mov	r3, r2
 488              	.LBE808:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 489              		.loc 18 63 9 view .LVU60
 490 0020 2A60     		str	r2, [r5]
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 491              		.loc 18 64 9 view .LVU61
 492 0022 2E51     		str	r6, [r5, r4]
 493              	.LVL16:
 494              	.LBB809:
 495              		.loc 18 66 31 is_stmt 1 view .LVU62
 496              	.L18:
  67:delayline_multitap.h ****         {
  68:delayline_multitap.h ****             delay_[i] = 0;  //set all delay heads to 0 (no delay)
 497              		.loc 18 68 13 is_stmt 0 view .LVU63
 498 0024 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 499              		.loc 18 66 9 view .LVU64
 500 0026 0133     		adds	r3, r3, #1
 501              	.LVL17:
  69:delayline_multitap.h ****             frac_[i] = 0;
 502              		.loc 18 69 13 view .LVU65
 503 0028 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 504              		.loc 18 68 13 view .LVU66
 505 002a 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 506              		.loc 18 66 31 view .LVU67
 507 002e 0A68     		ldr	r2, [r1]
 508              		.loc 18 69 13 view .LVU68
 509 0030 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 510              		.loc 18 66 9 is_stmt 1 view .LVU69
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 34


 511              	.LVL18:
  66:delayline_multitap.h ****         {
 512              		.loc 18 66 31 view .LVU70
 513 0032 9A42     		cmp	r2, r3
 514 0034 F6D8     		bhi	.L18
 515 0036 534B     		ldr	r3, .L36+12
 516              	.LVL19:
  66:delayline_multitap.h ****         {
 517              		.loc 18 66 31 is_stmt 0 view .LVU71
 518 0038 5349     		ldr	r1, .L36+16
 519 003a A3F18406 		sub	r6, r3, #132
 520 003e 3046     		mov	r0, r6
 521              	.LVL20:
 522              	.L19:
  66:delayline_multitap.h ****         {
 523              		.loc 18 66 31 view .LVU72
 524              	.LBE809:
 525              	.LBE810:
 526              	.LBE811:
 527              	.LBB812:
 528              	.LBB813:
 529              	.LBB814:
  60:delayline_multitap.h ****         }
 530              		.loc 18 60 13 view .LVU73
 531 0040 0022     		movs	r2, #0
 532 0042 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 533              		.loc 18 58 9 is_stmt 1 view .LVU74
  58:delayline_multitap.h ****         {
 534              		.loc 18 58 29 view .LVU75
 535 0046 8B42     		cmp	r3, r1
 536 0048 FAD1     		bne	.L19
 537              	.LBE814:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 538              		.loc 18 63 9 is_stmt 0 view .LVU76
 539 004a 0022     		movs	r2, #0
  64:delayline_multitap.h **** 
 540              		.loc 18 64 9 view .LVU77
 541 004c 4C4C     		ldr	r4, .L36+8
 542 004e 0227     		movs	r7, #2
 543              	.LBB815:
  66:delayline_multitap.h ****         {
 544              		.loc 18 66 21 view .LVU78
 545 0050 1346     		mov	r3, r2
 546              	.LBE815:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 547              		.loc 18 63 9 view .LVU79
 548 0052 3260     		str	r2, [r6]
  64:delayline_multitap.h **** 
 549              		.loc 18 64 9 view .LVU80
 550 0054 3751     		str	r7, [r6, r4]
 551              	.LVL21:
 552              	.LBB816:
  66:delayline_multitap.h ****         {
 553              		.loc 18 66 31 is_stmt 1 view .LVU81
 554              	.L20:
  68:delayline_multitap.h ****             frac_[i] = 0;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 35


 555              		.loc 18 68 13 is_stmt 0 view .LVU82
 556 0056 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 557              		.loc 18 66 9 view .LVU83
 558 0058 0133     		adds	r3, r3, #1
 559              	.LVL22:
 560              		.loc 18 69 13 view .LVU84
 561 005a 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 562              		.loc 18 68 13 view .LVU85
 563 005c 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 564              		.loc 18 66 31 view .LVU86
 565 0060 0A68     		ldr	r2, [r1]
 566              		.loc 18 69 13 view .LVU87
 567 0062 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 568              		.loc 18 66 9 is_stmt 1 view .LVU88
 569              	.LVL23:
  66:delayline_multitap.h ****         {
 570              		.loc 18 66 31 view .LVU89
 571 0064 9A42     		cmp	r2, r3
 572 0066 F6D8     		bhi	.L20
 573              	.LVL24:
  66:delayline_multitap.h ****         {
 574              		.loc 18 66 31 is_stmt 0 view .LVU90
 575              	.LBE816:
 576              	.LBE813:
 577              	.LBE812:
 589:Veno-Echo.cpp ****     delMemsR.Init(2);    //2 heads
 590:Veno-Echo.cpp **** 
 591:Veno-Echo.cpp ****     //point del classes at SDRAM buffers
 592:Veno-Echo.cpp ****     delayL.del = &delMemsL; 
 578              		.loc 20 592 5 is_stmt 1 view .LVU91
 593:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 579              		.loc 20 593 16 is_stmt 0 view .LVU92
 580 0068 484C     		ldr	r4, .L36+20
 594:Veno-Echo.cpp **** 
 595:Veno-Echo.cpp ****     delayL.init(hw.GetPin(8),samplerate);
 581              		.loc 20 595 16 view .LVU93
 582 006a 0820     		movs	r0, #8
 592:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 583              		.loc 20 592 16 view .LVU94
 584 006c 484F     		ldr	r7, .L36+24
 585 006e 8DED010A 		vstr.32	s0, [sp, #4]	@ int
 586 0072 3D60     		str	r5, [r7]
 593:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 587              		.loc 20 593 5 is_stmt 1 view .LVU95
 588              	.LBB817:
 589              	.LBB818:
 590              	.LBB819:
  40:delayline_reverse.h ****     /** initializes the delay line by clearing the values within, and setting delay to min time.
  41:delayline_reverse.h ****     */
  42:delayline_reverse.h ****     void Init() 
  43:delayline_reverse.h ****     { 
  44:delayline_reverse.h ****         Reset(); 
  45:delayline_reverse.h ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 36


  46:delayline_reverse.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
  47:delayline_reverse.h ****     */
  48:delayline_reverse.h ****     void Reset()
  49:delayline_reverse.h ****     {
  50:delayline_reverse.h **** 
  51:delayline_reverse.h ****         delay1_  = 25000; //min Reverse delay time
 591              		.loc 19 51 9 is_stmt 0 view .LVU96
 592 0074 46F2A815 		movw	r5, #25000
 593              	.LBE819:
 594              	.LBE818:
 595              	.LBE817:
 593:Veno-Echo.cpp **** 
 596              		.loc 20 593 16 view .LVU97
 597 0078 2660     		str	r6, [r4]
 598              		.loc 20 595 5 is_stmt 1 view .LVU98
 599              		.loc 20 595 16 is_stmt 0 view .LVU99
 600 007a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 601              	.LVL25:
 602              		.loc 20 595 16 view .LVU100
 603 007e 0346     		mov	r3, r0	@ movhi
 604 0080 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 605 0084 3846     		mov	r0, r7
 606 0086 ADF80830 		strh	r3, [sp, #8]	@ movhi
 607 008a 0299     		ldr	r1, [sp, #8]
 608 008c FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 609              	.LVL26:
 596:Veno-Echo.cpp ****     delayR.init(hw.GetPin(9),samplerate);
 610              		.loc 20 596 5 is_stmt 1 view .LVU101
 611              		.loc 20 596 16 is_stmt 0 view .LVU102
 612 0090 0920     		movs	r0, #9
 613 0092 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 614              	.LVL27:
 615 0096 0346     		mov	r3, r0	@ movhi
 616 0098 2046     		mov	r0, r4
 617              	.LBB831:
 618              	.LBB826:
 619              	.LBB821:
 620              		.loc 19 51 9 view .LVU103
 621 009a 3E4C     		ldr	r4, .L36+28
 622              	.LBE821:
 623              	.LBE826:
 624              	.LBE831:
 625              		.loc 20 596 16 view .LVU104
 626 009c ADF80C30 		strh	r3, [sp, #12]	@ movhi
 627 00a0 0399     		ldr	r1, [sp, #12]
 628 00a2 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 629 00a6 FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 630              	.LVL28:
 597:Veno-Echo.cpp **** 
 598:Veno-Echo.cpp ****     //delayL.SetDelayTime(500.0f);
 599:Veno-Echo.cpp ****     //delayR.SetDelayTime(500.0f);
 600:Veno-Echo.cpp **** 
 601:Veno-Echo.cpp ****     //Init rev delays
 602:Veno-Echo.cpp ****     delMemsL_REV.Init();
 631              		.loc 20 602 5 is_stmt 1 view .LVU105
 632              	.LBB832:
 633              	.LBI817:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 37


  42:delayline_reverse.h ****     { 
 634              		.loc 19 42 10 view .LVU106
 635              	.LBB827:
 636              	.LBI818:
  48:delayline_reverse.h ****     {
 637              		.loc 19 48 10 view .LVU107
 638              	.LBB822:
  52:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 639              		.loc 19 52 9 is_stmt 0 view .LVU108
 640 00aa 3B4A     		ldr	r2, .L36+32
 641 00ac 45F6C050 		movw	r0, #24000
 642 00b0 04F11803 		add	r3, r4, #24
 643 00b4 3949     		ldr	r1, .L36+36
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 644              		.loc 19 51 9 view .LVU109
 645 00b6 2561     		str	r5, [r4, #16]
 646              		.loc 19 52 9 view .LVU110
 647 00b8 A050     		str	r0, [r4, r2]
 648              	.LVL29:
 649              	.LBB820:
  53:delayline_reverse.h ****         
  54:delayline_reverse.h ****         for(size_t i = 0; i < max_size; i++)
 650              		.loc 19 54 29 is_stmt 1 view .LVU111
 651              	.L21:
  55:delayline_reverse.h ****         {
  56:delayline_reverse.h ****             line_[i] = T(0);
 652              		.loc 19 56 13 is_stmt 0 view .LVU112
 653 00ba 0022     		movs	r2, #0
 654 00bc 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 655              		.loc 19 54 9 is_stmt 1 view .LVU113
  54:delayline_reverse.h ****         {
 656              		.loc 19 54 29 view .LVU114
 657 00c0 8B42     		cmp	r3, r1
 658 00c2 FAD1     		bne	.L21
 659              	.LBE820:
 660              	.LBE822:
 661              	.LBE827:
 662              	.LBE832:
 663              	.LBB833:
 664              	.LBB834:
 665              	.LBB835:
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 666              		.loc 19 51 9 is_stmt 0 view .LVU115
 667 00c4 3648     		ldr	r0, .L36+40
 668 00c6 46F2A811 		movw	r1, #25000
  52:delayline_reverse.h ****         
 669              		.loc 19 52 9 view .LVU116
 670 00ca 334D     		ldr	r5, .L36+32
 671 00cc 45F6C056 		movw	r6, #24000
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 672              		.loc 19 51 9 view .LVU117
 673 00d0 0161     		str	r1, [r0, #16]
 674              	.LBE835:
 675              	.LBE834:
 676              	.LBE833:
 677              	.LBB858:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 38


 678              	.LBB828:
 679              	.LBB823:
  57:delayline_reverse.h ****         }
  58:delayline_reverse.h ****         write_ptr_ = 0;
 680              		.loc 19 58 9 view .LVU118
 681 00d2 0021     		movs	r1, #0
 682              	.LBE823:
 683              	.LBE828:
 684              	.LBE858:
 685              	.LBB859:
 686              	.LBB848:
 687              	.LBB838:
  52:delayline_reverse.h ****         
 688              		.loc 19 52 9 view .LVU119
 689 00d4 4651     		str	r6, [r0, r5]
 690              	.LBE838:
 691              	.LBE848:
 692              	.LBE859:
 693              	.LBB860:
 694              	.LBB829:
 695              	.LBB824:
  59:delayline_reverse.h ****         read_ptr1_ = 0;
  60:delayline_reverse.h ****         read_ptr2_ = 0;
  61:delayline_reverse.h ****         headDiff_ = 0;
  62:delayline_reverse.h ****         playinghead_ = false;
 696              		.loc 19 62 9 view .LVU120
 697 00d6 0435     		adds	r5, r5, #4
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
  64:delayline_reverse.h ****         fading_ = false;
 698              		.loc 19 64 9 view .LVU121
 699 00d8 324E     		ldr	r6, .L36+44
 700 00da 00F11803 		add	r3, r0, #24
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 701              		.loc 19 62 9 view .LVU122
 702 00de 6155     		strb	r1, [r4, r5]
  60:delayline_reverse.h ****         headDiff_ = 0;
 703              		.loc 19 60 9 view .LVU123
 704 00e0 E160     		str	r1, [r4, #12]
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
 705              		.loc 19 63 9 view .LVU124
 706 00e2 314D     		ldr	r5, .L36+48
  61:delayline_reverse.h ****         playinghead_ = false;
 707              		.loc 19 61 9 view .LVU125
 708 00e4 6161     		str	r1, [r4, #20]
 709              		.loc 19 64 9 view .LVU126
 710 00e6 A155     		strb	r1, [r4, r6]
 711              	.LVL30:
 712              		.loc 19 64 9 view .LVU127
 713              	.LBE824:
 714              	.LBE829:
 715              	.LBE860:
 603:Veno-Echo.cpp ****     delMemsR_REV.Init();
 716              		.loc 20 603 5 is_stmt 1 view .LVU128
 717              	.LBB861:
 718              	.LBI833:
  42:delayline_reverse.h ****     { 
 719              		.loc 19 42 10 view .LVU129
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 39


 720              	.LBB849:
 721              	.LBI834:
  48:delayline_reverse.h ****     {
 722              		.loc 19 48 10 view .LVU130
 723              	.LBB839:
 724              	.LBB836:
  54:delayline_reverse.h ****         {
 725              		.loc 19 54 29 view .LVU131
 726              	.LBE836:
 727              	.LBE839:
 728              	.LBE849:
 729              	.LBE861:
 730              	.LBB862:
 731              	.LBB830:
 732              	.LBB825:
  63:delayline_reverse.h ****         fading_ = false;
 733              		.loc 19 63 9 is_stmt 0 view .LVU132
 734 00e8 2A60     		str	r2, [r5]	@ float
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 735              		.loc 19 59 9 view .LVU133
 736 00ea C4E90111 		strd	r1, r1, [r4, #4]
 737 00ee 2F49     		ldr	r1, .L36+52
 738              	.LVL31:
 739              	.L22:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 740              		.loc 19 59 9 view .LVU134
 741              	.LBE825:
 742              	.LBE830:
 743              	.LBE862:
 744              	.LBB863:
 745              	.LBB850:
 746              	.LBB840:
 747              	.LBB837:
  56:delayline_reverse.h ****         }
 748              		.loc 19 56 13 view .LVU135
 749 00f0 0022     		movs	r2, #0
 750 00f2 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 751              		.loc 19 54 9 is_stmt 1 view .LVU136
  54:delayline_reverse.h ****         {
 752              		.loc 19 54 29 view .LVU137
 753 00f6 8B42     		cmp	r3, r1
 754 00f8 FAD1     		bne	.L22
 755              	.LBE837:
 756              	.LBE840:
 757              	.LBE850:
 758              	.LBE863:
 604:Veno-Echo.cpp **** 
 605:Veno-Echo.cpp ****     //point struct at SDRAM buffers
 606:Veno-Echo.cpp ****     delaysL_REV.del = &delMemsL_REV; 
 759              		.loc 20 606 21 is_stmt 0 view .LVU138
 760 00fa 2D49     		ldr	r1, .L36+56
 761              	.LBB864:
 762              	.LBB851:
 763              	.LBB841:
  58:delayline_reverse.h ****         read_ptr1_ = 0;
 764              		.loc 19 58 9 view .LVU139
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 40


 765 00fc 0023     		movs	r3, #0
 766              	.LBE841:
 767              	.LBE851:
 768              	.LBE864:
 769              	.LBB865:
 770              	.LBB866:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 771              		.loc 20 70 15 view .LVU140
 772 00fe DFED2D6A 		vldr.32	s13, .L36+60
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 773              		.loc 20 70 28 view .LVU141
 774 0102 D1ED017A 		vldr.32	s15, [r1, #4]
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 775              		.loc 20 70 53 view .LVU142
 776 0106 9FED2C6A 		vldr.32	s12, .L36+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 777              		.loc 20 70 15 view .LVU143
 778 010a 36EEE77A 		vsub.f32	s14, s13, s15
 779              	.LBE866:
 780              	.LBE865:
 781              	.LBB880:
 782              	.LBB852:
 783              	.LBB842:
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 784              		.loc 19 62 9 view .LVU144
 785 010e 2B4D     		ldr	r5, .L36+68
 786              	.LBE842:
 787              	.LBE852:
 788              	.LBE880:
 789              	.LBB881:
 790              	.LBB875:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 791              		.loc 20 70 53 view .LVU145
 792 0110 67EE867A 		vmul.f32	s15, s15, s12
 793              	.LBE875:
 794              	.LBE881:
 795              	.LBB882:
 796              	.LBB853:
 797              	.LBB843:
 798              		.loc 19 64 9 view .LVU146
 799 0114 234E     		ldr	r6, .L36+44
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 800              		.loc 19 62 9 view .LVU147
 801 0116 4355     		strb	r3, [r0, r5]
 802              	.LBE843:
 803              	.LBE853:
 804              	.LBE882:
 805              	.LBB883:
 806              	.LBB876:
 807              	.LBB867:
 808              	.LBB868:
 809              		.file 21 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Copyright (C) 2016-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 41


   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** /** @file include/bits/std_abs.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include_next <stdlib.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** # include_next <math.h>
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef abs
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** extern "C++"
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   using ::abs;
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long long
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 42


  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(double __x)
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabs(__x); }
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(float __x)
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 810              		.loc 21 76 31 view .LVU148
 811 0118 B0EEC77A 		vabs.f32	s14, s14
 812              	.LBE868:
 813              	.LBE867:
 814              	.LBE876:
 815              	.LBE883:
 816              	.LBB884:
 817              	.LBB854:
 818              	.LBB844:
  63:delayline_reverse.h ****         fading_ = false;
 819              		.loc 19 63 9 view .LVU149
 820 011c 284D     		ldr	r5, .L36+72
  60:delayline_reverse.h ****         headDiff_ = 0;
 821              		.loc 19 60 9 view .LVU150
 822 011e C360     		str	r3, [r0, #12]
  61:delayline_reverse.h ****         playinghead_ = false;
 823              		.loc 19 61 9 view .LVU151
 824 0120 4361     		str	r3, [r0, #20]
 825              	.LBE844:
 826              	.LBE854:
 827              	.LBE884:
 828              	.LBB885:
 829              	.LBB877:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 830              		.loc 20 70 9 view .LVU152
 831 0122 B4EEE77A 		vcmpe.f32	s14, s15
 832              	.LBE877:
 833              	.LBE885:
 834              	.LBB886:
 835              	.LBB855:
 836              	.LBB845:
 837              		.loc 19 64 9 view .LVU153
 838 0126 8355     		strb	r3, [r0, r6]
 839              	.LVL32:
 840              		.loc 19 64 9 view .LVU154
 841              	.LBE845:
 842              	.LBE855:
 843              	.LBE886:
 844              		.loc 20 606 5 is_stmt 1 view .LVU155
 607:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 845              		.loc 20 607 5 view .LVU156
 606:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 846              		.loc 20 606 21 is_stmt 0 view .LVU157
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 43


 847 0128 0C60     		str	r4, [r1]
 848              	.LBB887:
 849              	.LBB856:
 850              	.LBB846:
  63:delayline_reverse.h ****         fading_ = false;
 851              		.loc 19 63 9 view .LVU158
 852 012a 2A60     		str	r2, [r5]	@ float
 853              	.LBE846:
 854              	.LBE856:
 855              	.LBE887:
 856              	.LBB888:
 857              	.LBB878:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 858              		.loc 20 70 9 view .LVU159
 859 012c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 860              	.LBE878:
 861              	.LBE888:
 862              	.LBB889:
 863              	.LBB857:
 864              	.LBB847:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 865              		.loc 19 59 9 view .LVU160
 866 0130 C0E90133 		strd	r3, r3, [r0, #4]
 867              	.LBE847:
 868              	.LBE857:
 869              	.LBE889:
 870              		.loc 20 607 21 view .LVU161
 871 0134 234B     		ldr	r3, .L36+76
 872 0136 1860     		str	r0, [r3]
 608:Veno-Echo.cpp **** 
 609:Veno-Echo.cpp ****     //Reverse Delay Length. Setup as static value for now. Will make this a shift function
 610:Veno-Echo.cpp ****     delaysL_REV.SetDelayTime(maxRevDelay / 3.f);
 873              		.loc 20 610 5 is_stmt 1 view .LVU162
 874              	.LVL33:
 875              	.LBB890:
 876              	.LBI865:
  68:Veno-Echo.cpp ****     {
 877              		.loc 20 68 10 view .LVU163
 878              	.LBB879:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 879              		.loc 20 70 9 view .LVU164
 880              	.LBB870:
 881              	.LBI867:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 882              		.loc 21 75 3 view .LVU165
 883              	.LBB869:
 884              		.loc 21 76 5 view .LVU166
 885              		.loc 21 76 5 is_stmt 0 view .LVU167
 886              	.LBE869:
 887              	.LBE870:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 888              		.loc 20 70 9 view .LVU168
 889 0138 04DD     		ble	.L23
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 890              		.loc 20 73 13 is_stmt 1 view .LVU169
 891              	.LBB871:
 892              	.LBB872:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 44


  65:delayline_reverse.h ****     }
  66:delayline_reverse.h **** 
  67:delayline_reverse.h ****     /** sets the delay time in samples
  68:delayline_reverse.h ****     */
  69:delayline_reverse.h ****     inline void SetDelay1(size_t delay)
  70:delayline_reverse.h ****     {
  71:delayline_reverse.h ****         frac1_  = 0.0f;
  72:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 893              		.loc 19 72 9 is_stmt 0 view .LVU170
 894 013a 234D     		ldr	r5, .L36+80
 895              	.LBE872:
 896              	.LBE871:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 897              		.loc 20 73 27 view .LVU171
 898 013c C1ED016A 		vstr.32	s13, [r1, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 899              		.loc 20 74 13 is_stmt 1 view .LVU172
 900              	.LVL34:
 901              	.LBB874:
 902              	.LBI871:
  69:delayline_reverse.h ****     {
 903              		.loc 19 69 17 view .LVU173
 904              	.LBB873:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 905              		.loc 19 71 9 is_stmt 0 view .LVU174
 906 0140 2260     		str	r2, [r4]	@ float
 907              		.loc 19 72 9 view .LVU175
 908 0142 2561     		str	r5, [r4, #16]
 909              	.LVL35:
 910              	.L23:
 911              		.loc 19 72 9 view .LVU176
 912              	.LBE873:
 913              	.LBE874:
 914              	.LBE879:
 915              	.LBE890:
 611:Veno-Echo.cpp ****     delaysR_REV.SetDelayTime(maxRevDelay / 3.f);   //default maxRevDelay / 3.0f
 916              		.loc 20 611 5 is_stmt 1 view .LVU177
 917              	.LBB891:
 918              	.LBI891:
  68:Veno-Echo.cpp ****     {
 919              		.loc 20 68 10 view .LVU178
 920              	.LBB892:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 921              		.loc 20 70 9 view .LVU179
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 922              		.loc 20 70 28 is_stmt 0 view .LVU180
 923 0144 D3ED017A 		vldr.32	s15, [r3, #4]
 924              	.LVL36:
 925              	.LBB893:
 926              	.LBI893:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 927              		.loc 21 75 3 is_stmt 1 view .LVU181
 928              	.LBB894:
 929              		.loc 21 76 5 view .LVU182
 930              		.loc 21 76 5 is_stmt 0 view .LVU183
 931              	.LBE894:
 932              	.LBE893:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 45


  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 933              		.loc 20 70 15 view .LVU184
 934 0148 DFED1A6A 		vldr.32	s13, .L36+60
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 935              		.loc 20 70 53 view .LVU185
 936 014c 9FED1A6A 		vldr.32	s12, .L36+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 937              		.loc 20 70 15 view .LVU186
 938 0150 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 939              		.loc 20 70 53 view .LVU187
 940 0154 67EE867A 		vmul.f32	s15, s15, s12
 941              	.LBB896:
 942              	.LBB895:
 943              		.loc 21 76 31 view .LVU188
 944 0158 B0EEC77A 		vabs.f32	s14, s14
 945              	.LBE895:
 946              	.LBE896:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 947              		.loc 20 70 9 view .LVU189
 948 015c B4EEE77A 		vcmpe.f32	s14, s15
 949 0160 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 950 0164 05DD     		ble	.L16
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 951              		.loc 20 73 13 is_stmt 1 view .LVU190
 952              	.LBB897:
 953              	.LBB898:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 954              		.loc 19 71 9 is_stmt 0 view .LVU191
 955 0166 0021     		movs	r1, #0
 956              		.loc 19 72 9 view .LVU192
 957 0168 174A     		ldr	r2, .L36+80
 958              	.LBE898:
 959              	.LBE897:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 960              		.loc 20 73 27 view .LVU193
 961 016a C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 962              		.loc 20 74 13 is_stmt 1 view .LVU194
 963              	.LVL37:
 964              	.LBB900:
 965              	.LBI897:
  69:delayline_reverse.h ****     {
 966              		.loc 19 69 17 view .LVU195
 967              	.LBB899:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 968              		.loc 19 71 9 is_stmt 0 view .LVU196
 969 016e 0160     		str	r1, [r0]	@ float
 970              		.loc 19 72 9 view .LVU197
 971 0170 0261     		str	r2, [r0, #16]
 972              	.LVL38:
 973              	.L16:
 974              		.loc 19 72 9 view .LVU198
 975              	.LBE899:
 976              	.LBE900:
 977              	.LBE892:
 978              	.LBE891:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 46


 612:Veno-Echo.cpp **** 
 613:Veno-Echo.cpp **** }
 979              		.loc 20 613 1 view .LVU199
 980 0172 05B0     		add	sp, sp, #20
 981              		.cfi_def_cfa_offset 20
 982              		@ sp needed
 983 0174 F0BD     		pop	{r4, r5, r6, r7, pc}
 984              	.L37:
 985 0176 00BF     		.align	2
 986              	.L36:
 987 0178 84000000 		.word	delMemsL+132
 988 017c 84786900 		.word	delMemsL+6912132
 989 0180 84786900 		.word	6912132
 990 0184 84000000 		.word	delMemsR+132
 991 0188 84786900 		.word	delMemsR+6912132
 992 018c 00000000 		.word	.LANCHOR1
 993 0190 00000000 		.word	.LANCHOR0
 994 0194 00000000 		.word	delMemsL_REV
 995 0198 189F2400 		.word	2400024
 996 019c 189F2400 		.word	delMemsL_REV+2400024
 997 01a0 00000000 		.word	delMemsR_REV
 998 01a4 249F2400 		.word	2400036
 999 01a8 209F2400 		.word	delMemsL_REV+2400032
 1000 01ac 189F2400 		.word	delMemsR_REV+2400024
 1001 01b0 00000000 		.word	.LANCHOR2
 1002 01b4 00409C47 		.word	1201422336
 1003 01b8 0AD7A33B 		.word	1000593162
 1004 01bc 1C9F2400 		.word	2400028
 1005 01c0 209F2400 		.word	delMemsR_REV+2400032
 1006 01c4 00000000 		.word	.LANCHOR3
 1007 01c8 80380100 		.word	80000
 1008              		.cfi_endproc
 1009              	.LFE4310:
 1011              		.section	.text._Z20Update_DelayTimeL_CVv,"ax",%progbits
 1012              		.align	1
 1013              		.p2align 2,,3
 1014              		.global	_Z20Update_DelayTimeL_CVv
 1015              		.syntax unified
 1016              		.thumb
 1017              		.thumb_func
 1018              		.fpu fpv5-d16
 1020              	_Z20Update_DelayTimeL_CVv:
 1021              	.LFB4312:
 614:Veno-Echo.cpp **** 
 615:Veno-Echo.cpp **** int main(void)
 616:Veno-Echo.cpp **** {
 617:Veno-Echo.cpp ****     // initialize hardware.
 618:Veno-Echo.cpp ****     hw.Configure();
 619:Veno-Echo.cpp ****     hw.Init();
 620:Veno-Echo.cpp ****     
 621:Veno-Echo.cpp ****     //Buttons or switches with status LEDs
 622:Veno-Echo.cpp **** 
 623:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / static_cast<flo
 624:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 625:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 626:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 627:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 47


 628:Veno-Echo.cpp **** 
 629:Veno-Echo.cpp ****     //Gates
 630:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 631:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 632:Veno-Echo.cpp **** 
 633:Veno-Echo.cpp ****     //TapButton.Init(hw.GetPin(4), hw.AudioSampleRate() / 48.f);
 634:Veno-Echo.cpp ****     Sync.Init(hw.GetPin(23), hw.AudioSampleRate() / static_cast<float> (updateDiv));
 635:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 636:Veno-Echo.cpp ****     
 637:Veno-Echo.cpp ****     FwdRevLEnv.Init(hw.AudioSampleRate());
 638:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 639:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 640:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 641:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 642:Veno-Echo.cpp **** 
 643:Veno-Echo.cpp ****     FwdRevREnv.Init(hw.AudioSampleRate());
 644:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 645:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 646:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 647:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 648:Veno-Echo.cpp **** 
 649:Veno-Echo.cpp ****     LPF_Env.Init(hw.AudioSampleRate());
 650:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 651:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 652:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 653:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 654:Veno-Echo.cpp **** 
 655:Veno-Echo.cpp ****     HPF_Env.Init(hw.AudioSampleRate());
 656:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 657:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 658:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 659:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 660:Veno-Echo.cpp **** 
 661:Veno-Echo.cpp ****     // set params for CrossFade objects
 662:Veno-Echo.cpp ****     FwdRevLXfade.Init();
 663:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 664:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 665:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 666:Veno-Echo.cpp **** 
 667:Veno-Echo.cpp ****     WidthXfade.Init();
 668:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 669:Veno-Echo.cpp **** 
 670:Veno-Echo.cpp ****     InitDelays(hw.AudioSampleRate());
 671:Veno-Echo.cpp **** 
 672:Veno-Echo.cpp ****     //setup L and R Low Pass filters
 673:Veno-Echo.cpp ****     LPF_L.Init(hw.AudioSampleRate());
 674:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 675:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 676:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 677:Veno-Echo.cpp **** 
 678:Veno-Echo.cpp ****     LPF_R.Init(hw.AudioSampleRate());
 679:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 680:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 681:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 682:Veno-Echo.cpp **** 
 683:Veno-Echo.cpp ****     //setup L and R High Pass filters
 684:Veno-Echo.cpp ****     HPF_L.Init(hw.AudioSampleRate());
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 48


 685:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 686:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 687:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 688:Veno-Echo.cpp **** 
 689:Veno-Echo.cpp ****     HPF_R.Init(hw.AudioSampleRate());
 690:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 691:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 692:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 693:Veno-Echo.cpp **** 
 694:Veno-Echo.cpp ****     //post filters
 695:Veno-Echo.cpp ****     LPF_L_post.Init(hw.AudioSampleRate());
 696:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 697:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 698:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 699:Veno-Echo.cpp **** 
 700:Veno-Echo.cpp ****     LPF_R_post.Init(hw.AudioSampleRate());
 701:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 702:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 703:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 704:Veno-Echo.cpp **** 
 705:Veno-Echo.cpp ****     //setup L and R High Pass filters
 706:Veno-Echo.cpp ****     HPF_L_post.Init(hw.AudioSampleRate());
 707:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 708:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 709:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 710:Veno-Echo.cpp **** 
 711:Veno-Echo.cpp ****     HPF_R_post.Init(hw.AudioSampleRate());
 712:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 713:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 714:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 715:Veno-Echo.cpp **** 
 716:Veno-Echo.cpp ****     DcBlock_LFB.Init(hw.AudioSampleRate());
 717:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 718:Veno-Echo.cpp **** 
 719:Veno-Echo.cpp ****     //LFO for modulation of fwd delay time
 720:Veno-Echo.cpp ****     lfo.Init(hw.AudioSampleRate());
 721:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 722:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 723:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 724:Veno-Echo.cpp **** 
 725:Veno-Echo.cpp ****     BaseTempo.init(20000,6000000,1.25f);  //max 6 second tap
 726:Veno-Echo.cpp **** 
 727:Veno-Echo.cpp ****     //setup tempo indicators
 728:Veno-Echo.cpp ****     //tempoLED_BASE.init(hw.GetPin(14),hw.AudioSampleRate());
 729:Veno-Echo.cpp ****     tempoLED_BASE.init(hw.GetPin(24),hw.AudioSampleRate());
 730:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 731:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 732:Veno-Echo.cpp **** 
 733:Veno-Echo.cpp ****     //load settings from flash
 734:Veno-Echo.cpp **** 
 735:Veno-Echo.cpp ****     //Settings SavedSettings{LoadSettings()};
 736:Veno-Echo.cpp ****     ApplySettings(defaultAltControls);
 737:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 738:Veno-Echo.cpp **** 
 739:Veno-Echo.cpp ****     //initialize DAC
 740:Veno-Echo.cpp **** 
 741:Veno-Echo.cpp ****    //ADC
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 49


 742:Veno-Echo.cpp ****     AdcChannelConfig adcConfig[8];
 743:Veno-Echo.cpp **** 
 744:Veno-Echo.cpp ****     adcConfig[0].InitSingle(hw.GetPin(15));
 745:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 746:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 747:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 748:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 749:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 750:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 751:Veno-Echo.cpp ****     adcConfig[6].InitSingle(hw.GetPin(22));
 752:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 753:Veno-Echo.cpp **** 
 754:Veno-Echo.cpp **** 
 755:Veno-Echo.cpp ****     hw.adc.Init(adcConfig, 8,daisy::AdcHandle::OVS_128);
 756:Veno-Echo.cpp ****     hw.adc.Start();
 757:Veno-Echo.cpp **** 
 758:Veno-Echo.cpp **** 
 759:Veno-Echo.cpp ****     hw.SetAudioBlockSize(1);     //set blocksize.
 760:Veno-Echo.cpp ****     // start audio callback
 761:Veno-Echo.cpp ****     hw.StartAudio(AudioCallback);
 762:Veno-Echo.cpp **** 
 763:Veno-Echo.cpp ****     
 764:Veno-Echo.cpp **** 
 765:Veno-Echo.cpp ****      for(;;)
 766:Veno-Echo.cpp ****      {
 767:Veno-Echo.cpp ****      //   
 768:Veno-Echo.cpp **** /*
 769:Veno-Echo.cpp ****         if(save_flag)
 770:Veno-Echo.cpp ****         {
 771:Veno-Echo.cpp **** 
 772:Veno-Echo.cpp ****             if (SaveSettings(AltControls) == DSY_MEMORY_OK)
 773:Veno-Echo.cpp ****             {
 774:Veno-Echo.cpp ****                 //reset flag
 775:Veno-Echo.cpp ****                 //System::Delay(1000);
 776:Veno-Echo.cpp ****                 save_flag = false;
 777:Veno-Echo.cpp ****             }
 778:Veno-Echo.cpp ****         }
 779:Veno-Echo.cpp **** 
 780:Veno-Echo.cpp **** */
 781:Veno-Echo.cpp ****      }
 782:Veno-Echo.cpp **** 
 783:Veno-Echo.cpp **** }
 784:Veno-Echo.cpp **** 
 785:Veno-Echo.cpp **** void Update_DelayTimeL_CV()
 786:Veno-Echo.cpp **** {
 1022              		.loc 20 786 1 is_stmt 1 view -0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 0
 1025              		@ frame_needed = 0, uses_anonymous_args = 0
 787:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1026              		.loc 20 787 5 view .LVU201
 786:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1027              		.loc 20 786 1 is_stmt 0 view .LVU202
 1028 0000 08B5     		push	{r3, lr}
 1029              		.cfi_def_cfa_offset 8
 1030              		.cfi_offset 3, -8
 1031              		.cfi_offset 14, -4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 50


 1032              		.loc 20 787 36 view .LVU203
 1033 0002 0021     		movs	r1, #0
 1034 0004 0348     		ldr	r0, .L40
 1035 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1036              	.LVL39:
 1037              		.loc 20 787 19 view .LVU204
 1038 000a 034B     		ldr	r3, .L40+4
 1039 000c 83ED000A 		vstr.32	s0, [r3]
 788:Veno-Echo.cpp **** }
 1040              		.loc 20 788 1 view .LVU205
 1041 0010 08BD     		pop	{r3, pc}
 1042              	.L41:
 1043 0012 00BF     		.align	2
 1044              	.L40:
 1045 0014 18000000 		.word	.LANCHOR4+24
 1046 0018 00000000 		.word	.LANCHOR5
 1047              		.cfi_endproc
 1048              	.LFE4312:
 1050              		.section	.text._Z17Update_DelayTimeLv,"ax",%progbits
 1051              		.align	1
 1052              		.p2align 2,,3
 1053              		.global	_Z17Update_DelayTimeLv
 1054              		.syntax unified
 1055              		.thumb
 1056              		.thumb_func
 1057              		.fpu fpv5-d16
 1059              	_Z17Update_DelayTimeLv:
 1060              	.LFB4313:
 789:Veno-Echo.cpp **** 
 790:Veno-Echo.cpp **** void Update_DelayTimeL()
 791:Veno-Echo.cpp **** {
 1061              		.loc 20 791 1 is_stmt 1 view -0
 1062              		.cfi_startproc
 1063              		@ args = 0, pretend = 0, frame = 0
 1064              		@ frame_needed = 0, uses_anonymous_args = 0
 792:Veno-Echo.cpp ****     static bool lastShift{};
 1065              		.loc 20 792 5 view .LVU207
 793:Veno-Echo.cpp ****     static bool delayTimeL_pickup{};
 1066              		.loc 20 793 5 view .LVU208
 794:Veno-Echo.cpp ****     static bool Rev_DelayTime_pickup{};
 1067              		.loc 20 794 5 view .LVU209
 795:Veno-Echo.cpp ****     
 796:Veno-Echo.cpp ****     static float delayTimeL_Last{};
 1068              		.loc 20 796 5 view .LVU210
 797:Veno-Echo.cpp **** 
 798:Veno-Echo.cpp ****     //update pot values
 799:Veno-Echo.cpp ****     float delayTimeL_Pot{hw.adc.GetMuxFloat(7,2)};
 1069              		.loc 20 799 5 view .LVU211
 791:Veno-Echo.cpp ****     static bool lastShift{};
 1070              		.loc 20 791 1 is_stmt 0 view .LVU212
 1071 0000 10B5     		push	{r4, lr}
 1072              		.cfi_def_cfa_offset 8
 1073              		.cfi_offset 4, -8
 1074              		.cfi_offset 14, -4
 1075              		.loc 20 799 44 view .LVU213
 1076 0002 0222     		movs	r2, #2
 1077 0004 0721     		movs	r1, #7
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 51


 1078 0006 7348     		ldr	r0, .L75
 1079 0008 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1080              	.LVL40:
 800:Veno-Echo.cpp **** 
 801:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 802:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 803:Veno-Echo.cpp ****     static int counterL{};
 804:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 1081              		.loc 20 804 26 view .LVU214
 1082 000c 7249     		ldr	r1, .L75+4
 1083              		.loc 20 804 31 view .LVU215
 1084 000e 734B     		ldr	r3, .L75+8
 1085              	.LVL41:
 803:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 1086              		.loc 20 803 5 is_stmt 1 view .LVU216
 1087              		.loc 20 804 5 view .LVU217
 1088              		.loc 20 804 26 is_stmt 0 view .LVU218
 1089 0010 0A68     		ldr	r2, [r1]
 1090              	.LBB901:
 805:Veno-Echo.cpp **** 
 806:Veno-Echo.cpp ****     if (!shift) //default control
 1091              		.loc 20 806 9 view .LVU219
 1092 0012 7348     		ldr	r0, .L75+12
 1093              	.LBE901:
 804:Veno-Echo.cpp **** 
 1094              		.loc 20 804 26 view .LVU220
 1095 0014 0132     		adds	r2, r2, #1
 1096              	.LBB965:
 1097              		.loc 20 806 5 view .LVU221
 1098 0016 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1099              	.LBE965:
 804:Veno-Echo.cpp **** 
 1100              		.loc 20 804 31 view .LVU222
 1101 0018 83FB0243 		smull	r4, r3, r3, r2
 1102 001c D417     		asrs	r4, r2, #31
 1103 001e C4EB6313 		rsb	r3, r4, r3, asr #5
 1104 0022 03EB4303 		add	r3, r3, r3, lsl #1
 1105 0026 A2EB8313 		sub	r3, r2, r3, lsl #6
 1106              	.LBB966:
 1107              	.LBB902:
 807:Veno-Echo.cpp ****     {
 808:Veno-Echo.cpp ****         static float delayTimeL_new{};
 809:Veno-Echo.cpp ****         //udpate pickup
 810:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 1108              		.loc 20 810 19 view .LVU223
 1109 002a 6E4A     		ldr	r2, .L75+16
 1110              	.LBE902:
 1111              	.LBE966:
 804:Veno-Echo.cpp **** 
 1112              		.loc 20 804 14 view .LVU224
 1113 002c 0B60     		str	r3, [r1]
 806:Veno-Echo.cpp ****     {
 1114              		.loc 20 806 5 is_stmt 1 view .LVU225
 1115              	.LBB967:
 1116 002e 80BB     		cbnz	r0, .L43
 1117              	.LBB921:
 808:Veno-Echo.cpp ****         //udpate pickup
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 52


 1118              		.loc 20 808 9 view .LVU226
 1119              		.loc 20 810 9 view .LVU227
 1120 0030 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1121 0032 0029     		cmp	r1, #0
 1122 0034 38D0     		beq	.L44
 811:Veno-Echo.cpp ****         {
 812:Veno-Echo.cpp ****             lastShift = shift;
 1123              		.loc 20 812 13 view .LVU228
 813:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1124              		.loc 20 813 31 is_stmt 0 view .LVU229
 1125 0036 6C4C     		ldr	r4, .L75+20
 814:Veno-Echo.cpp ****             delayTimeL_new = delayTimeL_Pot;   //update new value
 1126              		.loc 20 814 28 view .LVU230
 1127 0038 6C49     		ldr	r1, .L75+24
 812:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1128              		.loc 20 812 23 view .LVU231
 1129 003a 1070     		strb	r0, [r2]
 813:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1130              		.loc 20 813 13 is_stmt 1 view .LVU232
 813:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1131              		.loc 20 813 31 is_stmt 0 view .LVU233
 1132 003c 2070     		strb	r0, [r4]
 1133              		.loc 20 814 13 is_stmt 1 view .LVU234
 1134              		.loc 20 814 28 is_stmt 0 view .LVU235
 1135 003e 81ED000A 		vstr.32	s0, [r1]
 1136              	.L45:
 815:Veno-Echo.cpp ****         } 
 816:Veno-Echo.cpp ****         else    //not a recent shift change
 817:Veno-Echo.cpp ****         {
 818:Veno-Echo.cpp ****             if(!delayTimeL_pickup)  //not picked up
 819:Veno-Echo.cpp ****             {
 820:Veno-Echo.cpp ****                 if(abs(delayTimeL_Pot - delayTimeL_new) > pickupTolerance)  //checked if changed fr
 821:Veno-Echo.cpp ****                 {
 822:Veno-Echo.cpp ****                     delayTimeL_pickup = true;   //set to picked up
 823:Veno-Echo.cpp ****                 }
 824:Veno-Echo.cpp ****             }
 825:Veno-Echo.cpp ****         }
 826:Veno-Echo.cpp **** 
 827:Veno-Echo.cpp ****         float delayTimeL{};
 1137              		.loc 20 827 9 is_stmt 1 view .LVU236
 1138              	.LVL42:
 828:Veno-Echo.cpp **** 
 829:Veno-Echo.cpp ****         if(delayTimeL_pickup)
 1139              		.loc 20 829 9 view .LVU237
 830:Veno-Echo.cpp ****         {
 831:Veno-Echo.cpp ****             delayTimeL = PotCVCombo(delayTimeL_Pot,delayTimeL_CV);  //combine pot value and CV
 832:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 833:Veno-Echo.cpp ****         }
 834:Veno-Echo.cpp **** 
 835:Veno-Echo.cpp ****         else
 836:Veno-Echo.cpp ****         {
 837:Veno-Echo.cpp ****             delayTimeL = PotCVCombo(delayTimeL_Last,delayTimeL_CV); //combine last pot value and CV
 1140              		.loc 20 837 13 view .LVU238
 1141              	.LBB903:
 1142              	.LBI903:
 838:Veno-Echo.cpp ****         }
 839:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 53


 840:Veno-Echo.cpp ****         if(counterL == 0)
 841:Veno-Echo.cpp ****         {
 842:Veno-Echo.cpp ****             if(delayL.SetDelayTime(delayTimeL,syncMode))
 843:Veno-Echo.cpp ****             {
 844:Veno-Echo.cpp ****             };
 845:Veno-Echo.cpp ****         }
 846:Veno-Echo.cpp **** 
 847:Veno-Echo.cpp ****     }   //not shift mode
 848:Veno-Echo.cpp **** 
 849:Veno-Echo.cpp ****     else    //shift mode
 850:Veno-Echo.cpp ****     {
 851:Veno-Echo.cpp ****         static float Rev_DelayTime_new{};
 852:Veno-Echo.cpp **** 
 853:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 854:Veno-Echo.cpp ****         {
 855:Veno-Echo.cpp ****             lastShift = shift;
 856:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 857:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 858:Veno-Echo.cpp ****         }
 859:Veno-Echo.cpp **** 
 860:Veno-Echo.cpp ****         else    //not a recent shift change
 861:Veno-Echo.cpp ****         {
 862:Veno-Echo.cpp ****             if(!Rev_DelayTime_pickup) //not picked up
 863:Veno-Echo.cpp ****             {
 864:Veno-Echo.cpp ****                 if(abs(delayTimeL_Pot - Rev_DelayTime_new) > pickupTolerance)
 865:Veno-Echo.cpp ****                 {
 866:Veno-Echo.cpp ****                     Rev_DelayTime_pickup = true;   //set picked up
 867:Veno-Echo.cpp ****                 }
 868:Veno-Echo.cpp ****             }
 869:Veno-Echo.cpp ****         }
 870:Veno-Echo.cpp **** 
 871:Veno-Echo.cpp ****         if(Rev_DelayTime_pickup)
 872:Veno-Echo.cpp ****         {
 873:Veno-Echo.cpp ****             float Rev_DelayTime{scale(delayTimeL_Pot,maxRevDelay,minRevDelay,EXPONENTIAL)};
 874:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 875:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 876:Veno-Echo.cpp ****             //save setting:
 877:Veno-Echo.cpp ****             AltControls.RevLength = Rev_DelayTime;
 878:Veno-Echo.cpp ****         }
 879:Veno-Echo.cpp ****     }
 880:Veno-Echo.cpp ****     
 881:Veno-Echo.cpp **** }
 882:Veno-Echo.cpp **** 
 883:Veno-Echo.cpp **** void Update_DelayTimeR_CV()
 884:Veno-Echo.cpp **** {
 885:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 886:Veno-Echo.cpp **** }
 887:Veno-Echo.cpp **** 
 888:Veno-Echo.cpp **** void Update_DelayTimeR()
 889:Veno-Echo.cpp **** {
 890:Veno-Echo.cpp ****     static bool lastShift{};
 891:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 892:Veno-Echo.cpp ****     static bool tapRatio_pickup{};
 893:Veno-Echo.cpp ****     
 894:Veno-Echo.cpp ****     static float delayTimeR_Last{};
 895:Veno-Echo.cpp **** 
 896:Veno-Echo.cpp ****     //update pot values
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 54


 897:Veno-Echo.cpp ****     float delayTimeR_Pot{hw.adc.GetMuxFloat(7,6)};
 898:Veno-Echo.cpp **** 
 899:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 900:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 901:Veno-Echo.cpp ****     static int counterR{};
 902:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 903:Veno-Echo.cpp **** 
 904:Veno-Echo.cpp ****     if (!shift) //default control
 905:Veno-Echo.cpp ****     {
 906:Veno-Echo.cpp ****         static float delayTimeR_new{};
 907:Veno-Echo.cpp ****         //udpate pickup
 908:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 909:Veno-Echo.cpp ****         {
 910:Veno-Echo.cpp ****             lastShift = shift;
 911:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 912:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 913:Veno-Echo.cpp ****         } 
 914:Veno-Echo.cpp ****         else    //not a default shift change
 915:Veno-Echo.cpp ****         {
 916:Veno-Echo.cpp ****             if(!delayTimeR_pickup)  //not picked up
 917:Veno-Echo.cpp ****             {
 918:Veno-Echo.cpp ****                 if(abs(delayTimeR_Pot - delayTimeR_new) > pickupTolerance)  //checked if changed fr
 919:Veno-Echo.cpp ****                 {
 920:Veno-Echo.cpp ****                     delayTimeR_pickup = true;   //set to picked up
 921:Veno-Echo.cpp ****                 }
 922:Veno-Echo.cpp ****             }
 923:Veno-Echo.cpp ****         }
 924:Veno-Echo.cpp **** 
 925:Veno-Echo.cpp ****         float delayTimeR{};
 926:Veno-Echo.cpp **** 
 927:Veno-Echo.cpp ****         if(delayTimeR_pickup)
 928:Veno-Echo.cpp ****         {
 929:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Pot,delayTimeR_CV);
 930:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 931:Veno-Echo.cpp ****         }
 932:Veno-Echo.cpp **** 
 933:Veno-Echo.cpp ****         else
 934:Veno-Echo.cpp ****         {
 935:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Last,delayTimeR_CV);
 936:Veno-Echo.cpp ****         }
 937:Veno-Echo.cpp **** 
 938:Veno-Echo.cpp ****         if(counterR == 0)
 939:Veno-Echo.cpp ****         {
 940:Veno-Echo.cpp ****             if(delayR.SetDelayTime(delayTimeR,syncMode))
 941:Veno-Echo.cpp ****             {
 942:Veno-Echo.cpp ****             };
 943:Veno-Echo.cpp **** 
 944:Veno-Echo.cpp ****         }
 945:Veno-Echo.cpp ****     }   //not shift mode
 946:Veno-Echo.cpp **** 
 947:Veno-Echo.cpp ****     else    //shift mode
 948:Veno-Echo.cpp ****     {
 949:Veno-Echo.cpp **** 
 950:Veno-Echo.cpp ****         static float tapRatio_new{};
 951:Veno-Echo.cpp **** 
 952:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 953:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 55


 954:Veno-Echo.cpp ****             lastShift = shift;
 955:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 956:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 957:Veno-Echo.cpp ****         }
 958:Veno-Echo.cpp **** 
 959:Veno-Echo.cpp ****         else    //not a recent shift change
 960:Veno-Echo.cpp ****         {
 961:Veno-Echo.cpp ****             if(!tapRatio_pickup) //not picked up
 962:Veno-Echo.cpp ****             {
 963:Veno-Echo.cpp ****                 if(abs(delayTimeR_Pot - tapRatio_new) > pickupTolerance)
 964:Veno-Echo.cpp ****                 {
 965:Veno-Echo.cpp ****                     tapRatio_pickup = true;   //set picked up
 966:Veno-Echo.cpp ****                 }
 967:Veno-Echo.cpp ****             }
 968:Veno-Echo.cpp ****         }
 969:Veno-Echo.cpp **** 
 970:Veno-Echo.cpp ****         if(tapRatio_pickup)
 971:Veno-Echo.cpp ****         {
 972:Veno-Echo.cpp ****             float tapRatioInput{delayTimeR_Pot};
 973:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
 974:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 975:Veno-Echo.cpp ****             //save setting:
 976:Veno-Echo.cpp ****             AltControls.tapRatio = GetTapRatio(tapRatio);
 977:Veno-Echo.cpp ****         }
 978:Veno-Echo.cpp ****     }
 979:Veno-Echo.cpp ****     
 980:Veno-Echo.cpp **** }
 981:Veno-Echo.cpp **** void Update_feedbackL_CV()
 982:Veno-Echo.cpp **** {
 983:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 984:Veno-Echo.cpp **** }
 985:Veno-Echo.cpp **** void Update_feedbackL()
 986:Veno-Echo.cpp **** {
 987:Veno-Echo.cpp ****     static bool lastShift{};
 988:Veno-Echo.cpp ****     static bool feedbackL_pickup{};
 989:Veno-Echo.cpp ****     static bool HPCutoff_pickup{};
 990:Veno-Echo.cpp **** 
 991:Veno-Echo.cpp ****     static float feedbackL_Last{};
 992:Veno-Echo.cpp **** 
 993:Veno-Echo.cpp ****     //get pot values:
 994:Veno-Echo.cpp ****     //float feedbackL_Pot{hw.adc.GetFloat(2)};
 995:Veno-Echo.cpp ****     float feedbackL_Pot{hw.adc.GetMuxFloat(7,1)};
 996:Veno-Echo.cpp **** 
 997:Veno-Echo.cpp ****     if (!shift) //default controls
 998:Veno-Echo.cpp ****     {   
 999:Veno-Echo.cpp ****         static float feedbackL_new{};
1000:Veno-Echo.cpp ****         //update pickup
1001:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1002:Veno-Echo.cpp ****         {
1003:Veno-Echo.cpp ****             lastShift = shift;
1004:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
1005:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
1006:Veno-Echo.cpp ****         } 
1007:Veno-Echo.cpp ****         else    //not a default shift change
1008:Veno-Echo.cpp ****         {
1009:Veno-Echo.cpp ****             if(!feedbackL_pickup)  //not picked up
1010:Veno-Echo.cpp ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 56


1011:Veno-Echo.cpp ****                 if(abs(feedbackL_Pot - feedbackL_new) > pickupTolerance)  //checked if changed from
1012:Veno-Echo.cpp ****                 {
1013:Veno-Echo.cpp ****                     feedbackL_pickup = true;   //set to picked up
1014:Veno-Echo.cpp ****                 }
1015:Veno-Echo.cpp ****             }
1016:Veno-Echo.cpp ****         }
1017:Veno-Echo.cpp **** 
1018:Veno-Echo.cpp ****         float feedbackL_combo{};
1019:Veno-Echo.cpp **** 
1020:Veno-Echo.cpp ****         if(feedbackL_pickup)
1021:Veno-Echo.cpp ****         {
1022:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Pot,feedbackL_CV);
1023:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
1024:Veno-Echo.cpp ****         }
1025:Veno-Echo.cpp **** 
1026:Veno-Echo.cpp ****         else
1027:Veno-Echo.cpp ****         {
1028:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Last,feedbackL_CV);
1029:Veno-Echo.cpp ****         }
1030:Veno-Echo.cpp ****   
1031:Veno-Echo.cpp ****         float feedbackL_Target{scale(feedbackL_combo,0.0,maxFB,LINEAR)};  
1032:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
1033:Veno-Echo.cpp ****     }
1034:Veno-Echo.cpp ****     else    //alternate controls
1035:Veno-Echo.cpp ****     {
1036:Veno-Echo.cpp ****         static float HPCutoff_new{};
1037:Veno-Echo.cpp **** 
1038:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1039:Veno-Echo.cpp ****         {
1040:Veno-Echo.cpp ****             lastShift = shift;
1041:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
1042:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
1043:Veno-Echo.cpp ****         }
1044:Veno-Echo.cpp **** 
1045:Veno-Echo.cpp ****         else    //not a recent shift change
1046:Veno-Echo.cpp ****         {
1047:Veno-Echo.cpp ****             if(!HPCutoff_pickup) //not picked up
1048:Veno-Echo.cpp ****             {
1049:Veno-Echo.cpp ****                 if(abs(feedbackL_Pot - HPCutoff_new) > pickupTolerance)
1050:Veno-Echo.cpp ****                 {
1051:Veno-Echo.cpp ****                     HPCutoff_pickup = true;   //set picked up
1052:Veno-Echo.cpp ****                 }
1053:Veno-Echo.cpp ****             }
1054:Veno-Echo.cpp ****         }
1055:Veno-Echo.cpp **** 
1056:Veno-Echo.cpp ****         if(HPCutoff_pickup)
1057:Veno-Echo.cpp ****         {
1058:Veno-Echo.cpp ****             float HPCutoff{};
1059:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
1060:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
1061:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
1062:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
1063:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
1064:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
1065:Veno-Echo.cpp ****         }
1066:Veno-Echo.cpp ****     }
1067:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 57


1068:Veno-Echo.cpp **** 
1069:Veno-Echo.cpp **** void Update_feedbackR_CV()
1070:Veno-Echo.cpp **** {
1071:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
1072:Veno-Echo.cpp **** }
1073:Veno-Echo.cpp **** 
1074:Veno-Echo.cpp **** void Update_feedbackR()
1075:Veno-Echo.cpp **** {
1076:Veno-Echo.cpp ****     static bool lastShift{};
1077:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
1078:Veno-Echo.cpp ****     static bool LPCutoff_pickup{};
1079:Veno-Echo.cpp **** 
1080:Veno-Echo.cpp ****     static float feedbackR_Last{};
1081:Veno-Echo.cpp **** 
1082:Veno-Echo.cpp ****     //get pot values:
1083:Veno-Echo.cpp ****     float feedbackR_Pot{hw.adc.GetMuxFloat(7,4)};
1084:Veno-Echo.cpp **** 
1085:Veno-Echo.cpp ****     if (!shift) //default controls
1086:Veno-Echo.cpp ****     {   
1087:Veno-Echo.cpp ****         static float feedbackR_new{};
1088:Veno-Echo.cpp ****         //update pickup
1089:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1090:Veno-Echo.cpp ****         {
1091:Veno-Echo.cpp ****             lastShift = shift;
1092:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
1093:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
1094:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
1095:Veno-Echo.cpp ****         } 
1096:Veno-Echo.cpp ****         else    //not a recent shift change
1097:Veno-Echo.cpp ****         {
1098:Veno-Echo.cpp ****             if(!feedbackR_pickup)  //not picked up
1099:Veno-Echo.cpp ****             {
1100:Veno-Echo.cpp ****                 if(abs(feedbackR_Pot - feedbackR_new) > pickupTolerance)  //checked if changed from
1101:Veno-Echo.cpp ****                 {
1102:Veno-Echo.cpp ****                     feedbackR_pickup = true;   //set to picked up
1103:Veno-Echo.cpp ****                 }
1104:Veno-Echo.cpp ****             }
1105:Veno-Echo.cpp ****         }
1106:Veno-Echo.cpp **** 
1107:Veno-Echo.cpp ****         float feedbackR_combo{};
1108:Veno-Echo.cpp ****         
1109:Veno-Echo.cpp ****         if(feedbackR_pickup)
1110:Veno-Echo.cpp ****         {
1111:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Pot,feedbackR_CV);
1112:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
1113:Veno-Echo.cpp ****         }
1114:Veno-Echo.cpp **** 
1115:Veno-Echo.cpp ****         else
1116:Veno-Echo.cpp ****         {
1117:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Last,feedbackR_CV);
1118:Veno-Echo.cpp ****         }
1119:Veno-Echo.cpp **** 
1120:Veno-Echo.cpp ****         float feedbackR_Target{scale(feedbackR_combo,0.0,maxFB,LINEAR)};
1121:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
1122:Veno-Echo.cpp ****     }
1123:Veno-Echo.cpp ****     else    //alternate controls
1124:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 58


1125:Veno-Echo.cpp **** 
1126:Veno-Echo.cpp ****         static float LPCutoff_new{};
1127:Veno-Echo.cpp **** 
1128:Veno-Echo.cpp ****          if (shift != lastShift) //recent shift change
1129:Veno-Echo.cpp ****         {
1130:Veno-Echo.cpp ****             lastShift = shift;
1131:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
1132:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
1133:Veno-Echo.cpp ****         }
1134:Veno-Echo.cpp **** 
1135:Veno-Echo.cpp ****         else    //not a recent shift change
1136:Veno-Echo.cpp ****         {
1137:Veno-Echo.cpp ****             if(!LPCutoff_pickup) //not picked up
1138:Veno-Echo.cpp ****             {
1139:Veno-Echo.cpp ****                 if(abs(feedbackR_Pot - LPCutoff_new) > pickupTolerance)
1140:Veno-Echo.cpp ****                 {
1141:Veno-Echo.cpp ****                     LPCutoff_pickup = true;   //set picked up
1142:Veno-Echo.cpp ****                 }
1143:Veno-Echo.cpp ****             }
1144:Veno-Echo.cpp ****         }
1145:Veno-Echo.cpp **** 
1146:Veno-Echo.cpp ****         if(LPCutoff_pickup)
1147:Veno-Echo.cpp ****         {
1148:Veno-Echo.cpp ****             float LPCutoff{};
1149:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
1150:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
1151:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
1152:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
1153:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
1154:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
1155:Veno-Echo.cpp ****         }
1156:Veno-Echo.cpp ****     }
1157:Veno-Echo.cpp **** }
1158:Veno-Echo.cpp **** 
1159:Veno-Echo.cpp **** void Update_drywet_CV()
1160:Veno-Echo.cpp **** {
1161:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
1162:Veno-Echo.cpp **** }
1163:Veno-Echo.cpp **** 
1164:Veno-Echo.cpp **** void Update_drywet()
1165:Veno-Echo.cpp **** {
1166:Veno-Echo.cpp ****     static bool lastShift{};
1167:Veno-Echo.cpp ****     static bool drywet_pickup{};
1168:Veno-Echo.cpp ****     static bool Res_pickup{};
1169:Veno-Echo.cpp **** 
1170:Veno-Echo.cpp ****     static float drywet_Last{}; //last drywet position (unscaled)
1171:Veno-Echo.cpp ****     //static float Res_Last{}; //last res value (unscaled)
1172:Veno-Echo.cpp **** 
1173:Veno-Echo.cpp ****     //get pot values:
1174:Veno-Echo.cpp ****     //float drywet_Pot{hw.adc.GetFloat(4)};
1175:Veno-Echo.cpp ****     float drywet_Pot{hw.adc.GetMuxFloat(7,5)}; //read current pot position
1176:Veno-Echo.cpp **** 
1177:Veno-Echo.cpp ****     if (!shift) //default controls
1178:Veno-Echo.cpp ****     {   
1179:Veno-Echo.cpp **** 
1180:Veno-Echo.cpp ****         static float drywet_new{};
1181:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 59


1182:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1183:Veno-Echo.cpp ****         {
1184:Veno-Echo.cpp ****             lastShift = shift;
1185:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
1186:Veno-Echo.cpp ****             drywet_pickup = false;  //set to not picked up
1187:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
1188:Veno-Echo.cpp ****         } 
1189:Veno-Echo.cpp ****         
1190:Veno-Echo.cpp ****         else    //not a recent shift change
1191:Veno-Echo.cpp ****         {
1192:Veno-Echo.cpp ****             if(!drywet_pickup)  //not pickup
1193:Veno-Echo.cpp ****             {
1194:Veno-Echo.cpp ****                 //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,false);
1195:Veno-Echo.cpp ****                 if(abs(drywet_Pot - drywet_new) > pickupTolerance)  //check if changed from new val
1196:Veno-Echo.cpp ****                 {
1197:Veno-Echo.cpp ****                     drywet_pickup = true;   //set to picked up
1198:Veno-Echo.cpp ****                 }
1199:Veno-Echo.cpp ****             }
1200:Veno-Echo.cpp **** 
1201:Veno-Echo.cpp ****         }
1202:Veno-Echo.cpp ****         
1203:Veno-Echo.cpp ****         float drywetcombo{};
1204:Veno-Echo.cpp **** 
1205:Veno-Echo.cpp ****         if (drywet_pickup)
1206:Veno-Echo.cpp ****         {
1207:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Pot,drywet_CV);    //combine pot and CV
1208:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
1209:Veno-Echo.cpp ****         }
1210:Veno-Echo.cpp **** 
1211:Veno-Echo.cpp ****         else
1212:Veno-Echo.cpp ****         {
1213:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Last,drywet_CV);    //combine last pot value and CV
1214:Veno-Echo.cpp ****         }
1215:Veno-Echo.cpp **** 
1216:Veno-Echo.cpp ****         float drywetTarget{};
1217:Veno-Echo.cpp **** 
1218:Veno-Echo.cpp ****         if(drywetcombo >= 0.98)
1219:Veno-Echo.cpp ****         {
1220:Veno-Echo.cpp ****             drywetTarget = 1.0f;
1221:Veno-Echo.cpp ****         }
1222:Veno-Echo.cpp ****         else if(drywetcombo <= 0.02)
1223:Veno-Echo.cpp ****         {
1224:Veno-Echo.cpp ****             drywetTarget = 0.0f;
1225:Veno-Echo.cpp ****         }
1226:Veno-Echo.cpp ****         else
1227:Veno-Echo.cpp ****         {
1228:Veno-Echo.cpp ****             drywetTarget = scale(drywetcombo,0.0,1.0,LINEAR); 
1229:Veno-Echo.cpp ****         }
1230:Veno-Echo.cpp **** 
1231:Veno-Echo.cpp ****         //fonepole(drywet,drywetTarget,0.032f); 
1232:Veno-Echo.cpp ****         fonepole(drywet,drywetTarget,0.016f); 
1233:Veno-Echo.cpp ****     }
1234:Veno-Echo.cpp ****     else    //alternate controls
1235:Veno-Echo.cpp ****     {
1236:Veno-Echo.cpp ****         static float Res_new{};
1237:Veno-Echo.cpp **** 
1238:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 60


1239:Veno-Echo.cpp ****         {
1240:Veno-Echo.cpp ****             lastShift = shift;
1241:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
1242:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
1243:Veno-Echo.cpp ****         }
1244:Veno-Echo.cpp **** 
1245:Veno-Echo.cpp ****         else    //not a recent shift change
1246:Veno-Echo.cpp ****         {
1247:Veno-Echo.cpp ****             if(!Res_pickup) //not picked up
1248:Veno-Echo.cpp ****             {
1249:Veno-Echo.cpp ****                 if(abs(drywet_Pot - Res_new) > pickupTolerance)
1250:Veno-Echo.cpp ****                 {
1251:Veno-Echo.cpp ****                     Res_pickup = true;  //set picked up
1252:Veno-Echo.cpp ****                 }
1253:Veno-Echo.cpp ****             }
1254:Veno-Echo.cpp ****         }
1255:Veno-Echo.cpp **** 
1256:Veno-Echo.cpp ****         if(Res_pickup)
1257:Veno-Echo.cpp ****         {
1258:Veno-Echo.cpp ****             float Res{};
1259:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
1260:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
1261:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
1262:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
1263:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
1264:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
1265:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
1266:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
1267:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
1268:Veno-Echo.cpp ****             AltControls.Resonance = Res;
1269:Veno-Echo.cpp ****         }
1270:Veno-Echo.cpp ****     }
1271:Veno-Echo.cpp **** }
1272:Veno-Echo.cpp **** 
1273:Veno-Echo.cpp **** void Update_width_CV()
1274:Veno-Echo.cpp **** {
1275:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
1276:Veno-Echo.cpp **** }
1277:Veno-Echo.cpp **** 
1278:Veno-Echo.cpp **** void Update_width()
1279:Veno-Echo.cpp **** {
1280:Veno-Echo.cpp ****     static bool lastShift{};
1281:Veno-Echo.cpp ****     static bool width_pickup{};
1282:Veno-Echo.cpp ****     static bool ModDepth_pickup{};
1283:Veno-Echo.cpp **** 
1284:Veno-Echo.cpp ****     static float width_Last{};
1285:Veno-Echo.cpp **** 
1286:Veno-Echo.cpp ****     //get pot values:
1287:Veno-Echo.cpp ****     float width_Pot{hw.adc.GetMuxFloat(7,7)};
1288:Veno-Echo.cpp **** 
1289:Veno-Echo.cpp ****     if (!shift) //default controls
1290:Veno-Echo.cpp ****     {   
1291:Veno-Echo.cpp ****         static float width_new{};
1292:Veno-Echo.cpp ****         //update pickup
1293:Veno-Echo.cpp ****         if (shift != lastShift)
1294:Veno-Echo.cpp ****         {
1295:Veno-Echo.cpp ****             lastShift = shift;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 61


1296:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
1297:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
1298:Veno-Echo.cpp ****         }
1299:Veno-Echo.cpp **** 
1300:Veno-Echo.cpp ****         else
1301:Veno-Echo.cpp ****         {
1302:Veno-Echo.cpp ****             if(!width_pickup)  //not picked up
1303:Veno-Echo.cpp ****             {
1304:Veno-Echo.cpp ****                 if(abs(width_Pot - width_new) > pickupTolerance)  //checked if changed from new val
1305:Veno-Echo.cpp ****                 {
1306:Veno-Echo.cpp ****                     width_pickup = true;   //set to picked up
1307:Veno-Echo.cpp ****                 }
1308:Veno-Echo.cpp ****             }
1309:Veno-Echo.cpp **** 
1310:Veno-Echo.cpp ****         }
1311:Veno-Echo.cpp **** 
1312:Veno-Echo.cpp ****         float widthTarget{};
1313:Veno-Echo.cpp **** 
1314:Veno-Echo.cpp ****         if(width_pickup)
1315:Veno-Echo.cpp ****         {
1316:Veno-Echo.cpp ****             widthTarget = scale(PotCVCombo(width_Pot,width_CV),0.5f,0.0f,LINEAR);
1317:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
1318:Veno-Echo.cpp ****         }
1319:Veno-Echo.cpp **** 
1320:Veno-Echo.cpp ****         else
1321:Veno-Echo.cpp ****         {        
1322:Veno-Echo.cpp ****             widthTarget = scale(PotCVCombo(width_Last,width_CV),0.5f,0.0f,LINEAR);
1323:Veno-Echo.cpp ****         }
1324:Veno-Echo.cpp ****             
1325:Veno-Echo.cpp ****             fonepole(width,widthTarget,0.032f);
1326:Veno-Echo.cpp ****             WidthXfade.SetPos(width);
1327:Veno-Echo.cpp ****     }
1328:Veno-Echo.cpp **** 
1329:Veno-Echo.cpp ****     else    //alternate controls
1330:Veno-Echo.cpp ****     {
1331:Veno-Echo.cpp ****         static float ModDepth_new{};
1332:Veno-Echo.cpp **** 
1333:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1334:Veno-Echo.cpp ****         {
1335:Veno-Echo.cpp ****             lastShift = shift;
1336:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
1337:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
1338:Veno-Echo.cpp ****         }
1339:Veno-Echo.cpp **** 
1340:Veno-Echo.cpp ****         else    //not a recent shift change
1341:Veno-Echo.cpp ****         {
1342:Veno-Echo.cpp ****             if(!ModDepth_pickup) //not picked up
1343:Veno-Echo.cpp ****             {
1344:Veno-Echo.cpp ****                 if(abs(width_Pot - ModDepth_new) > pickupTolerance)
1345:Veno-Echo.cpp ****                 {
1346:Veno-Echo.cpp ****                     ModDepth_pickup = true;   //set picked up
1347:Veno-Echo.cpp ****                 }
1348:Veno-Echo.cpp ****             }
1349:Veno-Echo.cpp ****         }
1350:Veno-Echo.cpp **** 
1351:Veno-Echo.cpp ****         if(ModDepth_pickup)
1352:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 62


1353:Veno-Echo.cpp ****             ModDepth = scale(width_Pot,minModDepth,maxModDepth,LINEAR); 
1354:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
1355:Veno-Echo.cpp ****         }
1356:Veno-Echo.cpp ****     }
1357:Veno-Echo.cpp **** }
1358:Veno-Echo.cpp **** 
1359:Veno-Echo.cpp **** void Update_crossfeedback()
1360:Veno-Echo.cpp **** {
1361:Veno-Echo.cpp ****     static bool lastShift{};
1362:Veno-Echo.cpp ****     static bool crossfeedback_pickup{};
1363:Veno-Echo.cpp ****     static bool modRate_pickup{};
1364:Veno-Echo.cpp **** 
1365:Veno-Echo.cpp ****     static float crossfeedback_Last{};
1366:Veno-Echo.cpp **** 
1367:Veno-Echo.cpp ****     //get pot values:
1368:Veno-Echo.cpp ****     float crossfeedback_Pot{hw.adc.GetMuxFloat(7,0)};
1369:Veno-Echo.cpp **** 
1370:Veno-Echo.cpp ****     if (!shift) //default controls
1371:Veno-Echo.cpp ****     {   
1372:Veno-Echo.cpp ****         static float crossfeedback_new{};
1373:Veno-Echo.cpp ****         //update pickup
1374:Veno-Echo.cpp ****         if (shift != lastShift)
1375:Veno-Echo.cpp ****         {
1376:Veno-Echo.cpp ****             lastShift = shift;
1377:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
1378:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
1379:Veno-Echo.cpp ****         }
1380:Veno-Echo.cpp **** 
1381:Veno-Echo.cpp ****         else
1382:Veno-Echo.cpp ****         {
1383:Veno-Echo.cpp ****             if(!crossfeedback_pickup)  //not picked up
1384:Veno-Echo.cpp ****             {
1385:Veno-Echo.cpp ****                 if(abs(crossfeedback_Pot - crossfeedback_new) > pickupTolerance)  //checked if chan
1386:Veno-Echo.cpp ****                 {
1387:Veno-Echo.cpp ****                     crossfeedback_pickup = true;   //set to picked up
1388:Veno-Echo.cpp ****                 }
1389:Veno-Echo.cpp ****             }
1390:Veno-Echo.cpp ****         }
1391:Veno-Echo.cpp ****         float crossfeedbackTarget{};
1392:Veno-Echo.cpp **** 
1393:Veno-Echo.cpp ****         if(crossfeedback_pickup)
1394:Veno-Echo.cpp ****         {
1395:Veno-Echo.cpp ****             crossfeedbackTarget = scale(crossfeedback_Pot,0.0,1.0,LINEAR);
1396:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
1397:Veno-Echo.cpp ****         }
1398:Veno-Echo.cpp **** 
1399:Veno-Echo.cpp ****         else
1400:Veno-Echo.cpp ****         {
1401:Veno-Echo.cpp ****             crossfeedbackTarget = scale(crossfeedback_Last,0.0,1.0,LINEAR);
1402:Veno-Echo.cpp ****         }
1403:Veno-Echo.cpp **** 
1404:Veno-Echo.cpp ****         fonepole(crossfeedback,crossfeedbackTarget,0.032f);
1405:Veno-Echo.cpp ****     }
1406:Veno-Echo.cpp ****     else    //alternate controls
1407:Veno-Echo.cpp ****     {
1408:Veno-Echo.cpp ****         static float modRate_new{};
1409:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 63


1410:Veno-Echo.cpp ****         if (shift != lastShift)
1411:Veno-Echo.cpp ****         {
1412:Veno-Echo.cpp ****             lastShift = shift;
1413:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
1414:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
1415:Veno-Echo.cpp ****         }
1416:Veno-Echo.cpp **** 
1417:Veno-Echo.cpp ****         else
1418:Veno-Echo.cpp ****         {
1419:Veno-Echo.cpp ****             if(!modRate_pickup)
1420:Veno-Echo.cpp ****             {
1421:Veno-Echo.cpp ****                 if(abs(crossfeedback_Pot - modRate_new) > pickupTolerance)
1422:Veno-Echo.cpp ****                 {
1423:Veno-Echo.cpp ****                     modRate_pickup = true; //set picked up
1424:Veno-Echo.cpp ****                 }
1425:Veno-Echo.cpp ****             }
1426:Veno-Echo.cpp ****         }
1427:Veno-Echo.cpp **** 
1428:Veno-Echo.cpp ****         if(modRate_pickup)
1429:Veno-Echo.cpp ****         {
1430:Veno-Echo.cpp ****             float modRate{scale(crossfeedback_Pot,minModRate,maxModRate,LINEAR)};
1431:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
1432:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
1433:Veno-Echo.cpp ****         }
1434:Veno-Echo.cpp ****     }
1435:Veno-Echo.cpp **** }
1436:Veno-Echo.cpp **** 
1437:Veno-Echo.cpp **** void Update_filterXfade()
1438:Veno-Echo.cpp **** {
1439:Veno-Echo.cpp ****     static bool lastShift{};
1440:Veno-Echo.cpp ****     static bool filterXfade_pickup{};
1441:Veno-Echo.cpp ****     static bool PostFilters_pickup{};
1442:Veno-Echo.cpp **** 
1443:Veno-Echo.cpp ****     static float filterXfade_last{};
1444:Veno-Echo.cpp **** 
1445:Veno-Echo.cpp ****     //get pot values:
1446:Veno-Echo.cpp ****     float filterXfade_Pot{hw.adc.GetMuxFloat(7,3)};
1447:Veno-Echo.cpp **** 
1448:Veno-Echo.cpp ****     if (!shift) //default controls
1449:Veno-Echo.cpp ****     {   
1450:Veno-Echo.cpp ****         static float filterXfade_new{};
1451:Veno-Echo.cpp ****         //update pickup
1452:Veno-Echo.cpp ****         if (shift != lastShift)
1453:Veno-Echo.cpp ****         {
1454:Veno-Echo.cpp ****             lastShift = shift;
1455:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
1456:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
1457:Veno-Echo.cpp ****         }
1458:Veno-Echo.cpp **** 
1459:Veno-Echo.cpp ****         else
1460:Veno-Echo.cpp ****         {
1461:Veno-Echo.cpp ****             if(!filterXfade_pickup)  //not picked up
1462:Veno-Echo.cpp ****             {
1463:Veno-Echo.cpp ****                 if(abs(filterXfade_Pot - filterXfade_new) > pickupTolerance)  //checked if changed 
1464:Veno-Echo.cpp ****                 {
1465:Veno-Echo.cpp ****                     filterXfade_pickup = true;   //set to picked up
1466:Veno-Echo.cpp ****                 }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 64


1467:Veno-Echo.cpp ****             }
1468:Veno-Echo.cpp ****         }
1469:Veno-Echo.cpp **** 
1470:Veno-Echo.cpp ****         float filterXfadeTarget{};
1471:Veno-Echo.cpp **** 
1472:Veno-Echo.cpp ****         if(filterXfade_pickup)
1473:Veno-Echo.cpp ****         {
1474:Veno-Echo.cpp ****             filterXfadeTarget = scale(filterXfade_Pot,0.0,1.0,EXPONENTIAL);
1475:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
1476:Veno-Echo.cpp ****         }
1477:Veno-Echo.cpp **** 
1478:Veno-Echo.cpp ****         else
1479:Veno-Echo.cpp ****         {
1480:Veno-Echo.cpp ****             filterXfadeTarget = scale(filterXfade_last,0.0,1.0,EXPONENTIAL);
1481:Veno-Echo.cpp ****         }
1482:Veno-Echo.cpp **** 
1483:Veno-Echo.cpp ****         fonepole(filterXfade,filterXfadeTarget,0.032f);
1484:Veno-Echo.cpp ****     }
1485:Veno-Echo.cpp ****     else    //alternate controls
1486:Veno-Echo.cpp ****     {
1487:Veno-Echo.cpp **** 
1488:Veno-Echo.cpp ****         static float PostFilters_new{};
1489:Veno-Echo.cpp **** 
1490:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1491:Veno-Echo.cpp ****         {
1492:Veno-Echo.cpp ****             lastShift = shift;
1493:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
1494:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
1495:Veno-Echo.cpp ****         }
1496:Veno-Echo.cpp **** 
1497:Veno-Echo.cpp ****         else    //not a recent shift change
1498:Veno-Echo.cpp ****         {
1499:Veno-Echo.cpp ****             if(!PostFilters_pickup) //not picked up
1500:Veno-Echo.cpp ****             {
1501:Veno-Echo.cpp ****                 if(abs(filterXfade_Pot - PostFilters_new) > pickupTolerance)
1502:Veno-Echo.cpp ****                 {
1503:Veno-Echo.cpp ****                     PostFilters_pickup = true;   //set picked up
1504:Veno-Echo.cpp ****                 }
1505:Veno-Echo.cpp ****             }
1506:Veno-Echo.cpp ****         }
1507:Veno-Echo.cpp ****         
1508:Veno-Echo.cpp ****         if(PostFilters_pickup)
1509:Veno-Echo.cpp ****         {
1510:Veno-Echo.cpp ****             if(filterXfade_Pot < 0.45f)
1511:Veno-Echo.cpp ****             {
1512:Veno-Echo.cpp ****                 PostFilters = false;
1513:Veno-Echo.cpp ****             }
1514:Veno-Echo.cpp ****             else if(filterXfade_Pot > 0.55f)
1515:Veno-Echo.cpp ****             {
1516:Veno-Echo.cpp ****                 PostFilters = true;
1517:Veno-Echo.cpp ****             }
1518:Veno-Echo.cpp ****             else
1519:Veno-Echo.cpp ****             {
1520:Veno-Echo.cpp ****               //do nothing
1521:Veno-Echo.cpp ****             }
1522:Veno-Echo.cpp ****             AltControls.FilterPrePost = filterXfade_Pot;
1523:Veno-Echo.cpp ****         }  
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 65


1524:Veno-Echo.cpp ****     }
1525:Veno-Echo.cpp **** }
1526:Veno-Echo.cpp **** 
1527:Veno-Echo.cpp **** void GetModCV()
1528:Veno-Echo.cpp **** {
1529:Veno-Echo.cpp ****     //get modulation CV input
1530:Veno-Echo.cpp ****     modulation_CV_Raw = scale(hw.adc.GetFloat(6),-1.0f * maxModAmp,maxModAmp,LINEAR);
1531:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
1532:Veno-Echo.cpp **** }
1533:Veno-Echo.cpp **** 
1534:Veno-Echo.cpp **** void Update_Mod()
1535:Veno-Echo.cpp **** {    
1536:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
1537:Veno-Echo.cpp ****     static float modulation_CV{};
1538:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
1539:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
1540:Veno-Echo.cpp ****     //calculate InternalMod
1541:Veno-Echo.cpp ****     float internalmod{lfo.Process() * ModDepth_Filtered};
1542:Veno-Echo.cpp ****     //apply modulation to delay lines
1543:Veno-Echo.cpp ****     delayL.SetModulation(modulation_CV + internalmod);
1544:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
1545:Veno-Echo.cpp **** }
1546:Veno-Echo.cpp **** 
1547:Veno-Echo.cpp **** void UpdateClock()
1548:Veno-Echo.cpp **** {
1549:Veno-Echo.cpp ****     static int divCounter{};
1550:Veno-Echo.cpp ****     ClockIn.Debounce();
1551:Veno-Echo.cpp **** 
1552:Veno-Echo.cpp ****     //if clock in pulse received
1553:Veno-Echo.cpp ****     if (ClockIn.RisingEdge())    
1554:Veno-Echo.cpp ****     {   
1555:Veno-Echo.cpp ****         divCounter = (divCounter + 1) % PPQN;
1556:Veno-Echo.cpp ****         //tempoLED_BASE.resetPhase();
1557:Veno-Echo.cpp ****         if(divCounter == 0)
1558:Veno-Echo.cpp ****         {
1559:Veno-Echo.cpp ****             if(BaseTempo.tap()) //if valid tap resistered
1560:Veno-Echo.cpp ****             {
1561:Veno-Echo.cpp ****                 tempoLED_BASE.setTempo(BaseTempo.getTapFreq()); //set new base freq
1562:Veno-Echo.cpp ****             }
1563:Veno-Echo.cpp ****         }
1564:Veno-Echo.cpp ****     }
1565:Veno-Echo.cpp ****     
1566:Veno-Echo.cpp **** }
1567:Veno-Echo.cpp **** 
1568:Veno-Echo.cpp **** void Update_Buttons()
1569:Veno-Echo.cpp **** {  
1570:Veno-Echo.cpp ****     static uint32_t shiftTime{};
1571:Veno-Echo.cpp ****     static uint32_t resetTime{};
1572:Veno-Echo.cpp ****     static int buttonstate{};
1573:Veno-Echo.cpp **** 
1574:Veno-Echo.cpp ****     Rev_L_sw.update();
1575:Veno-Echo.cpp ****     Rev_R_sw.update();
1576:Veno-Echo.cpp ****     LPF_sw.update();
1577:Veno-Echo.cpp ****     HPF_sw.update();
1578:Veno-Echo.cpp ****     Tap_Button.update();
1579:Veno-Echo.cpp **** 
1580:Veno-Echo.cpp ****     ReverseGateL.Debounce();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 66


1581:Veno-Echo.cpp ****     ReverseGateR.Debounce();
1582:Veno-Echo.cpp ****     //TapButton.Debounce();
1583:Veno-Echo.cpp ****     Sync.Debounce();
1584:Veno-Echo.cpp ****     ClockIn.Debounce();
1585:Veno-Echo.cpp ****     //gate inputs
1586:Veno-Echo.cpp ****     if (ReverseGateL.RisingEdge())
1587:Veno-Echo.cpp ****     {
1588:Veno-Echo.cpp ****         Rev_L_sw.toggle();
1589:Veno-Echo.cpp ****         //resetTime = System::GetNow();
1590:Veno-Echo.cpp ****     }
1591:Veno-Echo.cpp **** 
1592:Veno-Echo.cpp ****     if (ReverseGateR.RisingEdge())
1593:Veno-Echo.cpp ****     {
1594:Veno-Echo.cpp ****         Rev_R_sw.toggle();
1595:Veno-Echo.cpp ****         //resetTime = System::GetNow();
1596:Veno-Echo.cpp ****     }
1597:Veno-Echo.cpp **** 
1598:Veno-Echo.cpp ****     //buttons
1599:Veno-Echo.cpp **** 
1600:Veno-Echo.cpp ****     if (Rev_L_sw.RisingEdge())
1601:Veno-Echo.cpp ****     {
1602:Veno-Echo.cpp ****         buttonstate += 1;
1603:Veno-Echo.cpp ****         if (buttonstate == 3)
1604:Veno-Echo.cpp ****         {
1605:Veno-Echo.cpp ****             resetTime = System::GetNow();
1606:Veno-Echo.cpp ****         }
1607:Veno-Echo.cpp ****     }
1608:Veno-Echo.cpp **** 
1609:Veno-Echo.cpp ****     if (Rev_L_sw.FallingEdge())
1610:Veno-Echo.cpp ****     {
1611:Veno-Echo.cpp ****         buttonstate -= 1;
1612:Veno-Echo.cpp ****     }
1613:Veno-Echo.cpp **** 
1614:Veno-Echo.cpp ****     if (Rev_R_sw.RisingEdge())
1615:Veno-Echo.cpp ****     {
1616:Veno-Echo.cpp ****         buttonstate += 1;
1617:Veno-Echo.cpp ****         if (buttonstate == 3)
1618:Veno-Echo.cpp ****         {
1619:Veno-Echo.cpp ****             resetTime = System::GetNow();
1620:Veno-Echo.cpp ****         }
1621:Veno-Echo.cpp ****     }
1622:Veno-Echo.cpp **** 
1623:Veno-Echo.cpp ****     if (Rev_R_sw.FallingEdge())
1624:Veno-Echo.cpp ****     {
1625:Veno-Echo.cpp ****         buttonstate -= 1;
1626:Veno-Echo.cpp ****     }
1627:Veno-Echo.cpp **** 
1628:Veno-Echo.cpp ****     if (Tap_Button.RisingEdge())    
1629:Veno-Echo.cpp ****     {
1630:Veno-Echo.cpp ****         if(BaseTempo.tap()) //if tempo changed
1631:Veno-Echo.cpp ****         {
1632:Veno-Echo.cpp ****             tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1633:Veno-Echo.cpp ****         }
1634:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
1635:Veno-Echo.cpp ****         
1636:Veno-Echo.cpp **** 
1637:Veno-Echo.cpp ****         shiftTime = System::GetNow();   //reset shift timer
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 67


1638:Veno-Echo.cpp ****         buttonstate += 1;
1639:Veno-Echo.cpp ****         
1640:Veno-Echo.cpp ****         if (buttonstate == 3)
1641:Veno-Echo.cpp ****         {
1642:Veno-Echo.cpp ****             resetTime = System::GetNow();
1643:Veno-Echo.cpp ****         }
1644:Veno-Echo.cpp **** 
1645:Veno-Echo.cpp ****     }
1646:Veno-Echo.cpp **** 
1647:Veno-Echo.cpp ****     if (Tap_Button.FallingEdge())    //when button is let go shift is off
1648:Veno-Echo.cpp ****     {
1649:Veno-Echo.cpp ****         shift = false;
1650:Veno-Echo.cpp ****         buttonstate -= 1;
1651:Veno-Echo.cpp ****         mute = false;
1652:Veno-Echo.cpp ****     }
1653:Veno-Echo.cpp **** 
1654:Veno-Echo.cpp ****     if (Tap_Button.getState())
1655:Veno-Echo.cpp ****     {
1656:Veno-Echo.cpp ****         if ( (System::GetNow() - shiftTime) > shiftWait)
1657:Veno-Echo.cpp ****         {
1658:Veno-Echo.cpp ****             shift = true;   //turn on shift if button held for longer than shiftWait
1659:Veno-Echo.cpp ****         } 
1660:Veno-Echo.cpp ****     }
1661:Veno-Echo.cpp **** 
1662:Veno-Echo.cpp ****     if (buttonstate == 3) //all buttons held
1663:Veno-Echo.cpp ****     {
1664:Veno-Echo.cpp **** 
1665:Veno-Echo.cpp ****             if( ((System::GetNow() - resetTime) > resetWait) )
1666:Veno-Echo.cpp ****             {
1667:Veno-Echo.cpp ****                 Rev_L_sw.toggle();
1668:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
1669:Veno-Echo.cpp ****                 ResetAllLEDs();
1670:Veno-Echo.cpp ****                 //don't let reset or shift update
1671:Veno-Echo.cpp ****                 shift = false;
1672:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
1673:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
1674:Veno-Echo.cpp ****                 resetTime = System::GetNow();
1675:Veno-Echo.cpp ****             }
1676:Veno-Echo.cpp ****     } 
1677:Veno-Echo.cpp **** 
1678:Veno-Echo.cpp ****     syncMode = Sync.Pressed() ? true : false;
1679:Veno-Echo.cpp **** 
1680:Veno-Echo.cpp ****     //update syncMode
1681:Veno-Echo.cpp ****     //delayL.SetSync(syncMode);
1682:Veno-Echo.cpp ****     //delayR.SetSync(syncMode);
1683:Veno-Echo.cpp **** }
1684:Veno-Echo.cpp **** 
1685:Veno-Echo.cpp **** void Update_DelayBaseTempo()
1686:Veno-Echo.cpp **** {
1687:Veno-Echo.cpp ****     delayL.SetBaseTempo(BaseTempo.getTapLength());
1688:Veno-Echo.cpp ****     delayR.SetBaseTempo(BaseTempo.getTapLength());
1689:Veno-Echo.cpp ****     DELAYL_DEBUG = delayL.GetDelayTime();
1690:Veno-Echo.cpp ****     DELAYR_DEBUG = delayR.GetDelayTime();
1691:Veno-Echo.cpp **** }
1692:Veno-Echo.cpp **** 
1693:Veno-Echo.cpp **** void Update_DelayTempoLEDs()
1694:Veno-Echo.cpp **** {    
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 68


1695:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
1696:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
1697:Veno-Echo.cpp **** }
1698:Veno-Echo.cpp **** 
1699:Veno-Echo.cpp **** void Update_BaseTempoLED()
1700:Veno-Echo.cpp **** {
1701:Veno-Echo.cpp ****     tempoLED_BASE.update();
1702:Veno-Echo.cpp **** 
1703:Veno-Echo.cpp ****     static int phaseCounter{};
1704:Veno-Echo.cpp **** 
1705:Veno-Echo.cpp ****     if(tempoLED_BASE.isEOC())
1706:Veno-Echo.cpp ****     {
1707:Veno-Echo.cpp ****         phaseCounter = (phaseCounter + 1) % 6;
1708:Veno-Echo.cpp ****     }
1709:Veno-Echo.cpp **** 
1710:Veno-Echo.cpp ****     float dividedPhase{(tempoLED_BASE.GetPhase() / 6) + ( (TWOPI_F / 6) * phaseCounter ) };
1711:Veno-Echo.cpp ****     //update base phase for both delay lines
1712:Veno-Echo.cpp ****     delayL.SetBasePhase( dividedPhase );
1713:Veno-Echo.cpp ****     delayR.SetBasePhase( dividedPhase );
1714:Veno-Echo.cpp **** }
1715:Veno-Echo.cpp **** 
1716:Veno-Echo.cpp **** 
1717:Veno-Echo.cpp **** void ApplySettings(const Settings &setting)
1718:Veno-Echo.cpp **** {
1719:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
1720:Veno-Echo.cpp ****     {
1721:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(setting.RevLength);
1722:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
1723:Veno-Echo.cpp ****     }
1724:Veno-Echo.cpp ****     else
1725:Veno-Echo.cpp ****     {
1726:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(defaultAltControls.RevLength);
1727:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
1728:Veno-Echo.cpp ****     }
1729:Veno-Echo.cpp **** 
1730:Veno-Echo.cpp ****     if((setting.tapRatio >= 1.0f) && (setting.tapRatio <= 3.0f ))
1731:Veno-Echo.cpp ****     {
1732:Veno-Echo.cpp ****         BaseTempo.setTapRatio(setting.tapRatio);
1733:Veno-Echo.cpp ****     }
1734:Veno-Echo.cpp ****     else
1735:Veno-Echo.cpp ****     {
1736:Veno-Echo.cpp ****         BaseTempo.setTapRatio(defaultAltControls.tapRatio);
1737:Veno-Echo.cpp ****     }
1738:Veno-Echo.cpp **** 
1739:Veno-Echo.cpp ****     if((setting.ModDepth >= minModDepth) && (setting.ModDepth <= maxModDepth))
1740:Veno-Echo.cpp ****     {
1741:Veno-Echo.cpp ****         ModDepth = setting.ModDepth;
1742:Veno-Echo.cpp ****     }
1743:Veno-Echo.cpp ****     else
1744:Veno-Echo.cpp ****     {
1745:Veno-Echo.cpp ****         ModDepth = defaultAltControls.ModDepth;
1746:Veno-Echo.cpp ****     }
1747:Veno-Echo.cpp **** 
1748:Veno-Echo.cpp ****     if((setting.ModFreq >= minModRate) && (setting.ModFreq <= maxModRate))
1749:Veno-Echo.cpp ****     {
1750:Veno-Echo.cpp ****         lfo.SetFreq(setting.ModFreq);
1751:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 69


1752:Veno-Echo.cpp ****     else
1753:Veno-Echo.cpp ****     {
1754:Veno-Echo.cpp ****         lfo.SetFreq(defaultAltControls.ModFreq);
1755:Veno-Echo.cpp ****     }
1756:Veno-Echo.cpp **** 
1757:Veno-Echo.cpp ****     if((setting.LP_Cutoff >= minLPCut) && (setting.LP_Cutoff <= maxLPCut))
1758:Veno-Echo.cpp ****     {
1759:Veno-Echo.cpp ****         LPF_L.SetFreq(setting.LP_Cutoff);
1760:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
1761:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
1762:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
1763:Veno-Echo.cpp ****     }
1764:Veno-Echo.cpp ****     else
1765:Veno-Echo.cpp ****     {
1766:Veno-Echo.cpp ****         LPF_L.SetFreq(defaultAltControls.LP_Cutoff);
1767:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
1768:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
1769:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
1770:Veno-Echo.cpp ****     }
1771:Veno-Echo.cpp ****     
1772:Veno-Echo.cpp ****     if((setting.HP_Cutoff >= minHPCut) && (setting.HP_Cutoff <= maxHPCut))
1773:Veno-Echo.cpp ****     {
1774:Veno-Echo.cpp ****         HPF_L.SetFreq(setting.HP_Cutoff);
1775:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
1776:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
1777:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
1778:Veno-Echo.cpp ****     }
1779:Veno-Echo.cpp ****     else
1780:Veno-Echo.cpp ****     {
1781:Veno-Echo.cpp ****         HPF_L.SetFreq(defaultAltControls.HP_Cutoff);
1782:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
1783:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
1784:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
1785:Veno-Echo.cpp **** 
1786:Veno-Echo.cpp ****     }
1787:Veno-Echo.cpp **** 
1788:Veno-Echo.cpp ****     if((setting.Resonance >= minRes) && (setting.Resonance <= maxRes))
1789:Veno-Echo.cpp ****     {
1790:Veno-Echo.cpp ****         LPF_L.SetRes(setting.Resonance);
1791:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
1792:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
1793:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
1794:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
1795:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
1796:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
1797:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
1798:Veno-Echo.cpp ****     }
1799:Veno-Echo.cpp **** 
1800:Veno-Echo.cpp ****     else
1801:Veno-Echo.cpp ****     {
1802:Veno-Echo.cpp ****         LPF_L_post.SetRes(defaultAltControls.Resonance);
1803:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
1804:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
1805:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
1806:Veno-Echo.cpp ****     }
1807:Veno-Echo.cpp **** 
1808:Veno-Echo.cpp ****     if(setting.FilterPrePost < 0.45f)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 70


1809:Veno-Echo.cpp ****     {
1810:Veno-Echo.cpp ****         PostFilters = false;
1811:Veno-Echo.cpp ****     }
1812:Veno-Echo.cpp ****         else if(setting.FilterPrePost > 0.55f)
1813:Veno-Echo.cpp ****     {
1814:Veno-Echo.cpp ****         PostFilters = true;
1815:Veno-Echo.cpp ****     }
1816:Veno-Echo.cpp ****     else
1817:Veno-Echo.cpp ****     {
1818:Veno-Echo.cpp ****         PostFilters = false;    //default to pre filter
1819:Veno-Echo.cpp ****     }
1820:Veno-Echo.cpp **** 
1821:Veno-Echo.cpp **** }
1822:Veno-Echo.cpp **** 
1823:Veno-Echo.cpp **** void TurnOnAllLEDs()
1824:Veno-Echo.cpp **** {
1825:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
1826:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
1827:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
1828:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
1829:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
1830:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
1831:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
1832:Veno-Echo.cpp **** }
1833:Veno-Echo.cpp **** 
1834:Veno-Echo.cpp **** void ResetAllLEDs()
1835:Veno-Echo.cpp **** {
1836:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
1837:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
1838:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
1839:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
1840:Veno-Echo.cpp ****     {
1841:Veno-Echo.cpp ****         Rev_L_sw.LED_set(0.0f);
1842:Veno-Echo.cpp ****     }
1843:Veno-Echo.cpp ****     else
1844:Veno-Echo.cpp ****     {
1845:Veno-Echo.cpp ****        Rev_L_sw.LED_set(1.0f);
1846:Veno-Echo.cpp ****     }
1847:Veno-Echo.cpp **** 
1848:Veno-Echo.cpp ****     if(!Rev_R_sw.getState())
1849:Veno-Echo.cpp ****     {
1850:Veno-Echo.cpp ****         Rev_R_sw.LED_set(0.0f);
1851:Veno-Echo.cpp ****     }
1852:Veno-Echo.cpp ****     else
1853:Veno-Echo.cpp ****     {
1854:Veno-Echo.cpp ****         Rev_R_sw.LED_set(1.0f);
1855:Veno-Echo.cpp ****     }
1856:Veno-Echo.cpp ****     
1857:Veno-Echo.cpp ****     LPF_sw.LED_set(0.0f);
1858:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
1859:Veno-Echo.cpp **** }
1860:Veno-Echo.cpp **** 
1861:Veno-Echo.cpp **** float HardLimit(float input, float limit)
1862:Veno-Echo.cpp **** {
1863:Veno-Echo.cpp ****     float returnval{};
1864:Veno-Echo.cpp ****     if (input > limit)
1865:Veno-Echo.cpp ****         returnval = limit;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 71


1866:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
1867:Veno-Echo.cpp ****         returnval = limit * -1.0f;
1868:Veno-Echo.cpp ****     else
1869:Veno-Echo.cpp ****         returnval = input;
1870:Veno-Echo.cpp **** 
1871:Veno-Echo.cpp ****     return returnval;   
1872:Veno-Echo.cpp **** }
1873:Veno-Echo.cpp **** 
1874:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 1143              		.loc 20 1874 7 view .LVU239
 1144              	.LBB904:
1875:Veno-Echo.cpp **** {
1876:Veno-Echo.cpp ****     float output{};
 1145              		.loc 20 1876 5 view .LVU240
1877:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1146              		.loc 20 1877 5 view .LVU241
 1147              	.LBE904:
 1148              	.LBE903:
 837:Veno-Echo.cpp ****         }
 1149              		.loc 20 837 36 is_stmt 0 view .LVU242
 1150 0042 6B49     		ldr	r1, .L75+28
 1151              	.LBB908:
 1152              	.LBB905:
 1153              		.loc 20 1877 39 view .LVU243
 1154 0044 F7EE006A 		vmov.f32	s13, #1.0e+0
 1155              		.loc 20 1877 49 view .LVU244
 1156 0048 F6EE005A 		vmov.f32	s11, #5.0e-1
 1157              	.LBE905:
 1158              	.LBE908:
 837:Veno-Echo.cpp ****         }
 1159              		.loc 20 837 36 view .LVU245
 1160 004c 694A     		ldr	r2, .L75+32
 1161              	.LBB909:
 1162              	.LBB906:
 1163              		.loc 20 1877 39 view .LVU246
 1164 004e 91ED007A 		vldr.32	s14, [r1]
 1165              		.loc 20 1877 12 view .LVU247
 1166 0052 B0EE006A 		vmov.f32	s12, #2.0e+0
 1167 0056 D2ED007A 		vldr.32	s15, [r2]
 1168              		.loc 20 1877 39 view .LVU248
 1169 005a 36EEC77A 		vsub.f32	s14, s13, s14
 1170              		.loc 20 1877 49 view .LVU249
 1171 005e 37EE657A 		vsub.f32	s14, s14, s11
 1172              		.loc 20 1877 12 view .LVU250
 1173 0062 E7EE067A 		vfma.f32	s15, s14, s12
 1174              	.LVL43:
1878:Veno-Echo.cpp **** 
1879:Veno-Echo.cpp ****     if(output < 0.0f)
 1175              		.loc 20 1879 5 is_stmt 1 view .LVU251
 1176 0066 F5EEC07A 		vcmpe.f32	s15, #0
 1177 006a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1178 006e 00F1AA80 		bmi	.L73
1880:Veno-Echo.cpp ****     {
1881:Veno-Echo.cpp ****         output = 0.0f;
1882:Veno-Echo.cpp ****     }
1883:Veno-Echo.cpp **** 
1884:Veno-Echo.cpp ****     if(output > 1.0f)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 72


 1179              		.loc 20 1884 5 view .LVU252
1885:Veno-Echo.cpp ****     {
1886:Veno-Echo.cpp ****         output = 1.0f;
 1180              		.loc 20 1886 16 is_stmt 0 view .LVU253
 1181 0072 F4EE667A 		vcmp.f32	s15, s13
 1182 0076 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1183 007a 76FEA77A 		vselgt.f32	s15, s13, s15
 1184              	.LVL44:
 1185              	.L50:
 1186              		.loc 20 1886 16 view .LVU254
 1187              	.LBE906:
 1188              	.LBE909:
 840:Veno-Echo.cpp ****         {
 1189              		.loc 20 840 9 is_stmt 1 view .LVU255
 1190 007e 93B9     		cbnz	r3, .L42
 842:Veno-Echo.cpp ****             {
 1191              		.loc 20 842 13 view .LVU256
 842:Veno-Echo.cpp ****             {
 1192              		.loc 20 842 35 is_stmt 0 view .LVU257
 1193 0080 5D4B     		ldr	r3, .L75+36
 1194 0082 B0EE670A 		vmov.f32	s0, s15
 1195              	.LVL45:
 842:Veno-Echo.cpp ****             {
 1196              		.loc 20 842 35 view .LVU258
 1197 0086 5D48     		ldr	r0, .L75+40
 1198 0088 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1199              	.LBE921:
 1200              	.LBE967:
 881:Veno-Echo.cpp **** 
 1201              		.loc 20 881 1 view .LVU259
 1202 008a BDE81040 		pop	{r4, lr}
 1203              		.cfi_remember_state
 1204              		.cfi_restore 14
 1205              		.cfi_restore 4
 1206              		.cfi_def_cfa_offset 0
 1207              	.LBB968:
 1208              	.LBB922:
 842:Veno-Echo.cpp ****             {
 1209              		.loc 20 842 35 view .LVU260
 1210 008e FFF7FEBF 		b	_ZN10DelayMulti12SetDelayTimeEfb
 1211              	.LVL46:
 1212              	.L43:
 1213              		.cfi_restore_state
 842:Veno-Echo.cpp ****             {
 1214              		.loc 20 842 35 view .LVU261
 1215              	.LBE922:
 1216              	.LBB923:
 851:Veno-Echo.cpp **** 
 1217              		.loc 20 851 9 is_stmt 1 view .LVU262
 853:Veno-Echo.cpp ****         {
 1218              		.loc 20 853 9 view .LVU263
 1219 0092 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1220 0094 002B     		cmp	r3, #0
 1221 0096 3CD1     		bne	.L53
 855:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1222              		.loc 20 855 13 view .LVU264
 855:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 73


 1223              		.loc 20 855 23 is_stmt 0 view .LVU265
 1224 0098 0124     		movs	r4, #1
 856:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1225              		.loc 20 856 34 view .LVU266
 1226 009a 5948     		ldr	r0, .L75+44
 857:Veno-Echo.cpp ****         }
 1227              		.loc 20 857 31 view .LVU267
 1228 009c 5949     		ldr	r1, .L75+48
 855:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1229              		.loc 20 855 23 view .LVU268
 1230 009e 1470     		strb	r4, [r2]
 856:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1231              		.loc 20 856 13 is_stmt 1 view .LVU269
 856:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1232              		.loc 20 856 34 is_stmt 0 view .LVU270
 1233 00a0 0370     		strb	r3, [r0]
 857:Veno-Echo.cpp ****         }
 1234              		.loc 20 857 13 is_stmt 1 view .LVU271
 857:Veno-Echo.cpp ****         }
 1235              		.loc 20 857 31 is_stmt 0 view .LVU272
 1236 00a2 81ED000A 		vstr.32	s0, [r1]
 1237              	.L42:
 857:Veno-Echo.cpp ****         }
 1238              		.loc 20 857 31 view .LVU273
 1239              	.LBE923:
 1240              	.LBE968:
 881:Veno-Echo.cpp **** 
 1241              		.loc 20 881 1 view .LVU274
 1242 00a6 10BD     		pop	{r4, pc}
 1243              	.L44:
 1244              	.LBB969:
 1245              	.LBB962:
 818:Veno-Echo.cpp ****             {
 1246              		.loc 20 818 13 is_stmt 1 view .LVU275
 818:Veno-Echo.cpp ****             {
 1247              		.loc 20 818 16 is_stmt 0 view .LVU276
 1248 00a8 4F4A     		ldr	r2, .L75+20
 818:Veno-Echo.cpp ****             {
 1249              		.loc 20 818 13 view .LVU277
 1250 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1251 00ac 79B9     		cbnz	r1, .L46
 820:Veno-Echo.cpp ****                 {
 1252              		.loc 20 820 17 is_stmt 1 view .LVU278
 1253              	.LVL47:
 1254              	.LBB910:
 1255              	.LBI910:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1256              		.loc 21 75 3 view .LVU279
 1257              	.LBB911:
 1258              		.loc 21 76 5 view .LVU280
 1259              		.loc 21 76 5 is_stmt 0 view .LVU281
 1260              	.LBE911:
 1261              	.LBE910:
 820:Veno-Echo.cpp ****                 {
 1262              		.loc 20 820 23 view .LVU282
 1263 00ae 4F49     		ldr	r1, .L75+24
 820:Veno-Echo.cpp ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 74


 1264              		.loc 20 820 17 view .LVU283
 1265 00b0 9FED557A 		vldr.32	s14, .L75+52
 820:Veno-Echo.cpp ****                 {
 1266              		.loc 20 820 23 view .LVU284
 1267 00b4 D1ED007A 		vldr.32	s15, [r1]
 1268 00b8 70EE677A 		vsub.f32	s15, s0, s15
 1269              	.LBB913:
 1270              	.LBB912:
 1271              		.loc 21 76 31 view .LVU285
 1272 00bc F0EEE77A 		vabs.f32	s15, s15
 1273              	.LBE912:
 1274              	.LBE913:
 820:Veno-Echo.cpp ****                 {
 1275              		.loc 20 820 17 view .LVU286
 1276 00c0 F4EEC77A 		vcmpe.f32	s15, s14
 1277 00c4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1278 00c8 BBDD     		ble	.L45
 822:Veno-Echo.cpp ****                 }
 1279              		.loc 20 822 21 is_stmt 1 view .LVU287
 822:Veno-Echo.cpp ****                 }
 1280              		.loc 20 822 39 is_stmt 0 view .LVU288
 1281 00ca 0121     		movs	r1, #1
 1282 00cc 1170     		strb	r1, [r2]
 1283              	.L46:
 827:Veno-Echo.cpp **** 
 1284              		.loc 20 827 9 is_stmt 1 view .LVU289
 1285              	.LVL48:
 829:Veno-Echo.cpp ****         {
 1286              		.loc 20 829 9 view .LVU290
 831:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 1287              		.loc 20 831 13 view .LVU291
 1288              	.LBB914:
 1289              	.LBI914:
1874:Veno-Echo.cpp **** {
 1290              		.loc 20 1874 7 view .LVU292
 1291              	.LBB915:
1876:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1292              		.loc 20 1876 5 view .LVU293
1877:Veno-Echo.cpp **** 
 1293              		.loc 20 1877 5 view .LVU294
 1294              	.LBE915:
 1295              	.LBE914:
 831:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 1296              		.loc 20 831 36 is_stmt 0 view .LVU295
 1297 00ce 484A     		ldr	r2, .L75+28
 1298              	.LBB918:
 1299              	.LBB916:
1877:Veno-Echo.cpp **** 
 1300              		.loc 20 1877 39 view .LVU296
 1301 00d0 B7EE007A 		vmov.f32	s14, #1.0e+0
1877:Veno-Echo.cpp **** 
 1302              		.loc 20 1877 49 view .LVU297
 1303 00d4 B6EE006A 		vmov.f32	s12, #5.0e-1
1877:Veno-Echo.cpp **** 
 1304              		.loc 20 1877 39 view .LVU298
 1305 00d8 D2ED007A 		vldr.32	s15, [r2]
1877:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 75


 1306              		.loc 20 1877 12 view .LVU299
 1307 00dc F0EE006A 		vmov.f32	s13, #2.0e+0
1877:Veno-Echo.cpp **** 
 1308              		.loc 20 1877 39 view .LVU300
 1309 00e0 77EE677A 		vsub.f32	s15, s14, s15
1877:Veno-Echo.cpp **** 
 1310              		.loc 20 1877 49 view .LVU301
 1311 00e4 77EEC67A 		vsub.f32	s15, s15, s12
1877:Veno-Echo.cpp **** 
 1312              		.loc 20 1877 12 view .LVU302
 1313 00e8 B0EE406A 		vmov.f32	s12, s0
 1314 00ec A7EEA66A 		vfma.f32	s12, s15, s13
1879:Veno-Echo.cpp ****     {
 1315              		.loc 20 1879 5 view .LVU303
 1316 00f0 B5EEC06A 		vcmpe.f32	s12, #0
1877:Veno-Echo.cpp **** 
 1317              		.loc 20 1877 12 view .LVU304
 1318 00f4 F0EE467A 		vmov.f32	s15, s12
 1319              	.LVL49:
1879:Veno-Echo.cpp ****     {
 1320              		.loc 20 1879 5 is_stmt 1 view .LVU305
 1321 00f8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1322 00fc 66D4     		bmi	.L74
1884:Veno-Echo.cpp ****     {
 1323              		.loc 20 1884 5 view .LVU306
 1324              		.loc 20 1886 16 is_stmt 0 view .LVU307
 1325 00fe F4EE477A 		vcmp.f32	s15, s14
 1326 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1327 0106 77FE277A 		vselgt.f32	s15, s14, s15
 1328              	.L48:
 1329              	.LVL50:
1887:Veno-Echo.cpp ****     }
1888:Veno-Echo.cpp **** 
1889:Veno-Echo.cpp ****     return output;
 1330              		.loc 20 1889 5 is_stmt 1 view .LVU308
 1331              		.loc 20 1889 5 is_stmt 0 view .LVU309
 1332              	.LBE916:
 1333              	.LBE918:
 832:Veno-Echo.cpp ****         }
 1334              		.loc 20 832 13 is_stmt 1 view .LVU310
 832:Veno-Echo.cpp ****         }
 1335              		.loc 20 832 29 is_stmt 0 view .LVU311
 1336 010a 3A4A     		ldr	r2, .L75+32
 1337 010c 82ED000A 		vstr.32	s0, [r2]
 1338 0110 B5E7     		b	.L50
 1339              	.LVL51:
 1340              	.L53:
 832:Veno-Echo.cpp ****         }
 1341              		.loc 20 832 29 view .LVU312
 1342              	.LBE962:
 1343              	.LBB963:
 862:Veno-Echo.cpp ****             {
 1344              		.loc 20 862 13 is_stmt 1 view .LVU313
 862:Veno-Echo.cpp ****             {
 1345              		.loc 20 862 16 is_stmt 0 view .LVU314
 1346 0112 3B4B     		ldr	r3, .L75+44
 862:Veno-Echo.cpp ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 76


 1347              		.loc 20 862 13 view .LVU315
 1348 0114 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1349 0116 7AB9     		cbnz	r2, .L54
 864:Veno-Echo.cpp ****                 {
 1350              		.loc 20 864 17 is_stmt 1 view .LVU316
 1351              	.LVL52:
 1352              	.LBB924:
 1353              	.LBI924:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1354              		.loc 21 75 3 view .LVU317
 1355              	.LBB925:
 1356              		.loc 21 76 5 view .LVU318
 1357              		.loc 21 76 5 is_stmt 0 view .LVU319
 1358              	.LBE925:
 1359              	.LBE924:
 864:Veno-Echo.cpp ****                 {
 1360              		.loc 20 864 23 view .LVU320
 1361 0118 3A4A     		ldr	r2, .L75+48
 864:Veno-Echo.cpp ****                 {
 1362              		.loc 20 864 17 view .LVU321
 1363 011a 9FED3B7A 		vldr.32	s14, .L75+52
 864:Veno-Echo.cpp ****                 {
 1364              		.loc 20 864 23 view .LVU322
 1365 011e D2ED007A 		vldr.32	s15, [r2]
 1366 0122 70EE677A 		vsub.f32	s15, s0, s15
 1367              	.LBB927:
 1368              	.LBB926:
 1369              		.loc 21 76 31 view .LVU323
 1370 0126 F0EEE77A 		vabs.f32	s15, s15
 1371              	.LBE926:
 1372              	.LBE927:
 864:Veno-Echo.cpp ****                 {
 1373              		.loc 20 864 17 view .LVU324
 1374 012a F4EEC77A 		vcmpe.f32	s15, s14
 1375 012e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1376 0132 B8DD     		ble	.L42
 866:Veno-Echo.cpp ****                 }
 1377              		.loc 20 866 21 is_stmt 1 view .LVU325
 866:Veno-Echo.cpp ****                 }
 1378              		.loc 20 866 42 is_stmt 0 view .LVU326
 1379 0134 0122     		movs	r2, #1
 1380 0136 1A70     		strb	r2, [r3]
 1381              	.L54:
 871:Veno-Echo.cpp ****         {
 1382              		.loc 20 871 9 is_stmt 1 view .LVU327
 1383              	.LBB928:
 1384              	.LBB929:
 873:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 1385              		.loc 20 873 13 view .LVU328
 873:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 1386              		.loc 20 873 38 is_stmt 0 view .LVU329
 1387 0138 0120     		movs	r0, #1
 1388 013a 9FED341A 		vldr.32	s2, .L75+56
 1389 013e DFED340A 		vldr.32	s1, .L75+60
 1390 0142 FFF7FEFF 		bl	_Z5scalefff9CurveType
 1391              	.LVL53:
 1392              	.LBB930:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 77


 1393              	.LBB931:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1394              		.loc 20 70 28 view .LVU330
 1395 0146 334B     		ldr	r3, .L75+64
 1396              	.LVL54:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1397              		.loc 20 70 28 view .LVU331
 1398              	.LBE931:
 1399              	.LBE930:
 874:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 1400              		.loc 20 874 13 is_stmt 1 view .LVU332
 1401              	.LBB945:
 1402              	.LBI930:
  68:Veno-Echo.cpp ****     {
 1403              		.loc 20 68 10 view .LVU333
 1404              	.LBB943:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1405              		.loc 20 70 9 view .LVU334
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1406              		.loc 20 70 53 is_stmt 0 view .LVU335
 1407 0148 DFED2F6A 		vldr.32	s13, .L75+52
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1408              		.loc 20 70 28 view .LVU336
 1409 014c D3ED017A 		vldr.32	s15, [r3, #4]
 1410              	.LVL55:
 1411              	.LBB932:
 1412              	.LBI932:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1413              		.loc 21 75 3 is_stmt 1 view .LVU337
 1414              	.LBB933:
 1415              		.loc 21 76 5 view .LVU338
 1416              		.loc 21 76 5 is_stmt 0 view .LVU339
 1417              	.LBE933:
 1418              	.LBE932:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1419              		.loc 20 70 15 view .LVU340
 1420 0150 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1421              		.loc 20 70 53 view .LVU341
 1422 0154 67EEA67A 		vmul.f32	s15, s15, s13
 1423              	.LBB935:
 1424              	.LBB934:
 1425              		.loc 21 76 31 view .LVU342
 1426 0158 B0EEC77A 		vabs.f32	s14, s14
 1427              	.LBE934:
 1428              	.LBE935:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1429              		.loc 20 70 9 view .LVU343
 1430 015c B4EEE77A 		vcmpe.f32	s14, s15
 1431 0160 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1432 0164 0DDD     		ble	.L62
  74:Veno-Echo.cpp ****             //del -> Reset();
 1433              		.loc 20 74 29 view .LVU344
 1434 0166 FCEEC07A 		vcvt.u32.f32	s15, s0
 1435              	.LBB936:
 1436              	.LBB937:
 1437              		.loc 19 72 9 view .LVU345
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 78


 1438 016a 2B4C     		ldr	r4, .L75+68
 1439              	.LBE937:
 1440              	.LBE936:
 1441              	.LBE943:
 1442              	.LBE945:
 874:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 1443              		.loc 20 874 37 view .LVU346
 1444 016c 1968     		ldr	r1, [r3]
 1445              	.LBB946:
 1446              	.LBB944:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1447              		.loc 20 73 13 is_stmt 1 view .LVU347
 1448              	.LBB940:
 1449              	.LBB938:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1450              		.loc 19 71 9 is_stmt 0 view .LVU348
 1451 016e 0020     		movs	r0, #0
 1452              	.LBE938:
 1453              	.LBE940:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1454              		.loc 20 73 27 view .LVU349
 1455 0170 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 1456              		.loc 20 74 13 is_stmt 1 view .LVU350
 1457              	.LVL56:
 1458              	.LBB941:
 1459              	.LBI936:
  69:delayline_reverse.h ****     {
 1460              		.loc 19 69 17 view .LVU351
  69:delayline_reverse.h ****     {
 1461              		.loc 19 69 17 is_stmt 0 view .LVU352
 1462              	.LBE941:
  74:Veno-Echo.cpp ****             //del -> Reset();
 1463              		.loc 20 74 29 view .LVU353
 1464 0174 17EE902A 		vmov	r2, s15	@ int
 1465              	.LBB942:
 1466              	.LBB939:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1467              		.loc 19 71 9 view .LVU354
 1468 0178 0860     		str	r0, [r1]	@ float
 1469              		.loc 19 72 9 view .LVU355
 1470 017a A242     		cmp	r2, r4
 1471 017c 28BF     		it	cs
 1472 017e 2246     		movcs	r2, r4
 1473 0180 0A61     		str	r2, [r1, #16]
 1474              	.LVL57:
 1475              	.L62:
 1476              		.loc 19 72 9 view .LVU356
 1477              	.LBE939:
 1478              	.LBE942:
 1479              	.LBE944:
 1480              	.LBE946:
 875:Veno-Echo.cpp ****             //save setting:
 1481              		.loc 20 875 13 is_stmt 1 view .LVU357
 1482              	.LBB947:
 1483              	.LBI947:
  68:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 79


 1484              		.loc 20 68 10 view .LVU358
 1485              	.LBB948:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1486              		.loc 20 70 9 view .LVU359
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1487              		.loc 20 70 28 is_stmt 0 view .LVU360
 1488 0182 264B     		ldr	r3, .L75+72
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1489              		.loc 20 70 53 view .LVU361
 1490 0184 DFED206A 		vldr.32	s13, .L75+52
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1491              		.loc 20 70 28 view .LVU362
 1492 0188 D3ED017A 		vldr.32	s15, [r3, #4]
 1493              	.LVL58:
 1494              	.LBB949:
 1495              	.LBI949:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1496              		.loc 21 75 3 is_stmt 1 view .LVU363
 1497              	.LBB950:
 1498              		.loc 21 76 5 view .LVU364
 1499              		.loc 21 76 5 is_stmt 0 view .LVU365
 1500              	.LBE950:
 1501              	.LBE949:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1502              		.loc 20 70 15 view .LVU366
 1503 018c 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1504              		.loc 20 70 53 view .LVU367
 1505 0190 67EEA67A 		vmul.f32	s15, s15, s13
 1506              	.LBB952:
 1507              	.LBB951:
 1508              		.loc 21 76 31 view .LVU368
 1509 0194 B0EEC77A 		vabs.f32	s14, s14
 1510              	.LBE951:
 1511              	.LBE952:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1512              		.loc 20 70 9 view .LVU369
 1513 0198 B4EEE77A 		vcmpe.f32	s14, s15
 1514 019c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1515 01a0 0DDD     		ble	.L56
  74:Veno-Echo.cpp ****             //del -> Reset();
 1516              		.loc 20 74 29 view .LVU370
 1517 01a2 FCEEC07A 		vcvt.u32.f32	s15, s0
 1518              	.LBB953:
 1519              	.LBB954:
 1520              		.loc 19 72 9 view .LVU371
 1521 01a6 1C4C     		ldr	r4, .L75+68
 1522              	.LBE954:
 1523              	.LBE953:
 1524              	.LBE948:
 1525              	.LBE947:
 875:Veno-Echo.cpp ****             //save setting:
 1526              		.loc 20 875 37 view .LVU372
 1527 01a8 1968     		ldr	r1, [r3]
 1528              	.LBB961:
 1529              	.LBB960:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 80


 1530              		.loc 20 73 13 is_stmt 1 view .LVU373
 1531              	.LBB957:
 1532              	.LBB955:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1533              		.loc 19 71 9 is_stmt 0 view .LVU374
 1534 01aa 0020     		movs	r0, #0
 1535              	.LBE955:
 1536              	.LBE957:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1537              		.loc 20 73 27 view .LVU375
 1538 01ac 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 1539              		.loc 20 74 13 is_stmt 1 view .LVU376
 1540              	.LVL59:
 1541              	.LBB958:
 1542              	.LBI953:
  69:delayline_reverse.h ****     {
 1543              		.loc 19 69 17 view .LVU377
  69:delayline_reverse.h ****     {
 1544              		.loc 19 69 17 is_stmt 0 view .LVU378
 1545              	.LBE958:
  74:Veno-Echo.cpp ****             //del -> Reset();
 1546              		.loc 20 74 29 view .LVU379
 1547 01b0 17EE902A 		vmov	r2, s15	@ int
 1548              	.LBB959:
 1549              	.LBB956:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1550              		.loc 19 71 9 view .LVU380
 1551 01b4 0860     		str	r0, [r1]	@ float
 1552              		.loc 19 72 9 view .LVU381
 1553 01b6 A242     		cmp	r2, r4
 1554 01b8 28BF     		it	cs
 1555 01ba 2246     		movcs	r2, r4
 1556 01bc 0A61     		str	r2, [r1, #16]
 1557              	.LVL60:
 1558              	.L56:
 1559              		.loc 19 72 9 view .LVU382
 1560              	.LBE956:
 1561              	.LBE959:
 1562              	.LBE960:
 1563              	.LBE961:
 877:Veno-Echo.cpp ****         }
 1564              		.loc 20 877 13 is_stmt 1 view .LVU383
 877:Veno-Echo.cpp ****         }
 1565              		.loc 20 877 35 is_stmt 0 view .LVU384
 1566 01be 184B     		ldr	r3, .L75+76
 1567 01c0 83ED000A 		vstr.32	s0, [r3]
 1568              	.LBE929:
 1569              	.LBE928:
 1570              	.LBE963:
 1571              	.LBE969:
 881:Veno-Echo.cpp **** 
 1572              		.loc 20 881 1 view .LVU385
 1573 01c4 10BD     		pop	{r4, pc}
 1574              	.LVL61:
 1575              	.L73:
 1576              	.LBB970:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 81


 1577              	.LBB964:
 1578              	.LBB919:
 1579              	.LBB907:
1881:Veno-Echo.cpp ****     }
 1580              		.loc 20 1881 16 view .LVU386
 1581 01c6 DFED177A 		vldr.32	s15, .L75+80
 1582              	.LVL62:
1881:Veno-Echo.cpp ****     }
 1583              		.loc 20 1881 16 view .LVU387
 1584 01ca 58E7     		b	.L50
 1585              	.LVL63:
 1586              	.L74:
1881:Veno-Echo.cpp ****     }
 1587              		.loc 20 1881 16 view .LVU388
 1588              	.LBE907:
 1589              	.LBE919:
 1590              	.LBB920:
 1591              	.LBB917:
 1592 01cc DFED157A 		vldr.32	s15, .L75+80
 1593 01d0 9BE7     		b	.L48
 1594              	.L76:
 1595 01d2 00BF     		.align	2
 1596              	.L75:
 1597 01d4 18000000 		.word	.LANCHOR4+24
 1598 01d8 00000000 		.word	.LANCHOR6
 1599 01dc ABAAAA2A 		.word	715827883
 1600 01e0 00000000 		.word	.LANCHOR7
 1601 01e4 00000000 		.word	.LANCHOR8
 1602 01e8 00000000 		.word	.LANCHOR9
 1603 01ec 00000000 		.word	.LANCHOR10
 1604 01f0 00000000 		.word	.LANCHOR5
 1605 01f4 00000000 		.word	.LANCHOR11
 1606 01f8 00000000 		.word	.LANCHOR12
 1607 01fc 00000000 		.word	.LANCHOR0
 1608 0200 00000000 		.word	.LANCHOR13
 1609 0204 00000000 		.word	.LANCHOR14
 1610 0208 0AD7A33B 		.word	1000593162
 1611 020c 0050C346 		.word	1187205120
 1612 0210 00606A48 		.word	1214930944
 1613 0214 00000000 		.word	.LANCHOR2
 1614 0218 BF270900 		.word	599999
 1615 021c 00000000 		.word	.LANCHOR3
 1616 0220 00000000 		.word	.LANCHOR15
 1617 0224 00000000 		.word	0
 1618              	.LBE917:
 1619              	.LBE920:
 1620              	.LBE964:
 1621              	.LBE970:
 1622              		.cfi_endproc
 1623              	.LFE4313:
 1625              		.section	.text._Z20Update_DelayTimeR_CVv,"ax",%progbits
 1626              		.align	1
 1627              		.p2align 2,,3
 1628              		.global	_Z20Update_DelayTimeR_CVv
 1629              		.syntax unified
 1630              		.thumb
 1631              		.thumb_func
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 82


 1632              		.fpu fpv5-d16
 1634              	_Z20Update_DelayTimeR_CVv:
 1635              	.LFB4314:
 884:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1636              		.loc 20 884 1 is_stmt 1 view -0
 1637              		.cfi_startproc
 1638              		@ args = 0, pretend = 0, frame = 0
 1639              		@ frame_needed = 0, uses_anonymous_args = 0
 885:Veno-Echo.cpp **** }
 1640              		.loc 20 885 5 view .LVU390
 884:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1641              		.loc 20 884 1 is_stmt 0 view .LVU391
 1642 0000 08B5     		push	{r3, lr}
 1643              		.cfi_def_cfa_offset 8
 1644              		.cfi_offset 3, -8
 1645              		.cfi_offset 14, -4
 885:Veno-Echo.cpp **** }
 1646              		.loc 20 885 36 view .LVU392
 1647 0002 0121     		movs	r1, #1
 1648 0004 0348     		ldr	r0, .L79
 1649 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1650              	.LVL64:
 885:Veno-Echo.cpp **** }
 1651              		.loc 20 885 19 view .LVU393
 1652 000a 034B     		ldr	r3, .L79+4
 1653 000c 83ED000A 		vstr.32	s0, [r3]
 886:Veno-Echo.cpp **** 
 1654              		.loc 20 886 1 view .LVU394
 1655 0010 08BD     		pop	{r3, pc}
 1656              	.L80:
 1657 0012 00BF     		.align	2
 1658              	.L79:
 1659 0014 18000000 		.word	.LANCHOR4+24
 1660 0018 00000000 		.word	.LANCHOR16
 1661              		.cfi_endproc
 1662              	.LFE4314:
 1664              		.section	.text._Z17Update_DelayTimeRv,"ax",%progbits
 1665              		.align	1
 1666              		.p2align 2,,3
 1667              		.global	_Z17Update_DelayTimeRv
 1668              		.syntax unified
 1669              		.thumb
 1670              		.thumb_func
 1671              		.fpu fpv5-d16
 1673              	_Z17Update_DelayTimeRv:
 1674              	.LFB4315:
 889:Veno-Echo.cpp ****     static bool lastShift{};
 1675              		.loc 20 889 1 is_stmt 1 view -0
 1676              		.cfi_startproc
 1677              		@ args = 0, pretend = 0, frame = 0
 1678              		@ frame_needed = 0, uses_anonymous_args = 0
 890:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 1679              		.loc 20 890 5 view .LVU396
 891:Veno-Echo.cpp ****     static bool tapRatio_pickup{};
 1680              		.loc 20 891 5 view .LVU397
 892:Veno-Echo.cpp ****     
 1681              		.loc 20 892 5 view .LVU398
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 83


 894:Veno-Echo.cpp **** 
 1682              		.loc 20 894 5 view .LVU399
 897:Veno-Echo.cpp **** 
 1683              		.loc 20 897 5 view .LVU400
 889:Veno-Echo.cpp ****     static bool lastShift{};
 1684              		.loc 20 889 1 is_stmt 0 view .LVU401
 1685 0000 10B5     		push	{r4, lr}
 1686              		.cfi_def_cfa_offset 8
 1687              		.cfi_offset 4, -8
 1688              		.cfi_offset 14, -4
 897:Veno-Echo.cpp **** 
 1689              		.loc 20 897 44 view .LVU402
 1690 0002 0622     		movs	r2, #6
 1691 0004 0721     		movs	r1, #7
 1692 0006 6548     		ldr	r0, .L111
 889:Veno-Echo.cpp ****     static bool lastShift{};
 1693              		.loc 20 889 1 view .LVU403
 1694 0008 2DED028B 		vpush.64	{d8}
 1695              		.cfi_def_cfa_offset 16
 1696              		.cfi_offset 80, -16
 1697              		.cfi_offset 81, -12
 897:Veno-Echo.cpp **** 
 1698              		.loc 20 897 44 view .LVU404
 1699 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1700              	.LVL65:
 902:Veno-Echo.cpp **** 
 1701              		.loc 20 902 26 view .LVU405
 1702 0010 6349     		ldr	r1, .L111+4
 902:Veno-Echo.cpp **** 
 1703              		.loc 20 902 31 view .LVU406
 1704 0012 644B     		ldr	r3, .L111+8
 1705              	.LVL66:
 901:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 1706              		.loc 20 901 5 is_stmt 1 view .LVU407
 902:Veno-Echo.cpp **** 
 1707              		.loc 20 902 5 view .LVU408
 902:Veno-Echo.cpp **** 
 1708              		.loc 20 902 26 is_stmt 0 view .LVU409
 1709 0014 0A68     		ldr	r2, [r1]
 1710              	.LBB971:
 904:Veno-Echo.cpp ****     {
 1711              		.loc 20 904 9 view .LVU410
 1712 0016 6448     		ldr	r0, .L111+12
 1713              	.LBE971:
 902:Veno-Echo.cpp **** 
 1714              		.loc 20 902 26 view .LVU411
 1715 0018 0132     		adds	r2, r2, #1
 1716              	.LBB1012:
 904:Veno-Echo.cpp ****     {
 1717              		.loc 20 904 5 view .LVU412
 1718 001a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1719              	.LBE1012:
 902:Veno-Echo.cpp **** 
 1720              		.loc 20 902 31 view .LVU413
 1721 001c 83FB0243 		smull	r4, r3, r3, r2
 1722 0020 D417     		asrs	r4, r2, #31
 1723 0022 C4EB6313 		rsb	r3, r4, r3, asr #5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 84


 1724 0026 03EB4303 		add	r3, r3, r3, lsl #1
 1725 002a A2EB8313 		sub	r3, r2, r3, lsl #6
 1726              	.LBB1013:
 1727              	.LBB972:
 908:Veno-Echo.cpp ****         {
 1728              		.loc 20 908 19 view .LVU414
 1729 002e 5F4A     		ldr	r2, .L111+16
 1730              	.LBE972:
 1731              	.LBE1013:
 902:Veno-Echo.cpp **** 
 1732              		.loc 20 902 14 view .LVU415
 1733 0030 0B60     		str	r3, [r1]
 904:Veno-Echo.cpp ****     {
 1734              		.loc 20 904 5 is_stmt 1 view .LVU416
 1735              	.LBB1014:
 1736 0032 90BB     		cbnz	r0, .L82
 1737              	.LBB991:
 906:Veno-Echo.cpp ****         //udpate pickup
 1738              		.loc 20 906 9 view .LVU417
 908:Veno-Echo.cpp ****         {
 1739              		.loc 20 908 9 view .LVU418
 1740 0034 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1741 0036 0029     		cmp	r1, #0
 1742 0038 3CD0     		beq	.L83
 910:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 1743              		.loc 20 910 13 view .LVU419
 911:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1744              		.loc 20 911 31 is_stmt 0 view .LVU420
 1745 003a 5D4C     		ldr	r4, .L111+20
 912:Veno-Echo.cpp ****         } 
 1746              		.loc 20 912 28 view .LVU421
 1747 003c 5D49     		ldr	r1, .L111+24
 910:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 1748              		.loc 20 910 23 view .LVU422
 1749 003e 1070     		strb	r0, [r2]
 911:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1750              		.loc 20 911 13 is_stmt 1 view .LVU423
 911:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1751              		.loc 20 911 31 is_stmt 0 view .LVU424
 1752 0040 2070     		strb	r0, [r4]
 912:Veno-Echo.cpp ****         } 
 1753              		.loc 20 912 13 is_stmt 1 view .LVU425
 912:Veno-Echo.cpp ****         } 
 1754              		.loc 20 912 28 is_stmt 0 view .LVU426
 1755 0042 81ED000A 		vstr.32	s0, [r1]
 1756              	.L84:
 925:Veno-Echo.cpp **** 
 1757              		.loc 20 925 9 is_stmt 1 view .LVU427
 1758              	.LVL67:
 927:Veno-Echo.cpp ****         {
 1759              		.loc 20 927 9 view .LVU428
 935:Veno-Echo.cpp ****         }
 1760              		.loc 20 935 13 view .LVU429
 1761              	.LBB973:
 1762              	.LBI973:
1874:Veno-Echo.cpp **** {
 1763              		.loc 20 1874 7 view .LVU430
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 85


 1764              	.LBB974:
1876:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1765              		.loc 20 1876 5 view .LVU431
1877:Veno-Echo.cpp **** 
 1766              		.loc 20 1877 5 view .LVU432
 1767              	.LBE974:
 1768              	.LBE973:
 935:Veno-Echo.cpp ****         }
 1769              		.loc 20 935 36 is_stmt 0 view .LVU433
 1770 0046 5C49     		ldr	r1, .L111+28
 1771              	.LBB978:
 1772              	.LBB975:
1877:Veno-Echo.cpp **** 
 1773              		.loc 20 1877 39 view .LVU434
 1774 0048 F7EE006A 		vmov.f32	s13, #1.0e+0
1877:Veno-Echo.cpp **** 
 1775              		.loc 20 1877 49 view .LVU435
 1776 004c F6EE005A 		vmov.f32	s11, #5.0e-1
 1777              	.LBE975:
 1778              	.LBE978:
 935:Veno-Echo.cpp ****         }
 1779              		.loc 20 935 36 view .LVU436
 1780 0050 5A4A     		ldr	r2, .L111+32
 1781              	.LBB979:
 1782              	.LBB976:
1877:Veno-Echo.cpp **** 
 1783              		.loc 20 1877 39 view .LVU437
 1784 0052 91ED007A 		vldr.32	s14, [r1]
1877:Veno-Echo.cpp **** 
 1785              		.loc 20 1877 12 view .LVU438
 1786 0056 B0EE006A 		vmov.f32	s12, #2.0e+0
 1787 005a D2ED007A 		vldr.32	s15, [r2]
1877:Veno-Echo.cpp **** 
 1788              		.loc 20 1877 39 view .LVU439
 1789 005e 36EEC77A 		vsub.f32	s14, s13, s14
1877:Veno-Echo.cpp **** 
 1790              		.loc 20 1877 49 view .LVU440
 1791 0062 37EE657A 		vsub.f32	s14, s14, s11
1877:Veno-Echo.cpp **** 
 1792              		.loc 20 1877 12 view .LVU441
 1793 0066 E7EE067A 		vfma.f32	s15, s14, s12
 1794              	.LVL68:
1879:Veno-Echo.cpp ****     {
 1795              		.loc 20 1879 5 is_stmt 1 view .LVU442
 1796 006a F5EEC07A 		vcmpe.f32	s15, #0
 1797 006e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1798 0072 00F18580 		bmi	.L109
1884:Veno-Echo.cpp ****     {
 1799              		.loc 20 1884 5 view .LVU443
1886:Veno-Echo.cpp ****     }
 1800              		.loc 20 1886 16 is_stmt 0 view .LVU444
 1801 0076 F4EE667A 		vcmp.f32	s15, s13
 1802 007a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1803 007e 76FEA77A 		vselgt.f32	s15, s13, s15
 1804              	.LVL69:
 1805              	.L89:
1886:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 86


 1806              		.loc 20 1886 16 view .LVU445
 1807              	.LBE976:
 1808              	.LBE979:
 938:Veno-Echo.cpp ****         {
 1809              		.loc 20 938 9 is_stmt 1 view .LVU446
 1810 0082 A3B9     		cbnz	r3, .L81
 940:Veno-Echo.cpp ****             {
 1811              		.loc 20 940 13 view .LVU447
 940:Veno-Echo.cpp ****             {
 1812              		.loc 20 940 35 is_stmt 0 view .LVU448
 1813 0084 4E4B     		ldr	r3, .L111+36
 1814 0086 B0EE670A 		vmov.f32	s0, s15
 1815              	.LVL70:
 940:Veno-Echo.cpp ****             {
 1816              		.loc 20 940 35 view .LVU449
 1817 008a 4E48     		ldr	r0, .L111+40
 1818 008c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1819              	.LBE991:
 1820              	.LBE1014:
 980:Veno-Echo.cpp **** void Update_feedbackL_CV()
 1821              		.loc 20 980 1 view .LVU450
 1822 008e BDEC028B 		vldm	sp!, {d8}
 1823              		.cfi_remember_state
 1824              		.cfi_restore 80
 1825              		.cfi_restore 81
 1826              		.cfi_def_cfa_offset 8
 1827 0092 BDE81040 		pop	{r4, lr}
 1828              		.cfi_restore 14
 1829              		.cfi_restore 4
 1830              		.cfi_def_cfa_offset 0
 1831              	.LBB1015:
 1832              	.LBB992:
 940:Veno-Echo.cpp ****             {
 1833              		.loc 20 940 35 view .LVU451
 1834 0096 FFF7FEBF 		b	_ZN10DelayMulti12SetDelayTimeEfb
 1835              	.LVL71:
 1836              	.L82:
 1837              		.cfi_restore_state
 940:Veno-Echo.cpp ****             {
 1838              		.loc 20 940 35 view .LVU452
 1839              	.LBE992:
 1840              	.LBB993:
 950:Veno-Echo.cpp **** 
 1841              		.loc 20 950 9 is_stmt 1 view .LVU453
 952:Veno-Echo.cpp ****         {
 1842              		.loc 20 952 9 view .LVU454
 1843 009a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1844 009c 002B     		cmp	r3, #0
 1845 009e 3ED1     		bne	.L92
 954:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1846              		.loc 20 954 13 view .LVU455
 954:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1847              		.loc 20 954 23 is_stmt 0 view .LVU456
 1848 00a0 0124     		movs	r4, #1
 955:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1849              		.loc 20 955 29 view .LVU457
 1850 00a2 4948     		ldr	r0, .L111+44
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 87


 956:Veno-Echo.cpp ****         }
 1851              		.loc 20 956 26 view .LVU458
 1852 00a4 4949     		ldr	r1, .L111+48
 954:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1853              		.loc 20 954 23 view .LVU459
 1854 00a6 1470     		strb	r4, [r2]
 955:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1855              		.loc 20 955 13 is_stmt 1 view .LVU460
 955:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1856              		.loc 20 955 29 is_stmt 0 view .LVU461
 1857 00a8 0370     		strb	r3, [r0]
 956:Veno-Echo.cpp ****         }
 1858              		.loc 20 956 13 is_stmt 1 view .LVU462
 956:Veno-Echo.cpp ****         }
 1859              		.loc 20 956 26 is_stmt 0 view .LVU463
 1860 00aa 81ED000A 		vstr.32	s0, [r1]
 1861              	.L81:
 956:Veno-Echo.cpp ****         }
 1862              		.loc 20 956 26 view .LVU464
 1863              	.LBE993:
 1864              	.LBE1015:
 980:Veno-Echo.cpp **** void Update_feedbackL_CV()
 1865              		.loc 20 980 1 view .LVU465
 1866 00ae BDEC028B 		vldm	sp!, {d8}
 1867              		.cfi_remember_state
 1868              		.cfi_restore 80
 1869              		.cfi_restore 81
 1870              		.cfi_def_cfa_offset 8
 1871 00b2 10BD     		pop	{r4, pc}
 1872              	.L83:
 1873              		.cfi_restore_state
 1874              	.LBB1016:
 1875              	.LBB1008:
 916:Veno-Echo.cpp ****             {
 1876              		.loc 20 916 13 is_stmt 1 view .LVU466
 916:Veno-Echo.cpp ****             {
 1877              		.loc 20 916 16 is_stmt 0 view .LVU467
 1878 00b4 3E4A     		ldr	r2, .L111+20
 916:Veno-Echo.cpp ****             {
 1879              		.loc 20 916 13 view .LVU468
 1880 00b6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1881 00b8 79B9     		cbnz	r1, .L85
 918:Veno-Echo.cpp ****                 {
 1882              		.loc 20 918 17 is_stmt 1 view .LVU469
 1883              	.LVL72:
 1884              	.LBB980:
 1885              	.LBI980:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1886              		.loc 21 75 3 view .LVU470
 1887              	.LBB981:
 1888              		.loc 21 76 5 view .LVU471
 1889              		.loc 21 76 5 is_stmt 0 view .LVU472
 1890              	.LBE981:
 1891              	.LBE980:
 918:Veno-Echo.cpp ****                 {
 1892              		.loc 20 918 23 view .LVU473
 1893 00ba 3E49     		ldr	r1, .L111+24
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 88


 918:Veno-Echo.cpp ****                 {
 1894              		.loc 20 918 17 view .LVU474
 1895 00bc 9FED447A 		vldr.32	s14, .L111+52
 918:Veno-Echo.cpp ****                 {
 1896              		.loc 20 918 23 view .LVU475
 1897 00c0 D1ED007A 		vldr.32	s15, [r1]
 1898 00c4 70EE677A 		vsub.f32	s15, s0, s15
 1899              	.LBB983:
 1900              	.LBB982:
 1901              		.loc 21 76 31 view .LVU476
 1902 00c8 F0EEE77A 		vabs.f32	s15, s15
 1903              	.LBE982:
 1904              	.LBE983:
 918:Veno-Echo.cpp ****                 {
 1905              		.loc 20 918 17 view .LVU477
 1906 00cc F4EEC77A 		vcmpe.f32	s15, s14
 1907 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1908 00d4 B7DD     		ble	.L84
 920:Veno-Echo.cpp ****                 }
 1909              		.loc 20 920 21 is_stmt 1 view .LVU478
 920:Veno-Echo.cpp ****                 }
 1910              		.loc 20 920 39 is_stmt 0 view .LVU479
 1911 00d6 0121     		movs	r1, #1
 1912 00d8 1170     		strb	r1, [r2]
 1913              	.L85:
 925:Veno-Echo.cpp **** 
 1914              		.loc 20 925 9 is_stmt 1 view .LVU480
 1915              	.LVL73:
 927:Veno-Echo.cpp ****         {
 1916              		.loc 20 927 9 view .LVU481
 929:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 1917              		.loc 20 929 13 view .LVU482
 1918              	.LBB984:
 1919              	.LBI984:
1874:Veno-Echo.cpp **** {
 1920              		.loc 20 1874 7 view .LVU483
 1921              	.LBB985:
1876:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1922              		.loc 20 1876 5 view .LVU484
1877:Veno-Echo.cpp **** 
 1923              		.loc 20 1877 5 view .LVU485
 1924              	.LBE985:
 1925              	.LBE984:
 929:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 1926              		.loc 20 929 36 is_stmt 0 view .LVU486
 1927 00da 374A     		ldr	r2, .L111+28
 1928              	.LBB988:
 1929              	.LBB986:
1877:Veno-Echo.cpp **** 
 1930              		.loc 20 1877 39 view .LVU487
 1931 00dc B7EE007A 		vmov.f32	s14, #1.0e+0
1877:Veno-Echo.cpp **** 
 1932              		.loc 20 1877 49 view .LVU488
 1933 00e0 B6EE006A 		vmov.f32	s12, #5.0e-1
1877:Veno-Echo.cpp **** 
 1934              		.loc 20 1877 39 view .LVU489
 1935 00e4 D2ED007A 		vldr.32	s15, [r2]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 89


1877:Veno-Echo.cpp **** 
 1936              		.loc 20 1877 12 view .LVU490
 1937 00e8 F0EE006A 		vmov.f32	s13, #2.0e+0
1877:Veno-Echo.cpp **** 
 1938              		.loc 20 1877 39 view .LVU491
 1939 00ec 77EE677A 		vsub.f32	s15, s14, s15
1877:Veno-Echo.cpp **** 
 1940              		.loc 20 1877 49 view .LVU492
 1941 00f0 77EEC67A 		vsub.f32	s15, s15, s12
1877:Veno-Echo.cpp **** 
 1942              		.loc 20 1877 12 view .LVU493
 1943 00f4 B0EE406A 		vmov.f32	s12, s0
 1944 00f8 A7EEA66A 		vfma.f32	s12, s15, s13
1879:Veno-Echo.cpp ****     {
 1945              		.loc 20 1879 5 view .LVU494
 1946 00fc B5EEC06A 		vcmpe.f32	s12, #0
1877:Veno-Echo.cpp **** 
 1947              		.loc 20 1877 12 view .LVU495
 1948 0100 F0EE467A 		vmov.f32	s15, s12
 1949              	.LVL74:
1879:Veno-Echo.cpp ****     {
 1950              		.loc 20 1879 5 is_stmt 1 view .LVU496
 1951 0104 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1952 0108 3DD4     		bmi	.L110
1884:Veno-Echo.cpp ****     {
 1953              		.loc 20 1884 5 view .LVU497
1886:Veno-Echo.cpp ****     }
 1954              		.loc 20 1886 16 is_stmt 0 view .LVU498
 1955 010a F4EE477A 		vcmp.f32	s15, s14
 1956 010e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1957 0112 77FE277A 		vselgt.f32	s15, s14, s15
 1958              	.L87:
 1959              	.LVL75:
 1960              		.loc 20 1889 5 is_stmt 1 view .LVU499
 1961              		.loc 20 1889 5 is_stmt 0 view .LVU500
 1962              	.LBE986:
 1963              	.LBE988:
 930:Veno-Echo.cpp ****         }
 1964              		.loc 20 930 13 is_stmt 1 view .LVU501
 930:Veno-Echo.cpp ****         }
 1965              		.loc 20 930 29 is_stmt 0 view .LVU502
 1966 0116 294A     		ldr	r2, .L111+32
 1967 0118 82ED000A 		vstr.32	s0, [r2]
 1968 011c B1E7     		b	.L89
 1969              	.LVL76:
 1970              	.L92:
 930:Veno-Echo.cpp ****         }
 1971              		.loc 20 930 29 view .LVU503
 1972              	.LBE1008:
 1973              	.LBB1009:
 961:Veno-Echo.cpp ****             {
 1974              		.loc 20 961 13 is_stmt 1 view .LVU504
 961:Veno-Echo.cpp ****             {
 1975              		.loc 20 961 16 is_stmt 0 view .LVU505
 1976 011e 2A4B     		ldr	r3, .L111+44
 961:Veno-Echo.cpp ****             {
 1977              		.loc 20 961 13 view .LVU506
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 90


 1978 0120 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1979 0122 7AB9     		cbnz	r2, .L93
 963:Veno-Echo.cpp ****                 {
 1980              		.loc 20 963 17 is_stmt 1 view .LVU507
 1981              	.LVL77:
 1982              	.LBB994:
 1983              	.LBI994:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1984              		.loc 21 75 3 view .LVU508
 1985              	.LBB995:
 1986              		.loc 21 76 5 view .LVU509
 1987              		.loc 21 76 5 is_stmt 0 view .LVU510
 1988              	.LBE995:
 1989              	.LBE994:
 963:Veno-Echo.cpp ****                 {
 1990              		.loc 20 963 23 view .LVU511
 1991 0124 294A     		ldr	r2, .L111+48
 963:Veno-Echo.cpp ****                 {
 1992              		.loc 20 963 17 view .LVU512
 1993 0126 9FED2A7A 		vldr.32	s14, .L111+52
 963:Veno-Echo.cpp ****                 {
 1994              		.loc 20 963 23 view .LVU513
 1995 012a D2ED007A 		vldr.32	s15, [r2]
 1996 012e 70EE677A 		vsub.f32	s15, s0, s15
 1997              	.LBB997:
 1998              	.LBB996:
 1999              		.loc 21 76 31 view .LVU514
 2000 0132 F0EEE77A 		vabs.f32	s15, s15
 2001              	.LBE996:
 2002              	.LBE997:
 963:Veno-Echo.cpp ****                 {
 2003              		.loc 20 963 17 view .LVU515
 2004 0136 F4EEC77A 		vcmpe.f32	s15, s14
 2005 013a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2006 013e B6DD     		ble	.L81
 965:Veno-Echo.cpp ****                 }
 2007              		.loc 20 965 21 is_stmt 1 view .LVU516
 965:Veno-Echo.cpp ****                 }
 2008              		.loc 20 965 37 is_stmt 0 view .LVU517
 2009 0140 0122     		movs	r2, #1
 2010 0142 1A70     		strb	r2, [r3]
 2011              	.L93:
 970:Veno-Echo.cpp ****         {
 2012              		.loc 20 970 9 is_stmt 1 view .LVU518
 2013              	.LBB998:
 2014              	.LBB999:
 972:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
 2015              		.loc 20 972 13 view .LVU519
 2016              	.LVL78:
 973:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2017              		.loc 20 973 13 view .LVU520
 973:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2018              		.loc 20 973 61 is_stmt 0 view .LVU521
 2019 0144 F0EE080A 		vmov.f32	s1, #3.0e+0
 2020 0148 0020     		movs	r0, #0
 2021 014a 9FED221A 		vldr.32	s2, .L111+56
 2022 014e FFF7FEFF 		bl	_Z5scalefff9CurveType
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 91


 2023              	.LVL79:
 2024              	.LBB1000:
 2025              	.LBI1000:
 2026              		.file 22 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // -*- C++ -*- C forwarding header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** /** @file include/cmath
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  as macros in C).
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  */
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // ISO C++ 14882: 26.5  C library
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #pragma GCC system_header
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/c++config.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/cpp_type_traits.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <ext/type_traits.h>
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include_next <math.h>
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/std_abs.h>
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_CMATH
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_CMATH 1
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef div
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 92


  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acos
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asin
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan2
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ceil
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cos
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cosh
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fabs
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef floor
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmod
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef frexp
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ldexp
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log10
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef modf
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef pow
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sin
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sinh
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sqrt
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tan
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tanh
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** extern "C++"
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acos;
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(float __x)
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosf(__x); }
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(long double __x)
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosl(__x); }
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acos(_Tp __x)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acos(__x); }
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asin;
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(float __x)
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinf(__x); }
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(long double __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 93


 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinl(__x); }
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asin(_Tp __x)
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asin(__x); }
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan;
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(float __x)
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanf(__x); }
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(long double __x)
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanl(__x); }
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan(_Tp __x)
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atan(__x); }
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan2;
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(float __y, float __x)
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2f(__y, __x); }
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(long double __y, long double __x)
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2l(__y, __x); }
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan2(_Tp __y, _Up __x)
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return atan2(__type(__y), __type(__x));
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ceil;
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(float __x)
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceilf(__x); }
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 94


 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(long double __x)
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceill(__x); }
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ceil(_Tp __x)
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ceil(__x); }
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cos;
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(float __x)
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosf(__x); }
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(long double __x)
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosl(__x); }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cos(_Tp __x)
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cos(__x); }
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cosh;
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(float __x)
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshf(__x); }
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(long double __x)
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshl(__x); }
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cosh(_Tp __x)
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cosh(__x); }
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(float __x)
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expf(__x); }
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 95


 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(long double __x)
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expl(__x); }
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp(_Tp __x)
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp(__x); }
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fabs;
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(float __x)
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsf(__x); }
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(long double __x)
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsl(__x); }
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fabs(_Tp __x)
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_fabs(__x); }
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::floor;
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(float __x)
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorf(__x); }
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(long double __x)
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorl(__x); }
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     floor(_Tp __x)
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_floor(__x); }
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmod;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(float __x, float __y)
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodf(__x, __y); }
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 96


 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(long double __x, long double __y)
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodl(__x, __y); }
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmod(_Tp __x, _Up __y)
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmod(__type(__x), __type(__y));
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::frexp;
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(float __x, int* __exp)
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(long double __x, int* __exp)
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     frexp(_Tp __x, int* __exp)
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_frexp(__x, __exp); }
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ldexp;
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(float __x, int __exp)
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(long double __x, int __exp)
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ldexp(_Tp __x, int __exp)
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log;
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(float __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 97


 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logf(__x); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(long double __x)
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logl(__x); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log(_Tp __x)
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log(__x); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log10;
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(float __x)
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10f(__x); }
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(long double __x)
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10l(__x); }
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log10(_Tp __x)
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log10(__x); }
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::modf;
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(float __x, float* __iptr)
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modff(__x, __iptr); }
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(long double __x, long double* __iptr)
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::pow;
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, float __y)
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powf(__x, __y); }
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, long double __y)
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powl(__x, __y); }
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus < 201103L
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 98


 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline double
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(double __x, int __i)
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powi(__x, __i); }
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, int __n)
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powif(__x, __n); }
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, int __n)
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powil(__x, __n); }
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     pow(_Tp __x, _Up __y)
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return pow(__type(__x), __type(__y));
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sin;
 422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(float __x)
 426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinf(__x); }
 427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(long double __x)
 430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinl(__x); }
 431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sin(_Tp __x)
 438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sin(__x); }
 439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sinh;
 441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(float __x)
 445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhf(__x); }
 446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(long double __x)
 449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhl(__x); }
 450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 99


 453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sinh(_Tp __x)
 457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sinh(__x); }
 458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sqrt;
 460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(float __x)
 464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtf(__x); }
 465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(long double __x)
 468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtl(__x); }
 469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sqrt(_Tp __x)
 476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sqrt(__x); }
 477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tan;
 479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(float __x)
 483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanf(__x); }
 484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(long double __x)
 487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanl(__x); }
 488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tan(_Tp __x)
 495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tan(__x); }
 496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tanh;
 498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(float __x)
 502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhf(__x); }
 503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(long double __x)
 506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhl(__x); }
 507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 100


 510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tanh(_Tp __x)
 514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tanh(__x); }
 515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_USE_C99_MATH
 517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC
 518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // These are possible macros imported from C99-land.
 520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fpclassify
 521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isfinite
 522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isinf
 523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnan
 524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnormal
 525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef signbit
 526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreater
 527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreaterequal
 528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isless
 529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessequal
 530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessgreater
 531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isunordered
 532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(float __x)
 538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(double __x)
 543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(long double __x)
 548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               int>::__type
 556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __x)
 557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? FP_NORMAL : FP_ZERO; }
 558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(float __x)
 563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(double __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 101


 567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(long double __x)
 571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __x)
 579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return true; }
 580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(float __x)
 585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISINF \
 588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isinf;
 590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(double __x)
 593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(long double __x)
 598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __x)
 606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(float __x)
 612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISNAN \
 615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isnan;
 617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(double __x)
 620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 102


 624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(long double __x)
 625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __x)
 633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(float __x)
 639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(double __x)
 643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(long double __x)
 647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __x)
 655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? true : false; }
 656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // Note: middle-end/36757 is fixed, __builtin_signbit is type-generic.
 660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(float __x)
 662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(double __x)
 666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(long double __x)
 670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __x)
 678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x < 0 ? true : false; }
 679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 103


 681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(float __x, float __y)
 684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(double __x, double __y)
 688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(long double __x, long double __y)
 692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __x, _Up __y)
 701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__x), __type(__y));
 704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(float __x, float __y)
 710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(double __x, double __y)
 714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(long double __x, long double __y)
 718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __x, _Up __y)
 727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__x), __type(__y));
 730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(float __x, float __y)
 736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 104


 738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(double __x, double __y)
 740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(long double __x, long double __y)
 744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __x, _Up __y)
 753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__x), __type(__y));
 756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 758:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 759:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 760:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 761:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(float __x, float __y)
 762:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 763:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 764:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 765:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(double __x, double __y)
 766:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 767:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 768:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 769:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(long double __x, long double __y)
 770:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 771:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 772:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 773:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 774:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 775:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 776:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 777:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 778:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __x, _Up __y)
 779:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 780:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 781:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__x), __type(__y));
 782:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 783:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 784:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 785:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 786:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 787:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(float __x, float __y)
 788:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 789:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 790:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 791:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(double __x, double __y)
 792:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 793:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 794:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 105


 795:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(long double __x, long double __y)
 796:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 797:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 798:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 799:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 800:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 801:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 802:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 803:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 804:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __x, _Up __y)
 805:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 806:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 807:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__x), __type(__y));
 808:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 809:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 810:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 811:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 812:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 813:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(float __x, float __y)
 814:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 815:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 816:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 817:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(double __x, double __y)
 818:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 819:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 820:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 821:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(long double __x, long double __y)
 822:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 823:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 824:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 825:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 826:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 827:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 828:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 829:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 830:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __x, _Up __y)
 831:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 832:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 833:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__x), __type(__y));
 834:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 835:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 836:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 837:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 838:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 839:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 840:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 841:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 842:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __f)
 843:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 844:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 845:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 846:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				  FP_SUBNORMAL, FP_ZERO, __type(__f));
 847:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 848:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 849:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 850:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 851:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 106


 852:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __f)
 853:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 854:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 855:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isfinite(__type(__f));
 856:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 857:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 858:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 859:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 860:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 861:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __f)
 862:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 863:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 864:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isinf(__type(__f));
 865:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 866:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 867:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 868:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 869:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 870:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __f)
 871:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 872:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 873:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnan(__type(__f));
 874:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 875:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 876:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 877:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 878:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 879:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __f)
 880:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 881:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 882:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnormal(__type(__f));
 883:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 884:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 885:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 886:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 887:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 888:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __f)
 889:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 890:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 891:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_signbit(__type(__f));
 892:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 893:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 894:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 895:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 896:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 897:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __f1, _Tp __f2)
 898:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 899:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 900:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__f1), __type(__f2));
 901:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 902:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 903:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 904:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 905:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 906:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __f1, _Tp __f2)
 907:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 908:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 107


 909:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__f1), __type(__f2));
 910:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 911:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 912:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 913:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 914:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 915:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __f1, _Tp __f2)
 916:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 917:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 918:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__f1), __type(__f2));
 919:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 920:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 921:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 922:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 923:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 924:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __f1, _Tp __f2)
 925:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 926:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 927:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__f1), __type(__f2));
 928:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 929:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 930:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 931:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 932:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 933:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __f1, _Tp __f2)
 934:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 935:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 936:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__f1), __type(__f2));
 937:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 938:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 939:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 940:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 941:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 942:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __f1, _Tp __f2)
 943:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 944:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 945:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__f1), __type(__f2));
 946:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 947:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 948:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif // C++11
 949:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_FP_MACROS_DYNAMIC */
 950:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_MATH */
 951:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 952:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 953:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 954:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifdef _GLIBCXX_USE_C99_MATH_TR1
 955:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 956:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acosh
 957:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshf
 958:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshl
 959:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinh
 960:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhf
 961:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhl
 962:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanh
 963:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhf
 964:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhl
 965:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrt
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 108


 966:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtf
 967:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtl
 968:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysign
 969:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignf
 970:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignl
 971:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erf
 972:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erff
 973:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfl
 974:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfc
 975:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcf
 976:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcl
 977:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2
 978:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2f
 979:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2l
 980:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1
 981:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1f
 982:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1l
 983:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdim
 984:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdimf
 985:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdiml
 986:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fma
 987:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaf
 988:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmal
 989:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmax
 990:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxf
 991:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxl
 992:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmin
 993:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminf
 994:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminl
 995:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypot
 996:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotf
 997:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotl
 998:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogb
 999:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbf
1000:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbl
1001:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgamma
1002:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammaf
1003:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammal
1004:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1005:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrint
1006:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintf
1007:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintl
1008:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llround
1009:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundf
1010:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundl
1011:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1012:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1p
1013:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pf
1014:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pl
1015:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2
1016:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2f
1017:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2l
1018:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logb
1019:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbf
1020:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbl
1021:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrint
1022:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 109


1023:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintl
1024:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lround
1025:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundf
1026:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundl
1027:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nan
1028:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanf
1029:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanl
1030:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyint
1031:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintf
1032:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintl
1033:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafter
1034:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterf
1035:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterl
1036:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttoward
1037:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardf
1038:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardl
1039:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainder
1040:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderf
1041:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderl
1042:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquo
1043:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquof
1044:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquol
1045:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rint
1046:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintf
1047:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintl
1048:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef round
1049:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundf
1050:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundl
1051:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbln
1052:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnf
1053:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnl
1054:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbn
1055:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnf
1056:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnl
1057:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgamma
1058:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammaf
1059:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammal
1060:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef trunc
1061:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncf
1062:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncl
1063:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1064:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // types
1065:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::double_t;
1066:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::float_t;
1067:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1068:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // functions
1069:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acosh;
1070:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshf;
1071:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshl;
1072:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1073:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinh;
1074:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhf;
1075:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhl;
1076:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1077:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanh;
1078:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhf;
1079:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhl;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 110


1080:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1081:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrt;
1082:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtf;
1083:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtl;
1084:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1085:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysign;
1086:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignf;
1087:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignl;
1088:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1089:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erf;
1090:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erff;
1091:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfl;
1092:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1093:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfc;
1094:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcf;
1095:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcl;
1096:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1097:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2;
1098:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2f;
1099:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2l;
1100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1;
1102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1f;
1103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1l;
1104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdim;
1106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdimf;
1107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdiml;
1108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fma;
1110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaf;
1111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmal;
1112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmax;
1114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxf;
1115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxl;
1116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmin;
1118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminf;
1119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminl;
1120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypot;
1122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotf;
1123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotl;
1124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogb;
1126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbf;
1127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbl;
1128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgamma;
1130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammaf;
1131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammal;
1132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrint;
1135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintf;
1136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintl;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 111


1137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llround;
1139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundf;
1140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundl;
1141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1p;
1144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pf;
1145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pl;
1146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2;
1148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2f;
1149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2l;
1150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logb;
1152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbf;
1153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbl;
1154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrint;
1156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintf;
1157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintl;
1158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lround;
1160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundf;
1161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundl;
1162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nan;
1164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanf;
1165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanl;
1166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyint;
1168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintf;
1169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintl;
1170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafter;
1172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterf;
1173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterl;
1174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttoward;
1176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardf;
1177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardl;
1178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainder;
1180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderf;
1181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderl;
1182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquo;
1184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquof;
1185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquol;
1186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rint;
1188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintf;
1189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintl;
1190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::round;
1192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundf;
1193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundl;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 112


1194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbln;
1196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnf;
1197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnl;
1198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbn;
1200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnf;
1201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnl;
1202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgamma;
1204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammaf;
1205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammal;
1206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::trunc;
1208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncf;
1209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncl;
1210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   /// Additional overloads.
1212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(float __x)
1215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshf(__x); }
1216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(long double __x)
1219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshl(__x); }
1220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acosh(_Tp __x)
1227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acosh(__x); }
1228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(float __x)
1233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhf(__x); }
1234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(long double __x)
1237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhl(__x); }
1238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asinh(_Tp __x)
1245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asinh(__x); }
1246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(float __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 113


1251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhf(__x); }
1252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(long double __x)
1255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhl(__x); }
1256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atanh(_Tp __x)
1263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atanh(__x); }
1264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(float __x)
1269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtf(__x); }
1270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(long double __x)
1273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtl(__x); }
1274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cbrt(_Tp __x)
1281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cbrt(__x); }
1282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(float __x, float __y)
1287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignf(__x, __y); }
1288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(long double __x, long double __y)
1291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignl(__x, __y); }
1292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     copysign(_Tp __x, _Up __y)
1298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return copysign(__type(__x), __type(__y));
1301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(float __x)
1307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erff(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 114


1308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(long double __x)
1311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfl(__x); }
1312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erf(_Tp __x)
1319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erf(__x); }
1320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(float __x)
1325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcf(__x); }
1326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(long double __x)
1329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcl(__x); }
1330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erfc(_Tp __x)
1337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erfc(__x); }
1338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(float __x)
1343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2f(__x); }
1344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(long double __x)
1347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2l(__x); }
1348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp2(_Tp __x)
1355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp2(__x); }
1356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(float __x)
1361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1f(__x); }
1362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(long double __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 115


1365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1l(__x); }
1366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     expm1(_Tp __x)
1373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_expm1(__x); }
1374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(float __x, float __y)
1379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdimf(__x, __y); }
1380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(long double __x, long double __y)
1383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdiml(__x, __y); }
1384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fdim(_Tp __x, _Up __y)
1390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fdim(__type(__x), __type(__y));
1393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(float __x, float __y, float __z)
1399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaf(__x, __y, __z); }
1400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(long double __x, long double __y, long double __z)
1403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmal(__x, __y, __z); }
1404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up, typename _Vp>
1408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type
1409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fma(_Tp __x, _Up __y, _Vp __z)
1410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type __type;
1412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fma(__type(__x), __type(__y), __type(__z));
1413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(float __x, float __y)
1419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxf(__x, __y); }
1420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 116


1422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(long double __x, long double __y)
1423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxl(__x, __y); }
1424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmax(_Tp __x, _Up __y)
1430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmax(__type(__x), __type(__y));
1433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(float __x, float __y)
1439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminf(__x, __y); }
1440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(long double __x, long double __y)
1443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminl(__x, __y); }
1444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmin(_Tp __x, _Up __y)
1450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmin(__type(__x), __type(__y));
1453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(float __x, float __y)
1459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotf(__x, __y); }
1460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(long double __x, long double __y)
1463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotl(__x, __y); }
1464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     hypot(_Tp __x, _Up __y)
1470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return hypot(__type(__x), __type(__y));
1473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(float __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 117


1479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbf(__x); }
1480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(long double __x)
1483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbl(__x); }
1484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr
1489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     int>::__type
1491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ilogb(_Tp __x)
1492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ilogb(__x); }
1493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(float __x)
1498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammaf(__x); }
1499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(long double __x)
1502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammal(__x); }
1503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lgamma(_Tp __x)
1510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lgamma(__x); }
1511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(float __x)
1516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintf(__x); }
1517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(long double __x)
1520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintl(__x); }
1521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llrint(_Tp __x)
1528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llrint(__x); }
1529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(float __x)
1534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundf(__x); }
1535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 118


1536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(long double __x)
1538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundl(__x); }
1539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llround(_Tp __x)
1546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llround(__x); }
1547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(float __x)
1552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pf(__x); }
1553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(long double __x)
1556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pl(__x); }
1557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log1p(_Tp __x)
1564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log1p(__x); }
1565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 568.
1569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(float __x)
1571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2f(__x); }
1572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(long double __x)
1575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2l(__x); }
1576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log2(_Tp __x)
1583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log2(__x); }
1584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(float __x)
1589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbf(__x); }
1590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(long double __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 119


1593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbl(__x); }
1594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     logb(_Tp __x)
1601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_logb(__x); }
1602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(float __x)
1607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintf(__x); }
1608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(long double __x)
1611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintl(__x); }
1612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lrint(_Tp __x)
1619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lrint(__x); }
1620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(float __x)
1625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundf(__x); }
1626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(long double __x)
1629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundl(__x); }
1630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lround(_Tp __x)
1637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lround(__x); }
1638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(float __x)
1643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintf(__x); }
1644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(long double __x)
1647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintl(__x); }
1648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 120


1650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nearbyint(_Tp __x)
1655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nearbyint(__x); }
1656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(float __x, float __y)
1661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterf(__x, __y); }
1662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(long double __x, long double __y)
1665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterl(__x, __y); }
1666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nextafter(_Tp __x, _Up __y)
1672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return nextafter(__type(__x), __type(__y));
1675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(float __x, long double __y)
1681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardf(__x, __y); }
1682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(long double __x, long double __y)
1685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardl(__x, __y); }
1686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nexttoward(_Tp __x, long double __y)
1693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nexttoward(__x, __y); }
1694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(float __x, float __y)
1699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderf(__x, __y); }
1700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(long double __x, long double __y)
1703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderl(__x, __y); }
1704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 121


1707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remainder(_Tp __x, _Up __y)
1710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remainder(__type(__x), __type(__y));
1713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
1718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(float __x, float __y, int* __pquo)
1719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquof(__x, __y, __pquo); }
1720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
1722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(long double __x, long double __y, int* __pquo)
1723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquol(__x, __y, __pquo); }
1724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remquo(_Tp __x, _Up __y, int* __pquo)
1730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remquo(__type(__x), __type(__y), __pquo);
1733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(float __x)
1739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintf(__x); }
1740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(long double __x)
1743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintl(__x); }
1744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     rint(_Tp __x)
1751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_rint(__x); }
1752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   round(float __x)
 2027              		.loc 22 1756 3 is_stmt 1 view .LVU522
 2028              	.LBB1001:
1757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_roundf(__x); }
 2029              		.loc 22 1757 5 view .LVU523
 2030              		.loc 22 1757 28 is_stmt 0 view .LVU524
 2031 0152 B8FE400A 		vrinta.f32	s0, s0
 2032              	.LVL80:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 122


 2033              		.loc 22 1757 28 view .LVU525
 2034              	.LBE1001:
 2035              	.LBE1000:
 974:Veno-Echo.cpp ****             //save setting:
 2036              		.loc 20 974 13 is_stmt 1 view .LVU526
 2037              	.LBB1002:
 2038              	.LBI1002:
1890:Veno-Echo.cpp **** }
1891:Veno-Echo.cpp **** 
1892:Veno-Echo.cpp **** //checks pickup state of primary controls
1893:Veno-Echo.cpp **** bool checkPickupState(float value, float lastValue, bool lastState, bool ShiftChange)
1894:Veno-Echo.cpp **** {
1895:Veno-Echo.cpp ****     bool retval{};
1896:Veno-Echo.cpp ****     
1897:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change to not picked up, unless there's been no change
1898:Veno-Echo.cpp ****     {
1899:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
1900:Veno-Echo.cpp ****         {
1901:Veno-Echo.cpp ****             retval = false;
1902:Veno-Echo.cpp ****         }
1903:Veno-Echo.cpp ****         else
1904:Veno-Echo.cpp ****         {
1905:Veno-Echo.cpp ****             retval = true;
1906:Veno-Echo.cpp ****         }
1907:Veno-Echo.cpp ****     }
1908:Veno-Echo.cpp **** 
1909:Veno-Echo.cpp ****     else //not recent shift change, change to pickup if there's been a change since last shift chan
1910:Veno-Echo.cpp ****     {
1911:Veno-Echo.cpp ****     if(!lastState) //if not picked up
1912:Veno-Echo.cpp ****     {
1913:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
1914:Veno-Echo.cpp ****         {
1915:Veno-Echo.cpp ****             retval = true;
1916:Veno-Echo.cpp ****         }
1917:Veno-Echo.cpp **** 
1918:Veno-Echo.cpp ****         else
1919:Veno-Echo.cpp ****         {
1920:Veno-Echo.cpp ****             retval = false;
1921:Veno-Echo.cpp ****         }
1922:Veno-Echo.cpp **** 
1923:Veno-Echo.cpp ****     }
1924:Veno-Echo.cpp ****     else    //previous state is picked up
1925:Veno-Echo.cpp ****     {
1926:Veno-Echo.cpp ****         retval = true;  //always return true
1927:Veno-Echo.cpp ****     }
1928:Veno-Echo.cpp **** 
1929:Veno-Echo.cpp ****     }
1930:Veno-Echo.cpp ****     return retval;
1931:Veno-Echo.cpp **** 
1932:Veno-Echo.cpp **** }
1933:Veno-Echo.cpp **** 
1934:Veno-Echo.cpp **** //Checks pickup state of secondary controls
1935:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
1936:Veno-Echo.cpp **** {
1937:Veno-Echo.cpp ****     pickupState retval{};
1938:Veno-Echo.cpp **** 
1939:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 123


1940:Veno-Echo.cpp ****     {
1941:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
1942:Veno-Echo.cpp ****         {
1943:Veno-Echo.cpp ****             retval = BELOW;
1944:Veno-Echo.cpp ****         }
1945:Veno-Echo.cpp ****         
1946:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
1947:Veno-Echo.cpp ****         {
1948:Veno-Echo.cpp ****             retval = ABOVE;
1949:Veno-Echo.cpp ****         }
1950:Veno-Echo.cpp **** 
1951:Veno-Echo.cpp ****         else    //within tolerance i.e. unchanged
1952:Veno-Echo.cpp ****         {
1953:Veno-Echo.cpp ****             retval = PICKEDUP;
1954:Veno-Echo.cpp ****         }
1955:Veno-Echo.cpp ****     }
1956:Veno-Echo.cpp **** 
1957:Veno-Echo.cpp ****     else    //not a recent shift change
1958:Veno-Echo.cpp ****     {
1959:Veno-Echo.cpp ****         switch(lastState)
1960:Veno-Echo.cpp ****         {
1961:Veno-Echo.cpp ****             case BELOW:
1962:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
1963:Veno-Echo.cpp ****                 retval = PICKEDUP;
1964:Veno-Echo.cpp ****             else
1965:Veno-Echo.cpp ****                 retval = lastState;
1966:Veno-Echo.cpp ****             break;
1967:Veno-Echo.cpp **** 
1968:Veno-Echo.cpp ****             case ABOVE:
1969:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
1970:Veno-Echo.cpp ****                 retval = PICKEDUP;
1971:Veno-Echo.cpp ****             else
1972:Veno-Echo.cpp ****                 retval = lastState;
1973:Veno-Echo.cpp ****             break;
1974:Veno-Echo.cpp ****             case PICKEDUP:
1975:Veno-Echo.cpp ****                 retval = lastState;
1976:Veno-Echo.cpp ****             break;
1977:Veno-Echo.cpp ****         }
1978:Veno-Echo.cpp ****     }
1979:Veno-Echo.cpp ****     
1980:Veno-Echo.cpp ****     return retval;
1981:Veno-Echo.cpp **** }
1982:Veno-Echo.cpp **** 
1983:Veno-Echo.cpp **** double GetTapRatio(TapRatios ratio)
 2039              		.loc 20 1983 8 view .LVU527
 2040              	.LBB1003:
1984:Veno-Echo.cpp **** {
1985:Veno-Echo.cpp **** double retVal{};
 2041              		.loc 20 1985 1 view .LVU528
1986:Veno-Echo.cpp ****     switch(ratio)
 2042              		.loc 20 1986 5 view .LVU529
 2043              	.LBE1003:
 2044              	.LBE1002:
 973:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2045              		.loc 20 973 130 is_stmt 0 view .LVU530
 2046 0156 FCEEC07A 		vcvt.u32.f32	s15, s0
 2047 015a 17EE903A 		vmov	r3, s15	@ int
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 124


 2048 015e 013B     		subs	r3, r3, #1
 2049 0160 DBB2     		uxtb	r3, r3
 2050 0162 022B     		cmp	r3, #2
 2051 0164 12D9     		bls	.L97
 2052 0166 B7EE008A 		vmov.f32	s16, #1.0e+0
 2053              	.L98:
 2054              	.LVL81:
 2055              	.LBB1005:
 2056              	.LBB1004:
1987:Veno-Echo.cpp ****     {
1988:Veno-Echo.cpp ****         case QUARTER:
1989:Veno-Echo.cpp ****         retVal = 1.0;
1990:Veno-Echo.cpp ****         break;
1991:Veno-Echo.cpp **** 
1992:Veno-Echo.cpp ****         case DOTTED_EIGHT:
1993:Veno-Echo.cpp ****         retVal = 3.0/2.0;
1994:Veno-Echo.cpp ****         break;
1995:Veno-Echo.cpp **** 
1996:Veno-Echo.cpp ****         case EIGHT:
1997:Veno-Echo.cpp ****         retVal = 2.0;
1998:Veno-Echo.cpp ****         break;
1999:Veno-Echo.cpp **** 
2000:Veno-Echo.cpp ****         case TWELVE:
2001:Veno-Echo.cpp ****         retVal = 3.0;
2002:Veno-Echo.cpp ****         break;
2003:Veno-Echo.cpp **** 
2004:Veno-Echo.cpp ****         default:
2005:Veno-Echo.cpp ****         retVal = 1.0;
2006:Veno-Echo.cpp ****         break;
2007:Veno-Echo.cpp ****     }
2008:Veno-Echo.cpp **** 
2009:Veno-Echo.cpp **** return retVal;
 2057              		.loc 20 2009 1 is_stmt 1 view .LVU531
 2058              		.loc 20 2009 1 is_stmt 0 view .LVU532
 2059              	.LBE1004:
 2060              	.LBE1005:
 974:Veno-Echo.cpp ****             //save setting:
 2061              		.loc 20 974 34 view .LVU533
 2062 016a B0EE480A 		vmov.f32	s0, s16
 2063              	.LVL82:
 974:Veno-Echo.cpp ****             //save setting:
 2064              		.loc 20 974 34 view .LVU534
 2065 016e 1A48     		ldr	r0, .L111+60
 2066 0170 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 2067              	.LVL83:
 976:Veno-Echo.cpp ****         }
 2068              		.loc 20 976 13 is_stmt 1 view .LVU535
 976:Veno-Echo.cpp ****         }
 2069              		.loc 20 976 13 is_stmt 0 view .LVU536
 2070              	.LBE999:
 2071              	.LBE998:
 2072              	.LBE1009:
 2073              	.LBE1016:
1985:Veno-Echo.cpp ****     switch(ratio)
 2074              		.loc 20 1985 1 is_stmt 1 view .LVU537
1986:Veno-Echo.cpp ****     {
 2075              		.loc 20 1986 5 view .LVU538
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 125


 2076              		.loc 20 2009 1 view .LVU539
 2077              	.LBB1017:
 2078              	.LBB1010:
 2079              	.LBB1007:
 2080              	.LBB1006:
 976:Veno-Echo.cpp ****         }
 2081              		.loc 20 976 34 is_stmt 0 view .LVU540
 2082 0174 194B     		ldr	r3, .L111+64
 2083 0176 83ED018A 		vstr.32	s16, [r3, #4]
 2084              	.LBE1006:
 2085              	.LBE1007:
 2086              	.LBE1010:
 2087              	.LBE1017:
 980:Veno-Echo.cpp **** void Update_feedbackL_CV()
 2088              		.loc 20 980 1 view .LVU541
 2089 017a BDEC028B 		vldm	sp!, {d8}
 2090              		.cfi_remember_state
 2091              		.cfi_restore 80
 2092              		.cfi_restore 81
 2093              		.cfi_def_cfa_offset 8
 2094 017e 10BD     		pop	{r4, pc}
 2095              	.LVL84:
 2096              	.L109:
 2097              		.cfi_restore_state
 2098              	.LBB1018:
 2099              	.LBB1011:
 2100              	.LBB989:
 2101              	.LBB977:
1881:Veno-Echo.cpp ****     }
 2102              		.loc 20 1881 16 view .LVU542
 2103 0180 DFED147A 		vldr.32	s15, .L111+56
 2104              	.LVL85:
1881:Veno-Echo.cpp ****     }
 2105              		.loc 20 1881 16 view .LVU543
 2106 0184 7DE7     		b	.L89
 2107              	.LVL86:
 2108              	.L110:
1881:Veno-Echo.cpp ****     }
 2109              		.loc 20 1881 16 view .LVU544
 2110              	.LBE977:
 2111              	.LBE989:
 2112              	.LBB990:
 2113              	.LBB987:
 2114 0186 DFED137A 		vldr.32	s15, .L111+56
 2115 018a C4E7     		b	.L87
 2116              	.LVL87:
 2117              	.L97:
1881:Veno-Echo.cpp ****     }
 2118              		.loc 20 1881 16 view .LVU545
 2119 018c 144A     		ldr	r2, .L111+68
 2120 018e 02EBC303 		add	r3, r2, r3, lsl #3
 2121 0192 93ED008B 		vldr.64	d8, [r3]
 2122 0196 B7EEC88B 		vcvt.f32.f64	s16, d8
 2123 019a E6E7     		b	.L98
 2124              	.L112:
 2125              		.align	2
 2126              	.L111:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 126


 2127 019c 18000000 		.word	.LANCHOR4+24
 2128 01a0 00000000 		.word	.LANCHOR17
 2129 01a4 ABAAAA2A 		.word	715827883
 2130 01a8 00000000 		.word	.LANCHOR7
 2131 01ac 00000000 		.word	.LANCHOR18
 2132 01b0 00000000 		.word	.LANCHOR19
 2133 01b4 00000000 		.word	.LANCHOR20
 2134 01b8 00000000 		.word	.LANCHOR16
 2135 01bc 00000000 		.word	.LANCHOR21
 2136 01c0 00000000 		.word	.LANCHOR12
 2137 01c4 00000000 		.word	.LANCHOR1
 2138 01c8 00000000 		.word	.LANCHOR22
 2139 01cc 00000000 		.word	.LANCHOR23
 2140 01d0 0AD7A33B 		.word	1000593162
 2141 01d4 00000000 		.word	0
 2142 01d8 00000000 		.word	.LANCHOR25
 2143 01dc 00000000 		.word	.LANCHOR15
 2144 01e0 00000000 		.word	.LANCHOR24
 2145              	.LBE987:
 2146              	.LBE990:
 2147              	.LBE1011:
 2148              	.LBE1018:
 2149              		.cfi_endproc
 2150              	.LFE4315:
 2152              		.section	.text._Z19Update_feedbackL_CVv,"ax",%progbits
 2153              		.align	1
 2154              		.p2align 2,,3
 2155              		.global	_Z19Update_feedbackL_CVv
 2156              		.syntax unified
 2157              		.thumb
 2158              		.thumb_func
 2159              		.fpu fpv5-d16
 2161              	_Z19Update_feedbackL_CVv:
 2162              	.LFB4316:
 982:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 2163              		.loc 20 982 1 is_stmt 1 view -0
 2164              		.cfi_startproc
 2165              		@ args = 0, pretend = 0, frame = 0
 2166              		@ frame_needed = 0, uses_anonymous_args = 0
 983:Veno-Echo.cpp **** }
 2167              		.loc 20 983 5 view .LVU547
 982:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 2168              		.loc 20 982 1 is_stmt 0 view .LVU548
 2169 0000 08B5     		push	{r3, lr}
 2170              		.cfi_def_cfa_offset 8
 2171              		.cfi_offset 3, -8
 2172              		.cfi_offset 14, -4
 983:Veno-Echo.cpp **** }
 2173              		.loc 20 983 35 view .LVU549
 2174 0002 0221     		movs	r1, #2
 2175 0004 0348     		ldr	r0, .L115
 2176 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2177              	.LVL88:
 983:Veno-Echo.cpp **** }
 2178              		.loc 20 983 18 view .LVU550
 2179 000a 034B     		ldr	r3, .L115+4
 2180 000c 83ED000A 		vstr.32	s0, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 127


 984:Veno-Echo.cpp **** void Update_feedbackL()
 2181              		.loc 20 984 1 view .LVU551
 2182 0010 08BD     		pop	{r3, pc}
 2183              	.L116:
 2184 0012 00BF     		.align	2
 2185              	.L115:
 2186 0014 18000000 		.word	.LANCHOR4+24
 2187 0018 00000000 		.word	.LANCHOR26
 2188              		.cfi_endproc
 2189              	.LFE4316:
 2191              		.section	.text._Z16Update_feedbackLv,"ax",%progbits
 2192              		.align	1
 2193              		.p2align 2,,3
 2194              		.global	_Z16Update_feedbackLv
 2195              		.syntax unified
 2196              		.thumb
 2197              		.thumb_func
 2198              		.fpu fpv5-d16
 2200              	_Z16Update_feedbackLv:
 2201              	.LFB4317:
 986:Veno-Echo.cpp ****     static bool lastShift{};
 2202              		.loc 20 986 1 is_stmt 1 view -0
 2203              		.cfi_startproc
 2204              		@ args = 0, pretend = 0, frame = 0
 2205              		@ frame_needed = 0, uses_anonymous_args = 0
 987:Veno-Echo.cpp ****     static bool feedbackL_pickup{};
 2206              		.loc 20 987 5 view .LVU553
 988:Veno-Echo.cpp ****     static bool HPCutoff_pickup{};
 2207              		.loc 20 988 5 view .LVU554
 989:Veno-Echo.cpp **** 
 2208              		.loc 20 989 5 view .LVU555
 991:Veno-Echo.cpp **** 
 2209              		.loc 20 991 5 view .LVU556
 995:Veno-Echo.cpp **** 
 2210              		.loc 20 995 5 view .LVU557
 995:Veno-Echo.cpp **** 
 2211              		.loc 20 995 43 is_stmt 0 view .LVU558
 2212 0000 0122     		movs	r2, #1
 2213 0002 0721     		movs	r1, #7
 2214 0004 6248     		ldr	r0, .L145
 986:Veno-Echo.cpp ****     static bool lastShift{};
 2215              		.loc 20 986 1 view .LVU559
 2216 0006 10B5     		push	{r4, lr}
 2217              		.cfi_def_cfa_offset 8
 2218              		.cfi_offset 4, -8
 2219              		.cfi_offset 14, -4
 2220 0008 2DED028B 		vpush.64	{d8}
 2221              		.cfi_def_cfa_offset 16
 2222              		.cfi_offset 80, -16
 2223              		.cfi_offset 81, -12
 995:Veno-Echo.cpp **** 
 2224              		.loc 20 995 43 view .LVU560
 2225 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2226              	.LVL89:
 2227              	.LBB1019:
 997:Veno-Echo.cpp ****     {   
 2228              		.loc 20 997 9 view .LVU561
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 128


 2229 0010 604B     		ldr	r3, .L145+4
 2230              	.LVL90:
 997:Veno-Echo.cpp ****     {   
 2231              		.loc 20 997 9 view .LVU562
 2232              	.LBE1019:
 997:Veno-Echo.cpp ****     {   
 2233              		.loc 20 997 5 is_stmt 1 view .LVU563
 2234              	.LBB1055:
 2235              	.LBB1020:
1001:Veno-Echo.cpp ****         {
 2236              		.loc 20 1001 19 is_stmt 0 view .LVU564
 2237 0012 614A     		ldr	r2, .L145+8
 2238              	.LBE1020:
 997:Veno-Echo.cpp ****     {   
 2239              		.loc 20 997 5 view .LVU565
 2240 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2241 0016 002B     		cmp	r3, #0
 2242 0018 3DD1     		bne	.L118
 2243              	.LBB1043:
 999:Veno-Echo.cpp ****         //update pickup
 2244              		.loc 20 999 9 is_stmt 1 view .LVU566
1001:Veno-Echo.cpp ****         {
 2245              		.loc 20 1001 9 view .LVU567
 2246 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2247 001c 0029     		cmp	r1, #0
 2248 001e 47D0     		beq	.L119
1003:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 2249              		.loc 20 1003 13 view .LVU568
1004:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2250              		.loc 20 1004 30 is_stmt 0 view .LVU569
 2251 0020 5E48     		ldr	r0, .L145+12
1005:Veno-Echo.cpp ****         } 
 2252              		.loc 20 1005 27 view .LVU570
 2253 0022 5F49     		ldr	r1, .L145+16
1003:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 2254              		.loc 20 1003 23 view .LVU571
 2255 0024 1370     		strb	r3, [r2]
1004:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2256              		.loc 20 1004 13 is_stmt 1 view .LVU572
1004:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2257              		.loc 20 1004 30 is_stmt 0 view .LVU573
 2258 0026 0370     		strb	r3, [r0]
1005:Veno-Echo.cpp ****         } 
 2259              		.loc 20 1005 13 is_stmt 1 view .LVU574
1005:Veno-Echo.cpp ****         } 
 2260              		.loc 20 1005 27 is_stmt 0 view .LVU575
 2261 0028 81ED000A 		vstr.32	s0, [r1]
 2262              	.L120:
1018:Veno-Echo.cpp **** 
 2263              		.loc 20 1018 9 is_stmt 1 view .LVU576
 2264              	.LVL91:
1020:Veno-Echo.cpp ****         {
 2265              		.loc 20 1020 9 view .LVU577
1028:Veno-Echo.cpp ****         }
 2266              		.loc 20 1028 13 view .LVU578
 2267              	.LBB1021:
 2268              	.LBI1021:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 129


1874:Veno-Echo.cpp **** {
 2269              		.loc 20 1874 7 view .LVU579
 2270              	.LBB1022:
1876:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2271              		.loc 20 1876 5 view .LVU580
1877:Veno-Echo.cpp **** 
 2272              		.loc 20 1877 5 view .LVU581
 2273              	.LBE1022:
 2274              	.LBE1021:
1028:Veno-Echo.cpp ****         }
 2275              		.loc 20 1028 41 is_stmt 0 view .LVU582
 2276 002c 5D4A     		ldr	r2, .L145+20
 2277              	.LBB1026:
 2278              	.LBB1023:
1877:Veno-Echo.cpp **** 
 2279              		.loc 20 1877 39 view .LVU583
 2280 002e F7EE006A 		vmov.f32	s13, #1.0e+0
1877:Veno-Echo.cpp **** 
 2281              		.loc 20 1877 49 view .LVU584
 2282 0032 F6EE005A 		vmov.f32	s11, #5.0e-1
 2283              	.LBE1023:
 2284              	.LBE1026:
1028:Veno-Echo.cpp ****         }
 2285              		.loc 20 1028 41 view .LVU585
 2286 0036 5C4B     		ldr	r3, .L145+24
 2287              	.LBB1027:
 2288              	.LBB1024:
1877:Veno-Echo.cpp **** 
 2289              		.loc 20 1877 39 view .LVU586
 2290 0038 92ED007A 		vldr.32	s14, [r2]
1877:Veno-Echo.cpp **** 
 2291              		.loc 20 1877 12 view .LVU587
 2292 003c B0EE006A 		vmov.f32	s12, #2.0e+0
 2293 0040 D3ED007A 		vldr.32	s15, [r3]
1877:Veno-Echo.cpp **** 
 2294              		.loc 20 1877 39 view .LVU588
 2295 0044 36EEC77A 		vsub.f32	s14, s13, s14
1877:Veno-Echo.cpp **** 
 2296              		.loc 20 1877 49 view .LVU589
 2297 0048 37EE657A 		vsub.f32	s14, s14, s11
1877:Veno-Echo.cpp **** 
 2298              		.loc 20 1877 12 view .LVU590
 2299 004c E7EE067A 		vfma.f32	s15, s14, s12
 2300              	.LVL92:
1879:Veno-Echo.cpp ****     {
 2301              		.loc 20 1879 5 is_stmt 1 view .LVU591
 2302 0050 F5EEC07A 		vcmpe.f32	s15, #0
 2303 0054 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2304 0058 00F19380 		bmi	.L143
1884:Veno-Echo.cpp ****     {
 2305              		.loc 20 1884 5 view .LVU592
1886:Veno-Echo.cpp ****     }
 2306              		.loc 20 1886 16 is_stmt 0 view .LVU593
 2307 005c F4EE667A 		vcmp.f32	s15, s13
 2308 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2309 0064 76FEA77A 		vselgt.f32	s15, s13, s15
 2310              	.LVL93:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 130


 2311              	.L125:
1886:Veno-Echo.cpp ****     }
 2312              		.loc 20 1886 16 view .LVU594
 2313              	.LBE1024:
 2314              	.LBE1027:
1031:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2315              		.loc 20 1031 9 is_stmt 1 view .LVU595
1031:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2316              		.loc 20 1031 37 is_stmt 0 view .LVU596
 2317 0068 B0EE670A 		vmov.f32	s0, s15
 2318              	.LVL94:
1031:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2319              		.loc 20 1031 37 view .LVU597
 2320 006c 0020     		movs	r0, #0
 2321 006e B7EE041A 		vmov.f32	s2, #1.25e+0
 2322 0072 DFED4E0A 		vldr.32	s1, .L145+28
 2323 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2324              	.LVL95:
1032:Veno-Echo.cpp ****     }
 2325              		.loc 20 1032 9 is_stmt 1 view .LVU598
 2326              	.LBB1028:
 2327              	.LBI1028:
 2328              		.file 23 "../DaisySP/Source/Utility/dsp.h"
   1:../DaisySP/Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../DaisySP/Source/Utility/dsp.h **** */
   3:../DaisySP/Source/Utility/dsp.h **** #pragma once
   4:../DaisySP/Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
   5:../DaisySP/Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../DaisySP/Source/Utility/dsp.h **** #include <cassert>
   7:../DaisySP/Source/Utility/dsp.h **** #include <cstdint>
   8:../DaisySP/Source/Utility/dsp.h **** #include <random>
   9:../DaisySP/Source/Utility/dsp.h **** #include <cmath>
  10:../DaisySP/Source/Utility/dsp.h **** 
  11:../DaisySP/Source/Utility/dsp.h **** /** PIs
  12:../DaisySP/Source/Utility/dsp.h **** */
  13:../DaisySP/Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../DaisySP/Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../DaisySP/Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../DaisySP/Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../DaisySP/Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  18:../DaisySP/Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../DaisySP/Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../DaisySP/Source/Utility/dsp.h **** 
  21:../DaisySP/Source/Utility/dsp.h **** namespace daisysp
  22:../DaisySP/Source/Utility/dsp.h **** {
  23:../DaisySP/Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../DaisySP/Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../DaisySP/Source/Utility/dsp.h **** 
  26:../DaisySP/Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../DaisySP/Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../DaisySP/Source/Utility/dsp.h **** 
  29:../DaisySP/Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../DaisySP/Source/Utility/dsp.h **** c/o stephen mccaul
  31:../DaisySP/Source/Utility/dsp.h **** */
  32:../DaisySP/Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../DaisySP/Source/Utility/dsp.h **** {
  34:../DaisySP/Source/Utility/dsp.h ****     float r;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 131


  35:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  36:../DaisySP/Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../DaisySP/Source/Utility/dsp.h **** #else
  38:../DaisySP/Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  40:../DaisySP/Source/Utility/dsp.h ****     return r;
  41:../DaisySP/Source/Utility/dsp.h **** }
  42:../DaisySP/Source/Utility/dsp.h **** 
  43:../DaisySP/Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../DaisySP/Source/Utility/dsp.h **** {
  45:../DaisySP/Source/Utility/dsp.h ****     float r;
  46:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  47:../DaisySP/Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  48:../DaisySP/Source/Utility/dsp.h **** #else
  49:../DaisySP/Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  50:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  51:../DaisySP/Source/Utility/dsp.h ****     return r;
  52:../DaisySP/Source/Utility/dsp.h **** }
  53:../DaisySP/Source/Utility/dsp.h **** 
  54:../DaisySP/Source/Utility/dsp.h **** /** quick fp clamp
  55:../DaisySP/Source/Utility/dsp.h **** */
  56:../DaisySP/Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../DaisySP/Source/Utility/dsp.h **** {
  58:../DaisySP/Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../DaisySP/Source/Utility/dsp.h **** }
  60:../DaisySP/Source/Utility/dsp.h **** 
  61:../DaisySP/Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  62:../DaisySP/Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../DaisySP/Source/Utility/dsp.h **** These are approximations
  64:../DaisySP/Source/Utility/dsp.h **** */
  65:../DaisySP/Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../DaisySP/Source/Utility/dsp.h **** {
  67:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  68:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  70:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../DaisySP/Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  74:../DaisySP/Source/Utility/dsp.h ****     return f;
  75:../DaisySP/Source/Utility/dsp.h **** }
  76:../DaisySP/Source/Utility/dsp.h **** 
  77:../DaisySP/Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  78:../DaisySP/Source/Utility/dsp.h **** {
  79:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  80:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  82:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../DaisySP/Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  86:../DaisySP/Source/Utility/dsp.h ****     return f;
  87:../DaisySP/Source/Utility/dsp.h **** }
  88:../DaisySP/Source/Utility/dsp.h **** 
  89:../DaisySP/Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../DaisySP/Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../DaisySP/Source/Utility/dsp.h **** */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 132


  92:../DaisySP/Source/Utility/dsp.h **** inline float pow10f(float f)
  93:../DaisySP/Source/Utility/dsp.h **** {
  94:../DaisySP/Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../DaisySP/Source/Utility/dsp.h **** }
  96:../DaisySP/Source/Utility/dsp.h **** 
  97:../DaisySP/Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../DaisySP/Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../DaisySP/Source/Utility/dsp.h **** */
 100:../DaisySP/Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../DaisySP/Source/Utility/dsp.h **** {
 102:../DaisySP/Source/Utility/dsp.h ****     float frac;
 103:../DaisySP/Source/Utility/dsp.h ****     int   exp;
 104:../DaisySP/Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../DaisySP/Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 107:../DaisySP/Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 109:../DaisySP/Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 111:../DaisySP/Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../DaisySP/Source/Utility/dsp.h ****     f += exp;
 113:../DaisySP/Source/Utility/dsp.h ****     return (f);
 114:../DaisySP/Source/Utility/dsp.h **** }
 115:../DaisySP/Source/Utility/dsp.h **** 
 116:../DaisySP/Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../DaisySP/Source/Utility/dsp.h **** {
 118:../DaisySP/Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 119:../DaisySP/Source/Utility/dsp.h **** }
 120:../DaisySP/Source/Utility/dsp.h **** 
 121:../DaisySP/Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../DaisySP/Source/Utility/dsp.h **** */
 123:../DaisySP/Source/Utility/dsp.h **** inline float mtof(float m)
 124:../DaisySP/Source/Utility/dsp.h **** {
 125:../DaisySP/Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 126:../DaisySP/Source/Utility/dsp.h **** }
 127:../DaisySP/Source/Utility/dsp.h **** 
 128:../DaisySP/Source/Utility/dsp.h **** 
 129:../DaisySP/Source/Utility/dsp.h **** /** one pole lpf
 130:../DaisySP/Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 131:../DaisySP/Source/Utility/dsp.h **** calls to properly filter the signal
 132:../DaisySP/Source/Utility/dsp.h **** coeff can be calculated:
 133:../DaisySP/Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 134:../DaisySP/Source/Utility/dsp.h **** */
 135:../DaisySP/Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 2329              		.loc 23 135 13 view .LVU599
 2330              	.LBB1029:
 136:../DaisySP/Source/Utility/dsp.h **** {
 137:../DaisySP/Source/Utility/dsp.h ****     out += coeff * (in - out);
 2331              		.loc 23 137 5 view .LVU600
 2332              		.loc 23 137 9 is_stmt 0 view .LVU601
 2333 007a 4D4B     		ldr	r3, .L145+32
 2334 007c 9FED4D7A 		vldr.32	s14, .L145+36
 2335 0080 D3ED007A 		vldr.32	s15, [r3]
 2336              		.loc 23 137 24 view .LVU602
 2337 0084 30EE670A 		vsub.f32	s0, s0, s15
 2338              	.LVL96:
 2339              		.loc 23 137 24 view .LVU603
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 133


 2340              	.LBE1029:
 2341              	.LBE1028:
 2342              	.LBE1043:
 2343              	.LBE1055:
1067:Veno-Echo.cpp **** 
 2344              		.loc 20 1067 1 view .LVU604
 2345 0088 BDEC028B 		vldm	sp!, {d8}
 2346              		.cfi_remember_state
 2347              		.cfi_restore 80
 2348              		.cfi_restore 81
 2349              		.cfi_def_cfa_offset 8
 2350              	.LBB1056:
 2351              	.LBB1044:
 2352              	.LBB1031:
 2353              	.LBB1030:
 2354              		.loc 23 137 9 view .LVU605
 2355 008c E0EE077A 		vfma.f32	s15, s0, s14
 2356 0090 C3ED007A 		vstr.32	s15, [r3]
 2357              	.LBE1030:
 2358              	.LBE1031:
 2359              	.LBE1044:
 2360              	.LBE1056:
1067:Veno-Echo.cpp **** 
 2361              		.loc 20 1067 1 view .LVU606
 2362 0094 10BD     		pop	{r4, pc}
 2363              	.LVL97:
 2364              	.L118:
 2365              		.cfi_restore_state
 2366              	.LBB1057:
 2367              	.LBB1045:
1036:Veno-Echo.cpp **** 
 2368              		.loc 20 1036 9 is_stmt 1 view .LVU607
1038:Veno-Echo.cpp ****         {
 2369              		.loc 20 1038 9 view .LVU608
 2370 0096 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2371 0098 002B     		cmp	r3, #0
 2372 009a 3ED1     		bne	.L128
1040:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2373              		.loc 20 1040 13 view .LVU609
1040:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2374              		.loc 20 1040 23 is_stmt 0 view .LVU610
 2375 009c 0124     		movs	r4, #1
1041:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2376              		.loc 20 1041 29 view .LVU611
 2377 009e 4648     		ldr	r0, .L145+40
1042:Veno-Echo.cpp ****         }
 2378              		.loc 20 1042 26 view .LVU612
 2379 00a0 4649     		ldr	r1, .L145+44
1040:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2380              		.loc 20 1040 23 view .LVU613
 2381 00a2 1470     		strb	r4, [r2]
1041:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2382              		.loc 20 1041 13 is_stmt 1 view .LVU614
1041:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2383              		.loc 20 1041 29 is_stmt 0 view .LVU615
 2384 00a4 0370     		strb	r3, [r0]
1042:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 134


 2385              		.loc 20 1042 13 is_stmt 1 view .LVU616
1042:Veno-Echo.cpp ****         }
 2386              		.loc 20 1042 26 is_stmt 0 view .LVU617
 2387 00a6 81ED000A 		vstr.32	s0, [r1]
 2388              	.L117:
1042:Veno-Echo.cpp ****         }
 2389              		.loc 20 1042 26 view .LVU618
 2390              	.LBE1045:
 2391              	.LBE1057:
1067:Veno-Echo.cpp **** 
 2392              		.loc 20 1067 1 view .LVU619
 2393 00aa BDEC028B 		vldm	sp!, {d8}
 2394              		.cfi_remember_state
 2395              		.cfi_restore 80
 2396              		.cfi_restore 81
 2397              		.cfi_def_cfa_offset 8
 2398 00ae 10BD     		pop	{r4, pc}
 2399              	.L119:
 2400              		.cfi_restore_state
 2401              	.LBB1058:
 2402              	.LBB1052:
1009:Veno-Echo.cpp ****             {
 2403              		.loc 20 1009 13 is_stmt 1 view .LVU620
1009:Veno-Echo.cpp ****             {
 2404              		.loc 20 1009 16 is_stmt 0 view .LVU621
 2405 00b0 3A4B     		ldr	r3, .L145+12
1009:Veno-Echo.cpp ****             {
 2406              		.loc 20 1009 13 view .LVU622
 2407 00b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2408 00b4 7AB9     		cbnz	r2, .L121
1011:Veno-Echo.cpp ****                 {
 2409              		.loc 20 1011 17 is_stmt 1 view .LVU623
 2410              	.LVL98:
 2411              	.LBB1032:
 2412              	.LBI1032:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2413              		.loc 21 75 3 view .LVU624
 2414              	.LBB1033:
 2415              		.loc 21 76 5 view .LVU625
 2416              		.loc 21 76 5 is_stmt 0 view .LVU626
 2417              	.LBE1033:
 2418              	.LBE1032:
1011:Veno-Echo.cpp ****                 {
 2419              		.loc 20 1011 23 view .LVU627
 2420 00b6 3A4A     		ldr	r2, .L145+16
1011:Veno-Echo.cpp ****                 {
 2421              		.loc 20 1011 17 view .LVU628
 2422 00b8 9FED417A 		vldr.32	s14, .L145+48
1011:Veno-Echo.cpp ****                 {
 2423              		.loc 20 1011 23 view .LVU629
 2424 00bc D2ED007A 		vldr.32	s15, [r2]
 2425 00c0 70EE677A 		vsub.f32	s15, s0, s15
 2426              	.LBB1035:
 2427              	.LBB1034:
 2428              		.loc 21 76 31 view .LVU630
 2429 00c4 F0EEE77A 		vabs.f32	s15, s15
 2430              	.LBE1034:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 135


 2431              	.LBE1035:
1011:Veno-Echo.cpp ****                 {
 2432              		.loc 20 1011 17 view .LVU631
 2433 00c8 F4EEC77A 		vcmpe.f32	s15, s14
 2434 00cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2435 00d0 ACDD     		ble	.L120
1013:Veno-Echo.cpp ****                 }
 2436              		.loc 20 1013 21 is_stmt 1 view .LVU632
1013:Veno-Echo.cpp ****                 }
 2437              		.loc 20 1013 38 is_stmt 0 view .LVU633
 2438 00d2 0122     		movs	r2, #1
 2439 00d4 1A70     		strb	r2, [r3]
 2440              	.L121:
1018:Veno-Echo.cpp **** 
 2441              		.loc 20 1018 9 is_stmt 1 view .LVU634
 2442              	.LVL99:
1020:Veno-Echo.cpp ****         {
 2443              		.loc 20 1020 9 view .LVU635
1022:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 2444              		.loc 20 1022 13 view .LVU636
 2445              	.LBB1036:
 2446              	.LBI1036:
1874:Veno-Echo.cpp **** {
 2447              		.loc 20 1874 7 view .LVU637
 2448              	.LBB1037:
1876:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2449              		.loc 20 1876 5 view .LVU638
1877:Veno-Echo.cpp **** 
 2450              		.loc 20 1877 5 view .LVU639
 2451              	.LBE1037:
 2452              	.LBE1036:
1022:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 2453              		.loc 20 1022 41 is_stmt 0 view .LVU640
 2454 00d6 334B     		ldr	r3, .L145+20
 2455              	.LBB1040:
 2456              	.LBB1038:
1877:Veno-Echo.cpp **** 
 2457              		.loc 20 1877 39 view .LVU641
 2458 00d8 B7EE007A 		vmov.f32	s14, #1.0e+0
1877:Veno-Echo.cpp **** 
 2459              		.loc 20 1877 49 view .LVU642
 2460 00dc B6EE006A 		vmov.f32	s12, #5.0e-1
1877:Veno-Echo.cpp **** 
 2461              		.loc 20 1877 39 view .LVU643
 2462 00e0 D3ED007A 		vldr.32	s15, [r3]
1877:Veno-Echo.cpp **** 
 2463              		.loc 20 1877 12 view .LVU644
 2464 00e4 F0EE006A 		vmov.f32	s13, #2.0e+0
1877:Veno-Echo.cpp **** 
 2465              		.loc 20 1877 39 view .LVU645
 2466 00e8 77EE677A 		vsub.f32	s15, s14, s15
1877:Veno-Echo.cpp **** 
 2467              		.loc 20 1877 49 view .LVU646
 2468 00ec 77EEC67A 		vsub.f32	s15, s15, s12
1877:Veno-Echo.cpp **** 
 2469              		.loc 20 1877 12 view .LVU647
 2470 00f0 B0EE406A 		vmov.f32	s12, s0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 136


 2471 00f4 A7EEA66A 		vfma.f32	s12, s15, s13
1879:Veno-Echo.cpp ****     {
 2472              		.loc 20 1879 5 view .LVU648
 2473 00f8 B5EEC06A 		vcmpe.f32	s12, #0
1877:Veno-Echo.cpp **** 
 2474              		.loc 20 1877 12 view .LVU649
 2475 00fc F0EE467A 		vmov.f32	s15, s12
 2476              	.LVL100:
1879:Veno-Echo.cpp ****     {
 2477              		.loc 20 1879 5 is_stmt 1 view .LVU650
 2478 0100 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2479 0104 40D4     		bmi	.L144
1884:Veno-Echo.cpp ****     {
 2480              		.loc 20 1884 5 view .LVU651
1886:Veno-Echo.cpp ****     }
 2481              		.loc 20 1886 16 is_stmt 0 view .LVU652
 2482 0106 F4EE477A 		vcmp.f32	s15, s14
 2483 010a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2484 010e 77FE277A 		vselgt.f32	s15, s14, s15
 2485              	.L123:
 2486              	.LVL101:
1889:Veno-Echo.cpp **** }
 2487              		.loc 20 1889 5 is_stmt 1 view .LVU653
1889:Veno-Echo.cpp **** }
 2488              		.loc 20 1889 5 is_stmt 0 view .LVU654
 2489              	.LBE1038:
 2490              	.LBE1040:
1023:Veno-Echo.cpp ****         }
 2491              		.loc 20 1023 13 is_stmt 1 view .LVU655
1023:Veno-Echo.cpp ****         }
 2492              		.loc 20 1023 28 is_stmt 0 view .LVU656
 2493 0112 254B     		ldr	r3, .L145+24
 2494 0114 83ED000A 		vstr.32	s0, [r3]
 2495 0118 A6E7     		b	.L125
 2496              	.LVL102:
 2497              	.L128:
1023:Veno-Echo.cpp ****         }
 2498              		.loc 20 1023 28 view .LVU657
 2499              	.LBE1052:
 2500              	.LBB1053:
1047:Veno-Echo.cpp ****             {
 2501              		.loc 20 1047 13 is_stmt 1 view .LVU658
1047:Veno-Echo.cpp ****             {
 2502              		.loc 20 1047 16 is_stmt 0 view .LVU659
 2503 011a 274B     		ldr	r3, .L145+40
1047:Veno-Echo.cpp ****             {
 2504              		.loc 20 1047 13 view .LVU660
 2505 011c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2506 011e 7AB9     		cbnz	r2, .L130
1049:Veno-Echo.cpp ****                 {
 2507              		.loc 20 1049 17 is_stmt 1 view .LVU661
 2508              	.LVL103:
 2509              	.LBB1046:
 2510              	.LBI1046:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2511              		.loc 21 75 3 view .LVU662
 2512              	.LBB1047:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 137


 2513              		.loc 21 76 5 view .LVU663
 2514              		.loc 21 76 5 is_stmt 0 view .LVU664
 2515              	.LBE1047:
 2516              	.LBE1046:
1049:Veno-Echo.cpp ****                 {
 2517              		.loc 20 1049 23 view .LVU665
 2518 0120 264A     		ldr	r2, .L145+44
1049:Veno-Echo.cpp ****                 {
 2519              		.loc 20 1049 17 view .LVU666
 2520 0122 9FED277A 		vldr.32	s14, .L145+48
1049:Veno-Echo.cpp ****                 {
 2521              		.loc 20 1049 23 view .LVU667
 2522 0126 D2ED007A 		vldr.32	s15, [r2]
 2523 012a 70EE677A 		vsub.f32	s15, s0, s15
 2524              	.LBB1049:
 2525              	.LBB1048:
 2526              		.loc 21 76 31 view .LVU668
 2527 012e F0EEE77A 		vabs.f32	s15, s15
 2528              	.LBE1048:
 2529              	.LBE1049:
1049:Veno-Echo.cpp ****                 {
 2530              		.loc 20 1049 17 view .LVU669
 2531 0132 F4EEC77A 		vcmpe.f32	s15, s14
 2532 0136 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2533 013a B6DD     		ble	.L117
1051:Veno-Echo.cpp ****                 }
 2534              		.loc 20 1051 21 is_stmt 1 view .LVU670
1051:Veno-Echo.cpp ****                 }
 2535              		.loc 20 1051 37 is_stmt 0 view .LVU671
 2536 013c 0122     		movs	r2, #1
 2537 013e 1A70     		strb	r2, [r3]
 2538              	.L130:
1056:Veno-Echo.cpp ****         {
 2539              		.loc 20 1056 9 is_stmt 1 view .LVU672
 2540              	.LBB1050:
 2541              	.LBB1051:
1058:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
 2542              		.loc 20 1058 13 view .LVU673
 2543              	.LVL104:
1059:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2544              		.loc 20 1059 13 view .LVU674
1059:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2545              		.loc 20 1059 29 is_stmt 0 view .LVU675
 2546 0140 9FED201A 		vldr.32	s2, .L145+52
 2547 0144 0120     		movs	r0, #1
 2548 0146 DFED200A 		vldr.32	s1, .L145+56
 2549 014a FFF7FEFF 		bl	_Z5scalefff9CurveType
 2550              	.LVL105:
1059:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2551              		.loc 20 1059 29 view .LVU676
 2552 014e B0EE408A 		vmov.f32	s16, s0
 2553              	.LVL106:
1060:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 2554              		.loc 20 1060 13 is_stmt 1 view .LVU677
1060:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 2555              		.loc 20 1060 26 is_stmt 0 view .LVU678
 2556 0152 1E48     		ldr	r0, .L145+60
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 138


 2557 0154 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2558              	.LVL107:
1061:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 2559              		.loc 20 1061 13 is_stmt 1 view .LVU679
1061:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 2560              		.loc 20 1061 26 is_stmt 0 view .LVU680
 2561 0158 1D48     		ldr	r0, .L145+64
 2562 015a B0EE480A 		vmov.f32	s0, s16
 2563 015e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2564              	.LVL108:
1062:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 2565              		.loc 20 1062 13 is_stmt 1 view .LVU681
1062:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 2566              		.loc 20 1062 31 is_stmt 0 view .LVU682
 2567 0162 B0EE480A 		vmov.f32	s0, s16
 2568 0166 1B48     		ldr	r0, .L145+68
 2569 0168 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2570              	.LVL109:
1063:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 2571              		.loc 20 1063 13 is_stmt 1 view .LVU683
1063:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 2572              		.loc 20 1063 31 is_stmt 0 view .LVU684
 2573 016c B0EE480A 		vmov.f32	s0, s16
 2574 0170 1948     		ldr	r0, .L145+72
 2575 0172 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2576              	.LVL110:
1064:Veno-Echo.cpp ****         }
 2577              		.loc 20 1064 13 is_stmt 1 view .LVU685
1064:Veno-Echo.cpp ****         }
 2578              		.loc 20 1064 35 is_stmt 0 view .LVU686
 2579 0176 194B     		ldr	r3, .L145+76
 2580 0178 83ED048A 		vstr.32	s16, [r3, #16]
 2581              	.LBE1051:
 2582              	.LBE1050:
 2583              	.LBE1053:
 2584              	.LBE1058:
1067:Veno-Echo.cpp **** 
 2585              		.loc 20 1067 1 view .LVU687
 2586 017c BDEC028B 		vldm	sp!, {d8}
 2587              		.cfi_remember_state
 2588              		.cfi_restore 80
 2589              		.cfi_restore 81
 2590              		.cfi_def_cfa_offset 8
 2591              	.LVL111:
1067:Veno-Echo.cpp **** 
 2592              		.loc 20 1067 1 view .LVU688
 2593 0180 10BD     		pop	{r4, pc}
 2594              	.LVL112:
 2595              	.L143:
 2596              		.cfi_restore_state
 2597              	.LBB1059:
 2598              	.LBB1054:
 2599              	.LBB1041:
 2600              	.LBB1025:
1881:Veno-Echo.cpp ****     }
 2601              		.loc 20 1881 16 view .LVU689
 2602 0182 DFED0A7A 		vldr.32	s15, .L145+28
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 139


 2603              	.LVL113:
1881:Veno-Echo.cpp ****     }
 2604              		.loc 20 1881 16 view .LVU690
 2605 0186 6FE7     		b	.L125
 2606              	.LVL114:
 2607              	.L144:
1881:Veno-Echo.cpp ****     }
 2608              		.loc 20 1881 16 view .LVU691
 2609              	.LBE1025:
 2610              	.LBE1041:
 2611              	.LBB1042:
 2612              	.LBB1039:
 2613 0188 DFED087A 		vldr.32	s15, .L145+28
 2614 018c C1E7     		b	.L123
 2615              	.L146:
 2616 018e 00BF     		.align	2
 2617              	.L145:
 2618 0190 18000000 		.word	.LANCHOR4+24
 2619 0194 00000000 		.word	.LANCHOR7
 2620 0198 00000000 		.word	.LANCHOR27
 2621 019c 00000000 		.word	.LANCHOR28
 2622 01a0 00000000 		.word	.LANCHOR29
 2623 01a4 00000000 		.word	.LANCHOR26
 2624 01a8 00000000 		.word	.LANCHOR30
 2625 01ac 00000000 		.word	0
 2626 01b0 00000000 		.word	.LANCHOR31
 2627 01b4 6F12033D 		.word	1023611503
 2628 01b8 00000000 		.word	.LANCHOR32
 2629 01bc 00000000 		.word	.LANCHOR33
 2630 01c0 0AD7A33B 		.word	1000593162
 2631 01c4 00004844 		.word	1145569280
 2632 01c8 0000C842 		.word	1120403456
 2633 01cc 00000000 		.word	.LANCHOR34
 2634 01d0 00000000 		.word	.LANCHOR35
 2635 01d4 00000000 		.word	.LANCHOR36
 2636 01d8 00000000 		.word	.LANCHOR37
 2637 01dc 00000000 		.word	.LANCHOR15
 2638              	.LBE1039:
 2639              	.LBE1042:
 2640              	.LBE1054:
 2641              	.LBE1059:
 2642              		.cfi_endproc
 2643              	.LFE4317:
 2645              		.section	.text._Z19Update_feedbackR_CVv,"ax",%progbits
 2646              		.align	1
 2647              		.p2align 2,,3
 2648              		.global	_Z19Update_feedbackR_CVv
 2649              		.syntax unified
 2650              		.thumb
 2651              		.thumb_func
 2652              		.fpu fpv5-d16
 2654              	_Z19Update_feedbackR_CVv:
 2655              	.LFB4318:
1070:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 2656              		.loc 20 1070 1 is_stmt 1 view -0
 2657              		.cfi_startproc
 2658              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 140


 2659              		@ frame_needed = 0, uses_anonymous_args = 0
1071:Veno-Echo.cpp **** }
 2660              		.loc 20 1071 5 view .LVU693
1070:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 2661              		.loc 20 1070 1 is_stmt 0 view .LVU694
 2662 0000 08B5     		push	{r3, lr}
 2663              		.cfi_def_cfa_offset 8
 2664              		.cfi_offset 3, -8
 2665              		.cfi_offset 14, -4
1071:Veno-Echo.cpp **** }
 2666              		.loc 20 1071 35 view .LVU695
 2667 0002 0321     		movs	r1, #3
 2668 0004 0348     		ldr	r0, .L149
 2669 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2670              	.LVL115:
1071:Veno-Echo.cpp **** }
 2671              		.loc 20 1071 18 view .LVU696
 2672 000a 034B     		ldr	r3, .L149+4
 2673 000c 83ED000A 		vstr.32	s0, [r3]
1072:Veno-Echo.cpp **** 
 2674              		.loc 20 1072 1 view .LVU697
 2675 0010 08BD     		pop	{r3, pc}
 2676              	.L150:
 2677 0012 00BF     		.align	2
 2678              	.L149:
 2679 0014 18000000 		.word	.LANCHOR4+24
 2680 0018 00000000 		.word	.LANCHOR38
 2681              		.cfi_endproc
 2682              	.LFE4318:
 2684              		.section	.text._Z16Update_feedbackRv,"ax",%progbits
 2685              		.align	1
 2686              		.p2align 2,,3
 2687              		.global	_Z16Update_feedbackRv
 2688              		.syntax unified
 2689              		.thumb
 2690              		.thumb_func
 2691              		.fpu fpv5-d16
 2693              	_Z16Update_feedbackRv:
 2694              	.LFB4319:
1075:Veno-Echo.cpp ****     static bool lastShift{};
 2695              		.loc 20 1075 1 is_stmt 1 view -0
 2696              		.cfi_startproc
 2697              		@ args = 0, pretend = 0, frame = 0
 2698              		@ frame_needed = 0, uses_anonymous_args = 0
1076:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
 2699              		.loc 20 1076 5 view .LVU699
1077:Veno-Echo.cpp ****     static bool LPCutoff_pickup{};
 2700              		.loc 20 1077 5 view .LVU700
1078:Veno-Echo.cpp **** 
 2701              		.loc 20 1078 5 view .LVU701
1080:Veno-Echo.cpp **** 
 2702              		.loc 20 1080 5 view .LVU702
1083:Veno-Echo.cpp **** 
 2703              		.loc 20 1083 5 view .LVU703
1083:Veno-Echo.cpp **** 
 2704              		.loc 20 1083 43 is_stmt 0 view .LVU704
 2705 0000 0422     		movs	r2, #4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 141


 2706 0002 0721     		movs	r1, #7
 2707 0004 6548     		ldr	r0, .L181
1075:Veno-Echo.cpp ****     static bool lastShift{};
 2708              		.loc 20 1075 1 view .LVU705
 2709 0006 10B5     		push	{r4, lr}
 2710              		.cfi_def_cfa_offset 8
 2711              		.cfi_offset 4, -8
 2712              		.cfi_offset 14, -4
 2713 0008 2DED028B 		vpush.64	{d8}
 2714              		.cfi_def_cfa_offset 16
 2715              		.cfi_offset 80, -16
 2716              		.cfi_offset 81, -12
1083:Veno-Echo.cpp **** 
 2717              		.loc 20 1083 43 view .LVU706
 2718 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2719              	.LVL116:
 2720              	.LBB1060:
1085:Veno-Echo.cpp ****     {   
 2721              		.loc 20 1085 9 view .LVU707
 2722 0010 634B     		ldr	r3, .L181+4
 2723              	.LVL117:
1085:Veno-Echo.cpp ****     {   
 2724              		.loc 20 1085 9 view .LVU708
 2725              	.LBE1060:
1085:Veno-Echo.cpp ****     {   
 2726              		.loc 20 1085 5 is_stmt 1 view .LVU709
 2727              	.LBB1094:
 2728              	.LBB1061:
1089:Veno-Echo.cpp ****         {
 2729              		.loc 20 1089 19 is_stmt 0 view .LVU710
 2730 0012 644A     		ldr	r2, .L181+8
 2731              	.LBE1061:
1085:Veno-Echo.cpp ****     {   
 2732              		.loc 20 1085 5 view .LVU711
 2733 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2734 0016 002B     		cmp	r3, #0
 2735 0018 3FD1     		bne	.L152
 2736              	.LBB1082:
1087:Veno-Echo.cpp ****         //update pickup
 2737              		.loc 20 1087 9 is_stmt 1 view .LVU712
1089:Veno-Echo.cpp ****         {
 2738              		.loc 20 1089 9 view .LVU713
 2739 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2740 001c 0029     		cmp	r1, #0
 2741 001e 49D0     		beq	.L153
1091:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
 2742              		.loc 20 1091 13 view .LVU714
1092:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
 2743              		.loc 20 1092 30 is_stmt 0 view .LVU715
 2744 0020 614C     		ldr	r4, .L181+12
1093:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2745              		.loc 20 1093 28 view .LVU716
 2746 0022 6248     		ldr	r0, .L181+16
1094:Veno-Echo.cpp ****         } 
 2747              		.loc 20 1094 27 view .LVU717
 2748 0024 6249     		ldr	r1, .L181+20
1091:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 142


 2749              		.loc 20 1091 23 view .LVU718
 2750 0026 1370     		strb	r3, [r2]
1092:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
 2751              		.loc 20 1092 13 is_stmt 1 view .LVU719
1092:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
 2752              		.loc 20 1092 30 is_stmt 0 view .LVU720
 2753 0028 2370     		strb	r3, [r4]
1093:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2754              		.loc 20 1093 13 is_stmt 1 view .LVU721
1093:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2755              		.loc 20 1093 28 is_stmt 0 view .LVU722
 2756 002a 80ED000A 		vstr.32	s0, [r0]
1094:Veno-Echo.cpp ****         } 
 2757              		.loc 20 1094 13 is_stmt 1 view .LVU723
1094:Veno-Echo.cpp ****         } 
 2758              		.loc 20 1094 27 is_stmt 0 view .LVU724
 2759 002e 81ED000A 		vstr.32	s0, [r1]
 2760              	.LVL118:
 2761              	.L154:
1107:Veno-Echo.cpp ****         
 2762              		.loc 20 1107 9 is_stmt 1 view .LVU725
1109:Veno-Echo.cpp ****         {
 2763              		.loc 20 1109 9 view .LVU726
1117:Veno-Echo.cpp ****         }
 2764              		.loc 20 1117 13 view .LVU727
 2765              	.LBB1062:
 2766              	.LBI1062:
1874:Veno-Echo.cpp **** {
 2767              		.loc 20 1874 7 view .LVU728
 2768              	.LBB1063:
1876:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2769              		.loc 20 1876 5 view .LVU729
1877:Veno-Echo.cpp **** 
 2770              		.loc 20 1877 5 view .LVU730
 2771              	.LBE1063:
 2772              	.LBE1062:
1117:Veno-Echo.cpp ****         }
 2773              		.loc 20 1117 41 is_stmt 0 view .LVU731
 2774 0032 604B     		ldr	r3, .L181+24
 2775              	.LBB1066:
 2776              	.LBB1064:
1877:Veno-Echo.cpp **** 
 2777              		.loc 20 1877 39 view .LVU732
 2778 0034 B7EE007A 		vmov.f32	s14, #1.0e+0
1877:Veno-Echo.cpp **** 
 2779              		.loc 20 1877 49 view .LVU733
 2780 0038 B6EE006A 		vmov.f32	s12, #5.0e-1
1877:Veno-Echo.cpp **** 
 2781              		.loc 20 1877 39 view .LVU734
 2782 003c D3ED007A 		vldr.32	s15, [r3]
1877:Veno-Echo.cpp **** 
 2783              		.loc 20 1877 12 view .LVU735
 2784 0040 F0EE006A 		vmov.f32	s13, #2.0e+0
1877:Veno-Echo.cpp **** 
 2785              		.loc 20 1877 39 view .LVU736
 2786 0044 77EE677A 		vsub.f32	s15, s14, s15
1877:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 143


 2787              		.loc 20 1877 49 view .LVU737
 2788 0048 77EEC67A 		vsub.f32	s15, s15, s12
1877:Veno-Echo.cpp **** 
 2789              		.loc 20 1877 12 view .LVU738
 2790 004c A7EEA60A 		vfma.f32	s0, s15, s13
1879:Veno-Echo.cpp ****     {
 2791              		.loc 20 1879 5 view .LVU739
 2792 0050 B5EEC00A 		vcmpe.f32	s0, #0
1877:Veno-Echo.cpp **** 
 2793              		.loc 20 1877 12 view .LVU740
 2794 0054 F0EE407A 		vmov.f32	s15, s0
 2795              	.LVL119:
1879:Veno-Echo.cpp ****     {
 2796              		.loc 20 1879 5 is_stmt 1 view .LVU741
 2797 0058 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2798 005c 00F19380 		bmi	.L179
1884:Veno-Echo.cpp ****     {
 2799              		.loc 20 1884 5 view .LVU742
1886:Veno-Echo.cpp ****     }
 2800              		.loc 20 1886 16 is_stmt 0 view .LVU743
 2801 0060 F4EE477A 		vcmp.f32	s15, s14
 2802 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2803 0068 77FE277A 		vselgt.f32	s15, s14, s15
 2804              	.LVL120:
 2805              	.L160:
1886:Veno-Echo.cpp ****     }
 2806              		.loc 20 1886 16 view .LVU744
 2807              	.LBE1064:
 2808              	.LBE1066:
1120:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2809              		.loc 20 1120 9 is_stmt 1 view .LVU745
1120:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2810              		.loc 20 1120 37 is_stmt 0 view .LVU746
 2811 006c B0EE670A 		vmov.f32	s0, s15
 2812 0070 0020     		movs	r0, #0
 2813 0072 B7EE041A 		vmov.f32	s2, #1.25e+0
 2814 0076 DFED500A 		vldr.32	s1, .L181+28
 2815 007a FFF7FEFF 		bl	_Z5scalefff9CurveType
 2816              	.LVL121:
1121:Veno-Echo.cpp ****     }
 2817              		.loc 20 1121 9 is_stmt 1 view .LVU747
 2818              	.LBB1067:
 2819              	.LBI1067:
 135:../DaisySP/Source/Utility/dsp.h **** {
 2820              		.loc 23 135 13 view .LVU748
 2821              	.LBB1068:
 2822              		.loc 23 137 5 view .LVU749
 2823              		.loc 23 137 9 is_stmt 0 view .LVU750
 2824 007e 4F4B     		ldr	r3, .L181+32
 2825 0080 9FED4F7A 		vldr.32	s14, .L181+36
 2826 0084 D3ED007A 		vldr.32	s15, [r3]
 2827              		.loc 23 137 24 view .LVU751
 2828 0088 30EE670A 		vsub.f32	s0, s0, s15
 2829              	.LVL122:
 2830              		.loc 23 137 24 view .LVU752
 2831              	.LBE1068:
 2832              	.LBE1067:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 144


 2833              	.LBE1082:
 2834              	.LBE1094:
1157:Veno-Echo.cpp **** 
 2835              		.loc 20 1157 1 view .LVU753
 2836 008c BDEC028B 		vldm	sp!, {d8}
 2837              		.cfi_remember_state
 2838              		.cfi_restore 80
 2839              		.cfi_restore 81
 2840              		.cfi_def_cfa_offset 8
 2841              	.LBB1095:
 2842              	.LBB1083:
 2843              	.LBB1070:
 2844              	.LBB1069:
 2845              		.loc 23 137 9 view .LVU754
 2846 0090 E0EE077A 		vfma.f32	s15, s0, s14
 2847 0094 C3ED007A 		vstr.32	s15, [r3]
 2848              	.LBE1069:
 2849              	.LBE1070:
 2850              	.LBE1083:
 2851              	.LBE1095:
1157:Veno-Echo.cpp **** 
 2852              		.loc 20 1157 1 view .LVU755
 2853 0098 10BD     		pop	{r4, pc}
 2854              	.LVL123:
 2855              	.L152:
 2856              		.cfi_restore_state
 2857              	.LBB1096:
 2858              	.LBB1084:
1126:Veno-Echo.cpp **** 
 2859              		.loc 20 1126 9 is_stmt 1 view .LVU756
1128:Veno-Echo.cpp ****         {
 2860              		.loc 20 1128 10 view .LVU757
 2861 009a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2862 009c 002B     		cmp	r3, #0
 2863 009e 3ED1     		bne	.L163
1130:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2864              		.loc 20 1130 13 view .LVU758
1130:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2865              		.loc 20 1130 23 is_stmt 0 view .LVU759
 2866 00a0 0124     		movs	r4, #1
1131:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2867              		.loc 20 1131 29 view .LVU760
 2868 00a2 4848     		ldr	r0, .L181+40
1132:Veno-Echo.cpp ****         }
 2869              		.loc 20 1132 26 view .LVU761
 2870 00a4 4849     		ldr	r1, .L181+44
1130:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2871              		.loc 20 1130 23 view .LVU762
 2872 00a6 1470     		strb	r4, [r2]
1131:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2873              		.loc 20 1131 13 is_stmt 1 view .LVU763
1131:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2874              		.loc 20 1131 29 is_stmt 0 view .LVU764
 2875 00a8 0370     		strb	r3, [r0]
1132:Veno-Echo.cpp ****         }
 2876              		.loc 20 1132 13 is_stmt 1 view .LVU765
1132:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 145


 2877              		.loc 20 1132 26 is_stmt 0 view .LVU766
 2878 00aa 81ED000A 		vstr.32	s0, [r1]
 2879              	.L151:
1132:Veno-Echo.cpp ****         }
 2880              		.loc 20 1132 26 view .LVU767
 2881              	.LBE1084:
 2882              	.LBE1096:
1157:Veno-Echo.cpp **** 
 2883              		.loc 20 1157 1 view .LVU768
 2884 00ae BDEC028B 		vldm	sp!, {d8}
 2885              		.cfi_remember_state
 2886              		.cfi_restore 80
 2887              		.cfi_restore 81
 2888              		.cfi_def_cfa_offset 8
 2889 00b2 10BD     		pop	{r4, pc}
 2890              	.L153:
 2891              		.cfi_restore_state
 2892              	.LBB1097:
 2893              	.LBB1091:
1098:Veno-Echo.cpp ****             {
 2894              		.loc 20 1098 13 is_stmt 1 view .LVU769
1098:Veno-Echo.cpp ****             {
 2895              		.loc 20 1098 16 is_stmt 0 view .LVU770
 2896 00b4 3C4B     		ldr	r3, .L181+12
1098:Veno-Echo.cpp ****             {
 2897              		.loc 20 1098 13 view .LVU771
 2898 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2899 00b8 7AB9     		cbnz	r2, .L155
1100:Veno-Echo.cpp ****                 {
 2900              		.loc 20 1100 17 is_stmt 1 view .LVU772
 2901              	.LVL124:
 2902              	.LBB1071:
 2903              	.LBI1071:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2904              		.loc 21 75 3 view .LVU773
 2905              	.LBB1072:
 2906              		.loc 21 76 5 view .LVU774
 2907              		.loc 21 76 5 is_stmt 0 view .LVU775
 2908              	.LBE1072:
 2909              	.LBE1071:
1100:Veno-Echo.cpp ****                 {
 2910              		.loc 20 1100 23 view .LVU776
 2911 00ba 3D4A     		ldr	r2, .L181+20
1100:Veno-Echo.cpp ****                 {
 2912              		.loc 20 1100 17 view .LVU777
 2913 00bc 9FED437A 		vldr.32	s14, .L181+48
1100:Veno-Echo.cpp ****                 {
 2914              		.loc 20 1100 23 view .LVU778
 2915 00c0 D2ED007A 		vldr.32	s15, [r2]
 2916 00c4 70EE677A 		vsub.f32	s15, s0, s15
 2917              	.LBB1074:
 2918              	.LBB1073:
 2919              		.loc 21 76 31 view .LVU779
 2920 00c8 F0EEE77A 		vabs.f32	s15, s15
 2921              	.LBE1073:
 2922              	.LBE1074:
1100:Veno-Echo.cpp ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 146


 2923              		.loc 20 1100 17 view .LVU780
 2924 00cc F4EEC77A 		vcmpe.f32	s15, s14
 2925 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2926 00d4 5DDD     		ble	.L175
1102:Veno-Echo.cpp ****                 }
 2927              		.loc 20 1102 21 is_stmt 1 view .LVU781
1102:Veno-Echo.cpp ****                 }
 2928              		.loc 20 1102 38 is_stmt 0 view .LVU782
 2929 00d6 0122     		movs	r2, #1
 2930 00d8 1A70     		strb	r2, [r3]
 2931              	.L155:
1107:Veno-Echo.cpp ****         
 2932              		.loc 20 1107 9 is_stmt 1 view .LVU783
 2933              	.LVL125:
1109:Veno-Echo.cpp ****         {
 2934              		.loc 20 1109 9 view .LVU784
1111:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
 2935              		.loc 20 1111 13 view .LVU785
 2936              	.LBB1075:
 2937              	.LBI1075:
1874:Veno-Echo.cpp **** {
 2938              		.loc 20 1874 7 view .LVU786
 2939              	.LBB1076:
1876:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2940              		.loc 20 1876 5 view .LVU787
1877:Veno-Echo.cpp **** 
 2941              		.loc 20 1877 5 view .LVU788
 2942              	.LBE1076:
 2943              	.LBE1075:
1111:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
 2944              		.loc 20 1111 41 is_stmt 0 view .LVU789
 2945 00da 364B     		ldr	r3, .L181+24
 2946              	.LBB1079:
 2947              	.LBB1077:
1877:Veno-Echo.cpp **** 
 2948              		.loc 20 1877 39 view .LVU790
 2949 00dc B7EE007A 		vmov.f32	s14, #1.0e+0
1877:Veno-Echo.cpp **** 
 2950              		.loc 20 1877 49 view .LVU791
 2951 00e0 B6EE006A 		vmov.f32	s12, #5.0e-1
1877:Veno-Echo.cpp **** 
 2952              		.loc 20 1877 39 view .LVU792
 2953 00e4 D3ED007A 		vldr.32	s15, [r3]
1877:Veno-Echo.cpp **** 
 2954              		.loc 20 1877 12 view .LVU793
 2955 00e8 F0EE006A 		vmov.f32	s13, #2.0e+0
1877:Veno-Echo.cpp **** 
 2956              		.loc 20 1877 39 view .LVU794
 2957 00ec 77EE677A 		vsub.f32	s15, s14, s15
1877:Veno-Echo.cpp **** 
 2958              		.loc 20 1877 49 view .LVU795
 2959 00f0 77EEC67A 		vsub.f32	s15, s15, s12
1877:Veno-Echo.cpp **** 
 2960              		.loc 20 1877 12 view .LVU796
 2961 00f4 B0EE406A 		vmov.f32	s12, s0
 2962 00f8 A7EEA66A 		vfma.f32	s12, s15, s13
1879:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 147


 2963              		.loc 20 1879 5 view .LVU797
 2964 00fc B5EEC06A 		vcmpe.f32	s12, #0
1877:Veno-Echo.cpp **** 
 2965              		.loc 20 1877 12 view .LVU798
 2966 0100 F0EE467A 		vmov.f32	s15, s12
 2967              	.LVL126:
1879:Veno-Echo.cpp ****     {
 2968              		.loc 20 1879 5 is_stmt 1 view .LVU799
 2969 0104 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2970 0108 40D4     		bmi	.L180
1884:Veno-Echo.cpp ****     {
 2971              		.loc 20 1884 5 view .LVU800
1886:Veno-Echo.cpp ****     }
 2972              		.loc 20 1886 16 is_stmt 0 view .LVU801
 2973 010a F4EE477A 		vcmp.f32	s15, s14
 2974 010e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2975 0112 77FE277A 		vselgt.f32	s15, s14, s15
 2976              	.L158:
 2977              	.LVL127:
1889:Veno-Echo.cpp **** }
 2978              		.loc 20 1889 5 is_stmt 1 view .LVU802
1889:Veno-Echo.cpp **** }
 2979              		.loc 20 1889 5 is_stmt 0 view .LVU803
 2980              	.LBE1077:
 2981              	.LBE1079:
1112:Veno-Echo.cpp ****         }
 2982              		.loc 20 1112 13 is_stmt 1 view .LVU804
1112:Veno-Echo.cpp ****         }
 2983              		.loc 20 1112 28 is_stmt 0 view .LVU805
 2984 0116 254B     		ldr	r3, .L181+16
 2985 0118 83ED000A 		vstr.32	s0, [r3]
 2986 011c A6E7     		b	.L160
 2987              	.LVL128:
 2988              	.L163:
1112:Veno-Echo.cpp ****         }
 2989              		.loc 20 1112 28 view .LVU806
 2990              	.LBE1091:
 2991              	.LBB1092:
1137:Veno-Echo.cpp ****             {
 2992              		.loc 20 1137 13 is_stmt 1 view .LVU807
1137:Veno-Echo.cpp ****             {
 2993              		.loc 20 1137 16 is_stmt 0 view .LVU808
 2994 011e 294B     		ldr	r3, .L181+40
1137:Veno-Echo.cpp ****             {
 2995              		.loc 20 1137 13 view .LVU809
 2996 0120 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2997 0122 7AB9     		cbnz	r2, .L165
1139:Veno-Echo.cpp ****                 {
 2998              		.loc 20 1139 17 is_stmt 1 view .LVU810
 2999              	.LVL129:
 3000              	.LBB1085:
 3001              	.LBI1085:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3002              		.loc 21 75 3 view .LVU811
 3003              	.LBB1086:
 3004              		.loc 21 76 5 view .LVU812
 3005              		.loc 21 76 5 is_stmt 0 view .LVU813
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 148


 3006              	.LBE1086:
 3007              	.LBE1085:
1139:Veno-Echo.cpp ****                 {
 3008              		.loc 20 1139 23 view .LVU814
 3009 0124 284A     		ldr	r2, .L181+44
1139:Veno-Echo.cpp ****                 {
 3010              		.loc 20 1139 17 view .LVU815
 3011 0126 9FED297A 		vldr.32	s14, .L181+48
1139:Veno-Echo.cpp ****                 {
 3012              		.loc 20 1139 23 view .LVU816
 3013 012a D2ED007A 		vldr.32	s15, [r2]
 3014 012e 70EE677A 		vsub.f32	s15, s0, s15
 3015              	.LBB1088:
 3016              	.LBB1087:
 3017              		.loc 21 76 31 view .LVU817
 3018 0132 F0EEE77A 		vabs.f32	s15, s15
 3019              	.LBE1087:
 3020              	.LBE1088:
1139:Veno-Echo.cpp ****                 {
 3021              		.loc 20 1139 17 view .LVU818
 3022 0136 F4EEC77A 		vcmpe.f32	s15, s14
 3023 013a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3024 013e B6DD     		ble	.L151
1141:Veno-Echo.cpp ****                 }
 3025              		.loc 20 1141 21 is_stmt 1 view .LVU819
1141:Veno-Echo.cpp ****                 }
 3026              		.loc 20 1141 37 is_stmt 0 view .LVU820
 3027 0140 0122     		movs	r2, #1
 3028 0142 1A70     		strb	r2, [r3]
 3029              	.L165:
1146:Veno-Echo.cpp ****         {
 3030              		.loc 20 1146 9 is_stmt 1 view .LVU821
 3031              	.LBB1089:
 3032              	.LBB1090:
1148:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
 3033              		.loc 20 1148 13 view .LVU822
 3034              	.LVL130:
1149:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3035              		.loc 20 1149 13 view .LVU823
1149:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3036              		.loc 20 1149 29 is_stmt 0 view .LVU824
 3037 0144 9FED221A 		vldr.32	s2, .L181+52
 3038 0148 0120     		movs	r0, #1
 3039 014a DFED220A 		vldr.32	s1, .L181+56
 3040 014e FFF7FEFF 		bl	_Z5scalefff9CurveType
 3041              	.LVL131:
1149:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3042              		.loc 20 1149 29 view .LVU825
 3043 0152 B0EE408A 		vmov.f32	s16, s0
 3044              	.LVL132:
1150:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 3045              		.loc 20 1150 13 is_stmt 1 view .LVU826
1150:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 3046              		.loc 20 1150 26 is_stmt 0 view .LVU827
 3047 0156 2048     		ldr	r0, .L181+60
 3048 0158 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3049              	.LVL133:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 149


1151:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 3050              		.loc 20 1151 13 is_stmt 1 view .LVU828
1151:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 3051              		.loc 20 1151 26 is_stmt 0 view .LVU829
 3052 015c 1F48     		ldr	r0, .L181+64
 3053 015e B0EE480A 		vmov.f32	s0, s16
 3054 0162 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3055              	.LVL134:
1152:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 3056              		.loc 20 1152 13 is_stmt 1 view .LVU830
1152:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 3057              		.loc 20 1152 31 is_stmt 0 view .LVU831
 3058 0166 B0EE480A 		vmov.f32	s0, s16
 3059 016a 1D48     		ldr	r0, .L181+68
 3060 016c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3061              	.LVL135:
1153:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 3062              		.loc 20 1153 13 is_stmt 1 view .LVU832
1153:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 3063              		.loc 20 1153 31 is_stmt 0 view .LVU833
 3064 0170 B0EE480A 		vmov.f32	s0, s16
 3065 0174 1B48     		ldr	r0, .L181+72
 3066 0176 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3067              	.LVL136:
1154:Veno-Echo.cpp ****         }
 3068              		.loc 20 1154 13 is_stmt 1 view .LVU834
1154:Veno-Echo.cpp ****         }
 3069              		.loc 20 1154 35 is_stmt 0 view .LVU835
 3070 017a 1B4B     		ldr	r3, .L181+76
 3071 017c 83ED058A 		vstr.32	s16, [r3, #20]
 3072              	.LBE1090:
 3073              	.LBE1089:
 3074              	.LBE1092:
 3075              	.LBE1097:
1157:Veno-Echo.cpp **** 
 3076              		.loc 20 1157 1 view .LVU836
 3077 0180 BDEC028B 		vldm	sp!, {d8}
 3078              		.cfi_remember_state
 3079              		.cfi_restore 80
 3080              		.cfi_restore 81
 3081              		.cfi_def_cfa_offset 8
 3082              	.LVL137:
1157:Veno-Echo.cpp **** 
 3083              		.loc 20 1157 1 view .LVU837
 3084 0184 10BD     		pop	{r4, pc}
 3085              	.LVL138:
 3086              	.L179:
 3087              		.cfi_restore_state
 3088              	.LBB1098:
 3089              	.LBB1093:
 3090              	.LBB1080:
 3091              	.LBB1065:
1881:Veno-Echo.cpp ****     }
 3092              		.loc 20 1881 16 view .LVU838
 3093 0186 DFED0C7A 		vldr.32	s15, .L181+28
 3094 018a 6FE7     		b	.L160
 3095              	.LVL139:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 150


 3096              	.L180:
1881:Veno-Echo.cpp ****     }
 3097              		.loc 20 1881 16 view .LVU839
 3098              	.LBE1065:
 3099              	.LBE1080:
 3100              	.LBB1081:
 3101              	.LBB1078:
 3102 018c DFED0A7A 		vldr.32	s15, .L181+28
 3103 0190 C1E7     		b	.L158
 3104              	.LVL140:
 3105              	.L175:
1881:Veno-Echo.cpp ****     }
 3106              		.loc 20 1881 16 view .LVU840
 3107 0192 064B     		ldr	r3, .L181+16
 3108 0194 93ED000A 		vldr.32	s0, [r3]
 3109              	.LVL141:
1881:Veno-Echo.cpp ****     }
 3110              		.loc 20 1881 16 view .LVU841
 3111 0198 4BE7     		b	.L154
 3112              	.L182:
 3113 019a 00BF     		.align	2
 3114              	.L181:
 3115 019c 18000000 		.word	.LANCHOR4+24
 3116 01a0 00000000 		.word	.LANCHOR7
 3117 01a4 00000000 		.word	.LANCHOR39
 3118 01a8 00000000 		.word	.LANCHOR40
 3119 01ac 00000000 		.word	.LANCHOR41
 3120 01b0 00000000 		.word	.LANCHOR42
 3121 01b4 00000000 		.word	.LANCHOR38
 3122 01b8 00000000 		.word	0
 3123 01bc 00000000 		.word	.LANCHOR43
 3124 01c0 6F12033D 		.word	1023611503
 3125 01c4 00000000 		.word	.LANCHOR44
 3126 01c8 00000000 		.word	.LANCHOR45
 3127 01cc 0AD7A33B 		.word	1000593162
 3128 01d0 00803B46 		.word	1178304512
 3129 01d4 0080BB44 		.word	1153138688
 3130 01d8 00000000 		.word	.LANCHOR46
 3131 01dc 00000000 		.word	.LANCHOR47
 3132 01e0 00000000 		.word	.LANCHOR48
 3133 01e4 00000000 		.word	.LANCHOR49
 3134 01e8 00000000 		.word	.LANCHOR15
 3135              	.LBE1078:
 3136              	.LBE1081:
 3137              	.LBE1093:
 3138              	.LBE1098:
 3139              		.cfi_endproc
 3140              	.LFE4319:
 3142              		.section	.text._Z16Update_drywet_CVv,"ax",%progbits
 3143              		.align	1
 3144              		.p2align 2,,3
 3145              		.global	_Z16Update_drywet_CVv
 3146              		.syntax unified
 3147              		.thumb
 3148              		.thumb_func
 3149              		.fpu fpv5-d16
 3151              	_Z16Update_drywet_CVv:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 151


 3152              	.LFB4320:
1160:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 3153              		.loc 20 1160 1 is_stmt 1 view -0
 3154              		.cfi_startproc
 3155              		@ args = 0, pretend = 0, frame = 0
 3156              		@ frame_needed = 0, uses_anonymous_args = 0
1161:Veno-Echo.cpp **** }
 3157              		.loc 20 1161 5 view .LVU843
1160:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 3158              		.loc 20 1160 1 is_stmt 0 view .LVU844
 3159 0000 08B5     		push	{r3, lr}
 3160              		.cfi_def_cfa_offset 8
 3161              		.cfi_offset 3, -8
 3162              		.cfi_offset 14, -4
1161:Veno-Echo.cpp **** }
 3163              		.loc 20 1161 32 view .LVU845
 3164 0002 0421     		movs	r1, #4
 3165 0004 0348     		ldr	r0, .L185
 3166 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3167              	.LVL142:
1161:Veno-Echo.cpp **** }
 3168              		.loc 20 1161 15 view .LVU846
 3169 000a 034B     		ldr	r3, .L185+4
 3170 000c 83ED000A 		vstr.32	s0, [r3]
1162:Veno-Echo.cpp **** 
 3171              		.loc 20 1162 1 view .LVU847
 3172 0010 08BD     		pop	{r3, pc}
 3173              	.L186:
 3174 0012 00BF     		.align	2
 3175              	.L185:
 3176 0014 18000000 		.word	.LANCHOR4+24
 3177 0018 00000000 		.word	.LANCHOR50
 3178              		.cfi_endproc
 3179              	.LFE4320:
 3181              		.section	.text._Z13Update_drywetv,"ax",%progbits
 3182              		.align	1
 3183              		.p2align 2,,3
 3184              		.global	_Z13Update_drywetv
 3185              		.syntax unified
 3186              		.thumb
 3187              		.thumb_func
 3188              		.fpu fpv5-d16
 3190              	_Z13Update_drywetv:
 3191              	.LFB4321:
1165:Veno-Echo.cpp ****     static bool lastShift{};
 3192              		.loc 20 1165 1 is_stmt 1 view -0
 3193              		.cfi_startproc
 3194              		@ args = 0, pretend = 0, frame = 0
 3195              		@ frame_needed = 0, uses_anonymous_args = 0
1166:Veno-Echo.cpp ****     static bool drywet_pickup{};
 3196              		.loc 20 1166 5 view .LVU849
1167:Veno-Echo.cpp ****     static bool Res_pickup{};
 3197              		.loc 20 1167 5 view .LVU850
1168:Veno-Echo.cpp **** 
 3198              		.loc 20 1168 5 view .LVU851
1170:Veno-Echo.cpp ****     //static float Res_Last{}; //last res value (unscaled)
 3199              		.loc 20 1170 5 view .LVU852
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 152


1175:Veno-Echo.cpp **** 
 3200              		.loc 20 1175 5 view .LVU853
1175:Veno-Echo.cpp **** 
 3201              		.loc 20 1175 40 is_stmt 0 view .LVU854
 3202 0000 0522     		movs	r2, #5
 3203 0002 0721     		movs	r1, #7
 3204 0004 8048     		ldr	r0, .L220+24
1165:Veno-Echo.cpp ****     static bool lastShift{};
 3205              		.loc 20 1165 1 view .LVU855
 3206 0006 10B5     		push	{r4, lr}
 3207              		.cfi_def_cfa_offset 8
 3208              		.cfi_offset 4, -8
 3209              		.cfi_offset 14, -4
 3210 0008 2DED028B 		vpush.64	{d8}
 3211              		.cfi_def_cfa_offset 16
 3212              		.cfi_offset 80, -16
 3213              		.cfi_offset 81, -12
1175:Veno-Echo.cpp **** 
 3214              		.loc 20 1175 40 view .LVU856
 3215 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3216              	.LVL143:
 3217              	.LBB1099:
1177:Veno-Echo.cpp ****     {   
 3218              		.loc 20 1177 9 view .LVU857
 3219 0010 7E4B     		ldr	r3, .L220+28
 3220              	.LVL144:
1177:Veno-Echo.cpp ****     {   
 3221              		.loc 20 1177 9 view .LVU858
 3222              	.LBE1099:
1177:Veno-Echo.cpp ****     {   
 3223              		.loc 20 1177 5 is_stmt 1 view .LVU859
 3224              	.LBB1133:
 3225              	.LBB1100:
1182:Veno-Echo.cpp ****         {
 3226              		.loc 20 1182 19 is_stmt 0 view .LVU860
 3227 0012 7F4A     		ldr	r2, .L220+32
 3228              	.LBE1100:
1177:Veno-Echo.cpp ****     {   
 3229              		.loc 20 1177 5 view .LVU861
 3230 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3231 0016 B3BB     		cbnz	r3, .L188
 3232              	.LBB1121:
1180:Veno-Echo.cpp **** 
 3233              		.loc 20 1180 9 is_stmt 1 view .LVU862
1182:Veno-Echo.cpp ****         {
 3234              		.loc 20 1182 9 view .LVU863
 3235 0018 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3236 001a 0029     		cmp	r1, #0
 3237 001c 40D0     		beq	.L189
1184:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 3238              		.loc 20 1184 13 view .LVU864
1186:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3239              		.loc 20 1186 27 is_stmt 0 view .LVU865
 3240 001e 7D48     		ldr	r0, .L220+36
1187:Veno-Echo.cpp ****         } 
 3241              		.loc 20 1187 24 view .LVU866
 3242 0020 7D49     		ldr	r1, .L220+40
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 153


1184:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 3243              		.loc 20 1184 23 view .LVU867
 3244 0022 1370     		strb	r3, [r2]
1186:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3245              		.loc 20 1186 13 is_stmt 1 view .LVU868
1186:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3246              		.loc 20 1186 27 is_stmt 0 view .LVU869
 3247 0024 0370     		strb	r3, [r0]
1187:Veno-Echo.cpp ****         } 
 3248              		.loc 20 1187 13 is_stmt 1 view .LVU870
1187:Veno-Echo.cpp ****         } 
 3249              		.loc 20 1187 24 is_stmt 0 view .LVU871
 3250 0026 81ED000A 		vstr.32	s0, [r1]
 3251              	.L190:
1203:Veno-Echo.cpp **** 
 3252              		.loc 20 1203 9 is_stmt 1 view .LVU872
 3253              	.LVL145:
1205:Veno-Echo.cpp ****         {
 3254              		.loc 20 1205 9 view .LVU873
1213:Veno-Echo.cpp ****         }
 3255              		.loc 20 1213 13 view .LVU874
 3256              	.LBB1101:
 3257              	.LBI1101:
1874:Veno-Echo.cpp **** {
 3258              		.loc 20 1874 7 view .LVU875
 3259              	.LBB1102:
1876:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3260              		.loc 20 1876 5 view .LVU876
1877:Veno-Echo.cpp **** 
 3261              		.loc 20 1877 5 view .LVU877
 3262              	.LBE1102:
 3263              	.LBE1101:
1213:Veno-Echo.cpp ****         }
 3264              		.loc 20 1213 37 is_stmt 0 view .LVU878
 3265 002a 7C4A     		ldr	r2, .L220+44
 3266              	.LBB1105:
 3267              	.LBB1103:
1877:Veno-Echo.cpp **** 
 3268              		.loc 20 1877 39 view .LVU879
 3269 002c F7EE006A 		vmov.f32	s13, #1.0e+0
1877:Veno-Echo.cpp **** 
 3270              		.loc 20 1877 49 view .LVU880
 3271 0030 F6EE005A 		vmov.f32	s11, #5.0e-1
 3272              	.LBE1103:
 3273              	.LBE1105:
1213:Veno-Echo.cpp ****         }
 3274              		.loc 20 1213 37 view .LVU881
 3275 0034 7A4B     		ldr	r3, .L220+48
 3276              	.LBB1106:
 3277              	.LBB1104:
1877:Veno-Echo.cpp **** 
 3278              		.loc 20 1877 39 view .LVU882
 3279 0036 92ED007A 		vldr.32	s14, [r2]
1877:Veno-Echo.cpp **** 
 3280              		.loc 20 1877 12 view .LVU883
 3281 003a B0EE006A 		vmov.f32	s12, #2.0e+0
 3282 003e D3ED007A 		vldr.32	s15, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 154


1877:Veno-Echo.cpp **** 
 3283              		.loc 20 1877 39 view .LVU884
 3284 0042 36EEC77A 		vsub.f32	s14, s13, s14
1877:Veno-Echo.cpp **** 
 3285              		.loc 20 1877 49 view .LVU885
 3286 0046 37EE657A 		vsub.f32	s14, s14, s11
1877:Veno-Echo.cpp **** 
 3287              		.loc 20 1877 12 view .LVU886
 3288 004a E7EE067A 		vfma.f32	s15, s14, s12
 3289              	.LVL146:
1879:Veno-Echo.cpp ****     {
 3290              		.loc 20 1879 5 is_stmt 1 view .LVU887
 3291 004e F5EEC07A 		vcmpe.f32	s15, #0
 3292 0052 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3293 0056 00F1BA80 		bmi	.L207
1884:Veno-Echo.cpp ****     {
 3294              		.loc 20 1884 5 view .LVU888
 3295 005a F4EEE67A 		vcmpe.f32	s15, s13
 3296 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3297 0062 40F3BF80 		ble	.L213
 3298              	.LVL147:
 3299              	.L198:
1884:Veno-Echo.cpp ****     {
 3300              		.loc 20 1884 5 is_stmt 0 view .LVU889
 3301              	.LBE1104:
 3302              	.LBE1106:
1220:Veno-Echo.cpp ****         }
 3303              		.loc 20 1220 26 view .LVU890
 3304 0066 B7EE000A 		vmov.f32	s0, #1.0e+0
 3305              	.LVL148:
 3306              	.L197:
1232:Veno-Echo.cpp ****     }
 3307              		.loc 20 1232 9 is_stmt 1 view .LVU891
 3308              	.LBB1107:
 3309              	.LBI1107:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3310              		.loc 23 135 13 view .LVU892
 3311              	.LBB1108:
 3312              		.loc 23 137 5 view .LVU893
 3313              		.loc 23 137 9 is_stmt 0 view .LVU894
 3314 006a 6E4B     		ldr	r3, .L220+52
 3315 006c 9FED6E7A 		vldr.32	s14, .L220+56
 3316 0070 D3ED007A 		vldr.32	s15, [r3]
 3317              		.loc 23 137 24 view .LVU895
 3318 0074 30EE670A 		vsub.f32	s0, s0, s15
 3319              	.LVL149:
 3320              		.loc 23 137 24 view .LVU896
 3321              	.LBE1108:
 3322              	.LBE1107:
 3323              	.LBE1121:
 3324              	.LBE1133:
1271:Veno-Echo.cpp **** 
 3325              		.loc 20 1271 1 view .LVU897
 3326 0078 BDEC028B 		vldm	sp!, {d8}
 3327              		.cfi_remember_state
 3328              		.cfi_restore 80
 3329              		.cfi_restore 81
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 155


 3330              		.cfi_def_cfa_offset 8
 3331              	.LBB1134:
 3332              	.LBB1122:
 3333              	.LBB1110:
 3334              	.LBB1109:
 3335              		.loc 23 137 9 view .LVU898
 3336 007c E0EE077A 		vfma.f32	s15, s0, s14
 3337 0080 C3ED007A 		vstr.32	s15, [r3]
 3338              	.LBE1109:
 3339              	.LBE1110:
 3340              	.LBE1122:
 3341              	.LBE1134:
1271:Veno-Echo.cpp **** 
 3342              		.loc 20 1271 1 view .LVU899
 3343 0084 10BD     		pop	{r4, pc}
 3344              	.LVL150:
 3345              	.L188:
 3346              		.cfi_restore_state
 3347              	.LBB1135:
 3348              	.LBB1123:
1236:Veno-Echo.cpp **** 
 3349              		.loc 20 1236 9 is_stmt 1 view .LVU900
1238:Veno-Echo.cpp ****         {
 3350              		.loc 20 1238 9 view .LVU901
 3351 0086 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3352 0088 002B     		cmp	r3, #0
 3353 008a 58D1     		bne	.L202
1240:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3354              		.loc 20 1240 13 view .LVU902
1240:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3355              		.loc 20 1240 23 is_stmt 0 view .LVU903
 3356 008c 0124     		movs	r4, #1
1241:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3357              		.loc 20 1241 24 view .LVU904
 3358 008e 6748     		ldr	r0, .L220+60
1242:Veno-Echo.cpp ****         }
 3359              		.loc 20 1242 21 view .LVU905
 3360 0090 6749     		ldr	r1, .L220+64
1240:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3361              		.loc 20 1240 23 view .LVU906
 3362 0092 1470     		strb	r4, [r2]
1241:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3363              		.loc 20 1241 13 is_stmt 1 view .LVU907
1241:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3364              		.loc 20 1241 24 is_stmt 0 view .LVU908
 3365 0094 0370     		strb	r3, [r0]
1242:Veno-Echo.cpp ****         }
 3366              		.loc 20 1242 13 is_stmt 1 view .LVU909
1242:Veno-Echo.cpp ****         }
 3367              		.loc 20 1242 21 is_stmt 0 view .LVU910
 3368 0096 81ED000A 		vstr.32	s0, [r1]
 3369              	.L187:
1242:Veno-Echo.cpp ****         }
 3370              		.loc 20 1242 21 view .LVU911
 3371              	.LBE1123:
 3372              	.LBE1135:
1271:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 156


 3373              		.loc 20 1271 1 view .LVU912
 3374 009a BDEC028B 		vldm	sp!, {d8}
 3375              		.cfi_remember_state
 3376              		.cfi_restore 80
 3377              		.cfi_restore 81
 3378              		.cfi_def_cfa_offset 8
 3379 009e 10BD     		pop	{r4, pc}
 3380              	.L189:
 3381              		.cfi_restore_state
 3382              	.LBB1136:
 3383              	.LBB1130:
1192:Veno-Echo.cpp ****             {
 3384              		.loc 20 1192 13 is_stmt 1 view .LVU913
1192:Veno-Echo.cpp ****             {
 3385              		.loc 20 1192 16 is_stmt 0 view .LVU914
 3386 00a0 5C4B     		ldr	r3, .L220+36
1192:Veno-Echo.cpp ****             {
 3387              		.loc 20 1192 13 view .LVU915
 3388 00a2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3389 00a4 7AB9     		cbnz	r2, .L191
1195:Veno-Echo.cpp ****                 {
 3390              		.loc 20 1195 17 is_stmt 1 view .LVU916
 3391              	.LVL151:
 3392              	.LBB1111:
 3393              	.LBI1111:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3394              		.loc 21 75 3 view .LVU917
 3395              	.LBB1112:
 3396              		.loc 21 76 5 view .LVU918
 3397              		.loc 21 76 5 is_stmt 0 view .LVU919
 3398              	.LBE1112:
 3399              	.LBE1111:
1195:Veno-Echo.cpp ****                 {
 3400              		.loc 20 1195 23 view .LVU920
 3401 00a6 5C4A     		ldr	r2, .L220+40
1195:Veno-Echo.cpp ****                 {
 3402              		.loc 20 1195 17 view .LVU921
 3403 00a8 9FED627A 		vldr.32	s14, .L220+68
1195:Veno-Echo.cpp ****                 {
 3404              		.loc 20 1195 23 view .LVU922
 3405 00ac D2ED007A 		vldr.32	s15, [r2]
 3406 00b0 70EE677A 		vsub.f32	s15, s0, s15
 3407              	.LBB1114:
 3408              	.LBB1113:
 3409              		.loc 21 76 31 view .LVU923
 3410 00b4 F0EEE77A 		vabs.f32	s15, s15
 3411              	.LBE1113:
 3412              	.LBE1114:
1195:Veno-Echo.cpp ****                 {
 3413              		.loc 20 1195 17 view .LVU924
 3414 00b8 F4EEC77A 		vcmpe.f32	s15, s14
 3415 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3416 00c0 B3DD     		ble	.L190
1197:Veno-Echo.cpp ****                 }
 3417              		.loc 20 1197 21 is_stmt 1 view .LVU925
1197:Veno-Echo.cpp ****                 }
 3418              		.loc 20 1197 35 is_stmt 0 view .LVU926
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 157


 3419 00c2 0122     		movs	r2, #1
 3420 00c4 1A70     		strb	r2, [r3]
 3421              	.L191:
1203:Veno-Echo.cpp **** 
 3422              		.loc 20 1203 9 is_stmt 1 view .LVU927
 3423              	.LVL152:
1205:Veno-Echo.cpp ****         {
 3424              		.loc 20 1205 9 view .LVU928
1207:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 3425              		.loc 20 1207 13 view .LVU929
 3426              	.LBB1115:
 3427              	.LBI1115:
1874:Veno-Echo.cpp **** {
 3428              		.loc 20 1874 7 view .LVU930
 3429              	.LBB1116:
1876:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3430              		.loc 20 1876 5 view .LVU931
1877:Veno-Echo.cpp **** 
 3431              		.loc 20 1877 5 view .LVU932
 3432              	.LBE1116:
 3433              	.LBE1115:
1207:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 3434              		.loc 20 1207 37 is_stmt 0 view .LVU933
 3435 00c6 554B     		ldr	r3, .L220+44
 3436              	.LBB1119:
 3437              	.LBB1117:
1877:Veno-Echo.cpp **** 
 3438              		.loc 20 1877 39 view .LVU934
 3439 00c8 B7EE007A 		vmov.f32	s14, #1.0e+0
1877:Veno-Echo.cpp **** 
 3440              		.loc 20 1877 49 view .LVU935
 3441 00cc B6EE006A 		vmov.f32	s12, #5.0e-1
1877:Veno-Echo.cpp **** 
 3442              		.loc 20 1877 39 view .LVU936
 3443 00d0 D3ED007A 		vldr.32	s15, [r3]
1877:Veno-Echo.cpp **** 
 3444              		.loc 20 1877 12 view .LVU937
 3445 00d4 F0EE006A 		vmov.f32	s13, #2.0e+0
1877:Veno-Echo.cpp **** 
 3446              		.loc 20 1877 39 view .LVU938
 3447 00d8 77EE677A 		vsub.f32	s15, s14, s15
1877:Veno-Echo.cpp **** 
 3448              		.loc 20 1877 49 view .LVU939
 3449 00dc 77EEC67A 		vsub.f32	s15, s15, s12
1877:Veno-Echo.cpp **** 
 3450              		.loc 20 1877 12 view .LVU940
 3451 00e0 B0EE406A 		vmov.f32	s12, s0
 3452 00e4 A7EEA66A 		vfma.f32	s12, s15, s13
1879:Veno-Echo.cpp ****     {
 3453              		.loc 20 1879 5 view .LVU941
 3454 00e8 B5EEC06A 		vcmpe.f32	s12, #0
1877:Veno-Echo.cpp **** 
 3455              		.loc 20 1877 12 view .LVU942
 3456 00ec F0EE467A 		vmov.f32	s15, s12
 3457              	.LVL153:
1879:Veno-Echo.cpp ****     {
 3458              		.loc 20 1879 5 is_stmt 1 view .LVU943
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 158


 3459 00f0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3460 00f4 6ED4     		bmi	.L218
1884:Veno-Echo.cpp ****     {
 3461              		.loc 20 1884 5 view .LVU944
 3462 00f6 F4EEC77A 		vcmpe.f32	s15, s14
 3463 00fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3464 00fe 6EDD     		ble	.L219
1886:Veno-Echo.cpp ****     }
 3465              		.loc 20 1886 16 is_stmt 0 view .LVU945
 3466 0100 F0EE477A 		vmov.f32	s15, s14
 3467 0104 B7EE006B 		vmov.f64	d6, #1.0e+0
 3468              	.LVL154:
 3469              	.L193:
1889:Veno-Echo.cpp **** }
 3470              		.loc 20 1889 5 is_stmt 1 view .LVU946
1889:Veno-Echo.cpp **** }
 3471              		.loc 20 1889 5 is_stmt 0 view .LVU947
 3472              	.LBE1117:
 3473              	.LBE1119:
1208:Veno-Echo.cpp ****         }
 3474              		.loc 20 1208 13 is_stmt 1 view .LVU948
1208:Veno-Echo.cpp ****         }
 3475              		.loc 20 1208 25 is_stmt 0 view .LVU949
 3476 0108 454B     		ldr	r3, .L220+48
 3477 010a 83ED000A 		vstr.32	s0, [r3]
 3478              	.LVL155:
 3479              	.L194:
1216:Veno-Echo.cpp **** 
 3480              		.loc 20 1216 9 is_stmt 1 view .LVU950
1218:Veno-Echo.cpp ****         {
 3481              		.loc 20 1218 9 view .LVU951
 3482 010e 9FED385B 		vldr.64	d5, .L220
 3483 0112 B4EEC56B 		vcmpe.f64	d6, d5
 3484 0116 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3485 011a A4DA     		bge	.L198
1222:Veno-Echo.cpp ****         {
 3486              		.loc 20 1222 14 view .LVU952
 3487 011c 9FED365B 		vldr.64	d5, .L220+8
 3488 0120 B4EEC56B 		vcmpe.f64	d6, d5
 3489 0124 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3490 0128 51D9     		bls	.L207
1228:Veno-Echo.cpp ****         }
 3491              		.loc 20 1228 13 view .LVU953
1228:Veno-Echo.cpp ****         }
 3492              		.loc 20 1228 33 is_stmt 0 view .LVU954
 3493 012a B0EE670A 		vmov.f32	s0, s15
 3494              	.LVL156:
1228:Veno-Echo.cpp ****         }
 3495              		.loc 20 1228 33 view .LVU955
 3496 012e 0020     		movs	r0, #0
 3497 0130 B7EE001A 		vmov.f32	s2, #1.0e+0
 3498 0134 DFED400A 		vldr.32	s1, .L220+72
 3499 0138 FFF7FEFF 		bl	_Z5scalefff9CurveType
 3500              	.LVL157:
1228:Veno-Echo.cpp ****         }
 3501              		.loc 20 1228 33 view .LVU956
 3502 013c 95E7     		b	.L197
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 159


 3503              	.LVL158:
 3504              	.L202:
1228:Veno-Echo.cpp ****         }
 3505              		.loc 20 1228 33 view .LVU957
 3506              	.LBE1130:
 3507              	.LBB1131:
1247:Veno-Echo.cpp ****             {
 3508              		.loc 20 1247 13 is_stmt 1 view .LVU958
1247:Veno-Echo.cpp ****             {
 3509              		.loc 20 1247 16 is_stmt 0 view .LVU959
 3510 013e 3B4B     		ldr	r3, .L220+60
1247:Veno-Echo.cpp ****             {
 3511              		.loc 20 1247 13 view .LVU960
 3512 0140 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3513 0142 7AB9     		cbnz	r2, .L204
1249:Veno-Echo.cpp ****                 {
 3514              		.loc 20 1249 17 is_stmt 1 view .LVU961
 3515              	.LVL159:
 3516              	.LBB1124:
 3517              	.LBI1124:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3518              		.loc 21 75 3 view .LVU962
 3519              	.LBB1125:
 3520              		.loc 21 76 5 view .LVU963
 3521              		.loc 21 76 5 is_stmt 0 view .LVU964
 3522              	.LBE1125:
 3523              	.LBE1124:
1249:Veno-Echo.cpp ****                 {
 3524              		.loc 20 1249 23 view .LVU965
 3525 0144 3A4A     		ldr	r2, .L220+64
1249:Veno-Echo.cpp ****                 {
 3526              		.loc 20 1249 17 view .LVU966
 3527 0146 9FED3B7A 		vldr.32	s14, .L220+68
1249:Veno-Echo.cpp ****                 {
 3528              		.loc 20 1249 23 view .LVU967
 3529 014a D2ED007A 		vldr.32	s15, [r2]
 3530 014e 70EE677A 		vsub.f32	s15, s0, s15
 3531              	.LBB1127:
 3532              	.LBB1126:
 3533              		.loc 21 76 31 view .LVU968
 3534 0152 F0EEE77A 		vabs.f32	s15, s15
 3535              	.LBE1126:
 3536              	.LBE1127:
1249:Veno-Echo.cpp ****                 {
 3537              		.loc 20 1249 17 view .LVU969
 3538 0156 F4EEC77A 		vcmpe.f32	s15, s14
 3539 015a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3540 015e 9CDD     		ble	.L187
1251:Veno-Echo.cpp ****                 }
 3541              		.loc 20 1251 21 is_stmt 1 view .LVU970
1251:Veno-Echo.cpp ****                 }
 3542              		.loc 20 1251 32 is_stmt 0 view .LVU971
 3543 0160 0122     		movs	r2, #1
 3544 0162 1A70     		strb	r2, [r3]
 3545              	.L204:
1256:Veno-Echo.cpp ****         {
 3546              		.loc 20 1256 9 is_stmt 1 view .LVU972
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 160


 3547              	.LBB1128:
 3548              	.LBB1129:
1258:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
 3549              		.loc 20 1258 13 view .LVU973
 3550              	.LVL160:
1259:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3551              		.loc 20 1259 13 view .LVU974
1259:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3552              		.loc 20 1259 24 is_stmt 0 view .LVU975
 3553 0164 B6EE001A 		vmov.f32	s2, #5.0e-1
 3554 0168 DFED330A 		vldr.32	s1, .L220+72
 3555 016c 0020     		movs	r0, #0
 3556 016e FFF7FEFF 		bl	_Z5scalefff9CurveType
 3557              	.LVL161:
1259:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3558              		.loc 20 1259 24 view .LVU976
 3559 0172 B0EE408A 		vmov.f32	s16, s0
 3560              	.LVL162:
1260:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 3561              		.loc 20 1260 13 is_stmt 1 view .LVU977
1260:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 3562              		.loc 20 1260 25 is_stmt 0 view .LVU978
 3563 0176 3148     		ldr	r0, .L220+76
 3564 0178 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3565              	.LVL163:
1261:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 3566              		.loc 20 1261 13 is_stmt 1 view .LVU979
1261:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 3567              		.loc 20 1261 25 is_stmt 0 view .LVU980
 3568 017c 3048     		ldr	r0, .L220+80
 3569 017e B0EE480A 		vmov.f32	s0, s16
 3570 0182 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3571              	.LVL164:
1262:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 3572              		.loc 20 1262 13 is_stmt 1 view .LVU981
1262:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 3573              		.loc 20 1262 25 is_stmt 0 view .LVU982
 3574 0186 B0EE480A 		vmov.f32	s0, s16
 3575 018a 2E48     		ldr	r0, .L220+84
 3576 018c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3577              	.LVL165:
1263:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 3578              		.loc 20 1263 13 is_stmt 1 view .LVU983
1263:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 3579              		.loc 20 1263 25 is_stmt 0 view .LVU984
 3580 0190 B0EE480A 		vmov.f32	s0, s16
 3581 0194 2C48     		ldr	r0, .L220+88
 3582 0196 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3583              	.LVL166:
1264:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 3584              		.loc 20 1264 13 is_stmt 1 view .LVU985
1264:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 3585              		.loc 20 1264 30 is_stmt 0 view .LVU986
 3586 019a B0EE480A 		vmov.f32	s0, s16
 3587 019e 2B48     		ldr	r0, .L220+92
 3588 01a0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3589              	.LVL167:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 161


1265:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 3590              		.loc 20 1265 13 is_stmt 1 view .LVU987
1265:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 3591              		.loc 20 1265 30 is_stmt 0 view .LVU988
 3592 01a4 B0EE480A 		vmov.f32	s0, s16
 3593 01a8 2948     		ldr	r0, .L220+96
 3594 01aa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3595              	.LVL168:
1266:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 3596              		.loc 20 1266 13 is_stmt 1 view .LVU989
1266:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 3597              		.loc 20 1266 30 is_stmt 0 view .LVU990
 3598 01ae B0EE480A 		vmov.f32	s0, s16
 3599 01b2 2848     		ldr	r0, .L220+100
 3600 01b4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3601              	.LVL169:
1267:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 3602              		.loc 20 1267 13 is_stmt 1 view .LVU991
1267:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 3603              		.loc 20 1267 30 is_stmt 0 view .LVU992
 3604 01b8 B0EE480A 		vmov.f32	s0, s16
 3605 01bc 2648     		ldr	r0, .L220+104
 3606 01be FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3607              	.LVL170:
1268:Veno-Echo.cpp ****         }
 3608              		.loc 20 1268 13 is_stmt 1 view .LVU993
1268:Veno-Echo.cpp ****         }
 3609              		.loc 20 1268 35 is_stmt 0 view .LVU994
 3610 01c2 264B     		ldr	r3, .L220+108
 3611 01c4 83ED068A 		vstr.32	s16, [r3, #24]
 3612              	.LBE1129:
 3613              	.LBE1128:
 3614              	.LBE1131:
 3615              	.LBE1136:
1271:Veno-Echo.cpp **** 
 3616              		.loc 20 1271 1 view .LVU995
 3617 01c8 BDEC028B 		vldm	sp!, {d8}
 3618              		.cfi_remember_state
 3619              		.cfi_restore 80
 3620              		.cfi_restore 81
 3621              		.cfi_def_cfa_offset 8
 3622              	.LVL171:
1271:Veno-Echo.cpp **** 
 3623              		.loc 20 1271 1 view .LVU996
 3624 01cc 10BD     		pop	{r4, pc}
 3625              	.LVL172:
 3626              	.L207:
 3627              		.cfi_restore_state
 3628              	.LBB1137:
 3629              	.LBB1132:
1224:Veno-Echo.cpp ****         }
 3630              		.loc 20 1224 26 view .LVU997
 3631 01ce 9FED1A0A 		vldr.32	s0, .L220+72
 3632              	.LVL173:
1224:Veno-Echo.cpp ****         }
 3633              		.loc 20 1224 26 view .LVU998
 3634 01d2 4AE7     		b	.L197
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 162


 3635              	.LVL174:
 3636              	.L218:
 3637              	.LBB1120:
 3638              	.LBB1118:
1224:Veno-Echo.cpp ****         }
 3639              		.loc 20 1224 26 view .LVU999
 3640 01d4 9FED0A6B 		vldr.64	d6, .L220+16
 3641              	.LVL175:
1881:Veno-Echo.cpp ****     }
 3642              		.loc 20 1881 16 view .LVU1000
 3643 01d8 DFED177A 		vldr.32	s15, .L220+72
 3644              	.LVL176:
1881:Veno-Echo.cpp ****     }
 3645              		.loc 20 1881 16 view .LVU1001
 3646 01dc 94E7     		b	.L193
 3647              	.LVL177:
 3648              	.L219:
1881:Veno-Echo.cpp ****     }
 3649              		.loc 20 1881 16 view .LVU1002
 3650 01de B7EEE76A 		vcvt.f64.f32	d6, s15
 3651              	.LVL178:
1881:Veno-Echo.cpp ****     }
 3652              		.loc 20 1881 16 view .LVU1003
 3653 01e2 91E7     		b	.L193
 3654              	.LVL179:
 3655              	.L213:
1881:Veno-Echo.cpp ****     }
 3656              		.loc 20 1881 16 view .LVU1004
 3657 01e4 B7EEE76A 		vcvt.f64.f32	d6, s15
 3658 01e8 91E7     		b	.L194
 3659              	.L221:
 3660 01ea 00BFAFF3 		.align	3
 3660      0080
 3661              	.L220:
 3662 01f0 5C8FC2F5 		.word	4123168604
 3663 01f4 285CEF3F 		.word	1072651304
 3664 01f8 7B14AE47 		.word	1202590843
 3665 01fc E17A943F 		.word	1066695393
 3666 0200 00000000 		.word	0
 3667 0204 00000000 		.word	0
 3668 0208 18000000 		.word	.LANCHOR4+24
 3669 020c 00000000 		.word	.LANCHOR7
 3670 0210 00000000 		.word	.LANCHOR51
 3671 0214 00000000 		.word	.LANCHOR52
 3672 0218 00000000 		.word	.LANCHOR53
 3673 021c 00000000 		.word	.LANCHOR50
 3674 0220 00000000 		.word	.LANCHOR54
 3675 0224 00000000 		.word	.LANCHOR55
 3676 0228 6F12833C 		.word	1015222895
 3677 022c 00000000 		.word	.LANCHOR56
 3678 0230 00000000 		.word	.LANCHOR57
 3679 0234 0AD7A33B 		.word	1000593162
 3680 0238 00000000 		.word	0
 3681 023c 00000000 		.word	.LANCHOR46
 3682 0240 00000000 		.word	.LANCHOR47
 3683 0244 00000000 		.word	.LANCHOR34
 3684 0248 00000000 		.word	.LANCHOR35
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 163


 3685 024c 00000000 		.word	.LANCHOR48
 3686 0250 00000000 		.word	.LANCHOR49
 3687 0254 00000000 		.word	.LANCHOR36
 3688 0258 00000000 		.word	.LANCHOR37
 3689 025c 00000000 		.word	.LANCHOR15
 3690              	.LBE1118:
 3691              	.LBE1120:
 3692              	.LBE1132:
 3693              	.LBE1137:
 3694              		.cfi_endproc
 3695              	.LFE4321:
 3697              		.section	.text._Z15Update_width_CVv,"ax",%progbits
 3698              		.align	1
 3699              		.p2align 2,,3
 3700              		.global	_Z15Update_width_CVv
 3701              		.syntax unified
 3702              		.thumb
 3703              		.thumb_func
 3704              		.fpu fpv5-d16
 3706              	_Z15Update_width_CVv:
 3707              	.LFB4322:
1274:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 3708              		.loc 20 1274 1 is_stmt 1 view -0
 3709              		.cfi_startproc
 3710              		@ args = 0, pretend = 0, frame = 0
 3711              		@ frame_needed = 0, uses_anonymous_args = 0
1275:Veno-Echo.cpp **** }
 3712              		.loc 20 1275 5 view .LVU1006
1274:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 3713              		.loc 20 1274 1 is_stmt 0 view .LVU1007
 3714 0000 08B5     		push	{r3, lr}
 3715              		.cfi_def_cfa_offset 8
 3716              		.cfi_offset 3, -8
 3717              		.cfi_offset 14, -4
1275:Veno-Echo.cpp **** }
 3718              		.loc 20 1275 30 view .LVU1008
 3719 0002 0521     		movs	r1, #5
 3720 0004 0348     		ldr	r0, .L224
 3721 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3722              	.LVL180:
1275:Veno-Echo.cpp **** }
 3723              		.loc 20 1275 13 view .LVU1009
 3724 000a 034B     		ldr	r3, .L224+4
 3725 000c 83ED000A 		vstr.32	s0, [r3]
1276:Veno-Echo.cpp **** 
 3726              		.loc 20 1276 1 view .LVU1010
 3727 0010 08BD     		pop	{r3, pc}
 3728              	.L225:
 3729 0012 00BF     		.align	2
 3730              	.L224:
 3731 0014 18000000 		.word	.LANCHOR4+24
 3732 0018 00000000 		.word	.LANCHOR58
 3733              		.cfi_endproc
 3734              	.LFE4322:
 3736              		.section	.text._Z12Update_widthv,"ax",%progbits
 3737              		.align	1
 3738              		.p2align 2,,3
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 164


 3739              		.global	_Z12Update_widthv
 3740              		.syntax unified
 3741              		.thumb
 3742              		.thumb_func
 3743              		.fpu fpv5-d16
 3745              	_Z12Update_widthv:
 3746              	.LFB4323:
1279:Veno-Echo.cpp ****     static bool lastShift{};
 3747              		.loc 20 1279 1 is_stmt 1 view -0
 3748              		.cfi_startproc
 3749              		@ args = 0, pretend = 0, frame = 0
 3750              		@ frame_needed = 0, uses_anonymous_args = 0
1280:Veno-Echo.cpp ****     static bool width_pickup{};
 3751              		.loc 20 1280 5 view .LVU1012
1281:Veno-Echo.cpp ****     static bool ModDepth_pickup{};
 3752              		.loc 20 1281 5 view .LVU1013
1282:Veno-Echo.cpp **** 
 3753              		.loc 20 1282 5 view .LVU1014
1284:Veno-Echo.cpp **** 
 3754              		.loc 20 1284 5 view .LVU1015
1287:Veno-Echo.cpp **** 
 3755              		.loc 20 1287 5 view .LVU1016
1287:Veno-Echo.cpp **** 
 3756              		.loc 20 1287 39 is_stmt 0 view .LVU1017
 3757 0000 0722     		movs	r2, #7
 3758 0002 5F48     		ldr	r0, .L255
 3759 0004 1146     		mov	r1, r2
1279:Veno-Echo.cpp ****     static bool lastShift{};
 3760              		.loc 20 1279 1 view .LVU1018
 3761 0006 10B5     		push	{r4, lr}
 3762              		.cfi_def_cfa_offset 8
 3763              		.cfi_offset 4, -8
 3764              		.cfi_offset 14, -4
 3765 0008 2DED028B 		vpush.64	{d8}
 3766              		.cfi_def_cfa_offset 16
 3767              		.cfi_offset 80, -16
 3768              		.cfi_offset 81, -12
1287:Veno-Echo.cpp **** 
 3769              		.loc 20 1287 39 view .LVU1019
 3770 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3771              	.LVL181:
 3772              	.LBB1138:
1289:Veno-Echo.cpp ****     {   
 3773              		.loc 20 1289 9 view .LVU1020
 3774 0010 5C4B     		ldr	r3, .L255+4
 3775              	.LBE1138:
1287:Veno-Echo.cpp **** 
 3776              		.loc 20 1287 39 view .LVU1021
 3777 0012 B0EE408A 		vmov.f32	s16, s0
 3778              	.LVL182:
1289:Veno-Echo.cpp ****     {   
 3779              		.loc 20 1289 5 is_stmt 1 view .LVU1022
 3780              	.LBB1178:
 3781              	.LBB1139:
1293:Veno-Echo.cpp ****         {
 3782              		.loc 20 1293 19 is_stmt 0 view .LVU1023
 3783 0016 5C4A     		ldr	r2, .L255+8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 165


 3784              	.LBE1139:
1289:Veno-Echo.cpp ****     {   
 3785              		.loc 20 1289 5 view .LVU1024
 3786 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3787 001a 002B     		cmp	r3, #0
 3788 001c 3ED1     		bne	.L227
 3789              	.LBB1168:
1291:Veno-Echo.cpp ****         //update pickup
 3790              		.loc 20 1291 9 is_stmt 1 view .LVU1025
1293:Veno-Echo.cpp ****         {
 3791              		.loc 20 1293 9 view .LVU1026
 3792 001e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3793 0020 0029     		cmp	r1, #0
 3794 0022 48D0     		beq	.L228
1295:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
 3795              		.loc 20 1295 13 view .LVU1027
1296:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3796              		.loc 20 1296 26 is_stmt 0 view .LVU1028
 3797 0024 5948     		ldr	r0, .L255+12
1297:Veno-Echo.cpp ****         }
 3798              		.loc 20 1297 23 view .LVU1029
 3799 0026 5A49     		ldr	r1, .L255+16
1295:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
 3800              		.loc 20 1295 23 view .LVU1030
 3801 0028 1370     		strb	r3, [r2]
1296:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3802              		.loc 20 1296 13 is_stmt 1 view .LVU1031
1296:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3803              		.loc 20 1296 26 is_stmt 0 view .LVU1032
 3804 002a 0370     		strb	r3, [r0]
1297:Veno-Echo.cpp ****         }
 3805              		.loc 20 1297 13 is_stmt 1 view .LVU1033
1297:Veno-Echo.cpp ****         }
 3806              		.loc 20 1297 23 is_stmt 0 view .LVU1034
 3807 002c 81ED000A 		vstr.32	s0, [r1]
 3808              	.L229:
1312:Veno-Echo.cpp **** 
 3809              		.loc 20 1312 9 is_stmt 1 view .LVU1035
 3810              	.LVL183:
1314:Veno-Echo.cpp ****         {
 3811              		.loc 20 1314 9 view .LVU1036
1322:Veno-Echo.cpp ****         }
 3812              		.loc 20 1322 13 view .LVU1037
 3813              	.LBB1140:
 3814              	.LBI1140:
1874:Veno-Echo.cpp **** {
 3815              		.loc 20 1874 7 view .LVU1038
 3816              	.LBB1141:
1876:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3817              		.loc 20 1876 5 view .LVU1039
1877:Veno-Echo.cpp **** 
 3818              		.loc 20 1877 5 view .LVU1040
 3819              	.LBE1141:
 3820              	.LBE1140:
1322:Veno-Echo.cpp ****         }
 3821              		.loc 20 1322 32 is_stmt 0 view .LVU1041
 3822 0030 584A     		ldr	r2, .L255+20
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 166


 3823              	.LBB1145:
 3824              	.LBB1142:
1877:Veno-Echo.cpp **** 
 3825              		.loc 20 1877 39 view .LVU1042
 3826 0032 B7EE007A 		vmov.f32	s14, #1.0e+0
1877:Veno-Echo.cpp **** 
 3827              		.loc 20 1877 49 view .LVU1043
 3828 0036 B6EE006A 		vmov.f32	s12, #5.0e-1
 3829              	.LBE1142:
 3830              	.LBE1145:
1322:Veno-Echo.cpp ****         }
 3831              		.loc 20 1322 32 view .LVU1044
 3832 003a 574B     		ldr	r3, .L255+24
 3833              	.LBB1146:
 3834              	.LBB1143:
1877:Veno-Echo.cpp **** 
 3835              		.loc 20 1877 39 view .LVU1045
 3836 003c D2ED007A 		vldr.32	s15, [r2]
1877:Veno-Echo.cpp **** 
 3837              		.loc 20 1877 12 view .LVU1046
 3838 0040 F0EE006A 		vmov.f32	s13, #2.0e+0
 3839 0044 93ED000A 		vldr.32	s0, [r3]
 3840              	.LVL184:
1877:Veno-Echo.cpp **** 
 3841              		.loc 20 1877 39 view .LVU1047
 3842 0048 77EE677A 		vsub.f32	s15, s14, s15
1877:Veno-Echo.cpp **** 
 3843              		.loc 20 1877 49 view .LVU1048
 3844 004c 77EEC67A 		vsub.f32	s15, s15, s12
1877:Veno-Echo.cpp **** 
 3845              		.loc 20 1877 12 view .LVU1049
 3846 0050 A7EEA60A 		vfma.f32	s0, s15, s13
 3847              	.LVL185:
1879:Veno-Echo.cpp ****     {
 3848              		.loc 20 1879 5 is_stmt 1 view .LVU1050
 3849 0054 B5EEC00A 		vcmpe.f32	s0, #0
 3850 0058 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3851 005c 00F18A80 		bmi	.L253
1884:Veno-Echo.cpp ****     {
 3852              		.loc 20 1884 5 view .LVU1051
1886:Veno-Echo.cpp ****     }
 3853              		.loc 20 1886 16 is_stmt 0 view .LVU1052
 3854 0060 B4EE470A 		vcmp.f32	s0, s14
 3855 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3856 0068 37FE000A 		vselgt.f32	s0, s14, s0
 3857              	.LVL186:
 3858              	.L235:
1889:Veno-Echo.cpp **** }
 3859              		.loc 20 1889 5 is_stmt 1 view .LVU1053
1889:Veno-Echo.cpp **** }
 3860              		.loc 20 1889 5 is_stmt 0 view .LVU1054
 3861              	.LBE1143:
 3862              	.LBE1146:
1322:Veno-Echo.cpp ****         }
 3863              		.loc 20 1322 32 view .LVU1055
 3864 006c F6EE000A 		vmov.f32	s1, #5.0e-1
 3865 0070 0020     		movs	r0, #0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 167


 3866 0072 9FED4A1A 		vldr.32	s2, .L255+28
 3867 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 3868              	.LVL187:
 3869              	.L234:
1325:Veno-Echo.cpp ****             WidthXfade.SetPos(width);
 3870              		.loc 20 1325 13 is_stmt 1 view .LVU1056
 3871              	.LBB1147:
 3872              	.LBI1147:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3873              		.loc 23 135 13 view .LVU1057
 3874              	.LBB1148:
 3875              		.loc 23 137 5 view .LVU1058
 3876              		.loc 23 137 9 is_stmt 0 view .LVU1059
 3877 007a 494B     		ldr	r3, .L255+32
 3878 007c 9FED497A 		vldr.32	s14, .L255+36
 3879 0080 D3ED007A 		vldr.32	s15, [r3]
 3880              	.LBE1148:
 3881              	.LBE1147:
 3882              	.LBB1151:
 3883              	.LBB1152:
  38:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initializes CrossFade module
  39:../DaisySP/Source/Dynamics/crossfade.h ****         Defaults
  40:../DaisySP/Source/Dynamics/crossfade.h ****         - current position = .5
  41:../DaisySP/Source/Dynamics/crossfade.h ****         - curve = linear
  42:../DaisySP/Source/Dynamics/crossfade.h ****     */
  43:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init(int curve)
  44:../DaisySP/Source/Dynamics/crossfade.h ****     {
  45:../DaisySP/Source/Dynamics/crossfade.h ****         pos_   = 0.5f;
  46:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
  47:../DaisySP/Source/Dynamics/crossfade.h ****     }
  48:../DaisySP/Source/Dynamics/crossfade.h **** 
  49:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initialize with default linear curve 
  50:../DaisySP/Source/Dynamics/crossfade.h ****     */
  51:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init() { Init(CROSSFADE_LIN); }
  52:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
  53:../DaisySP/Source/Dynamics/crossfade.h ****     */
  54:../DaisySP/Source/Dynamics/crossfade.h ****     float Process(float &in1, float &in2);
  55:../DaisySP/Source/Dynamics/crossfade.h **** 
  56:../DaisySP/Source/Dynamics/crossfade.h **** 
  57:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets position of CrossFade between two input signals
  58:../DaisySP/Source/Dynamics/crossfade.h ****         Input range: 0 to 1
  59:../DaisySP/Source/Dynamics/crossfade.h ****     */
  60:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetPos(float pos) { pos_ = pos; }
 3884              		.loc 10 60 42 view .LVU1060
 3885 0084 484A     		ldr	r2, .L255+40
 3886              	.LBE1152:
 3887              	.LBE1151:
 3888              	.LBB1154:
 3889              	.LBB1149:
 3890              		.loc 23 137 24 view .LVU1061
 3891 0086 30EE670A 		vsub.f32	s0, s0, s15
 3892              	.LVL188:
 3893              		.loc 23 137 24 view .LVU1062
 3894              	.LBE1149:
 3895              	.LBE1154:
 3896              	.LBE1168:
 3897              	.LBE1178:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 168


1357:Veno-Echo.cpp **** 
 3898              		.loc 20 1357 1 view .LVU1063
 3899 008a BDEC028B 		vldm	sp!, {d8}
 3900              		.cfi_remember_state
 3901              		.cfi_restore 80
 3902              		.cfi_restore 81
 3903              		.cfi_def_cfa_offset 8
 3904              	.LVL189:
 3905              	.LBB1179:
 3906              	.LBB1169:
 3907              	.LBB1155:
 3908              	.LBB1150:
 3909              		.loc 23 137 9 view .LVU1064
 3910 008e E0EE077A 		vfma.f32	s15, s0, s14
 3911 0092 C3ED007A 		vstr.32	s15, [r3]
 3912              	.LVL190:
 3913              		.loc 23 137 9 view .LVU1065
 3914              	.LBE1150:
 3915              	.LBE1155:
1326:Veno-Echo.cpp ****     }
 3916              		.loc 20 1326 13 is_stmt 1 view .LVU1066
 3917              	.LBB1156:
 3918              	.LBI1151:
 3919              		.loc 10 60 17 view .LVU1067
 3920              	.LBB1153:
 3921              		.loc 10 60 37 view .LVU1068
 3922              		.loc 10 60 42 is_stmt 0 view .LVU1069
 3923 0096 C2ED007A 		vstr.32	s15, [r2]
 3924              	.LBE1153:
 3925              	.LBE1156:
 3926              	.LBE1169:
 3927              	.LBE1179:
1357:Veno-Echo.cpp **** 
 3928              		.loc 20 1357 1 view .LVU1070
 3929 009a 10BD     		pop	{r4, pc}
 3930              	.LVL191:
 3931              	.L227:
 3932              		.cfi_restore_state
 3933              	.LBB1180:
 3934              	.LBB1170:
1331:Veno-Echo.cpp **** 
 3935              		.loc 20 1331 9 is_stmt 1 view .LVU1071
1333:Veno-Echo.cpp ****         {
 3936              		.loc 20 1333 9 view .LVU1072
 3937 009c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3938 009e 002B     		cmp	r3, #0
 3939 00a0 43D1     		bne	.L238
1335:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 3940              		.loc 20 1335 13 view .LVU1073
1335:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 3941              		.loc 20 1335 23 is_stmt 0 view .LVU1074
 3942 00a2 0124     		movs	r4, #1
1336:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 3943              		.loc 20 1336 29 view .LVU1075
 3944 00a4 4148     		ldr	r0, .L255+44
1337:Veno-Echo.cpp ****         }
 3945              		.loc 20 1337 26 view .LVU1076
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 169


 3946 00a6 4249     		ldr	r1, .L255+48
1335:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 3947              		.loc 20 1335 23 view .LVU1077
 3948 00a8 1470     		strb	r4, [r2]
1336:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 3949              		.loc 20 1336 13 is_stmt 1 view .LVU1078
1336:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 3950              		.loc 20 1336 29 is_stmt 0 view .LVU1079
 3951 00aa 0370     		strb	r3, [r0]
1337:Veno-Echo.cpp ****         }
 3952              		.loc 20 1337 13 is_stmt 1 view .LVU1080
1337:Veno-Echo.cpp ****         }
 3953              		.loc 20 1337 26 is_stmt 0 view .LVU1081
 3954 00ac 81ED000A 		vstr.32	s0, [r1]
 3955              	.L226:
1337:Veno-Echo.cpp ****         }
 3956              		.loc 20 1337 26 view .LVU1082
 3957              	.LBE1170:
 3958              	.LBE1180:
1357:Veno-Echo.cpp **** 
 3959              		.loc 20 1357 1 view .LVU1083
 3960 00b0 BDEC028B 		vldm	sp!, {d8}
 3961              		.cfi_remember_state
 3962              		.cfi_restore 80
 3963              		.cfi_restore 81
 3964              		.cfi_def_cfa_offset 8
 3965 00b4 10BD     		pop	{r4, pc}
 3966              	.L228:
 3967              		.cfi_restore_state
 3968              	.LBB1181:
 3969              	.LBB1175:
1302:Veno-Echo.cpp ****             {
 3970              		.loc 20 1302 13 is_stmt 1 view .LVU1084
1302:Veno-Echo.cpp ****             {
 3971              		.loc 20 1302 16 is_stmt 0 view .LVU1085
 3972 00b6 354B     		ldr	r3, .L255+12
1302:Veno-Echo.cpp ****             {
 3973              		.loc 20 1302 13 view .LVU1086
 3974 00b8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3975 00ba 7AB9     		cbnz	r2, .L230
1304:Veno-Echo.cpp ****                 {
 3976              		.loc 20 1304 17 is_stmt 1 view .LVU1087
 3977              	.LVL192:
 3978              	.LBB1157:
 3979              	.LBI1157:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3980              		.loc 21 75 3 view .LVU1088
 3981              	.LBB1158:
 3982              		.loc 21 76 5 view .LVU1089
 3983              		.loc 21 76 5 is_stmt 0 view .LVU1090
 3984              	.LBE1158:
 3985              	.LBE1157:
1304:Veno-Echo.cpp ****                 {
 3986              		.loc 20 1304 23 view .LVU1091
 3987 00bc 344A     		ldr	r2, .L255+16
1304:Veno-Echo.cpp ****                 {
 3988              		.loc 20 1304 17 view .LVU1092
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 170


 3989 00be 9FED3D7A 		vldr.32	s14, .L255+52
1304:Veno-Echo.cpp ****                 {
 3990              		.loc 20 1304 23 view .LVU1093
 3991 00c2 D2ED007A 		vldr.32	s15, [r2]
 3992 00c6 70EE677A 		vsub.f32	s15, s0, s15
 3993              	.LBB1160:
 3994              	.LBB1159:
 3995              		.loc 21 76 31 view .LVU1094
 3996 00ca F0EEE77A 		vabs.f32	s15, s15
 3997              	.LBE1159:
 3998              	.LBE1160:
1304:Veno-Echo.cpp ****                 {
 3999              		.loc 20 1304 17 view .LVU1095
 4000 00ce F4EEC77A 		vcmpe.f32	s15, s14
 4001 00d2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4002 00d6 ABDD     		ble	.L229
1306:Veno-Echo.cpp ****                 }
 4003              		.loc 20 1306 21 is_stmt 1 view .LVU1096
1306:Veno-Echo.cpp ****                 }
 4004              		.loc 20 1306 34 is_stmt 0 view .LVU1097
 4005 00d8 0122     		movs	r2, #1
 4006 00da 1A70     		strb	r2, [r3]
 4007              	.L230:
1312:Veno-Echo.cpp **** 
 4008              		.loc 20 1312 9 is_stmt 1 view .LVU1098
 4009              	.LVL193:
1314:Veno-Echo.cpp ****         {
 4010              		.loc 20 1314 9 view .LVU1099
1316:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4011              		.loc 20 1316 13 view .LVU1100
 4012              	.LBB1161:
 4013              	.LBI1161:
1874:Veno-Echo.cpp **** {
 4014              		.loc 20 1874 7 view .LVU1101
 4015              	.LBB1162:
1876:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4016              		.loc 20 1876 5 view .LVU1102
1877:Veno-Echo.cpp **** 
 4017              		.loc 20 1877 5 view .LVU1103
 4018              	.LBE1162:
 4019              	.LBE1161:
1316:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4020              		.loc 20 1316 32 is_stmt 0 view .LVU1104
 4021 00dc 2D4B     		ldr	r3, .L255+20
 4022              	.LBB1165:
 4023              	.LBB1163:
1877:Veno-Echo.cpp **** 
 4024              		.loc 20 1877 39 view .LVU1105
 4025 00de B7EE007A 		vmov.f32	s14, #1.0e+0
1877:Veno-Echo.cpp **** 
 4026              		.loc 20 1877 49 view .LVU1106
 4027 00e2 B6EE006A 		vmov.f32	s12, #5.0e-1
1877:Veno-Echo.cpp **** 
 4028              		.loc 20 1877 39 view .LVU1107
 4029 00e6 D3ED007A 		vldr.32	s15, [r3]
1877:Veno-Echo.cpp **** 
 4030              		.loc 20 1877 12 view .LVU1108
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 171


 4031 00ea F0EE006A 		vmov.f32	s13, #2.0e+0
 4032 00ee B0EE480A 		vmov.f32	s0, s16
 4033              	.LVL194:
1877:Veno-Echo.cpp **** 
 4034              		.loc 20 1877 39 view .LVU1109
 4035 00f2 77EE677A 		vsub.f32	s15, s14, s15
1877:Veno-Echo.cpp **** 
 4036              		.loc 20 1877 49 view .LVU1110
 4037 00f6 77EEC67A 		vsub.f32	s15, s15, s12
1877:Veno-Echo.cpp **** 
 4038              		.loc 20 1877 12 view .LVU1111
 4039 00fa A7EEA60A 		vfma.f32	s0, s15, s13
 4040              	.LVL195:
1879:Veno-Echo.cpp ****     {
 4041              		.loc 20 1879 5 is_stmt 1 view .LVU1112
 4042 00fe B5EEC00A 		vcmpe.f32	s0, #0
 4043 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4044 0106 38D4     		bmi	.L254
1884:Veno-Echo.cpp ****     {
 4045              		.loc 20 1884 5 view .LVU1113
1886:Veno-Echo.cpp ****     }
 4046              		.loc 20 1886 16 is_stmt 0 view .LVU1114
 4047 0108 B4EE470A 		vcmp.f32	s0, s14
 4048 010c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4049 0110 37FE000A 		vselgt.f32	s0, s14, s0
 4050              	.LVL196:
 4051              	.L232:
1889:Veno-Echo.cpp **** }
 4052              		.loc 20 1889 5 is_stmt 1 view .LVU1115
1889:Veno-Echo.cpp **** }
 4053              		.loc 20 1889 5 is_stmt 0 view .LVU1116
 4054              	.LBE1163:
 4055              	.LBE1165:
1316:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4056              		.loc 20 1316 32 view .LVU1117
 4057 0114 F6EE000A 		vmov.f32	s1, #5.0e-1
 4058 0118 0020     		movs	r0, #0
 4059 011a 9FED201A 		vldr.32	s2, .L255+28
 4060 011e FFF7FEFF 		bl	_Z5scalefff9CurveType
 4061              	.LVL197:
1317:Veno-Echo.cpp ****         }
 4062              		.loc 20 1317 24 view .LVU1118
 4063 0122 1D4B     		ldr	r3, .L255+24
 4064              	.LVL198:
1317:Veno-Echo.cpp ****         }
 4065              		.loc 20 1317 13 is_stmt 1 view .LVU1119
1317:Veno-Echo.cpp ****         }
 4066              		.loc 20 1317 24 is_stmt 0 view .LVU1120
 4067 0124 83ED008A 		vstr.32	s16, [r3]
 4068 0128 A7E7     		b	.L234
 4069              	.LVL199:
 4070              	.L238:
1317:Veno-Echo.cpp ****         }
 4071              		.loc 20 1317 24 view .LVU1121
 4072              	.LBE1175:
 4073              	.LBB1176:
1342:Veno-Echo.cpp ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 172


 4074              		.loc 20 1342 13 is_stmt 1 view .LVU1122
1342:Veno-Echo.cpp ****             {
 4075              		.loc 20 1342 16 is_stmt 0 view .LVU1123
 4076 012a 204B     		ldr	r3, .L255+44
1342:Veno-Echo.cpp ****             {
 4077              		.loc 20 1342 13 view .LVU1124
 4078 012c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4079 012e 7AB9     		cbnz	r2, .L240
1344:Veno-Echo.cpp ****                 {
 4080              		.loc 20 1344 17 is_stmt 1 view .LVU1125
 4081              	.LVL200:
 4082              	.LBB1171:
 4083              	.LBI1171:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4084              		.loc 21 75 3 view .LVU1126
 4085              	.LBB1172:
 4086              		.loc 21 76 5 view .LVU1127
 4087              		.loc 21 76 5 is_stmt 0 view .LVU1128
 4088              	.LBE1172:
 4089              	.LBE1171:
1344:Veno-Echo.cpp ****                 {
 4090              		.loc 20 1344 23 view .LVU1129
 4091 0130 1F4A     		ldr	r2, .L255+48
1344:Veno-Echo.cpp ****                 {
 4092              		.loc 20 1344 17 view .LVU1130
 4093 0132 9FED207A 		vldr.32	s14, .L255+52
1344:Veno-Echo.cpp ****                 {
 4094              		.loc 20 1344 23 view .LVU1131
 4095 0136 D2ED007A 		vldr.32	s15, [r2]
 4096 013a 70EE677A 		vsub.f32	s15, s0, s15
 4097              	.LBB1174:
 4098              	.LBB1173:
 4099              		.loc 21 76 31 view .LVU1132
 4100 013e F0EEE77A 		vabs.f32	s15, s15
 4101              	.LBE1173:
 4102              	.LBE1174:
1344:Veno-Echo.cpp ****                 {
 4103              		.loc 20 1344 17 view .LVU1133
 4104 0142 F4EEC77A 		vcmpe.f32	s15, s14
 4105 0146 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4106 014a B1DD     		ble	.L226
1346:Veno-Echo.cpp ****                 }
 4107              		.loc 20 1346 21 is_stmt 1 view .LVU1134
1346:Veno-Echo.cpp ****                 }
 4108              		.loc 20 1346 37 is_stmt 0 view .LVU1135
 4109 014c 0122     		movs	r2, #1
 4110 014e 1A70     		strb	r2, [r3]
 4111              	.L240:
1351:Veno-Echo.cpp ****         {
 4112              		.loc 20 1351 9 is_stmt 1 view .LVU1136
1353:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4113              		.loc 20 1353 13 view .LVU1137
1353:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4114              		.loc 20 1353 29 is_stmt 0 view .LVU1138
 4115 0150 B0EE480A 		vmov.f32	s0, s16
 4116              	.LVL201:
1353:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 173


 4117              		.loc 20 1353 29 view .LVU1139
 4118 0154 0020     		movs	r0, #0
 4119 0156 9FED181A 		vldr.32	s2, .L255+56
 4120 015a DFED100A 		vldr.32	s1, .L255+28
 4121 015e FFF7FEFF 		bl	_Z5scalefff9CurveType
 4122              	.LVL202:
1353:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4123              		.loc 20 1353 22 view .LVU1140
 4124 0162 164A     		ldr	r2, .L255+60
1354:Veno-Echo.cpp ****         }
 4125              		.loc 20 1354 34 view .LVU1141
 4126 0164 164B     		ldr	r3, .L255+64
1353:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4127              		.loc 20 1353 22 view .LVU1142
 4128 0166 82ED000A 		vstr.32	s0, [r2]
1354:Veno-Echo.cpp ****         }
 4129              		.loc 20 1354 13 is_stmt 1 view .LVU1143
1354:Veno-Echo.cpp ****         }
 4130              		.loc 20 1354 34 is_stmt 0 view .LVU1144
 4131 016a 83ED020A 		vstr.32	s0, [r3, #8]
 4132              	.LBE1176:
 4133              	.LBE1181:
1357:Veno-Echo.cpp **** 
 4134              		.loc 20 1357 1 view .LVU1145
 4135 016e BDEC028B 		vldm	sp!, {d8}
 4136              		.cfi_remember_state
 4137              		.cfi_restore 80
 4138              		.cfi_restore 81
 4139              		.cfi_def_cfa_offset 8
 4140              	.LVL203:
1357:Veno-Echo.cpp **** 
 4141              		.loc 20 1357 1 view .LVU1146
 4142 0172 10BD     		pop	{r4, pc}
 4143              	.LVL204:
 4144              	.L253:
 4145              		.cfi_restore_state
 4146              	.LBB1182:
 4147              	.LBB1177:
 4148              	.LBB1166:
 4149              	.LBB1144:
1881:Veno-Echo.cpp ****     }
 4150              		.loc 20 1881 16 view .LVU1147
 4151 0174 9FED090A 		vldr.32	s0, .L255+28
 4152              	.LVL205:
1881:Veno-Echo.cpp ****     }
 4153              		.loc 20 1881 16 view .LVU1148
 4154 0178 78E7     		b	.L235
 4155              	.LVL206:
 4156              	.L254:
1881:Veno-Echo.cpp ****     }
 4157              		.loc 20 1881 16 view .LVU1149
 4158              	.LBE1144:
 4159              	.LBE1166:
 4160              	.LBB1167:
 4161              	.LBB1164:
 4162 017a 9FED080A 		vldr.32	s0, .L255+28
 4163              	.LVL207:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 174


1881:Veno-Echo.cpp ****     }
 4164              		.loc 20 1881 16 view .LVU1150
 4165 017e C9E7     		b	.L232
 4166              	.L256:
 4167              		.align	2
 4168              	.L255:
 4169 0180 18000000 		.word	.LANCHOR4+24
 4170 0184 00000000 		.word	.LANCHOR7
 4171 0188 00000000 		.word	.LANCHOR59
 4172 018c 00000000 		.word	.LANCHOR60
 4173 0190 00000000 		.word	.LANCHOR61
 4174 0194 00000000 		.word	.LANCHOR58
 4175 0198 00000000 		.word	.LANCHOR62
 4176 019c 00000000 		.word	0
 4177 01a0 00000000 		.word	.LANCHOR63
 4178 01a4 6F12033D 		.word	1023611503
 4179 01a8 00000000 		.word	.LANCHOR64
 4180 01ac 00000000 		.word	.LANCHOR65
 4181 01b0 00000000 		.word	.LANCHOR66
 4182 01b4 0AD7A33B 		.word	1000593162
 4183 01b8 0000FA43 		.word	1140457472
 4184 01bc 00000000 		.word	.LANCHOR67
 4185 01c0 00000000 		.word	.LANCHOR15
 4186              	.LBE1164:
 4187              	.LBE1167:
 4188              	.LBE1177:
 4189              	.LBE1182:
 4190              		.cfi_endproc
 4191              	.LFE4323:
 4193              		.section	.text._Z20Update_crossfeedbackv,"ax",%progbits
 4194              		.align	1
 4195              		.p2align 2,,3
 4196              		.global	_Z20Update_crossfeedbackv
 4197              		.syntax unified
 4198              		.thumb
 4199              		.thumb_func
 4200              		.fpu fpv5-d16
 4202              	_Z20Update_crossfeedbackv:
 4203              	.LFB4324:
1360:Veno-Echo.cpp ****     static bool lastShift{};
 4204              		.loc 20 1360 1 is_stmt 1 view -0
 4205              		.cfi_startproc
 4206              		@ args = 0, pretend = 0, frame = 0
 4207              		@ frame_needed = 0, uses_anonymous_args = 0
1361:Veno-Echo.cpp ****     static bool crossfeedback_pickup{};
 4208              		.loc 20 1361 5 view .LVU1152
1362:Veno-Echo.cpp ****     static bool modRate_pickup{};
 4209              		.loc 20 1362 5 view .LVU1153
1363:Veno-Echo.cpp **** 
 4210              		.loc 20 1363 5 view .LVU1154
1365:Veno-Echo.cpp **** 
 4211              		.loc 20 1365 5 view .LVU1155
1368:Veno-Echo.cpp **** 
 4212              		.loc 20 1368 5 view .LVU1156
1368:Veno-Echo.cpp **** 
 4213              		.loc 20 1368 47 is_stmt 0 view .LVU1157
 4214 0000 0022     		movs	r2, #0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 175


 4215 0002 0721     		movs	r1, #7
 4216 0004 4148     		ldr	r0, .L272
1360:Veno-Echo.cpp ****     static bool lastShift{};
 4217              		.loc 20 1360 1 view .LVU1158
 4218 0006 10B5     		push	{r4, lr}
 4219              		.cfi_def_cfa_offset 8
 4220              		.cfi_offset 4, -8
 4221              		.cfi_offset 14, -4
 4222 0008 2DED028B 		vpush.64	{d8}
 4223              		.cfi_def_cfa_offset 16
 4224              		.cfi_offset 80, -16
 4225              		.cfi_offset 81, -12
1368:Veno-Echo.cpp **** 
 4226              		.loc 20 1368 47 view .LVU1159
 4227 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 4228              	.LVL208:
 4229              	.LBB1183:
1370:Veno-Echo.cpp ****     {   
 4230              		.loc 20 1370 9 view .LVU1160
 4231 0010 3F4B     		ldr	r3, .L272+4
 4232              	.LBE1183:
1368:Veno-Echo.cpp **** 
 4233              		.loc 20 1368 47 view .LVU1161
 4234 0012 B0EE408A 		vmov.f32	s16, s0
 4235              	.LVL209:
1370:Veno-Echo.cpp ****     {   
 4236              		.loc 20 1370 5 is_stmt 1 view .LVU1162
 4237              	.LBB1212:
 4238              	.LBB1184:
1374:Veno-Echo.cpp ****         {
 4239              		.loc 20 1374 19 is_stmt 0 view .LVU1163
 4240 0016 3F4A     		ldr	r2, .L272+8
 4241              	.LBE1184:
1370:Veno-Echo.cpp ****     {   
 4242              		.loc 20 1370 5 view .LVU1164
 4243 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4244 001a FBB9     		cbnz	r3, .L258
 4245              	.LBB1193:
1372:Veno-Echo.cpp ****         //update pickup
 4246              		.loc 20 1372 9 is_stmt 1 view .LVU1165
1374:Veno-Echo.cpp ****         {
 4247              		.loc 20 1374 9 view .LVU1166
 4248 001c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4249 001e 49B3     		cbz	r1, .L259
1376:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
 4250              		.loc 20 1376 13 view .LVU1167
1377:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4251              		.loc 20 1377 34 is_stmt 0 view .LVU1168
 4252 0020 3D48     		ldr	r0, .L272+12
1378:Veno-Echo.cpp ****         }
 4253              		.loc 20 1378 31 view .LVU1169
 4254 0022 3E49     		ldr	r1, .L272+16
1376:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
 4255              		.loc 20 1376 23 view .LVU1170
 4256 0024 1370     		strb	r3, [r2]
1377:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4257              		.loc 20 1377 13 is_stmt 1 view .LVU1171
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 176


1377:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4258              		.loc 20 1377 34 is_stmt 0 view .LVU1172
 4259 0026 0370     		strb	r3, [r0]
1378:Veno-Echo.cpp ****         }
 4260              		.loc 20 1378 13 is_stmt 1 view .LVU1173
1378:Veno-Echo.cpp ****         }
 4261              		.loc 20 1378 31 is_stmt 0 view .LVU1174
 4262 0028 81ED000A 		vstr.32	s0, [r1]
 4263              	.L260:
1391:Veno-Echo.cpp **** 
 4264              		.loc 20 1391 9 is_stmt 1 view .LVU1175
 4265              	.LVL210:
1393:Veno-Echo.cpp ****         {
 4266              		.loc 20 1393 9 view .LVU1176
1401:Veno-Echo.cpp ****         }
 4267              		.loc 20 1401 13 view .LVU1177
1401:Veno-Echo.cpp ****         }
 4268              		.loc 20 1401 40 is_stmt 0 view .LVU1178
 4269 002c 3C4B     		ldr	r3, .L272+20
 4270 002e B7EE001A 		vmov.f32	s2, #1.0e+0
 4271 0032 0020     		movs	r0, #0
 4272 0034 DFED3B0A 		vldr.32	s1, .L272+24
 4273 0038 93ED000A 		vldr.32	s0, [r3]
 4274              	.LVL211:
1401:Veno-Echo.cpp ****         }
 4275              		.loc 20 1401 40 view .LVU1179
 4276 003c FFF7FEFF 		bl	_Z5scalefff9CurveType
 4277              	.LVL212:
 4278              	.L268:
1404:Veno-Echo.cpp ****     }
 4279              		.loc 20 1404 9 is_stmt 1 view .LVU1180
 4280              	.LBB1185:
 4281              	.LBI1185:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4282              		.loc 23 135 13 view .LVU1181
 4283              	.LBB1186:
 4284              		.loc 23 137 5 view .LVU1182
 4285              		.loc 23 137 9 is_stmt 0 view .LVU1183
 4286 0040 394B     		ldr	r3, .L272+28
 4287 0042 9FED3A7A 		vldr.32	s14, .L272+32
 4288 0046 D3ED007A 		vldr.32	s15, [r3]
 4289              		.loc 23 137 24 view .LVU1184
 4290 004a 30EE670A 		vsub.f32	s0, s0, s15
 4291              	.LVL213:
 4292              		.loc 23 137 24 view .LVU1185
 4293              	.LBE1186:
 4294              	.LBE1185:
 4295              	.LBE1193:
 4296              	.LBE1212:
1435:Veno-Echo.cpp **** 
 4297              		.loc 20 1435 1 view .LVU1186
 4298 004e BDEC028B 		vldm	sp!, {d8}
 4299              		.cfi_remember_state
 4300              		.cfi_restore 80
 4301              		.cfi_restore 81
 4302              		.cfi_def_cfa_offset 8
 4303              	.LVL214:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 177


 4304              	.LBB1213:
 4305              	.LBB1194:
 4306              	.LBB1188:
 4307              	.LBB1187:
 4308              		.loc 23 137 9 view .LVU1187
 4309 0052 E0EE077A 		vfma.f32	s15, s0, s14
 4310 0056 C3ED007A 		vstr.32	s15, [r3]
 4311              	.LBE1187:
 4312              	.LBE1188:
 4313              	.LBE1194:
 4314              	.LBE1213:
1435:Veno-Echo.cpp **** 
 4315              		.loc 20 1435 1 view .LVU1188
 4316 005a 10BD     		pop	{r4, pc}
 4317              	.LVL215:
 4318              	.L258:
 4319              		.cfi_restore_state
 4320              	.LBB1214:
 4321              	.LBB1195:
1408:Veno-Echo.cpp **** 
 4322              		.loc 20 1408 9 is_stmt 1 view .LVU1189
1410:Veno-Echo.cpp ****         {
 4323              		.loc 20 1410 9 view .LVU1190
 4324 005c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4325 005e 4BBB     		cbnz	r3, .L264
1412:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4326              		.loc 20 1412 13 view .LVU1191
1412:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4327              		.loc 20 1412 23 is_stmt 0 view .LVU1192
 4328 0060 0124     		movs	r4, #1
1413:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4329              		.loc 20 1413 28 view .LVU1193
 4330 0062 3348     		ldr	r0, .L272+36
1414:Veno-Echo.cpp ****         }
 4331              		.loc 20 1414 25 view .LVU1194
 4332 0064 3349     		ldr	r1, .L272+40
1412:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4333              		.loc 20 1412 23 view .LVU1195
 4334 0066 1470     		strb	r4, [r2]
1413:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4335              		.loc 20 1413 13 is_stmt 1 view .LVU1196
1413:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4336              		.loc 20 1413 28 is_stmt 0 view .LVU1197
 4337 0068 0370     		strb	r3, [r0]
1414:Veno-Echo.cpp ****         }
 4338              		.loc 20 1414 13 is_stmt 1 view .LVU1198
1414:Veno-Echo.cpp ****         }
 4339              		.loc 20 1414 25 is_stmt 0 view .LVU1199
 4340 006a 81ED000A 		vstr.32	s0, [r1]
 4341              	.L257:
1414:Veno-Echo.cpp ****         }
 4342              		.loc 20 1414 25 view .LVU1200
 4343              	.LBE1195:
 4344              	.LBE1214:
1435:Veno-Echo.cpp **** 
 4345              		.loc 20 1435 1 view .LVU1201
 4346 006e BDEC028B 		vldm	sp!, {d8}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 178


 4347              		.cfi_remember_state
 4348              		.cfi_restore 80
 4349              		.cfi_restore 81
 4350              		.cfi_def_cfa_offset 8
 4351 0072 10BD     		pop	{r4, pc}
 4352              	.L259:
 4353              		.cfi_restore_state
 4354              	.LBB1215:
 4355              	.LBB1210:
1383:Veno-Echo.cpp ****             {
 4356              		.loc 20 1383 13 is_stmt 1 view .LVU1202
1383:Veno-Echo.cpp ****             {
 4357              		.loc 20 1383 16 is_stmt 0 view .LVU1203
 4358 0074 284B     		ldr	r3, .L272+12
1383:Veno-Echo.cpp ****             {
 4359              		.loc 20 1383 13 view .LVU1204
 4360 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4361 0078 7AB9     		cbnz	r2, .L261
1385:Veno-Echo.cpp ****                 {
 4362              		.loc 20 1385 17 is_stmt 1 view .LVU1205
 4363              	.LVL216:
 4364              	.LBB1189:
 4365              	.LBI1189:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4366              		.loc 21 75 3 view .LVU1206
 4367              	.LBB1190:
 4368              		.loc 21 76 5 view .LVU1207
 4369              		.loc 21 76 5 is_stmt 0 view .LVU1208
 4370              	.LBE1190:
 4371              	.LBE1189:
1385:Veno-Echo.cpp ****                 {
 4372              		.loc 20 1385 23 view .LVU1209
 4373 007a 284A     		ldr	r2, .L272+16
1385:Veno-Echo.cpp ****                 {
 4374              		.loc 20 1385 17 view .LVU1210
 4375 007c 9FED2E7A 		vldr.32	s14, .L272+44
1385:Veno-Echo.cpp ****                 {
 4376              		.loc 20 1385 23 view .LVU1211
 4377 0080 D2ED007A 		vldr.32	s15, [r2]
 4378 0084 70EE677A 		vsub.f32	s15, s0, s15
 4379              	.LBB1192:
 4380              	.LBB1191:
 4381              		.loc 21 76 31 view .LVU1212
 4382 0088 F0EEE77A 		vabs.f32	s15, s15
 4383              	.LBE1191:
 4384              	.LBE1192:
1385:Veno-Echo.cpp ****                 {
 4385              		.loc 20 1385 17 view .LVU1213
 4386 008c F4EEC77A 		vcmpe.f32	s15, s14
 4387 0090 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4388 0094 CADD     		ble	.L260
1387:Veno-Echo.cpp ****                 }
 4389              		.loc 20 1387 21 is_stmt 1 view .LVU1214
1387:Veno-Echo.cpp ****                 }
 4390              		.loc 20 1387 42 is_stmt 0 view .LVU1215
 4391 0096 0122     		movs	r2, #1
 4392 0098 1A70     		strb	r2, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 179


 4393              	.L261:
1391:Veno-Echo.cpp **** 
 4394              		.loc 20 1391 9 is_stmt 1 view .LVU1216
 4395              	.LVL217:
1393:Veno-Echo.cpp ****         {
 4396              		.loc 20 1393 9 view .LVU1217
1395:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4397              		.loc 20 1395 13 view .LVU1218
1395:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4398              		.loc 20 1395 40 is_stmt 0 view .LVU1219
 4399 009a B7EE001A 		vmov.f32	s2, #1.0e+0
 4400 009e 0020     		movs	r0, #0
 4401 00a0 B0EE480A 		vmov.f32	s0, s16
 4402              	.LVL218:
1395:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4403              		.loc 20 1395 40 view .LVU1220
 4404 00a4 DFED1F0A 		vldr.32	s1, .L272+24
 4405 00a8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4406              	.LVL219:
1396:Veno-Echo.cpp ****         }
 4407              		.loc 20 1396 32 view .LVU1221
 4408 00ac 1C4B     		ldr	r3, .L272+20
 4409              	.LVL220:
1396:Veno-Echo.cpp ****         }
 4410              		.loc 20 1396 13 is_stmt 1 view .LVU1222
1396:Veno-Echo.cpp ****         }
 4411              		.loc 20 1396 32 is_stmt 0 view .LVU1223
 4412 00ae 83ED008A 		vstr.32	s16, [r3]
 4413 00b2 C5E7     		b	.L268
 4414              	.LVL221:
 4415              	.L264:
1396:Veno-Echo.cpp ****         }
 4416              		.loc 20 1396 32 view .LVU1224
 4417              	.LBE1210:
 4418              	.LBB1211:
1419:Veno-Echo.cpp ****             {
 4419              		.loc 20 1419 13 is_stmt 1 view .LVU1225
1419:Veno-Echo.cpp ****             {
 4420              		.loc 20 1419 16 is_stmt 0 view .LVU1226
 4421 00b4 1E4B     		ldr	r3, .L272+36
1419:Veno-Echo.cpp ****             {
 4422              		.loc 20 1419 13 view .LVU1227
 4423 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4424 00b8 7AB9     		cbnz	r2, .L266
1421:Veno-Echo.cpp ****                 {
 4425              		.loc 20 1421 17 is_stmt 1 view .LVU1228
 4426              	.LVL222:
 4427              	.LBB1196:
 4428              	.LBI1196:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4429              		.loc 21 75 3 view .LVU1229
 4430              	.LBB1197:
 4431              		.loc 21 76 5 view .LVU1230
 4432              		.loc 21 76 5 is_stmt 0 view .LVU1231
 4433              	.LBE1197:
 4434              	.LBE1196:
1421:Veno-Echo.cpp ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 180


 4435              		.loc 20 1421 23 view .LVU1232
 4436 00ba 1E4A     		ldr	r2, .L272+40
1421:Veno-Echo.cpp ****                 {
 4437              		.loc 20 1421 17 view .LVU1233
 4438 00bc 9FED1E7A 		vldr.32	s14, .L272+44
1421:Veno-Echo.cpp ****                 {
 4439              		.loc 20 1421 23 view .LVU1234
 4440 00c0 D2ED007A 		vldr.32	s15, [r2]
 4441 00c4 70EE677A 		vsub.f32	s15, s0, s15
 4442              	.LBB1199:
 4443              	.LBB1198:
 4444              		.loc 21 76 31 view .LVU1235
 4445 00c8 F0EEE77A 		vabs.f32	s15, s15
 4446              	.LBE1198:
 4447              	.LBE1199:
1421:Veno-Echo.cpp ****                 {
 4448              		.loc 20 1421 17 view .LVU1236
 4449 00cc F4EEC77A 		vcmpe.f32	s15, s14
 4450 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4451 00d4 CBDD     		ble	.L257
1423:Veno-Echo.cpp ****                 }
 4452              		.loc 20 1423 21 is_stmt 1 view .LVU1237
1423:Veno-Echo.cpp ****                 }
 4453              		.loc 20 1423 36 is_stmt 0 view .LVU1238
 4454 00d6 0122     		movs	r2, #1
 4455 00d8 1A70     		strb	r2, [r3]
 4456              	.L266:
1428:Veno-Echo.cpp ****         {
 4457              		.loc 20 1428 9 is_stmt 1 view .LVU1239
 4458              	.LBB1200:
 4459              	.LBB1201:
1430:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4460              		.loc 20 1430 13 view .LVU1240
 4461              	.LBB1202:
 4462              	.LBB1203:
  17:../DaisySP/Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:../DaisySP/Source/Synthesis/oscillator.h ****     */
  19:../DaisySP/Source/Synthesis/oscillator.h ****     enum
  20:../DaisySP/Source/Synthesis/oscillator.h ****     {
  21:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SIN,
  22:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_TRI,
  23:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SAW,
  24:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  25:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  26:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  27:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  28:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  29:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_LAST,
  30:../DaisySP/Source/Synthesis/oscillator.h ****     };
  31:../DaisySP/Source/Synthesis/oscillator.h **** 
  32:../DaisySP/Source/Synthesis/oscillator.h **** 
  33:../DaisySP/Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  34:../DaisySP/Source/Synthesis/oscillator.h **** 
  35:../DaisySP/Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:../DaisySP/Source/Synthesis/oscillator.h **** 
  37:../DaisySP/Source/Synthesis/oscillator.h ****         Defaults:
  38:../DaisySP/Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 181


  39:../DaisySP/Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  40:../DaisySP/Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  41:../DaisySP/Source/Synthesis/oscillator.h ****     */
  42:../DaisySP/Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  43:../DaisySP/Source/Synthesis/oscillator.h ****     {
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
  45:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  46:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  47:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
  49:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
  52:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
  53:../DaisySP/Source/Synthesis/oscillator.h ****     }
  54:../DaisySP/Source/Synthesis/oscillator.h **** 
  55:../DaisySP/Source/Synthesis/oscillator.h **** 
  56:../DaisySP/Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:../DaisySP/Source/Synthesis/oscillator.h ****     */
  58:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
  59:../DaisySP/Source/Synthesis/oscillator.h ****     {
  60:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = f;
 4463              		.loc 8 60 20 is_stmt 0 view .LVU1241
 4464 00da 184C     		ldr	r4, .L272+48
 4465              	.LBE1203:
 4466              	.LBE1202:
1430:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4467              		.loc 20 1430 32 view .LVU1242
 4468 00dc B0EE480A 		vmov.f32	s0, s16
 4469              	.LVL223:
1430:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4470              		.loc 20 1430 32 view .LVU1243
 4471 00e0 B2EE041A 		vmov.f32	s2, #1.0e+1
 4472 00e4 0020     		movs	r0, #0
 4473 00e6 DFED160A 		vldr.32	s1, .L272+52
 4474 00ea FFF7FEFF 		bl	_Z5scalefff9CurveType
 4475              	.LVL224:
 4476              	.LBB1207:
 4477              	.LBB1204:
  61:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4478              		.loc 8 61 34 view .LVU1244
 4479 00ee 2046     		mov	r0, r4
 4480              	.LBE1204:
 4481              	.LBE1207:
1430:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4482              		.loc 20 1430 32 view .LVU1245
 4483 00f0 B0EE408A 		vmov.f32	s16, s0
 4484              	.LVL225:
1431:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
 4485              		.loc 20 1431 13 is_stmt 1 view .LVU1246
 4486              	.LBB1208:
 4487              	.LBI1202:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 4488              		.loc 8 58 17 view .LVU1247
 4489              	.LBB1205:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4490              		.loc 8 60 9 view .LVU1248
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 182


  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4491              		.loc 8 60 20 is_stmt 0 view .LVU1249
 4492 00f4 84ED020A 		vstr.32	s0, [r4, #8]
 4493              		.loc 8 61 9 is_stmt 1 view .LVU1250
 4494              		.loc 8 61 34 is_stmt 0 view .LVU1251
 4495 00f8 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 4496              	.LVL226:
 4497              		.loc 8 61 34 view .LVU1252
 4498              	.LBE1205:
 4499              	.LBE1208:
1432:Veno-Echo.cpp ****         }
 4500              		.loc 20 1432 33 view .LVU1253
 4501 00fc 114B     		ldr	r3, .L272+56
 4502              	.LBB1209:
 4503              	.LBB1206:
 4504              		.loc 8 61 20 view .LVU1254
 4505 00fe 84ED060A 		vstr.32	s0, [r4, #24]
 4506              	.LVL227:
 4507              		.loc 8 61 20 view .LVU1255
 4508              	.LBE1206:
 4509              	.LBE1209:
1432:Veno-Echo.cpp ****         }
 4510              		.loc 20 1432 13 is_stmt 1 view .LVU1256
1432:Veno-Echo.cpp ****         }
 4511              		.loc 20 1432 33 is_stmt 0 view .LVU1257
 4512 0102 83ED038A 		vstr.32	s16, [r3, #12]
 4513              	.LBE1201:
 4514              	.LBE1200:
 4515              	.LBE1211:
 4516              	.LBE1215:
1435:Veno-Echo.cpp **** 
 4517              		.loc 20 1435 1 view .LVU1258
 4518 0106 BDEC028B 		vldm	sp!, {d8}
 4519              		.cfi_restore 80
 4520              		.cfi_restore 81
 4521              		.cfi_def_cfa_offset 8
 4522              	.LVL228:
1435:Veno-Echo.cpp **** 
 4523              		.loc 20 1435 1 view .LVU1259
 4524 010a 10BD     		pop	{r4, pc}
 4525              	.L273:
 4526              		.align	2
 4527              	.L272:
 4528 010c 18000000 		.word	.LANCHOR4+24
 4529 0110 00000000 		.word	.LANCHOR7
 4530 0114 00000000 		.word	.LANCHOR68
 4531 0118 00000000 		.word	.LANCHOR69
 4532 011c 00000000 		.word	.LANCHOR70
 4533 0120 00000000 		.word	.LANCHOR74
 4534 0124 00000000 		.word	0
 4535 0128 00000000 		.word	.LANCHOR71
 4536 012c 6F12033D 		.word	1023611503
 4537 0130 00000000 		.word	.LANCHOR72
 4538 0134 00000000 		.word	.LANCHOR73
 4539 0138 0AD7A33B 		.word	1000593162
 4540 013c 00000000 		.word	.LANCHOR75
 4541 0140 CDCCCC3D 		.word	1036831949
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 183


 4542 0144 00000000 		.word	.LANCHOR15
 4543              		.cfi_endproc
 4544              	.LFE4324:
 4546              		.section	.text._Z18Update_filterXfadev,"ax",%progbits
 4547              		.align	1
 4548              		.p2align 2,,3
 4549              		.global	_Z18Update_filterXfadev
 4550              		.syntax unified
 4551              		.thumb
 4552              		.thumb_func
 4553              		.fpu fpv5-d16
 4555              	_Z18Update_filterXfadev:
 4556              	.LFB4325:
1438:Veno-Echo.cpp ****     static bool lastShift{};
 4557              		.loc 20 1438 1 is_stmt 1 view -0
 4558              		.cfi_startproc
 4559              		@ args = 0, pretend = 0, frame = 0
 4560              		@ frame_needed = 0, uses_anonymous_args = 0
1439:Veno-Echo.cpp ****     static bool filterXfade_pickup{};
 4561              		.loc 20 1439 5 view .LVU1261
1440:Veno-Echo.cpp ****     static bool PostFilters_pickup{};
 4562              		.loc 20 1440 5 view .LVU1262
1441:Veno-Echo.cpp **** 
 4563              		.loc 20 1441 5 view .LVU1263
1443:Veno-Echo.cpp **** 
 4564              		.loc 20 1443 5 view .LVU1264
1446:Veno-Echo.cpp **** 
 4565              		.loc 20 1446 5 view .LVU1265
1446:Veno-Echo.cpp **** 
 4566              		.loc 20 1446 45 is_stmt 0 view .LVU1266
 4567 0000 0322     		movs	r2, #3
 4568 0002 0721     		movs	r1, #7
 4569 0004 4248     		ldr	r0, .L296
1438:Veno-Echo.cpp ****     static bool lastShift{};
 4570              		.loc 20 1438 1 view .LVU1267
 4571 0006 10B5     		push	{r4, lr}
 4572              		.cfi_def_cfa_offset 8
 4573              		.cfi_offset 4, -8
 4574              		.cfi_offset 14, -4
 4575 0008 2DED028B 		vpush.64	{d8}
 4576              		.cfi_def_cfa_offset 16
 4577              		.cfi_offset 80, -16
 4578              		.cfi_offset 81, -12
1446:Veno-Echo.cpp **** 
 4579              		.loc 20 1446 45 view .LVU1268
 4580 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 4581              	.LVL229:
 4582              	.LBB1216:
1448:Veno-Echo.cpp ****     {   
 4583              		.loc 20 1448 9 view .LVU1269
 4584 0010 404B     		ldr	r3, .L296+4
 4585              	.LBE1216:
1446:Veno-Echo.cpp **** 
 4586              		.loc 20 1446 45 view .LVU1270
 4587 0012 B0EE408A 		vmov.f32	s16, s0
 4588              	.LVL230:
1448:Veno-Echo.cpp ****     {   
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 184


 4589              		.loc 20 1448 5 is_stmt 1 view .LVU1271
 4590              	.LBB1236:
 4591              	.LBB1217:
1452:Veno-Echo.cpp ****         {
 4592              		.loc 20 1452 19 is_stmt 0 view .LVU1272
 4593 0016 404A     		ldr	r2, .L296+8
 4594              	.LBE1217:
1448:Veno-Echo.cpp ****     {   
 4595              		.loc 20 1448 5 view .LVU1273
 4596 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4597 001a FBB9     		cbnz	r3, .L275
 4598              	.LBB1226:
1450:Veno-Echo.cpp ****         //update pickup
 4599              		.loc 20 1450 9 is_stmt 1 view .LVU1274
1452:Veno-Echo.cpp ****         {
 4600              		.loc 20 1452 9 view .LVU1275
 4601 001c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4602 001e 49B3     		cbz	r1, .L276
1454:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
 4603              		.loc 20 1454 13 view .LVU1276
1455:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4604              		.loc 20 1455 32 is_stmt 0 view .LVU1277
 4605 0020 3E48     		ldr	r0, .L296+12
1456:Veno-Echo.cpp ****         }
 4606              		.loc 20 1456 29 view .LVU1278
 4607 0022 3F49     		ldr	r1, .L296+16
1454:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
 4608              		.loc 20 1454 23 view .LVU1279
 4609 0024 1370     		strb	r3, [r2]
1455:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4610              		.loc 20 1455 13 is_stmt 1 view .LVU1280
1455:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4611              		.loc 20 1455 32 is_stmt 0 view .LVU1281
 4612 0026 0370     		strb	r3, [r0]
1456:Veno-Echo.cpp ****         }
 4613              		.loc 20 1456 13 is_stmt 1 view .LVU1282
1456:Veno-Echo.cpp ****         }
 4614              		.loc 20 1456 29 is_stmt 0 view .LVU1283
 4615 0028 81ED000A 		vstr.32	s0, [r1]
 4616              	.L277:
1470:Veno-Echo.cpp **** 
 4617              		.loc 20 1470 9 is_stmt 1 view .LVU1284
 4618              	.LVL231:
1472:Veno-Echo.cpp ****         {
 4619              		.loc 20 1472 9 view .LVU1285
1480:Veno-Echo.cpp ****         }
 4620              		.loc 20 1480 13 view .LVU1286
1480:Veno-Echo.cpp ****         }
 4621              		.loc 20 1480 38 is_stmt 0 view .LVU1287
 4622 002c 3D4B     		ldr	r3, .L296+20
 4623 002e B7EE001A 		vmov.f32	s2, #1.0e+0
 4624 0032 0120     		movs	r0, #1
 4625 0034 DFED3C0A 		vldr.32	s1, .L296+24
 4626 0038 93ED000A 		vldr.32	s0, [r3]
 4627              	.LVL232:
1480:Veno-Echo.cpp ****         }
 4628              		.loc 20 1480 38 view .LVU1288
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 185


 4629 003c FFF7FEFF 		bl	_Z5scalefff9CurveType
 4630              	.LVL233:
 4631              	.L287:
1483:Veno-Echo.cpp ****     }
 4632              		.loc 20 1483 9 is_stmt 1 view .LVU1289
 4633              	.LBB1218:
 4634              	.LBI1218:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4635              		.loc 23 135 13 view .LVU1290
 4636              	.LBB1219:
 4637              		.loc 23 137 5 view .LVU1291
 4638              		.loc 23 137 9 is_stmt 0 view .LVU1292
 4639 0040 3A4B     		ldr	r3, .L296+28
 4640 0042 9FED3B7A 		vldr.32	s14, .L296+32
 4641 0046 D3ED007A 		vldr.32	s15, [r3]
 4642              		.loc 23 137 24 view .LVU1293
 4643 004a 30EE670A 		vsub.f32	s0, s0, s15
 4644              	.LVL234:
 4645              		.loc 23 137 24 view .LVU1294
 4646              	.LBE1219:
 4647              	.LBE1218:
 4648              	.LBE1226:
 4649              	.LBE1236:
1525:Veno-Echo.cpp **** 
 4650              		.loc 20 1525 1 view .LVU1295
 4651 004e BDEC028B 		vldm	sp!, {d8}
 4652              		.cfi_remember_state
 4653              		.cfi_restore 80
 4654              		.cfi_restore 81
 4655              		.cfi_def_cfa_offset 8
 4656              	.LVL235:
 4657              	.LBB1237:
 4658              	.LBB1227:
 4659              	.LBB1221:
 4660              	.LBB1220:
 4661              		.loc 23 137 9 view .LVU1296
 4662 0052 E0EE077A 		vfma.f32	s15, s0, s14
 4663 0056 C3ED007A 		vstr.32	s15, [r3]
 4664              	.LBE1220:
 4665              	.LBE1221:
 4666              	.LBE1227:
 4667              	.LBE1237:
1525:Veno-Echo.cpp **** 
 4668              		.loc 20 1525 1 view .LVU1297
 4669 005a 10BD     		pop	{r4, pc}
 4670              	.LVL236:
 4671              	.L275:
 4672              		.cfi_restore_state
 4673              	.LBB1238:
 4674              	.LBB1228:
1488:Veno-Echo.cpp **** 
 4675              		.loc 20 1488 9 is_stmt 1 view .LVU1298
1490:Veno-Echo.cpp ****         {
 4676              		.loc 20 1490 9 view .LVU1299
 4677 005c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4678 005e 4BBB     		cbnz	r3, .L281
1492:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 186


 4679              		.loc 20 1492 13 view .LVU1300
1492:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4680              		.loc 20 1492 23 is_stmt 0 view .LVU1301
 4681 0060 0124     		movs	r4, #1
1493:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4682              		.loc 20 1493 32 view .LVU1302
 4683 0062 3448     		ldr	r0, .L296+36
1494:Veno-Echo.cpp ****         }
 4684              		.loc 20 1494 29 view .LVU1303
 4685 0064 3449     		ldr	r1, .L296+40
1492:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4686              		.loc 20 1492 23 view .LVU1304
 4687 0066 1470     		strb	r4, [r2]
1493:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4688              		.loc 20 1493 13 is_stmt 1 view .LVU1305
1493:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4689              		.loc 20 1493 32 is_stmt 0 view .LVU1306
 4690 0068 0370     		strb	r3, [r0]
1494:Veno-Echo.cpp ****         }
 4691              		.loc 20 1494 13 is_stmt 1 view .LVU1307
1494:Veno-Echo.cpp ****         }
 4692              		.loc 20 1494 29 is_stmt 0 view .LVU1308
 4693 006a 81ED000A 		vstr.32	s0, [r1]
 4694              	.L274:
1494:Veno-Echo.cpp ****         }
 4695              		.loc 20 1494 29 view .LVU1309
 4696              	.LBE1228:
 4697              	.LBE1238:
1525:Veno-Echo.cpp **** 
 4698              		.loc 20 1525 1 view .LVU1310
 4699 006e BDEC028B 		vldm	sp!, {d8}
 4700              		.cfi_remember_state
 4701              		.cfi_restore 80
 4702              		.cfi_restore 81
 4703              		.cfi_def_cfa_offset 8
 4704 0072 10BD     		pop	{r4, pc}
 4705              	.L276:
 4706              		.cfi_restore_state
 4707              	.LBB1239:
 4708              	.LBB1233:
1461:Veno-Echo.cpp ****             {
 4709              		.loc 20 1461 13 is_stmt 1 view .LVU1311
1461:Veno-Echo.cpp ****             {
 4710              		.loc 20 1461 16 is_stmt 0 view .LVU1312
 4711 0074 294B     		ldr	r3, .L296+12
1461:Veno-Echo.cpp ****             {
 4712              		.loc 20 1461 13 view .LVU1313
 4713 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4714 0078 7AB9     		cbnz	r2, .L278
1463:Veno-Echo.cpp ****                 {
 4715              		.loc 20 1463 17 is_stmt 1 view .LVU1314
 4716              	.LVL237:
 4717              	.LBB1222:
 4718              	.LBI1222:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4719              		.loc 21 75 3 view .LVU1315
 4720              	.LBB1223:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 187


 4721              		.loc 21 76 5 view .LVU1316
 4722              		.loc 21 76 5 is_stmt 0 view .LVU1317
 4723              	.LBE1223:
 4724              	.LBE1222:
1463:Veno-Echo.cpp ****                 {
 4725              		.loc 20 1463 23 view .LVU1318
 4726 007a 294A     		ldr	r2, .L296+16
1463:Veno-Echo.cpp ****                 {
 4727              		.loc 20 1463 17 view .LVU1319
 4728 007c 9FED2F7A 		vldr.32	s14, .L296+44
1463:Veno-Echo.cpp ****                 {
 4729              		.loc 20 1463 23 view .LVU1320
 4730 0080 D2ED007A 		vldr.32	s15, [r2]
 4731 0084 70EE677A 		vsub.f32	s15, s0, s15
 4732              	.LBB1225:
 4733              	.LBB1224:
 4734              		.loc 21 76 31 view .LVU1321
 4735 0088 F0EEE77A 		vabs.f32	s15, s15
 4736              	.LBE1224:
 4737              	.LBE1225:
1463:Veno-Echo.cpp ****                 {
 4738              		.loc 20 1463 17 view .LVU1322
 4739 008c F4EEC77A 		vcmpe.f32	s15, s14
 4740 0090 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4741 0094 CADD     		ble	.L277
1465:Veno-Echo.cpp ****                 }
 4742              		.loc 20 1465 21 is_stmt 1 view .LVU1323
1465:Veno-Echo.cpp ****                 }
 4743              		.loc 20 1465 40 is_stmt 0 view .LVU1324
 4744 0096 0122     		movs	r2, #1
 4745 0098 1A70     		strb	r2, [r3]
 4746              	.L278:
1470:Veno-Echo.cpp **** 
 4747              		.loc 20 1470 9 is_stmt 1 view .LVU1325
 4748              	.LVL238:
1472:Veno-Echo.cpp ****         {
 4749              		.loc 20 1472 9 view .LVU1326
1474:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 4750              		.loc 20 1474 13 view .LVU1327
1474:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 4751              		.loc 20 1474 38 is_stmt 0 view .LVU1328
 4752 009a B7EE001A 		vmov.f32	s2, #1.0e+0
 4753 009e 0120     		movs	r0, #1
 4754 00a0 B0EE480A 		vmov.f32	s0, s16
 4755              	.LVL239:
1474:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 4756              		.loc 20 1474 38 view .LVU1329
 4757 00a4 DFED200A 		vldr.32	s1, .L296+24
 4758 00a8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4759              	.LVL240:
1475:Veno-Echo.cpp ****         }
 4760              		.loc 20 1475 30 view .LVU1330
 4761 00ac 1D4B     		ldr	r3, .L296+20
 4762              	.LVL241:
1475:Veno-Echo.cpp ****         }
 4763              		.loc 20 1475 13 is_stmt 1 view .LVU1331
1475:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 188


 4764              		.loc 20 1475 30 is_stmt 0 view .LVU1332
 4765 00ae 83ED008A 		vstr.32	s16, [r3]
 4766 00b2 C5E7     		b	.L287
 4767              	.LVL242:
 4768              	.L281:
1475:Veno-Echo.cpp ****         }
 4769              		.loc 20 1475 30 view .LVU1333
 4770              	.LBE1233:
 4771              	.LBB1234:
1499:Veno-Echo.cpp ****             {
 4772              		.loc 20 1499 13 is_stmt 1 view .LVU1334
1499:Veno-Echo.cpp ****             {
 4773              		.loc 20 1499 16 is_stmt 0 view .LVU1335
 4774 00b4 1F4B     		ldr	r3, .L296+36
1499:Veno-Echo.cpp ****             {
 4775              		.loc 20 1499 13 view .LVU1336
 4776 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4777 00b8 7AB9     		cbnz	r2, .L283
1501:Veno-Echo.cpp ****                 {
 4778              		.loc 20 1501 17 is_stmt 1 view .LVU1337
 4779              	.LVL243:
 4780              	.LBB1229:
 4781              	.LBI1229:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4782              		.loc 21 75 3 view .LVU1338
 4783              	.LBB1230:
 4784              		.loc 21 76 5 view .LVU1339
 4785              		.loc 21 76 5 is_stmt 0 view .LVU1340
 4786              	.LBE1230:
 4787              	.LBE1229:
1501:Veno-Echo.cpp ****                 {
 4788              		.loc 20 1501 23 view .LVU1341
 4789 00ba 1F4A     		ldr	r2, .L296+40
1501:Veno-Echo.cpp ****                 {
 4790              		.loc 20 1501 17 view .LVU1342
 4791 00bc 9FED1F7A 		vldr.32	s14, .L296+44
1501:Veno-Echo.cpp ****                 {
 4792              		.loc 20 1501 23 view .LVU1343
 4793 00c0 D2ED007A 		vldr.32	s15, [r2]
 4794 00c4 70EE677A 		vsub.f32	s15, s0, s15
 4795              	.LBB1232:
 4796              	.LBB1231:
 4797              		.loc 21 76 31 view .LVU1344
 4798 00c8 F0EEE77A 		vabs.f32	s15, s15
 4799              	.LBE1231:
 4800              	.LBE1232:
1501:Veno-Echo.cpp ****                 {
 4801              		.loc 20 1501 17 view .LVU1345
 4802 00cc F4EEC77A 		vcmpe.f32	s15, s14
 4803 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4804 00d4 CBDD     		ble	.L274
1503:Veno-Echo.cpp ****                 }
 4805              		.loc 20 1503 21 is_stmt 1 view .LVU1346
1503:Veno-Echo.cpp ****                 }
 4806              		.loc 20 1503 40 is_stmt 0 view .LVU1347
 4807 00d6 0122     		movs	r2, #1
 4808 00d8 1A70     		strb	r2, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 189


 4809              	.L283:
1508:Veno-Echo.cpp ****         {
 4810              		.loc 20 1508 9 is_stmt 1 view .LVU1348
1510:Veno-Echo.cpp ****             {
 4811              		.loc 20 1510 13 view .LVU1349
 4812 00da DFED197A 		vldr.32	s15, .L296+48
 4813 00de B4EEE78A 		vcmpe.f32	s16, s15
 4814 00e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4815 00e6 08D5     		bpl	.L295
1512:Veno-Echo.cpp ****             }
 4816              		.loc 20 1512 17 view .LVU1350
1512:Veno-Echo.cpp ****             }
 4817              		.loc 20 1512 29 is_stmt 0 view .LVU1351
 4818 00e8 164B     		ldr	r3, .L296+52
 4819 00ea 0022     		movs	r2, #0
 4820 00ec 1A70     		strb	r2, [r3]
 4821              	.L285:
1522:Veno-Echo.cpp ****         }  
 4822              		.loc 20 1522 13 is_stmt 1 view .LVU1352
1522:Veno-Echo.cpp ****         }  
 4823              		.loc 20 1522 39 is_stmt 0 view .LVU1353
 4824 00ee 164B     		ldr	r3, .L296+56
 4825 00f0 83ED078A 		vstr.32	s16, [r3, #28]
 4826              	.LBE1234:
 4827              	.LBE1239:
1525:Veno-Echo.cpp **** 
 4828              		.loc 20 1525 1 view .LVU1354
 4829 00f4 BDEC028B 		vldm	sp!, {d8}
 4830              		.cfi_remember_state
 4831              		.cfi_restore 80
 4832              		.cfi_restore 81
 4833              		.cfi_def_cfa_offset 8
 4834 00f8 10BD     		pop	{r4, pc}
 4835              	.L295:
 4836              		.cfi_restore_state
 4837              	.LBB1240:
 4838              	.LBB1235:
1514:Veno-Echo.cpp ****             {
 4839              		.loc 20 1514 18 is_stmt 1 view .LVU1355
 4840 00fa DFED147A 		vldr.32	s15, .L296+60
 4841 00fe B4EEE78A 		vcmpe.f32	s16, s15
 4842 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4843 0106 F2DD     		ble	.L285
1516:Veno-Echo.cpp ****             }
 4844              		.loc 20 1516 17 view .LVU1356
1516:Veno-Echo.cpp ****             }
 4845              		.loc 20 1516 29 is_stmt 0 view .LVU1357
 4846 0108 0E4B     		ldr	r3, .L296+52
 4847 010a 0122     		movs	r2, #1
 4848 010c 1A70     		strb	r2, [r3]
 4849 010e EEE7     		b	.L285
 4850              	.L297:
 4851              		.align	2
 4852              	.L296:
 4853 0110 18000000 		.word	.LANCHOR4+24
 4854 0114 00000000 		.word	.LANCHOR7
 4855 0118 00000000 		.word	.LANCHOR76
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 190


 4856 011c 00000000 		.word	.LANCHOR77
 4857 0120 00000000 		.word	.LANCHOR78
 4858 0124 00000000 		.word	.LANCHOR83
 4859 0128 00000000 		.word	0
 4860 012c 00000000 		.word	.LANCHOR79
 4861 0130 6F12033D 		.word	1023611503
 4862 0134 00000000 		.word	.LANCHOR80
 4863 0138 00000000 		.word	.LANCHOR81
 4864 013c 0AD7A33B 		.word	1000593162
 4865 0140 6666E63E 		.word	1055286886
 4866 0144 00000000 		.word	.LANCHOR82
 4867 0148 00000000 		.word	.LANCHOR15
 4868 014c CDCC0C3F 		.word	1057803469
 4869              	.LBE1235:
 4870              	.LBE1240:
 4871              		.cfi_endproc
 4872              	.LFE4325:
 4874              		.section	.text._Z8GetModCVv,"ax",%progbits
 4875              		.align	1
 4876              		.p2align 2,,3
 4877              		.global	_Z8GetModCVv
 4878              		.syntax unified
 4879              		.thumb
 4880              		.thumb_func
 4881              		.fpu fpv5-d16
 4883              	_Z8GetModCVv:
 4884              	.LFB4326:
1528:Veno-Echo.cpp ****     //get modulation CV input
 4885              		.loc 20 1528 1 is_stmt 1 view -0
 4886              		.cfi_startproc
 4887              		@ args = 0, pretend = 0, frame = 0
 4888              		@ frame_needed = 0, uses_anonymous_args = 0
1530:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 4889              		.loc 20 1530 5 view .LVU1359
1528:Veno-Echo.cpp ****     //get modulation CV input
 4890              		.loc 20 1528 1 is_stmt 0 view .LVU1360
 4891 0000 08B5     		push	{r3, lr}
 4892              		.cfi_def_cfa_offset 8
 4893              		.cfi_offset 3, -8
 4894              		.cfi_offset 14, -4
1530:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 4895              		.loc 20 1530 30 view .LVU1361
 4896 0002 0621     		movs	r1, #6
 4897 0004 0648     		ldr	r0, .L300
 4898 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 4899              	.LVL244:
 4900 000a 0020     		movs	r0, #0
 4901 000c 9FED051A 		vldr.32	s2, .L300+4
 4902 0010 DFED050A 		vldr.32	s1, .L300+8
 4903 0014 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4904              	.LVL245:
1530:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 4905              		.loc 20 1530 23 view .LVU1362
 4906 0018 044B     		ldr	r3, .L300+12
 4907 001a 83ED000A 		vstr.32	s0, [r3]
1532:Veno-Echo.cpp **** 
 4908              		.loc 20 1532 1 view .LVU1363
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 191


 4909 001e 08BD     		pop	{r3, pc}
 4910              	.L301:
 4911              		.align	2
 4912              	.L300:
 4913 0020 18000000 		.word	.LANCHOR4+24
 4914 0024 00004843 		.word	1128792064
 4915 0028 000048C3 		.word	3276275712
 4916 002c 00000000 		.word	.LANCHOR84
 4917              		.cfi_endproc
 4918              	.LFE4326:
 4920              		.section	.text._Z10Update_Modv,"ax",%progbits
 4921              		.align	1
 4922              		.p2align 2,,3
 4923              		.global	_Z10Update_Modv
 4924              		.syntax unified
 4925              		.thumb
 4926              		.thumb_func
 4927              		.fpu fpv5-d16
 4929              	_Z10Update_Modv:
 4930              	.LFB4327:
1535:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 4931              		.loc 20 1535 1 is_stmt 1 view -0
 4932              		.cfi_startproc
 4933              		@ args = 0, pretend = 0, frame = 0
 4934              		@ frame_needed = 0, uses_anonymous_args = 0
1536:Veno-Echo.cpp ****     static float modulation_CV{};
 4935              		.loc 20 1536 5 view .LVU1365
1537:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
 4936              		.loc 20 1537 5 view .LVU1366
1538:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 4937              		.loc 20 1538 5 view .LVU1367
 4938              	.LVL246:
 4939              	.LBB1241:
 4940              	.LBI1241:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4941              		.loc 23 135 13 view .LVU1368
 4942              	.LBB1242:
 4943              		.loc 23 137 5 view .LVU1369
 4944              	.LBE1242:
 4945              	.LBE1241:
1535:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 4946              		.loc 20 1535 1 is_stmt 0 view .LVU1370
 4947 0000 38B5     		push	{r3, r4, r5, lr}
 4948              		.cfi_def_cfa_offset 16
 4949              		.cfi_offset 3, -16
 4950              		.cfi_offset 4, -12
 4951              		.cfi_offset 5, -8
 4952              		.cfi_offset 14, -4
1538:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 4953              		.loc 20 1538 13 view .LVU1371
 4954 0002 154A     		ldr	r2, .L304
 4955              	.LBB1249:
 4956              	.LBB1243:
 4957              		.loc 23 137 9 view .LVU1372
 4958 0004 154C     		ldr	r4, .L304+4
 4959              	.LBE1243:
 4960              	.LBE1249:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 192


 4961              	.LBB1250:
 4962              	.LBB1251:
 4963 0006 164D     		ldr	r5, .L304+8
 4964              	.LBE1251:
 4965              	.LBE1250:
1539:Veno-Echo.cpp ****     //calculate InternalMod
 4966              		.loc 20 1539 13 view .LVU1373
 4967 0008 164B     		ldr	r3, .L304+12
 4968              	.LBB1257:
 4969              	.LBB1244:
 4970              		.loc 23 137 9 view .LVU1374
 4971 000a 94ED007A 		vldr.32	s14, [r4]
 4972              	.LBE1244:
 4973              	.LBE1257:
 4974              	.LBB1258:
 4975              	.LBB1252:
 4976 000e D5ED007A 		vldr.32	s15, [r5]
 4977              	.LBE1252:
 4978              	.LBE1258:
 4979              	.LBB1259:
 4980              	.LBB1245:
 4981              		.loc 23 137 24 view .LVU1375
 4982 0012 92ED006A 		vldr.32	s12, [r2]
 4983              	.LBE1245:
 4984              	.LBE1259:
 4985              	.LBB1260:
 4986              	.LBB1253:
 4987 0016 D3ED006A 		vldr.32	s13, [r3]
 4988              	.LBE1253:
 4989              	.LBE1260:
 4990              	.LBB1261:
 4991              	.LBB1246:
 4992 001a 36EE476A 		vsub.f32	s12, s12, s14
 4993              		.loc 23 137 9 view .LVU1376
 4994 001e DFED125A 		vldr.32	s11, .L304+16
 4995              	.LBE1246:
 4996              	.LBE1261:
 4997              	.LBB1262:
 4998              	.LBB1254:
 4999              		.loc 23 137 24 view .LVU1377
 5000 0022 76EEE76A 		vsub.f32	s13, s13, s15
 5001              	.LBE1254:
 5002              	.LBE1262:
1541:Veno-Echo.cpp ****     //apply modulation to delay lines
 5003              		.loc 20 1541 34 view .LVU1378
 5004 0026 1148     		ldr	r0, .L304+20
 5005              	.LBB1263:
 5006              	.LBB1247:
 5007              		.loc 23 137 9 view .LVU1379
 5008 0028 A6EE257A 		vfma.f32	s14, s12, s11
 5009              	.LBE1247:
 5010              	.LBE1263:
 5011              	.LBB1264:
 5012              	.LBB1255:
 5013 002c E6EEA57A 		vfma.f32	s15, s13, s11
 5014              	.LBE1255:
 5015              	.LBE1264:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 193


 5016              	.LBB1265:
 5017              	.LBB1248:
 5018 0030 84ED007A 		vstr.32	s14, [r4]
 5019              	.LVL247:
 5020              		.loc 23 137 9 view .LVU1380
 5021              	.LBE1248:
 5022              	.LBE1265:
1539:Veno-Echo.cpp ****     //calculate InternalMod
 5023              		.loc 20 1539 5 is_stmt 1 view .LVU1381
 5024              	.LBB1266:
 5025              	.LBI1250:
 135:../DaisySP/Source/Utility/dsp.h **** {
 5026              		.loc 23 135 13 view .LVU1382
 5027              	.LBB1256:
 5028              		.loc 23 137 5 view .LVU1383
 5029              		.loc 23 137 9 is_stmt 0 view .LVU1384
 5030 0034 C5ED007A 		vstr.32	s15, [r5]
 5031              	.LVL248:
 5032              		.loc 23 137 9 view .LVU1385
 5033              	.LBE1256:
 5034              	.LBE1266:
1541:Veno-Echo.cpp ****     //apply modulation to delay lines
 5035              		.loc 20 1541 5 is_stmt 1 view .LVU1386
1541:Veno-Echo.cpp ****     //apply modulation to delay lines
 5036              		.loc 20 1541 34 is_stmt 0 view .LVU1387
 5037 0038 FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 5038              	.LVL249:
1543:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5039              		.loc 20 1543 5 is_stmt 1 view .LVU1388
1543:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5040              		.loc 20 1543 40 is_stmt 0 view .LVU1389
 5041 003c 95ED007A 		vldr.32	s14, [r5]
 5042 0040 D4ED007A 		vldr.32	s15, [r4]
 5043              	.LBB1267:
 5044              	.LBB1268:
  51:DelayMulti.h  **** 
  52:DelayMulti.h  **** //functions:
  53:DelayMulti.h  **** 
  54:DelayMulti.h  **** //initialises delay class
  55:DelayMulti.h  **** void init(dsy_gpio_pin ledpin, float samplerate);
  56:DelayMulti.h  **** 
  57:DelayMulti.h  **** //Updates delay time from pot value and base tempo (set ratio)
  58:DelayMulti.h  **** bool SetDelayTime(float delaytime_pot, bool syncMode);
  59:DelayMulti.h  **** 
  60:DelayMulti.h  **** //Updates xfades, updates delayline with delayTime[] + modulation and 
  61:DelayMulti.h  **** //returns combined output from delay heads, and updates LEDs. 
  62:DelayMulti.h  **** //Call at audio samplerate
  63:DelayMulti.h  **** const float& GetOutput();
  64:DelayMulti.h  **** 
  65:DelayMulti.h  **** //Writes to delayline
  66:DelayMulti.h  **** void Write(const float& in);
  67:DelayMulti.h  **** 
  68:DelayMulti.h  **** //this must be called once per sample
  69:DelayMulti.h  **** void SetModulation(const float& mod){mod_ = mod;}
 5045              		.loc 17 69 43 view .LVU1390
 5046 0044 0A4A     		ldr	r2, .L304+24
 5047              	.LBE1268:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 194


 5048              	.LBE1267:
1543:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5049              		.loc 20 1543 40 view .LVU1391
 5050 0046 E0EE077A 		vfma.f32	s15, s0, s14
 5051              	.LBB1271:
 5052              	.LBI1267:
 5053              		.loc 17 69 6 is_stmt 1 view .LVU1392
 5054              	.LVL250:
 5055              	.LBB1269:
 5056              		.loc 17 69 38 view .LVU1393
 5057              	.LBE1269:
 5058              	.LBE1271:
 5059              	.LBB1272:
 5060              	.LBB1273:
 5061              		.loc 17 69 43 is_stmt 0 view .LVU1394
 5062 004a 0A4B     		ldr	r3, .L304+28
 5063              	.LBE1273:
 5064              	.LBE1272:
 5065              	.LBB1275:
 5066              	.LBB1270:
 5067 004c C2ED3E7A 		vstr.32	s15, [r2, #248]
 5068              	.LBE1270:
 5069              	.LBE1275:
1544:Veno-Echo.cpp **** }
 5070              		.loc 20 1544 5 is_stmt 1 view .LVU1395
 5071              	.LVL251:
 5072              	.LBB1276:
 5073              	.LBI1272:
 5074              		.loc 17 69 6 view .LVU1396
 5075              	.LBB1274:
 5076              		.loc 17 69 38 view .LVU1397
 5077              		.loc 17 69 43 is_stmt 0 view .LVU1398
 5078 0050 C3ED3E7A 		vstr.32	s15, [r3, #248]
 5079              	.LBE1274:
 5080              	.LBE1276:
1545:Veno-Echo.cpp **** 
 5081              		.loc 20 1545 1 view .LVU1399
 5082 0054 38BD     		pop	{r3, r4, r5, pc}
 5083              	.L305:
 5084 0056 00BF     		.align	2
 5085              	.L304:
 5086 0058 00000000 		.word	.LANCHOR84
 5087 005c 00000000 		.word	.LANCHOR85
 5088 0060 00000000 		.word	.LANCHOR86
 5089 0064 00000000 		.word	.LANCHOR67
 5090 0068 0AD7233C 		.word	1008981770
 5091 006c 00000000 		.word	.LANCHOR75
 5092 0070 00000000 		.word	.LANCHOR0
 5093 0074 00000000 		.word	.LANCHOR1
 5094              		.cfi_endproc
 5095              	.LFE4327:
 5097              		.section	.text._Z11UpdateClockv,"ax",%progbits
 5098              		.align	1
 5099              		.p2align 2,,3
 5100              		.global	_Z11UpdateClockv
 5101              		.syntax unified
 5102              		.thumb
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 195


 5103              		.thumb_func
 5104              		.fpu fpv5-d16
 5106              	_Z11UpdateClockv:
 5107              	.LFB4328:
1548:Veno-Echo.cpp ****     static int divCounter{};
 5108              		.loc 20 1548 1 is_stmt 1 view -0
 5109              		.cfi_startproc
 5110              		@ args = 0, pretend = 0, frame = 0
 5111              		@ frame_needed = 0, uses_anonymous_args = 0
1549:Veno-Echo.cpp ****     ClockIn.Debounce();
 5112              		.loc 20 1549 5 view .LVU1401
1550:Veno-Echo.cpp **** 
 5113              		.loc 20 1550 5 view .LVU1402
1548:Veno-Echo.cpp ****     static int divCounter{};
 5114              		.loc 20 1548 1 is_stmt 0 view .LVU1403
 5115 0000 10B5     		push	{r4, lr}
 5116              		.cfi_def_cfa_offset 8
 5117              		.cfi_offset 4, -8
 5118              		.cfi_offset 14, -4
1550:Veno-Echo.cpp **** 
 5119              		.loc 20 1550 21 view .LVU1404
 5120 0002 0A4C     		ldr	r4, .L315
 5121 0004 2046     		mov	r0, r4
 5122 0006 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 5123              	.LVL252:
1553:Veno-Echo.cpp ****     {   
 5124              		.loc 20 1553 5 is_stmt 1 view .LVU1405
  42:../libdaisy/src/hid/switch.h **** 
  43:../libdaisy/src/hid/switch.h ****     /** 
  44:../libdaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  45:../libdaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  46:../libdaisy/src/hid/switch.h ****     \param update_rate the rate at which the Debounce() function will be called. (used for timing).
  47:../libdaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  48:../libdaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  49:../libdaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  50:../libdaisy/src/hid/switch.h ****     */
  51:../libdaisy/src/hid/switch.h ****     void
  52:../libdaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  53:../libdaisy/src/hid/switch.h **** 
  54:../libdaisy/src/hid/switch.h ****     /**
  55:../libdaisy/src/hid/switch.h ****        Simplified Init.
  56:../libdaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  57:../libdaisy/src/hid/switch.h ****        \param update_rate the rate at which the Debounce() function will be called. (used for timin
  58:../libdaisy/src/hid/switch.h ****     */
  59:../libdaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate);
  60:../libdaisy/src/hid/switch.h **** 
  61:../libdaisy/src/hid/switch.h ****     /** 
  62:../libdaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  63:../libdaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  64:../libdaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  65:../libdaisy/src/hid/switch.h ****     */
  66:../libdaisy/src/hid/switch.h ****     void Debounce();
  67:../libdaisy/src/hid/switch.h **** 
  68:../libdaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  69:../libdaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return state_ == 0x7f; }
 5125              		.loc 1 69 38 view .LVU1406
1553:Veno-Echo.cpp ****     {   
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 196


 5126              		.loc 20 1553 5 is_stmt 0 view .LVU1407
 5127 000a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 5128 000c 7F2B     		cmp	r3, #127
 5129 000e 00D0     		beq	.L314
 5130              	.L306:
1566:Veno-Echo.cpp **** 
 5131              		.loc 20 1566 1 view .LVU1408
 5132 0010 10BD     		pop	{r4, pc}
 5133              	.L314:
1555:Veno-Echo.cpp ****         //tempoLED_BASE.resetPhase();
 5134              		.loc 20 1555 9 is_stmt 1 view .LVU1409
1557:Veno-Echo.cpp ****         {
 5135              		.loc 20 1557 9 view .LVU1410
1559:Veno-Echo.cpp ****             {
 5136              		.loc 20 1559 13 view .LVU1411
1559:Veno-Echo.cpp ****             {
 5137              		.loc 20 1559 29 is_stmt 0 view .LVU1412
 5138 0012 0748     		ldr	r0, .L315+4
 5139 0014 FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 5140              	.LVL253:
1559:Veno-Echo.cpp ****             {
 5141              		.loc 20 1559 13 view .LVU1413
 5142 0018 0028     		cmp	r0, #0
 5143 001a F9D0     		beq	.L306
 5144              	.LBB1281:
 5145              	.LBI1281:
1547:Veno-Echo.cpp **** {
 5146              		.loc 20 1547 6 is_stmt 1 view .LVU1414
 5147              	.LBB1282:
1561:Veno-Echo.cpp ****             }
 5148              		.loc 20 1561 17 view .LVU1415
1561:Veno-Echo.cpp ****             }
 5149              		.loc 20 1561 39 is_stmt 0 view .LVU1416
 5150 001c 0448     		ldr	r0, .L315+4
 5151 001e FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 5152              	.LVL254:
 5153 0022 0448     		ldr	r0, .L315+8
 5154              	.LBE1282:
 5155              	.LBE1281:
1566:Veno-Echo.cpp **** 
 5156              		.loc 20 1566 1 view .LVU1417
 5157 0024 BDE81040 		pop	{r4, lr}
 5158              		.cfi_restore 14
 5159              		.cfi_restore 4
 5160              		.cfi_def_cfa_offset 0
 5161              	.LBB1284:
 5162              	.LBB1283:
1561:Veno-Echo.cpp ****             }
 5163              		.loc 20 1561 39 view .LVU1418
 5164 0028 FFF7FEBF 		b	_ZN8TempoLED8setTempoEf
 5165              	.LVL255:
 5166              	.L316:
 5167              		.align	2
 5168              	.L315:
 5169 002c 00000000 		.word	.LANCHOR87
 5170 0030 00000000 		.word	.LANCHOR25
 5171 0034 00000000 		.word	.LANCHOR88
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 197


 5172              	.LBE1283:
 5173              	.LBE1284:
 5174              		.cfi_endproc
 5175              	.LFE4328:
 5177              		.section	.text._Z21Update_DelayBaseTempov,"ax",%progbits
 5178              		.align	1
 5179              		.p2align 2,,3
 5180              		.global	_Z21Update_DelayBaseTempov
 5181              		.syntax unified
 5182              		.thumb
 5183              		.thumb_func
 5184              		.fpu fpv5-d16
 5186              	_Z21Update_DelayBaseTempov:
 5187              	.LFB4330:
1686:Veno-Echo.cpp ****     delayL.SetBaseTempo(BaseTempo.getTapLength());
 5188              		.loc 20 1686 1 is_stmt 1 view -0
 5189              		.cfi_startproc
 5190              		@ args = 0, pretend = 0, frame = 0
 5191              		@ frame_needed = 0, uses_anonymous_args = 0
1687:Veno-Echo.cpp ****     delayR.SetBaseTempo(BaseTempo.getTapLength());
 5192              		.loc 20 1687 5 view .LVU1420
1686:Veno-Echo.cpp ****     delayL.SetBaseTempo(BaseTempo.getTapLength());
 5193              		.loc 20 1686 1 is_stmt 0 view .LVU1421
 5194 0000 38B5     		push	{r3, r4, r5, lr}
 5195              		.cfi_def_cfa_offset 16
 5196              		.cfi_offset 3, -16
 5197              		.cfi_offset 4, -12
 5198              		.cfi_offset 5, -8
 5199              		.cfi_offset 14, -4
1687:Veno-Echo.cpp ****     delayR.SetBaseTempo(BaseTempo.getTapLength());
 5200              		.loc 20 1687 47 view .LVU1422
 5201 0002 0C48     		ldr	r0, .L319
 5202              	.LBB1285:
 5203              	.LBB1286:
  70:DelayMulti.h  **** //void SetSync(const bool& syncMode){syncMode_ = syncMode;}
  71:DelayMulti.h  **** void SetBaseTempo(const float& tempo){baseTempo_ = tempo;}
 5204              		.loc 17 71 50 view .LVU1423
 5205 0004 0C4D     		ldr	r5, .L319+4
 5206              	.LBE1286:
 5207              	.LBE1285:
1687:Veno-Echo.cpp ****     delayR.SetBaseTempo(BaseTempo.getTapLength());
 5208              		.loc 20 1687 47 view .LVU1424
 5209 0006 FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 5210              	.LVL256:
 5211              	.LBB1289:
 5212              	.LBI1285:
 5213              		.loc 17 71 6 is_stmt 1 view .LVU1425
 5214              	.LBB1287:
 5215              		.loc 17 71 39 view .LVU1426
 5216              	.LBE1287:
 5217              	.LBE1289:
 5218              	.LBB1290:
 5219              	.LBB1291:
 5220              		.loc 17 71 50 is_stmt 0 view .LVU1427
 5221 000a 0C4C     		ldr	r4, .L319+8
 5222              	.LBE1291:
 5223              	.LBE1290:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 198


1688:Veno-Echo.cpp ****     DELAYL_DEBUG = delayL.GetDelayTime();
 5224              		.loc 20 1688 47 view .LVU1428
 5225 000c 0948     		ldr	r0, .L319
 5226              	.LBB1294:
 5227              	.LBB1288:
 5228              		.loc 17 71 50 view .LVU1429
 5229 000e 85ED480A 		vstr.32	s0, [r5, #288]
 5230              	.LBE1288:
 5231              	.LBE1294:
1688:Veno-Echo.cpp ****     DELAYL_DEBUG = delayL.GetDelayTime();
 5232              		.loc 20 1688 5 is_stmt 1 view .LVU1430
1688:Veno-Echo.cpp ****     DELAYL_DEBUG = delayL.GetDelayTime();
 5233              		.loc 20 1688 47 is_stmt 0 view .LVU1431
 5234 0012 FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 5235              	.LVL257:
 5236              	.LBB1295:
 5237              	.LBI1290:
 5238              		.loc 17 71 6 is_stmt 1 view .LVU1432
 5239              	.LBB1292:
 5240              		.loc 17 71 39 view .LVU1433
 5241              	.LBE1292:
 5242              	.LBE1295:
1689:Veno-Echo.cpp ****     DELAYR_DEBUG = delayR.GetDelayTime();
 5243              		.loc 20 1689 39 is_stmt 0 view .LVU1434
 5244 0016 2846     		mov	r0, r5
 5245              	.LBB1296:
 5246              	.LBB1293:
 5247              		.loc 17 71 50 view .LVU1435
 5248 0018 84ED480A 		vstr.32	s0, [r4, #288]
 5249              	.LBE1293:
 5250              	.LBE1296:
1689:Veno-Echo.cpp ****     DELAYR_DEBUG = delayR.GetDelayTime();
 5251              		.loc 20 1689 5 is_stmt 1 view .LVU1436
1689:Veno-Echo.cpp ****     DELAYR_DEBUG = delayR.GetDelayTime();
 5252              		.loc 20 1689 39 is_stmt 0 view .LVU1437
 5253 001c FFF7FEFF 		bl	_ZN10DelayMulti12GetDelayTimeEv
 5254              	.LVL258:
1689:Veno-Echo.cpp ****     DELAYR_DEBUG = delayR.GetDelayTime();
 5255              		.loc 20 1689 18 view .LVU1438
 5256 0020 074B     		ldr	r3, .L319+12
1690:Veno-Echo.cpp **** }
 5257              		.loc 20 1690 39 view .LVU1439
 5258 0022 2046     		mov	r0, r4
1689:Veno-Echo.cpp ****     DELAYR_DEBUG = delayR.GetDelayTime();
 5259              		.loc 20 1689 18 view .LVU1440
 5260 0024 83ED000A 		vstr.32	s0, [r3]
1690:Veno-Echo.cpp **** }
 5261              		.loc 20 1690 5 is_stmt 1 view .LVU1441
1690:Veno-Echo.cpp **** }
 5262              		.loc 20 1690 39 is_stmt 0 view .LVU1442
 5263 0028 FFF7FEFF 		bl	_ZN10DelayMulti12GetDelayTimeEv
 5264              	.LVL259:
1690:Veno-Echo.cpp **** }
 5265              		.loc 20 1690 18 view .LVU1443
 5266 002c 054B     		ldr	r3, .L319+16
 5267 002e 83ED000A 		vstr.32	s0, [r3]
1691:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 199


 5268              		.loc 20 1691 1 view .LVU1444
 5269 0032 38BD     		pop	{r3, r4, r5, pc}
 5270              	.L320:
 5271              		.align	2
 5272              	.L319:
 5273 0034 00000000 		.word	.LANCHOR25
 5274 0038 00000000 		.word	.LANCHOR0
 5275 003c 00000000 		.word	.LANCHOR1
 5276 0040 00000000 		.word	.LANCHOR89
 5277 0044 00000000 		.word	.LANCHOR90
 5278              		.cfi_endproc
 5279              	.LFE4330:
 5281              		.section	.text._Z21Update_DelayTempoLEDsv,"ax",%progbits
 5282              		.align	1
 5283              		.p2align 2,,3
 5284              		.global	_Z21Update_DelayTempoLEDsv
 5285              		.syntax unified
 5286              		.thumb
 5287              		.thumb_func
 5288              		.fpu fpv5-d16
 5290              	_Z21Update_DelayTempoLEDsv:
 5291              	.LFB4331:
1694:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
 5292              		.loc 20 1694 1 is_stmt 1 view -0
 5293              		.cfi_startproc
 5294              		@ args = 0, pretend = 0, frame = 0
 5295              		@ frame_needed = 0, uses_anonymous_args = 0
1695:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
 5296              		.loc 20 1695 5 view .LVU1446
1694:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
 5297              		.loc 20 1694 1 is_stmt 0 view .LVU1447
 5298 0000 10B5     		push	{r4, lr}
 5299              		.cfi_def_cfa_offset 8
 5300              		.cfi_offset 4, -8
 5301              		.cfi_offset 14, -4
1695:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
 5302              		.loc 20 1695 26 view .LVU1448
 5303 0002 054C     		ldr	r4, .L323
 5304 0004 0548     		ldr	r0, .L323+4
 5305 0006 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 5306 0008 FFF7FEFF 		bl	_ZN10DelayMulti14updateTempoLEDEb
 5307              	.LVL260:
1696:Veno-Echo.cpp **** }
 5308              		.loc 20 1696 5 is_stmt 1 view .LVU1449
1696:Veno-Echo.cpp **** }
 5309              		.loc 20 1696 26 is_stmt 0 view .LVU1450
 5310 000c 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 5311 000e 0448     		ldr	r0, .L323+8
1697:Veno-Echo.cpp **** 
 5312              		.loc 20 1697 1 view .LVU1451
 5313 0010 BDE81040 		pop	{r4, lr}
 5314              		.cfi_restore 14
 5315              		.cfi_restore 4
 5316              		.cfi_def_cfa_offset 0
1696:Veno-Echo.cpp **** }
 5317              		.loc 20 1696 26 view .LVU1452
 5318 0014 FFF7FEBF 		b	_ZN10DelayMulti14updateTempoLEDEb
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 200


 5319              	.LVL261:
 5320              	.L324:
 5321              		.align	2
 5322              	.L323:
 5323 0018 00000000 		.word	.LANCHOR12
 5324 001c 00000000 		.word	.LANCHOR0
 5325 0020 00000000 		.word	.LANCHOR1
 5326              		.cfi_endproc
 5327              	.LFE4331:
 5329              		.section	.text._Z19Update_BaseTempoLEDv,"ax",%progbits
 5330              		.align	1
 5331              		.p2align 2,,3
 5332              		.global	_Z19Update_BaseTempoLEDv
 5333              		.syntax unified
 5334              		.thumb
 5335              		.thumb_func
 5336              		.fpu fpv5-d16
 5338              	_Z19Update_BaseTempoLEDv:
 5339              	.LFB4332:
1700:Veno-Echo.cpp ****     tempoLED_BASE.update();
 5340              		.loc 20 1700 1 is_stmt 1 view -0
 5341              		.cfi_startproc
 5342              		@ args = 0, pretend = 0, frame = 0
 5343              		@ frame_needed = 0, uses_anonymous_args = 0
1701:Veno-Echo.cpp **** 
 5344              		.loc 20 1701 5 view .LVU1454
1701:Veno-Echo.cpp **** 
 5345              		.loc 20 1701 25 is_stmt 0 view .LVU1455
 5346 0000 1648     		ldr	r0, .L329
1700:Veno-Echo.cpp ****     tempoLED_BASE.update();
 5347              		.loc 20 1700 1 view .LVU1456
 5348 0002 08B5     		push	{r3, lr}
 5349              		.cfi_def_cfa_offset 8
 5350              		.cfi_offset 3, -8
 5351              		.cfi_offset 14, -4
1701:Veno-Echo.cpp **** 
 5352              		.loc 20 1701 25 view .LVU1457
 5353 0004 FFF7FEFF 		bl	_ZN8TempoLED6updateEv
 5354              	.LVL262:
1703:Veno-Echo.cpp **** 
 5355              		.loc 20 1703 5 is_stmt 1 view .LVU1458
1705:Veno-Echo.cpp ****     {
 5356              		.loc 20 1705 5 view .LVU1459
1705:Veno-Echo.cpp ****     {
 5357              		.loc 20 1705 27 is_stmt 0 view .LVU1460
 5358 0008 1448     		ldr	r0, .L329
 5359 000a FFF7FEFF 		bl	_ZN8TempoLED5isEOCEv
 5360              	.LVL263:
1705:Veno-Echo.cpp ****     {
 5361              		.loc 20 1705 5 view .LVU1461
 5362 000e B8B9     		cbnz	r0, .L326
 5363 0010 134B     		ldr	r3, .L329+4
 5364 0012 1B68     		ldr	r3, [r3]
 5365              	.L327:
1710:Veno-Echo.cpp ****     //update base phase for both delay lines
 5366              		.loc 20 1710 5 is_stmt 1 view .LVU1462
 5367              	.LVL264:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 201


 5368              	.LBB1297:
 5369              	.LBI1297:
  71:LEDs.h        **** 
 5370              		.loc 14 71 7 view .LVU1463
 5371              	.LBB1298:
  71:LEDs.h        **** 
 5372              		.loc 14 71 20 view .LVU1464
  71:LEDs.h        **** 
 5373              		.loc 14 71 20 is_stmt 0 view .LVU1465
 5374              	.LBE1298:
 5375              	.LBE1297:
  17:oscillator_p.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:oscillator_p.h ****     */
  19:oscillator_p.h ****     enum
  20:oscillator_p.h ****     {
  21:oscillator_p.h ****         WAVE_SIN,
  22:oscillator_p.h ****         WAVE_TRI,
  23:oscillator_p.h ****         WAVE_SAW,
  24:oscillator_p.h ****         WAVE_RAMP,
  25:oscillator_p.h ****         WAVE_SQUARE,
  26:oscillator_p.h ****         WAVE_POLYBLEP_TRI,
  27:oscillator_p.h ****         WAVE_POLYBLEP_SAW,
  28:oscillator_p.h ****         WAVE_POLYBLEP_SQUARE,
  29:oscillator_p.h ****         WAVE_LAST,
  30:oscillator_p.h ****     };
  31:oscillator_p.h **** 
  32:oscillator_p.h **** 
  33:oscillator_p.h ****     /** Initializes the Oscillator
  34:oscillator_p.h **** 
  35:oscillator_p.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:oscillator_p.h **** 
  37:oscillator_p.h ****         Defaults:
  38:oscillator_p.h ****         - freq_ = 100 Hz
  39:oscillator_p.h ****         - amp_ = 0.5
  40:oscillator_p.h ****         - waveform_ = sine wave.
  41:oscillator_p.h ****     */
  42:oscillator_p.h ****     void Init(float sample_rate)
  43:oscillator_p.h ****     {
  44:oscillator_p.h ****         sr_        = sample_rate;
  45:oscillator_p.h ****         sr_recip_  = 1.0f / sample_rate;
  46:oscillator_p.h ****         freq_      = 100.0f;
  47:oscillator_p.h ****         amp_       = 0.5f;
  48:oscillator_p.h ****         phase_     = 0.0f;
  49:oscillator_p.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:oscillator_p.h ****         waveform_  = WAVE_SIN;
  51:oscillator_p.h ****         eoc_       = true;
  52:oscillator_p.h ****         eor_       = true;
  53:oscillator_p.h ****     }
  54:oscillator_p.h **** 
  55:oscillator_p.h **** 
  56:oscillator_p.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:oscillator_p.h ****     */
  58:oscillator_p.h ****     inline void SetFreq(const float f)
  59:oscillator_p.h ****     {
  60:oscillator_p.h ****         freq_      = f;
  61:oscillator_p.h ****         phase_inc_ = CalcPhaseInc(f);
  62:oscillator_p.h ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 202


  63:oscillator_p.h **** 
  64:oscillator_p.h **** 
  65:oscillator_p.h ****     /** Sets the amplitude of the waveform.
  66:oscillator_p.h ****     */
  67:oscillator_p.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:oscillator_p.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:oscillator_p.h ****     */
  70:oscillator_p.h ****     inline void SetWaveform(const uint8_t wf)
  71:oscillator_p.h ****     {
  72:oscillator_p.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
  73:oscillator_p.h ****     }
  74:oscillator_p.h **** 
  75:oscillator_p.h ****     /** Returns true if cycle is at end of rise. Set during call to Process.
  76:oscillator_p.h ****     */
  77:oscillator_p.h ****     inline bool IsEOR() { return eor_; }
  78:oscillator_p.h **** 
  79:oscillator_p.h ****     /** Returns true if cycle is at end of cycle. Set during call to Process.
  80:oscillator_p.h ****     */
  81:oscillator_p.h ****     inline bool IsEOC() { return eoc_; }
  82:oscillator_p.h **** 
  83:oscillator_p.h ****     /** Returns true if cycle rising.
  84:oscillator_p.h ****     */
  85:oscillator_p.h ****     inline bool IsRising() { return phase_ < PI_F; }
  86:oscillator_p.h **** 
  87:oscillator_p.h ****     /** Returns true if cycle falling.
  88:oscillator_p.h ****     */
  89:oscillator_p.h ****     inline bool IsFalling() { return phase_ >= PI_F; }
  90:oscillator_p.h **** 
  91:oscillator_p.h ****     //Returns phase angle
  92:oscillator_p.h ****     inline float GetPhase() { return phase_; }
 5376              		.loc 15 92 31 is_stmt 1 view .LVU1466
 5377              	.LBB1300:
 5378              	.LBB1299:
  71:LEDs.h        **** 
 5379              		.loc 14 71 41 is_stmt 0 view .LVU1467
 5380 0014 114A     		ldr	r2, .L329
 5381              	.LBE1299:
 5382              	.LBE1300:
1710:Veno-Echo.cpp ****     //update base phase for both delay lines
 5383              		.loc 20 1710 50 view .LVU1468
 5384 0016 B1EE086A 		vmov.f32	s12, #6.0e+0
1710:Veno-Echo.cpp ****     //update base phase for both delay lines
 5385              		.loc 20 1710 73 view .LVU1469
 5386 001a 07EE903A 		vmov	s15, r3	@ int
1710:Veno-Echo.cpp ****     //update base phase for both delay lines
 5387              		.loc 20 1710 55 view .LVU1470
 5388 001e DFED116A 		vldr.32	s13, .L329+8
1710:Veno-Echo.cpp ****     //update base phase for both delay lines
 5389              		.loc 20 1710 50 view .LVU1471
 5390 0022 D2ED0C5A 		vldr.32	s11, [r2, #48]
1710:Veno-Echo.cpp ****     //update base phase for both delay lines
 5391              		.loc 20 1710 73 view .LVU1472
 5392 0026 F8EEE77A 		vcvt.f32.s32	s15, s15
 5393              	.LBB1301:
 5394              	.LBB1302:
  72:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 5395              		.loc 17 72 54 view .LVU1473
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 203


 5396 002a 0F4A     		ldr	r2, .L329+12
 5397              	.LBE1302:
 5398              	.LBE1301:
1710:Veno-Echo.cpp ****     //update base phase for both delay lines
 5399              		.loc 20 1710 50 view .LVU1474
 5400 002c 85EE867A 		vdiv.f32	s14, s11, s12
 5401              	.LBB1304:
 5402              	.LBB1305:
 5403              		.loc 17 72 54 view .LVU1475
 5404 0030 0E4B     		ldr	r3, .L329+16
 5405              	.LBE1305:
 5406              	.LBE1304:
1710:Veno-Echo.cpp ****     //update base phase for both delay lines
 5407              		.loc 20 1710 55 view .LVU1476
 5408 0032 A7EEA67A 		vfma.f32	s14, s15, s13
 5409              	.LVL265:
1712:Veno-Echo.cpp ****     delayR.SetBasePhase( dividedPhase );
 5410              		.loc 20 1712 5 is_stmt 1 view .LVU1477
 5411              	.LBB1307:
 5412              	.LBI1301:
 5413              		.loc 17 72 6 view .LVU1478
 5414              	.LBB1303:
 5415              		.loc 17 72 43 view .LVU1479
 5416              		.loc 17 72 54 is_stmt 0 view .LVU1480
 5417 0036 82ED477A 		vstr.32	s14, [r2, #284]
 5418              	.LBE1303:
 5419              	.LBE1307:
1713:Veno-Echo.cpp **** }
 5420              		.loc 20 1713 5 is_stmt 1 view .LVU1481
 5421              	.LVL266:
 5422              	.LBB1308:
 5423              	.LBI1304:
 5424              		.loc 17 72 6 view .LVU1482
 5425              	.LBB1306:
 5426              		.loc 17 72 43 view .LVU1483
 5427              		.loc 17 72 54 is_stmt 0 view .LVU1484
 5428 003a 83ED477A 		vstr.32	s14, [r3, #284]
 5429              	.LVL267:
 5430              		.loc 17 72 54 view .LVU1485
 5431              	.LBE1306:
 5432              	.LBE1308:
1714:Veno-Echo.cpp **** 
 5433              		.loc 20 1714 1 view .LVU1486
 5434 003e 08BD     		pop	{r3, pc}
 5435              	.LVL268:
 5436              	.L326:
1707:Veno-Echo.cpp ****     }
 5437              		.loc 20 1707 9 is_stmt 1 view .LVU1487
1707:Veno-Echo.cpp ****     }
 5438              		.loc 20 1707 38 is_stmt 0 view .LVU1488
 5439 0040 0749     		ldr	r1, .L329+4
1707:Veno-Echo.cpp ****     }
 5440              		.loc 20 1707 43 view .LVU1489
 5441 0042 0B4B     		ldr	r3, .L329+20
1707:Veno-Echo.cpp ****     }
 5442              		.loc 20 1707 38 view .LVU1490
 5443 0044 0A68     		ldr	r2, [r1]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 204


 5444 0046 0132     		adds	r2, r2, #1
1707:Veno-Echo.cpp ****     }
 5445              		.loc 20 1707 43 view .LVU1491
 5446 0048 83FB0203 		smull	r0, r3, r3, r2
 5447 004c A3EBE273 		sub	r3, r3, r2, asr #31
 5448 0050 03EB4303 		add	r3, r3, r3, lsl #1
 5449 0054 A2EB4303 		sub	r3, r2, r3, lsl #1
1707:Veno-Echo.cpp ****     }
 5450              		.loc 20 1707 22 view .LVU1492
 5451 0058 0B60     		str	r3, [r1]
 5452 005a DBE7     		b	.L327
 5453              	.L330:
 5454              		.align	2
 5455              	.L329:
 5456 005c 00000000 		.word	.LANCHOR88
 5457 0060 00000000 		.word	.LANCHOR91
 5458 0064 920A863F 		.word	1065749138
 5459 0068 00000000 		.word	.LANCHOR0
 5460 006c 00000000 		.word	.LANCHOR1
 5461 0070 ABAAAA2A 		.word	715827883
 5462              		.cfi_endproc
 5463              	.LFE4332:
 5465              		.section	.text._Z13ApplySettingsRK8Settings,"ax",%progbits
 5466              		.align	1
 5467              		.p2align 2,,3
 5468              		.global	_Z13ApplySettingsRK8Settings
 5469              		.syntax unified
 5470              		.thumb
 5471              		.thumb_func
 5472              		.fpu fpv5-d16
 5474              	_Z13ApplySettingsRK8Settings:
 5475              	.LVL269:
 5476              	.LFB4333:
1718:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5477              		.loc 20 1718 1 is_stmt 1 view -0
 5478              		.cfi_startproc
 5479              		@ args = 0, pretend = 0, frame = 0
 5480              		@ frame_needed = 0, uses_anonymous_args = 0
1719:Veno-Echo.cpp ****     {
 5481              		.loc 20 1719 5 view .LVU1494
 5482 0000 9FEDCF7A 		vldr.32	s14, .L399
1719:Veno-Echo.cpp ****     {
 5483              		.loc 20 1719 17 is_stmt 0 view .LVU1495
 5484 0004 D0ED007A 		vldr.32	s15, [r0]
1719:Veno-Echo.cpp ****     {
 5485              		.loc 20 1719 5 view .LVU1496
 5486 0008 F4EEC77A 		vcmpe.f32	s15, s14
1718:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5487              		.loc 20 1718 1 view .LVU1497
 5488 000c 38B5     		push	{r3, r4, r5, lr}
 5489              		.cfi_def_cfa_offset 16
 5490              		.cfi_offset 3, -16
 5491              		.cfi_offset 4, -12
 5492              		.cfi_offset 5, -8
 5493              		.cfi_offset 14, -4
1719:Veno-Echo.cpp ****     {
 5494              		.loc 20 1719 5 view .LVU1498
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 205


 5495 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1718:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5496              		.loc 20 1718 1 view .LVU1499
 5497 0012 0446     		mov	r4, r0
 5498              	.LBB1309:
 5499              	.LBB1310:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5500              		.loc 20 70 28 view .LVU1500
 5501 0014 CB4B     		ldr	r3, .L399+4
 5502              	.LBE1310:
 5503              	.LBE1309:
1719:Veno-Echo.cpp ****     {
 5504              		.loc 20 1719 5 view .LVU1501
 5505 0016 C0F2FD80 		blt	.L332
1719:Veno-Echo.cpp ****     {
 5506              		.loc 20 1719 43 discriminator 1 view .LVU1502
 5507 001a 9FEDCB7A 		vldr.32	s14, .L399+8
 5508 001e F4EEC77A 		vcmpe.f32	s15, s14
 5509 0022 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5510 0026 00F2F580 		bhi	.L332
1721:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5511              		.loc 20 1721 9 is_stmt 1 view .LVU1503
 5512              	.LVL270:
 5513              	.LBB1324:
 5514              	.LBI1309:
  68:Veno-Echo.cpp ****     {
 5515              		.loc 20 68 10 view .LVU1504
 5516              	.LBB1322:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5517              		.loc 20 70 9 view .LVU1505
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5518              		.loc 20 70 28 is_stmt 0 view .LVU1506
 5519 002a 93ED017A 		vldr.32	s14, [r3, #4]
 5520              	.LVL271:
 5521              	.LBB1311:
 5522              	.LBI1311:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5523              		.loc 21 75 3 is_stmt 1 view .LVU1507
 5524              	.LBB1312:
 5525              		.loc 21 76 5 view .LVU1508
 5526              		.loc 21 76 5 is_stmt 0 view .LVU1509
 5527              	.LBE1312:
 5528              	.LBE1311:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5529              		.loc 20 70 53 view .LVU1510
 5530 002e 9FEDC76A 		vldr.32	s12, .L399+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5531              		.loc 20 70 15 view .LVU1511
 5532 0032 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5533              		.loc 20 70 53 view .LVU1512
 5534 0036 27EE067A 		vmul.f32	s14, s14, s12
 5535              	.LBB1314:
 5536              	.LBB1313:
 5537              		.loc 21 76 31 view .LVU1513
 5538 003a F0EEE66A 		vabs.f32	s13, s13
 5539              	.LBE1313:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 206


 5540              	.LBE1314:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5541              		.loc 20 70 9 view .LVU1514
 5542 003e F4EEC76A 		vcmpe.f32	s13, s14
 5543 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5544 0046 0FDD     		ble	.L335
  74:Veno-Echo.cpp ****             //del -> Reset();
 5545              		.loc 20 74 29 view .LVU1515
 5546 0048 BCEEE77A 		vcvt.u32.f32	s14, s15
 5547              	.LBB1315:
 5548              	.LBB1316:
 5549              		.loc 19 72 9 view .LVU1516
 5550 004c C04D     		ldr	r5, .L399+16
 5551              	.LBE1316:
 5552              	.LBE1315:
 5553              	.LBE1322:
 5554              	.LBE1324:
1721:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5555              		.loc 20 1721 33 view .LVU1517
 5556 004e 1968     		ldr	r1, [r3]
 5557              	.LBB1325:
 5558              	.LBB1323:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5559              		.loc 20 73 13 is_stmt 1 view .LVU1518
 5560              	.LBB1319:
 5561              	.LBB1317:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5562              		.loc 19 71 9 is_stmt 0 view .LVU1519
 5563 0050 0020     		movs	r0, #0
 5564              	.LVL272:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5565              		.loc 19 71 9 view .LVU1520
 5566              	.LBE1317:
 5567              	.LBE1319:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5568              		.loc 20 73 27 view .LVU1521
 5569 0052 C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5570              		.loc 20 74 13 is_stmt 1 view .LVU1522
 5571              	.LVL273:
 5572              	.LBB1320:
 5573              	.LBI1315:
  69:delayline_reverse.h ****     {
 5574              		.loc 19 69 17 view .LVU1523
  69:delayline_reverse.h ****     {
 5575              		.loc 19 69 17 is_stmt 0 view .LVU1524
 5576              	.LBE1320:
  74:Veno-Echo.cpp ****             //del -> Reset();
 5577              		.loc 20 74 29 view .LVU1525
 5578 0056 17EE102A 		vmov	r2, s14	@ int
 5579              	.LBB1321:
 5580              	.LBB1318:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5581              		.loc 19 71 9 view .LVU1526
 5582 005a 0860     		str	r0, [r1]	@ float
 5583 005c D4ED007A 		vldr.32	s15, [r4]
 5584              	.LVL274:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 207


 5585              		.loc 19 72 9 view .LVU1527
 5586 0060 AA42     		cmp	r2, r5
 5587 0062 28BF     		it	cs
 5588 0064 2A46     		movcs	r2, r5
 5589 0066 0A61     		str	r2, [r1, #16]
 5590              	.LVL275:
 5591              	.L335:
 5592              		.loc 19 72 9 view .LVU1528
 5593              	.LBE1318:
 5594              	.LBE1321:
 5595              	.LBE1323:
 5596              	.LBE1325:
1722:Veno-Echo.cpp ****     }
 5597              		.loc 20 1722 9 is_stmt 1 view .LVU1529
 5598              	.LBB1326:
 5599              	.LBI1326:
  68:Veno-Echo.cpp ****     {
 5600              		.loc 20 68 10 view .LVU1530
 5601              	.LBB1327:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5602              		.loc 20 70 9 view .LVU1531
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5603              		.loc 20 70 28 is_stmt 0 view .LVU1532
 5604 0068 BA4B     		ldr	r3, .L399+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5605              		.loc 20 70 53 view .LVU1533
 5606 006a 9FEDB86A 		vldr.32	s12, .L399+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5607              		.loc 20 70 28 view .LVU1534
 5608 006e 93ED017A 		vldr.32	s14, [r3, #4]
 5609              	.LVL276:
 5610              	.LBB1328:
 5611              	.LBI1328:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5612              		.loc 21 75 3 is_stmt 1 view .LVU1535
 5613              	.LBB1329:
 5614              		.loc 21 76 5 view .LVU1536
 5615              		.loc 21 76 5 is_stmt 0 view .LVU1537
 5616              	.LBE1329:
 5617              	.LBE1328:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5618              		.loc 20 70 15 view .LVU1538
 5619 0072 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5620              		.loc 20 70 53 view .LVU1539
 5621 0076 27EE067A 		vmul.f32	s14, s14, s12
 5622              	.LBB1331:
 5623              	.LBB1330:
 5624              		.loc 21 76 31 view .LVU1540
 5625 007a F0EEE66A 		vabs.f32	s13, s13
 5626              	.LBE1330:
 5627              	.LBE1331:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5628              		.loc 20 70 9 view .LVU1541
 5629 007e F4EEC76A 		vcmpe.f32	s13, s14
 5630 0082 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5631 0086 00F34B81 		bgt	.L395
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 208


 5632              	.LVL277:
 5633              	.L338:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5634              		.loc 20 70 9 view .LVU1542
 5635              	.LBE1327:
 5636              	.LBE1326:
1730:Veno-Echo.cpp ****     {
 5637              		.loc 20 1730 5 is_stmt 1 view .LVU1543
 5638 008a F7EE007A 		vmov.f32	s15, #1.0e+0
1730:Veno-Echo.cpp ****     {
 5639              		.loc 20 1730 17 is_stmt 0 view .LVU1544
 5640 008e 94ED010A 		vldr.32	s0, [r4, #4]
1730:Veno-Echo.cpp ****     {
 5641              		.loc 20 1730 5 view .LVU1545
 5642 0092 B4EEE70A 		vcmpe.f32	s0, s15
 5643 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5644 009a 06DB     		blt	.L343
1730:Veno-Echo.cpp ****     {
 5645              		.loc 20 1730 35 discriminator 1 view .LVU1546
 5646 009c F0EE087A 		vmov.f32	s15, #3.0e+0
 5647 00a0 B4EEE70A 		vcmpe.f32	s0, s15
 5648 00a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5649 00a8 01D9     		bls	.L393
 5650              	.L343:
1736:Veno-Echo.cpp ****     }
 5651              		.loc 20 1736 9 is_stmt 1 view .LVU1547
1736:Veno-Echo.cpp ****     }
 5652              		.loc 20 1736 30 is_stmt 0 view .LVU1548
 5653 00aa B7EE000A 		vmov.f32	s0, #1.0e+0
 5654              	.L393:
 5655 00ae AA48     		ldr	r0, .L399+24
 5656 00b0 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 5657              	.LVL278:
1739:Veno-Echo.cpp ****     {
 5658              		.loc 20 1739 5 is_stmt 1 view .LVU1549
1739:Veno-Echo.cpp ****     {
 5659              		.loc 20 1739 17 is_stmt 0 view .LVU1550
 5660 00b4 D4ED027A 		vldr.32	s15, [r4, #8]
1739:Veno-Echo.cpp ****     {
 5661              		.loc 20 1739 5 view .LVU1551
 5662 00b8 F5EEC07A 		vcmpe.f32	s15, #0
 5663 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5664 00c0 C0F22B81 		blt	.L390
1739:Veno-Echo.cpp ****     {
 5665              		.loc 20 1739 42 discriminator 1 view .LVU1552
 5666 00c4 DFEDA56A 		vldr.32	s13, .L399+28
1745:Veno-Echo.cpp ****     }
 5667              		.loc 20 1745 18 discriminator 1 view .LVU1553
 5668 00c8 9FEDA57A 		vldr.32	s14, .L399+32
 5669 00cc F4EEE67A 		vcmpe.f32	s15, s13
 5670 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5671 00d4 88BF     		it	hi
 5672 00d6 F0EE477A 		vmovhi.f32	s15, s14
 5673              	.L347:
1748:Veno-Echo.cpp ****     {
 5674              		.loc 20 1748 17 view .LVU1554
 5675 00da 94ED030A 		vldr.32	s0, [r4, #12]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 209


1748:Veno-Echo.cpp ****     {
 5676              		.loc 20 1748 5 view .LVU1555
 5677 00de 9FEDA17A 		vldr.32	s14, .L399+36
 5678 00e2 A14B     		ldr	r3, .L399+40
 5679 00e4 B4EEC70A 		vcmpe.f32	s0, s14
 5680              	.LBB1342:
 5681              	.LBB1343:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 5682              		.loc 8 60 20 view .LVU1556
 5683 00e8 A04D     		ldr	r5, .L399+44
 5684 00ea C3ED007A 		vstr.32	s15, [r3]
 5685              	.LBE1343:
 5686              	.LBE1342:
1748:Veno-Echo.cpp ****     {
 5687              		.loc 20 1748 5 is_stmt 1 view .LVU1557
 5688 00ee F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5689 00f2 06DB     		blt	.L350
1748:Veno-Echo.cpp ****     {
 5690              		.loc 20 1748 40 is_stmt 0 discriminator 1 view .LVU1558
 5691 00f4 F2EE047A 		vmov.f32	s15, #1.0e+1
 5692 00f8 B4EEE70A 		vcmpe.f32	s0, s15
 5693 00fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5694 0100 01D9     		bls	.L394
 5695              	.L350:
1754:Veno-Echo.cpp ****     }
 5696              		.loc 20 1754 9 is_stmt 1 view .LVU1559
 5697              	.LVL279:
 5698              	.LBB1344:
 5699              	.LBI1344:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 5700              		.loc 8 58 17 view .LVU1560
 5701              	.LBB1345:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 5702              		.loc 8 60 9 view .LVU1561
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 5703              		.loc 8 60 20 is_stmt 0 view .LVU1562
 5704 0102 9FED9B0A 		vldr.32	s0, .L399+48
 5705              	.LVL280:
 5706              	.L394:
 5707              		.loc 8 61 34 view .LVU1563
 5708 0106 2846     		mov	r0, r5
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 5709              		.loc 8 60 20 view .LVU1564
 5710 0108 85ED020A 		vstr.32	s0, [r5, #8]
 5711              		.loc 8 61 9 is_stmt 1 view .LVU1565
 5712              		.loc 8 61 34 is_stmt 0 view .LVU1566
 5713 010c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 5714              	.LVL281:
 5715              	.LBE1345:
 5716              	.LBE1344:
1757:Veno-Echo.cpp ****     {
 5717              		.loc 20 1757 5 view .LVU1567
 5718 0110 DFED987A 		vldr.32	s15, .L399+52
 5719              	.LBB1347:
 5720              	.LBB1346:
 5721              		.loc 8 61 20 view .LVU1568
 5722 0114 85ED060A 		vstr.32	s0, [r5, #24]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 210


 5723              	.LBE1346:
 5724              	.LBE1347:
1757:Veno-Echo.cpp ****     {
 5725              		.loc 20 1757 5 is_stmt 1 view .LVU1569
1757:Veno-Echo.cpp ****     {
 5726              		.loc 20 1757 17 is_stmt 0 view .LVU1570
 5727 0118 94ED050A 		vldr.32	s0, [r4, #20]
1757:Veno-Echo.cpp ****     {
 5728              		.loc 20 1757 5 view .LVU1571
 5729 011c B4EEE70A 		vcmpe.f32	s0, s15
 5730 0120 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5731 0124 07DB     		blt	.L354
1757:Veno-Echo.cpp ****     {
 5732              		.loc 20 1757 40 discriminator 1 view .LVU1572
 5733 0126 DFED947A 		vldr.32	s15, .L399+56
 5734 012a B4EEE70A 		vcmpe.f32	s0, s15
 5735 012e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5736 0132 40F2DF80 		bls	.L396
 5737              	.L354:
1766:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 5738              		.loc 20 1766 9 is_stmt 1 view .LVU1573
1766:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 5739              		.loc 20 1766 22 is_stmt 0 view .LVU1574
 5740 0136 9FED900A 		vldr.32	s0, .L399+56
 5741 013a 9048     		ldr	r0, .L399+60
 5742 013c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5743              	.LVL282:
1767:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 5744              		.loc 20 1767 9 is_stmt 1 view .LVU1575
1767:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 5745              		.loc 20 1767 22 is_stmt 0 view .LVU1576
 5746 0140 9FED8D0A 		vldr.32	s0, .L399+56
 5747 0144 8E48     		ldr	r0, .L399+64
 5748 0146 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5749              	.LVL283:
1768:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 5750              		.loc 20 1768 9 is_stmt 1 view .LVU1577
1768:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 5751              		.loc 20 1768 27 is_stmt 0 view .LVU1578
 5752 014a 9FED8B0A 		vldr.32	s0, .L399+56
 5753 014e 8D48     		ldr	r0, .L399+68
 5754 0150 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5755              	.LVL284:
1769:Veno-Echo.cpp ****     }
 5756              		.loc 20 1769 9 is_stmt 1 view .LVU1579
1769:Veno-Echo.cpp ****     }
 5757              		.loc 20 1769 27 is_stmt 0 view .LVU1580
 5758 0154 9FED880A 		vldr.32	s0, .L399+56
 5759 0158 8B48     		ldr	r0, .L399+72
 5760 015a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5761              	.LVL285:
 5762              	.L357:
1772:Veno-Echo.cpp ****     {
 5763              		.loc 20 1772 5 is_stmt 1 view .LVU1581
1772:Veno-Echo.cpp ****     {
 5764              		.loc 20 1772 17 is_stmt 0 view .LVU1582
 5765 015e 94ED040A 		vldr.32	s0, [r4, #16]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 211


1772:Veno-Echo.cpp ****     {
 5766              		.loc 20 1772 5 view .LVU1583
 5767 0162 DFED8A7A 		vldr.32	s15, .L399+76
 5768 0166 B4EEE70A 		vcmpe.f32	s0, s15
 5769 016a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5770 016e 07DB     		blt	.L358
1772:Veno-Echo.cpp ****     {
 5771              		.loc 20 1772 40 discriminator 1 view .LVU1584
 5772 0170 DFED877A 		vldr.32	s15, .L399+80
 5773 0174 B4EEE70A 		vcmpe.f32	s0, s15
 5774 0178 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5775 017c 40F2A780 		bls	.L397
 5776              	.L358:
1781:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 5777              		.loc 20 1781 9 is_stmt 1 view .LVU1585
1781:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 5778              		.loc 20 1781 22 is_stmt 0 view .LVU1586
 5779 0180 9FED840A 		vldr.32	s0, .L399+84
 5780 0184 8448     		ldr	r0, .L399+88
 5781 0186 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5782              	.LVL286:
1782:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 5783              		.loc 20 1782 9 is_stmt 1 view .LVU1587
1782:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 5784              		.loc 20 1782 22 is_stmt 0 view .LVU1588
 5785 018a 9FED820A 		vldr.32	s0, .L399+84
 5786 018e 8348     		ldr	r0, .L399+92
 5787 0190 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5788              	.LVL287:
1783:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 5789              		.loc 20 1783 9 is_stmt 1 view .LVU1589
1783:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 5790              		.loc 20 1783 27 is_stmt 0 view .LVU1590
 5791 0194 9FED7F0A 		vldr.32	s0, .L399+84
 5792 0198 8148     		ldr	r0, .L399+96
 5793 019a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5794              	.LVL288:
1784:Veno-Echo.cpp **** 
 5795              		.loc 20 1784 9 is_stmt 1 view .LVU1591
1784:Veno-Echo.cpp **** 
 5796              		.loc 20 1784 27 is_stmt 0 view .LVU1592
 5797 019e 9FED7D0A 		vldr.32	s0, .L399+84
 5798 01a2 8048     		ldr	r0, .L399+100
 5799 01a4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5800              	.LVL289:
 5801              	.L361:
1788:Veno-Echo.cpp ****     {
 5802              		.loc 20 1788 5 is_stmt 1 view .LVU1593
1788:Veno-Echo.cpp ****     {
 5803              		.loc 20 1788 17 is_stmt 0 view .LVU1594
 5804 01a8 94ED060A 		vldr.32	s0, [r4, #24]
1788:Veno-Echo.cpp ****     {
 5805              		.loc 20 1788 5 view .LVU1595
 5806 01ac B5EEC00A 		vcmpe.f32	s0, #0
 5807 01b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5808 01b4 06DB     		blt	.L362
1788:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 212


 5809              		.loc 20 1788 38 discriminator 1 view .LVU1596
 5810 01b6 F6EE007A 		vmov.f32	s15, #5.0e-1
 5811 01ba B4EEE70A 		vcmpe.f32	s0, s15
 5812 01be F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5813 01c2 5DD9     		bls	.L398
 5814              	.L362:
1802:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 5815              		.loc 20 1802 9 is_stmt 1 view .LVU1597
1802:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 5816              		.loc 20 1802 26 is_stmt 0 view .LVU1598
 5817 01c4 9FED660A 		vldr.32	s0, .L399+32
 5818 01c8 6E48     		ldr	r0, .L399+68
 5819 01ca FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5820              	.LVL290:
1803:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 5821              		.loc 20 1803 9 is_stmt 1 view .LVU1599
1803:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 5822              		.loc 20 1803 26 is_stmt 0 view .LVU1600
 5823 01ce 9FED640A 		vldr.32	s0, .L399+32
 5824 01d2 7348     		ldr	r0, .L399+96
 5825 01d4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5826              	.LVL291:
1804:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 5827              		.loc 20 1804 9 is_stmt 1 view .LVU1601
1804:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 5828              		.loc 20 1804 26 is_stmt 0 view .LVU1602
 5829 01d8 9FED610A 		vldr.32	s0, .L399+32
 5830 01dc 6A48     		ldr	r0, .L399+72
 5831 01de FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5832              	.LVL292:
1805:Veno-Echo.cpp ****     }
 5833              		.loc 20 1805 9 is_stmt 1 view .LVU1603
1805:Veno-Echo.cpp ****     }
 5834              		.loc 20 1805 26 is_stmt 0 view .LVU1604
 5835 01e2 9FED5F0A 		vldr.32	s0, .L399+32
 5836 01e6 6F48     		ldr	r0, .L399+100
 5837 01e8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5838              	.LVL293:
 5839              	.L365:
1808:Veno-Echo.cpp ****     {
 5840              		.loc 20 1808 5 is_stmt 1 view .LVU1605
1808:Veno-Echo.cpp ****     {
 5841              		.loc 20 1808 16 is_stmt 0 view .LVU1606
 5842 01ec D4ED077A 		vldr.32	s15, [r4, #28]
1808:Veno-Echo.cpp ****     {
 5843              		.loc 20 1808 5 view .LVU1607
 5844 01f0 9FED6D7A 		vldr.32	s14, .L399+104
1814:Veno-Echo.cpp ****     }
 5845              		.loc 20 1814 21 view .LVU1608
 5846 01f4 6D4B     		ldr	r3, .L399+108
1808:Veno-Echo.cpp ****     {
 5847              		.loc 20 1808 5 view .LVU1609
 5848 01f6 F4EEC77A 		vcmpe.f32	s15, s14
 5849 01fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5850 01fe 3CD4     		bmi	.L369
1812:Veno-Echo.cpp ****     {
 5851              		.loc 20 1812 14 is_stmt 1 view .LVU1610
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 213


 5852 0200 9FED6B7A 		vldr.32	s14, .L399+112
 5853 0204 F4EEC77A 		vcmpe.f32	s15, s14
 5854 0208 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5855 020c 35DD     		ble	.L369
1814:Veno-Echo.cpp ****     }
 5856              		.loc 20 1814 9 view .LVU1611
1814:Veno-Echo.cpp ****     }
 5857              		.loc 20 1814 21 is_stmt 0 view .LVU1612
 5858 020e 0122     		movs	r2, #1
 5859 0210 1A70     		strb	r2, [r3]
1821:Veno-Echo.cpp **** 
 5860              		.loc 20 1821 1 view .LVU1613
 5861 0212 38BD     		pop	{r3, r4, r5, pc}
 5862              	.LVL294:
 5863              	.L332:
1726:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 5864              		.loc 20 1726 9 is_stmt 1 view .LVU1614
 5865              	.LBB1348:
 5866              	.LBI1348:
  68:Veno-Echo.cpp ****     {
 5867              		.loc 20 68 10 view .LVU1615
 5868              	.LBB1349:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5869              		.loc 20 70 9 view .LVU1616
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5870              		.loc 20 70 28 is_stmt 0 view .LVU1617
 5871 0214 D3ED017A 		vldr.32	s15, [r3, #4]
 5872              	.LVL295:
 5873              	.LBB1350:
 5874              	.LBI1350:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5875              		.loc 21 75 3 is_stmt 1 view .LVU1618
 5876              	.LBB1351:
 5877              		.loc 21 76 5 view .LVU1619
 5878              		.loc 21 76 5 is_stmt 0 view .LVU1620
 5879              	.LBE1351:
 5880              	.LBE1350:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5881              		.loc 20 70 15 view .LVU1621
 5882 0218 DFED666A 		vldr.32	s13, .L399+116
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5883              		.loc 20 70 53 view .LVU1622
 5884 021c 9FED4B6A 		vldr.32	s12, .L399+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5885              		.loc 20 70 15 view .LVU1623
 5886 0220 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5887              		.loc 20 70 53 view .LVU1624
 5888 0224 67EE867A 		vmul.f32	s15, s15, s12
 5889              	.LBB1353:
 5890              	.LBB1352:
 5891              		.loc 21 76 31 view .LVU1625
 5892 0228 B0EEC77A 		vabs.f32	s14, s14
 5893              	.LBE1352:
 5894              	.LBE1353:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5895              		.loc 20 70 9 view .LVU1626
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 214


 5896 022c B4EEE77A 		vcmpe.f32	s14, s15
 5897 0230 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5898 0234 06DD     		ble	.L339
 5899              	.LBE1349:
 5900              	.LBE1348:
1726:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 5901              		.loc 20 1726 33 view .LVU1627
 5902 0236 1A68     		ldr	r2, [r3]
 5903              	.LBB1359:
 5904              	.LBB1358:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5905              		.loc 20 73 13 is_stmt 1 view .LVU1628
 5906              	.LBB1354:
 5907              	.LBB1355:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5908              		.loc 19 71 9 is_stmt 0 view .LVU1629
 5909 0238 0021     		movs	r1, #0
 5910              		.loc 19 72 9 view .LVU1630
 5911 023a 5F48     		ldr	r0, .L399+120
 5912              	.LVL296:
 5913              		.loc 19 72 9 view .LVU1631
 5914              	.LBE1355:
 5915              	.LBE1354:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5916              		.loc 20 73 27 view .LVU1632
 5917 023c C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5918              		.loc 20 74 13 is_stmt 1 view .LVU1633
 5919              	.LVL297:
 5920              	.LBB1357:
 5921              	.LBI1354:
  69:delayline_reverse.h ****     {
 5922              		.loc 19 69 17 view .LVU1634
 5923              	.LBB1356:
 5924              		.loc 19 72 9 is_stmt 0 view .LVU1635
 5925 0240 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5926              		.loc 19 71 9 view .LVU1636
 5927 0242 1160     		str	r1, [r2]	@ float
 5928              	.LVL298:
 5929              	.L339:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5930              		.loc 19 71 9 view .LVU1637
 5931              	.LBE1356:
 5932              	.LBE1357:
 5933              	.LBE1358:
 5934              	.LBE1359:
1727:Veno-Echo.cpp ****     }
 5935              		.loc 20 1727 9 is_stmt 1 view .LVU1638
 5936              	.LBB1360:
 5937              	.LBI1360:
  68:Veno-Echo.cpp ****     {
 5938              		.loc 20 68 10 view .LVU1639
 5939              	.LBB1361:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5940              		.loc 20 70 9 view .LVU1640
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 215


 5941              		.loc 20 70 28 is_stmt 0 view .LVU1641
 5942 0244 434B     		ldr	r3, .L399+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5943              		.loc 20 70 15 view .LVU1642
 5944 0246 DFED5B6A 		vldr.32	s13, .L399+116
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5945              		.loc 20 70 28 view .LVU1643
 5946 024a D3ED017A 		vldr.32	s15, [r3, #4]
 5947              	.LVL299:
 5948              	.LBB1362:
 5949              	.LBI1362:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5950              		.loc 21 75 3 is_stmt 1 view .LVU1644
 5951              	.LBB1363:
 5952              		.loc 21 76 5 view .LVU1645
 5953              		.loc 21 76 5 is_stmt 0 view .LVU1646
 5954              	.LBE1363:
 5955              	.LBE1362:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5956              		.loc 20 70 53 view .LVU1647
 5957 024e 9FED3F6A 		vldr.32	s12, .L399+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5958              		.loc 20 70 15 view .LVU1648
 5959 0252 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5960              		.loc 20 70 53 view .LVU1649
 5961 0256 67EE867A 		vmul.f32	s15, s15, s12
 5962              	.LBB1365:
 5963              	.LBB1364:
 5964              		.loc 21 76 31 view .LVU1650
 5965 025a B0EEC77A 		vabs.f32	s14, s14
 5966              	.LBE1364:
 5967              	.LBE1365:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5968              		.loc 20 70 9 view .LVU1651
 5969 025e B4EEE77A 		vcmpe.f32	s14, s15
 5970 0262 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5971 0266 7FF710AF 		ble	.L338
 5972              	.LBE1361:
 5973              	.LBE1360:
1727:Veno-Echo.cpp ****     }
 5974              		.loc 20 1727 33 view .LVU1652
 5975 026a 1A68     		ldr	r2, [r3]
 5976              	.LBB1371:
 5977              	.LBB1370:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5978              		.loc 20 73 13 is_stmt 1 view .LVU1653
 5979              	.LBB1366:
 5980              	.LBB1367:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5981              		.loc 19 71 9 is_stmt 0 view .LVU1654
 5982 026c 0021     		movs	r1, #0
 5983              		.loc 19 72 9 view .LVU1655
 5984 026e 5248     		ldr	r0, .L399+120
 5985              	.LBE1367:
 5986              	.LBE1366:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 216


 5987              		.loc 20 73 27 view .LVU1656
 5988 0270 C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5989              		.loc 20 74 13 is_stmt 1 view .LVU1657
 5990              	.LVL300:
 5991              	.LBB1369:
 5992              	.LBI1366:
  69:delayline_reverse.h ****     {
 5993              		.loc 19 69 17 view .LVU1658
 5994              	.LBB1368:
 5995              		.loc 19 72 9 is_stmt 0 view .LVU1659
 5996 0274 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5997              		.loc 19 71 9 view .LVU1660
 5998 0276 1160     		str	r1, [r2]	@ float
  73:delayline_reverse.h ****     }
 5999              		.loc 19 73 5 view .LVU1661
 6000 0278 07E7     		b	.L338
 6001              	.LVL301:
 6002              	.L369:
 6003              		.loc 19 73 5 view .LVU1662
 6004              	.LBE1368:
 6005              	.LBE1369:
 6006              	.LBE1370:
 6007              	.LBE1371:
1810:Veno-Echo.cpp ****     }
 6008              		.loc 20 1810 9 is_stmt 1 view .LVU1663
1810:Veno-Echo.cpp ****     }
 6009              		.loc 20 1810 21 is_stmt 0 view .LVU1664
 6010 027a 0022     		movs	r2, #0
 6011 027c 1A70     		strb	r2, [r3]
1821:Veno-Echo.cpp **** 
 6012              		.loc 20 1821 1 view .LVU1665
 6013 027e 38BD     		pop	{r3, r4, r5, pc}
 6014              	.LVL302:
 6015              	.L398:
1790:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 6016              		.loc 20 1790 9 is_stmt 1 view .LVU1666
1790:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 6017              		.loc 20 1790 21 is_stmt 0 view .LVU1667
 6018 0280 3E48     		ldr	r0, .L399+60
 6019 0282 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6020              	.LVL303:
1791:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 6021              		.loc 20 1791 9 is_stmt 1 view .LVU1668
1791:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 6022              		.loc 20 1791 21 is_stmt 0 view .LVU1669
 6023 0286 94ED060A 		vldr.32	s0, [r4, #24]
 6024 028a 4348     		ldr	r0, .L399+88
 6025 028c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6026              	.LVL304:
1792:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 6027              		.loc 20 1792 9 is_stmt 1 view .LVU1670
1792:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 6028              		.loc 20 1792 21 is_stmt 0 view .LVU1671
 6029 0290 94ED060A 		vldr.32	s0, [r4, #24]
 6030 0294 3A48     		ldr	r0, .L399+64
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 217


 6031 0296 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6032              	.LVL305:
1793:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 6033              		.loc 20 1793 9 is_stmt 1 view .LVU1672
1793:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 6034              		.loc 20 1793 21 is_stmt 0 view .LVU1673
 6035 029a 94ED060A 		vldr.32	s0, [r4, #24]
 6036 029e 3F48     		ldr	r0, .L399+92
 6037 02a0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6038              	.LVL306:
1794:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 6039              		.loc 20 1794 9 is_stmt 1 view .LVU1674
1794:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 6040              		.loc 20 1794 26 is_stmt 0 view .LVU1675
 6041 02a4 94ED060A 		vldr.32	s0, [r4, #24]
 6042 02a8 3648     		ldr	r0, .L399+68
 6043 02aa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6044              	.LVL307:
1795:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 6045              		.loc 20 1795 9 is_stmt 1 view .LVU1676
1795:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 6046              		.loc 20 1795 26 is_stmt 0 view .LVU1677
 6047 02ae 94ED060A 		vldr.32	s0, [r4, #24]
 6048 02b2 3B48     		ldr	r0, .L399+96
 6049 02b4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6050              	.LVL308:
1796:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 6051              		.loc 20 1796 9 is_stmt 1 view .LVU1678
1796:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 6052              		.loc 20 1796 26 is_stmt 0 view .LVU1679
 6053 02b8 94ED060A 		vldr.32	s0, [r4, #24]
 6054 02bc 3248     		ldr	r0, .L399+72
 6055 02be FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6056              	.LVL309:
1797:Veno-Echo.cpp ****     }
 6057              		.loc 20 1797 9 is_stmt 1 view .LVU1680
1797:Veno-Echo.cpp ****     }
 6058              		.loc 20 1797 26 is_stmt 0 view .LVU1681
 6059 02c2 94ED060A 		vldr.32	s0, [r4, #24]
 6060 02c6 3748     		ldr	r0, .L399+100
 6061 02c8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6062              	.LVL310:
 6063 02cc 8EE7     		b	.L365
 6064              	.L397:
1774:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 6065              		.loc 20 1774 9 is_stmt 1 view .LVU1682
1774:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 6066              		.loc 20 1774 22 is_stmt 0 view .LVU1683
 6067 02ce 3248     		ldr	r0, .L399+88
 6068 02d0 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6069              	.LVL311:
1775:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 6070              		.loc 20 1775 9 is_stmt 1 view .LVU1684
1775:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 6071              		.loc 20 1775 22 is_stmt 0 view .LVU1685
 6072 02d4 94ED040A 		vldr.32	s0, [r4, #16]
 6073 02d8 3048     		ldr	r0, .L399+92
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 218


 6074 02da FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6075              	.LVL312:
1776:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 6076              		.loc 20 1776 9 is_stmt 1 view .LVU1686
1776:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 6077              		.loc 20 1776 27 is_stmt 0 view .LVU1687
 6078 02de 94ED040A 		vldr.32	s0, [r4, #16]
 6079 02e2 2F48     		ldr	r0, .L399+96
 6080 02e4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6081              	.LVL313:
1777:Veno-Echo.cpp ****     }
 6082              		.loc 20 1777 9 is_stmt 1 view .LVU1688
1777:Veno-Echo.cpp ****     }
 6083              		.loc 20 1777 27 is_stmt 0 view .LVU1689
 6084 02e8 94ED040A 		vldr.32	s0, [r4, #16]
 6085 02ec 2D48     		ldr	r0, .L399+100
 6086 02ee FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6087              	.LVL314:
 6088 02f2 59E7     		b	.L361
 6089              	.L396:
1759:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 6090              		.loc 20 1759 9 is_stmt 1 view .LVU1690
1759:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 6091              		.loc 20 1759 22 is_stmt 0 view .LVU1691
 6092 02f4 2148     		ldr	r0, .L399+60
 6093 02f6 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6094              	.LVL315:
1760:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 6095              		.loc 20 1760 9 is_stmt 1 view .LVU1692
1760:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 6096              		.loc 20 1760 22 is_stmt 0 view .LVU1693
 6097 02fa 94ED050A 		vldr.32	s0, [r4, #20]
 6098 02fe 2048     		ldr	r0, .L399+64
 6099 0300 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6100              	.LVL316:
1761:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 6101              		.loc 20 1761 9 is_stmt 1 view .LVU1694
1761:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 6102              		.loc 20 1761 27 is_stmt 0 view .LVU1695
 6103 0304 94ED050A 		vldr.32	s0, [r4, #20]
 6104 0308 1E48     		ldr	r0, .L399+68
 6105 030a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6106              	.LVL317:
1762:Veno-Echo.cpp ****     }
 6107              		.loc 20 1762 9 is_stmt 1 view .LVU1696
1762:Veno-Echo.cpp ****     }
 6108              		.loc 20 1762 27 is_stmt 0 view .LVU1697
 6109 030e 94ED050A 		vldr.32	s0, [r4, #20]
 6110 0312 1D48     		ldr	r0, .L399+72
 6111 0314 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6112              	.LVL318:
 6113 0318 21E7     		b	.L357
 6114              	.L390:
1745:Veno-Echo.cpp ****     }
 6115              		.loc 20 1745 18 view .LVU1698
 6116 031a DFED117A 		vldr.32	s15, .L399+32
 6117 031e DCE6     		b	.L347
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 219


 6118              	.LVL319:
 6119              	.L395:
 6120              	.LBB1372:
 6121              	.LBB1340:
  74:Veno-Echo.cpp ****             //del -> Reset();
 6122              		.loc 20 74 29 view .LVU1699
 6123 0320 BCEEE77A 		vcvt.u32.f32	s14, s15
 6124              	.LBB1332:
 6125              	.LBB1333:
  72:delayline_reverse.h ****     }
 6126              		.loc 19 72 9 view .LVU1700
 6127 0324 0A4D     		ldr	r5, .L399+16
 6128              	.LBE1333:
 6129              	.LBE1332:
 6130              	.LBE1340:
 6131              	.LBE1372:
1722:Veno-Echo.cpp ****     }
 6132              		.loc 20 1722 33 view .LVU1701
 6133 0326 1968     		ldr	r1, [r3]
 6134              	.LBB1373:
 6135              	.LBB1341:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6136              		.loc 20 73 13 is_stmt 1 view .LVU1702
 6137              	.LBB1337:
 6138              	.LBB1334:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6139              		.loc 19 71 9 is_stmt 0 view .LVU1703
 6140 0328 0020     		movs	r0, #0
 6141              	.LBE1334:
 6142              	.LBE1337:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6143              		.loc 20 73 27 view .LVU1704
 6144 032a C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6145              		.loc 20 74 29 view .LVU1705
 6146 032e 17EE102A 		vmov	r2, s14	@ int
 6147              	.LBB1338:
 6148              	.LBB1335:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6149              		.loc 19 71 9 view .LVU1706
 6150 0332 0860     		str	r0, [r1]	@ float
 6151              	.LVL320:
  72:delayline_reverse.h ****     }
 6152              		.loc 19 72 9 view .LVU1707
 6153 0334 AA42     		cmp	r2, r5
 6154 0336 28BF     		it	cs
 6155 0338 2A46     		movcs	r2, r5
 6156              	.LBE1335:
 6157              	.LBE1338:
  74:Veno-Echo.cpp ****             //del -> Reset();
 6158              		.loc 20 74 13 is_stmt 1 view .LVU1708
 6159              	.LVL321:
 6160              	.LBB1339:
 6161              	.LBI1332:
  69:delayline_reverse.h ****     {
 6162              		.loc 19 69 17 view .LVU1709
 6163              	.LBB1336:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 220


  72:delayline_reverse.h ****     }
 6164              		.loc 19 72 9 is_stmt 0 view .LVU1710
 6165 033a 0A61     		str	r2, [r1, #16]
 6166              		.loc 19 73 5 view .LVU1711
 6167 033c A5E6     		b	.L338
 6168              	.L400:
 6169 033e 00BF     		.align	2
 6170              	.L399:
 6171 0340 0050C346 		.word	1187205120
 6172 0344 00000000 		.word	.LANCHOR2
 6173 0348 00606A48 		.word	1214930944
 6174 034c 0AD7A33B 		.word	1000593162
 6175 0350 BF270900 		.word	599999
 6176 0354 00000000 		.word	.LANCHOR3
 6177 0358 00000000 		.word	.LANCHOR25
 6178 035c 0000FA43 		.word	1140457472
 6179 0360 00000000 		.word	0
 6180 0364 CDCCCC3D 		.word	1036831949
 6181 0368 00000000 		.word	.LANCHOR67
 6182 036c 00000000 		.word	.LANCHOR75
 6183 0370 9A99A140 		.word	1084332442
 6184 0374 0080BB44 		.word	1153138688
 6185 0378 00803B46 		.word	1178304512
 6186 037c 00000000 		.word	.LANCHOR46
 6187 0380 00000000 		.word	.LANCHOR47
 6188 0384 00000000 		.word	.LANCHOR48
 6189 0388 00000000 		.word	.LANCHOR49
 6190 038c 0000C842 		.word	1120403456
 6191 0390 00004844 		.word	1145569280
 6192 0394 00004843 		.word	1128792064
 6193 0398 00000000 		.word	.LANCHOR34
 6194 039c 00000000 		.word	.LANCHOR35
 6195 03a0 00000000 		.word	.LANCHOR36
 6196 03a4 00000000 		.word	.LANCHOR37
 6197 03a8 6666E63E 		.word	1055286886
 6198 03ac 00000000 		.word	.LANCHOR82
 6199 03b0 CDCC0C3F 		.word	1057803469
 6200 03b4 00650148 		.word	1208050944
 6201 03b8 94050200 		.word	132500
 6202              	.LBE1336:
 6203              	.LBE1339:
 6204              	.LBE1341:
 6205              	.LBE1373:
 6206              		.cfi_endproc
 6207              	.LFE4333:
 6209              		.section	.text.startup.main,"ax",%progbits
 6210              		.align	1
 6211              		.p2align 2,,3
 6212              		.global	main
 6213              		.syntax unified
 6214              		.thumb
 6215              		.thumb_func
 6216              		.fpu fpv5-d16
 6218              	main:
 6219              	.LFB4311:
 616:Veno-Echo.cpp ****     // initialize hardware.
 6220              		.loc 20 616 1 is_stmt 1 view -0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 221


 6221              		.cfi_startproc
 6222              		@ Volatile: function does not return.
 6223              		@ args = 0, pretend = 0, frame = 240
 6224              		@ frame_needed = 0, uses_anonymous_args = 0
 618:Veno-Echo.cpp ****     hw.Init();
 6225              		.loc 20 618 5 view .LVU1713
 616:Veno-Echo.cpp ****     // initialize hardware.
 6226              		.loc 20 616 1 is_stmt 0 view .LVU1714
 6227 0000 80B5     		push	{r7, lr}
 6228              		.cfi_def_cfa_offset 8
 6229              		.cfi_offset 7, -8
 6230              		.cfi_offset 14, -4
 618:Veno-Echo.cpp ****     hw.Init();
 6231              		.loc 20 618 17 view .LVU1715
 6232 0002 D048     		ldr	r0, .L404
 616:Veno-Echo.cpp ****     // initialize hardware.
 6233              		.loc 20 616 1 view .LVU1716
 6234 0004 BEB0     		sub	sp, sp, #248
 6235              		.cfi_def_cfa_offset 256
 618:Veno-Echo.cpp ****     hw.Init();
 6236              		.loc 20 618 17 view .LVU1717
 6237 0006 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 6238              	.LVL322:
 619:Veno-Echo.cpp ****     
 6239              		.loc 20 619 5 is_stmt 1 view .LVU1718
 619:Veno-Echo.cpp ****     
 6240              		.loc 20 619 12 is_stmt 0 view .LVU1719
 6241 000a 0021     		movs	r1, #0
 6242 000c CD48     		ldr	r0, .L404
 623:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6243              		.loc 20 623 16 view .LVU1720
 6244 000e B2EE0E8A 		vmov.f32	s16, #1.5e+1
 619:Veno-Echo.cpp ****     
 6245              		.loc 20 619 12 view .LVU1721
 6246 0012 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 6247              	.LVL323:
 623:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6248              		.loc 20 623 5 is_stmt 1 view .LVU1722
 623:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6249              		.loc 20 623 16 is_stmt 0 view .LVU1723
 6250 0016 1D20     		movs	r0, #29
 6251 0018 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6252              	.LVL324:
 6253 001c 0346     		mov	r3, r0	@ movhi
 6254 001e 0620     		movs	r0, #6
 630:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6255              		.loc 20 630 22 view .LVU1724
 6256 0020 0227     		movs	r7, #2
 623:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6257              		.loc 20 623 16 view .LVU1725
 6258 0022 ADF80830 		strh	r3, [sp, #8]	@ movhi
 6259 0026 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6260              	.LVL325:
 6261 002a 0346     		mov	r3, r0	@ movhi
 623:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6262              		.loc 20 623 80 view .LVU1726
 6263 002c C548     		ldr	r0, .L404
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 222


 6264              	.LBB1374:
 6265              	.LBB1375:
  61:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
  62:../DaisySP/Source/Dynamics/crossfade.h ****     Expected input: See [Curve Options](##curve-options)
  63:../DaisySP/Source/Dynamics/crossfade.h ****     */
  64:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetCurve(uint8_t curve) { curve_ = curve; }
 6266              		.loc 10 64 50 view .LVU1727
 6267 002e 0126     		movs	r6, #1
 6268              	.LBE1375:
 6269              	.LBE1374:
 6270              	.LBB1378:
 6271              	.LBB1379:
  40:../DaisySP/Source/Control/adsr.h ****     /** Initializes the Adsr module.
  41:../DaisySP/Source/Control/adsr.h ****         \param sample_rate - The sample rate of the audio engine being run. 
  42:../DaisySP/Source/Control/adsr.h ****     */
  43:../DaisySP/Source/Control/adsr.h ****     void Init(float sample_rate);
  44:../DaisySP/Source/Control/adsr.h **** 
  45:../DaisySP/Source/Control/adsr.h **** 
  46:../DaisySP/Source/Control/adsr.h ****     /** Processes one sample through the filter and returns one sample.
  47:../DaisySP/Source/Control/adsr.h ****         \param gate - trigger the envelope, hold it to sustain 
  48:../DaisySP/Source/Control/adsr.h ****     */
  49:../DaisySP/Source/Control/adsr.h ****     float Process(bool gate);
  50:../DaisySP/Source/Control/adsr.h **** 
  51:../DaisySP/Source/Control/adsr.h ****     /** Sets time
  52:../DaisySP/Source/Control/adsr.h ****         Set time per segment in seconds
  53:../DaisySP/Source/Control/adsr.h ****     */
  54:../DaisySP/Source/Control/adsr.h ****     inline void SetTime(int seg, float time) { seg_time_[seg] = time; }
  55:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
  56:../DaisySP/Source/Control/adsr.h ****         \param sus_level - sets sustain level
  57:../DaisySP/Source/Control/adsr.h ****     */
  58:../DaisySP/Source/Control/adsr.h ****     inline void SetSustainLevel(float sus_level) { sus_ = sus_level; }
 6272              		.loc 7 58 57 view .LVU1728
 6273 0030 F7EE008A 		vmov.f32	s17, #1.0e+0
 6274              	.LBE1379:
 6275              	.LBE1378:
 623:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6276              		.loc 20 623 16 view .LVU1729
 6277 0034 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 623:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6278              		.loc 20 623 80 view .LVU1730
 6279 0038 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6280              	.LVL326:
 623:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6281              		.loc 20 623 16 view .LVU1731
 6282 003c 039A     		ldr	r2, [sp, #12]
 6283 003e 80EE080A 		vdiv.f32	s0, s0, s16
 6284 0042 0299     		ldr	r1, [sp, #8]
 6285 0044 0123     		movs	r3, #1
 6286 0046 C048     		ldr	r0, .L404+4
 6287              	.LBB1382:
 6288              	.LBB1383:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6289              		.loc 7 54 63 view .LVU1732
 6290 0048 4FF07C55 		mov	r5, #1056964608
 6291              	.LBE1383:
 6292              	.LBE1382:
 623:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 223


 6293              		.loc 20 623 16 view .LVU1733
 6294 004c FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6295              	.LVL327:
 624:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6296              		.loc 20 624 5 is_stmt 1 view .LVU1734
 624:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6297              		.loc 20 624 16 is_stmt 0 view .LVU1735
 6298 0050 1E20     		movs	r0, #30
 6299 0052 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6300              	.LVL328:
 6301 0056 0346     		mov	r3, r0	@ movhi
 6302 0058 0720     		movs	r0, #7
 637:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6303              		.loc 20 637 20 view .LVU1736
 6304 005a DFF85483 		ldr	r8, .L404+108
 624:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6305              		.loc 20 624 16 view .LVU1737
 6306 005e ADF81030 		strh	r3, [sp, #16]	@ movhi
 6307 0062 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6308              	.LVL329:
 6309 0066 0346     		mov	r3, r0	@ movhi
 624:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6310              		.loc 20 624 80 view .LVU1738
 6311 0068 B648     		ldr	r0, .L404
 6312              	.LBB1386:
 6313              	.LBB1387:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6314              		.loc 7 54 63 view .LVU1739
 6315 006a B84C     		ldr	r4, .L404+8
 6316              	.LBE1387:
 6317              	.LBE1386:
 624:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6318              		.loc 20 624 16 view .LVU1740
 6319 006c ADF81430 		strh	r3, [sp, #20]	@ movhi
 624:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6320              		.loc 20 624 80 view .LVU1741
 6321 0070 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6322              	.LVL330:
 624:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6323              		.loc 20 624 16 view .LVU1742
 6324 0074 059A     		ldr	r2, [sp, #20]
 6325 0076 80EE080A 		vdiv.f32	s0, s0, s16
 6326 007a 0499     		ldr	r1, [sp, #16]
 6327 007c 0123     		movs	r3, #1
 6328 007e B448     		ldr	r0, .L404+12
 6329 0080 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6330              	.LVL331:
 625:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6331              		.loc 20 625 5 is_stmt 1 view .LVU1743
 625:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6332              		.loc 20 625 18 is_stmt 0 view .LVU1744
 6333 0084 0A20     		movs	r0, #10
 6334 0086 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6335              	.LVL332:
 6336 008a 0346     		mov	r3, r0	@ movhi
 6337 008c 3846     		mov	r0, r7
 6338 008e ADF81830 		strh	r3, [sp, #24]	@ movhi
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 224


 6339 0092 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6340              	.LVL333:
 6341 0096 0346     		mov	r3, r0	@ movhi
 625:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6342              		.loc 20 625 85 view .LVU1745
 6343 0098 AA48     		ldr	r0, .L404
 625:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6344              		.loc 20 625 18 view .LVU1746
 6345 009a ADF81C30 		strh	r3, [sp, #28]	@ movhi
 625:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6346              		.loc 20 625 85 view .LVU1747
 6347 009e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6348              	.LVL334:
 625:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6349              		.loc 20 625 18 view .LVU1748
 6350 00a2 079A     		ldr	r2, [sp, #28]
 6351 00a4 80EE080A 		vdiv.f32	s0, s0, s16
 6352 00a8 0699     		ldr	r1, [sp, #24]
 6353 00aa 0023     		movs	r3, #0
 6354 00ac A948     		ldr	r0, .L404+16
 6355 00ae FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6356              	.LVL335:
 626:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6357              		.loc 20 626 5 is_stmt 1 view .LVU1749
 626:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6358              		.loc 20 626 18 is_stmt 0 view .LVU1750
 6359 00b2 0B20     		movs	r0, #11
 6360 00b4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6361              	.LVL336:
 6362 00b8 0346     		mov	r3, r0	@ movhi
 6363 00ba 0320     		movs	r0, #3
 6364 00bc ADF82030 		strh	r3, [sp, #32]	@ movhi
 6365 00c0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6366              	.LVL337:
 6367 00c4 0346     		mov	r3, r0	@ movhi
 626:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6368              		.loc 20 626 85 view .LVU1751
 6369 00c6 9F48     		ldr	r0, .L404
 626:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6370              		.loc 20 626 18 view .LVU1752
 6371 00c8 ADF82430 		strh	r3, [sp, #36]	@ movhi
 626:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6372              		.loc 20 626 85 view .LVU1753
 6373 00cc FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6374              	.LVL338:
 626:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6375              		.loc 20 626 18 view .LVU1754
 6376 00d0 099A     		ldr	r2, [sp, #36]
 6377 00d2 80EE080A 		vdiv.f32	s0, s0, s16
 6378 00d6 0899     		ldr	r1, [sp, #32]
 6379 00d8 0023     		movs	r3, #0
 6380 00da 9F48     		ldr	r0, .L404+20
 6381 00dc FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6382              	.LVL339:
 627:Veno-Echo.cpp **** 
 6383              		.loc 20 627 5 is_stmt 1 view .LVU1755
 627:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 225


 6384              		.loc 20 627 20 is_stmt 0 view .LVU1756
 6385 00e0 1820     		movs	r0, #24
 6386 00e2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6387              	.LVL340:
 6388 00e6 0346     		mov	r3, r0	@ movhi
 6389 00e8 0420     		movs	r0, #4
 6390 00ea ADF82830 		strh	r3, [sp, #40]	@ movhi
 6391 00ee FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6392              	.LVL341:
 6393 00f2 0346     		mov	r3, r0	@ movhi
 627:Veno-Echo.cpp **** 
 6394              		.loc 20 627 93 view .LVU1757
 6395 00f4 9348     		ldr	r0, .L404
 627:Veno-Echo.cpp **** 
 6396              		.loc 20 627 20 view .LVU1758
 6397 00f6 ADF82C30 		strh	r3, [sp, #44]	@ movhi
 627:Veno-Echo.cpp **** 
 6398              		.loc 20 627 93 view .LVU1759
 6399 00fa FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6400              	.LVL342:
 627:Veno-Echo.cpp **** 
 6401              		.loc 20 627 20 view .LVU1760
 6402 00fe 3B46     		mov	r3, r7
 6403 0100 80EE080A 		vdiv.f32	s0, s0, s16
 6404 0104 0B9A     		ldr	r2, [sp, #44]
 6405 0106 0A99     		ldr	r1, [sp, #40]
 6406 0108 9448     		ldr	r0, .L404+24
 6407 010a FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6408              	.LVL343:
 630:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6409              		.loc 20 630 5 is_stmt 1 view .LVU1761
 630:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6410              		.loc 20 630 22 is_stmt 0 view .LVU1762
 6411 010e 0020     		movs	r0, #0
 6412 0110 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6413              	.LVL344:
 6414 0114 0346     		mov	r3, r0	@ movhi
 630:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6415              		.loc 20 630 55 view .LVU1763
 6416 0116 8B48     		ldr	r0, .L404
 630:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6417              		.loc 20 630 22 view .LVU1764
 6418 0118 ADF83030 		strh	r3, [sp, #48]	@ movhi
 630:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6419              		.loc 20 630 55 view .LVU1765
 6420 011c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6421              	.LVL345:
 630:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6422              		.loc 20 630 22 view .LVU1766
 6423 0120 0123     		movs	r3, #1
 6424 0122 80EE080A 		vdiv.f32	s0, s0, s16
 6425 0126 0C99     		ldr	r1, [sp, #48]
 6426 0128 1A46     		mov	r2, r3
 6427 012a 8D48     		ldr	r0, .L404+28
 6428 012c 0097     		str	r7, [sp]
 6429 012e FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6430              	.LVL346:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 226


 631:Veno-Echo.cpp **** 
 6431              		.loc 20 631 5 is_stmt 1 view .LVU1767
 631:Veno-Echo.cpp **** 
 6432              		.loc 20 631 22 is_stmt 0 view .LVU1768
 6433 0132 0120     		movs	r0, #1
 6434 0134 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6435              	.LVL347:
 6436 0138 0346     		mov	r3, r0	@ movhi
 631:Veno-Echo.cpp **** 
 6437              		.loc 20 631 55 view .LVU1769
 6438 013a 8248     		ldr	r0, .L404
 631:Veno-Echo.cpp **** 
 6439              		.loc 20 631 22 view .LVU1770
 6440 013c ADF83430 		strh	r3, [sp, #52]	@ movhi
 631:Veno-Echo.cpp **** 
 6441              		.loc 20 631 55 view .LVU1771
 6442 0140 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6443              	.LVL348:
 631:Veno-Echo.cpp **** 
 6444              		.loc 20 631 22 view .LVU1772
 6445 0144 3246     		mov	r2, r6
 6446 0146 80EE080A 		vdiv.f32	s0, s0, s16
 6447 014a 0D99     		ldr	r1, [sp, #52]
 6448 014c 3346     		mov	r3, r6
 6449 014e 8548     		ldr	r0, .L404+32
 6450 0150 0097     		str	r7, [sp]
 6451 0152 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6452              	.LVL349:
 634:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6453              		.loc 20 634 5 is_stmt 1 view .LVU1773
 634:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6454              		.loc 20 634 14 is_stmt 0 view .LVU1774
 6455 0156 1720     		movs	r0, #23
 6456 0158 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6457              	.LVL350:
 6458 015c 0346     		mov	r3, r0	@ movhi
 634:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6459              		.loc 20 634 48 view .LVU1775
 6460 015e 7948     		ldr	r0, .L404
 634:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6461              		.loc 20 634 14 view .LVU1776
 6462 0160 ADF83830 		strh	r3, [sp, #56]	@ movhi
 634:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6463              		.loc 20 634 48 view .LVU1777
 6464 0164 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6465              	.LVL351:
 634:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6466              		.loc 20 634 14 view .LVU1778
 6467 0168 0E99     		ldr	r1, [sp, #56]
 6468 016a 80EE080A 		vdiv.f32	s0, s0, s16
 6469 016e 7E48     		ldr	r0, .L404+36
 6470 0170 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 6471              	.LVL352:
 635:Veno-Echo.cpp ****     
 6472              		.loc 20 635 5 is_stmt 1 view .LVU1779
 635:Veno-Echo.cpp ****     
 6473              		.loc 20 635 17 is_stmt 0 view .LVU1780
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 227


 6474 0174 0520     		movs	r0, #5
 6475 0176 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6476              	.LVL353:
 6477 017a 0346     		mov	r3, r0	@ movhi
 6478 017c 7148     		ldr	r0, .L404
 6479 017e ADF83C30 		strh	r3, [sp, #60]	@ movhi
 6480 0182 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6481              	.LVL354:
 6482 0186 0F99     		ldr	r1, [sp, #60]
 6483 0188 7848     		ldr	r0, .L404+40
 6484 018a FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 6485              	.LVL355:
 637:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6486              		.loc 20 637 5 is_stmt 1 view .LVU1781
 637:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6487              		.loc 20 637 20 is_stmt 0 view .LVU1782
 6488 018e 6D48     		ldr	r0, .L404
 6489 0190 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6490              	.LVL356:
 643:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6491              		.loc 20 643 20 view .LVU1783
 6492 0194 764F     		ldr	r7, .L404+44
 637:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6493              		.loc 20 637 20 view .LVU1784
 6494 0196 4046     		mov	r0, r8
 674:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 6495              		.loc 20 674 17 view .LVU1785
 6496 0198 9FED768A 		vldr.32	s16, .L404+48
 637:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6497              		.loc 20 637 20 view .LVU1786
 6498 019c FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6499              	.LVL357:
 638:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 6500              		.loc 20 638 5 is_stmt 1 view .LVU1787
 6501              	.LBB1390:
 6502              	.LBI1382:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6503              		.loc 7 54 17 view .LVU1788
 6504              	.LBB1384:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6505              		.loc 7 54 48 view .LVU1789
 6506              	.LBE1384:
 6507              	.LBE1390:
 643:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6508              		.loc 20 643 20 is_stmt 0 view .LVU1790
 6509 01a0 6848     		ldr	r0, .L404
 6510              	.LBB1391:
 6511              	.LBB1380:
 6512              		.loc 7 58 57 view .LVU1791
 6513 01a2 C8ED008A 		vstr.32	s17, [r8]
 6514              	.LBE1380:
 6515              	.LBE1391:
 6516              	.LBB1392:
 6517              	.LBB1385:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6518              		.loc 7 54 63 view .LVU1792
 6519 01a6 C8F80850 		str	r5, [r8, #8]	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 228


 6520              	.LVL358:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6521              		.loc 7 54 63 view .LVU1793
 6522              	.LBE1385:
 6523              	.LBE1392:
 639:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 6524              		.loc 20 639 5 is_stmt 1 view .LVU1794
 6525              	.LBB1393:
 6526              	.LBI1386:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6527              		.loc 7 54 17 view .LVU1795
 6528              	.LBB1388:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6529              		.loc 7 54 48 view .LVU1796
 6530              	.LBE1388:
 6531              	.LBE1393:
 6532              	.LBB1394:
 6533              	.LBB1395:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6534              		.loc 7 54 63 is_stmt 0 view .LVU1797
 6535 01aa C8F81450 		str	r5, [r8, #20]	@ float
 6536              	.LBE1395:
 6537              	.LBE1394:
 6538              	.LBB1397:
 6539              	.LBB1389:
 6540 01ae C8F80C40 		str	r4, [r8, #12]	@ float
 6541              	.LVL359:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6542              		.loc 7 54 63 view .LVU1798
 6543              	.LBE1389:
 6544              	.LBE1397:
 640:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 6545              		.loc 20 640 5 is_stmt 1 view .LVU1799
 6546              	.LBB1398:
 6547              	.LBI1394:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6548              		.loc 7 54 17 view .LVU1800
 6549              	.LBB1396:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6550              		.loc 7 54 48 view .LVU1801
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6551              		.loc 7 54 48 is_stmt 0 view .LVU1802
 6552              	.LBE1396:
 6553              	.LBE1398:
 641:Veno-Echo.cpp **** 
 6554              		.loc 20 641 5 is_stmt 1 view .LVU1803
 6555              	.LBB1399:
 6556              	.LBI1378:
 6557              		.loc 7 58 17 view .LVU1804
 6558              	.LBB1381:
 6559              		.loc 7 58 52 view .LVU1805
 6560              		.loc 7 58 52 is_stmt 0 view .LVU1806
 6561              	.LBE1381:
 6562              	.LBE1399:
 643:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6563              		.loc 20 643 5 is_stmt 1 view .LVU1807
 643:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 229


 6564              		.loc 20 643 20 is_stmt 0 view .LVU1808
 6565 01b2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6566              	.LVL360:
 649:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6567              		.loc 20 649 17 view .LVU1809
 6568 01b6 DFF8FC81 		ldr	r8, .L404+112
 643:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6569              		.loc 20 643 20 view .LVU1810
 6570 01ba 3846     		mov	r0, r7
 6571 01bc FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6572              	.LVL361:
 644:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 6573              		.loc 20 644 5 is_stmt 1 view .LVU1811
 6574              	.LBB1400:
 6575              	.LBI1400:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6576              		.loc 7 54 17 view .LVU1812
 6577              	.LBB1401:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6578              		.loc 7 54 48 view .LVU1813
 6579              	.LBE1401:
 6580              	.LBE1400:
 649:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6581              		.loc 20 649 17 is_stmt 0 view .LVU1814
 6582 01c0 6048     		ldr	r0, .L404
 6583              	.LBB1403:
 6584              	.LBB1404:
 6585              		.loc 7 58 57 view .LVU1815
 6586 01c2 C7ED008A 		vstr.32	s17, [r7]
 6587              	.LBE1404:
 6588              	.LBE1403:
 6589              	.LBB1406:
 6590              	.LBB1402:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6591              		.loc 7 54 63 view .LVU1816
 6592 01c6 BD60     		str	r5, [r7, #8]	@ float
 6593              	.LVL362:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6594              		.loc 7 54 63 view .LVU1817
 6595              	.LBE1402:
 6596              	.LBE1406:
 645:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 6597              		.loc 20 645 5 is_stmt 1 view .LVU1818
 6598              	.LBB1407:
 6599              	.LBI1407:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6600              		.loc 7 54 17 view .LVU1819
 6601              	.LBB1408:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6602              		.loc 7 54 48 view .LVU1820
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6603              		.loc 7 54 63 is_stmt 0 view .LVU1821
 6604 01c8 FC60     		str	r4, [r7, #12]	@ float
 6605              	.LVL363:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6606              		.loc 7 54 63 view .LVU1822
 6607              	.LBE1408:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 230


 6608              	.LBE1407:
 646:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 6609              		.loc 20 646 5 is_stmt 1 view .LVU1823
 6610              	.LBB1409:
 6611              	.LBI1409:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6612              		.loc 7 54 17 view .LVU1824
 6613              	.LBB1410:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6614              		.loc 7 54 48 view .LVU1825
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6615              		.loc 7 54 63 is_stmt 0 view .LVU1826
 6616 01ca 7D61     		str	r5, [r7, #20]	@ float
 6617              	.LVL364:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6618              		.loc 7 54 63 view .LVU1827
 6619              	.LBE1410:
 6620              	.LBE1409:
 647:Veno-Echo.cpp **** 
 6621              		.loc 20 647 5 is_stmt 1 view .LVU1828
 6622              	.LBB1411:
 6623              	.LBI1403:
 6624              		.loc 7 58 17 view .LVU1829
 6625              	.LBB1405:
 6626              		.loc 7 58 52 view .LVU1830
 6627              		.loc 7 58 52 is_stmt 0 view .LVU1831
 6628              	.LBE1405:
 6629              	.LBE1411:
 649:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6630              		.loc 20 649 5 is_stmt 1 view .LVU1832
 649:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6631              		.loc 20 649 17 is_stmt 0 view .LVU1833
 6632 01cc FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6633              	.LVL365:
 655:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6634              		.loc 20 655 17 view .LVU1834
 6635 01d0 694F     		ldr	r7, .L404+52
 649:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6636              		.loc 20 649 17 view .LVU1835
 6637 01d2 4046     		mov	r0, r8
 6638 01d4 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6639              	.LVL366:
 650:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 6640              		.loc 20 650 5 is_stmt 1 view .LVU1836
 6641              	.LBB1412:
 6642              	.LBI1412:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6643              		.loc 7 54 17 view .LVU1837
 6644              	.LBB1413:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6645              		.loc 7 54 48 view .LVU1838
 6646              	.LBE1413:
 6647              	.LBE1412:
 655:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6648              		.loc 20 655 17 is_stmt 0 view .LVU1839
 6649 01d8 5A48     		ldr	r0, .L404
 6650              	.LBB1415:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 231


 6651              	.LBB1416:
 6652              		.loc 7 58 57 view .LVU1840
 6653 01da C8ED008A 		vstr.32	s17, [r8]
 6654              	.LBE1416:
 6655              	.LBE1415:
 6656              	.LBB1418:
 6657              	.LBB1414:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6658              		.loc 7 54 63 view .LVU1841
 6659 01de C8F80840 		str	r4, [r8, #8]	@ float
 6660              	.LVL367:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6661              		.loc 7 54 63 view .LVU1842
 6662              	.LBE1414:
 6663              	.LBE1418:
 651:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 6664              		.loc 20 651 5 is_stmt 1 view .LVU1843
 6665              	.LBB1419:
 6666              	.LBI1419:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6667              		.loc 7 54 17 view .LVU1844
 6668              	.LBB1420:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6669              		.loc 7 54 48 view .LVU1845
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6670              		.loc 7 54 63 is_stmt 0 view .LVU1846
 6671 01e2 C8F80C40 		str	r4, [r8, #12]	@ float
 6672              	.LVL368:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6673              		.loc 7 54 63 view .LVU1847
 6674              	.LBE1420:
 6675              	.LBE1419:
 652:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 6676              		.loc 20 652 5 is_stmt 1 view .LVU1848
 6677              	.LBB1421:
 6678              	.LBI1421:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6679              		.loc 7 54 17 view .LVU1849
 6680              	.LBB1422:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6681              		.loc 7 54 48 view .LVU1850
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6682              		.loc 7 54 63 is_stmt 0 view .LVU1851
 6683 01e6 C8F81440 		str	r4, [r8, #20]	@ float
 6684              	.LVL369:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6685              		.loc 7 54 63 view .LVU1852
 6686              	.LBE1422:
 6687              	.LBE1421:
 653:Veno-Echo.cpp **** 
 6688              		.loc 20 653 5 is_stmt 1 view .LVU1853
 6689              	.LBB1423:
 6690              	.LBI1415:
 6691              		.loc 7 58 17 view .LVU1854
 6692              	.LBB1417:
 6693              		.loc 7 58 52 view .LVU1855
 6694              		.loc 7 58 52 is_stmt 0 view .LVU1856
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 232


 6695              	.LBE1417:
 6696              	.LBE1423:
 655:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6697              		.loc 20 655 5 is_stmt 1 view .LVU1857
 655:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6698              		.loc 20 655 17 is_stmt 0 view .LVU1858
 6699 01ea FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6700              	.LVL370:
 6701 01ee 3846     		mov	r0, r7
 6702 01f0 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6703              	.LVL371:
 656:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 6704              		.loc 20 656 5 is_stmt 1 view .LVU1859
 6705              	.LBB1424:
 6706              	.LBI1424:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6707              		.loc 7 54 17 view .LVU1860
 6708              	.LBB1425:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6709              		.loc 7 54 48 view .LVU1861
 6710              	.LBE1425:
 6711              	.LBE1424:
 6712              	.LBB1427:
 6713              	.LBB1428:
 6714              	.LBB1429:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 6715              		.loc 10 45 16 is_stmt 0 view .LVU1862
 6716 01f4 6149     		ldr	r1, .L404+56
 6717              	.LBE1429:
 6718              	.LBE1428:
 6719              	.LBE1427:
 6720              	.LBB1434:
 6721              	.LBB1435:
 6722              	.LBB1436:
 6723 01f6 624A     		ldr	r2, .L404+60
 6724              	.LBE1436:
 6725              	.LBE1435:
 6726              	.LBE1434:
 6727              	.LBB1441:
 6728              	.LBB1442:
 6729              	.LBB1443:
 6730 01f8 624B     		ldr	r3, .L404+64
 6731              	.LBE1443:
 6732              	.LBE1442:
 6733              	.LBE1441:
 6734              	.LBB1448:
 6735              	.LBB1432:
 6736              	.LBB1430:
 6737 01fa 0D60     		str	r5, [r1]	@ float
 6738              	.LBE1430:
 6739              	.LBE1432:
 6740              	.LBE1448:
 6741              	.LBB1449:
 6742              	.LBB1439:
 6743              	.LBB1437:
 6744 01fc 1560     		str	r5, [r2]	@ float
 6745              	.LBE1437:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 233


 6746              	.LBE1439:
 6747              	.LBE1449:
 6748              	.LBB1450:
 6749              	.LBB1446:
 6750              	.LBB1444:
 6751 01fe 1D60     		str	r5, [r3]	@ float
 6752              	.LBE1444:
 6753              	.LBE1446:
 6754              	.LBE1450:
 6755              	.LBB1451:
 6756              	.LBB1376:
 6757              		.loc 10 64 50 view .LVU1863
 6758 0200 0E71     		strb	r6, [r1, #4]
 6759              	.LBE1376:
 6760              	.LBE1451:
 6761              	.LBB1452:
 6762              	.LBB1453:
 6763 0202 1671     		strb	r6, [r2, #4]
 6764              	.LBE1453:
 6765              	.LBE1452:
 6766              	.LBB1455:
 6767              	.LBB1456:
 6768 0204 1E71     		strb	r6, [r3, #4]
 6769              	.LBE1456:
 6770              	.LBE1455:
 670:Veno-Echo.cpp **** 
 6771              		.loc 20 670 15 view .LVU1864
 6772 0206 4F48     		ldr	r0, .L404
 6773              	.LBB1458:
 6774              	.LBB1459:
 6775              		.loc 7 58 57 view .LVU1865
 6776 0208 C7ED008A 		vstr.32	s17, [r7]
 6777              	.LBE1459:
 6778              	.LBE1458:
 6779              	.LBB1461:
 6780              	.LBB1426:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6781              		.loc 7 54 63 view .LVU1866
 6782 020c BC60     		str	r4, [r7, #8]	@ float
 6783              	.LVL372:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6784              		.loc 7 54 63 view .LVU1867
 6785              	.LBE1426:
 6786              	.LBE1461:
 657:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 6787              		.loc 20 657 5 is_stmt 1 view .LVU1868
 6788              	.LBB1462:
 6789              	.LBI1462:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6790              		.loc 7 54 17 view .LVU1869
 6791              	.LBB1463:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6792              		.loc 7 54 48 view .LVU1870
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6793              		.loc 7 54 63 is_stmt 0 view .LVU1871
 6794 020e FC60     		str	r4, [r7, #12]	@ float
 6795              	.LVL373:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 234


  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6796              		.loc 7 54 63 view .LVU1872
 6797              	.LBE1463:
 6798              	.LBE1462:
 658:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 6799              		.loc 20 658 5 is_stmt 1 view .LVU1873
 6800              	.LBB1464:
 6801              	.LBI1464:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6802              		.loc 7 54 17 view .LVU1874
 6803              	.LBB1465:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6804              		.loc 7 54 48 view .LVU1875
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6805              		.loc 7 54 63 is_stmt 0 view .LVU1876
 6806 0210 7C61     		str	r4, [r7, #20]	@ float
 6807              	.LVL374:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6808              		.loc 7 54 63 view .LVU1877
 6809              	.LBE1465:
 6810              	.LBE1464:
 659:Veno-Echo.cpp **** 
 6811              		.loc 20 659 5 is_stmt 1 view .LVU1878
 6812              	.LBB1466:
 6813              	.LBI1458:
 6814              		.loc 7 58 17 view .LVU1879
 6815              	.LBB1460:
 6816              		.loc 7 58 52 view .LVU1880
 6817              		.loc 7 58 52 is_stmt 0 view .LVU1881
 6818              	.LBE1460:
 6819              	.LBE1466:
 662:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 6820              		.loc 20 662 5 is_stmt 1 view .LVU1882
 6821              	.LBB1467:
 6822              	.LBI1427:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6823              		.loc 10 51 17 view .LVU1883
 6824              	.LBE1467:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6825              		.loc 10 51 26 view .LVU1884
 6826              	.LBB1468:
 6827              	.LBB1433:
 6828              	.LBI1428:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 6829              		.loc 10 43 17 view .LVU1885
 6830              	.LBB1431:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 6831              		.loc 10 45 9 view .LVU1886
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6832              		.loc 10 46 9 view .LVU1887
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6833              		.loc 10 46 9 is_stmt 0 view .LVU1888
 6834              	.LBE1431:
 6835              	.LBE1433:
 6836              	.LBE1468:
 663:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 6837              		.loc 20 663 5 is_stmt 1 view .LVU1889
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 235


 6838              	.LBB1469:
 6839              	.LBI1374:
 6840              		.loc 10 64 17 view .LVU1890
 6841              	.LBB1377:
 6842              		.loc 10 64 43 view .LVU1891
 6843              		.loc 10 64 43 is_stmt 0 view .LVU1892
 6844              	.LBE1377:
 6845              	.LBE1469:
 664:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 6846              		.loc 20 664 5 is_stmt 1 view .LVU1893
 6847              	.LBB1470:
 6848              	.LBI1434:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6849              		.loc 10 51 17 view .LVU1894
 6850              	.LBE1470:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6851              		.loc 10 51 26 view .LVU1895
 6852              	.LBB1471:
 6853              	.LBB1440:
 6854              	.LBI1435:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 6855              		.loc 10 43 17 view .LVU1896
 6856              	.LBB1438:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 6857              		.loc 10 45 9 view .LVU1897
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6858              		.loc 10 46 9 view .LVU1898
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6859              		.loc 10 46 9 is_stmt 0 view .LVU1899
 6860              	.LBE1438:
 6861              	.LBE1440:
 6862              	.LBE1471:
 665:Veno-Echo.cpp **** 
 6863              		.loc 20 665 5 is_stmt 1 view .LVU1900
 6864              	.LBB1472:
 6865              	.LBI1452:
 6866              		.loc 10 64 17 view .LVU1901
 6867              	.LBB1454:
 6868              		.loc 10 64 43 view .LVU1902
 6869              		.loc 10 64 43 is_stmt 0 view .LVU1903
 6870              	.LBE1454:
 6871              	.LBE1472:
 667:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 6872              		.loc 20 667 5 is_stmt 1 view .LVU1904
 6873              	.LBB1473:
 6874              	.LBI1441:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6875              		.loc 10 51 17 view .LVU1905
 6876              	.LBE1473:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6877              		.loc 10 51 26 view .LVU1906
 6878              	.LBB1474:
 6879              	.LBB1447:
 6880              	.LBI1442:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 6881              		.loc 10 43 17 view .LVU1907
 6882              	.LBB1445:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 236


  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 6883              		.loc 10 45 9 view .LVU1908
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6884              		.loc 10 46 9 view .LVU1909
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6885              		.loc 10 46 9 is_stmt 0 view .LVU1910
 6886              	.LBE1445:
 6887              	.LBE1447:
 6888              	.LBE1474:
 668:Veno-Echo.cpp **** 
 6889              		.loc 20 668 5 is_stmt 1 view .LVU1911
 6890              	.LBB1475:
 6891              	.LBI1455:
 6892              		.loc 10 64 17 view .LVU1912
 6893              	.LBB1457:
 6894              		.loc 10 64 43 view .LVU1913
 6895              		.loc 10 64 43 is_stmt 0 view .LVU1914
 6896              	.LBE1457:
 6897              	.LBE1475:
 670:Veno-Echo.cpp **** 
 6898              		.loc 20 670 5 is_stmt 1 view .LVU1915
 670:Veno-Echo.cpp **** 
 6899              		.loc 20 670 15 is_stmt 0 view .LVU1916
 6900 0212 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6901              	.LVL375:
 6902 0216 FFF7FEFF 		bl	_Z10InitDelaysf
 6903              	.LVL376:
 673:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 6904              		.loc 20 673 5 is_stmt 1 view .LVU1917
 673:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 6905              		.loc 20 673 15 is_stmt 0 view .LVU1918
 6906 021a 4A48     		ldr	r0, .L404
 6907 021c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6908              	.LVL377:
 6909 0220 5948     		ldr	r0, .L404+68
 6910 0222 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6911              	.LVL378:
 674:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 6912              		.loc 20 674 5 is_stmt 1 view .LVU1919
 674:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 6913              		.loc 20 674 17 is_stmt 0 view .LVU1920
 6914 0226 B0EE480A 		vmov.f32	s0, s16
 6915 022a 5748     		ldr	r0, .L404+68
 6916 022c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6917              	.LVL379:
 675:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 6918              		.loc 20 675 5 is_stmt 1 view .LVU1921
 675:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 6919              		.loc 20 675 18 is_stmt 0 view .LVU1922
 6920 0230 9FED560A 		vldr.32	s0, .L404+72
 6921 0234 5448     		ldr	r0, .L404+68
 6922 0236 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6923              	.LVL380:
 676:Veno-Echo.cpp **** 
 6924              		.loc 20 676 5 is_stmt 1 view .LVU1923
 676:Veno-Echo.cpp **** 
 6925              		.loc 20 676 19 is_stmt 0 view .LVU1924
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 237


 6926 023a 9FED550A 		vldr.32	s0, .L404+76
 6927 023e 5248     		ldr	r0, .L404+68
 6928 0240 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6929              	.LVL381:
 678:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 6930              		.loc 20 678 5 is_stmt 1 view .LVU1925
 678:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 6931              		.loc 20 678 15 is_stmt 0 view .LVU1926
 6932 0244 3F48     		ldr	r0, .L404
 6933 0246 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6934              	.LVL382:
 6935 024a 5248     		ldr	r0, .L404+80
 6936 024c FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6937              	.LVL383:
 679:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 6938              		.loc 20 679 5 is_stmt 1 view .LVU1927
 679:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 6939              		.loc 20 679 17 is_stmt 0 view .LVU1928
 6940 0250 B0EE480A 		vmov.f32	s0, s16
 6941 0254 4F48     		ldr	r0, .L404+80
 6942 0256 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6943              	.LVL384:
 680:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 6944              		.loc 20 680 5 is_stmt 1 view .LVU1929
 680:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 6945              		.loc 20 680 18 is_stmt 0 view .LVU1930
 6946 025a 9FED4C0A 		vldr.32	s0, .L404+72
 6947 025e 4D48     		ldr	r0, .L404+80
 6948 0260 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6949              	.LVL385:
 681:Veno-Echo.cpp **** 
 6950              		.loc 20 681 5 is_stmt 1 view .LVU1931
 681:Veno-Echo.cpp **** 
 6951              		.loc 20 681 19 is_stmt 0 view .LVU1932
 6952 0264 9FED4A0A 		vldr.32	s0, .L404+76
 6953 0268 4A48     		ldr	r0, .L404+80
 6954 026a FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6955              	.LVL386:
 684:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 6956              		.loc 20 684 5 is_stmt 1 view .LVU1933
 684:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 6957              		.loc 20 684 15 is_stmt 0 view .LVU1934
 6958 026e 3548     		ldr	r0, .L404
 6959 0270 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6960              	.LVL387:
 6961 0274 4848     		ldr	r0, .L404+84
 6962 0276 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6963              	.LVL388:
 685:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 6964              		.loc 20 685 5 is_stmt 1 view .LVU1935
 685:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 6965              		.loc 20 685 17 is_stmt 0 view .LVU1936
 6966 027a B0EE480A 		vmov.f32	s0, s16
 6967 027e 4648     		ldr	r0, .L404+84
 6968 0280 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6969              	.LVL389:
 686:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 238


 6970              		.loc 20 686 5 is_stmt 1 view .LVU1937
 686:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 6971              		.loc 20 686 18 is_stmt 0 view .LVU1938
 6972 0284 9FED450A 		vldr.32	s0, .L404+88
 6973 0288 4348     		ldr	r0, .L404+84
 6974 028a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6975              	.LVL390:
 687:Veno-Echo.cpp **** 
 6976              		.loc 20 687 5 is_stmt 1 view .LVU1939
 687:Veno-Echo.cpp **** 
 6977              		.loc 20 687 19 is_stmt 0 view .LVU1940
 6978 028e 9FED400A 		vldr.32	s0, .L404+76
 6979 0292 4148     		ldr	r0, .L404+84
 6980 0294 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6981              	.LVL391:
 689:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 6982              		.loc 20 689 5 is_stmt 1 view .LVU1941
 689:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 6983              		.loc 20 689 15 is_stmt 0 view .LVU1942
 6984 0298 2A48     		ldr	r0, .L404
 6985 029a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6986              	.LVL392:
 6987 029e 4048     		ldr	r0, .L404+92
 6988 02a0 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6989              	.LVL393:
 690:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 6990              		.loc 20 690 5 is_stmt 1 view .LVU1943
 690:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 6991              		.loc 20 690 17 is_stmt 0 view .LVU1944
 6992 02a4 B0EE480A 		vmov.f32	s0, s16
 6993 02a8 3D48     		ldr	r0, .L404+92
 6994 02aa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6995              	.LVL394:
 691:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 6996              		.loc 20 691 5 is_stmt 1 view .LVU1945
 691:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 6997              		.loc 20 691 18 is_stmt 0 view .LVU1946
 6998 02ae 9FED3B0A 		vldr.32	s0, .L404+88
 6999 02b2 3B48     		ldr	r0, .L404+92
 7000 02b4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7001              	.LVL395:
 692:Veno-Echo.cpp **** 
 7002              		.loc 20 692 5 is_stmt 1 view .LVU1947
 692:Veno-Echo.cpp **** 
 7003              		.loc 20 692 19 is_stmt 0 view .LVU1948
 7004 02b8 9FED350A 		vldr.32	s0, .L404+76
 7005 02bc 3848     		ldr	r0, .L404+92
 7006 02be FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7007              	.LVL396:
 695:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 7008              		.loc 20 695 5 is_stmt 1 view .LVU1949
 695:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 7009              		.loc 20 695 20 is_stmt 0 view .LVU1950
 7010 02c2 2048     		ldr	r0, .L404
 7011 02c4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7012              	.LVL397:
 7013 02c8 3648     		ldr	r0, .L404+96
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 239


 7014 02ca FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7015              	.LVL398:
 696:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 7016              		.loc 20 696 5 is_stmt 1 view .LVU1951
 696:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 7017              		.loc 20 696 22 is_stmt 0 view .LVU1952
 7018 02ce B0EE480A 		vmov.f32	s0, s16
 7019 02d2 3448     		ldr	r0, .L404+96
 7020 02d4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7021              	.LVL399:
 697:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 7022              		.loc 20 697 5 is_stmt 1 view .LVU1953
 697:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 7023              		.loc 20 697 23 is_stmt 0 view .LVU1954
 7024 02d8 9FED2C0A 		vldr.32	s0, .L404+72
 7025 02dc 3148     		ldr	r0, .L404+96
 7026 02de FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7027              	.LVL400:
 698:Veno-Echo.cpp **** 
 7028              		.loc 20 698 5 is_stmt 1 view .LVU1955
 698:Veno-Echo.cpp **** 
 7029              		.loc 20 698 24 is_stmt 0 view .LVU1956
 7030 02e2 9FED2B0A 		vldr.32	s0, .L404+76
 7031 02e6 2F48     		ldr	r0, .L404+96
 7032 02e8 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7033              	.LVL401:
 700:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 7034              		.loc 20 700 5 is_stmt 1 view .LVU1957
 700:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 7035              		.loc 20 700 20 is_stmt 0 view .LVU1958
 7036 02ec 1548     		ldr	r0, .L404
 7037 02ee FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7038              	.LVL402:
 7039 02f2 2D48     		ldr	r0, .L404+100
 7040 02f4 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7041              	.LVL403:
 701:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 7042              		.loc 20 701 5 is_stmt 1 view .LVU1959
 701:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 7043              		.loc 20 701 22 is_stmt 0 view .LVU1960
 7044 02f8 B0EE480A 		vmov.f32	s0, s16
 7045 02fc 2A48     		ldr	r0, .L404+100
 7046 02fe FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7047              	.LVL404:
 702:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 7048              		.loc 20 702 5 is_stmt 1 view .LVU1961
 702:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 7049              		.loc 20 702 23 is_stmt 0 view .LVU1962
 7050 0302 9FED220A 		vldr.32	s0, .L404+72
 7051 0306 2848     		ldr	r0, .L404+100
 7052 0308 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7053              	.LVL405:
 703:Veno-Echo.cpp **** 
 7054              		.loc 20 703 5 is_stmt 1 view .LVU1963
 703:Veno-Echo.cpp **** 
 7055              		.loc 20 703 24 is_stmt 0 view .LVU1964
 7056 030c 9FED200A 		vldr.32	s0, .L404+76
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 240


 7057 0310 2548     		ldr	r0, .L404+100
 7058 0312 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7059              	.LVL406:
 706:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 7060              		.loc 20 706 5 is_stmt 1 view .LVU1965
 706:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 7061              		.loc 20 706 20 is_stmt 0 view .LVU1966
 7062 0316 0B48     		ldr	r0, .L404
 7063 0318 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7064              	.LVL407:
 7065 031c 2348     		ldr	r0, .L404+104
 7066 031e FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7067              	.LVL408:
 707:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 7068              		.loc 20 707 5 is_stmt 1 view .LVU1967
 707:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 7069              		.loc 20 707 22 is_stmt 0 view .LVU1968
 7070 0322 B0EE480A 		vmov.f32	s0, s16
 7071 0326 2148     		ldr	r0, .L404+104
 7072 0328 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7073              	.LVL409:
 708:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 7074              		.loc 20 708 5 is_stmt 1 view .LVU1969
 708:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 7075              		.loc 20 708 23 is_stmt 0 view .LVU1970
 7076 032c 9FED1B0A 		vldr.32	s0, .L404+88
 7077 0330 1E48     		ldr	r0, .L404+104
 7078 0332 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7079              	.LVL410:
 709:Veno-Echo.cpp **** 
 7080              		.loc 20 709 5 is_stmt 1 view .LVU1971
 709:Veno-Echo.cpp **** 
 7081              		.loc 20 709 24 is_stmt 0 view .LVU1972
 7082 0336 9FED160A 		vldr.32	s0, .L404+76
 7083 033a 1C48     		ldr	r0, .L404+104
 7084 033c FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7085              	.LVL411:
 7086 0340 3AE0     		b	.L405
 7087              	.L406:
 7088 0342 00BF     		.align	2
 7089              	.L404:
 7090 0344 00000000 		.word	.LANCHOR4
 7091 0348 00000000 		.word	.LANCHOR92
 7092 034c 0AD7233C 		.word	1008981770
 7093 0350 00000000 		.word	.LANCHOR93
 7094 0354 00000000 		.word	.LANCHOR94
 7095 0358 00000000 		.word	.LANCHOR95
 7096 035c 00000000 		.word	.LANCHOR96
 7097 0360 00000000 		.word	.LANCHOR97
 7098 0364 00000000 		.word	.LANCHOR98
 7099 0368 00000000 		.word	.LANCHOR99
 7100 036c 00000000 		.word	.LANCHOR87
 7101 0370 00000000 		.word	.LANCHOR101
 7102 0374 00000000 		.word	0
 7103 0378 00000000 		.word	.LANCHOR103
 7104 037c 00000000 		.word	.LANCHOR104
 7105 0380 00000000 		.word	.LANCHOR105
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 241


 7106 0384 00000000 		.word	.LANCHOR64
 7107 0388 00000000 		.word	.LANCHOR46
 7108 038c 00803B46 		.word	1178304512
 7109 0390 3333333F 		.word	1060320051
 7110 0394 00000000 		.word	.LANCHOR47
 7111 0398 00000000 		.word	.LANCHOR34
 7112 039c 00004843 		.word	1128792064
 7113 03a0 00000000 		.word	.LANCHOR35
 7114 03a4 00000000 		.word	.LANCHOR48
 7115 03a8 00000000 		.word	.LANCHOR49
 7116 03ac 00000000 		.word	.LANCHOR36
 7117 03b0 00000000 		.word	.LANCHOR100
 7118 03b4 00000000 		.word	.LANCHOR102
 7119              	.L405:
 711:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 7120              		.loc 20 711 5 is_stmt 1 view .LVU1973
 711:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 7121              		.loc 20 711 20 is_stmt 0 view .LVU1974
 7122 03b8 7948     		ldr	r0, .L407
 7123 03ba FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7124              	.LVL412:
 7125 03be 7948     		ldr	r0, .L407+4
 7126 03c0 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7127              	.LVL413:
 712:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 7128              		.loc 20 712 5 is_stmt 1 view .LVU1975
 712:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 7129              		.loc 20 712 22 is_stmt 0 view .LVU1976
 7130 03c4 B0EE480A 		vmov.f32	s0, s16
 7131 03c8 7648     		ldr	r0, .L407+4
 7132 03ca FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7133              	.LVL414:
 713:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 7134              		.loc 20 713 5 is_stmt 1 view .LVU1977
 713:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 7135              		.loc 20 713 23 is_stmt 0 view .LVU1978
 7136 03ce 9FED760A 		vldr.32	s0, .L407+8
 7137 03d2 7448     		ldr	r0, .L407+4
 7138 03d4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7139              	.LVL415:
 714:Veno-Echo.cpp **** 
 7140              		.loc 20 714 5 is_stmt 1 view .LVU1979
 714:Veno-Echo.cpp **** 
 7141              		.loc 20 714 24 is_stmt 0 view .LVU1980
 7142 03d8 9FED740A 		vldr.32	s0, .L407+12
 7143 03dc 7148     		ldr	r0, .L407+4
 7144 03de FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7145              	.LVL416:
 716:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 7146              		.loc 20 716 5 is_stmt 1 view .LVU1981
 716:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 7147              		.loc 20 716 21 is_stmt 0 view .LVU1982
 7148 03e2 6F48     		ldr	r0, .L407
 7149 03e4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7150              	.LVL417:
 7151 03e8 7148     		ldr	r0, .L407+16
 7152 03ea FFF7FEFF 		bl	_ZN7daisysp7DcBlock4InitEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 242


 7153              	.LVL418:
 717:Veno-Echo.cpp **** 
 7154              		.loc 20 717 5 is_stmt 1 view .LVU1983
 717:Veno-Echo.cpp **** 
 7155              		.loc 20 717 21 is_stmt 0 view .LVU1984
 7156 03ee 6C48     		ldr	r0, .L407
 7157 03f0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7158              	.LVL419:
 7159 03f4 6F48     		ldr	r0, .L407+20
 7160 03f6 FFF7FEFF 		bl	_ZN7daisysp7DcBlock4InitEf
 7161              	.LVL420:
 720:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 7162              		.loc 20 720 5 is_stmt 1 view .LVU1985
 720:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 7163              		.loc 20 720 13 is_stmt 0 view .LVU1986
 7164 03fa 6948     		ldr	r0, .L407
 7165 03fc FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7166              	.LVL421:
 7167 0400 F0EE407A 		vmov.f32	s15, s0
 7168              	.LVL422:
 7169              	.LBB1476:
 7170              	.LBI1476:
  42:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7171              		.loc 8 42 10 is_stmt 1 view .LVU1987
 7172              	.LBB1477:
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7173              		.loc 8 44 9 view .LVU1988
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7174              		.loc 8 44 20 is_stmt 0 view .LVU1989
 7175 0404 6C4C     		ldr	r4, .L407+24
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7176              		.loc 8 46 20 view .LVU1990
 7177 0406 9FED6D0A 		vldr.32	s0, .L407+28
 7178              	.LVL423:
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7179              		.loc 8 45 27 view .LVU1991
 7180 040a 88EEA77A 		vdiv.f32	s14, s17, s15
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7181              		.loc 8 49 34 view .LVU1992
 7182 040e 2046     		mov	r0, r4
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 7183              		.loc 8 47 20 view .LVU1993
 7184 0410 6560     		str	r5, [r4, #4]	@ float
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7185              		.loc 8 44 20 view .LVU1994
 7186 0412 C4ED037A 		vstr.32	s15, [r4, #12]
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7187              		.loc 8 45 9 is_stmt 1 view .LVU1995
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 7188              		.loc 8 48 20 is_stmt 0 view .LVU1996
 7189 0416 84ED058A 		vstr.32	s16, [r4, #20]
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7190              		.loc 8 46 20 view .LVU1997
 7191 041a 84ED020A 		vstr.32	s0, [r4, #8]
 7192              	.LBE1477:
 7193              	.LBE1476:
 737:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 243


 7194              		.loc 20 737 17 view .LVU1998
 7195 041e 684D     		ldr	r5, .L407+32
 7196              	.LBB1481:
 7197              	.LBB1478:
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7198              		.loc 8 45 20 view .LVU1999
 7199 0420 84ED047A 		vstr.32	s14, [r4, #16]
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7200              		.loc 8 46 9 is_stmt 1 view .LVU2000
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 7201              		.loc 8 47 9 view .LVU2001
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 7202              		.loc 8 48 9 view .LVU2002
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7203              		.loc 8 49 9 view .LVU2003
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7204              		.loc 8 49 34 is_stmt 0 view .LVU2004
 7205 0424 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 7206              	.LVL424:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7207              		.loc 8 52 20 view .LVU2005
 7208 0428 40F20113 		movw	r3, #257
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7209              		.loc 8 49 34 view .LVU2006
 7210 042c F0EE407A 		vmov.f32	s15, s0
 7211              	.LBE1478:
 7212              	.LBE1481:
 7213              	.LBB1482:
 7214              	.LBB1483:
 7215              		.loc 8 61 34 view .LVU2007
 7216 0430 2046     		mov	r0, r4
 7217              	.LBE1483:
 7218              	.LBE1482:
 7219              	.LBB1487:
 7220              	.LBB1488:
  62:../DaisySP/Source/Synthesis/oscillator.h ****     }
  63:../DaisySP/Source/Synthesis/oscillator.h **** 
  64:../DaisySP/Source/Synthesis/oscillator.h **** 
  65:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  66:../DaisySP/Source/Synthesis/oscillator.h ****     */
  67:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:../DaisySP/Source/Synthesis/oscillator.h ****     */
  70:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  71:../DaisySP/Source/Synthesis/oscillator.h ****     {
  72:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 7221              		.loc 8 72 19 view .LVU2008
 7222 0432 2670     		strb	r6, [r4]
 7223              	.LBE1488:
 7224              	.LBE1487:
 7225              	.LBB1490:
 7226              	.LBB1479:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7227              		.loc 8 52 20 view .LVU2009
 7228 0434 A384     		strh	r3, [r4, #36]	@ movhi
 7229              	.LBE1479:
 7230              	.LBE1490:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 244


 7231              	.LBB1491:
 7232              	.LBB1484:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7233              		.loc 8 61 34 view .LVU2010
 7234 0436 B0EE680A 		vmov.f32	s0, s17
 7235              	.LBE1484:
 7236              	.LBE1491:
 7237              	.LBB1492:
 7238              	.LBB1480:
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7239              		.loc 8 49 20 view .LVU2011
 7240 043a C4ED067A 		vstr.32	s15, [r4, #24]
  50:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
 7241              		.loc 8 50 9 is_stmt 1 view .LVU2012
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
 7242              		.loc 8 51 9 view .LVU2013
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7243              		.loc 8 52 9 view .LVU2014
 7244              	.LVL425:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7245              		.loc 8 52 9 is_stmt 0 view .LVU2015
 7246              	.LBE1480:
 7247              	.LBE1492:
 721:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 7248              		.loc 20 721 5 is_stmt 1 view .LVU2016
 7249              	.LBB1493:
 7250              	.LBI1487:
  70:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7251              		.loc 8 70 17 view .LVU2017
 7252              	.LBB1489:
 7253              		.loc 8 72 9 view .LVU2018
 7254              		.loc 8 72 9 is_stmt 0 view .LVU2019
 7255              	.LBE1489:
 7256              	.LBE1493:
 722:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 7257              		.loc 20 722 5 is_stmt 1 view .LVU2020
 7258              	.LBB1494:
 7259              	.LBI1482:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7260              		.loc 8 58 17 view .LVU2021
 7261              	.LBB1485:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 7262              		.loc 8 60 9 view .LVU2022
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7263              		.loc 8 61 9 view .LVU2023
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 7264              		.loc 8 60 20 is_stmt 0 view .LVU2024
 7265 043e C4ED028A 		vstr.32	s17, [r4, #8]
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7266              		.loc 8 61 34 view .LVU2025
 7267 0442 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 7268              	.LVL426:
 7269 0446 F0EE407A 		vmov.f32	s15, s0
 7270              	.LBE1485:
 7271              	.LBE1494:
 725:Veno-Echo.cpp **** 
 7272              		.loc 20 725 19 view .LVU2026
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 245


 7273 044a 5E4A     		ldr	r2, .L407+36
 7274 044c 44F62061 		movw	r1, #20000
 7275 0450 B7EE040A 		vmov.f32	s0, #1.25e+0
 7276 0454 5C48     		ldr	r0, .L407+40
 7277              	.LBB1495:
 7278              	.LBB1496:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7279              		.loc 8 67 46 view .LVU2027
 7280 0456 C4ED018A 		vstr.32	s17, [r4, #4]
 7281              	.LBE1496:
 7282              	.LBE1495:
 7283              	.LBB1498:
 7284              	.LBB1486:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7285              		.loc 8 61 20 view .LVU2028
 7286 045a C4ED067A 		vstr.32	s15, [r4, #24]
 7287              	.LVL427:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7288              		.loc 8 61 20 view .LVU2029
 7289              	.LBE1486:
 7290              	.LBE1498:
 723:Veno-Echo.cpp **** 
 7291              		.loc 20 723 5 is_stmt 1 view .LVU2030
 7292              	.LBB1499:
 7293              	.LBI1495:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7294              		.loc 8 67 17 view .LVU2031
 7295              	.LBB1497:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7296              		.loc 8 67 41 view .LVU2032
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7297              		.loc 8 67 41 is_stmt 0 view .LVU2033
 7298              	.LBE1497:
 7299              	.LBE1499:
 725:Veno-Echo.cpp **** 
 7300              		.loc 20 725 5 is_stmt 1 view .LVU2034
 725:Veno-Echo.cpp **** 
 7301              		.loc 20 725 19 is_stmt 0 view .LVU2035
 7302 045e FFF7FEFF 		bl	_ZN8Taptempo4initEmmf
 7303              	.LVL428:
 729:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7304              		.loc 20 729 5 is_stmt 1 view .LVU2036
 729:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7305              		.loc 20 729 23 is_stmt 0 view .LVU2037
 7306 0462 1820     		movs	r0, #24
 737:Veno-Echo.cpp **** 
 7307              		.loc 20 737 17 view .LVU2038
 7308 0464 594C     		ldr	r4, .L407+44
 729:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7309              		.loc 20 729 23 view .LVU2039
 7310 0466 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7311              	.LVL429:
 7312 046a 0346     		mov	r3, r0	@ movhi
 7313 046c 4C48     		ldr	r0, .L407
 7314 046e ADF84030 		strh	r3, [sp, #64]	@ movhi
 7315 0472 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7316              	.LVL430:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 246


 7317 0476 1099     		ldr	r1, [sp, #64]
 7318 0478 5548     		ldr	r0, .L407+48
 7319 047a FFF7FEFF 		bl	_ZN8TempoLED4initE12dsy_gpio_pinf
 7320              	.LVL431:
 730:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7321              		.loc 20 730 5 is_stmt 1 view .LVU2040
 730:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7322              		.loc 20 730 27 is_stmt 0 view .LVU2041
 7323 047e 5248     		ldr	r0, .L407+40
 7324 0480 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 7325              	.LVL432:
 7326 0484 5248     		ldr	r0, .L407+48
 7327 0486 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 7328              	.LVL433:
 731:Veno-Echo.cpp **** 
 7329              		.loc 20 731 5 is_stmt 1 view .LVU2042
 731:Veno-Echo.cpp **** 
 7330              		.loc 20 731 29 is_stmt 0 view .LVU2043
 7331 048a 5148     		ldr	r0, .L407+48
 7332 048c FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 7333              	.LVL434:
 736:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 7334              		.loc 20 736 5 is_stmt 1 view .LVU2044
 736:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 7335              		.loc 20 736 18 is_stmt 0 view .LVU2045
 7336 0490 4B48     		ldr	r0, .L407+32
 7337 0492 FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 7338              	.LVL435:
 737:Veno-Echo.cpp **** 
 7339              		.loc 20 737 5 is_stmt 1 view .LVU2046
 737:Veno-Echo.cpp **** 
 7340              		.loc 20 737 17 is_stmt 0 view .LVU2047
 7341 0496 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7342 0498 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7343 049a 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 7344 049e 84E80F00 		stm	r4, {r0, r1, r2, r3}
 742:Veno-Echo.cpp **** 
 7345              		.loc 20 742 5 is_stmt 1 view .LVU2048
 744:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 7346              		.loc 20 744 5 view .LVU2049
 744:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 7347              		.loc 20 744 28 is_stmt 0 view .LVU2050
 7348 04a2 0F20     		movs	r0, #15
 7349 04a4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7350              	.LVL436:
 7351 04a8 0346     		mov	r3, r0	@ movhi
 7352 04aa 1CA8     		add	r0, sp, #112
 7353 04ac ADF84430 		strh	r3, [sp, #68]	@ movhi
 7354 04b0 1199     		ldr	r1, [sp, #68]
 7355 04b2 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7356              	.LVL437:
 745:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 7357              		.loc 20 745 5 is_stmt 1 view .LVU2051
 745:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 7358              		.loc 20 745 28 is_stmt 0 view .LVU2052
 7359 04b6 1020     		movs	r0, #16
 7360 04b8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 247


 7361              	.LVL438:
 7362 04bc 0346     		mov	r3, r0	@ movhi
 7363 04be 0DF18100 		add	r0, sp, #129
 7364 04c2 ADF84830 		strh	r3, [sp, #72]	@ movhi
 7365 04c6 1299     		ldr	r1, [sp, #72]
 7366 04c8 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7367              	.LVL439:
 746:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 7368              		.loc 20 746 5 is_stmt 1 view .LVU2053
 746:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 7369              		.loc 20 746 28 is_stmt 0 view .LVU2054
 7370 04cc 1120     		movs	r0, #17
 7371 04ce FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7372              	.LVL440:
 7373 04d2 0346     		mov	r3, r0	@ movhi
 7374 04d4 0DF19200 		add	r0, sp, #146
 7375 04d8 ADF84C30 		strh	r3, [sp, #76]	@ movhi
 7376 04dc 1399     		ldr	r1, [sp, #76]
 7377 04de FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7378              	.LVL441:
 747:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 7379              		.loc 20 747 5 is_stmt 1 view .LVU2055
 747:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 7380              		.loc 20 747 28 is_stmt 0 view .LVU2056
 7381 04e2 1220     		movs	r0, #18
 7382 04e4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7383              	.LVL442:
 7384 04e8 0346     		mov	r3, r0	@ movhi
 7385 04ea 0DF1A300 		add	r0, sp, #163
 7386 04ee ADF85030 		strh	r3, [sp, #80]	@ movhi
 7387 04f2 1499     		ldr	r1, [sp, #80]
 7388 04f4 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7389              	.LVL443:
 748:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 7390              		.loc 20 748 5 is_stmt 1 view .LVU2057
 748:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 7391              		.loc 20 748 28 is_stmt 0 view .LVU2058
 7392 04f8 1320     		movs	r0, #19
 7393 04fa FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7394              	.LVL444:
 7395 04fe 0346     		mov	r3, r0	@ movhi
 7396 0500 2DA8     		add	r0, sp, #180
 7397 0502 ADF85430 		strh	r3, [sp, #84]	@ movhi
 7398 0506 1599     		ldr	r1, [sp, #84]
 7399 0508 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7400              	.LVL445:
 749:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 7401              		.loc 20 749 5 is_stmt 1 view .LVU2059
 749:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 7402              		.loc 20 749 28 is_stmt 0 view .LVU2060
 7403 050c 1420     		movs	r0, #20
 7404 050e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7405              	.LVL446:
 7406 0512 0346     		mov	r3, r0	@ movhi
 7407 0514 0DF1C500 		add	r0, sp, #197
 7408 0518 ADF85830 		strh	r3, [sp, #88]	@ movhi
 7409 051c 1699     		ldr	r1, [sp, #88]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 248


 7410 051e FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7411              	.LVL447:
 751:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 7412              		.loc 20 751 5 is_stmt 1 view .LVU2061
 751:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 7413              		.loc 20 751 28 is_stmt 0 view .LVU2062
 7414 0522 1620     		movs	r0, #22
 7415 0524 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7416              	.LVL448:
 7417 0528 0346     		mov	r3, r0	@ movhi
 7418 052a 0DF1D600 		add	r0, sp, #214
 7419 052e ADF85C30 		strh	r3, [sp, #92]	@ movhi
 7420 0532 1799     		ldr	r1, [sp, #92]
 7421 0534 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7422              	.LVL449:
 752:Veno-Echo.cpp **** 
 7423              		.loc 20 752 5 is_stmt 1 view .LVU2063
 752:Veno-Echo.cpp **** 
 7424              		.loc 20 752 25 is_stmt 0 view .LVU2064
 7425 0538 1920     		movs	r0, #25
 7426 053a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7427              	.LVL450:
 7428 053e 0346     		mov	r3, r0	@ movhi
 7429 0540 0E20     		movs	r0, #14
 7430 0542 ADF86030 		strh	r3, [sp, #96]	@ movhi
 7431 0546 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7432              	.LVL451:
 7433 054a 0346     		mov	r3, r0	@ movhi
 7434 054c 0D20     		movs	r0, #13
 7435 054e ADF86430 		strh	r3, [sp, #100]	@ movhi
 7436 0552 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7437              	.LVL452:
 7438 0556 0346     		mov	r3, r0	@ movhi
 7439 0558 0C20     		movs	r0, #12
 7440 055a ADF86830 		strh	r3, [sp, #104]	@ movhi
 7441 055e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7442              	.LVL453:
 7443 0562 BDF86810 		ldrh	r1, [sp, #104]
 7444 0566 0822     		movs	r2, #8
 7445 0568 199B     		ldr	r3, [sp, #100]
 7446 056a ADF80400 		strh	r0, [sp, #4]	@ movhi
 7447 056e 0DF1E700 		add	r0, sp, #231
 7448 0572 ADF80010 		strh	r1, [sp]	@ movhi
 7449 0576 1899     		ldr	r1, [sp, #96]
 7450 0578 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
 7451              	.LVL454:
 755:Veno-Echo.cpp ****     hw.adc.Start();
 7452              		.loc 20 755 5 is_stmt 1 view .LVU2065
 755:Veno-Echo.cpp ****     hw.adc.Start();
 7453              		.loc 20 755 16 is_stmt 0 view .LVU2066
 7454 057c 1CA9     		add	r1, sp, #112
 7455 057e 0623     		movs	r3, #6
 7456 0580 0822     		movs	r2, #8
 7457 0582 1448     		ldr	r0, .L407+52
 7458 0584 FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 7459              	.LVL455:
 756:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 249


 7460              		.loc 20 756 5 is_stmt 1 view .LVU2067
 756:Veno-Echo.cpp **** 
 7461              		.loc 20 756 17 is_stmt 0 view .LVU2068
 7462 0588 1248     		ldr	r0, .L407+52
 7463 058a FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 7464              	.LVL456:
 759:Veno-Echo.cpp ****     // start audio callback
 7465              		.loc 20 759 5 is_stmt 1 view .LVU2069
 759:Veno-Echo.cpp ****     // start audio callback
 7466              		.loc 20 759 25 is_stmt 0 view .LVU2070
 7467 058e 3146     		mov	r1, r6
 7468 0590 0348     		ldr	r0, .L407
 7469 0592 FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 7470              	.LVL457:
 761:Veno-Echo.cpp **** 
 7471              		.loc 20 761 5 is_stmt 1 view .LVU2071
 761:Veno-Echo.cpp **** 
 7472              		.loc 20 761 18 is_stmt 0 view .LVU2072
 7473 0596 1049     		ldr	r1, .L407+56
 7474 0598 0148     		ldr	r0, .L407
 7475 059a FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
 7476              	.LVL458:
 7477              	.L402:
 765:Veno-Echo.cpp ****      {
 7478              		.loc 20 765 6 is_stmt 1 discriminator 1 view .LVU2073
 765:Veno-Echo.cpp ****      {
 7479              		.loc 20 765 6 discriminator 1 view .LVU2074
 765:Veno-Echo.cpp ****      {
 7480              		.loc 20 765 6 discriminator 1 view .LVU2075
 765:Veno-Echo.cpp ****      {
 7481              		.loc 20 765 6 discriminator 1 view .LVU2076
 7482 059e FEE7     		b	.L402
 7483              	.L408:
 7484              		.align	2
 7485              	.L407:
 7486 05a0 00000000 		.word	.LANCHOR4
 7487 05a4 00000000 		.word	.LANCHOR37
 7488 05a8 00004843 		.word	1128792064
 7489 05ac 3333333F 		.word	1060320051
 7490 05b0 00000000 		.word	.LANCHOR106
 7491 05b4 00000000 		.word	.LANCHOR107
 7492 05b8 00000000 		.word	.LANCHOR75
 7493 05bc 0000C842 		.word	1120403456
 7494 05c0 00000000 		.word	.LANCHOR108
 7495 05c4 808D5B00 		.word	6000000
 7496 05c8 00000000 		.word	.LANCHOR25
 7497 05cc 00000000 		.word	.LANCHOR15
 7498 05d0 00000000 		.word	.LANCHOR88
 7499 05d4 18000000 		.word	.LANCHOR4+24
 7500 05d8 00000000 		.word	_ZL13AudioCallbackPfS_j
 7501              		.cfi_endproc
 7502              	.LFE4311:
 7504              		.section	.text._Z13TurnOnAllLEDsv,"ax",%progbits
 7505              		.align	1
 7506              		.p2align 2,,3
 7507              		.global	_Z13TurnOnAllLEDsv
 7508              		.syntax unified
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 250


 7509              		.thumb
 7510              		.thumb_func
 7511              		.fpu fpv5-d16
 7513              	_Z13TurnOnAllLEDsv:
 7514              	.LFB4334:
1824:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 7515              		.loc 20 1824 1 view -0
 7516              		.cfi_startproc
 7517              		@ args = 0, pretend = 0, frame = 0
 7518              		@ frame_needed = 0, uses_anonymous_args = 0
1825:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 7519              		.loc 20 1825 5 view .LVU2078
1824:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 7520              		.loc 20 1824 1 is_stmt 0 view .LVU2079
 7521 0000 08B5     		push	{r3, lr}
 7522              		.cfi_def_cfa_offset 8
 7523              		.cfi_offset 3, -8
 7524              		.cfi_offset 14, -4
1825:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 7525              		.loc 20 1825 26 view .LVU2080
 7526 0002 B7EE000A 		vmov.f32	s0, #1.0e+0
 7527 0006 1148     		ldr	r0, .L411
 7528 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7529              	.LVL459:
1826:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 7530              		.loc 20 1826 5 is_stmt 1 view .LVU2081
1826:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 7531              		.loc 20 1826 28 is_stmt 0 view .LVU2082
 7532 000c B7EE000A 		vmov.f32	s0, #1.0e+0
 7533 0010 0F48     		ldr	r0, .L411+4
 7534 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7535              	.LVL460:
1827:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 7536              		.loc 20 1827 5 is_stmt 1 view .LVU2083
1827:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 7537              		.loc 20 1827 28 is_stmt 0 view .LVU2084
 7538 0016 B7EE000A 		vmov.f32	s0, #1.0e+0
 7539 001a 0E48     		ldr	r0, .L411+8
 7540 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7541              	.LVL461:
1828:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 7542              		.loc 20 1828 5 is_stmt 1 view .LVU2085
1828:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 7543              		.loc 20 1828 21 is_stmt 0 view .LVU2086
 7544 0020 B7EE000A 		vmov.f32	s0, #1.0e+0
 7545 0024 0C48     		ldr	r0, .L411+12
 7546 0026 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7547              	.LVL462:
1829:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 7548              		.loc 20 1829 5 is_stmt 1 view .LVU2087
1829:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 7549              		.loc 20 1829 21 is_stmt 0 view .LVU2088
 7550 002a B7EE000A 		vmov.f32	s0, #1.0e+0
 7551 002e 0B48     		ldr	r0, .L411+16
 7552 0030 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7553              	.LVL463:
1830:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 251


 7554              		.loc 20 1830 5 is_stmt 1 view .LVU2089
1830:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 7555              		.loc 20 1830 19 is_stmt 0 view .LVU2090
 7556 0034 B7EE000A 		vmov.f32	s0, #1.0e+0
 7557 0038 0948     		ldr	r0, .L411+20
 7558 003a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7559              	.LVL464:
1831:Veno-Echo.cpp **** }
 7560              		.loc 20 1831 5 is_stmt 1 view .LVU2091
1831:Veno-Echo.cpp **** }
 7561              		.loc 20 1831 19 is_stmt 0 view .LVU2092
 7562 003e B7EE000A 		vmov.f32	s0, #1.0e+0
 7563 0042 0848     		ldr	r0, .L411+24
1832:Veno-Echo.cpp **** 
 7564              		.loc 20 1832 1 view .LVU2093
 7565 0044 BDE80840 		pop	{r3, lr}
 7566              		.cfi_restore 14
 7567              		.cfi_restore 3
 7568              		.cfi_def_cfa_offset 0
1831:Veno-Echo.cpp **** }
 7569              		.loc 20 1831 19 view .LVU2094
 7570 0048 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 7571              	.LVL465:
 7572              	.L412:
 7573              		.align	2
 7574              	.L411:
 7575 004c 00000000 		.word	.LANCHOR88
 7576 0050 04000000 		.word	.LANCHOR0+4
 7577 0054 04000000 		.word	.LANCHOR1+4
 7578 0058 00000000 		.word	.LANCHOR94
 7579 005c 00000000 		.word	.LANCHOR95
 7580 0060 00000000 		.word	.LANCHOR92
 7581 0064 00000000 		.word	.LANCHOR93
 7582              		.cfi_endproc
 7583              	.LFE4334:
 7585              		.section	.text._Z12ResetAllLEDsv,"ax",%progbits
 7586              		.align	1
 7587              		.p2align 2,,3
 7588              		.global	_Z12ResetAllLEDsv
 7589              		.syntax unified
 7590              		.thumb
 7591              		.thumb_func
 7592              		.fpu fpv5-d16
 7594              	_Z12ResetAllLEDsv:
 7595              	.LFB4335:
1835:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 7596              		.loc 20 1835 1 is_stmt 1 view -0
 7597              		.cfi_startproc
 7598              		@ args = 0, pretend = 0, frame = 0
 7599              		@ frame_needed = 0, uses_anonymous_args = 0
1836:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 7600              		.loc 20 1836 5 view .LVU2096
1835:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 7601              		.loc 20 1835 1 is_stmt 0 view .LVU2097
 7602 0000 08B5     		push	{r3, lr}
 7603              		.cfi_def_cfa_offset 8
 7604              		.cfi_offset 3, -8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 252


 7605              		.cfi_offset 14, -4
1836:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 7606              		.loc 20 1836 26 view .LVU2098
 7607 0002 9FED1E0A 		vldr.32	s0, .L420
 7608 0006 1E48     		ldr	r0, .L420+4
 7609 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7610              	.LVL466:
1837:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 7611              		.loc 20 1837 5 is_stmt 1 view .LVU2099
1837:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 7612              		.loc 20 1837 28 is_stmt 0 view .LVU2100
 7613 000c 9FED1B0A 		vldr.32	s0, .L420
 7614 0010 1C48     		ldr	r0, .L420+8
 7615 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7616              	.LVL467:
1838:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 7617              		.loc 20 1838 5 is_stmt 1 view .LVU2101
1838:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 7618              		.loc 20 1838 28 is_stmt 0 view .LVU2102
 7619 0016 1C48     		ldr	r0, .L420+12
 7620 0018 9FED180A 		vldr.32	s0, .L420
 7621 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7622              	.LVL468:
1839:Veno-Echo.cpp ****     {
 7623              		.loc 20 1839 5 is_stmt 1 view .LVU2103
1839:Veno-Echo.cpp ****     {
 7624              		.loc 20 1839 26 is_stmt 0 view .LVU2104
 7625 0020 1A48     		ldr	r0, .L420+16
 7626 0022 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7627              	.LVL469:
1839:Veno-Echo.cpp ****     {
 7628              		.loc 20 1839 5 view .LVU2105
 7629 0026 C8B9     		cbnz	r0, .L414
1841:Veno-Echo.cpp ****     }
 7630              		.loc 20 1841 9 is_stmt 1 view .LVU2106
1841:Veno-Echo.cpp ****     }
 7631              		.loc 20 1841 25 is_stmt 0 view .LVU2107
 7632 0028 1848     		ldr	r0, .L420+16
 7633 002a 9FED140A 		vldr.32	s0, .L420
 7634 002e FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7635              	.LVL470:
1848:Veno-Echo.cpp ****     {
 7636              		.loc 20 1848 5 is_stmt 1 view .LVU2108
1848:Veno-Echo.cpp ****     {
 7637              		.loc 20 1848 26 is_stmt 0 view .LVU2109
 7638 0032 1748     		ldr	r0, .L420+20
 7639 0034 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7640              	.LVL471:
1848:Veno-Echo.cpp ****     {
 7641              		.loc 20 1848 5 view .LVU2110
 7642 0038 D0B9     		cbnz	r0, .L416
 7643              	.L419:
1850:Veno-Echo.cpp ****     }
 7644              		.loc 20 1850 9 is_stmt 1 view .LVU2111
1850:Veno-Echo.cpp ****     }
 7645              		.loc 20 1850 25 is_stmt 0 view .LVU2112
 7646 003a 9FED100A 		vldr.32	s0, .L420
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 253


 7647 003e 1448     		ldr	r0, .L420+20
 7648 0040 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7649              	.LVL472:
 7650              	.L417:
1857:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 7651              		.loc 20 1857 5 is_stmt 1 view .LVU2113
1857:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 7652              		.loc 20 1857 19 is_stmt 0 view .LVU2114
 7653 0044 9FED0D0A 		vldr.32	s0, .L420
 7654 0048 1248     		ldr	r0, .L420+24
 7655 004a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7656              	.LVL473:
1858:Veno-Echo.cpp **** }
 7657              		.loc 20 1858 5 is_stmt 1 view .LVU2115
1858:Veno-Echo.cpp **** }
 7658              		.loc 20 1858 19 is_stmt 0 view .LVU2116
 7659 004e 9FED0B0A 		vldr.32	s0, .L420
 7660 0052 1148     		ldr	r0, .L420+28
1859:Veno-Echo.cpp **** 
 7661              		.loc 20 1859 1 view .LVU2117
 7662 0054 BDE80840 		pop	{r3, lr}
 7663              		.cfi_remember_state
 7664              		.cfi_restore 14
 7665              		.cfi_restore 3
 7666              		.cfi_def_cfa_offset 0
1858:Veno-Echo.cpp **** }
 7667              		.loc 20 1858 19 view .LVU2118
 7668 0058 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 7669              	.LVL474:
 7670              	.L414:
 7671              		.cfi_restore_state
1845:Veno-Echo.cpp ****     }
 7672              		.loc 20 1845 8 is_stmt 1 view .LVU2119
1845:Veno-Echo.cpp ****     }
 7673              		.loc 20 1845 24 is_stmt 0 view .LVU2120
 7674 005c 0B48     		ldr	r0, .L420+16
 7675 005e B7EE000A 		vmov.f32	s0, #1.0e+0
 7676 0062 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7677              	.LVL475:
1848:Veno-Echo.cpp ****     {
 7678              		.loc 20 1848 5 is_stmt 1 view .LVU2121
1848:Veno-Echo.cpp ****     {
 7679              		.loc 20 1848 26 is_stmt 0 view .LVU2122
 7680 0066 0A48     		ldr	r0, .L420+20
 7681 0068 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7682              	.LVL476:
1848:Veno-Echo.cpp ****     {
 7683              		.loc 20 1848 5 view .LVU2123
 7684 006c 0028     		cmp	r0, #0
 7685 006e E4D0     		beq	.L419
 7686              	.L416:
1854:Veno-Echo.cpp ****     }
 7687              		.loc 20 1854 9 is_stmt 1 view .LVU2124
1854:Veno-Echo.cpp ****     }
 7688              		.loc 20 1854 25 is_stmt 0 view .LVU2125
 7689 0070 B7EE000A 		vmov.f32	s0, #1.0e+0
 7690 0074 0648     		ldr	r0, .L420+20
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 254


 7691 0076 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7692              	.LVL477:
 7693 007a E3E7     		b	.L417
 7694              	.L421:
 7695              		.align	2
 7696              	.L420:
 7697 007c 00000000 		.word	0
 7698 0080 00000000 		.word	.LANCHOR88
 7699 0084 04000000 		.word	.LANCHOR0+4
 7700 0088 04000000 		.word	.LANCHOR1+4
 7701 008c 00000000 		.word	.LANCHOR94
 7702 0090 00000000 		.word	.LANCHOR95
 7703 0094 00000000 		.word	.LANCHOR92
 7704 0098 00000000 		.word	.LANCHOR93
 7705              		.cfi_endproc
 7706              	.LFE4335:
 7708              		.section	.text._Z14Update_Buttonsv,"ax",%progbits
 7709              		.align	1
 7710              		.p2align 2,,3
 7711              		.global	_Z14Update_Buttonsv
 7712              		.syntax unified
 7713              		.thumb
 7714              		.thumb_func
 7715              		.fpu fpv5-d16
 7717              	_Z14Update_Buttonsv:
 7718              	.LFB4329:
1569:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 7719              		.loc 20 1569 1 is_stmt 1 view -0
 7720              		.cfi_startproc
 7721              		@ args = 0, pretend = 0, frame = 0
 7722              		@ frame_needed = 0, uses_anonymous_args = 0
1570:Veno-Echo.cpp ****     static uint32_t resetTime{};
 7723              		.loc 20 1570 5 view .LVU2127
1571:Veno-Echo.cpp ****     static int buttonstate{};
 7724              		.loc 20 1571 5 view .LVU2128
1572:Veno-Echo.cpp **** 
 7725              		.loc 20 1572 5 view .LVU2129
1574:Veno-Echo.cpp ****     Rev_R_sw.update();
 7726              		.loc 20 1574 5 view .LVU2130
1569:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 7727              		.loc 20 1569 1 is_stmt 0 view .LVU2131
 7728 0000 70B5     		push	{r4, r5, r6, lr}
 7729              		.cfi_def_cfa_offset 16
 7730              		.cfi_offset 4, -16
 7731              		.cfi_offset 5, -12
 7732              		.cfi_offset 6, -8
 7733              		.cfi_offset 14, -4
1574:Veno-Echo.cpp ****     Rev_R_sw.update();
 7734              		.loc 20 1574 20 view .LVU2132
 7735 0002 6348     		ldr	r0, .L465
 7736 0004 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 7737              	.LVL478:
1575:Veno-Echo.cpp ****     LPF_sw.update();
 7738              		.loc 20 1575 5 is_stmt 1 view .LVU2133
1575:Veno-Echo.cpp ****     LPF_sw.update();
 7739              		.loc 20 1575 20 is_stmt 0 view .LVU2134
 7740 0008 6248     		ldr	r0, .L465+4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 255


 7741 000a FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 7742              	.LVL479:
1576:Veno-Echo.cpp ****     HPF_sw.update();
 7743              		.loc 20 1576 5 is_stmt 1 view .LVU2135
1576:Veno-Echo.cpp ****     HPF_sw.update();
 7744              		.loc 20 1576 18 is_stmt 0 view .LVU2136
 7745 000e 6248     		ldr	r0, .L465+8
 7746 0010 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 7747              	.LVL480:
1577:Veno-Echo.cpp ****     Tap_Button.update();
 7748              		.loc 20 1577 5 is_stmt 1 view .LVU2137
1580:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 7749              		.loc 20 1580 26 is_stmt 0 view .LVU2138
 7750 0014 614C     		ldr	r4, .L465+12
1577:Veno-Echo.cpp ****     Tap_Button.update();
 7751              		.loc 20 1577 18 view .LVU2139
 7752 0016 6248     		ldr	r0, .L465+16
 7753 0018 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 7754              	.LVL481:
1578:Veno-Echo.cpp **** 
 7755              		.loc 20 1578 5 is_stmt 1 view .LVU2140
1578:Veno-Echo.cpp **** 
 7756              		.loc 20 1578 22 is_stmt 0 view .LVU2141
 7757 001c 6148     		ldr	r0, .L465+20
 7758 001e FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 7759              	.LVL482:
1580:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 7760              		.loc 20 1580 5 is_stmt 1 view .LVU2142
1580:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 7761              		.loc 20 1580 26 is_stmt 0 view .LVU2143
 7762 0022 2046     		mov	r0, r4
 7763 0024 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 7764              	.LVL483:
1581:Veno-Echo.cpp ****     //TapButton.Debounce();
 7765              		.loc 20 1581 5 is_stmt 1 view .LVU2144
1581:Veno-Echo.cpp ****     //TapButton.Debounce();
 7766              		.loc 20 1581 26 is_stmt 0 view .LVU2145
 7767 0028 5F48     		ldr	r0, .L465+24
 7768 002a FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 7769              	.LVL484:
1583:Veno-Echo.cpp ****     ClockIn.Debounce();
 7770              		.loc 20 1583 5 is_stmt 1 view .LVU2146
1583:Veno-Echo.cpp ****     ClockIn.Debounce();
 7771              		.loc 20 1583 18 is_stmt 0 view .LVU2147
 7772 002e 5F48     		ldr	r0, .L465+28
 7773 0030 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 7774              	.LVL485:
1584:Veno-Echo.cpp ****     //gate inputs
 7775              		.loc 20 1584 5 is_stmt 1 view .LVU2148
1584:Veno-Echo.cpp ****     //gate inputs
 7776              		.loc 20 1584 21 is_stmt 0 view .LVU2149
 7777 0034 5E48     		ldr	r0, .L465+32
 7778 0036 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 7779              	.LVL486:
1586:Veno-Echo.cpp ****     {
 7780              		.loc 20 1586 5 is_stmt 1 view .LVU2150
 7781              		.loc 1 69 38 view .LVU2151
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 256


1586:Veno-Echo.cpp ****     {
 7782              		.loc 20 1586 5 is_stmt 0 view .LVU2152
 7783 003a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 7784 003c 7F2B     		cmp	r3, #127
 7785 003e 00F09280 		beq	.L457
 7786              	.L423:
1592:Veno-Echo.cpp ****     {
 7787              		.loc 20 1592 5 is_stmt 1 view .LVU2153
 7788              	.LVL487:
 7789              		.loc 1 69 38 view .LVU2154
1592:Veno-Echo.cpp ****     {
 7790              		.loc 20 1592 32 is_stmt 0 view .LVU2155
 7791 0042 594B     		ldr	r3, .L465+24
1592:Veno-Echo.cpp ****     {
 7792              		.loc 20 1592 5 view .LVU2156
 7793 0044 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 7794 0046 7F2B     		cmp	r3, #127
 7795 0048 00F08980 		beq	.L458
 7796              	.L424:
1600:Veno-Echo.cpp ****     {
 7797              		.loc 20 1600 5 is_stmt 1 view .LVU2157
1600:Veno-Echo.cpp ****     {
 7798              		.loc 20 1600 28 is_stmt 0 view .LVU2158
 7799 004c 5048     		ldr	r0, .L465
1602:Veno-Echo.cpp ****         if (buttonstate == 3)
 7800              		.loc 20 1602 21 view .LVU2159
 7801 004e 594C     		ldr	r4, .L465+36
1600:Veno-Echo.cpp ****     {
 7802              		.loc 20 1600 28 view .LVU2160
 7803 0050 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 7804              	.LVL488:
1600:Veno-Echo.cpp ****     {
 7805              		.loc 20 1600 5 view .LVU2161
 7806 0054 28B1     		cbz	r0, .L426
1602:Veno-Echo.cpp ****         if (buttonstate == 3)
 7807              		.loc 20 1602 9 is_stmt 1 view .LVU2162
1602:Veno-Echo.cpp ****         if (buttonstate == 3)
 7808              		.loc 20 1602 21 is_stmt 0 view .LVU2163
 7809 0056 2368     		ldr	r3, [r4]
 7810 0058 0133     		adds	r3, r3, #1
1603:Veno-Echo.cpp ****         {
 7811              		.loc 20 1603 9 view .LVU2164
 7812 005a 032B     		cmp	r3, #3
1602:Veno-Echo.cpp ****         if (buttonstate == 3)
 7813              		.loc 20 1602 21 view .LVU2165
 7814 005c 2360     		str	r3, [r4]
1603:Veno-Echo.cpp ****         {
 7815              		.loc 20 1603 9 is_stmt 1 view .LVU2166
 7816 005e 00F08680 		beq	.L459
 7817              	.L426:
1609:Veno-Echo.cpp ****     {
 7818              		.loc 20 1609 5 view .LVU2167
1609:Veno-Echo.cpp ****     {
 7819              		.loc 20 1609 29 is_stmt 0 view .LVU2168
 7820 0062 4B48     		ldr	r0, .L465
 7821 0064 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 7822              	.LVL489:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 257


1609:Veno-Echo.cpp ****     {
 7823              		.loc 20 1609 5 view .LVU2169
 7824 0068 10B1     		cbz	r0, .L428
1611:Veno-Echo.cpp ****     }
 7825              		.loc 20 1611 9 is_stmt 1 view .LVU2170
1611:Veno-Echo.cpp ****     }
 7826              		.loc 20 1611 21 is_stmt 0 view .LVU2171
 7827 006a 2368     		ldr	r3, [r4]
 7828 006c 013B     		subs	r3, r3, #1
 7829 006e 2360     		str	r3, [r4]
 7830              	.L428:
1614:Veno-Echo.cpp ****     {
 7831              		.loc 20 1614 5 is_stmt 1 view .LVU2172
1614:Veno-Echo.cpp ****     {
 7832              		.loc 20 1614 28 is_stmt 0 view .LVU2173
 7833 0070 4848     		ldr	r0, .L465+4
 7834 0072 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 7835              	.LVL490:
1614:Veno-Echo.cpp ****     {
 7836              		.loc 20 1614 5 view .LVU2174
 7837 0076 20B1     		cbz	r0, .L430
1616:Veno-Echo.cpp ****         if (buttonstate == 3)
 7838              		.loc 20 1616 9 is_stmt 1 view .LVU2175
1616:Veno-Echo.cpp ****         if (buttonstate == 3)
 7839              		.loc 20 1616 21 is_stmt 0 view .LVU2176
 7840 0078 2368     		ldr	r3, [r4]
 7841 007a 0133     		adds	r3, r3, #1
1617:Veno-Echo.cpp ****         {
 7842              		.loc 20 1617 9 view .LVU2177
 7843 007c 032B     		cmp	r3, #3
1616:Veno-Echo.cpp ****         if (buttonstate == 3)
 7844              		.loc 20 1616 21 view .LVU2178
 7845 007e 2360     		str	r3, [r4]
1617:Veno-Echo.cpp ****         {
 7846              		.loc 20 1617 9 is_stmt 1 view .LVU2179
 7847 0080 7AD0     		beq	.L460
 7848              	.L430:
1623:Veno-Echo.cpp ****     {
 7849              		.loc 20 1623 5 view .LVU2180
1623:Veno-Echo.cpp ****     {
 7850              		.loc 20 1623 29 is_stmt 0 view .LVU2181
 7851 0082 4448     		ldr	r0, .L465+4
 7852 0084 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 7853              	.LVL491:
1623:Veno-Echo.cpp ****     {
 7854              		.loc 20 1623 5 view .LVU2182
 7855 0088 10B1     		cbz	r0, .L432
1625:Veno-Echo.cpp ****     }
 7856              		.loc 20 1625 9 is_stmt 1 view .LVU2183
1625:Veno-Echo.cpp ****     }
 7857              		.loc 20 1625 21 is_stmt 0 view .LVU2184
 7858 008a 2368     		ldr	r3, [r4]
 7859 008c 013B     		subs	r3, r3, #1
 7860 008e 2360     		str	r3, [r4]
 7861              	.L432:
1628:Veno-Echo.cpp ****     {
 7862              		.loc 20 1628 5 is_stmt 1 view .LVU2185
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 258


1628:Veno-Echo.cpp ****     {
 7863              		.loc 20 1628 30 is_stmt 0 view .LVU2186
 7864 0090 4448     		ldr	r0, .L465+20
 7865 0092 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 7866              	.LVL492:
1628:Veno-Echo.cpp ****     {
 7867              		.loc 20 1628 5 view .LVU2187
 7868 0096 0028     		cmp	r0, #0
 7869 0098 4CD1     		bne	.L461
 7870              	.L434:
1647:Veno-Echo.cpp ****     {
 7871              		.loc 20 1647 5 is_stmt 1 view .LVU2188
1647:Veno-Echo.cpp ****     {
 7872              		.loc 20 1647 31 is_stmt 0 view .LVU2189
 7873 009a 4248     		ldr	r0, .L465+20
 7874 009c FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 7875              	.LVL493:
1647:Veno-Echo.cpp ****     {
 7876              		.loc 20 1647 5 view .LVU2190
 7877 00a0 38B1     		cbz	r0, .L437
1649:Veno-Echo.cpp ****         buttonstate -= 1;
 7878              		.loc 20 1649 9 is_stmt 1 view .LVU2191
1650:Veno-Echo.cpp ****         mute = false;
 7879              		.loc 20 1650 21 is_stmt 0 view .LVU2192
 7880 00a2 2368     		ldr	r3, [r4]
1649:Veno-Echo.cpp ****         buttonstate -= 1;
 7881              		.loc 20 1649 15 view .LVU2193
 7882 00a4 0022     		movs	r2, #0
 7883 00a6 4448     		ldr	r0, .L465+40
1650:Veno-Echo.cpp ****         mute = false;
 7884              		.loc 20 1650 21 view .LVU2194
 7885 00a8 013B     		subs	r3, r3, #1
1651:Veno-Echo.cpp ****     }
 7886              		.loc 20 1651 14 view .LVU2195
 7887 00aa 4449     		ldr	r1, .L465+44
1649:Veno-Echo.cpp ****         buttonstate -= 1;
 7888              		.loc 20 1649 15 view .LVU2196
 7889 00ac 0270     		strb	r2, [r0]
1650:Veno-Echo.cpp ****         mute = false;
 7890              		.loc 20 1650 9 is_stmt 1 view .LVU2197
1650:Veno-Echo.cpp ****         mute = false;
 7891              		.loc 20 1650 21 is_stmt 0 view .LVU2198
 7892 00ae 2360     		str	r3, [r4]
1651:Veno-Echo.cpp ****     }
 7893              		.loc 20 1651 9 is_stmt 1 view .LVU2199
1651:Veno-Echo.cpp ****     }
 7894              		.loc 20 1651 14 is_stmt 0 view .LVU2200
 7895 00b0 0A70     		strb	r2, [r1]
 7896              	.L437:
1654:Veno-Echo.cpp ****     {
 7897              		.loc 20 1654 5 is_stmt 1 view .LVU2201
1654:Veno-Echo.cpp ****     {
 7898              		.loc 20 1654 28 is_stmt 0 view .LVU2202
 7899 00b2 3C48     		ldr	r0, .L465+20
 7900 00b4 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7901              	.LVL494:
1654:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 259


 7902              		.loc 20 1654 5 view .LVU2203
 7903 00b8 60B9     		cbnz	r0, .L462
 7904              	.L439:
1662:Veno-Echo.cpp ****     {
 7905              		.loc 20 1662 5 is_stmt 1 view .LVU2204
 7906 00ba 2368     		ldr	r3, [r4]
 7907 00bc 032B     		cmp	r3, #3
 7908 00be 16D0     		beq	.L463
 7909              	.L442:
1678:Veno-Echo.cpp **** 
 7910              		.loc 20 1678 5 view .LVU2205
 7911              	.LBB1500:
 7912              	.LBI1500:
  70:../libdaisy/src/hid/switch.h **** 
  71:../libdaisy/src/hid/switch.h ****     /** \return true if the button was just released */
  72:../libdaisy/src/hid/switch.h ****     inline bool FallingEdge() const { return state_ == 0x80; }
  73:../libdaisy/src/hid/switch.h **** 
  74:../libdaisy/src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  75:../libdaisy/src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 7913              		.loc 1 75 17 view .LVU2206
 7914              	.LVL495:
 7915              	.LBB1501:
 7916              		.loc 1 75 35 view .LVU2207
 7917              	.LBE1501:
 7918              	.LBE1500:
1678:Veno-Echo.cpp **** 
 7919              		.loc 20 1678 31 is_stmt 0 view .LVU2208
 7920 00c0 3A4B     		ldr	r3, .L465+28
1678:Veno-Echo.cpp **** 
 7921              		.loc 20 1678 14 view .LVU2209
 7922 00c2 3F4A     		ldr	r2, .L465+48
 7923              	.LBB1503:
 7924              	.LBB1502:
 7925              		.loc 1 75 52 view .LVU2210
 7926 00c4 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 7927 00c6 A3F1FF03 		sub	r3, #255
 7928 00ca B3FA83F3 		clz	r3, r3
 7929 00ce 5B09     		lsrs	r3, r3, #5
 7930 00d0 1370     		strb	r3, [r2]
 7931              	.LBE1502:
 7932              	.LBE1503:
1683:Veno-Echo.cpp **** 
 7933              		.loc 20 1683 1 view .LVU2211
 7934 00d2 70BD     		pop	{r4, r5, r6, pc}
 7935              	.LVL496:
 7936              	.L462:
1656:Veno-Echo.cpp ****         {
 7937              		.loc 20 1656 9 is_stmt 1 view .LVU2212
1656:Veno-Echo.cpp ****         {
 7938              		.loc 20 1656 29 is_stmt 0 view .LVU2213
 7939 00d4 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7940              	.LVL497:
1656:Veno-Echo.cpp ****         {
 7941              		.loc 20 1656 32 view .LVU2214
 7942 00d8 3A4B     		ldr	r3, .L465+52
 7943 00da 1B68     		ldr	r3, [r3]
 7944 00dc C01A     		subs	r0, r0, r3
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 260


1656:Veno-Echo.cpp ****         {
 7945              		.loc 20 1656 9 view .LVU2215
 7946 00de 3228     		cmp	r0, #50
 7947 00e0 EBD9     		bls	.L439
1658:Veno-Echo.cpp ****         } 
 7948              		.loc 20 1658 13 is_stmt 1 view .LVU2216
1658:Veno-Echo.cpp ****         } 
 7949              		.loc 20 1658 19 is_stmt 0 view .LVU2217
 7950 00e2 354B     		ldr	r3, .L465+40
 7951 00e4 0122     		movs	r2, #1
 7952 00e6 1A70     		strb	r2, [r3]
1662:Veno-Echo.cpp ****     {
 7953              		.loc 20 1662 5 is_stmt 1 view .LVU2218
 7954 00e8 2368     		ldr	r3, [r4]
 7955 00ea 032B     		cmp	r3, #3
 7956 00ec E8D1     		bne	.L442
 7957              	.L463:
1665:Veno-Echo.cpp ****             {
 7958              		.loc 20 1665 13 view .LVU2219
1665:Veno-Echo.cpp ****             {
 7959              		.loc 20 1665 36 is_stmt 0 view .LVU2220
 7960 00ee 364E     		ldr	r6, .L465+56
1665:Veno-Echo.cpp ****             {
 7961              		.loc 20 1665 33 view .LVU2221
 7962 00f0 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7963              	.LVL498:
1665:Veno-Echo.cpp ****             {
 7964              		.loc 20 1665 13 view .LVU2222
 7965 00f4 40F6B833 		movw	r3, #3000
1665:Veno-Echo.cpp ****             {
 7966              		.loc 20 1665 36 view .LVU2223
 7967 00f8 3268     		ldr	r2, [r6]
 7968 00fa 801A     		subs	r0, r0, r2
1665:Veno-Echo.cpp ****             {
 7969              		.loc 20 1665 13 view .LVU2224
 7970 00fc 9842     		cmp	r0, r3
 7971 00fe DFD9     		bls	.L442
1667:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 7972              		.loc 20 1667 17 is_stmt 1 view .LVU2225
1667:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 7973              		.loc 20 1667 32 is_stmt 0 view .LVU2226
 7974 0100 2348     		ldr	r0, .L465
 7975 0102 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 7976              	.LVL499:
1668:Veno-Echo.cpp ****                 ResetAllLEDs();
 7977              		.loc 20 1668 17 is_stmt 1 view .LVU2227
1668:Veno-Echo.cpp ****                 ResetAllLEDs();
 7978              		.loc 20 1668 32 is_stmt 0 view .LVU2228
 7979 0106 2348     		ldr	r0, .L465+4
 7980 0108 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 7981              	.LVL500:
1669:Veno-Echo.cpp ****                 //don't let reset or shift update
 7982              		.loc 20 1669 17 is_stmt 1 view .LVU2229
1673:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 7983              		.loc 20 1673 29 is_stmt 0 view .LVU2230
 7984 010c 2F4D     		ldr	r5, .L465+60
1669:Veno-Echo.cpp ****                 //don't let reset or shift update
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 261


 7985              		.loc 20 1669 29 view .LVU2231
 7986 010e FFF7FEFF 		bl	_Z12ResetAllLEDsv
 7987              	.LVL501:
1671:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 7988              		.loc 20 1671 17 is_stmt 1 view .LVU2232
1671:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 7989              		.loc 20 1671 23 is_stmt 0 view .LVU2233
 7990 0112 294B     		ldr	r3, .L465+40
 7991 0114 0022     		movs	r2, #0
1672:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 7992              		.loc 20 1672 30 view .LVU2234
 7993 0116 2D48     		ldr	r0, .L465+60
1673:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 7994              		.loc 20 1673 29 view .LVU2235
 7995 0118 2D4C     		ldr	r4, .L465+64
1671:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 7996              		.loc 20 1671 23 view .LVU2236
 7997 011a 1A70     		strb	r2, [r3]
1672:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 7998              		.loc 20 1672 17 is_stmt 1 view .LVU2237
1672:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 7999              		.loc 20 1672 30 is_stmt 0 view .LVU2238
 8000 011c FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 8001              	.LVL502:
1673:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8002              		.loc 20 1673 17 is_stmt 1 view .LVU2239
1673:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8003              		.loc 20 1673 29 is_stmt 0 view .LVU2240
 8004 0120 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8005 0122 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8006 0124 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 8007 0128 84E80F00 		stm	r4, {r0, r1, r2, r3}
1674:Veno-Echo.cpp ****             }
 8008              		.loc 20 1674 17 is_stmt 1 view .LVU2241
1674:Veno-Echo.cpp ****             }
 8009              		.loc 20 1674 43 is_stmt 0 view .LVU2242
 8010 012c FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8011              	.LVL503:
1674:Veno-Echo.cpp ****             }
 8012              		.loc 20 1674 27 view .LVU2243
 8013 0130 3060     		str	r0, [r6]
 8014 0132 C5E7     		b	.L442
 8015              	.L461:
1630:Veno-Echo.cpp ****         {
 8016              		.loc 20 1630 9 is_stmt 1 view .LVU2244
1630:Veno-Echo.cpp ****         {
 8017              		.loc 20 1630 25 is_stmt 0 view .LVU2245
 8018 0134 2748     		ldr	r0, .L465+68
 8019 0136 FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 8020              	.LVL504:
1630:Veno-Echo.cpp ****         {
 8021              		.loc 20 1630 9 view .LVU2246
 8022 013a 10BB     		cbnz	r0, .L464
 8023              	.L435:
1634:Veno-Echo.cpp ****         
 8024              		.loc 20 1634 9 is_stmt 1 view .LVU2247
1634:Veno-Echo.cpp ****         
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 262


 8025              		.loc 20 1634 33 is_stmt 0 view .LVU2248
 8026 013c 2648     		ldr	r0, .L465+72
 8027 013e FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 8028              	.LVL505:
1637:Veno-Echo.cpp ****         buttonstate += 1;
 8029              		.loc 20 1637 9 is_stmt 1 view .LVU2249
1637:Veno-Echo.cpp ****         buttonstate += 1;
 8030              		.loc 20 1637 35 is_stmt 0 view .LVU2250
 8031 0142 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8032              	.LVL506:
1638:Veno-Echo.cpp ****         
 8033              		.loc 20 1638 21 view .LVU2251
 8034 0146 2368     		ldr	r3, [r4]
1637:Veno-Echo.cpp ****         buttonstate += 1;
 8035              		.loc 20 1637 19 view .LVU2252
 8036 0148 1E4A     		ldr	r2, .L465+52
1638:Veno-Echo.cpp ****         
 8037              		.loc 20 1638 21 view .LVU2253
 8038 014a 0133     		adds	r3, r3, #1
1637:Veno-Echo.cpp ****         buttonstate += 1;
 8039              		.loc 20 1637 19 view .LVU2254
 8040 014c 1060     		str	r0, [r2]
1638:Veno-Echo.cpp ****         
 8041              		.loc 20 1638 9 is_stmt 1 view .LVU2255
1640:Veno-Echo.cpp ****         {
 8042              		.loc 20 1640 9 is_stmt 0 view .LVU2256
 8043 014e 032B     		cmp	r3, #3
1638:Veno-Echo.cpp ****         
 8044              		.loc 20 1638 21 view .LVU2257
 8045 0150 2360     		str	r3, [r4]
1640:Veno-Echo.cpp ****         {
 8046              		.loc 20 1640 9 is_stmt 1 view .LVU2258
 8047 0152 A2D1     		bne	.L434
1642:Veno-Echo.cpp ****         }
 8048              		.loc 20 1642 13 view .LVU2259
1642:Veno-Echo.cpp ****         }
 8049              		.loc 20 1642 39 is_stmt 0 view .LVU2260
 8050 0154 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8051              	.LVL507:
1642:Veno-Echo.cpp ****         }
 8052              		.loc 20 1642 23 view .LVU2261
 8053 0158 1B4B     		ldr	r3, .L465+56
 8054 015a 1860     		str	r0, [r3]
 8055 015c 9DE7     		b	.L434
 8056              	.L458:
1594:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 8057              		.loc 20 1594 9 is_stmt 1 view .LVU2262
1594:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 8058              		.loc 20 1594 24 is_stmt 0 view .LVU2263
 8059 015e 0D48     		ldr	r0, .L465+4
 8060 0160 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8061              	.LVL508:
 8062 0164 72E7     		b	.L424
 8063              	.LVL509:
 8064              	.L457:
1588:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 8065              		.loc 20 1588 9 is_stmt 1 view .LVU2264
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 263


1588:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 8066              		.loc 20 1588 24 is_stmt 0 view .LVU2265
 8067 0166 0A48     		ldr	r0, .L465
 8068 0168 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8069              	.LVL510:
 8070 016c 69E7     		b	.L423
 8071              	.LVL511:
 8072              	.L459:
1605:Veno-Echo.cpp ****         }
 8073              		.loc 20 1605 13 is_stmt 1 view .LVU2266
1605:Veno-Echo.cpp ****         }
 8074              		.loc 20 1605 39 is_stmt 0 view .LVU2267
 8075 016e FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8076              	.LVL512:
1605:Veno-Echo.cpp ****         }
 8077              		.loc 20 1605 23 view .LVU2268
 8078 0172 154B     		ldr	r3, .L465+56
 8079 0174 1860     		str	r0, [r3]
 8080 0176 74E7     		b	.L426
 8081              	.L460:
1619:Veno-Echo.cpp ****         }
 8082              		.loc 20 1619 13 is_stmt 1 view .LVU2269
1619:Veno-Echo.cpp ****         }
 8083              		.loc 20 1619 39 is_stmt 0 view .LVU2270
 8084 0178 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8085              	.LVL513:
1619:Veno-Echo.cpp ****         }
 8086              		.loc 20 1619 23 view .LVU2271
 8087 017c 124B     		ldr	r3, .L465+56
 8088 017e 1860     		str	r0, [r3]
 8089 0180 7FE7     		b	.L430
 8090              	.L464:
1632:Veno-Echo.cpp ****         }
 8091              		.loc 20 1632 13 is_stmt 1 view .LVU2272
1632:Veno-Echo.cpp ****         }
 8092              		.loc 20 1632 35 is_stmt 0 view .LVU2273
 8093 0182 1448     		ldr	r0, .L465+68
 8094 0184 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 8095              	.LVL514:
 8096 0188 1348     		ldr	r0, .L465+72
 8097 018a FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 8098              	.LVL515:
 8099 018e D5E7     		b	.L435
 8100              	.L466:
 8101              		.align	2
 8102              	.L465:
 8103 0190 00000000 		.word	.LANCHOR94
 8104 0194 00000000 		.word	.LANCHOR95
 8105 0198 00000000 		.word	.LANCHOR92
 8106 019c 00000000 		.word	.LANCHOR97
 8107 01a0 00000000 		.word	.LANCHOR93
 8108 01a4 00000000 		.word	.LANCHOR96
 8109 01a8 00000000 		.word	.LANCHOR98
 8110 01ac 00000000 		.word	.LANCHOR99
 8111 01b0 00000000 		.word	.LANCHOR87
 8112 01b4 00000000 		.word	.LANCHOR109
 8113 01b8 00000000 		.word	.LANCHOR7
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 264


 8114 01bc 00000000 		.word	.LANCHOR112
 8115 01c0 00000000 		.word	.LANCHOR12
 8116 01c4 00000000 		.word	.LANCHOR111
 8117 01c8 00000000 		.word	.LANCHOR110
 8118 01cc 00000000 		.word	.LANCHOR108
 8119 01d0 00000000 		.word	.LANCHOR15
 8120 01d4 00000000 		.word	.LANCHOR25
 8121 01d8 00000000 		.word	.LANCHOR88
 8122              		.cfi_endproc
 8123              	.LFE4329:
 8125              		.section	.text._ZL13AudioCallbackPfS_j,"ax",%progbits
 8126              		.align	1
 8127              		.p2align 2,,3
 8128              		.syntax unified
 8129              		.thumb
 8130              		.thumb_func
 8131              		.fpu fpv5-d16
 8133              	_ZL13AudioCallbackPfS_j:
 8134              	.LVL516:
 8135              	.LFB4309:
 242:Veno-Echo.cpp **** 
 8136              		.loc 20 242 1 is_stmt 1 view -0
 8137              		.cfi_startproc
 8138              		@ args = 0, pretend = 0, frame = 72
 8139              		@ frame_needed = 0, uses_anonymous_args = 0
 253:Veno-Echo.cpp **** 
 8140              		.loc 20 253 1 view .LVU2275
 271:Veno-Echo.cpp **** 
 8141              		.loc 20 271 1 view .LVU2276
 271:Veno-Echo.cpp **** 
 8142              		.loc 20 271 9 is_stmt 0 view .LVU2277
 8143 0000 DFF894C0 		ldr	ip, .L584+8
 271:Veno-Echo.cpp **** 
 8144              		.loc 20 271 20 view .LVU2278
 8145 0004 DCF80030 		ldr	r3, [ip]
 242:Veno-Echo.cpp **** 
 8146              		.loc 20 242 1 view .LVU2279
 8147 0008 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8148              		.cfi_def_cfa_offset 36
 8149              		.cfi_offset 4, -36
 8150              		.cfi_offset 5, -32
 8151              		.cfi_offset 6, -28
 8152              		.cfi_offset 7, -24
 8153              		.cfi_offset 8, -20
 8154              		.cfi_offset 9, -16
 8155              		.cfi_offset 10, -12
 8156              		.cfi_offset 11, -8
 8157              		.cfi_offset 14, -4
 271:Veno-Echo.cpp **** 
 8158              		.loc 20 271 20 view .LVU2280
 8159 000c 0133     		adds	r3, r3, #1
 271:Veno-Echo.cpp **** 
 8160              		.loc 20 271 25 view .LVU2281
 8161 000e 204C     		ldr	r4, .L584
 242:Veno-Echo.cpp **** 
 8162              		.loc 20 242 1 view .LVU2282
 8163 0010 0646     		mov	r6, r0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 265


 8164 0012 1546     		mov	r5, r2
 271:Veno-Echo.cpp **** 
 8165              		.loc 20 271 25 view .LVU2283
 8166 0014 84FB0302 		smull	r0, r2, r4, r3
 8167              	.LVL517:
 271:Veno-Echo.cpp **** 
 8168              		.loc 20 271 25 view .LVU2284
 8169 0018 DC17     		asrs	r4, r3, #31
 242:Veno-Echo.cpp **** 
 8170              		.loc 20 242 1 view .LVU2285
 8171 001a 0F46     		mov	r7, r1
 8172              	.LBB1593:
 8173              	.LBB1594:
 8174              	.LBB1595:
 8175              		.file 24 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** /** @file bits/atomic_base.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  Do not attempt to use it directly. @headername{atomic}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ATOMIC_BASE_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ATOMIC_BASE_H 1
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <stdint.h>
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/atomic_lockfree_defines.h>
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 266


  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** namespace std _GLIBCXX_VISIBILITY(default)
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** {
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @defgroup atomics Atomics
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * Components for performing atomic operations.
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @{
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    */
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Enumeration for memory_order
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __cplusplus > 201703L
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum class memory_order : int
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       relaxed,
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       consume,
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acquire,
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       release,
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acq_rel,
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       seq_cst
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_relaxed = memory_order::relaxed;
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_consume = memory_order::consume;
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acquire = memory_order::acquire;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_release = memory_order::release;
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acq_rel = memory_order::acq_rel;
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_seq_cst = memory_order::seq_cst;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   typedef enum memory_order
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_relaxed,
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_consume,
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acquire,
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_release,
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acq_rel,
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_seq_cst
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     } memory_order;
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum __memory_order_modifier
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_mask          = 0x0ffff,
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_modifier_mask = 0xffff0000,
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_acquire   = 0x10000,
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_release   = 0x20000
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator|(memory_order __m, __memory_order_modifier __mod)
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) | int(__mod));
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator&(memory_order __m, __memory_order_modifier __mod)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 267


 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) & int(__mod));
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Drop release ordering as per [atomics.types.operations.req]/21
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order2(memory_order __m) noexcept
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return __m == memory_order_acq_rel ? memory_order_acquire
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __m == memory_order_release ? memory_order_relaxed : __m;
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order(memory_order __m) noexcept
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(__cmpexch_failure_order2(__m & __memory_order_mask)
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       | __memory_order_modifier(__m & __memory_order_modifier_mask));
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_thread_fence(memory_order __m) noexcept
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_thread_fence(int(__m)); }
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_signal_fence(memory_order __m) noexcept
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_signal_fence(int(__m)); }
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// kill_dependency
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     inline _Tp
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     kill_dependency(_Tp __y) noexcept
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _Tp __ret(__y);
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __ret;
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Base types for atomics.
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _IntTp>
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base;
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_VAR_INIT(_VI) { _VI }
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic;
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic<_Tp*>;
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     /* The target's "set" value for test-and-set may not be exactly 1.  */
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __GCC_ATOMIC_TEST_AND_SET_TRUEVAL == 1
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef bool __atomic_flag_data_type;
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef unsigned char __atomic_flag_data_type;
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 268


 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  @brief Base type for atomic_flag.
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  Base type is POD with data, allowing atomic_flag to derive from
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  it and meet the standard layout type requirement. In addition to
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  compatibility with a C interface, this allows different
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  implementations of atomic_flag to use the same atomic operation
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  functions, via a standard conversion to the __atomic_flag_base
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  argument.
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   */
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_BEGIN_EXTERN_C
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct __atomic_flag_base
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     __atomic_flag_data_type _M_i;
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_END_EXTERN_C
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_FLAG_INIT { 0 }
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// atomic_flag
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct atomic_flag : public __atomic_flag_base
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag() noexcept = default;
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     ~atomic_flag() noexcept = default;
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag(const atomic_flag&) = delete;
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) = delete;
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) volatile = delete;
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     // Conversion to ATOMIC_FLAG_INIT.
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     constexpr atomic_flag(bool __i) noexcept
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __atomic_flag_base{ _S_init(__i) }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { }
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) noexcept
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) volatile noexcept
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) noexcept
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 269


 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) volatile noexcept
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   private:
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     static constexpr __atomic_flag_data_type
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _S_init(bool __i)
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { return __i ? __GCC_ATOMIC_TEST_AND_SET_TRUEVAL : 0; }
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Base class for atomic integrals.
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // For each of the integral types, define atomic_[integral type] struct
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_bool     bool
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char     char
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_schar    signed char
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uchar    unsigned char
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_short    short
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ushort   unsigned short
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_int      int
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uint     unsigned int
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_long     long
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ulong    unsigned long
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_llong    long long
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ullong   unsigned long long
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char8_t  char8_t
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char16_t char16_t
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char32_t char32_t
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_wchar_t  wchar_t
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // NB: Assuming _ITp is an integral scalar type that is 1, 2, 4, or
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // 8 bytes, since that is what GCC built-in functions for atomic
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // memory access expect.
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _ITp>
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using value_type = _ITp;
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using difference_type = value_type;
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     private:
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       typedef _ITp 	__int_type;
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       static constexpr int _S_alignment =
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	sizeof(_ITp) > alignof(_ITp) ? sizeof(_ITp) : alignof(_ITp);
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       alignas(_S_alignment) __int_type _M_i;
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 270


 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     public:
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base() noexcept = default;
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       ~__atomic_base() noexcept = default;
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base(const __atomic_base&) = delete;
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) = delete;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) volatile = delete;
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       // Requires __int_type convertible to _M_i.
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       constexpr __atomic_base(__int_type __i) noexcept : _M_i (__i) { }
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const noexcept
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const volatile noexcept
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) noexcept
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) volatile noexcept
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) noexcept
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) volatile noexcept
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) noexcept
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) volatile noexcept
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() noexcept
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() volatile noexcept
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() noexcept
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 271


 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() volatile noexcept
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) noexcept
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) volatile noexcept
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) noexcept
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) volatile noexcept
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) noexcept
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) volatile noexcept
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) noexcept
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) volatile noexcept
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) noexcept
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) volatile noexcept
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const noexcept
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const volatile noexcept
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 272


 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i, memory_order __m = memory_order_seq_cst) noexcept
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i,
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    memory_order __m = memory_order_seq_cst) volatile noexcept
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE __int_type
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       load(memory_order __m = memory_order_seq_cst) const noexcept
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_release);
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_load_n(&_M_i, int(__m));
 8176              		.loc 24 419 24 view .LVU2286
 8177 001c 1D49     		ldr	r1, .L584+4
 8178              	.LVL518:
 8179              		.loc 24 419 24 view .LVU2287
 8180              	.LBE1595:
 8181              	.LBE1594:
 8182              	.LBE1593:
 271:Veno-Echo.cpp **** 
 8183              		.loc 20 271 25 view .LVU2288
 8184 001e 1A44     		add	r2, r2, r3
 8185 0020 C4EBE204 		rsb	r4, r4, r2, asr #3
 8186 0024 C4EB0414 		rsb	r4, r4, r4, lsl #4
 8187 0028 1B1B     		subs	r3, r3, r4
 242:Veno-Echo.cpp **** 
 8188              		.loc 20 242 1 view .LVU2289
 8189 002a 2DED0E8B 		vpush.64	{d8, d9, d10, d11, d12, d13, d14}
 8190              		.cfi_def_cfa_offset 92
 8191              		.cfi_offset 80, -92
 8192              		.cfi_offset 81, -88
 8193              		.cfi_offset 82, -84
 8194              		.cfi_offset 83, -80
 8195              		.cfi_offset 84, -76
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 273


 8196              		.cfi_offset 85, -72
 8197              		.cfi_offset 86, -68
 8198              		.cfi_offset 87, -64
 8199              		.cfi_offset 88, -60
 8200              		.cfi_offset 89, -56
 8201              		.cfi_offset 90, -52
 8202              		.cfi_offset 91, -48
 8203              		.cfi_offset 92, -44
 8204              		.cfi_offset 93, -40
 271:Veno-Echo.cpp **** 
 8205              		.loc 20 271 9 view .LVU2290
 8206 002e CCF80030 		str	r3, [ip]
 273:Veno-Echo.cpp **** {
 8207              		.loc 20 273 1 is_stmt 1 view .LVU2291
 8208              	.LVL519:
 8209              	.LBB1600:
 8210              	.LBI1593:
 8211              		.file 25 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** /** @file include/atomic
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  *  This is a Standard C++ Library header.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  */
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Based on "C++ Atomic Types and Operations" by Hans Boehm and Lawrence Crowl.
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2427.html
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #ifndef _GLIBCXX_ATOMIC
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #define _GLIBCXX_ATOMIC 1
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #pragma GCC system_header
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus < 201103L
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # include <bits/c++0x_warning.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #else
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 274


  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/atomic_base.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/move.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** namespace std _GLIBCXX_VISIBILITY(default)
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** {
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /**
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @addtogroup atomics
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @{
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    */
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus >= 201703L
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # define __cpp_lib_atomic_is_always_lock_free 201603
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #endif
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<typename _Tp>
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     struct atomic;
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /// atomic<bool>
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   // NB: No operators or fetch-operations for this type.
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<>
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   struct atomic<bool>
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   {
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     using value_type = bool;
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   private:
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     __atomic_base<bool>	_M_base;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   public:
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic() noexcept = default;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     ~atomic() noexcept = default;
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic(const atomic&) = delete;
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) = delete;
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) volatile = delete;
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     constexpr atomic(bool __i) noexcept : _M_base(__i) { }
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) noexcept
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) volatile noexcept
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator bool() const noexcept
 8212              		.loc 25 87 5 view .LVU2292
 8213              	.LBE1600:
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.load(); }
 8214              		.loc 25 88 7 view .LVU2293
 8215              	.LBB1601:
 8216              	.LBB1598:
 8217              	.LBI1594:
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8218              		.loc 24 413 7 view .LVU2294
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 275


 8219              	.LBB1596:
 8220              		.loc 24 419 24 is_stmt 0 view .LVU2295
 8221 0032 BFF35B8F 		dmb	ish
 8222 0036 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 8223              	.LBE1596:
 8224              	.LBE1598:
 8225              	.LBE1601:
 242:Veno-Echo.cpp **** 
 8226              		.loc 20 242 1 view .LVU2296
 8227 0038 93B0     		sub	sp, sp, #76
 8228              		.cfi_def_cfa_offset 168
 8229              	.LBB1602:
 8230              	.LBB1599:
 8231              	.LBB1597:
 8232              		.loc 24 419 24 view .LVU2297
 8233 003a BFF35B8F 		dmb	ish
 8234              	.LBE1597:
 8235              	.LBE1599:
 8236              	.LBE1602:
 273:Veno-Echo.cpp **** {
 8237              		.loc 20 273 1 view .LVU2298
 8238 003e B3B9     		cbnz	r3, .L468
 286:Veno-Echo.cpp ****         {
 8239              		.loc 20 286 9 is_stmt 1 view .LVU2299
 8240 0040 DCF80030 		ldr	r3, [ip]
 8241 0044 0E2B     		cmp	r3, #14
 8242 0046 12D8     		bhi	.L468
 8243 0048 DFE813F0 		tbh	[pc, r3, lsl #1]
 8244              	.L470:
 8245 004c 2606     		.2byte	(.L484-.L470)/2
 8246 004e 1D06     		.2byte	(.L483-.L470)/2
 8247 0050 1906     		.2byte	(.L482-.L470)/2
 8248 0052 1006     		.2byte	(.L481-.L470)/2
 8249 0054 0C06     		.2byte	(.L480-.L470)/2
 8250 0056 0306     		.2byte	(.L479-.L470)/2
 8251 0058 FF05     		.2byte	(.L478-.L470)/2
 8252 005a F605     		.2byte	(.L477-.L470)/2
 8253 005c F205     		.2byte	(.L476-.L470)/2
 8254 005e E905     		.2byte	(.L475-.L470)/2
 8255 0060 E505     		.2byte	(.L474-.L470)/2
 8256 0062 DC05     		.2byte	(.L473-.L470)/2
 8257 0064 D805     		.2byte	(.L472-.L470)/2
 8258 0066 0F00     		.2byte	(.L471-.L470)/2
 8259 0068 D405     		.2byte	(.L469-.L470)/2
 8260              		.p2align 1
 8261              	.L471:
 343:Veno-Echo.cpp ****                 Update_crossfeedback();
 8262              		.loc 20 343 13 view .LVU2300
 344:Veno-Echo.cpp ****             break;
 8263              		.loc 20 344 17 view .LVU2301
 344:Veno-Echo.cpp ****             break;
 8264              		.loc 20 344 37 is_stmt 0 view .LVU2302
 8265 006a FFF7FEFF 		bl	_Z20Update_crossfeedbackv
 8266              	.LVL520:
 345:Veno-Echo.cpp **** 
 8267              		.loc 20 345 13 is_stmt 1 view .LVU2303
 8268              	.L468:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 276


 8269              	.LBB1603:
 353:Veno-Echo.cpp ****     {   
 8270              		.loc 20 353 25 discriminator 1 view .LVU2304
 8271 006e 002D     		cmp	r5, #0
 8272 0070 00F0A885 		beq	.L467
 353:Veno-Echo.cpp ****     {   
 8273              		.loc 20 353 25 is_stmt 0 view .LVU2305
 8274 0074 0023     		movs	r3, #0
 8275 0076 013D     		subs	r5, r5, #1
 8276              	.LVL521:
 353:Veno-Echo.cpp ****     {   
 8277              		.loc 20 353 25 view .LVU2306
 8278 0078 DFF82080 		ldr	r8, .L584+12
 8279 007c B346     		mov	fp, r6
 8280 007e 0293     		str	r3, [sp, #8]
 8281 0080 25F00103 		bic	r3, r5, #1
 8282 0084 DFF81890 		ldr	r9, .L584+16
 8283 0088 0097     		str	r7, [sp]
 8284 008a 0593     		str	r3, [sp, #20]
 8285 008c 8FE0     		b	.L540
 8286              	.L585:
 8287 008e 00BF     		.align	2
 8288              	.L584:
 8289 0090 89888888 		.word	-2004318071
 8290 0094 00000000 		.word	.LANCHOR114
 8291 0098 00000000 		.word	.LANCHOR113
 8292 009c 00000000 		.word	.LANCHOR129
 8293 00a0 00000000 		.word	.LANCHOR130
 8294              	.LVL522:
 8295              	.L583:
 8296              	.LBB1604:
 8297              	.LBB1605:
 8298              	.LBB1606:
1866:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8299              		.loc 20 1866 10 is_stmt 1 view .LVU2307
 8300 00a4 F8EE007A 		vmov.f32	s15, #-2.0e+0
1867:Veno-Echo.cpp ****     else
 8301              		.loc 20 1867 19 is_stmt 0 view .LVU2308
 8302 00a8 B4EE678A 		vcmp.f32	s16, s15
 8303 00ac F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8304 00b0 48BF     		it	mi
 8305 00b2 B0EE678A 		vmovmi.f32	s16, s15
 8306              	.LVL523:
 8307              	.L522:
1871:Veno-Echo.cpp **** }
 8308              		.loc 20 1871 5 is_stmt 1 view .LVU2309
1871:Veno-Echo.cpp **** }
 8309              		.loc 20 1871 5 is_stmt 0 view .LVU2310
 8310              	.LBE1606:
 8311              	.LBE1605:
 494:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8312              		.loc 20 494 9 is_stmt 1 view .LVU2311
 494:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8313              		.loc 20 494 42 is_stmt 0 view .LVU2312
 8314 00b6 D848     		ldr	r0, .L586
 8315 00b8 FFF7FEFF 		bl	_ZN7daisysp7DcBlock7ProcessEf
 8316              	.LVL524:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 277


 494:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8317              		.loc 20 494 21 view .LVU2313
 8318 00bc 11A9     		add	r1, sp, #68
 8319 00be D748     		ldr	r0, .L586+4
 494:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8320              		.loc 20 494 42 view .LVU2314
 8321 00c0 8DED110A 		vstr.32	s0, [sp, #68]
 494:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8322              		.loc 20 494 21 view .LVU2315
 8323 00c4 FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 8324              	.LVL525:
 495:Veno-Echo.cpp **** 
 8325              		.loc 20 495 9 is_stmt 1 view .LVU2316
 495:Veno-Echo.cpp **** 
 8326              		.loc 20 495 42 is_stmt 0 view .LVU2317
 8327 00c8 D548     		ldr	r0, .L586+8
 8328 00ca B0EE480A 		vmov.f32	s0, s16
 8329 00ce FFF7FEFF 		bl	_ZN7daisysp7DcBlock7ProcessEf
 8330              	.LVL526:
 495:Veno-Echo.cpp **** 
 8331              		.loc 20 495 21 view .LVU2318
 8332 00d2 11A9     		add	r1, sp, #68
 8333 00d4 D348     		ldr	r0, .L586+12
 495:Veno-Echo.cpp **** 
 8334              		.loc 20 495 42 view .LVU2319
 8335 00d6 8DED110A 		vstr.32	s0, [sp, #68]
 495:Veno-Echo.cpp **** 
 8336              		.loc 20 495 21 view .LVU2320
 8337 00da FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 8338              	.LVL527:
 498:Veno-Echo.cpp ****         float mixR;
 8339              		.loc 20 498 9 is_stmt 1 view .LVU2321
 499:Veno-Echo.cpp **** 
 8340              		.loc 20 499 9 view .LVU2322
 501:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 8341              		.loc 20 501 9 view .LVU2323
 501:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 8342              		.loc 20 501 53 is_stmt 0 view .LVU2324
 8343 00de 09AA     		add	r2, sp, #36
 8344 00e0 08A9     		add	r1, sp, #32
 8345 00e2 D148     		ldr	r0, .L586+16
 8346 00e4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 8347              	.LVL528:
 502:Veno-Echo.cpp **** 
 8348              		.loc 20 502 53 view .LVU2325
 8349 00e8 08AA     		add	r2, sp, #32
 8350 00ea 09A9     		add	r1, sp, #36
 8351 00ec CE48     		ldr	r0, .L586+16
 501:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 8352              		.loc 20 501 81 view .LVU2326
 8353 00ee 8DED0A0A 		vstr.32	s0, [sp, #40]
 502:Veno-Echo.cpp **** 
 8354              		.loc 20 502 9 is_stmt 1 view .LVU2327
 502:Veno-Echo.cpp **** 
 8355              		.loc 20 502 53 is_stmt 0 view .LVU2328
 8356 00f2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 8357              	.LVL529:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 278


 8358              	.LBB1608:
 8359              	.LBB1609:
1864:Veno-Echo.cpp ****         returnval = limit;
 8360              		.loc 20 1864 5 view .LVU2329
 8361 00f6 B0EE007A 		vmov.f32	s14, #2.0e+0
 8362              	.LBE1609:
 8363              	.LBE1608:
 505:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 8364              		.loc 20 505 38 view .LVU2330
 8365 00fa DDED0A7A 		vldr.32	s15, [sp, #40]
 505:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 8366              		.loc 20 505 9 is_stmt 1 view .LVU2331
 8367              	.LVL530:
 8368              	.LBB1612:
 8369              	.LBI1608:
1861:Veno-Echo.cpp **** {
 8370              		.loc 20 1861 7 view .LVU2332
 8371              	.LBB1610:
1863:Veno-Echo.cpp ****     if (input > limit)
 8372              		.loc 20 1863 5 view .LVU2333
1864:Veno-Echo.cpp ****         returnval = limit;
 8373              		.loc 20 1864 5 view .LVU2334
 8374 00fe F4EEC77A 		vcmpe.f32	s15, s14
 8375 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8376 0106 00F30285 		bgt	.L552
1866:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8377              		.loc 20 1866 10 view .LVU2335
 8378 010a B8EE007A 		vmov.f32	s14, #-2.0e+0
1867:Veno-Echo.cpp ****     else
 8379              		.loc 20 1867 19 is_stmt 0 view .LVU2336
 8380 010e F4EE477A 		vcmp.f32	s15, s14
 8381 0112 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8382 0116 48BF     		it	mi
 8383 0118 F0EE477A 		vmovmi.f32	s15, s14
 8384              	.LVL531:
 8385              	.L524:
1871:Veno-Echo.cpp **** }
 8386              		.loc 20 1871 5 is_stmt 1 view .LVU2337
1871:Veno-Echo.cpp **** }
 8387              		.loc 20 1871 5 is_stmt 0 view .LVU2338
 8388              	.LBE1610:
 8389              	.LBE1612:
 8390              	.LBB1613:
 8391              	.LBB1614:
1864:Veno-Echo.cpp ****         returnval = limit;
 8392              		.loc 20 1864 5 view .LVU2339
 8393 011c B0EE007A 		vmov.f32	s14, #2.0e+0
 8394              	.LBE1614:
 8395              	.LBE1613:
 505:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 8396              		.loc 20 505 27 view .LVU2340
 8397 0120 CDED0A7A 		vstr.32	s15, [sp, #40]
 506:Veno-Echo.cpp **** 
 8398              		.loc 20 506 9 is_stmt 1 view .LVU2341
 8399              	.LVL532:
 8400              	.LBB1618:
 8401              	.LBI1613:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 279


1861:Veno-Echo.cpp **** {
 8402              		.loc 20 1861 7 view .LVU2342
 8403              	.LBB1615:
1863:Veno-Echo.cpp ****     if (input > limit)
 8404              		.loc 20 1863 5 view .LVU2343
1864:Veno-Echo.cpp ****         returnval = limit;
 8405              		.loc 20 1864 5 view .LVU2344
 8406 0124 B4EEC70A 		vcmpe.f32	s0, s14
 8407 0128 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8408 012c 00F35784 		bgt	.L553
1866:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8409              		.loc 20 1866 10 view .LVU2345
 8410 0130 B8EE007A 		vmov.f32	s14, #-2.0e+0
 8411              	.LBE1615:
 8412              	.LBE1618:
 8413              	.LBB1619:
 508:Veno-Echo.cpp **** {
 8414              		.loc 20 508 1 is_stmt 0 view .LVU2346
 8415 0134 BD4B     		ldr	r3, .L586+20
 8416 0136 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8417              	.LBE1619:
 8418              	.LBB1641:
 8419              	.LBB1616:
1867:Veno-Echo.cpp ****     else
 8420              		.loc 20 1867 19 view .LVU2347
 8421 0138 B4EE470A 		vcmp.f32	s0, s14
 8422 013c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8423 0140 48BF     		it	mi
 8424 0142 B0EE470A 		vmovmi.f32	s0, s14
 8425              	.LVL533:
1871:Veno-Echo.cpp **** }
 8426              		.loc 20 1871 5 is_stmt 1 view .LVU2348
1871:Veno-Echo.cpp **** }
 8427              		.loc 20 1871 5 is_stmt 0 view .LVU2349
 8428              	.LBE1616:
 8429              	.LBE1641:
 506:Veno-Echo.cpp **** 
 8430              		.loc 20 506 27 view .LVU2350
 8431 0146 8DED0B0A 		vstr.32	s0, [sp, #44]
 508:Veno-Echo.cpp **** {
 8432              		.loc 20 508 1 is_stmt 1 view .LVU2351
 8433              	.LBB1642:
 8434 014a 002B     		cmp	r3, #0
 8435 014c 40F05084 		bne	.L580
 8436              	.LVL534:
 8437              	.L528:
 508:Veno-Echo.cpp **** {
 8438              		.loc 20 508 1 is_stmt 0 view .LVU2352
 8439              	.LBE1642:
 549:Veno-Echo.cpp ****         {
 8440              		.loc 20 549 9 is_stmt 1 view .LVU2353
 549:Veno-Echo.cpp ****         {
 8441              		.loc 20 549 19 is_stmt 0 view .LVU2354
 8442 0150 B74B     		ldr	r3, .L586+24
 549:Veno-Echo.cpp ****         {
 8443              		.loc 20 549 9 view .LVU2355
 8444 0152 F6EE006A 		vmov.f32	s13, #5.0e-1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 280


 549:Veno-Echo.cpp ****         {
 8445              		.loc 20 549 19 view .LVU2356
 8446 0156 93ED007A 		vldr.32	s14, [r3]
 549:Veno-Echo.cpp ****         {
 8447              		.loc 20 549 9 view .LVU2357
 8448 015a B4EEE67A 		vcmpe.f32	s14, s13
 8449 015e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8450 0162 40F12A84 		bpl	.L574
 551:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8451              		.loc 20 551 13 is_stmt 1 view .LVU2358
 551:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8452              		.loc 20 551 34 is_stmt 0 view .LVU2359
 8453 0166 37EE077A 		vadd.f32	s14, s14, s14
 551:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8454              		.loc 20 551 18 view .LVU2360
 8455 016a 9BED006A 		vldr.32	s12, [fp]
 552:Veno-Echo.cpp ****         }
 8456              		.loc 20 552 18 view .LVU2361
 8457 016e DBED016A 		vldr.32	s13, [fp, #4]
 551:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8458              		.loc 20 551 18 view .LVU2362
 8459 0172 A7EE276A 		vfma.f32	s12, s14, s15
 552:Veno-Echo.cpp ****         }
 8460              		.loc 20 552 18 view .LVU2363
 8461 0176 E7EE006A 		vfma.f32	s13, s14, s0
 551:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8462              		.loc 20 551 18 view .LVU2364
 8463 017a F0EE467A 		vmov.f32	s15, s12
 8464              	.LVL535:
 552:Veno-Echo.cpp ****         }
 8465              		.loc 20 552 13 is_stmt 1 view .LVU2365
 552:Veno-Echo.cpp ****         }
 8466              		.loc 20 552 18 is_stmt 0 view .LVU2366
 8467 017e B0EE660A 		vmov.f32	s0, s13
 8468              	.LVL536:
 8469              	.L534:
 566:Veno-Echo.cpp ****         {
 8470              		.loc 20 566 9 is_stmt 1 view .LVU2367
 8471 0182 AC4B     		ldr	r3, .L586+28
 8472 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8473 0186 002B     		cmp	r3, #0
 8474 0188 00F01084 		beq	.L537
 568:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 8475              		.loc 20 568 13 view .LVU2368
 568:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 8476              		.loc 20 568 20 is_stmt 0 view .LVU2369
 8477 018c 0023     		movs	r3, #0
 8478 018e 009A     		ldr	r2, [sp]
 8479 0190 1360     		str	r3, [r2]	@ float
 569:Veno-Echo.cpp ****         }
 8480              		.loc 20 569 13 is_stmt 1 view .LVU2370
 569:Veno-Echo.cpp ****         }
 8481              		.loc 20 569 22 is_stmt 0 view .LVU2371
 8482 0192 5360     		str	r3, [r2, #4]	@ float
 8483              	.L538:
 8484              	.LBE1604:
 353:Veno-Echo.cpp ****     {   
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 281


 8485              		.loc 20 353 5 is_stmt 1 discriminator 2 view .LVU2372
 8486 0194 009B     		ldr	r3, [sp]
 8487 0196 0BF1080B 		add	fp, fp, #8
 353:Veno-Echo.cpp ****     {   
 8488              		.loc 20 353 35 is_stmt 0 discriminator 2 view .LVU2373
 8489 019a 029A     		ldr	r2, [sp, #8]
 353:Veno-Echo.cpp ****     {   
 8490              		.loc 20 353 25 discriminator 2 view .LVU2374
 8491 019c 0599     		ldr	r1, [sp, #20]
 8492 019e 0833     		adds	r3, r3, #8
 8493 01a0 8A42     		cmp	r2, r1
 8494 01a2 0093     		str	r3, [sp]
 353:Veno-Echo.cpp ****     {   
 8495              		.loc 20 353 35 discriminator 2 view .LVU2375
 8496 01a4 02F10203 		add	r3, r2, #2
 8497              	.LVL537:
 353:Veno-Echo.cpp ****     {   
 8498              		.loc 20 353 25 is_stmt 1 discriminator 2 view .LVU2376
 8499 01a8 00F00C85 		beq	.L467
 8500 01ac 0293     		str	r3, [sp, #8]
 8501              	.LVL538:
 8502              	.L540:
 8503              	.LBB1978:
 355:Veno-Echo.cpp ****         Update_Mod();
 8504              		.loc 20 355 9 view .LVU2377
 355:Veno-Echo.cpp ****         Update_Mod();
 8505              		.loc 20 355 20 is_stmt 0 view .LVU2378
 8506 01ae FFF7FEFF 		bl	_Z11UpdateClockv
 8507              	.LVL539:
 356:Veno-Echo.cpp **** 
 8508              		.loc 20 356 9 is_stmt 1 view .LVU2379
 8509              	.LBB1643:
 8510              	.LBB1644:
 8511              	.LBB1645:
 8512              	.LBB1646:
  74:delayline_reverse.h **** 
  75:delayline_reverse.h ****     /** sets the delay time in samples
  76:delayline_reverse.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  77:delayline_reverse.h ****     */
  78:delayline_reverse.h ****     inline void SetDelay1(float delay)
  79:delayline_reverse.h ****     {
  80:delayline_reverse.h ****         int32_t int_delay = static_cast<int32_t>(delay);
  81:delayline_reverse.h ****         frac1_             = delay - static_cast<float>(int_delay);
  82:delayline_reverse.h ****         delay1_ = static_cast<size_t>(int_delay) < max_size ? int_delay
  83:delayline_reverse.h ****                                                            : max_size - 1;
  84:delayline_reverse.h ****     }
  85:delayline_reverse.h **** 
  86:delayline_reverse.h ****     /** writes the sample of type T to the delay line, and advances the write ptr
  87:delayline_reverse.h ****     */
  88:delayline_reverse.h ****     inline void Write(const T sample)
  89:delayline_reverse.h ****     {
  90:delayline_reverse.h ****         line_[write_ptr_] = sample;
  91:delayline_reverse.h ****         //advance write ptr in forward direction
  92:delayline_reverse.h ****         write_ptr_        = (write_ptr_ + 1 + max_size) % max_size; //increment forwards
  93:delayline_reverse.h ****         
  94:delayline_reverse.h ****         //increment head difference
  95:delayline_reverse.h ****         headDiff_        = (headDiff_ + 1 + delay1_) % delay1_;   
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 282


  96:delayline_reverse.h **** 
  97:delayline_reverse.h ****         //advance read ptrs in reverse direction
  98:delayline_reverse.h ****         read_ptr1_ = (read_ptr1_ - 1 + max_size) % max_size;
  99:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 100:delayline_reverse.h ****  
 101:delayline_reverse.h ****         if (headDiff_ > (delay1_ - fadetime - 1))  //start cross fade region
 102:delayline_reverse.h ****         {
 103:delayline_reverse.h ****             if(!fading_)
 104:delayline_reverse.h ****             {
 105:delayline_reverse.h ****                 fading_ = true; //start fading
 106:delayline_reverse.h ****                 
 107:delayline_reverse.h ****                 if(!playinghead_) 
 108:delayline_reverse.h ****                 {
 109:delayline_reverse.h ****                     //jump ptr2 to fadetime beyond write position
 110:delayline_reverse.h ****                     read_ptr2_ = write_ptr_ - 1;
 111:delayline_reverse.h ****                 }
 112:delayline_reverse.h ****     
 113:delayline_reverse.h ****                 else
 114:delayline_reverse.h ****                 {
 115:delayline_reverse.h ****                     //jump ptr1 to fadetime beyond write position
 116:delayline_reverse.h ****                     read_ptr1_ = write_ptr_ - 1; 
 117:delayline_reverse.h ****                 }
 118:delayline_reverse.h ****             }
 119:delayline_reverse.h **** 
 120:delayline_reverse.h ****             else
 121:delayline_reverse.h ****             {
 122:delayline_reverse.h ****                 //continue fading
 123:delayline_reverse.h ****             }
 124:delayline_reverse.h ****         }
 125:delayline_reverse.h **** 
 126:delayline_reverse.h ****         if(fading_)
 127:delayline_reverse.h ****         {
 128:delayline_reverse.h ****             if(!playinghead_)   //head1 playing
 129:delayline_reverse.h ****             {
 130:delayline_reverse.h ****                 fadepos_ = fadepos_ + (1.0f / (fadetime) ); //increment up to 1.
 131:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 132:delayline_reverse.h ****                 {
 133:delayline_reverse.h ****                     fadepos_ = 1.0f;
 134:delayline_reverse.h ****                     fading_ = false;    //stop fading
 135:delayline_reverse.h ****                     playinghead_ = true;
 136:delayline_reverse.h ****                 }
 137:delayline_reverse.h ****             }
 138:delayline_reverse.h **** 
 139:delayline_reverse.h ****             else    //head2 playing
 140:delayline_reverse.h ****             {
 141:delayline_reverse.h ****                 fadepos_ = fadepos_ - (1.0f / (fadetime) ); //increment down to 0
 142:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 143:delayline_reverse.h ****                 {
 144:delayline_reverse.h ****                     fadepos_ = 0.0f;
 145:delayline_reverse.h ****                     fading_ = false;    //stop fading
 146:delayline_reverse.h ****                     playinghead_ = false;
 147:delayline_reverse.h ****                 }
 148:delayline_reverse.h ****             }
 149:delayline_reverse.h ****         }
 150:delayline_reverse.h ****         else    //not fading
 151:delayline_reverse.h ****         {
 152:delayline_reverse.h ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 283


 153:delayline_reverse.h **** 
 154:delayline_reverse.h ****         
 155:delayline_reverse.h ****     }
 156:delayline_reverse.h **** 
 157:delayline_reverse.h ****     /** returns the next sample of type T in the delay line, interpolated if necessary.
 158:delayline_reverse.h ****     */
 159:delayline_reverse.h ****     inline const T ReadRev() const
 160:delayline_reverse.h ****     {
 161:delayline_reverse.h ****         T a1 = line_[read_ptr1_];
 162:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 163:delayline_reverse.h **** 
 164:delayline_reverse.h ****         float read1 = a1;
 165:delayline_reverse.h ****         float read2 = a2;
 166:delayline_reverse.h **** 
 167:delayline_reverse.h ****         float scalar_1, scalar_2;
 168:delayline_reverse.h **** 
 169:delayline_reverse.h ****         //hann
 170:delayline_reverse.h ****         //scalar_1 = sinf(fadepos_ * ((float)M_PI * 0.5f));
 171:delayline_reverse.h ****         //scalar_2 = sinf((1.0f - fadepos_) * ((float)M_PI * 0.5f));
 172:delayline_reverse.h **** 
 173:delayline_reverse.h ****         //flattenned hann
 174:delayline_reverse.h ****         scalar_1 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*fadepos_)  +   (1.0f/16.0f)*s
 8513              		.loc 19 174 71 is_stmt 0 view .LVU2380
 8514 01b2 DFF808A3 		ldr	r10, .L586+164
 8515              	.LBE1646:
 8516              	.LBE1645:
 8517              	.LBE1644:
 8518              	.LBE1643:
 356:Veno-Echo.cpp **** 
 8519              		.loc 20 356 19 view .LVU2381
 8520 01b6 FFF7FEFF 		bl	_Z10Update_Modv
 8521              	.LVL540:
 359:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 8522              		.loc 20 359 9 is_stmt 1 view .LVU2382
 359:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 8523              		.loc 20 359 51 is_stmt 0 view .LVU2383
 8524 01ba 9F48     		ldr	r0, .L586+32
 8525 01bc FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8526              	.LVL541:
 8527 01c0 0146     		mov	r1, r0
 8528 01c2 9E48     		ldr	r0, .L586+36
 8529              	.LBB1698:
 8530              	.LBB1681:
 8531              	.LBB1664:
 8532              	.LBB1647:
 175:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8533              		.loc 19 175 77 view .LVU2384
 8534 01c4 F7EE00AA 		vmov.f32	s21, #1.0e+0
 8535              	.LBE1647:
 8536              	.LBE1664:
 8537              	.LBE1681:
 8538              	.LBE1698:
 359:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 8539              		.loc 20 359 51 view .LVU2385
 8540 01c8 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 8541              	.LVL542:
 360:Veno-Echo.cpp ****         
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 284


 8542              		.loc 20 360 51 view .LVU2386
 8543 01cc 9C48     		ldr	r0, .L586+40
 359:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 8544              		.loc 20 359 51 view .LVU2387
 8545 01ce F0EE40BA 		vmov.f32	s23, s0
 8546              	.LVL543:
 360:Veno-Echo.cpp ****         
 8547              		.loc 20 360 9 is_stmt 1 view .LVU2388
 360:Veno-Echo.cpp ****         
 8548              		.loc 20 360 51 is_stmt 0 view .LVU2389
 8549 01d2 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8550              	.LVL544:
 360:Veno-Echo.cpp ****         
 8551              		.loc 20 360 51 view .LVU2390
 8552 01d6 0146     		mov	r1, r0
 8553 01d8 9A48     		ldr	r0, .L586+44
 8554 01da FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 8555              	.LVL545:
 362:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8556              		.loc 20 362 44 view .LVU2391
 8557 01de 9A48     		ldr	r0, .L586+48
 360:Veno-Echo.cpp ****         
 8558              		.loc 20 360 51 view .LVU2392
 8559 01e0 B0EE409A 		vmov.f32	s18, s0
 8560              	.LVL546:
 362:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8561              		.loc 20 362 9 is_stmt 1 view .LVU2393
 362:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8562              		.loc 20 362 44 is_stmt 0 view .LVU2394
 8563 01e4 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8564              	.LVL547:
 362:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8565              		.loc 20 362 44 view .LVU2395
 8566 01e8 0146     		mov	r1, r0
 8567 01ea 9848     		ldr	r0, .L586+52
 8568 01ec FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 8569              	.LVL548:
 363:Veno-Echo.cpp **** 
 8570              		.loc 20 363 44 view .LVU2396
 8571 01f0 9748     		ldr	r0, .L586+56
 362:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8572              		.loc 20 362 44 view .LVU2397
 8573 01f2 B0EE408A 		vmov.f32	s16, s0
 8574              	.LVL549:
 363:Veno-Echo.cpp **** 
 8575              		.loc 20 363 9 is_stmt 1 view .LVU2398
 363:Veno-Echo.cpp **** 
 8576              		.loc 20 363 44 is_stmt 0 view .LVU2399
 8577 01f6 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8578              	.LVL550:
 363:Veno-Echo.cpp **** 
 8579              		.loc 20 363 44 view .LVU2400
 8580 01fa 0146     		mov	r1, r0
 8581 01fc 9548     		ldr	r0, .L586+60
 8582 01fe FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 8583              	.LVL551:
 8584              	.LBB1699:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 285


 8585              	.LBB1700:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8586              		.loc 10 60 42 view .LVU2401
 8587 0202 9548     		ldr	r0, .L586+64
 8588              	.LBE1700:
 8589              	.LBE1699:
 386:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 8590              		.loc 20 386 49 view .LVU2402
 8591 0204 954B     		ldr	r3, .L586+68
 363:Veno-Echo.cpp **** 
 8592              		.loc 20 363 44 view .LVU2403
 8593 0206 F0EE407A 		vmov.f32	s15, s0
 8594              	.LVL552:
 366:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 8595              		.loc 20 366 9 is_stmt 1 view .LVU2404
 8596              	.LBB1702:
 8597              	.LBI1699:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8598              		.loc 10 60 17 view .LVU2405
 8599              	.LBB1701:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8600              		.loc 10 60 37 view .LVU2406
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8601              		.loc 10 60 42 is_stmt 0 view .LVU2407
 8602 020a C0ED00BA 		vstr.32	s23, [r0]
 8603              	.LVL553:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8604              		.loc 10 60 42 view .LVU2408
 8605              	.LBE1701:
 8606              	.LBE1702:
 367:Veno-Echo.cpp ****         
 8607              		.loc 20 367 9 is_stmt 1 view .LVU2409
 8608              	.LBB1703:
 8609              	.LBI1703:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8610              		.loc 10 60 17 view .LVU2410
 8611              	.LBB1704:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8612              		.loc 10 60 37 view .LVU2411
 8613              	.LBE1704:
 8614              	.LBE1703:
 8615              	.LBB1707:
 8616              	.LBB1682:
 8617              	.LBB1665:
 8618              	.LBB1648:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8619              		.loc 19 174 82 is_stmt 0 view .LVU2412
 8620 020e F6EE028A 		vmov.f32	s17, #5.625e-1
 8621              	.LBE1648:
 8622              	.LBE1665:
 8623              	.LBE1682:
 8624              	.LBE1707:
 8625              	.LBB1708:
 8626              	.LBB1705:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8627              		.loc 10 60 42 view .LVU2413
 8628 0212 9348     		ldr	r0, .L586+72
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 286


 8629              	.LBE1705:
 8630              	.LBE1708:
 386:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 8631              		.loc 20 386 49 view .LVU2414
 8632 0214 1D68     		ldr	r5, [r3]
 8633              	.LBB1709:
 8634              	.LBB1706:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8635              		.loc 10 60 42 view .LVU2415
 8636 0216 80ED009A 		vstr.32	s18, [r0]
 8637              	.LVL554:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8638              		.loc 10 60 42 view .LVU2416
 8639              	.LBE1706:
 8640              	.LBE1709:
 369:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 8641              		.loc 20 369 9 is_stmt 1 view .LVU2417
 8642              	.LBB1710:
 8643              	.LBI1710:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8644              		.loc 10 60 17 view .LVU2418
 8645              	.LBB1711:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8646              		.loc 10 60 37 view .LVU2419
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8647              		.loc 10 60 42 is_stmt 0 view .LVU2420
 8648 021a 9248     		ldr	r0, .L586+76
 8649              	.LBE1711:
 8650              	.LBE1710:
 8651              	.LBB1713:
 8652              	.LBB1683:
 8653              	.LBB1666:
 8654              	.LBB1649:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8655              		.loc 19 174 71 view .LVU2421
 8656 021c 05EB0A03 		add	r3, r5, r10
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8657              		.loc 19 174 46 view .LVU2422
 8658 0220 9FED91AA 		vldr.32	s20, .L586+80
 8659              	.LBE1649:
 8660              	.LBE1666:
 8661              	.LBE1683:
 8662              	.LBE1713:
 8663              	.LBB1714:
 8664              	.LBB1712:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8665              		.loc 10 60 42 view .LVU2423
 8666 0224 80ED008A 		vstr.32	s16, [r0]
 8667              	.LVL555:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8668              		.loc 10 60 42 view .LVU2424
 8669              	.LBE1712:
 8670              	.LBE1714:
 370:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 8671              		.loc 20 370 9 is_stmt 1 view .LVU2425
 8672              	.LBB1715:
 8673              	.LBI1715:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 287


  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8674              		.loc 10 60 17 view .LVU2426
 8675              	.LBB1716:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8676              		.loc 10 60 37 view .LVU2427
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8677              		.loc 10 60 42 is_stmt 0 view .LVU2428
 8678 0228 9048     		ldr	r0, .L586+84
 8679              	.LBE1716:
 8680              	.LBE1715:
 8681              	.LBB1718:
 8682              	.LBB1684:
 8683              	.LBB1667:
 8684              	.LBB1650:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8685              		.loc 19 174 71 view .LVU2429
 8686 022a 93ED00BA 		vldr.32	s22, [r3]
 8687              	.LBE1650:
 8688              	.LBE1667:
 8689              	.LBE1684:
 8690              	.LBE1718:
 8691              	.LBB1719:
 8692              	.LBB1717:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8693              		.loc 10 60 42 view .LVU2430
 8694 022e 80ED008A 		vstr.32	s16, [r0]
 8695              	.LVL556:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8696              		.loc 10 60 42 view .LVU2431
 8697              	.LBE1717:
 8698              	.LBE1719:
 371:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 8699              		.loc 20 371 9 is_stmt 1 view .LVU2432
 8700              	.LBB1720:
 8701              	.LBI1720:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8702              		.loc 10 60 17 view .LVU2433
 8703              	.LBB1721:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8704              		.loc 10 60 37 view .LVU2434
 8705              	.LBE1721:
 8706              	.LBE1720:
 8707              	.LBB1724:
 8708              	.LBB1725:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8709              		.loc 10 60 42 is_stmt 0 view .LVU2435
 8710 0232 8F48     		ldr	r0, .L586+88
 8711              	.LBE1725:
 8712              	.LBE1724:
 8713              	.LBB1728:
 8714              	.LBB1685:
 8715              	.LBB1668:
 8716              	.LBB1651:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8717              		.loc 19 174 46 view .LVU2436
 8718 0234 2BEE0A0A 		vmul.f32	s0, s22, s20
 8719              	.LVL557:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 288


 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8720              		.loc 19 174 71 view .LVU2437
 8721 0238 0493     		str	r3, [sp, #16]
 8722              		.loc 19 175 77 view .LVU2438
 8723 023a 3AEECBCA 		vsub.f32	s24, s21, s22
 8724              	.LBE1651:
 8725              	.LBE1668:
 8726              	.LBE1685:
 8727              	.LBE1728:
 8728              	.LBB1729:
 8729              	.LBB1726:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8730              		.loc 10 60 42 view .LVU2439
 8731 023e 80ED008A 		vstr.32	s16, [r0]
 8732              	.LBE1726:
 8733              	.LBE1729:
 379:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 8734              		.loc 20 379 27 view .LVU2440
 8735 0242 8C4B     		ldr	r3, .L586+92
 8736              	.LBB1730:
 8737              	.LBB1731:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8738              		.loc 10 60 42 view .LVU2441
 8739 0244 8C48     		ldr	r0, .L586+96
 8740              	.LBE1731:
 8741              	.LBE1730:
 379:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 8742              		.loc 20 379 27 view .LVU2442
 8743 0246 1B68     		ldr	r3, [r3]	@ float
 8744              	.LBB1734:
 8745              	.LBB1732:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8746              		.loc 10 60 42 view .LVU2443
 8747 0248 80ED008A 		vstr.32	s16, [r0]
 8748              	.LBE1732:
 8749              	.LBE1734:
 8750              	.LBB1735:
 8751              	.LBB1722:
 8752 024c 8B48     		ldr	r0, .L586+100
 8753              	.LBE1722:
 8754              	.LBE1735:
 8755              	.LBB1736:
 8756              	.LBB1686:
 8757              	.LBB1669:
 8758              	.LBB1652:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8759              		.loc 19 174 103 view .LVU2444
 8760 024e DFED8C9A 		vldr.32	s19, .L586+104
 8761              	.LBE1652:
 8762              	.LBE1669:
 8763              	.LBE1686:
 8764              	.LBE1736:
 8765              	.LBB1737:
 8766              	.LBB1723:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8767              		.loc 10 60 42 view .LVU2445
 8768 0252 C0ED007A 		vstr.32	s15, [r0]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 289


 8769              	.LVL558:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8770              		.loc 10 60 42 view .LVU2446
 8771              	.LBE1723:
 8772              	.LBE1737:
 372:Veno-Echo.cpp **** 
 8773              		.loc 20 372 9 is_stmt 1 view .LVU2447
 8774              	.LBB1738:
 8775              	.LBI1738:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8776              		.loc 10 60 17 view .LVU2448
 8777              	.LBB1739:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8778              		.loc 10 60 37 view .LVU2449
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8779              		.loc 10 60 42 is_stmt 0 view .LVU2450
 8780 0256 8B48     		ldr	r0, .L586+108
 8781              	.LBE1739:
 8782              	.LBE1738:
 8783              	.LBB1741:
 8784              	.LBB1687:
 8785              	.LBB1670:
 8786              	.LBB1653:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8787              		.loc 19 174 98 view .LVU2451
 8788 0258 9FED8B9A 		vldr.32	s18, .L586+112
 8789              	.LVL559:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8790              		.loc 19 174 98 view .LVU2452
 8791              	.LBE1653:
 8792              	.LBE1670:
 8793              	.LBE1687:
 8794              	.LBE1741:
 8795              	.LBB1742:
 8796              	.LBB1740:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8797              		.loc 10 60 42 view .LVU2453
 8798 025c C0ED007A 		vstr.32	s15, [r0]
 8799              	.LVL560:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8800              		.loc 10 60 42 view .LVU2454
 8801              	.LBE1740:
 8802              	.LBE1742:
 374:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 8803              		.loc 20 374 9 is_stmt 1 view .LVU2455
 8804              	.LBB1743:
 8805              	.LBI1724:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8806              		.loc 10 60 17 view .LVU2456
 8807              	.LBB1727:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8808              		.loc 10 60 37 view .LVU2457
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8809              		.loc 10 60 37 is_stmt 0 view .LVU2458
 8810              	.LBE1727:
 8811              	.LBE1743:
 375:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 290


 8812              		.loc 20 375 9 is_stmt 1 view .LVU2459
 8813              	.LBB1744:
 8814              	.LBI1730:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8815              		.loc 10 60 17 view .LVU2460
 8816              	.LBB1733:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8817              		.loc 10 60 37 view .LVU2461
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8818              		.loc 10 60 37 is_stmt 0 view .LVU2462
 8819              	.LBE1733:
 8820              	.LBE1744:
 376:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 8821              		.loc 20 376 9 is_stmt 1 view .LVU2463
 8822              	.LBB1745:
 8823              	.LBI1745:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8824              		.loc 10 60 17 view .LVU2464
 8825              	.LBB1746:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8826              		.loc 10 60 37 view .LVU2465
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8827              		.loc 10 60 42 is_stmt 0 view .LVU2466
 8828 0260 8A48     		ldr	r0, .L586+116
 8829              	.LBE1746:
 8830              	.LBE1745:
 8831              	.LBB1748:
 8832              	.LBB1688:
 8833              	.LBB1671:
 8834              	.LBB1654:
 162:delayline_reverse.h **** 
 8835              		.loc 19 162 23 view .LVU2467
 8836 0262 D5E90267 		ldrd	r6, r7, [r5, #8]
 8837              	.LBE1654:
 8838              	.LBE1671:
 8839              	.LBE1688:
 8840              	.LBE1748:
 8841              	.LBB1749:
 8842              	.LBB1747:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8843              		.loc 10 60 42 view .LVU2468
 8844 0266 C0ED007A 		vstr.32	s15, [r0]
 8845              	.LVL561:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8846              		.loc 10 60 42 view .LVU2469
 8847              	.LBE1747:
 8848              	.LBE1749:
 377:Veno-Echo.cpp **** 
 8849              		.loc 20 377 9 is_stmt 1 view .LVU2470
 8850              	.LBB1750:
 8851              	.LBI1750:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8852              		.loc 10 60 17 view .LVU2471
 8853              	.LBB1751:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8854              		.loc 10 60 37 view .LVU2472
 8855              	.LBE1751:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 291


 8856              	.LBE1750:
 8857              	.LBB1754:
 8858              	.LBB1689:
 8859              	.LBB1672:
 8860              	.LBB1655:
 162:delayline_reverse.h **** 
 8861              		.loc 19 162 11 is_stmt 0 view .LVU2473
 8862 026a 05EB8702 		add	r2, r5, r7, lsl #2
 8863              	.LBE1655:
 8864              	.LBE1672:
 8865              	.LBE1689:
 8866              	.LBE1754:
 8867              	.LBB1755:
 8868              	.LBB1752:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8869              		.loc 10 60 42 view .LVU2474
 8870 026e 8848     		ldr	r0, .L586+120
 8871              	.LBE1752:
 8872              	.LBE1755:
 8873              	.LBB1756:
 8874              	.LBB1690:
 8875              	.LBB1673:
 8876              	.LBB1656:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 8877              		.loc 19 161 11 view .LVU2475
 8878 0270 05EB8601 		add	r1, r5, r6, lsl #2
 162:delayline_reverse.h **** 
 8879              		.loc 19 162 11 view .LVU2476
 8880 0274 D2ED06DA 		vldr.32	s27, [r2, #24]
 8881              	.LBE1656:
 8882              	.LBE1673:
 8883              	.LBE1690:
 8884              	.LBE1756:
 8885              	.LBB1757:
 8886              	.LBB1758:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8887              		.loc 10 60 42 view .LVU2477
 8888 0278 864A     		ldr	r2, .L586+124
 8889              	.LBE1758:
 8890              	.LBE1757:
 8891              	.LBB1760:
 8892              	.LBB1753:
 8893 027a C0ED007A 		vstr.32	s15, [r0]
 8894              	.LVL562:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8895              		.loc 10 60 42 view .LVU2478
 8896              	.LBE1753:
 8897              	.LBE1760:
 379:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 8898              		.loc 20 379 9 is_stmt 1 view .LVU2479
 8899              	.LBB1761:
 8900              	.LBI1757:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8901              		.loc 10 60 17 view .LVU2480
 8902              	.LBB1759:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8903              		.loc 10 60 37 view .LVU2481
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 292


  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8904              		.loc 10 60 42 is_stmt 0 view .LVU2482
 8905 027e 1360     		str	r3, [r2]	@ float
 8906              	.LVL563:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8907              		.loc 10 60 42 view .LVU2483
 8908              	.LBE1759:
 8909              	.LBE1761:
 380:Veno-Echo.cpp **** 
 8910              		.loc 20 380 9 is_stmt 1 view .LVU2484
 8911              	.LBB1762:
 8912              	.LBI1762:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8913              		.loc 10 60 17 view .LVU2485
 8914              	.LBB1763:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8915              		.loc 10 60 37 view .LVU2486
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8916              		.loc 10 60 42 is_stmt 0 view .LVU2487
 8917 0280 854A     		ldr	r2, .L586+128
 8918              	.LBE1763:
 8919              	.LBE1762:
 8920              	.LBB1765:
 8921              	.LBB1691:
 8922              	.LBB1674:
 8923              	.LBB1657:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 8924              		.loc 19 161 11 view .LVU2488
 8925 0282 91ED06EA 		vldr.32	s28, [r1, #24]
 8926              	.LBE1657:
 8927              	.LBE1674:
 8928              	.LBE1691:
 8929              	.LBE1765:
 8930              	.LBB1766:
 8931              	.LBB1764:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8932              		.loc 10 60 42 view .LVU2489
 8933 0286 1360     		str	r3, [r2]	@ float
 8934              	.LVL564:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8935              		.loc 10 60 42 view .LVU2490
 8936              	.LBE1764:
 8937              	.LBE1766:
 382:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 8938              		.loc 20 382 9 is_stmt 1 view .LVU2491
 8939              	.LBB1767:
 8940              	.LBI1767:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8941              		.loc 10 60 17 view .LVU2492
 8942              	.LBB1768:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8943              		.loc 10 60 37 view .LVU2493
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8944              		.loc 10 60 42 is_stmt 0 view .LVU2494
 8945 0288 844A     		ldr	r2, .L586+132
 8946 028a 1360     		str	r3, [r2]	@ float
 8947              	.LVL565:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 293


  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8948              		.loc 10 60 42 view .LVU2495
 8949              	.LBE1768:
 8950              	.LBE1767:
 383:Veno-Echo.cpp **** 
 8951              		.loc 20 383 9 is_stmt 1 view .LVU2496
 8952              	.LBB1769:
 8953              	.LBI1769:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8954              		.loc 10 60 17 view .LVU2497
 8955              	.LBB1770:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8956              		.loc 10 60 37 view .LVU2498
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8957              		.loc 10 60 42 is_stmt 0 view .LVU2499
 8958 028c 844A     		ldr	r2, .L586+136
 8959 028e 1360     		str	r3, [r2]	@ float
 8960              	.LVL566:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8961              		.loc 10 60 42 view .LVU2500
 8962              	.LBE1770:
 8963              	.LBE1769:
 386:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 8964              		.loc 20 386 9 is_stmt 1 view .LVU2501
 8965              	.LBB1771:
 8966              	.LBI1643:
  79:Veno-Echo.cpp ****     {
 8967              		.loc 20 79 11 view .LVU2502
 8968              	.LBB1692:
  82:Veno-Echo.cpp ****         return read;
 8969              		.loc 20 82 9 view .LVU2503
 8970              	.LBB1675:
 8971              	.LBI1645:
 159:delayline_reverse.h ****     {
 8972              		.loc 19 159 20 view .LVU2504
 8973              	.LBB1658:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8974              		.loc 19 174 46 is_stmt 0 view .LVU2505
 8975 0290 FFF7FEFF 		bl	sinf
 8976              	.LVL567:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8977              		.loc 19 174 46 view .LVU2506
 8978 0294 F0EE40BA 		vmov.f32	s23, s0
 8979              	.LVL568:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8980              		.loc 19 174 103 view .LVU2507
 8981 0298 2BEE290A 		vmul.f32	s0, s22, s19
 8982 029c FFF7FEFF 		bl	sinf
 8983              	.LVL569:
 8984 02a0 B0EE408A 		vmov.f32	s16, s0
 8985              	.LVL570:
 8986              		.loc 19 175 46 view .LVU2508
 8987 02a4 2CEE0A0A 		vmul.f32	s0, s24, s20
 8988 02a8 FFF7FEFF 		bl	sinf
 8989              	.LVL571:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8990              		.loc 19 174 98 view .LVU2509
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 294


 8991 02ac 28EE098A 		vmul.f32	s16, s16, s18
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8992              		.loc 19 174 82 view .LVU2510
 8993 02b0 ABEEA88A 		vfma.f32	s16, s23, s17
 8994              	.LVL572:
 8995              		.loc 19 175 46 view .LVU2511
 8996 02b4 F0EE40BA 		vmov.f32	s23, s0
 8997              		.loc 19 175 112 view .LVU2512
 8998 02b8 2CEE290A 		vmul.f32	s0, s24, s19
 8999 02bc FFF7FEFF 		bl	sinf
 9000              	.LVL573:
 9001              		.loc 19 175 107 view .LVU2513
 9002 02c0 60EE097A 		vmul.f32	s15, s0, s18
 9003              	.LBE1658:
 9004              	.LBE1675:
 9005              	.LBE1692:
 9006              	.LBE1771:
 387:Veno-Echo.cpp **** 
 9007              		.loc 20 387 49 view .LVU2514
 9008 02c4 774B     		ldr	r3, .L586+140
 9009              	.LBB1772:
 9010              	.LBB1693:
 9011              	.LBB1676:
 9012              	.LBB1659:
 9013              		.loc 19 175 91 view .LVU2515
 9014 02c6 EBEEA87A 		vfma.f32	s15, s23, s17
 9015              	.LVL574:
 9016              		.loc 19 175 91 view .LVU2516
 9017              	.LBE1659:
 9018              	.LBE1676:
 9019              	.LBE1693:
 9020              	.LBE1772:
 387:Veno-Echo.cpp **** 
 9021              		.loc 20 387 49 view .LVU2517
 9022 02ca 1C68     		ldr	r4, [r3]
 9023              	.LBB1773:
 9024              	.LBB1694:
 9025              	.LBB1677:
 9026              	.LBB1660:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9027              		.loc 19 174 9 view .LVU2518
 9028 02cc 38EE088A 		vadd.f32	s16, s16, s16
 9029              	.LVL575:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9030              		.loc 19 174 9 view .LVU2519
 9031              	.LBE1660:
 9032              	.LBE1677:
 9033              	.LBE1694:
 9034              	.LBE1773:
 9035              	.LBB1774:
 9036              	.LBB1775:
 9037              	.LBB1776:
 9038              	.LBB1777:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9039              		.loc 19 174 71 view .LVU2520
 9040 02d0 04EB0A01 		add	r1, r4, r10
 162:delayline_reverse.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 295


 9041              		.loc 19 162 11 view .LVU2521
 9042 02d4 D4E90223 		ldrd	r2, r3, [r4, #8]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9043              		.loc 19 174 71 view .LVU2522
 9044 02d8 91ED00CA 		vldr.32	s24, [r1]
 9045              	.LBE1777:
 9046              	.LBE1776:
 9047              	.LBE1775:
 9048              	.LBE1774:
 9049              	.LBB1808:
 9050              	.LBB1695:
 9051              	.LBB1678:
 9052              	.LBB1661:
 9053              		.loc 19 175 9 view .LVU2523
 9054 02dc 77EEA77A 		vadd.f32	s15, s15, s15
 9055              	.LVL576:
 9056              		.loc 19 175 9 view .LVU2524
 9057              	.LBE1661:
 9058              	.LBE1678:
 9059              	.LBE1695:
 9060              	.LBE1808:
 9061              	.LBB1809:
 9062              	.LBB1798:
 9063              	.LBB1788:
 9064              	.LBB1778:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 9065              		.loc 19 161 11 view .LVU2525
 9066 02e0 04EB8202 		add	r2, r4, r2, lsl #2
 162:delayline_reverse.h **** 
 9067              		.loc 19 162 11 view .LVU2526
 9068 02e4 04EB8303 		add	r3, r4, r3, lsl #2
 9069              		.loc 19 175 77 view .LVU2527
 9070 02e8 7AEECCAA 		vsub.f32	s21, s21, s24
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9071              		.loc 19 174 46 view .LVU2528
 9072 02ec 2CEE0A0A 		vmul.f32	s0, s24, s20
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 9073              		.loc 19 161 11 view .LVU2529
 9074 02f0 92ED06DA 		vldr.32	s26, [r2, #24]
 9075              	.LBE1778:
 9076              	.LBE1788:
 9077              	.LBE1798:
 9078              	.LBE1809:
 9079              	.LBB1810:
 9080              	.LBB1696:
 9081              	.LBB1679:
 9082              	.LBB1662:
 176:delayline_reverse.h **** 
 177:delayline_reverse.h ****         return (read2 * scalar_1) + (read1 * scalar_2); 
 9083              		.loc 19 177 44 view .LVU2530
 9084 02f4 67EE8E7A 		vmul.f32	s15, s15, s28
 9085              	.LVL577:
 9086              		.loc 19 177 44 view .LVU2531
 9087              	.LBE1662:
 9088              	.LBE1679:
 9089              	.LBE1696:
 9090              	.LBE1810:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 296


 9091              	.LBB1811:
 9092              	.LBB1799:
 9093              	.LBB1789:
 9094              	.LBB1779:
 162:delayline_reverse.h **** 
 9095              		.loc 19 162 11 view .LVU2532
 9096 02f8 D3ED06CA 		vldr.32	s25, [r3, #24]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9097              		.loc 19 174 71 view .LVU2533
 9098 02fc 0391     		str	r1, [sp, #12]
 9099              	.LBE1779:
 9100              	.LBE1789:
 9101              	.LBE1799:
 9102              	.LBE1811:
 9103              	.LBB1812:
 9104              	.LBB1697:
 9105              	.LBB1680:
 9106              	.LBB1663:
 9107              		.loc 19 177 54 view .LVU2534
 9108 02fe EDEE887A 		vfma.f32	s15, s27, s16
 9109              	.LVL578:
 9110              		.loc 19 177 54 view .LVU2535
 9111              	.LBE1663:
 9112              	.LBE1680:
  83:Veno-Echo.cpp ****     }
 9113              		.loc 20 83 9 is_stmt 1 view .LVU2536
  83:Veno-Echo.cpp ****     }
 9114              		.loc 20 83 9 is_stmt 0 view .LVU2537
 9115              	.LBE1697:
 9116              	.LBE1812:
 386:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9117              		.loc 20 386 50 view .LVU2538
 9118 0302 CDED067A 		vstr.32	s15, [sp, #24]
 387:Veno-Echo.cpp **** 
 9119              		.loc 20 387 9 is_stmt 1 view .LVU2539
 9120              	.LVL579:
 9121              	.LBB1813:
 9122              	.LBI1774:
  79:Veno-Echo.cpp ****     {
 9123              		.loc 20 79 11 view .LVU2540
 9124              	.LBB1800:
  82:Veno-Echo.cpp ****         return read;
 9125              		.loc 20 82 9 view .LVU2541
 9126              	.LBB1790:
 9127              	.LBI1776:
 159:delayline_reverse.h ****     {
 9128              		.loc 19 159 20 view .LVU2542
 9129              	.LBB1780:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9130              		.loc 19 174 46 is_stmt 0 view .LVU2543
 9131 0306 FFF7FEFF 		bl	sinf
 9132              	.LVL580:
 9133 030a F0EE40BA 		vmov.f32	s23, s0
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9134              		.loc 19 174 103 view .LVU2544
 9135 030e 2CEE290A 		vmul.f32	s0, s24, s19
 9136 0312 FFF7FEFF 		bl	sinf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 297


 9137              	.LVL581:
 9138 0316 B0EE408A 		vmov.f32	s16, s0
 175:delayline_reverse.h **** 
 9139              		.loc 19 175 46 view .LVU2545
 9140 031a 2AEE8A0A 		vmul.f32	s0, s21, s20
 9141 031e FFF7FEFF 		bl	sinf
 9142              	.LVL582:
 9143 0322 F0EE407A 		vmov.f32	s15, s0
 175:delayline_reverse.h **** 
 9144              		.loc 19 175 112 view .LVU2546
 9145 0326 2AEEA90A 		vmul.f32	s0, s21, s19
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9146              		.loc 19 174 98 view .LVU2547
 9147 032a 28EE098A 		vmul.f32	s16, s16, s18
 175:delayline_reverse.h **** 
 9148              		.loc 19 175 46 view .LVU2548
 9149 032e F0EE679A 		vmov.f32	s19, s15
 175:delayline_reverse.h **** 
 9150              		.loc 19 175 112 view .LVU2549
 9151 0332 FFF7FEFF 		bl	sinf
 9152              	.LVL583:
 9153              	.LBE1780:
 9154              	.LBE1790:
 9155              	.LBE1800:
 9156              	.LBE1813:
 9157              	.LBB1814:
 9158              	.LBB1815:
 9159              	.LBB1816:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9160              		.loc 19 98 38 view .LVU2550
 9161 0336 5C48     		ldr	r0, .L586+144
 9162              	.LBE1816:
 9163              	.LBE1815:
 9164              	.LBE1814:
 9165              	.LBB1839:
 9166              	.LBB1801:
 9167              	.LBB1791:
 9168              	.LBB1781:
 175:delayline_reverse.h **** 
 9169              		.loc 19 175 107 view .LVU2551
 9170 0338 60EE097A 		vmul.f32	s15, s0, s18
 9171              	.LBE1781:
 9172              	.LBE1791:
 9173              	.LBE1801:
 9174              	.LBE1839:
 9175              	.LBB1840:
 9176              	.LBB1828:
 9177              	.LBB1817:
  92:delayline_reverse.h ****         
 9178              		.loc 19 92 57 view .LVU2552
 9179 033c 5B4B     		ldr	r3, .L586+148
 9180              	.LBE1817:
 9181              	.LBE1828:
 9182              	.LBE1840:
 9183              	.LBB1841:
 9184              	.LBB1802:
 9185              	.LBB1792:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 298


 9186              	.LBB1782:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9187              		.loc 19 174 82 view .LVU2553
 9188 033e ABEEA88A 		vfma.f32	s16, s23, s17
 9189              	.LVL584:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9190              		.loc 19 174 82 view .LVU2554
 9191              	.LBE1782:
 9192              	.LBE1792:
 9193              	.LBE1802:
 9194              	.LBE1841:
 9195              	.LBB1842:
 9196              	.LBB1829:
 9197              	.LBB1818:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9198              		.loc 19 98 38 view .LVU2555
 9199 0342 0644     		add	r6, r6, r0
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9200              		.loc 19 90 15 view .LVU2556
 9201 0344 D5F804E0 		ldr	lr, [r5, #4]
 9202              	.LBE1818:
 9203              	.LBE1829:
 9204              	.LBE1842:
 9205              	.LBB1843:
 9206              	.LBB1803:
 9207              	.LBB1793:
 9208              	.LBB1783:
 175:delayline_reverse.h **** 
 9209              		.loc 19 175 91 view .LVU2557
 9210 0348 E9EEA87A 		vfma.f32	s15, s19, s17
 9211              	.LVL585:
 175:delayline_reverse.h **** 
 9212              		.loc 19 175 91 view .LVU2558
 9213              	.LBE1783:
 9214              	.LBE1793:
 9215              	.LBE1803:
 9216              	.LBE1843:
 9217              	.LBB1844:
 9218              	.LBB1830:
 9219              	.LBB1819:
  99:delayline_reverse.h ****  
 9220              		.loc 19 99 38 view .LVU2559
 9221 034c 3844     		add	r0, r0, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9222              		.loc 19 98 50 view .LVU2560
 9223 034e A3FB06C1 		umull	ip, r1, r3, r6
  92:delayline_reverse.h ****         
 9224              		.loc 19 92 57 view .LVU2561
 9225 0352 DFF86CC1 		ldr	ip, .L586+168
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9226              		.loc 19 90 9 view .LVU2562
 9227 0356 05EB8E0A 		add	r10, r5, lr, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9228              		.loc 19 98 50 view .LVU2563
 9229 035a 890C     		lsrs	r1, r1, #18
 9230              	.LBE1819:
 9231              	.LBE1830:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 299


 9232              	.LBE1844:
 9233              	.LBB1845:
 9234              	.LBB1804:
 9235              	.LBB1794:
 9236              	.LBB1784:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9237              		.loc 19 174 9 view .LVU2564
 9238 035c 38EE088A 		vadd.f32	s16, s16, s16
 9239              	.LVL586:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9240              		.loc 19 174 9 view .LVU2565
 9241              	.LBE1784:
 9242              	.LBE1794:
 9243              	.LBE1804:
 9244              	.LBE1845:
 9245              	.LBB1846:
 9246              	.LBB1831:
 9247              	.LBB1820:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9248              		.loc 19 98 50 view .LVU2566
 9249 0360 0CFB1161 		mls	r1, ip, r1, r6
  92:delayline_reverse.h ****         
 9250              		.loc 19 92 45 view .LVU2567
 9251 0364 524E     		ldr	r6, .L586+152
 9252              	.LBE1820:
 9253              	.LBE1831:
 9254              	.LBE1846:
 9255              	.LBB1847:
 9256              	.LBB1805:
 9257              	.LBB1795:
 9258              	.LBB1785:
 175:delayline_reverse.h **** 
 9259              		.loc 19 175 9 view .LVU2568
 9260 0366 37EEA70A 		vadd.f32	s0, s15, s15
 9261              	.LVL587:
 175:delayline_reverse.h **** 
 9262              		.loc 19 175 9 view .LVU2569
 9263              	.LBE1785:
 9264              	.LBE1795:
 9265              	.LBE1805:
 9266              	.LBE1847:
 390:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 9267              		.loc 20 390 26 view .LVU2570
 9268 036a DBED007A 		vldr.32	s15, [fp]
 9269              	.LBB1848:
 9270              	.LBB1832:
 9271              	.LBB1821:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9272              		.loc 19 98 50 view .LVU2571
 9273 036e 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 9274              		.loc 19 92 45 view .LVU2572
 9275 0370 7644     		add	r6, r6, lr
  99:delayline_reverse.h ****  
 9276              		.loc 19 99 50 view .LVU2573
 9277 0372 A3FB001E 		umull	r1, lr, r3, r0
  92:delayline_reverse.h ****         
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 300


 9278              		.loc 19 92 57 view .LVU2574
 9279 0376 A3FB0613 		umull	r1, r3, r3, r6
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9280              		.loc 19 98 9 view .LVU2575
 9281 037a 0199     		ldr	r1, [sp, #4]
  99:delayline_reverse.h ****  
 9282              		.loc 19 99 50 view .LVU2576
 9283 037c 4FEA9E4E 		lsr	lr, lr, #18
 9284              	.LBE1821:
 9285              	.LBE1832:
 9286              	.LBE1848:
 9287              	.LBB1849:
 9288              	.LBB1806:
 9289              	.LBB1796:
 9290              	.LBB1786:
 9291              		.loc 19 177 44 view .LVU2577
 9292 0380 20EE0D0A 		vmul.f32	s0, s0, s26
 9293              	.LVL588:
 9294              		.loc 19 177 44 view .LVU2578
 9295              	.LBE1786:
 9296              	.LBE1796:
 9297              	.LBE1806:
 9298              	.LBE1849:
 9299              	.LBB1850:
 9300              	.LBB1833:
 9301              	.LBB1822:
  92:delayline_reverse.h ****         
 9302              		.loc 19 92 57 view .LVU2579
 9303 0384 9B0C     		lsrs	r3, r3, #18
  99:delayline_reverse.h ****  
 9304              		.loc 19 99 50 view .LVU2580
 9305 0386 0CFB1E00 		mls	r0, ip, lr, r0
 9306              	.LBE1822:
 9307              	.LBE1833:
 9308              	.LBE1850:
 9309              	.LBB1851:
 9310              	.LBB1807:
 9311              	.LBB1797:
 9312              	.LBB1787:
 9313              		.loc 19 177 54 view .LVU2581
 9314 038a ACEE880A 		vfma.f32	s0, s25, s16
 9315              	.LVL589:
 9316              		.loc 19 177 54 view .LVU2582
 9317              	.LBE1787:
 9318              	.LBE1797:
  83:Veno-Echo.cpp ****     }
 9319              		.loc 20 83 9 is_stmt 1 view .LVU2583
  83:Veno-Echo.cpp ****     }
 9320              		.loc 20 83 9 is_stmt 0 view .LVU2584
 9321              	.LBE1807:
 9322              	.LBE1851:
 9323              	.LBB1852:
 9324              	.LBB1834:
 9325              	.LBB1823:
  92:delayline_reverse.h ****         
 9326              		.loc 19 92 57 view .LVU2585
 9327 038e 0CFB1363 		mls	r3, ip, r3, r6
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 301


  95:delayline_reverse.h **** 
 9328              		.loc 19 95 43 view .LVU2586
 9329 0392 D5E90472 		ldrd	r7, r2, [r5, #16]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9330              		.loc 19 90 9 view .LVU2587
 9331 0396 CAED067A 		vstr.32	s15, [r10, #24]
  95:delayline_reverse.h **** 
 9332              		.loc 19 95 43 view .LVU2588
 9333 039a 3A44     		add	r2, r2, r7
 101:delayline_reverse.h ****         {
 9334              		.loc 19 101 36 view .LVU2589
 9335 039c DFF824A1 		ldr	r10, .L586+172
  95:delayline_reverse.h **** 
 9336              		.loc 19 95 43 view .LVU2590
 9337 03a0 0132     		adds	r2, r2, #1
 101:delayline_reverse.h ****         {
 9338              		.loc 19 101 36 view .LVU2591
 9339 03a2 55F80AE0 		ldr	lr, [r5, r10]
 101:delayline_reverse.h ****         {
 9340              		.loc 19 101 45 view .LVU2592
 9341 03a6 07F1FF3A 		add	r10, r7, #-1
 9342              	.LBE1823:
 9343              	.LBE1834:
 9344              	.LBE1852:
 387:Veno-Echo.cpp **** 
 9345              		.loc 20 387 50 view .LVU2593
 9346 03aa 8DED070A 		vstr.32	s0, [sp, #28]
 390:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 9347              		.loc 20 390 9 is_stmt 1 view .LVU2594
 9348              	.LVL590:
 9349              	.LBB1853:
 9350              	.LBI1814:
  92:Veno-Echo.cpp ****     {
 9351              		.loc 20 92 10 view .LVU2595
  92:Veno-Echo.cpp ****     {
 9352              		.loc 20 92 10 is_stmt 0 view .LVU2596
 9353              	.LBE1853:
 9354              	.LBE1978:
 9355              	.LBE1603:
  94:Veno-Echo.cpp ****     }
 9356              		.loc 20 94 9 is_stmt 1 view .LVU2597
 9357              	.LBB1990:
 9358              	.LBB1979:
 9359              	.LBB1854:
 9360              	.LBB1835:
 9361              	.LBI1815:
  88:delayline_reverse.h ****     {
 9362              		.loc 19 88 17 view .LVU2598
 9363              	.LBB1824:
  99:delayline_reverse.h ****  
 9364              		.loc 19 99 9 is_stmt 0 view .LVU2599
 9365 03ae C5E90210 		strd	r1, r0, [r5, #8]
  95:delayline_reverse.h **** 
 9366              		.loc 19 95 54 view .LVU2600
 9367 03b2 B2FBF7F1 		udiv	r1, r2, r7
 101:delayline_reverse.h ****         {
 9368              		.loc 19 101 45 view .LVU2601
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 302


 9369 03b6 AAEB0E0A 		sub	r10, r10, lr
  95:delayline_reverse.h **** 
 9370              		.loc 19 95 54 view .LVU2602
 9371 03ba 07FB1122 		mls	r2, r7, r1, r2
  92:delayline_reverse.h ****         
 9372              		.loc 19 92 9 view .LVU2603
 9373 03be 6B60     		str	r3, [r5, #4]
 101:delayline_reverse.h ****         {
 9374              		.loc 19 101 9 view .LVU2604
 9375 03c0 5245     		cmp	r2, r10
  95:delayline_reverse.h **** 
 9376              		.loc 19 95 9 view .LVU2605
 9377 03c2 6A61     		str	r2, [r5, #20]
 101:delayline_reverse.h ****         {
 9378              		.loc 19 101 9 view .LVU2606
 9379 03c4 40F2CF82 		bls	.L486
 103:delayline_reverse.h ****             {
 9380              		.loc 19 103 17 view .LVU2607
 9381 03c8 3A49     		ldr	r1, .L586+156
 103:delayline_reverse.h ****             {
 9382              		.loc 19 103 13 view .LVU2608
 9383 03ca 685C     		ldrb	r0, [r5, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 9384              		.loc 19 103 17 view .LVU2609
 9385 03cc 6A18     		adds	r2, r5, r1
 103:delayline_reverse.h ****             {
 9386              		.loc 19 103 13 view .LVU2610
 9387 03ce 0028     		cmp	r0, #0
 9388 03d0 40F0CF82 		bne	.L577
 107:delayline_reverse.h ****                 {
 9389              		.loc 19 107 21 view .LVU2611
 9390 03d4 3848     		ldr	r0, .L586+160
 105:delayline_reverse.h ****                 
 9391              		.loc 19 105 17 view .LVU2612
 9392 03d6 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 9393              		.loc 19 110 45 view .LVU2613
 9394 03d8 013B     		subs	r3, r3, #1
 107:delayline_reverse.h ****                 {
 9395              		.loc 19 107 17 view .LVU2614
 9396 03da 2E5C     		ldrb	r6, [r5, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 9397              		.loc 19 107 21 view .LVU2615
 9398 03dc 2844     		add	r0, r0, r5
 105:delayline_reverse.h ****                 
 9399              		.loc 19 105 17 view .LVU2616
 9400 03de 6F54     		strb	r7, [r5, r1]
 107:delayline_reverse.h ****                 {
 9401              		.loc 19 107 17 view .LVU2617
 9402 03e0 002E     		cmp	r6, #0
 9403 03e2 40F0EB83 		bne	.L488
 110:delayline_reverse.h ****                 }
 9404              		.loc 19 110 21 view .LVU2618
 9405 03e6 EB60     		str	r3, [r5, #12]
 9406              	.L489:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9407              		.loc 19 130 45 view .LVU2619
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 303


 9408 03e8 07EE90EA 		vmov	s15, lr	@ int
 9409              	.LVL591:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9410              		.loc 19 130 45 view .LVU2620
 9411 03ec B7EE007A 		vmov.f32	s14, #1.0e+0
 9412 03f0 F8EE676A 		vcvt.f32.u32	s13, s15
 9413 03f4 C7EE267A 		vdiv.f32	s15, s14, s13
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9414              		.loc 19 130 37 view .LVU2621
 9415 03f8 37EE8BBA 		vadd.f32	s22, s15, s22
 131:delayline_reverse.h ****                 {
 9416              		.loc 19 131 17 view .LVU2622
 9417 03fc B4EEC7BA 		vcmpe.f32	s22, s14
 9418 0400 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9419 0404 40F39183 		ble	.L578
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9420              		.loc 19 133 21 view .LVU2623
 9421 0408 049B     		ldr	r3, [sp, #16]
 134:delayline_reverse.h ****                     playinghead_ = true;
 9422              		.loc 19 134 21 view .LVU2624
 9423 040a 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9424              		.loc 19 133 21 view .LVU2625
 9425 040c 83ED007A 		vstr.32	s14, [r3]
 135:delayline_reverse.h ****                 }
 9426              		.loc 19 135 21 view .LVU2626
 9427 0410 0123     		movs	r3, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 9428              		.loc 19 134 21 view .LVU2627
 9429 0412 1170     		strb	r1, [r2]
 135:delayline_reverse.h ****                 }
 9430              		.loc 19 135 21 view .LVU2628
 9431 0414 0370     		strb	r3, [r0]
 9432 0416 57E0     		b	.L587
 9433              	.L588:
 9434              		.align	2
 9435              	.L586:
 9436 0418 00000000 		.word	.LANCHOR106
 9437 041c 00000000 		.word	.LANCHOR0
 9438 0420 00000000 		.word	.LANCHOR107
 9439 0424 00000000 		.word	.LANCHOR1
 9440 0428 00000000 		.word	.LANCHOR64
 9441 042c 00000000 		.word	.LANCHOR82
 9442 0430 00000000 		.word	.LANCHOR55
 9443 0434 00000000 		.word	.LANCHOR112
 9444 0438 00000000 		.word	.LANCHOR94
 9445 043c 00000000 		.word	.LANCHOR100
 9446 0440 00000000 		.word	.LANCHOR95
 9447 0444 00000000 		.word	.LANCHOR101
 9448 0448 00000000 		.word	.LANCHOR93
 9449 044c 00000000 		.word	.LANCHOR103
 9450 0450 00000000 		.word	.LANCHOR92
 9451 0454 00000000 		.word	.LANCHOR102
 9452 0458 00000000 		.word	.LANCHOR104
 9453 045c 00000000 		.word	.LANCHOR2
 9454 0460 00000000 		.word	.LANCHOR105
 9455 0464 00000000 		.word	.LANCHOR115
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 304


 9456 0468 DB0FC93F 		.word	1070141403
 9457 046c 00000000 		.word	.LANCHOR116
 9458 0470 00000000 		.word	.LANCHOR119
 9459 0474 00000000 		.word	.LANCHOR79
 9460 0478 00000000 		.word	.LANCHOR120
 9461 047c 00000000 		.word	.LANCHOR117
 9462 0480 E4CB9640 		.word	1083624420
 9463 0484 00000000 		.word	.LANCHOR118
 9464 0488 0000803D 		.word	1031798784
 9465 048c 00000000 		.word	.LANCHOR121
 9466 0490 00000000 		.word	.LANCHOR122
 9467 0494 00000000 		.word	.LANCHOR123
 9468 0498 00000000 		.word	.LANCHOR124
 9469 049c 00000000 		.word	.LANCHOR125
 9470 04a0 00000000 		.word	.LANCHOR126
 9471 04a4 00000000 		.word	.LANCHOR3
 9472 04a8 BF270900 		.word	599999
 9473 04ac 851DD96F 		.word	1876499845
 9474 04b0 C1270900 		.word	600001
 9475 04b4 249F2400 		.word	2400036
 9476 04b8 1C9F2400 		.word	2400028
 9477 04bc 209F2400 		.word	2400032
 9478 04c0 C0270900 		.word	600000
 9479 04c4 189F2400 		.word	2400024
 9480              	.L587:
 9481              	.LVL592:
 9482              	.L492:
 135:delayline_reverse.h ****                 }
 9483              		.loc 19 135 21 view .LVU2629
 9484              	.LBE1824:
 9485              	.LBE1835:
 9486              	.LBE1854:
 391:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 9487              		.loc 20 391 9 is_stmt 1 view .LVU2630
 9488              	.LBB1855:
 9489              	.LBB1856:
 9490              	.LBB1857:
  95:delayline_reverse.h **** 
 9491              		.loc 19 95 45 is_stmt 0 view .LVU2631
 9492 04c8 2169     		ldr	r1, [r4, #16]
 9493 04ca 0BF10403 		add	r3, fp, #4
  95:delayline_reverse.h **** 
 9494              		.loc 19 95 43 view .LVU2632
 9495 04ce 6069     		ldr	r0, [r4, #20]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9496              		.loc 19 90 15 view .LVU2633
 9497 04d0 6568     		ldr	r5, [r4, #4]
 9498 04d2 08EE103A 		vmov	s16, r3	@ int
  95:delayline_reverse.h **** 
 9499              		.loc 19 95 43 view .LVU2634
 9500 04d6 0844     		add	r0, r0, r1
  92:delayline_reverse.h ****         
 9501              		.loc 19 92 45 view .LVU2635
 9502 04d8 B14F     		ldr	r7, .L589
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9503              		.loc 19 90 9 view .LVU2636
 9504 04da 04EB850E 		add	lr, r4, r5, lsl #2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 305


  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9505              		.loc 19 98 38 view .LVU2637
 9506 04de B14B     		ldr	r3, .L589+4
  95:delayline_reverse.h **** 
 9507              		.loc 19 95 43 view .LVU2638
 9508 04e0 421C     		adds	r2, r0, #1
  92:delayline_reverse.h ****         
 9509              		.loc 19 92 45 view .LVU2639
 9510 04e2 2F44     		add	r7, r7, r5
 101:delayline_reverse.h ****         {
 9511              		.loc 19 101 45 view .LVU2640
 9512 04e4 01F1FF3C 		add	ip, r1, #-1
 9513              	.LBE1857:
 9514              	.LBE1856:
 9515              	.LBE1855:
 391:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 9516              		.loc 20 391 26 view .LVU2641
 9517 04e8 DBED017A 		vldr.32	s15, [fp, #4]
 9518              	.LVL593:
 9519              	.LBB1866:
 9520              	.LBI1855:
  92:Veno-Echo.cpp ****     {
 9521              		.loc 20 92 10 is_stmt 1 view .LVU2642
  92:Veno-Echo.cpp ****     {
 9522              		.loc 20 92 10 is_stmt 0 view .LVU2643
 9523              	.LBE1866:
 9524              	.LBE1979:
 9525              	.LBE1990:
  94:Veno-Echo.cpp ****     }
 9526              		.loc 20 94 9 is_stmt 1 view .LVU2644
 9527              	.LBB1991:
 9528              	.LBB1980:
 9529              	.LBB1867:
 9530              	.LBB1862:
 9531              	.LBI1856:
  88:delayline_reverse.h ****     {
 9532              		.loc 19 88 17 view .LVU2645
 9533              	.LBB1858:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9534              		.loc 19 98 38 is_stmt 0 view .LVU2646
 9535 04ec D4E90205 		ldrd	r0, r5, [r4, #8]
 9536 04f0 00EB030A 		add	r10, r0, r3
  99:delayline_reverse.h ****  
 9537              		.loc 19 99 38 view .LVU2647
 9538 04f4 1D44     		add	r5, r5, r3
  92:delayline_reverse.h ****         
 9539              		.loc 19 92 57 view .LVU2648
 9540 04f6 03F1E043 		add	r3, r3, #1879048192
  95:delayline_reverse.h **** 
 9541              		.loc 19 95 54 view .LVU2649
 9542 04fa B2FBF1F0 		udiv	r0, r2, r1
 9543 04fe 01FB1020 		mls	r0, r1, r0, r2
 101:delayline_reverse.h ****         {
 9544              		.loc 19 101 36 view .LVU2650
 9545 0502 A949     		ldr	r1, .L589+8
  92:delayline_reverse.h ****         
 9546              		.loc 19 92 57 view .LVU2651
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 306


 9547 0504 A3F54013 		sub	r3, r3, #3145728
 101:delayline_reverse.h ****         {
 9548              		.loc 19 101 36 view .LVU2652
 9549 0508 6158     		ldr	r1, [r4, r1]
  92:delayline_reverse.h ****         
 9550              		.loc 19 92 57 view .LVU2653
 9551 050a A3F63A23 		subw	r3, r3, #2618
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9552              		.loc 19 90 9 view .LVU2654
 9553 050e CEED067A 		vstr.32	s15, [lr, #24]
 101:delayline_reverse.h ****         {
 9554              		.loc 19 101 36 view .LVU2655
 9555 0512 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 9556              		.loc 19 92 57 view .LVU2656
 9557 0514 A3FB0762 		umull	r6, r2, r3, r7
 9558 0518 DFF8C8E2 		ldr	lr, .L589+68
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9559              		.loc 19 98 50 view .LVU2657
 9560 051c A3FB0A61 		umull	r6, r1, r3, r10
  99:delayline_reverse.h ****  
 9561              		.loc 19 99 50 view .LVU2658
 9562 0520 A3FB0563 		umull	r6, r3, r3, r5
 101:delayline_reverse.h ****         {
 9563              		.loc 19 101 45 view .LVU2659
 9564 0524 019E     		ldr	r6, [sp, #4]
  92:delayline_reverse.h ****         
 9565              		.loc 19 92 57 view .LVU2660
 9566 0526 920C     		lsrs	r2, r2, #18
  95:delayline_reverse.h **** 
 9567              		.loc 19 95 9 view .LVU2661
 9568 0528 6061     		str	r0, [r4, #20]
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9569              		.loc 19 98 50 view .LVU2662
 9570 052a 890C     		lsrs	r1, r1, #18
 101:delayline_reverse.h ****         {
 9571              		.loc 19 101 45 view .LVU2663
 9572 052c ACEB060C 		sub	ip, ip, r6
  99:delayline_reverse.h ****  
 9573              		.loc 19 99 50 view .LVU2664
 9574 0530 9B0C     		lsrs	r3, r3, #18
  92:delayline_reverse.h ****         
 9575              		.loc 19 92 57 view .LVU2665
 9576 0532 0EFB1272 		mls	r2, lr, r2, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9577              		.loc 19 98 50 view .LVU2666
 9578 0536 0EFB11A1 		mls	r1, lr, r1, r10
 101:delayline_reverse.h ****         {
 9579              		.loc 19 101 9 view .LVU2667
 9580 053a 6045     		cmp	r0, ip
  99:delayline_reverse.h ****  
 9581              		.loc 19 99 50 view .LVU2668
 9582 053c 0EFB1353 		mls	r3, lr, r3, r5
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9583              		.loc 19 98 9 view .LVU2669
 9584 0540 C4E90121 		strd	r2, r1, [r4, #4]
  99:delayline_reverse.h ****  
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 307


 9585              		.loc 19 99 9 view .LVU2670
 9586 0544 E360     		str	r3, [r4, #12]
 101:delayline_reverse.h ****         {
 9587              		.loc 19 101 9 view .LVU2671
 9588 0546 40F2EB81 		bls	.L496
 103:delayline_reverse.h ****             {
 9589              		.loc 19 103 17 view .LVU2672
 9590 054a 9849     		ldr	r1, .L589+12
 103:delayline_reverse.h ****             {
 9591              		.loc 19 103 13 view .LVU2673
 9592 054c 605C     		ldrb	r0, [r4, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 9593              		.loc 19 103 17 view .LVU2674
 9594 054e 6318     		adds	r3, r4, r1
 103:delayline_reverse.h ****             {
 9595              		.loc 19 103 13 view .LVU2675
 9596 0550 0028     		cmp	r0, #0
 9597 0552 40F0EB81 		bne	.L579
 107:delayline_reverse.h ****                 {
 9598              		.loc 19 107 21 view .LVU2676
 9599 0556 9648     		ldr	r0, .L589+16
 105:delayline_reverse.h ****                 
 9600              		.loc 19 105 17 view .LVU2677
 9601 0558 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 9602              		.loc 19 110 45 view .LVU2678
 9603 055a 013A     		subs	r2, r2, #1
 107:delayline_reverse.h ****                 {
 9604              		.loc 19 107 17 view .LVU2679
 9605 055c 255C     		ldrb	r5, [r4, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 9606              		.loc 19 107 21 view .LVU2680
 9607 055e 2044     		add	r0, r0, r4
 105:delayline_reverse.h ****                 
 9608              		.loc 19 105 17 view .LVU2681
 9609 0560 6754     		strb	r7, [r4, r1]
 107:delayline_reverse.h ****                 {
 9610              		.loc 19 107 17 view .LVU2682
 9611 0562 002D     		cmp	r5, #0
 9612 0564 40F02C83 		bne	.L498
 110:delayline_reverse.h ****                 }
 9613              		.loc 19 110 21 view .LVU2683
 9614 0568 E260     		str	r2, [r4, #12]
 9615              	.L499:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9616              		.loc 19 130 45 view .LVU2684
 9617 056a DDED017A 		vldr.32	s15, [sp, #4]	@ int
 9618              	.LVL594:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9619              		.loc 19 130 45 view .LVU2685
 9620 056e B7EE007A 		vmov.f32	s14, #1.0e+0
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9621              		.loc 19 130 37 view .LVU2686
 9622 0572 039A     		ldr	r2, [sp, #12]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9623              		.loc 19 130 45 view .LVU2687
 9624 0574 B8EE676A 		vcvt.f32.u32	s12, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 308


 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9625              		.loc 19 130 37 view .LVU2688
 9626 0578 D2ED006A 		vldr.32	s13, [r2]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9627              		.loc 19 130 45 view .LVU2689
 9628 057c C7EE067A 		vdiv.f32	s15, s14, s12
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9629              		.loc 19 130 37 view .LVU2690
 9630 0580 77EEA67A 		vadd.f32	s15, s15, s13
 131:delayline_reverse.h ****                 {
 9631              		.loc 19 131 17 view .LVU2691
 9632 0584 F4EEC77A 		vcmpe.f32	s15, s14
 9633 0588 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9634 058c 40F31F83 		ble	.L581
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9635              		.loc 19 133 21 view .LVU2692
 9636 0590 039A     		ldr	r2, [sp, #12]
 134:delayline_reverse.h ****                     playinghead_ = true;
 9637              		.loc 19 134 21 view .LVU2693
 9638 0592 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9639              		.loc 19 133 21 view .LVU2694
 9640 0594 82ED007A 		vstr.32	s14, [r2]
 135:delayline_reverse.h ****                 }
 9641              		.loc 19 135 21 view .LVU2695
 9642 0598 0122     		movs	r2, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 9643              		.loc 19 134 21 view .LVU2696
 9644 059a 1970     		strb	r1, [r3]
 135:delayline_reverse.h ****                 }
 9645              		.loc 19 135 21 view .LVU2697
 9646 059c 0270     		strb	r2, [r0]
 9647              	.LVL595:
 9648              	.L502:
 135:delayline_reverse.h ****                 }
 9649              		.loc 19 135 21 view .LVU2698
 9650              	.LBE1858:
 9651              	.LBE1862:
 9652              	.LBE1867:
 396:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 9653              		.loc 20 396 9 is_stmt 1 view .LVU2699
 396:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 9654              		.loc 20 396 56 is_stmt 0 view .LVU2700
 9655 059e 06AA     		add	r2, sp, #24
 9656 05a0 5946     		mov	r1, fp
 9657 05a2 8448     		ldr	r0, .L589+20
 9658 05a4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9659              	.LVL596:
 397:Veno-Echo.cpp **** 
 9660              		.loc 20 397 56 view .LVU2701
 9661 05a8 18EE101A 		vmov	r1, s16	@ int
 9662 05ac 07AA     		add	r2, sp, #28
 9663 05ae 8248     		ldr	r0, .L589+24
 396:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 9664              		.loc 20 396 56 view .LVU2702
 9665 05b0 F0EE408A 		vmov.f32	s17, s0
 9666              	.LVL597:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 309


 397:Veno-Echo.cpp **** 
 9667              		.loc 20 397 9 is_stmt 1 view .LVU2703
 397:Veno-Echo.cpp **** 
 9668              		.loc 20 397 56 is_stmt 0 view .LVU2704
 9669 05b4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9670              	.LVL598:
 400:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 9671              		.loc 20 400 46 view .LVU2705
 9672 05b8 8048     		ldr	r0, .L589+28
 397:Veno-Echo.cpp **** 
 9673              		.loc 20 397 56 view .LVU2706
 9674 05ba B0EE408A 		vmov.f32	s16, s0
 9675              	.LVL599:
 400:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 9676              		.loc 20 400 9 is_stmt 1 view .LVU2707
 400:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 9677              		.loc 20 400 46 is_stmt 0 view .LVU2708
 9678 05be FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 9679              	.LVL600:
 400:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 9680              		.loc 20 400 46 view .LVU2709
 9681 05c2 0346     		mov	r3, r0
 401:Veno-Echo.cpp **** 
 9682              		.loc 20 401 46 view .LVU2710
 9683 05c4 7E48     		ldr	r0, .L589+32
 400:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 9684              		.loc 20 400 45 view .LVU2711
 9685 05c6 1B68     		ldr	r3, [r3]	@ float
 400:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 9686              		.loc 20 400 47 view .LVU2712
 9687 05c8 0893     		str	r3, [sp, #32]	@ float
 401:Veno-Echo.cpp **** 
 9688              		.loc 20 401 9 is_stmt 1 view .LVU2713
 401:Veno-Echo.cpp **** 
 9689              		.loc 20 401 46 is_stmt 0 view .LVU2714
 9690 05ca FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 9691              	.LVL601:
 401:Veno-Echo.cpp **** 
 9692              		.loc 20 401 45 view .LVU2715
 9693 05ce 0368     		ldr	r3, [r0]	@ float
 401:Veno-Echo.cpp **** 
 9694              		.loc 20 401 47 view .LVU2716
 9695 05d0 0993     		str	r3, [sp, #36]	@ float
 404:Veno-Echo.cpp **** 
 9696              		.loc 20 404 9 is_stmt 1 view .LVU2717
 404:Veno-Echo.cpp **** 
 9697              		.loc 20 404 28 is_stmt 0 view .LVU2718
 9698 05d2 FFF7FEFF 		bl	_Z19Update_BaseTempoLEDv
 9699              	.LVL602:
 407:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 9700              		.loc 20 407 9 is_stmt 1 view .LVU2719
 9701              	.LBB1868:
 9702              	.LBB1869:
1864:Veno-Echo.cpp ****         returnval = limit;
 9703              		.loc 20 1864 5 is_stmt 0 view .LVU2720
 9704 05d6 B0EE007A 		vmov.f32	s14, #2.0e+0
 9705              	.LBE1869:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 310


 9706              	.LBE1868:
 407:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 9707              		.loc 20 407 34 view .LVU2721
 9708 05da DDED087A 		vldr.32	s15, [sp, #32]
 9709              	.LVL603:
 9710              	.LBB1872:
 9711              	.LBI1868:
1861:Veno-Echo.cpp **** {
 9712              		.loc 20 1861 7 is_stmt 1 view .LVU2722
 9713              	.LBB1870:
1863:Veno-Echo.cpp ****     if (input > limit)
 9714              		.loc 20 1863 5 view .LVU2723
1864:Veno-Echo.cpp ****         returnval = limit;
 9715              		.loc 20 1864 5 view .LVU2724
 9716 05de F4EEC77A 		vcmpe.f32	s15, s14
 9717 05e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9718 05e6 00F39881 		bgt	.L543
1866:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9719              		.loc 20 1866 10 view .LVU2725
 9720 05ea B8EE007A 		vmov.f32	s14, #-2.0e+0
1867:Veno-Echo.cpp ****     else
 9721              		.loc 20 1867 19 is_stmt 0 view .LVU2726
 9722 05ee F4EE477A 		vcmp.f32	s15, s14
 9723 05f2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9724 05f6 48BF     		it	mi
 9725 05f8 F0EE477A 		vmovmi.f32	s15, s14
 9726              	.LVL604:
 9727              	.L506:
1871:Veno-Echo.cpp **** }
 9728              		.loc 20 1871 5 is_stmt 1 view .LVU2727
1871:Veno-Echo.cpp **** }
 9729              		.loc 20 1871 5 is_stmt 0 view .LVU2728
 9730              	.LBE1870:
 9731              	.LBE1872:
 9732              	.LBB1873:
 9733              	.LBB1874:
1864:Veno-Echo.cpp ****         returnval = limit;
 9734              		.loc 20 1864 5 view .LVU2729
 9735 05fc B0EE007A 		vmov.f32	s14, #2.0e+0
 9736              	.LBE1874:
 9737              	.LBE1873:
 408:Veno-Echo.cpp **** 
 9738              		.loc 20 408 34 view .LVU2730
 9739 0600 9DED090A 		vldr.32	s0, [sp, #36]
 407:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 9740              		.loc 20 407 23 view .LVU2731
 9741 0604 CDED087A 		vstr.32	s15, [sp, #32]
 408:Veno-Echo.cpp **** 
 9742              		.loc 20 408 9 is_stmt 1 view .LVU2732
 9743              	.LVL605:
 9744              	.LBB1878:
 9745              	.LBI1873:
1861:Veno-Echo.cpp **** {
 9746              		.loc 20 1861 7 view .LVU2733
 9747              	.LBB1875:
1863:Veno-Echo.cpp ****     if (input > limit)
 9748              		.loc 20 1863 5 view .LVU2734
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 311


1864:Veno-Echo.cpp ****         returnval = limit;
 9749              		.loc 20 1864 5 view .LVU2735
 9750 0608 B4EEC70A 		vcmpe.f32	s0, s14
 9751 060c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9752 0610 00F3EA80 		bgt	.L544
1866:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9753              		.loc 20 1866 10 view .LVU2736
 9754 0614 B8EE007A 		vmov.f32	s14, #-2.0e+0
 9755              	.LBE1875:
 9756              	.LBE1878:
 9757              	.LBB1879:
 410:Veno-Echo.cpp **** {
 9758              		.loc 20 410 1 is_stmt 0 view .LVU2737
 9759 0618 6A4B     		ldr	r3, .L589+36
 9760 061a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9761              	.LBE1879:
 9762              	.LBB1901:
 9763              	.LBB1876:
1867:Veno-Echo.cpp ****     else
 9764              		.loc 20 1867 19 view .LVU2738
 9765 061c B4EE470A 		vcmp.f32	s0, s14
 9766 0620 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9767 0624 48BF     		it	mi
 9768 0626 B0EE470A 		vmovmi.f32	s0, s14
 9769              	.LVL606:
1871:Veno-Echo.cpp **** }
 9770              		.loc 20 1871 5 is_stmt 1 view .LVU2739
1871:Veno-Echo.cpp **** }
 9771              		.loc 20 1871 5 is_stmt 0 view .LVU2740
 9772              	.LBE1876:
 9773              	.LBE1901:
 408:Veno-Echo.cpp **** 
 9774              		.loc 20 408 23 view .LVU2741
 9775 062a 8DED090A 		vstr.32	s0, [sp, #36]
 410:Veno-Echo.cpp **** {
 9776              		.loc 20 410 1 is_stmt 1 view .LVU2742
 9777              	.LBB1902:
 9778 062e 002B     		cmp	r3, #0
 9779 0630 00F0E380 		beq	.L582
 9780              	.L510:
 9781              	.LBE1902:
 454:Veno-Echo.cpp ****         static float RNegFB{};
 9782              		.loc 20 454 9 view .LVU2743
 455:Veno-Echo.cpp **** 
 9783              		.loc 20 455 9 view .LVU2744
 458:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9784              		.loc 20 458 9 view .LVU2745
 458:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9785              		.loc 20 458 22 is_stmt 0 view .LVU2746
 9786 0634 644B     		ldr	r3, .L589+40
 9787              	.LBB1903:
 9788              	.LBB1904:
  53:envFollow.h   **** 
  54:envFollow.h   ****     float GetEnv(float sample)
  55:envFollow.h   ****     {
  56:envFollow.h   ****         //remove average DC offset:
  57:envFollow.h   ****         avg = (w * sample) + ((1-w) * avg);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 312


 9789              		.loc 12 57 16 view .LVU2747
 9790 0636 D8ED042A 		vldr.32	s5, [r8, #16]
 9791              	.LBE1904:
 9792              	.LBE1903:
 458:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9793              		.loc 20 458 22 view .LVU2748
 9794 063a D3ED004A 		vldr.32	s9, [r3]
 9795 063e 634B     		ldr	r3, .L589+44
 9796              	.LBB1916:
 9797              	.LBB1905:
 9798              		.loc 12 57 37 view .LVU2749
 9799 0640 98ED006A 		vldr.32	s12, [r8]
 9800              	.LBE1905:
 9801              	.LBE1916:
 458:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9802              		.loc 20 458 22 view .LVU2750
 9803 0644 93ED007A 		vldr.32	s14, [r3]
 461:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9804              		.loc 20 461 22 view .LVU2751
 9805 0648 614B     		ldr	r3, .L589+48
 458:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9806              		.loc 20 458 9 view .LVU2752
 9807 064a F4EEC74A 		vcmpe.f32	s9, s14
 9808              	.LBB1917:
 9809              	.LBB1918:
 9810              		.loc 12 57 16 view .LVU2753
 9811 064e D9ED043A 		vldr.32	s7, [r9, #16]
  58:envFollow.h   ****         sample_noDC = sample - avg;
  59:envFollow.h   **** 
  60:envFollow.h   ****         //take absolute
  61:envFollow.h   ****         pos_sample = fabsf(sample_noDC);
  62:envFollow.h   ****         //return static_cast<int>(pos_sample);
  63:envFollow.h   **** 
  64:envFollow.h   ****         //remove ripple
  65:envFollow.h   ****         avg_env = (w_env * pos_sample) + ((1-w_env) * avg_env);
 9812              		.loc 12 65 20 view .LVU2754
 9813 0652 99ED054A 		vldr.32	s8, [r9, #20]
 9814              		.loc 12 65 53 view .LVU2755
 9815 0656 99ED032A 		vldr.32	s4, [r9, #12]
 9816              	.LBE1918:
 9817              	.LBE1917:
 458:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9818              		.loc 20 458 9 view .LVU2756
 9819 065a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9820              	.LBB1927:
 9821              	.LBB1906:
 9822              		.loc 12 65 20 view .LVU2757
 9823 065e 98ED053A 		vldr.32	s6, [r8, #20]
 9824              		.loc 12 65 53 view .LVU2758
 9825 0662 98ED031A 		vldr.32	s2, [r8, #12]
 9826              	.LBE1906:
 9827              	.LBE1927:
 477:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9828              		.loc 20 477 13 view .LVU2759
 9829 0666 DFED5B1A 		vldr.32	s3, .L589+52
 9830 066a 58BF     		it	pl
 9831 066c 74EEC74A 		vsubpl.f32	s9, s9, s14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 313


 461:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9832              		.loc 20 461 9 is_stmt 1 view .LVU2760
 461:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9833              		.loc 20 461 22 is_stmt 0 view .LVU2761
 9834 0670 93ED007A 		vldr.32	s14, [r3]
 9835 0674 584B     		ldr	r3, .L589+56
 9836 0676 D3ED006A 		vldr.32	s13, [r3]
 464:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 9837              		.loc 20 464 15 view .LVU2762
 9838 067a 67EEA44A 		vmul.f32	s9, s15, s9
 9839              	.LBB1928:
 9840              	.LBB1919:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9841              		.loc 12 57 37 view .LVU2763
 9842 067e D9ED007A 		vldr.32	s15, [r9]
 9843              	.LBE1919:
 9844              	.LBE1928:
 461:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9845              		.loc 20 461 9 view .LVU2764
 9846 0682 B4EEE67A 		vcmpe.f32	s14, s13
 468:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9847              		.loc 20 468 36 view .LVU2765
 9848 0686 554B     		ldr	r3, .L589+60
 461:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9849              		.loc 20 461 9 view .LVU2766
 9850 0688 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9851 068c 58BF     		it	pl
 9852 068e 37EE667A 		vsubpl.f32	s14, s14, s13
 464:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 9853              		.loc 20 464 9 is_stmt 1 view .LVU2767
 9854              	.LVL607:
 465:Veno-Echo.cpp **** 
 9855              		.loc 20 465 9 view .LVU2768
 468:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9856              		.loc 20 468 36 is_stmt 0 view .LVU2769
 9857 0692 F7EE006A 		vmov.f32	s13, #1.0e+0
 465:Veno-Echo.cpp **** 
 9858              		.loc 20 465 15 view .LVU2770
 9859 0696 20EE070A 		vmul.f32	s0, s0, s14
 9860              	.LVL608:
 468:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9861              		.loc 20 468 9 is_stmt 1 view .LVU2771
 9862              	.LBB1929:
 9863              	.LBB1907:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9864              		.loc 12 57 33 is_stmt 0 view .LVU2772
 9865 069a 36EEE25A 		vsub.f32	s10, s13, s5
 9866              	.LBE1907:
 9867              	.LBE1929:
 9868              	.LBB1930:
 9869              	.LBB1920:
 9870 069e 76EEE35A 		vsub.f32	s11, s13, s7
 9871              	.LBE1920:
 9872              	.LBE1930:
 9873              	.LBB1931:
 9874              	.LBB1908:
 9875              		.loc 12 65 45 view .LVU2773
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 314


 9876 06a2 36EEC37A 		vsub.f32	s14, s13, s6
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9877              		.loc 12 57 37 view .LVU2774
 9878 06a6 25EE065A 		vmul.f32	s10, s10, s12
 9879              	.LBE1908:
 9880              	.LBE1931:
 468:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9881              		.loc 20 468 36 view .LVU2775
 9882 06aa 93ED006A 		vldr.32	s12, [r3]
 9883              	.LBB1932:
 9884              	.LBB1921:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9885              		.loc 12 57 37 view .LVU2776
 9886 06ae 65EEA75A 		vmul.f32	s11, s11, s15
 9887              		.loc 12 65 45 view .LVU2777
 9888 06b2 76EEC47A 		vsub.f32	s15, s13, s8
 9889              	.LBE1921:
 9890              	.LBE1932:
 9891              	.LBB1933:
 9892              	.LBB1909:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9893              		.loc 12 57 28 view .LVU2778
 9894 06b6 A4EEA25A 		vfma.f32	s10, s9, s5
 9895              	.LBE1909:
 9896              	.LBE1933:
 9897              	.LBB1934:
 9898              	.LBB1922:
 9899 06ba E0EE235A 		vfma.f32	s11, s0, s7
 9900              		.loc 12 65 53 view .LVU2779
 9901 06be 67EE827A 		vmul.f32	s15, s15, s4
 9902              	.LBE1922:
 9903              	.LBE1934:
 9904              	.LBB1935:
 9905              	.LBB1910:
 9906 06c2 27EE017A 		vmul.f32	s14, s14, s2
 9907              	.LBE1910:
 9908              	.LBE1935:
 468:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9909              		.loc 20 468 36 view .LVU2780
 9910 06c6 76EEC66A 		vsub.f32	s13, s13, s12
 9911              	.LBB1936:
 9912              	.LBB1911:
  58:envFollow.h   **** 
 9913              		.loc 12 58 30 view .LVU2781
 9914 06ca 34EEC52A 		vsub.f32	s4, s9, s10
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9915              		.loc 12 57 13 view .LVU2782
 9916 06ce 88ED005A 		vstr.32	s10, [r8]
 9917              	.LBE1911:
 9918              	.LBE1936:
 9919              	.LBB1937:
 9920              	.LBB1923:
  58:envFollow.h   **** 
 9921              		.loc 12 58 30 view .LVU2783
 9922 06d2 70EE652A 		vsub.f32	s5, s0, s11
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9923              		.loc 12 57 13 view .LVU2784
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 315


 9924 06d6 C9ED005A 		vstr.32	s11, [r9]
 9925              	.LBE1923:
 9926              	.LBE1937:
 468:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9927              		.loc 20 468 89 view .LVU2785
 9928 06da 66EE005A 		vmul.f32	s11, s12, s0
 9929              	.LBB1938:
 9930              	.LBB1912:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9931              		.loc 12 61 27 view .LVU2786
 9932 06de F0EEC23A 		vabs.f32	s7, s4
  58:envFollow.h   **** 
 9933              		.loc 12 58 21 view .LVU2787
 9934 06e2 88ED022A 		vstr.32	s4, [r8, #8]
 9935              	.LBE1912:
 9936              	.LBE1938:
 9937              	.LBB1939:
 9938              	.LBB1924:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9939              		.loc 12 61 27 view .LVU2788
 9940 06e6 B0EEE25A 		vabs.f32	s10, s5
  58:envFollow.h   **** 
 9941              		.loc 12 58 21 view .LVU2789
 9942 06ea C9ED022A 		vstr.32	s5, [r9, #8]
 9943              	.LBE1924:
 9944              	.LBE1939:
 469:Veno-Echo.cpp **** 
 9945              		.loc 20 469 89 view .LVU2790
 9946 06ee 26EE246A 		vmul.f32	s12, s12, s9
 9947              	.LBB1940:
 9948              	.LBB1913:
 9949              		.loc 12 65 40 view .LVU2791
 9950 06f2 A3EE837A 		vfma.f32	s14, s7, s6
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9951              		.loc 12 61 20 view .LVU2792
 9952 06f6 C8ED013A 		vstr.32	s7, [r8, #4]
 9953              	.LBE1913:
 9954              	.LBE1940:
 9955              	.LBB1941:
 9956              	.LBB1925:
 9957              		.loc 12 65 40 view .LVU2793
 9958 06fa E5EE047A 		vfma.f32	s15, s10, s8
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9959              		.loc 12 61 20 view .LVU2794
 9960 06fe 89ED015A 		vstr.32	s10, [r9, #4]
 9961              	.LBE1925:
 9962              	.LBE1941:
 468:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9963              		.loc 20 468 15 view .LVU2795
 9964 0702 E6EEA45A 		vfma.f32	s11, s13, s9
 9965              	.LVL609:
 469:Veno-Echo.cpp **** 
 9966              		.loc 20 469 9 is_stmt 1 view .LVU2796
 469:Veno-Echo.cpp **** 
 9967              		.loc 20 469 15 is_stmt 0 view .LVU2797
 9968 0706 A6EE806A 		vfma.f32	s12, s13, s0
 9969              	.LVL610:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 316


 473:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 9970              		.loc 20 473 9 is_stmt 1 view .LVU2798
 9971              	.LBB1942:
 9972              	.LBI1903:
  54:envFollow.h   ****     {
 9973              		.loc 12 54 11 view .LVU2799
 9974              	.LBB1914:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9975              		.loc 12 57 9 view .LVU2800
  58:envFollow.h   **** 
 9976              		.loc 12 58 9 view .LVU2801
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9977              		.loc 12 61 9 view .LVU2802
 9978              		.loc 12 65 9 view .LVU2803
 9979              	.LBE1914:
 9980              	.LBE1942:
 477:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9981              		.loc 20 477 13 is_stmt 0 view .LVU2804
 9982 070a B4EEE17A 		vcmpe.f32	s14, s3
 9983              	.LBB1943:
 9984              	.LBB1915:
 9985              		.loc 12 65 17 view .LVU2805
 9986 070e 88ED037A 		vstr.32	s14, [r8, #12]
  66:envFollow.h   **** 
  67:envFollow.h   ****         return avg_env;
 9987              		.loc 12 67 9 is_stmt 1 view .LVU2806
 9988              	.LVL611:
 9989              		.loc 12 67 9 is_stmt 0 view .LVU2807
 9990              	.LBE1915:
 9991              	.LBE1943:
 474:Veno-Echo.cpp **** 
 9992              		.loc 20 474 9 is_stmt 1 view .LVU2808
 9993              	.LBB1944:
 9994              	.LBI1917:
  54:envFollow.h   ****     {
 9995              		.loc 12 54 11 view .LVU2809
 9996              	.LBB1926:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9997              		.loc 12 57 9 view .LVU2810
  58:envFollow.h   **** 
 9998              		.loc 12 58 9 view .LVU2811
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9999              		.loc 12 61 9 view .LVU2812
  65:envFollow.h   **** 
 10000              		.loc 12 65 9 view .LVU2813
  65:envFollow.h   **** 
 10001              		.loc 12 65 17 is_stmt 0 view .LVU2814
 10002 0712 C9ED037A 		vstr.32	s15, [r9, #12]
 10003              		.loc 12 67 9 is_stmt 1 view .LVU2815
 10004              	.LVL612:
 10005              		.loc 12 67 9 is_stmt 0 view .LVU2816
 10006              	.LBE1926:
 10007              	.LBE1944:
 477:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 10008              		.loc 20 477 13 is_stmt 1 view .LVU2817
 10009 0716 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10010 071a 3DDB     		blt	.L572
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 317


 478:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 10011              		.loc 20 478 17 view .LVU2818
 478:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 10012              		.loc 20 478 32 is_stmt 0 view .LVU2819
 10013 071c 37EE617A 		vsub.f32	s14, s14, s3
 10014              	.LVL613:
 478:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 10015              		.loc 20 478 47 view .LVU2820
 10016 0720 F0EE086A 		vmov.f32	s13, #3.0e+0
 10017 0724 27EE267A 		vmul.f32	s14, s14, s13
 10018              	.L516:
 482:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 10019              		.loc 20 482 13 view .LVU2821
 10020 0728 DFED2A6A 		vldr.32	s13, .L589+52
 10021 072c 274B     		ldr	r3, .L589+44
 10022 072e F4EEE67A 		vcmpe.f32	s15, s13
 10023 0732 83ED007A 		vstr.32	s14, [r3]
 482:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 10024              		.loc 20 482 13 is_stmt 1 view .LVU2822
 10025 0736 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10026 073a 2ADB     		blt	.L573
 483:Veno-Echo.cpp ****             else RNegFB = 0.0;
 10027              		.loc 20 483 17 view .LVU2823
 483:Veno-Echo.cpp ****             else RNegFB = 0.0;
 10028              		.loc 20 483 32 is_stmt 0 view .LVU2824
 10029 073c 77EEE67A 		vsub.f32	s15, s15, s13
 10030              	.LVL614:
 483:Veno-Echo.cpp ****             else RNegFB = 0.0;
 10031              		.loc 20 483 47 view .LVU2825
 10032 0740 B0EE087A 		vmov.f32	s14, #3.0e+0
 10033 0744 67EE877A 		vmul.f32	s15, s15, s14
 10034              	.L518:
 10035 0748 234B     		ldr	r3, .L589+56
 487:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 10036              		.loc 20 487 15 view .LVU2826
 10037 074a 38EEA50A 		vadd.f32	s0, s17, s11
 10038              	.LVL615:
 488:Veno-Echo.cpp ****  
 10039              		.loc 20 488 15 view .LVU2827
 10040 074e 38EE068A 		vadd.f32	s16, s16, s12
 10041              	.LVL616:
 488:Veno-Echo.cpp ****  
 10042              		.loc 20 488 15 view .LVU2828
 10043 0752 C3ED007A 		vstr.32	s15, [r3]
 487:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 10044              		.loc 20 487 9 is_stmt 1 view .LVU2829
 10045              	.LVL617:
 488:Veno-Echo.cpp ****  
 10046              		.loc 20 488 9 view .LVU2830
 491:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 10047              		.loc 20 491 9 view .LVU2831
 10048              	.LBB1945:
 10049              	.LBI1945:
1861:Veno-Echo.cpp **** {
 10050              		.loc 20 1861 7 view .LVU2832
 10051              	.LBB1946:
1863:Veno-Echo.cpp ****     if (input > limit)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 318


 10052              		.loc 20 1863 5 view .LVU2833
1864:Veno-Echo.cpp ****         returnval = limit;
 10053              		.loc 20 1864 5 view .LVU2834
 10054 0756 F0EE007A 		vmov.f32	s15, #2.0e+0
 10055 075a B4EEE70A 		vcmpe.f32	s0, s15
 10056 075e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10057 0762 13DC     		bgt	.L550
1866:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10058              		.loc 20 1866 10 view .LVU2835
 10059 0764 F8EE007A 		vmov.f32	s15, #-2.0e+0
1867:Veno-Echo.cpp ****     else
 10060              		.loc 20 1867 19 is_stmt 0 view .LVU2836
 10061 0768 B4EE670A 		vcmp.f32	s0, s15
 10062 076c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10063 0770 48BF     		it	mi
 10064 0772 B0EE670A 		vmovmi.f32	s0, s15
 10065              	.LVL618:
 10066              	.L520:
1871:Veno-Echo.cpp **** }
 10067              		.loc 20 1871 5 is_stmt 1 view .LVU2837
1871:Veno-Echo.cpp **** }
 10068              		.loc 20 1871 5 is_stmt 0 view .LVU2838
 10069              	.LBE1946:
 10070              	.LBE1945:
 492:Veno-Echo.cpp **** 
 10071              		.loc 20 492 9 is_stmt 1 view .LVU2839
 10072              	.LBB1948:
 10073              	.LBI1605:
1861:Veno-Echo.cpp **** {
 10074              		.loc 20 1861 7 view .LVU2840
 10075              	.LBB1607:
1863:Veno-Echo.cpp ****     if (input > limit)
 10076              		.loc 20 1863 5 view .LVU2841
1864:Veno-Echo.cpp ****         returnval = limit;
 10077              		.loc 20 1864 5 view .LVU2842
 10078 0776 F0EE007A 		vmov.f32	s15, #2.0e+0
 10079 077a B4EEE78A 		vcmpe.f32	s16, s15
 10080 077e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10081 0782 7FF78FAC 		ble	.L583
1865:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10082              		.loc 20 1865 19 is_stmt 0 view .LVU2843
 10083 0786 B0EE678A 		vmov.f32	s16, s15
 10084              	.LVL619:
1865:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10085              		.loc 20 1865 19 view .LVU2844
 10086 078a 94E4     		b	.L522
 10087              	.LVL620:
 10088              	.L550:
1865:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10089              		.loc 20 1865 19 view .LVU2845
 10090              	.LBE1607:
 10091              	.LBE1948:
 10092              	.LBB1949:
 10093              	.LBB1947:
 10094 078c B0EE670A 		vmov.f32	s0, s15
 10095              	.LVL621:
1865:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 319


 10096              		.loc 20 1865 19 view .LVU2846
 10097 0790 F1E7     		b	.L520
 10098              	.LVL622:
 10099              	.L573:
1865:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10100              		.loc 20 1865 19 view .LVU2847
 10101              	.LBE1947:
 10102              	.LBE1949:
 484:Veno-Echo.cpp **** 
 10103              		.loc 20 484 25 view .LVU2848
 10104 0792 DFED137A 		vldr.32	s15, .L589+64
 10105              	.LVL623:
 484:Veno-Echo.cpp **** 
 10106              		.loc 20 484 25 view .LVU2849
 10107 0796 D7E7     		b	.L518
 10108              	.LVL624:
 10109              	.L572:
 480:Veno-Echo.cpp ****             
 10110              		.loc 20 480 25 view .LVU2850
 10111 0798 9FED117A 		vldr.32	s14, .L589+64
 10112              	.LVL625:
 480:Veno-Echo.cpp ****             
 10113              		.loc 20 480 25 view .LVU2851
 10114 079c C4E7     		b	.L516
 10115              	.L590:
 10116 079e 00BF     		.align	2
 10117              	.L589:
 10118 07a0 C1270900 		.word	600001
 10119 07a4 BF270900 		.word	599999
 10120 07a8 189F2400 		.word	2400024
 10121 07ac 249F2400 		.word	2400036
 10122 07b0 1C9F2400 		.word	2400028
 10123 07b4 00000000 		.word	.LANCHOR104
 10124 07b8 00000000 		.word	.LANCHOR105
 10125 07bc 00000000 		.word	.LANCHOR0
 10126 07c0 00000000 		.word	.LANCHOR1
 10127 07c4 00000000 		.word	.LANCHOR82
 10128 07c8 00000000 		.word	.LANCHOR31
 10129 07cc 00000000 		.word	.LANCHOR127
 10130 07d0 00000000 		.word	.LANCHOR43
 10131 07d4 CDCCCC3E 		.word	1053609165
 10132 07d8 00000000 		.word	.LANCHOR128
 10133 07dc 00000000 		.word	.LANCHOR71
 10134 07e0 00000000 		.word	0
 10135 07e4 C0270900 		.word	600000
 10136              	.LVL626:
 10137              	.L544:
 10138              	.LBB1950:
 410:Veno-Echo.cpp **** {
 10139              		.loc 20 410 1 view .LVU2852
 10140 07e8 D64B     		ldr	r3, .L591
 10141              	.LBE1950:
 10142              	.LBB1951:
 10143              	.LBB1877:
1865:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10144              		.loc 20 1865 19 view .LVU2853
 10145 07ea B0EE470A 		vmov.f32	s0, s14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 320


 10146              	.LVL627:
1871:Veno-Echo.cpp **** }
 10147              		.loc 20 1871 5 is_stmt 1 view .LVU2854
1871:Veno-Echo.cpp **** }
 10148              		.loc 20 1871 5 is_stmt 0 view .LVU2855
 10149              	.LBE1877:
 10150              	.LBE1951:
 10151              	.LBB1952:
 410:Veno-Echo.cpp **** {
 10152              		.loc 20 410 1 view .LVU2856
 10153 07ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10154              	.LBE1952:
 408:Veno-Echo.cpp **** 
 10155              		.loc 20 408 23 view .LVU2857
 10156 07f0 8DED090A 		vstr.32	s0, [sp, #36]
 410:Veno-Echo.cpp **** {
 10157              		.loc 20 410 1 is_stmt 1 view .LVU2858
 10158              	.LBB1953:
 10159 07f4 002B     		cmp	r3, #0
 10160 07f6 7FF41DAF 		bne	.L510
 10161              	.L582:
 10162              	.LBB1880:
 416:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 10163              		.loc 20 416 9 view .LVU2859
 416:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 10164              		.loc 20 416 22 is_stmt 0 view .LVU2860
 10165 07fa 9FEDD39A 		vldr.32	s18, .L591+4
 10166 07fe D34D     		ldr	r5, .L591+8
 10167 0800 27EE890A 		vmul.f32	s0, s15, s18
 417:Veno-Echo.cpp **** 
 10168              		.loc 20 417 22 view .LVU2861
 10169 0804 D24C     		ldr	r4, .L591+12
 416:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 10170              		.loc 20 416 22 view .LVU2862
 10171 0806 2846     		mov	r0, r5
 10172 0808 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10173              	.LVL628:
 417:Veno-Echo.cpp **** 
 10174              		.loc 20 417 9 is_stmt 1 view .LVU2863
 417:Veno-Echo.cpp **** 
 10175              		.loc 20 417 22 is_stmt 0 view .LVU2864
 10176 080c 9DED090A 		vldr.32	s0, [sp, #36]
 10177 0810 2046     		mov	r0, r4
 10178 0812 20EE090A 		vmul.f32	s0, s0, s18
 10179 0816 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10180              	.LVL629:
 420:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10181              		.loc 20 420 9 is_stmt 1 view .LVU2865
 420:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10182              		.loc 20 420 9 is_stmt 0 view .LVU2866
 10183              	.LBE1880:
 10184              	.LBE1953:
 10185              	.LBE1980:
 10186              	.LBE1991:
  23:../DaisySP/Source/Filters/svf.h ****     /** Initializes the filter
  24:../DaisySP/Source/Filters/svf.h ****         float sample_rate - sample rate of the audio engine being run, and the frequency that the P
  25:../DaisySP/Source/Filters/svf.h ****     */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 321


  26:../DaisySP/Source/Filters/svf.h ****     void Init(float sample_rate);
  27:../DaisySP/Source/Filters/svf.h **** 
  28:../DaisySP/Source/Filters/svf.h **** 
  29:../DaisySP/Source/Filters/svf.h ****     /** 
  30:../DaisySP/Source/Filters/svf.h ****         Process the input signal, updating all of the outputs.
  31:../DaisySP/Source/Filters/svf.h ****     */
  32:../DaisySP/Source/Filters/svf.h ****     void Process(float in);
  33:../DaisySP/Source/Filters/svf.h **** 
  34:../DaisySP/Source/Filters/svf.h **** 
  35:../DaisySP/Source/Filters/svf.h ****     /** sets the frequency of the cutoff frequency. 
  36:../DaisySP/Source/Filters/svf.h ****         f must be between 0.0 and sample_rate / 3
  37:../DaisySP/Source/Filters/svf.h ****     */
  38:../DaisySP/Source/Filters/svf.h ****     void SetFreq(float f);
  39:../DaisySP/Source/Filters/svf.h **** 
  40:../DaisySP/Source/Filters/svf.h ****     /** sets the resonance of the filter.
  41:../DaisySP/Source/Filters/svf.h ****         Must be between 0.0 and 1.0 to ensure stability.
  42:../DaisySP/Source/Filters/svf.h ****     */
  43:../DaisySP/Source/Filters/svf.h ****     void SetRes(float r);
  44:../DaisySP/Source/Filters/svf.h **** 
  45:../DaisySP/Source/Filters/svf.h ****     /** sets the drive of the filter 
  46:../DaisySP/Source/Filters/svf.h ****         affects the response of the resonance of the filter
  47:../DaisySP/Source/Filters/svf.h ****     */
  48:../DaisySP/Source/Filters/svf.h ****     void SetDrive(float d);
  49:../DaisySP/Source/Filters/svf.h ****     /** lowpass output
  50:../DaisySP/Source/Filters/svf.h ****         \return low pass output of the filter
  51:../DaisySP/Source/Filters/svf.h ****     */
  52:../DaisySP/Source/Filters/svf.h ****     inline float Low() { return out_low_; }
 10187              		.loc 9 52 26 is_stmt 1 view .LVU2867
 10188              	.LBB1992:
 10189              	.LBB1981:
 10190              	.LBB1954:
 10191              	.LBB1895:
 420:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10192              		.loc 20 420 40 is_stmt 0 view .LVU2868
 10193 081a F2EE046A 		vmov.f32	s13, #1.0e+1
 10194 081e 95ED0C7A 		vldr.32	s14, [r5, #48]
 424:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10195              		.loc 20 424 49 view .LVU2869
 10196 0822 0CAA     		add	r2, sp, #48
 421:Veno-Echo.cpp ****         
 10197              		.loc 20 421 40 view .LVU2870
 10198 0824 D4ED0C7A 		vldr.32	s15, [r4, #48]
 424:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10199              		.loc 20 424 49 view .LVU2871
 10200 0828 08A9     		add	r1, sp, #32
 420:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10201              		.loc 20 420 40 view .LVU2872
 10202 082a 27EE267A 		vmul.f32	s14, s14, s13
 424:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10203              		.loc 20 424 49 view .LVU2873
 10204 082e C948     		ldr	r0, .L591+16
 421:Veno-Echo.cpp ****         
 10205              		.loc 20 421 40 view .LVU2874
 10206 0830 67EEA67A 		vmul.f32	s15, s15, s13
 420:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10207              		.loc 20 420 47 view .LVU2875
 10208 0834 8DED0C7A 		vstr.32	s14, [sp, #48]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 322


 421:Veno-Echo.cpp ****         
 10209              		.loc 20 421 9 is_stmt 1 view .LVU2876
 10210              	.LVL630:
 421:Veno-Echo.cpp ****         
 10211              		.loc 20 421 9 is_stmt 0 view .LVU2877
 10212              	.LBE1895:
 10213              	.LBE1954:
 10214              	.LBE1981:
 10215              	.LBE1992:
 10216              		.loc 9 52 26 is_stmt 1 view .LVU2878
 10217              	.LBB1993:
 10218              	.LBB1982:
 10219              	.LBB1955:
 10220              	.LBB1896:
 421:Veno-Echo.cpp ****         
 10221              		.loc 20 421 47 is_stmt 0 view .LVU2879
 10222 0838 CDED0D7A 		vstr.32	s15, [sp, #52]
 424:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10223              		.loc 20 424 9 is_stmt 1 view .LVU2880
 424:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10224              		.loc 20 424 49 is_stmt 0 view .LVU2881
 10225 083c FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10226              	.LVL631:
 425:Veno-Echo.cpp **** 
 10227              		.loc 20 425 49 view .LVU2882
 10228 0840 0DAA     		add	r2, sp, #52
 10229 0842 09A9     		add	r1, sp, #36
 10230 0844 C448     		ldr	r0, .L591+20
 424:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10231              		.loc 20 424 78 view .LVU2883
 10232 0846 8DED0E0A 		vstr.32	s0, [sp, #56]
 425:Veno-Echo.cpp **** 
 10233              		.loc 20 425 9 is_stmt 1 view .LVU2884
 425:Veno-Echo.cpp **** 
 10234              		.loc 20 425 49 is_stmt 0 view .LVU2885
 10235 084a FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10236              	.LVL632:
 10237              	.LBB1881:
 10238              	.LBB1882:
1864:Veno-Echo.cpp ****         returnval = limit;
 10239              		.loc 20 1864 5 view .LVU2886
 10240 084e F0EE006A 		vmov.f32	s13, #2.0e+0
 10241              	.LBE1882:
 10242              	.LBE1881:
 428:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 10243              		.loc 20 428 36 view .LVU2887
 10244 0852 9DED0E7A 		vldr.32	s14, [sp, #56]
 425:Veno-Echo.cpp **** 
 10245              		.loc 20 425 49 view .LVU2888
 10246 0856 F0EE407A 		vmov.f32	s15, s0
 428:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 10247              		.loc 20 428 9 is_stmt 1 view .LVU2889
 10248              	.LVL633:
 10249              	.LBB1886:
 10250              	.LBI1881:
1861:Veno-Echo.cpp **** {
 10251              		.loc 20 1861 7 view .LVU2890
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 323


 10252              	.LBB1883:
1863:Veno-Echo.cpp ****     if (input > limit)
 10253              		.loc 20 1863 5 view .LVU2891
1864:Veno-Echo.cpp ****         returnval = limit;
 10254              		.loc 20 1864 5 view .LVU2892
 10255 085a B4EEE67A 		vcmpe.f32	s14, s13
 10256 085e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10257 0862 00F3A681 		bgt	.L545
1866:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10258              		.loc 20 1866 10 view .LVU2893
 10259 0866 F8EE006A 		vmov.f32	s13, #-2.0e+0
 10260 086a B4EEE67A 		vcmpe.f32	s14, s13
 10261 086e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10262 0872 00F1B581 		bmi	.L546
 10263 0876 27EE090A 		vmul.f32	s0, s14, s18
 10264              	.LVL634:
 10265              	.L511:
1871:Veno-Echo.cpp **** }
 10266              		.loc 20 1871 5 view .LVU2894
1871:Veno-Echo.cpp **** }
 10267              		.loc 20 1871 5 is_stmt 0 view .LVU2895
 10268              	.LBE1883:
 10269              	.LBE1886:
 10270              	.LBB1887:
 10271              	.LBB1888:
1864:Veno-Echo.cpp ****         returnval = limit;
 10272              		.loc 20 1864 5 view .LVU2896
 10273 087a F0EE006A 		vmov.f32	s13, #2.0e+0
 10274              	.LBE1888:
 10275              	.LBE1887:
 428:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 10276              		.loc 20 428 25 view .LVU2897
 10277 087e 8DED0E7A 		vstr.32	s14, [sp, #56]
 429:Veno-Echo.cpp **** 
 10278              		.loc 20 429 9 is_stmt 1 view .LVU2898
 10279              	.LVL635:
 10280              	.LBB1891:
 10281              	.LBI1887:
1861:Veno-Echo.cpp **** {
 10282              		.loc 20 1861 7 view .LVU2899
 10283              	.LBB1889:
1863:Veno-Echo.cpp ****     if (input > limit)
 10284              		.loc 20 1863 5 view .LVU2900
1864:Veno-Echo.cpp ****         returnval = limit;
 10285              		.loc 20 1864 5 view .LVU2901
 10286 0882 F4EEE67A 		vcmpe.f32	s15, s13
 10287 0886 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10288 088a 00F38F81 		bgt	.L547
1866:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10289              		.loc 20 1866 10 view .LVU2902
 10290 088e B8EE007A 		vmov.f32	s14, #-2.0e+0
1867:Veno-Echo.cpp ****     else
 10291              		.loc 20 1867 19 is_stmt 0 view .LVU2903
 10292 0892 F4EE477A 		vcmp.f32	s15, s14
 10293 0896 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10294 089a 48BF     		it	mi
 10295 089c F0EE477A 		vmovmi.f32	s15, s14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 324


 10296              	.LVL636:
 10297              	.L512:
1871:Veno-Echo.cpp **** }
 10298              		.loc 20 1871 5 is_stmt 1 view .LVU2904
1871:Veno-Echo.cpp **** }
 10299              		.loc 20 1871 5 is_stmt 0 view .LVU2905
 10300              	.LBE1889:
 10301              	.LBE1891:
 432:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10302              		.loc 20 432 22 view .LVU2906
 10303 08a0 AE4D     		ldr	r5, .L591+24
 433:Veno-Echo.cpp **** 
 10304              		.loc 20 433 22 view .LVU2907
 10305 08a2 AF4C     		ldr	r4, .L591+28
 432:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10306              		.loc 20 432 22 view .LVU2908
 10307 08a4 2846     		mov	r0, r5
 429:Veno-Echo.cpp **** 
 10308              		.loc 20 429 25 view .LVU2909
 10309 08a6 CDED0F7A 		vstr.32	s15, [sp, #60]
 432:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10310              		.loc 20 432 9 is_stmt 1 view .LVU2910
 432:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10311              		.loc 20 432 22 is_stmt 0 view .LVU2911
 10312 08aa FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10313              	.LVL637:
 433:Veno-Echo.cpp **** 
 10314              		.loc 20 433 9 is_stmt 1 view .LVU2912
 433:Veno-Echo.cpp **** 
 10315              		.loc 20 433 22 is_stmt 0 view .LVU2913
 10316 08ae DFEDA67A 		vldr.32	s15, .L591+4
 10317 08b2 9DED0F0A 		vldr.32	s0, [sp, #60]
 10318 08b6 2046     		mov	r0, r4
 10319 08b8 20EE270A 		vmul.f32	s0, s0, s15
 10320 08bc FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10321              	.LVL638:
 435:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10322              		.loc 20 435 9 is_stmt 1 view .LVU2914
 435:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10323              		.loc 20 435 9 is_stmt 0 view .LVU2915
 10324              	.LBE1896:
 10325              	.LBE1955:
 10326              	.LBE1982:
 10327              	.LBE1993:
  53:../DaisySP/Source/Filters/svf.h ****     /** highpass output
  54:../DaisySP/Source/Filters/svf.h ****         \return high pass output of the filter
  55:../DaisySP/Source/Filters/svf.h ****     */
  56:../DaisySP/Source/Filters/svf.h ****     inline float High() { return out_high_; }
 10328              		.loc 9 56 27 is_stmt 1 view .LVU2916
 10329              	.LBB1994:
 10330              	.LBB1983:
 10331              	.LBB1956:
 10332              	.LBB1897:
 435:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10333              		.loc 20 435 41 is_stmt 0 view .LVU2917
 10334 08c0 F2EE046A 		vmov.f32	s13, #1.0e+1
 10335 08c4 95ED0D7A 		vldr.32	s14, [r5, #52]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 325


 438:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10336              		.loc 20 438 45 view .LVU2918
 10337 08c8 0EA9     		add	r1, sp, #56
 436:Veno-Echo.cpp **** 
 10338              		.loc 20 436 41 view .LVU2919
 10339 08ca D4ED0D7A 		vldr.32	s15, [r4, #52]
 438:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10340              		.loc 20 438 45 view .LVU2920
 10341 08ce 10AA     		add	r2, sp, #64
 435:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10342              		.loc 20 435 41 view .LVU2921
 10343 08d0 27EE267A 		vmul.f32	s14, s14, s13
 438:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10344              		.loc 20 438 45 view .LVU2922
 10345 08d4 A348     		ldr	r0, .L591+32
 436:Veno-Echo.cpp **** 
 10346              		.loc 20 436 41 view .LVU2923
 10347 08d6 67EEA67A 		vmul.f32	s15, s15, s13
 435:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10348              		.loc 20 435 48 view .LVU2924
 10349 08da 8DED107A 		vstr.32	s14, [sp, #64]
 436:Veno-Echo.cpp **** 
 10350              		.loc 20 436 9 is_stmt 1 view .LVU2925
 10351              	.LVL639:
 436:Veno-Echo.cpp **** 
 10352              		.loc 20 436 9 is_stmt 0 view .LVU2926
 10353              	.LBE1897:
 10354              	.LBE1956:
 10355              	.LBE1983:
 10356              	.LBE1994:
 10357              		.loc 9 56 27 is_stmt 1 view .LVU2927
 10358              	.LBB1995:
 10359              	.LBB1984:
 10360              	.LBB1957:
 10361              	.LBB1898:
 436:Veno-Echo.cpp **** 
 10362              		.loc 20 436 48 is_stmt 0 view .LVU2928
 10363 08de CDED117A 		vstr.32	s15, [sp, #68]
 438:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10364              		.loc 20 438 9 is_stmt 1 view .LVU2929
 438:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10365              		.loc 20 438 45 is_stmt 0 view .LVU2930
 10366 08e2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10367              	.LVL640:
 439:Veno-Echo.cpp **** 
 10368              		.loc 20 439 45 view .LVU2931
 10369 08e6 0FA9     		add	r1, sp, #60
 10370 08e8 11AA     		add	r2, sp, #68
 10371 08ea 9F48     		ldr	r0, .L591+36
 438:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10372              		.loc 20 438 25 view .LVU2932
 10373 08ec 8DED0E0A 		vstr.32	s0, [sp, #56]
 439:Veno-Echo.cpp **** 
 10374              		.loc 20 439 9 is_stmt 1 view .LVU2933
 439:Veno-Echo.cpp **** 
 10375              		.loc 20 439 45 is_stmt 0 view .LVU2934
 10376 08f0 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 326


 10377              	.LVL641:
 443:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10378              		.loc 20 443 44 view .LVU2935
 10379 08f4 0EAA     		add	r2, sp, #56
 10380 08f6 08A9     		add	r1, sp, #32
 10381 08f8 9C48     		ldr	r0, .L591+40
 439:Veno-Echo.cpp **** 
 10382              		.loc 20 439 25 view .LVU2936
 10383 08fa 8DED0F0A 		vstr.32	s0, [sp, #60]
 443:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10384              		.loc 20 443 9 is_stmt 1 view .LVU2937
 443:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10385              		.loc 20 443 44 is_stmt 0 view .LVU2938
 10386 08fe FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10387              	.LVL642:
 444:Veno-Echo.cpp **** 
 10388              		.loc 20 444 44 view .LVU2939
 10389 0902 0FAA     		add	r2, sp, #60
 10390 0904 09A9     		add	r1, sp, #36
 10391 0906 9A48     		ldr	r0, .L591+44
 443:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10392              		.loc 20 443 23 view .LVU2940
 10393 0908 8DED080A 		vstr.32	s0, [sp, #32]
 444:Veno-Echo.cpp **** 
 10394              		.loc 20 444 9 is_stmt 1 view .LVU2941
 444:Veno-Echo.cpp **** 
 10395              		.loc 20 444 44 is_stmt 0 view .LVU2942
 10396 090c FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10397              	.LVL643:
 10398 0910 DDED087A 		vldr.32	s15, [sp, #32]
 444:Veno-Echo.cpp **** 
 10399              		.loc 20 444 23 view .LVU2943
 10400 0914 8DED090A 		vstr.32	s0, [sp, #36]
 10401              	.LBE1898:
 10402 0918 8CE6     		b	.L510
 10403              	.LVL644:
 10404              	.L543:
 444:Veno-Echo.cpp **** 
 10405              		.loc 20 444 23 view .LVU2944
 10406              	.LBE1957:
 10407              	.LBB1958:
 10408              	.LBB1871:
1865:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10409              		.loc 20 1865 19 view .LVU2945
 10410 091a F0EE477A 		vmov.f32	s15, s14
 10411              	.LVL645:
1865:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10412              		.loc 20 1865 19 view .LVU2946
 10413 091e 6DE6     		b	.L506
 10414              	.LVL646:
 10415              	.L496:
1865:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10416              		.loc 20 1865 19 view .LVU2947
 10417              	.LBE1871:
 10418              	.LBE1958:
 10419              	.LBB1959:
 10420              	.LBB1863:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 327


 10421              	.LBB1859:
 126:delayline_reverse.h ****         {
 10422              		.loc 19 126 12 view .LVU2948
 10423 0920 944B     		ldr	r3, .L591+48
 126:delayline_reverse.h ****         {
 10424              		.loc 19 126 9 view .LVU2949
 10425 0922 E25C     		ldrb	r2, [r4, r3]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 10426              		.loc 19 126 12 view .LVU2950
 10427 0924 2344     		add	r3, r3, r4
 126:delayline_reverse.h ****         {
 10428              		.loc 19 126 9 view .LVU2951
 10429 0926 002A     		cmp	r2, #0
 10430 0928 3FF439AE 		beq	.L502
 10431              	.L579:
 126:delayline_reverse.h ****         {
 10432              		.loc 19 126 9 view .LVU2952
 10433 092c 924A     		ldr	r2, .L591+52
 10434 092e A018     		adds	r0, r4, r2
 10435 0930 A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 10436              		.loc 19 128 13 view .LVU2953
 10437 0932 002A     		cmp	r2, #0
 10438 0934 3FF419AE 		beq	.L499
 10439              	.L500:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10440              		.loc 19 141 45 view .LVU2954
 10441 0938 DDED017A 		vldr.32	s15, [sp, #4]	@ int
 10442              	.LVL647:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10443              		.loc 19 141 45 view .LVU2955
 10444 093c B7EE006A 		vmov.f32	s12, #1.0e+0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10445              		.loc 19 141 37 view .LVU2956
 10446 0940 0399     		ldr	r1, [sp, #12]
 142:delayline_reverse.h ****                 {
 10447              		.loc 19 142 17 view .LVU2957
 10448 0942 0022     		movs	r2, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10449              		.loc 19 141 45 view .LVU2958
 10450 0944 F8EE676A 		vcvt.f32.u32	s13, s15
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10451              		.loc 19 141 37 view .LVU2959
 10452 0948 D1ED007A 		vldr.32	s15, [r1]
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10453              		.loc 19 141 45 view .LVU2960
 10454 094c 86EE267A 		vdiv.f32	s14, s12, s13
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10455              		.loc 19 141 37 view .LVU2961
 10456 0950 77EEC77A 		vsub.f32	s15, s15, s14
 142:delayline_reverse.h ****                 {
 10457              		.loc 19 142 17 view .LVU2962
 10458 0954 F5EEC07A 		vcmpe.f32	s15, #0
 10459 0958 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10460 095c 00F13A81 		bmi	.L505
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10461              		.loc 19 141 17 view .LVU2963
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 328


 10462 0960 C1ED007A 		vstr.32	s15, [r1]
 10463 0964 1BE6     		b	.L502
 10464              	.LVL648:
 10465              	.L486:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10466              		.loc 19 141 17 view .LVU2964
 10467              	.LBE1859:
 10468              	.LBE1863:
 10469              	.LBE1959:
 10470              	.LBB1960:
 10471              	.LBB1836:
 10472              	.LBB1825:
 126:delayline_reverse.h ****         {
 10473              		.loc 19 126 12 view .LVU2965
 10474 0966 834A     		ldr	r2, .L591+48
 126:delayline_reverse.h ****         {
 10475              		.loc 19 126 9 view .LVU2966
 10476 0968 AB5C     		ldrb	r3, [r5, r2]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 10477              		.loc 19 126 12 view .LVU2967
 10478 096a 2A44     		add	r2, r2, r5
 126:delayline_reverse.h ****         {
 10479              		.loc 19 126 9 view .LVU2968
 10480 096c 002B     		cmp	r3, #0
 10481 096e 3FF4ABAD 		beq	.L492
 10482              	.L577:
 126:delayline_reverse.h ****         {
 10483              		.loc 19 126 9 view .LVU2969
 10484 0972 814B     		ldr	r3, .L591+52
 10485 0974 E818     		adds	r0, r5, r3
 10486 0976 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 10487              		.loc 19 128 13 view .LVU2970
 10488 0978 002B     		cmp	r3, #0
 10489 097a 3FF435AD 		beq	.L489
 10490              	.L490:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10491              		.loc 19 141 45 view .LVU2971
 10492 097e 07EE90EA 		vmov	s15, lr	@ int
 10493              	.LVL649:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10494              		.loc 19 141 45 view .LVU2972
 10495 0982 F7EE006A 		vmov.f32	s13, #1.0e+0
 142:delayline_reverse.h ****                 {
 10496              		.loc 19 142 17 view .LVU2973
 10497 0986 0023     		movs	r3, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10498              		.loc 19 141 45 view .LVU2974
 10499 0988 B8EE677A 		vcvt.f32.u32	s14, s15
 10500 098c C6EE877A 		vdiv.f32	s15, s13, s14
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10501              		.loc 19 141 37 view .LVU2975
 10502 0990 3BEE67BA 		vsub.f32	s22, s22, s15
 142:delayline_reverse.h ****                 {
 10503              		.loc 19 142 17 view .LVU2976
 10504 0994 B5EEC0BA 		vcmpe.f32	s22, #0
 10505 0998 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 329


 10506 099c 40F1C580 		bpl	.L578
 145:delayline_reverse.h ****                     playinghead_ = false;
 10507              		.loc 19 145 21 view .LVU2977
 10508 09a0 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10509              		.loc 19 144 21 view .LVU2978
 10510 09a2 049D     		ldr	r5, [sp, #16]
 10511              	.LVL650:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10512              		.loc 19 144 21 view .LVU2979
 10513 09a4 2B60     		str	r3, [r5]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 10514              		.loc 19 145 21 view .LVU2980
 10515 09a6 1170     		strb	r1, [r2]
 146:delayline_reverse.h ****                 }
 10516              		.loc 19 146 21 view .LVU2981
 10517 09a8 0170     		strb	r1, [r0]
 10518 09aa 8DE5     		b	.L492
 10519              	.LVL651:
 10520              	.L537:
 146:delayline_reverse.h ****                 }
 10521              		.loc 19 146 21 view .LVU2982
 10522              	.LBE1825:
 10523              	.LBE1836:
 10524              	.LBE1960:
 573:Veno-Echo.cpp ****             out[i+1] = mixR;
 10525              		.loc 20 573 13 is_stmt 1 view .LVU2983
 573:Veno-Echo.cpp ****             out[i+1] = mixR;
 10526              		.loc 20 573 20 is_stmt 0 view .LVU2984
 10527 09ac 009B     		ldr	r3, [sp]
 10528 09ae C3ED007A 		vstr.32	s15, [r3]
 574:Veno-Echo.cpp ****         }
 10529              		.loc 20 574 13 is_stmt 1 view .LVU2985
 574:Veno-Echo.cpp ****         }
 10530              		.loc 20 574 22 is_stmt 0 view .LVU2986
 10531 09b2 83ED010A 		vstr.32	s0, [r3, #4]
 10532 09b6 FFF7EDBB 		b	.L538
 10533              	.LVL652:
 10534              	.L574:
 554:Veno-Echo.cpp ****         {
 10535              		.loc 20 554 14 is_stmt 1 view .LVU2987
 10536 09ba 40F3AC80 		ble	.L575
 556:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10537              		.loc 20 556 13 view .LVU2988
 556:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10538              		.loc 20 556 24 is_stmt 0 view .LVU2989
 10539 09be F7EE006A 		vmov.f32	s13, #1.0e+0
 556:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10540              		.loc 20 556 18 view .LVU2990
 10541 09c2 DBED005A 		vldr.32	s11, [fp]
 557:Veno-Echo.cpp ****         }
 10542              		.loc 20 557 18 view .LVU2991
 10543 09c6 9BED016A 		vldr.32	s12, [fp, #4]
 556:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10544              		.loc 20 556 24 view .LVU2992
 10545 09ca 36EEC77A 		vsub.f32	s14, s13, s14
 556:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 330


 10546              		.loc 20 556 33 view .LVU2993
 10547 09ce 37EE077A 		vadd.f32	s14, s14, s14
 556:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10548              		.loc 20 556 18 view .LVU2994
 10549 09d2 E7EE257A 		vfma.f32	s15, s14, s11
 10550              	.LVL653:
 557:Veno-Echo.cpp ****         }
 10551              		.loc 20 557 13 is_stmt 1 view .LVU2995
 557:Veno-Echo.cpp ****         }
 10552              		.loc 20 557 18 is_stmt 0 view .LVU2996
 10553 09d6 A7EE060A 		vfma.f32	s0, s14, s12
 10554              	.LVL654:
 557:Veno-Echo.cpp ****         }
 10555              		.loc 20 557 18 view .LVU2997
 10556 09da FFF7D2BB 		b	.L534
 10557              	.LVL655:
 10558              	.L553:
 10559              	.LBB1961:
 508:Veno-Echo.cpp **** {
 10560              		.loc 20 508 1 view .LVU2998
 10561 09de 594B     		ldr	r3, .L591
 10562              	.LBE1961:
 10563              	.LBB1962:
 10564              	.LBB1617:
1865:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10565              		.loc 20 1865 19 view .LVU2999
 10566 09e0 B0EE470A 		vmov.f32	s0, s14
 10567              	.LVL656:
1871:Veno-Echo.cpp **** }
 10568              		.loc 20 1871 5 is_stmt 1 view .LVU3000
1871:Veno-Echo.cpp **** }
 10569              		.loc 20 1871 5 is_stmt 0 view .LVU3001
 10570              	.LBE1617:
 10571              	.LBE1962:
 10572              	.LBB1963:
 508:Veno-Echo.cpp **** {
 10573              		.loc 20 508 1 view .LVU3002
 10574 09e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10575              	.LBE1963:
 506:Veno-Echo.cpp **** 
 10576              		.loc 20 506 27 view .LVU3003
 10577 09e6 8DED0B0A 		vstr.32	s0, [sp, #44]
 508:Veno-Echo.cpp **** {
 10578              		.loc 20 508 1 is_stmt 1 view .LVU3004
 10579              	.LBB1964:
 10580 09ea 002B     		cmp	r3, #0
 10581 09ec 3FF4B0AB 		beq	.L528
 10582              	.L580:
 10583              	.LBB1620:
 514:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 10584              		.loc 20 514 9 view .LVU3005
 514:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 10585              		.loc 20 514 27 is_stmt 0 view .LVU3006
 10586 09f0 9FED558A 		vldr.32	s16, .L591+4
 10587              	.LVL657:
 514:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 10588              		.loc 20 514 27 view .LVU3007
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 331


 10589 09f4 614D     		ldr	r5, .L591+56
 10590 09f6 27EE880A 		vmul.f32	s0, s15, s16
 515:Veno-Echo.cpp **** 
 10591              		.loc 20 515 27 view .LVU3008
 10592 09fa 614C     		ldr	r4, .L591+60
 514:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 10593              		.loc 20 514 27 view .LVU3009
 10594 09fc 2846     		mov	r0, r5
 10595 09fe FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10596              	.LVL658:
 515:Veno-Echo.cpp **** 
 10597              		.loc 20 515 9 is_stmt 1 view .LVU3010
 515:Veno-Echo.cpp **** 
 10598              		.loc 20 515 27 is_stmt 0 view .LVU3011
 10599 0a02 9DED0B0A 		vldr.32	s0, [sp, #44]
 10600 0a06 2046     		mov	r0, r4
 10601 0a08 20EE080A 		vmul.f32	s0, s0, s16
 10602 0a0c FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10603              	.LVL659:
 518:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10604              		.loc 20 518 9 is_stmt 1 view .LVU3012
 518:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10605              		.loc 20 518 9 is_stmt 0 view .LVU3013
 10606              	.LBE1620:
 10607              	.LBE1964:
 10608              	.LBE1984:
 10609              	.LBE1995:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 10610              		.loc 9 52 26 is_stmt 1 view .LVU3014
 10611              	.LBB1996:
 10612              	.LBB1985:
 10613              	.LBB1965:
 10614              	.LBB1635:
 518:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10615              		.loc 20 518 50 is_stmt 0 view .LVU3015
 10616 0a10 F2EE046A 		vmov.f32	s13, #1.0e+1
 10617 0a14 95ED0C7A 		vldr.32	s14, [r5, #48]
 522:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10618              		.loc 20 522 59 view .LVU3016
 10619 0a18 0AA9     		add	r1, sp, #40
 519:Veno-Echo.cpp ****         
 10620              		.loc 20 519 50 view .LVU3017
 10621 0a1a D4ED0C7A 		vldr.32	s15, [r4, #48]
 522:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10622              		.loc 20 522 59 view .LVU3018
 10623 0a1e 0CAA     		add	r2, sp, #48
 518:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10624              		.loc 20 518 50 view .LVU3019
 10625 0a20 27EE267A 		vmul.f32	s14, s14, s13
 522:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10626              		.loc 20 522 59 view .LVU3020
 10627 0a24 5748     		ldr	r0, .L591+64
 519:Veno-Echo.cpp ****         
 10628              		.loc 20 519 50 view .LVU3021
 10629 0a26 67EEA67A 		vmul.f32	s15, s15, s13
 518:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10630              		.loc 20 518 57 view .LVU3022
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 332


 10631 0a2a 8DED0C7A 		vstr.32	s14, [sp, #48]
 519:Veno-Echo.cpp ****         
 10632              		.loc 20 519 9 is_stmt 1 view .LVU3023
 10633              	.LVL660:
 519:Veno-Echo.cpp ****         
 10634              		.loc 20 519 9 is_stmt 0 view .LVU3024
 10635              	.LBE1635:
 10636              	.LBE1965:
 10637              	.LBE1985:
 10638              	.LBE1996:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 10639              		.loc 9 52 26 is_stmt 1 view .LVU3025
 10640              	.LBB1997:
 10641              	.LBB1986:
 10642              	.LBB1966:
 10643              	.LBB1636:
 519:Veno-Echo.cpp ****         
 10644              		.loc 20 519 57 is_stmt 0 view .LVU3026
 10645 0a2e CDED0D7A 		vstr.32	s15, [sp, #52]
 522:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10646              		.loc 20 522 9 is_stmt 1 view .LVU3027
 522:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10647              		.loc 20 522 59 is_stmt 0 view .LVU3028
 10648 0a32 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10649              	.LVL661:
 523:Veno-Echo.cpp **** 
 10650              		.loc 20 523 59 view .LVU3029
 10651 0a36 0BA9     		add	r1, sp, #44
 10652 0a38 0DAA     		add	r2, sp, #52
 10653 0a3a 5348     		ldr	r0, .L591+68
 522:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10654              		.loc 20 522 97 view .LVU3030
 10655 0a3c 8DED0E0A 		vstr.32	s0, [sp, #56]
 523:Veno-Echo.cpp **** 
 10656              		.loc 20 523 9 is_stmt 1 view .LVU3031
 523:Veno-Echo.cpp **** 
 10657              		.loc 20 523 59 is_stmt 0 view .LVU3032
 10658 0a40 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10659              	.LVL662:
 10660              	.LBB1621:
 10661              	.LBB1622:
1864:Veno-Echo.cpp ****         returnval = limit;
 10662              		.loc 20 1864 5 view .LVU3033
 10663 0a44 F0EE006A 		vmov.f32	s13, #2.0e+0
 10664              	.LBE1622:
 10665              	.LBE1621:
 526:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 10666              		.loc 20 526 41 view .LVU3034
 10667 0a48 9DED0E7A 		vldr.32	s14, [sp, #56]
 523:Veno-Echo.cpp **** 
 10668              		.loc 20 523 59 view .LVU3035
 10669 0a4c F0EE407A 		vmov.f32	s15, s0
 526:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 10670              		.loc 20 526 9 is_stmt 1 view .LVU3036
 10671              	.LVL663:
 10672              	.LBB1626:
 10673              	.LBI1621:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 333


1861:Veno-Echo.cpp **** {
 10674              		.loc 20 1861 7 view .LVU3037
 10675              	.LBB1623:
1863:Veno-Echo.cpp ****     if (input > limit)
 10676              		.loc 20 1863 5 view .LVU3038
1864:Veno-Echo.cpp ****         returnval = limit;
 10677              		.loc 20 1864 5 view .LVU3039
 10678 0a50 B4EEE67A 		vcmpe.f32	s14, s13
 10679 0a54 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10680 0a58 6EDC     		bgt	.L554
1866:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10681              		.loc 20 1866 10 view .LVU3040
 10682 0a5a F8EE006A 		vmov.f32	s13, #-2.0e+0
 10683 0a5e B4EEE67A 		vcmpe.f32	s14, s13
 10684 0a62 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10685 0a66 00F1C080 		bmi	.L555
 10686 0a6a 27EE080A 		vmul.f32	s0, s14, s16
 10687              	.LVL664:
 10688              	.L529:
1871:Veno-Echo.cpp **** }
 10689              		.loc 20 1871 5 view .LVU3041
1871:Veno-Echo.cpp **** }
 10690              		.loc 20 1871 5 is_stmt 0 view .LVU3042
 10691              	.LBE1623:
 10692              	.LBE1626:
 10693              	.LBB1627:
 10694              	.LBB1628:
1864:Veno-Echo.cpp ****         returnval = limit;
 10695              		.loc 20 1864 5 view .LVU3043
 10696 0a6e F0EE006A 		vmov.f32	s13, #2.0e+0
 10697              	.LBE1628:
 10698              	.LBE1627:
 526:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 10699              		.loc 20 526 30 view .LVU3044
 10700 0a72 8DED0E7A 		vstr.32	s14, [sp, #56]
 527:Veno-Echo.cpp **** 
 10701              		.loc 20 527 9 is_stmt 1 view .LVU3045
 10702              	.LVL665:
 10703              	.LBB1631:
 10704              	.LBI1627:
1861:Veno-Echo.cpp **** {
 10705              		.loc 20 1861 7 view .LVU3046
 10706              	.LBB1629:
1863:Veno-Echo.cpp ****     if (input > limit)
 10707              		.loc 20 1863 5 view .LVU3047
1864:Veno-Echo.cpp ****         returnval = limit;
 10708              		.loc 20 1864 5 view .LVU3048
 10709 0a76 F4EEE67A 		vcmpe.f32	s15, s13
 10710 0a7a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10711 0a7e 58DC     		bgt	.L556
1866:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10712              		.loc 20 1866 10 view .LVU3049
 10713 0a80 B8EE007A 		vmov.f32	s14, #-2.0e+0
1867:Veno-Echo.cpp ****     else
 10714              		.loc 20 1867 19 is_stmt 0 view .LVU3050
 10715 0a84 F4EE477A 		vcmp.f32	s15, s14
 10716 0a88 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 334


 10717 0a8c 48BF     		it	mi
 10718 0a8e F0EE477A 		vmovmi.f32	s15, s14
 10719              	.LVL666:
 10720              	.L530:
1871:Veno-Echo.cpp **** }
 10721              		.loc 20 1871 5 is_stmt 1 view .LVU3051
1871:Veno-Echo.cpp **** }
 10722              		.loc 20 1871 5 is_stmt 0 view .LVU3052
 10723              	.LBE1629:
 10724              	.LBE1631:
 530:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 10725              		.loc 20 530 27 view .LVU3053
 10726 0a92 3E4D     		ldr	r5, .L591+72
 531:Veno-Echo.cpp **** 
 10727              		.loc 20 531 27 view .LVU3054
 10728 0a94 3E4C     		ldr	r4, .L591+76
 530:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 10729              		.loc 20 530 27 view .LVU3055
 10730 0a96 2846     		mov	r0, r5
 527:Veno-Echo.cpp **** 
 10731              		.loc 20 527 30 view .LVU3056
 10732 0a98 CDED0F7A 		vstr.32	s15, [sp, #60]
 530:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 10733              		.loc 20 530 9 is_stmt 1 view .LVU3057
 530:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 10734              		.loc 20 530 27 is_stmt 0 view .LVU3058
 10735 0a9c FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10736              	.LVL667:
 531:Veno-Echo.cpp **** 
 10737              		.loc 20 531 9 is_stmt 1 view .LVU3059
 531:Veno-Echo.cpp **** 
 10738              		.loc 20 531 27 is_stmt 0 view .LVU3060
 10739 0aa0 DFED297A 		vldr.32	s15, .L591+4
 10740 0aa4 9DED0F0A 		vldr.32	s0, [sp, #60]
 10741 0aa8 2046     		mov	r0, r4
 10742 0aaa 20EE270A 		vmul.f32	s0, s0, s15
 10743 0aae FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10744              	.LVL668:
 533:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 10745              		.loc 20 533 9 is_stmt 1 view .LVU3061
 533:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 10746              		.loc 20 533 9 is_stmt 0 view .LVU3062
 10747              	.LBE1636:
 10748              	.LBE1966:
 10749              	.LBE1986:
 10750              	.LBE1997:
 10751              		.loc 9 56 27 is_stmt 1 view .LVU3063
 10752              	.LBB1998:
 10753              	.LBB1987:
 10754              	.LBB1967:
 10755              	.LBB1637:
 533:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 10756              		.loc 20 533 51 is_stmt 0 view .LVU3064
 10757 0ab2 F2EE046A 		vmov.f32	s13, #1.0e+1
 10758 0ab6 95ED0D7A 		vldr.32	s14, [r5, #52]
 536:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10759              		.loc 20 536 55 view .LVU3065
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 335


 10760 0aba 0EA9     		add	r1, sp, #56
 534:Veno-Echo.cpp **** 
 10761              		.loc 20 534 51 view .LVU3066
 10762 0abc D4ED0D7A 		vldr.32	s15, [r4, #52]
 536:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10763              		.loc 20 536 55 view .LVU3067
 10764 0ac0 10AA     		add	r2, sp, #64
 533:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 10765              		.loc 20 533 51 view .LVU3068
 10766 0ac2 27EE267A 		vmul.f32	s14, s14, s13
 536:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10767              		.loc 20 536 55 view .LVU3069
 10768 0ac6 3348     		ldr	r0, .L591+80
 534:Veno-Echo.cpp **** 
 10769              		.loc 20 534 51 view .LVU3070
 10770 0ac8 67EEA67A 		vmul.f32	s15, s15, s13
 533:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 10771              		.loc 20 533 58 view .LVU3071
 10772 0acc 8DED107A 		vstr.32	s14, [sp, #64]
 534:Veno-Echo.cpp **** 
 10773              		.loc 20 534 9 is_stmt 1 view .LVU3072
 10774              	.LVL669:
 534:Veno-Echo.cpp **** 
 10775              		.loc 20 534 9 is_stmt 0 view .LVU3073
 10776              	.LBE1637:
 10777              	.LBE1967:
 10778              	.LBE1987:
 10779              	.LBE1998:
 10780              		.loc 9 56 27 is_stmt 1 view .LVU3074
 10781              	.LBB1999:
 10782              	.LBB1988:
 10783              	.LBB1968:
 10784              	.LBB1638:
 534:Veno-Echo.cpp **** 
 10785              		.loc 20 534 58 is_stmt 0 view .LVU3075
 10786 0ad0 CDED117A 		vstr.32	s15, [sp, #68]
 536:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10787              		.loc 20 536 9 is_stmt 1 view .LVU3076
 536:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10788              		.loc 20 536 55 is_stmt 0 view .LVU3077
 10789 0ad4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10790              	.LVL670:
 537:Veno-Echo.cpp **** 
 10791              		.loc 20 537 55 view .LVU3078
 10792 0ad8 0FA9     		add	r1, sp, #60
 10793 0ada 11AA     		add	r2, sp, #68
 10794 0adc 2E48     		ldr	r0, .L591+84
 536:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10795              		.loc 20 536 30 view .LVU3079
 10796 0ade 8DED0E0A 		vstr.32	s0, [sp, #56]
 537:Veno-Echo.cpp **** 
 10797              		.loc 20 537 9 is_stmt 1 view .LVU3080
 537:Veno-Echo.cpp **** 
 10798              		.loc 20 537 55 is_stmt 0 view .LVU3081
 10799 0ae2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10800              	.LVL671:
 540:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 336


 10801              		.loc 20 540 53 view .LVU3082
 10802 0ae6 0EAA     		add	r2, sp, #56
 10803 0ae8 0AA9     		add	r1, sp, #40
 10804 0aea 2C48     		ldr	r0, .L591+88
 537:Veno-Echo.cpp **** 
 10805              		.loc 20 537 30 view .LVU3083
 10806 0aec 8DED0F0A 		vstr.32	s0, [sp, #60]
 540:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 10807              		.loc 20 540 9 is_stmt 1 view .LVU3084
 540:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 10808              		.loc 20 540 53 is_stmt 0 view .LVU3085
 10809 0af0 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10810              	.LVL672:
 541:Veno-Echo.cpp **** 
 10811              		.loc 20 541 53 view .LVU3086
 10812 0af4 0FAA     		add	r2, sp, #60
 10813 0af6 0BA9     		add	r1, sp, #44
 10814 0af8 2948     		ldr	r0, .L591+92
 540:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 10815              		.loc 20 540 27 view .LVU3087
 10816 0afa 8DED0A0A 		vstr.32	s0, [sp, #40]
 541:Veno-Echo.cpp **** 
 10817              		.loc 20 541 9 is_stmt 1 view .LVU3088
 541:Veno-Echo.cpp **** 
 10818              		.loc 20 541 53 is_stmt 0 view .LVU3089
 10819 0afe FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10820              	.LVL673:
 10821 0b02 DDED0A7A 		vldr.32	s15, [sp, #40]
 541:Veno-Echo.cpp **** 
 10822              		.loc 20 541 27 view .LVU3090
 10823 0b06 8DED0B0A 		vstr.32	s0, [sp, #44]
 10824              	.LBE1638:
 10825 0b0a FFF721BB 		b	.L528
 10826              	.LVL674:
 10827              	.L552:
 541:Veno-Echo.cpp **** 
 10828              		.loc 20 541 27 view .LVU3091
 10829              	.LBE1968:
 10830              	.LBB1969:
 10831              	.LBB1611:
1865:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10832              		.loc 20 1865 19 view .LVU3092
 10833 0b0e F0EE477A 		vmov.f32	s15, s14
 10834              	.LVL675:
1865:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10835              		.loc 20 1865 19 view .LVU3093
 10836 0b12 FFF703BB 		b	.L524
 10837              	.LVL676:
 10838              	.L575:
1865:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10839              		.loc 20 1865 19 view .LVU3094
 10840              	.LBE1611:
 10841              	.LBE1969:
 561:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 10842              		.loc 20 561 13 is_stmt 1 view .LVU3095
 561:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 10843              		.loc 20 561 18 is_stmt 0 view .LVU3096
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 337


 10844 0b16 DBED006A 		vldr.32	s13, [fp]
 562:Veno-Echo.cpp ****         }
 10845              		.loc 20 562 18 view .LVU3097
 10846 0b1a 9BED017A 		vldr.32	s14, [fp, #4]
 561:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 10847              		.loc 20 561 18 view .LVU3098
 10848 0b1e 77EEA67A 		vadd.f32	s15, s15, s13
 10849              	.LVL677:
 562:Veno-Echo.cpp ****         }
 10850              		.loc 20 562 13 is_stmt 1 view .LVU3099
 562:Veno-Echo.cpp ****         }
 10851              		.loc 20 562 18 is_stmt 0 view .LVU3100
 10852 0b22 30EE070A 		vadd.f32	s0, s0, s14
 10853              	.LVL678:
 562:Veno-Echo.cpp ****         }
 10854              		.loc 20 562 18 view .LVU3101
 10855 0b26 FFF72CBB 		b	.L534
 10856              	.LVL679:
 10857              	.L578:
 10858              	.LBB1970:
 10859              	.LBB1837:
 10860              	.LBB1826:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10861              		.loc 19 141 17 view .LVU3102
 10862 0b2a 049B     		ldr	r3, [sp, #16]
 10863 0b2c 83ED00BA 		vstr.32	s22, [r3]
 10864 0b30 CAE4     		b	.L492
 10865              	.LVL680:
 10866              	.L556:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10867              		.loc 19 141 17 view .LVU3103
 10868              	.LBE1826:
 10869              	.LBE1837:
 10870              	.LBE1970:
 10871              	.LBB1971:
 10872              	.LBB1639:
 10873              	.LBB1632:
 10874              	.LBB1630:
1865:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10875              		.loc 20 1865 19 view .LVU3104
 10876 0b32 F0EE667A 		vmov.f32	s15, s13
 10877              	.LVL681:
1865:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10878              		.loc 20 1865 19 view .LVU3105
 10879 0b36 ACE7     		b	.L530
 10880              	.LVL682:
 10881              	.L554:
1865:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10882              		.loc 20 1865 19 view .LVU3106
 10883              	.LBE1630:
 10884              	.LBE1632:
 10885              	.LBB1633:
 10886              	.LBB1624:
 10887 0b38 B0EE667A 		vmov.f32	s14, s13
 10888              	.LVL683:
1865:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10889              		.loc 20 1865 19 view .LVU3107
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 338


 10890 0b3c 9FED190A 		vldr.32	s0, .L591+96
 10891 0b40 95E7     		b	.L529
 10892              	.L592:
 10893 0b42 00BF     		.align	2
 10894              	.L591:
 10895 0b44 00000000 		.word	.LANCHOR82
 10896 0b48 CDCCCC3D 		.word	1036831949
 10897 0b4c 00000000 		.word	.LANCHOR46
 10898 0b50 00000000 		.word	.LANCHOR47
 10899 0b54 00000000 		.word	.LANCHOR117
 10900 0b58 00000000 		.word	.LANCHOR118
 10901 0b5c 00000000 		.word	.LANCHOR34
 10902 0b60 00000000 		.word	.LANCHOR35
 10903 0b64 00000000 		.word	.LANCHOR115
 10904 0b68 00000000 		.word	.LANCHOR116
 10905 0b6c 00000000 		.word	.LANCHOR123
 10906 0b70 00000000 		.word	.LANCHOR124
 10907 0b74 249F2400 		.word	2400036
 10908 0b78 1C9F2400 		.word	2400028
 10909 0b7c 00000000 		.word	.LANCHOR48
 10910 0b80 00000000 		.word	.LANCHOR49
 10911 0b84 00000000 		.word	.LANCHOR121
 10912 0b88 00000000 		.word	.LANCHOR122
 10913 0b8c 00000000 		.word	.LANCHOR36
 10914 0b90 00000000 		.word	.LANCHOR37
 10915 0b94 00000000 		.word	.LANCHOR119
 10916 0b98 00000000 		.word	.LANCHOR120
 10917 0b9c 00000000 		.word	.LANCHOR125
 10918 0ba0 00000000 		.word	.LANCHOR126
 10919 0ba4 CDCC4C3E 		.word	1045220557
 10920 0ba8 CDCC4CBE 		.word	3192704205
 10921              	.LVL684:
 10922              	.L547:
1865:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10923              		.loc 20 1865 19 view .LVU3108
 10924              	.LBE1624:
 10925              	.LBE1633:
 10926              	.LBE1639:
 10927              	.LBE1971:
 10928              	.LBB1972:
 10929              	.LBB1899:
 10930              	.LBB1892:
 10931              	.LBB1890:
 10932 0bac F0EE667A 		vmov.f32	s15, s13
 10933              	.LVL685:
1865:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10934              		.loc 20 1865 19 view .LVU3109
 10935 0bb0 76E6     		b	.L512
 10936              	.LVL686:
 10937              	.L545:
1865:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10938              		.loc 20 1865 19 view .LVU3110
 10939              	.LBE1890:
 10940              	.LBE1892:
 10941              	.LBB1893:
 10942              	.LBB1884:
 10943 0bb2 B0EE667A 		vmov.f32	s14, s13
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 339


 10944              	.LVL687:
1865:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10945              		.loc 20 1865 19 view .LVU3111
 10946 0bb6 1FED050A 		vldr.32	s0, .L591+96
 10947 0bba 5EE6     		b	.L511
 10948              	.LVL688:
 10949              	.L488:
1865:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10950              		.loc 20 1865 19 view .LVU3112
 10951              	.LBE1884:
 10952              	.LBE1893:
 10953              	.LBE1899:
 10954              	.LBE1972:
 10955              	.LBB1973:
 10956              	.LBB1838:
 10957              	.LBB1827:
 116:delayline_reverse.h ****                 }
 10958              		.loc 19 116 21 view .LVU3113
 10959 0bbc AB60     		str	r3, [r5, #8]
 10960 0bbe DEE6     		b	.L490
 10961              	.LVL689:
 10962              	.L498:
 116:delayline_reverse.h ****                 }
 10963              		.loc 19 116 21 view .LVU3114
 10964              	.LBE1827:
 10965              	.LBE1838:
 10966              	.LBE1973:
 10967              	.LBB1974:
 10968              	.LBB1864:
 10969              	.LBB1860:
 10970 0bc0 A260     		str	r2, [r4, #8]
 10971 0bc2 B9E6     		b	.L500
 10972              	.LVL690:
 10973              	.L467:
 116:delayline_reverse.h ****                 }
 10974              		.loc 19 116 21 view .LVU3115
 10975              	.LBE1860:
 10976              	.LBE1864:
 10977              	.LBE1974:
 10978              	.LBE1988:
 10979              	.LBE1999:
 582:Veno-Echo.cpp **** 
 10980              		.loc 20 582 1 view .LVU3116
 10981 0bc4 13B0     		add	sp, sp, #76
 10982              		.cfi_remember_state
 10983              		.cfi_def_cfa_offset 92
 10984              		@ sp needed
 10985 0bc6 BDEC0E8B 		vldm	sp!, {d8-d14}
 10986              		.cfi_restore 92
 10987              		.cfi_restore 93
 10988              		.cfi_restore 90
 10989              		.cfi_restore 91
 10990              		.cfi_restore 88
 10991              		.cfi_restore 89
 10992              		.cfi_restore 86
 10993              		.cfi_restore 87
 10994              		.cfi_restore 84
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 340


 10995              		.cfi_restore 85
 10996              		.cfi_restore 82
 10997              		.cfi_restore 83
 10998              		.cfi_restore 80
 10999              		.cfi_restore 81
 11000              		.cfi_def_cfa_offset 36
 11001 0bca BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 11002              	.LVL691:
 11003              	.L581:
 11004              		.cfi_restore_state
 11005              	.LBB2000:
 11006              	.LBB1989:
 11007              	.LBB1975:
 11008              	.LBB1865:
 11009              	.LBB1861:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 11010              		.loc 19 130 17 view .LVU3117
 11011 0bce C2ED007A 		vstr.32	s15, [r2]
 11012 0bd2 E4E4     		b	.L502
 11013              	.L505:
 145:delayline_reverse.h ****                     playinghead_ = false;
 11014              		.loc 19 145 21 view .LVU3118
 11015 0bd4 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11016              		.loc 19 144 21 view .LVU3119
 11017 0bd6 039C     		ldr	r4, [sp, #12]
 11018              	.LVL692:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11019              		.loc 19 144 21 view .LVU3120
 11020 0bd8 2260     		str	r2, [r4]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 11021              		.loc 19 145 21 view .LVU3121
 11022 0bda 1970     		strb	r1, [r3]
 146:delayline_reverse.h ****                 }
 11023              		.loc 19 146 21 view .LVU3122
 11024 0bdc 0170     		strb	r1, [r0]
 11025 0bde DEE4     		b	.L502
 11026              	.LVL693:
 11027              	.L546:
 146:delayline_reverse.h ****                 }
 11028              		.loc 19 146 21 view .LVU3123
 11029              	.LBE1861:
 11030              	.LBE1865:
 11031              	.LBE1975:
 11032              	.LBB1976:
 11033              	.LBB1900:
 11034              	.LBB1894:
 11035              	.LBB1885:
1867:Veno-Echo.cpp ****     else
 11036              		.loc 20 1867 19 view .LVU3124
 11037 0be0 B0EE667A 		vmov.f32	s14, s13
 11038              	.LVL694:
1867:Veno-Echo.cpp ****     else
 11039              		.loc 20 1867 19 view .LVU3125
 11040 0be4 1FED100A 		vldr.32	s0, .L591+100
 11041 0be8 47E6     		b	.L511
 11042              	.LVL695:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 341


 11043              	.L555:
1867:Veno-Echo.cpp ****     else
 11044              		.loc 20 1867 19 view .LVU3126
 11045              	.LBE1885:
 11046              	.LBE1894:
 11047              	.LBE1900:
 11048              	.LBE1976:
 11049              	.LBB1977:
 11050              	.LBB1640:
 11051              	.LBB1634:
 11052              	.LBB1625:
 11053 0bea B0EE667A 		vmov.f32	s14, s13
 11054              	.LVL696:
1867:Veno-Echo.cpp ****     else
 11055              		.loc 20 1867 19 view .LVU3127
 11056 0bee 1FED120A 		vldr.32	s0, .L591+100
 11057 0bf2 3CE7     		b	.L529
 11058              	.LVL697:
 11059              	.L469:
1867:Veno-Echo.cpp ****     else
 11060              		.loc 20 1867 19 view .LVU3128
 11061              	.LBE1625:
 11062              	.LBE1634:
 11063              	.LBE1640:
 11064              	.LBE1977:
 11065              	.LBE1989:
 11066              	.LBE2000:
 347:Veno-Echo.cpp ****                 Update_filterXfade();
 11067              		.loc 20 347 13 is_stmt 1 view .LVU3129
 348:Veno-Echo.cpp ****             break;
 11068              		.loc 20 348 17 view .LVU3130
 348:Veno-Echo.cpp ****             break;
 11069              		.loc 20 348 35 is_stmt 0 view .LVU3131
 11070 0bf4 FFF7FEFF 		bl	_Z18Update_filterXfadev
 11071              	.LVL698:
 349:Veno-Echo.cpp ****         }
 11072              		.loc 20 349 13 is_stmt 1 view .LVU3132
 11073 0bf8 FFF739BA 		b	.L468
 11074              	.L472:
 339:Veno-Echo.cpp ****                 Update_width();
 11075              		.loc 20 339 13 view .LVU3133
 340:Veno-Echo.cpp ****             break;
 11076              		.loc 20 340 17 view .LVU3134
 340:Veno-Echo.cpp ****             break;
 11077              		.loc 20 340 29 is_stmt 0 view .LVU3135
 11078 0bfc FFF7FEFF 		bl	_Z12Update_widthv
 11079              	.LVL699:
 341:Veno-Echo.cpp **** 
 11080              		.loc 20 341 13 is_stmt 1 view .LVU3136
 11081 0c00 FFF735BA 		b	.L468
 11082              	.L473:
 335:Veno-Echo.cpp ****                 Update_width_CV();
 11083              		.loc 20 335 13 view .LVU3137
 336:Veno-Echo.cpp ****             break;
 11084              		.loc 20 336 17 view .LVU3138
 11085              	.LBB2001:
 11086              	.LBI2001:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 342


1273:Veno-Echo.cpp **** {
 11087              		.loc 20 1273 6 view .LVU3139
 11088              	.LBB2002:
1275:Veno-Echo.cpp **** }
 11089              		.loc 20 1275 5 view .LVU3140
1275:Veno-Echo.cpp **** }
 11090              		.loc 20 1275 30 is_stmt 0 view .LVU3141
 11091 0c04 0521     		movs	r1, #5
 11092 0c06 2948     		ldr	r0, .L593
 11093 0c08 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11094              	.LVL700:
1275:Veno-Echo.cpp **** }
 11095              		.loc 20 1275 13 view .LVU3142
 11096 0c0c 284B     		ldr	r3, .L593+4
 11097 0c0e 83ED000A 		vstr.32	s0, [r3]
1276:Veno-Echo.cpp **** 
 11098              		.loc 20 1276 1 view .LVU3143
 11099 0c12 FFF72CBA 		b	.L468
 11100              	.L474:
 11101              	.LBE2002:
 11102              	.LBE2001:
 331:Veno-Echo.cpp ****                 Update_drywet();
 11103              		.loc 20 331 13 is_stmt 1 view .LVU3144
 332:Veno-Echo.cpp ****             break;
 11104              		.loc 20 332 17 view .LVU3145
 332:Veno-Echo.cpp ****             break;
 11105              		.loc 20 332 30 is_stmt 0 view .LVU3146
 11106 0c16 FFF7FEFF 		bl	_Z13Update_drywetv
 11107              	.LVL701:
 333:Veno-Echo.cpp **** 
 11108              		.loc 20 333 13 is_stmt 1 view .LVU3147
 11109 0c1a FFF728BA 		b	.L468
 11110              	.L475:
 327:Veno-Echo.cpp ****                 Update_drywet_CV();
 11111              		.loc 20 327 13 view .LVU3148
 328:Veno-Echo.cpp ****             break;
 11112              		.loc 20 328 17 view .LVU3149
 11113              	.LBB2003:
 11114              	.LBI2003:
1159:Veno-Echo.cpp **** {
 11115              		.loc 20 1159 6 view .LVU3150
 11116              	.LBB2004:
1161:Veno-Echo.cpp **** }
 11117              		.loc 20 1161 5 view .LVU3151
1161:Veno-Echo.cpp **** }
 11118              		.loc 20 1161 32 is_stmt 0 view .LVU3152
 11119 0c1e 0421     		movs	r1, #4
 11120 0c20 2248     		ldr	r0, .L593
 11121 0c22 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11122              	.LVL702:
1161:Veno-Echo.cpp **** }
 11123              		.loc 20 1161 15 view .LVU3153
 11124 0c26 234B     		ldr	r3, .L593+8
 11125 0c28 83ED000A 		vstr.32	s0, [r3]
1162:Veno-Echo.cpp **** 
 11126              		.loc 20 1162 1 view .LVU3154
 11127 0c2c FFF71FBA 		b	.L468
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 343


 11128              	.L476:
 11129              	.LBE2004:
 11130              	.LBE2003:
 323:Veno-Echo.cpp ****                 Update_feedbackR();
 11131              		.loc 20 323 13 is_stmt 1 view .LVU3155
 324:Veno-Echo.cpp ****             break;
 11132              		.loc 20 324 17 view .LVU3156
 324:Veno-Echo.cpp ****             break;
 11133              		.loc 20 324 33 is_stmt 0 view .LVU3157
 11134 0c30 FFF7FEFF 		bl	_Z16Update_feedbackRv
 11135              	.LVL703:
 325:Veno-Echo.cpp **** 
 11136              		.loc 20 325 13 is_stmt 1 view .LVU3158
 11137 0c34 FFF71BBA 		b	.L468
 11138              	.L477:
 319:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 11139              		.loc 20 319 13 view .LVU3159
 320:Veno-Echo.cpp ****             break;
 11140              		.loc 20 320 17 view .LVU3160
 11141              	.LBB2005:
 11142              	.LBI2005:
1069:Veno-Echo.cpp **** {
 11143              		.loc 20 1069 6 view .LVU3161
 11144              	.LBB2006:
1071:Veno-Echo.cpp **** }
 11145              		.loc 20 1071 5 view .LVU3162
1071:Veno-Echo.cpp **** }
 11146              		.loc 20 1071 35 is_stmt 0 view .LVU3163
 11147 0c38 0321     		movs	r1, #3
 11148 0c3a 1C48     		ldr	r0, .L593
 11149 0c3c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11150              	.LVL704:
1071:Veno-Echo.cpp **** }
 11151              		.loc 20 1071 18 view .LVU3164
 11152 0c40 1D4B     		ldr	r3, .L593+12
 11153 0c42 83ED000A 		vstr.32	s0, [r3]
1072:Veno-Echo.cpp **** 
 11154              		.loc 20 1072 1 view .LVU3165
 11155 0c46 FFF712BA 		b	.L468
 11156              	.L478:
 11157              	.LBE2006:
 11158              	.LBE2005:
 315:Veno-Echo.cpp ****                 Update_feedbackL();
 11159              		.loc 20 315 13 is_stmt 1 view .LVU3166
 316:Veno-Echo.cpp ****             break;
 11160              		.loc 20 316 17 view .LVU3167
 316:Veno-Echo.cpp ****             break;
 11161              		.loc 20 316 33 is_stmt 0 view .LVU3168
 11162 0c4a FFF7FEFF 		bl	_Z16Update_feedbackLv
 11163              	.LVL705:
 317:Veno-Echo.cpp **** 
 11164              		.loc 20 317 13 is_stmt 1 view .LVU3169
 11165 0c4e FFF70EBA 		b	.L468
 11166              	.L479:
 311:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 11167              		.loc 20 311 13 view .LVU3170
 312:Veno-Echo.cpp ****             break;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 344


 11168              		.loc 20 312 17 view .LVU3171
 11169              	.LBB2007:
 11170              	.LBI2007:
 981:Veno-Echo.cpp **** {
 11171              		.loc 20 981 6 view .LVU3172
 11172              	.LBB2008:
 983:Veno-Echo.cpp **** }
 11173              		.loc 20 983 5 view .LVU3173
 983:Veno-Echo.cpp **** }
 11174              		.loc 20 983 35 is_stmt 0 view .LVU3174
 11175 0c52 0221     		movs	r1, #2
 11176 0c54 1548     		ldr	r0, .L593
 11177 0c56 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11178              	.LVL706:
 983:Veno-Echo.cpp **** }
 11179              		.loc 20 983 18 view .LVU3175
 11180 0c5a 184B     		ldr	r3, .L593+16
 11181 0c5c 83ED000A 		vstr.32	s0, [r3]
 984:Veno-Echo.cpp **** void Update_feedbackL()
 11182              		.loc 20 984 1 view .LVU3176
 11183 0c60 FFF705BA 		b	.L468
 11184              	.L480:
 11185              	.LBE2008:
 11186              	.LBE2007:
 307:Veno-Echo.cpp ****                 Update_DelayTimeR();
 11187              		.loc 20 307 13 is_stmt 1 view .LVU3177
 308:Veno-Echo.cpp ****             break;
 11188              		.loc 20 308 17 view .LVU3178
 308:Veno-Echo.cpp ****             break;
 11189              		.loc 20 308 34 is_stmt 0 view .LVU3179
 11190 0c64 FFF7FEFF 		bl	_Z17Update_DelayTimeRv
 11191              	.LVL707:
 309:Veno-Echo.cpp **** 
 11192              		.loc 20 309 13 is_stmt 1 view .LVU3180
 11193 0c68 FFF701BA 		b	.L468
 11194              	.L481:
 303:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 11195              		.loc 20 303 13 view .LVU3181
 304:Veno-Echo.cpp ****             break;
 11196              		.loc 20 304 17 view .LVU3182
 11197              	.LBB2009:
 11198              	.LBI2009:
 883:Veno-Echo.cpp **** {
 11199              		.loc 20 883 6 view .LVU3183
 11200              	.LBB2010:
 885:Veno-Echo.cpp **** }
 11201              		.loc 20 885 5 view .LVU3184
 885:Veno-Echo.cpp **** }
 11202              		.loc 20 885 36 is_stmt 0 view .LVU3185
 11203 0c6c 0121     		movs	r1, #1
 11204 0c6e 0F48     		ldr	r0, .L593
 11205 0c70 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11206              	.LVL708:
 885:Veno-Echo.cpp **** }
 11207              		.loc 20 885 19 view .LVU3186
 11208 0c74 124B     		ldr	r3, .L593+20
 11209 0c76 83ED000A 		vstr.32	s0, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 345


 886:Veno-Echo.cpp **** 
 11210              		.loc 20 886 1 view .LVU3187
 11211 0c7a FFF7F8B9 		b	.L468
 11212              	.L482:
 11213              	.LBE2010:
 11214              	.LBE2009:
 299:Veno-Echo.cpp ****                 Update_DelayTimeL();
 11215              		.loc 20 299 13 is_stmt 1 view .LVU3188
 300:Veno-Echo.cpp ****             break;
 11216              		.loc 20 300 17 view .LVU3189
 300:Veno-Echo.cpp ****             break;
 11217              		.loc 20 300 34 is_stmt 0 view .LVU3190
 11218 0c7e FFF7FEFF 		bl	_Z17Update_DelayTimeLv
 11219              	.LVL709:
 301:Veno-Echo.cpp **** 
 11220              		.loc 20 301 13 is_stmt 1 view .LVU3191
 11221 0c82 FFF7F4B9 		b	.L468
 11222              	.L483:
 295:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 11223              		.loc 20 295 13 view .LVU3192
 296:Veno-Echo.cpp ****             break;
 11224              		.loc 20 296 17 view .LVU3193
 11225              	.LBB2011:
 11226              	.LBI2011:
 785:Veno-Echo.cpp **** {
 11227              		.loc 20 785 6 view .LVU3194
 11228              	.LBB2012:
 787:Veno-Echo.cpp **** }
 11229              		.loc 20 787 5 view .LVU3195
 787:Veno-Echo.cpp **** }
 11230              		.loc 20 787 36 is_stmt 0 view .LVU3196
 11231 0c86 0021     		movs	r1, #0
 11232 0c88 0848     		ldr	r0, .L593
 11233 0c8a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11234              	.LVL710:
 787:Veno-Echo.cpp **** }
 11235              		.loc 20 787 19 view .LVU3197
 11236 0c8e 0D4B     		ldr	r3, .L593+24
 11237 0c90 83ED000A 		vstr.32	s0, [r3]
 788:Veno-Echo.cpp **** 
 11238              		.loc 20 788 1 view .LVU3198
 11239 0c94 FFF7EBB9 		b	.L468
 11240              	.L484:
 11241              	.LBE2012:
 11242              	.LBE2011:
 288:Veno-Echo.cpp ****                 Update_Buttons();
 11243              		.loc 20 288 13 is_stmt 1 view .LVU3199
 289:Veno-Echo.cpp ****                 GetModCV();
 11244              		.loc 20 289 17 view .LVU3200
 289:Veno-Echo.cpp ****                 GetModCV();
 11245              		.loc 20 289 31 is_stmt 0 view .LVU3201
 11246 0c98 FFF7FEFF 		bl	_Z14Update_Buttonsv
 11247              	.LVL711:
 290:Veno-Echo.cpp ****                 Update_DelayBaseTempo();
 11248              		.loc 20 290 17 is_stmt 1 view .LVU3202
 290:Veno-Echo.cpp ****                 Update_DelayBaseTempo();
 11249              		.loc 20 290 25 is_stmt 0 view .LVU3203
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 346


 11250 0c9c FFF7FEFF 		bl	_Z8GetModCVv
 11251              	.LVL712:
 291:Veno-Echo.cpp ****                 Update_DelayTempoLEDs();
 11252              		.loc 20 291 17 is_stmt 1 view .LVU3204
 291:Veno-Echo.cpp ****                 Update_DelayTempoLEDs();
 11253              		.loc 20 291 38 is_stmt 0 view .LVU3205
 11254 0ca0 FFF7FEFF 		bl	_Z21Update_DelayBaseTempov
 11255              	.LVL713:
 292:Veno-Echo.cpp ****             break;
 11256              		.loc 20 292 17 is_stmt 1 view .LVU3206
 292:Veno-Echo.cpp ****             break;
 11257              		.loc 20 292 38 is_stmt 0 view .LVU3207
 11258 0ca4 FFF7FEFF 		bl	_Z21Update_DelayTempoLEDsv
 11259              	.LVL714:
 293:Veno-Echo.cpp **** 
 11260              		.loc 20 293 13 is_stmt 1 view .LVU3208
 11261 0ca8 FFF7E1B9 		b	.L468
 11262              	.L594:
 11263              		.align	2
 11264              	.L593:
 11265 0cac 18000000 		.word	.LANCHOR4+24
 11266 0cb0 00000000 		.word	.LANCHOR58
 11267 0cb4 00000000 		.word	.LANCHOR50
 11268 0cb8 00000000 		.word	.LANCHOR38
 11269 0cbc 00000000 		.word	.LANCHOR26
 11270 0cc0 00000000 		.word	.LANCHOR16
 11271 0cc4 00000000 		.word	.LANCHOR5
 11272              		.cfi_endproc
 11273              	.LFE4309:
 11275              		.section	.text._Z9HardLimitff,"ax",%progbits
 11276              		.align	1
 11277              		.p2align 2,,3
 11278              		.global	_Z9HardLimitff
 11279              		.syntax unified
 11280              		.thumb
 11281              		.thumb_func
 11282              		.fpu fpv5-d16
 11284              	_Z9HardLimitff:
 11285              	.LVL715:
 11286              	.LFB4336:
1862:Veno-Echo.cpp ****     float returnval{};
 11287              		.loc 20 1862 1 view -0
 11288              		.cfi_startproc
 11289              		@ args = 0, pretend = 0, frame = 0
 11290              		@ frame_needed = 0, uses_anonymous_args = 0
 11291              		@ link register save eliminated.
1863:Veno-Echo.cpp ****     if (input > limit)
 11292              		.loc 20 1863 5 view .LVU3210
1864:Veno-Echo.cpp ****         returnval = limit;
 11293              		.loc 20 1864 5 view .LVU3211
 11294 0000 B4EEE00A 		vcmpe.f32	s0, s1
 11295 0004 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11296 0008 07DC     		bgt	.L596
1866:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11297              		.loc 20 1866 10 view .LVU3212
1866:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11298              		.loc 20 1866 28 is_stmt 0 view .LVU3213
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 347


 11299 000a F1EE600A 		vneg.f32	s1, s1
 11300              	.LVL716:
1866:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11301              		.loc 20 1866 10 view .LVU3214
 11302 000e F4EEC00A 		vcmpe.f32	s1, s0
 11303 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1869:Veno-Echo.cpp **** 
 11304              		.loc 20 1869 19 view .LVU3215
 11305 0016 70FE800A 		vselgt.f32	s1, s1, s0
 11306              	.L596:
 11307              	.LVL717:
1871:Veno-Echo.cpp **** }
 11308              		.loc 20 1871 5 is_stmt 1 view .LVU3216
1872:Veno-Echo.cpp **** 
 11309              		.loc 20 1872 1 is_stmt 0 view .LVU3217
 11310 001a B0EE600A 		vmov.f32	s0, s1
 11311              	.LVL718:
1872:Veno-Echo.cpp **** 
 11312              		.loc 20 1872 1 view .LVU3218
 11313 001e 7047     		bx	lr
 11314              		.cfi_endproc
 11315              	.LFE4336:
 11317              		.section	.text._Z10PotCVComboff,"ax",%progbits
 11318              		.align	1
 11319              		.p2align 2,,3
 11320              		.global	_Z10PotCVComboff
 11321              		.syntax unified
 11322              		.thumb
 11323              		.thumb_func
 11324              		.fpu fpv5-d16
 11326              	_Z10PotCVComboff:
 11327              	.LVL719:
 11328              	.LFB4337:
1875:Veno-Echo.cpp ****     float output{};
 11329              		.loc 20 1875 1 is_stmt 1 view -0
 11330              		.cfi_startproc
 11331              		@ args = 0, pretend = 0, frame = 0
 11332              		@ frame_needed = 0, uses_anonymous_args = 0
 11333              		@ link register save eliminated.
1876:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 11334              		.loc 20 1876 5 view .LVU3220
1877:Veno-Echo.cpp **** 
 11335              		.loc 20 1877 5 view .LVU3221
1877:Veno-Echo.cpp **** 
 11336              		.loc 20 1877 39 is_stmt 0 view .LVU3222
 11337 0000 F7EE007A 		vmov.f32	s15, #1.0e+0
1877:Veno-Echo.cpp **** 
 11338              		.loc 20 1877 49 view .LVU3223
 11339 0004 F6EE006A 		vmov.f32	s13, #5.0e-1
1877:Veno-Echo.cpp **** 
 11340              		.loc 20 1877 12 view .LVU3224
 11341 0008 B0EE007A 		vmov.f32	s14, #2.0e+0
1877:Veno-Echo.cpp **** 
 11342              		.loc 20 1877 39 view .LVU3225
 11343 000c 77EEE00A 		vsub.f32	s1, s15, s1
 11344              	.LVL720:
1877:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 348


 11345              		.loc 20 1877 49 view .LVU3226
 11346 0010 70EEE60A 		vsub.f32	s1, s1, s13
1877:Veno-Echo.cpp **** 
 11347              		.loc 20 1877 12 view .LVU3227
 11348 0014 A0EE870A 		vfma.f32	s0, s1, s14
 11349              	.LVL721:
1879:Veno-Echo.cpp ****     {
 11350              		.loc 20 1879 5 is_stmt 1 view .LVU3228
 11351 0018 B5EEC00A 		vcmpe.f32	s0, #0
 11352 001c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11353 0020 06D4     		bmi	.L602
1884:Veno-Echo.cpp ****     {
 11354              		.loc 20 1884 5 view .LVU3229
1886:Veno-Echo.cpp ****     }
 11355              		.loc 20 1886 16 is_stmt 0 view .LVU3230
 11356 0022 B4EE670A 		vcmp.f32	s0, s15
 11357 0026 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11358 002a 37FE800A 		vselgt.f32	s0, s15, s0
 11359              	.LVL722:
1886:Veno-Echo.cpp ****     }
 11360              		.loc 20 1886 16 view .LVU3231
 11361 002e 7047     		bx	lr
 11362              	.LVL723:
 11363              	.L602:
1881:Veno-Echo.cpp ****     }
 11364              		.loc 20 1881 16 view .LVU3232
 11365 0030 9FED010A 		vldr.32	s0, .L604
 11366              	.LVL724:
1889:Veno-Echo.cpp **** }
 11367              		.loc 20 1889 5 is_stmt 1 view .LVU3233
1890:Veno-Echo.cpp **** 
 11368              		.loc 20 1890 1 is_stmt 0 view .LVU3234
 11369 0034 7047     		bx	lr
 11370              	.L605:
 11371 0036 00BF     		.align	2
 11372              	.L604:
 11373 0038 00000000 		.word	0
 11374              		.cfi_endproc
 11375              	.LFE4337:
 11377              		.section	.text._Z16checkPickupStateffbb,"ax",%progbits
 11378              		.align	1
 11379              		.p2align 2,,3
 11380              		.global	_Z16checkPickupStateffbb
 11381              		.syntax unified
 11382              		.thumb
 11383              		.thumb_func
 11384              		.fpu fpv5-d16
 11386              	_Z16checkPickupStateffbb:
 11387              	.LVL725:
 11388              	.LFB4338:
1894:Veno-Echo.cpp ****     bool retval{};
 11389              		.loc 20 1894 1 is_stmt 1 view -0
 11390              		.cfi_startproc
 11391              		@ args = 0, pretend = 0, frame = 0
 11392              		@ frame_needed = 0, uses_anonymous_args = 0
 11393              		@ link register save eliminated.
1895:Veno-Echo.cpp ****     
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 349


 11394              		.loc 20 1895 5 view .LVU3236
1897:Veno-Echo.cpp ****     {
 11395              		.loc 20 1897 5 view .LVU3237
 11396 0000 69B1     		cbz	r1, .L607
1899:Veno-Echo.cpp ****         {
 11397              		.loc 20 1899 9 view .LVU3238
 11398              	.LVL726:
 11399              	.LBB2013:
 11400              	.LBI2013:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 11401              		.loc 21 75 3 view .LVU3239
 11402              	.LBB2014:
 11403              		.loc 21 76 5 view .LVU3240
 11404              		.loc 21 76 5 is_stmt 0 view .LVU3241
 11405              	.LBE2014:
 11406              	.LBE2013:
1899:Veno-Echo.cpp ****         {
 11407              		.loc 20 1899 15 view .LVU3242
 11408 0002 70EE600A 		vsub.f32	s1, s0, s1
 11409              	.LVL727:
1899:Veno-Echo.cpp ****         {
 11410              		.loc 20 1899 9 view .LVU3243
 11411 0006 DFED0D7A 		vldr.32	s15, .L610
 11412              	.LBB2016:
 11413              	.LBB2015:
 11414              		.loc 21 76 31 view .LVU3244
 11415 000a B0EEE00A 		vabs.f32	s0, s1
 11416              	.LVL728:
 11417              		.loc 21 76 31 view .LVU3245
 11418              	.LBE2015:
 11419              	.LBE2016:
1899:Veno-Echo.cpp ****         {
 11420              		.loc 20 1899 9 view .LVU3246
 11421 000e B4EEE70A 		vcmpe.f32	s0, s15
 11422 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11423 0016 D4BF     		ite	le
 11424 0018 0120     		movle	r0, #1
 11425              	.LVL729:
1899:Veno-Echo.cpp ****         {
 11426              		.loc 20 1899 9 view .LVU3247
 11427 001a 0020     		movgt	r0, #0
 11428 001c 7047     		bx	lr
 11429              	.LVL730:
 11430              	.L607:
1911:Veno-Echo.cpp ****     {
 11431              		.loc 20 1911 5 is_stmt 1 view .LVU3248
 11432 001e 60B9     		cbnz	r0, .L608
1913:Veno-Echo.cpp ****         {
 11433              		.loc 20 1913 9 view .LVU3249
 11434              	.LVL731:
 11435              	.LBB2017:
 11436              	.LBI2017:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 11437              		.loc 21 75 3 view .LVU3250
 11438              	.LBB2018:
 11439              		.loc 21 76 5 view .LVU3251
 11440              		.loc 21 76 5 is_stmt 0 view .LVU3252
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 350


 11441              	.LBE2018:
 11442              	.LBE2017:
1913:Veno-Echo.cpp ****         {
 11443              		.loc 20 1913 15 view .LVU3253
 11444 0020 30EE600A 		vsub.f32	s0, s0, s1
 11445              	.LVL732:
1913:Veno-Echo.cpp ****         {
 11446              		.loc 20 1913 9 view .LVU3254
 11447 0024 DFED057A 		vldr.32	s15, .L610
 11448              	.LBB2020:
 11449              	.LBB2019:
 11450              		.loc 21 76 31 view .LVU3255
 11451 0028 B0EEC00A 		vabs.f32	s0, s0
 11452              	.LBE2019:
 11453              	.LBE2020:
1913:Veno-Echo.cpp ****         {
 11454              		.loc 20 1913 9 view .LVU3256
 11455 002c B4EEE70A 		vcmpe.f32	s0, s15
 11456 0030 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11457 0034 CCBF     		ite	gt
 11458 0036 0120     		movgt	r0, #1
 11459              	.LVL733:
1913:Veno-Echo.cpp ****         {
 11460              		.loc 20 1913 9 view .LVU3257
 11461 0038 0020     		movle	r0, #0
 11462              	.L608:
 11463              	.LVL734:
1930:Veno-Echo.cpp **** 
 11464              		.loc 20 1930 5 is_stmt 1 view .LVU3258
1932:Veno-Echo.cpp **** 
 11465              		.loc 20 1932 1 is_stmt 0 view .LVU3259
 11466 003a 7047     		bx	lr
 11467              	.L611:
 11468              		.align	2
 11469              	.L610:
 11470 003c 0AD7A33B 		.word	1000593162
 11471              		.cfi_endproc
 11472              	.LFE4338:
 11474              		.section	.text._Z20checkPickupState_altff11pickupStateb,"ax",%progbits
 11475              		.align	1
 11476              		.p2align 2,,3
 11477              		.global	_Z20checkPickupState_altff11pickupStateb
 11478              		.syntax unified
 11479              		.thumb
 11480              		.thumb_func
 11481              		.fpu fpv5-d16
 11483              	_Z20checkPickupState_altff11pickupStateb:
 11484              	.LVL735:
 11485              	.LFB4339:
1936:Veno-Echo.cpp ****     pickupState retval{};
 11486              		.loc 20 1936 1 is_stmt 1 view -0
 11487              		.cfi_startproc
 11488              		@ args = 0, pretend = 0, frame = 0
 11489              		@ frame_needed = 0, uses_anonymous_args = 0
 11490              		@ link register save eliminated.
1937:Veno-Echo.cpp **** 
 11491              		.loc 20 1937 5 view .LVU3261
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 351


1939:Veno-Echo.cpp ****     {
 11492              		.loc 20 1939 5 view .LVU3262
 11493 0000 A1B1     		cbz	r1, .L613
1941:Veno-Echo.cpp ****         {
 11494              		.loc 20 1941 9 view .LVU3263
1941:Veno-Echo.cpp ****         {
 11495              		.loc 20 1941 31 is_stmt 0 view .LVU3264
 11496 0002 DFED1A7A 		vldr.32	s15, .L630
 11497 0006 30EEE77A 		vsub.f32	s14, s1, s15
1941:Veno-Echo.cpp ****         {
 11498              		.loc 20 1941 9 view .LVU3265
 11499 000a B4EEC07A 		vcmpe.f32	s14, s0
 11500 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11501 0012 01DD     		ble	.L628
 11502 0014 0020     		movs	r0, #0
 11503              	.LVL736:
1941:Veno-Echo.cpp ****         {
 11504              		.loc 20 1941 9 view .LVU3266
 11505 0016 7047     		bx	lr
 11506              	.LVL737:
 11507              	.L628:
1946:Veno-Echo.cpp ****         {
 11508              		.loc 20 1946 14 is_stmt 1 view .LVU3267
1946:Veno-Echo.cpp ****         {
 11509              		.loc 20 1946 36 is_stmt 0 view .LVU3268
 11510 0018 70EEA70A 		vadd.f32	s1, s1, s15
 11511              	.LVL738:
1946:Veno-Echo.cpp ****         {
 11512              		.loc 20 1946 14 view .LVU3269
 11513 001c F4EEC00A 		vcmpe.f32	s1, s0
 11514 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1953:Veno-Echo.cpp ****         }
 11515              		.loc 20 1953 20 view .LVU3270
 11516 0024 4CBF     		ite	mi
 11517 0026 0120     		movmi	r0, #1
 11518              	.LVL739:
1953:Veno-Echo.cpp ****         }
 11519              		.loc 20 1953 20 view .LVU3271
 11520 0028 0220     		movpl	r0, #2
 11521 002a 7047     		bx	lr
 11522              	.LVL740:
 11523              	.L613:
1959:Veno-Echo.cpp ****         {
 11524              		.loc 20 1959 9 is_stmt 1 view .LVU3272
 11525 002c 0128     		cmp	r0, #1
 11526 002e 04D0     		beq	.L616
 11527 0030 0228     		cmp	r0, #2
 11528 0032 01D0     		beq	.L614
 11529 0034 68B1     		cbz	r0, .L629
 11530 0036 0846     		mov	r0, r1
 11531              	.LVL741:
 11532              	.L614:
1980:Veno-Echo.cpp **** }
 11533              		.loc 20 1980 5 view .LVU3273
1981:Veno-Echo.cpp **** 
 11534              		.loc 20 1981 1 is_stmt 0 view .LVU3274
 11535 0038 7047     		bx	lr
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 352


 11536              	.LVL742:
 11537              	.L616:
1968:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
 11538              		.loc 20 1968 13 is_stmt 1 view .LVU3275
1969:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11539              		.loc 20 1969 13 view .LVU3276
1969:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11540              		.loc 20 1969 35 is_stmt 0 view .LVU3277
 11541 003a DFED0C7A 		vldr.32	s15, .L630
 11542 003e 70EEA70A 		vadd.f32	s1, s1, s15
 11543              	.LVL743:
1969:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11544              		.loc 20 1969 13 view .LVU3278
 11545 0042 F4EEC00A 		vcmpe.f32	s1, s0
 11546 0046 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11547 004a CCBF     		ite	gt
 11548 004c 0220     		movgt	r0, #2
 11549              	.LVL744:
1969:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11550              		.loc 20 1969 13 view .LVU3279
 11551 004e 0120     		movle	r0, #1
 11552 0050 7047     		bx	lr
 11553              	.LVL745:
 11554              	.L629:
1961:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
 11555              		.loc 20 1961 13 is_stmt 1 view .LVU3280
1962:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11556              		.loc 20 1962 13 view .LVU3281
1962:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11557              		.loc 20 1962 35 is_stmt 0 view .LVU3282
 11558 0052 DFED067A 		vldr.32	s15, .L630
 11559 0056 70EEE70A 		vsub.f32	s1, s1, s15
 11560              	.LVL746:
1962:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11561              		.loc 20 1962 13 view .LVU3283
 11562 005a F4EEC00A 		vcmpe.f32	s1, s0
 11563 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11564 0062 4CBF     		ite	mi
 11565 0064 0220     		movmi	r0, #2
 11566              	.LVL747:
1962:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11567              		.loc 20 1962 13 view .LVU3284
 11568 0066 0020     		movpl	r0, #0
 11569 0068 7047     		bx	lr
 11570              	.L631:
 11571 006a 00BF     		.align	2
 11572              	.L630:
 11573 006c 0AD7A33B 		.word	1000593162
 11574              		.cfi_endproc
 11575              	.LFE4339:
 11577              		.section	.text._Z11GetTapRatio9TapRatios,"ax",%progbits
 11578              		.align	1
 11579              		.p2align 2,,3
 11580              		.global	_Z11GetTapRatio9TapRatios
 11581              		.syntax unified
 11582              		.thumb
 11583              		.thumb_func
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 353


 11584              		.fpu fpv5-d16
 11586              	_Z11GetTapRatio9TapRatios:
 11587              	.LVL748:
 11588              	.LFB4340:
1984:Veno-Echo.cpp **** double retVal{};
 11589              		.loc 20 1984 1 is_stmt 1 view -0
 11590              		.cfi_startproc
 11591              		@ args = 0, pretend = 0, frame = 0
 11592              		@ frame_needed = 0, uses_anonymous_args = 0
 11593              		@ link register save eliminated.
1985:Veno-Echo.cpp ****     switch(ratio)
 11594              		.loc 20 1985 1 view .LVU3286
1986:Veno-Echo.cpp ****     {
 11595              		.loc 20 1986 5 view .LVU3287
 11596 0000 0138     		subs	r0, r0, #1
 11597              	.LVL749:
1986:Veno-Echo.cpp ****     {
 11598              		.loc 20 1986 5 is_stmt 0 view .LVU3288
 11599 0002 C0B2     		uxtb	r0, r0
 11600 0004 0228     		cmp	r0, #2
 11601 0006 05D8     		bhi	.L634
 11602 0008 044B     		ldr	r3, .L635
 11603 000a 03EBC000 		add	r0, r3, r0, lsl #3
 11604 000e 90ED000B 		vldr.64	d0, [r0]
 11605 0012 7047     		bx	lr
 11606              	.L634:
1984:Veno-Echo.cpp **** double retVal{};
 11607              		.loc 20 1984 1 view .LVU3289
 11608 0014 B7EE000B 		vmov.f64	d0, #1.0e+0
 11609              	.LVL750:
 11610              		.loc 20 2009 1 is_stmt 1 view .LVU3290
2010:Veno-Echo.cpp **** }
 11611              		.loc 20 2010 1 is_stmt 0 view .LVU3291
 11612 0018 7047     		bx	lr
 11613              	.L636:
 11614 001a 00BF     		.align	2
 11615              	.L635:
 11616 001c 00000000 		.word	.LANCHOR24
 11617              		.cfi_endproc
 11618              	.LFE4340:
 11620              		.section	.text.startup._GLOBAL__sub_I_delMemsL,"ax",%progbits
 11621              		.align	1
 11622              		.p2align 2,,3
 11623              		.syntax unified
 11624              		.thumb
 11625              		.thumb_func
 11626              		.fpu fpv5-d16
 11628              	_GLOBAL__sub_I_delMemsL:
 11629              	.LFB4919:
 11630              		.loc 20 2010 1 is_stmt 1 view -0
 11631              		.cfi_startproc
 11632              		@ args = 0, pretend = 0, frame = 0
 11633              		@ frame_needed = 0, uses_anonymous_args = 0
 11634              	.LBB2177:
 11635              	.LBI2177:
 11636              		.loc 20 2010 1 view .LVU3293
 11637              	.LVL751:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 354


 11638              	.LBB2178:
 11639              	.LBB2179:
 11640              	.LBI2179:
  21:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 11641              		.loc 2 21 5 view .LVU3294
 11642              	.LBB2180:
 11643              	.LBB2181:
 11644              	.LBI2181:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 11645              		.loc 6 36 5 view .LVU3295
 11646              	.LBE2181:
 11647              	.LBE2180:
 11648              	.LBE2179:
 11649              	.LBE2178:
 11650              	.LBE2177:
 11651              		.loc 20 2010 1 is_stmt 0 view .LVU3296
 11652 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 11653              		.cfi_def_cfa_offset 24
 11654              		.cfi_offset 4, -24
 11655              		.cfi_offset 5, -20
 11656              		.cfi_offset 6, -16
 11657              		.cfi_offset 7, -12
 11658              		.cfi_offset 8, -8
 11659              		.cfi_offset 14, -4
 11660              	.LBB2300:
 11661              	.LBB2296:
 11662              	.LBB2196:
 11663              	.LBB2194:
 11664              	.LBB2186:
 11665              	.LBB2182:
 11666              	.LBB2183:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 11667              		.loc 6 36 35 view .LVU3297
 11668 0004 9748     		ldr	r0, .L639
 11669 0006 0026     		movs	r6, #0
 11670              	.LBE2183:
 11671              	.LBE2182:
 11672              	.LBE2186:
 11673              	.LBE2194:
 11674              	.LBE2196:
 11675              		.file 26 "Veno-Echo.h"
   1:Veno-Echo.h   **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.h   **** // 
   3:Veno-Echo.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.h   **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.h   **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.h   **** // 
  10:Veno-Echo.h   **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.h   **** // all copies or substantial portions of the Software.
  12:Veno-Echo.h   **** // 
  13:Veno-Echo.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 355


  17:Veno-Echo.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.h   **** // THE SOFTWARE.
  20:Veno-Echo.h   **** // 
  21:Veno-Echo.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.h   **** 
  23:Veno-Echo.h   **** #ifndef VENO_ECHO_H
  24:Veno-Echo.h   **** #define VENO_ECHO_H
  25:Veno-Echo.h   **** 
  26:Veno-Echo.h   **** //defines for HW pins:
  27:Veno-Echo.h   **** 
  28:Veno-Echo.h   **** 
  29:Veno-Echo.h   **** 
  30:Veno-Echo.h   **** #include "daisy_seed.h"
  31:Veno-Echo.h   **** using namespace daisy;
  32:Veno-Echo.h   **** 
  33:Veno-Echo.h   **** static DaisySeed hw;
 11676              		.loc 26 33 18 view .LVU3298
 11677 0008 974C     		ldr	r4, .L639+4
  40:Veno-Echo.cpp **** static Svf LPF_R;
 11678              		.loc 20 40 12 view .LVU3299
 11679 000a 984D     		ldr	r5, .L639+8
 11680              		.loc 26 33 18 view .LVU3300
 11681 000c 2246     		mov	r2, r4
 11682 000e 9849     		ldr	r1, .L639+12
 11683              	.LBB2197:
 11684              	.LBB2195:
 11685              	.LBB2187:
 11686              	.LBB2185:
 11687              	.LBB2184:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 11688              		.loc 6 36 35 view .LVU3301
 11689 0010 4661     		str	r6, [r0, #20]
 11690              	.LVL752:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 11691              		.loc 6 36 35 view .LVU3302
 11692              	.LBE2184:
 11693              	.LBE2185:
 11694              	.LBE2187:
 11695              	.LBB2188:
 11696              	.LBI2188:
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 11697              		.loc 5 84 5 is_stmt 1 view .LVU3303
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 11698              		.loc 5 84 5 is_stmt 0 view .LVU3304
 11699              	.LBE2188:
 11700              	.LBB2189:
 11701              	.LBI2189:
 11702              		.file 27 "../libdaisy/src/per/dac.h"
   1:../libdaisy/src/per/dac.h **** #pragma once
   2:../libdaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../libdaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../libdaisy/src/per/dac.h **** 
   5:../libdaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../libdaisy/src/per/dac.h **** 
   7:../libdaisy/src/per/dac.h **** namespace daisy
   8:../libdaisy/src/per/dac.h **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 356


   9:../libdaisy/src/per/dac.h **** /** DAC handle for Built-in DAC Peripheral 
  10:../libdaisy/src/per/dac.h ****  ** 
  11:../libdaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  12:../libdaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  13:../libdaisy/src/per/dac.h ****  **
  14:../libdaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal periphearls is also not supported.
  15:../libdaisy/src/per/dac.h ****  **
  16:../libdaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  17:../libdaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  18:../libdaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  19:../libdaisy/src/per/dac.h ****  ***/
  20:../libdaisy/src/per/dac.h **** class DacHandle
  21:../libdaisy/src/per/dac.h **** {
  22:../libdaisy/src/per/dac.h ****   public:
  23:../libdaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  24:../libdaisy/src/per/dac.h ****     enum class Result
  25:../libdaisy/src/per/dac.h ****     {
  26:../libdaisy/src/per/dac.h ****         OK,
  27:../libdaisy/src/per/dac.h ****         ERR,
  28:../libdaisy/src/per/dac.h ****     };
  29:../libdaisy/src/per/dac.h **** 
  30:../libdaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  31:../libdaisy/src/per/dac.h ****     enum class Channel
  32:../libdaisy/src/per/dac.h ****     {
  33:../libdaisy/src/per/dac.h ****         ONE,
  34:../libdaisy/src/per/dac.h ****         TWO,
  35:../libdaisy/src/per/dac.h ****         BOTH,
  36:../libdaisy/src/per/dac.h ****     };
  37:../libdaisy/src/per/dac.h **** 
  38:../libdaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  39:../libdaisy/src/per/dac.h ****      **
  40:../libdaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  41:../libdaisy/src/per/dac.h ****      **
  42:../libdaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  43:../libdaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  44:../libdaisy/src/per/dac.h ****      ***/
  45:../libdaisy/src/per/dac.h ****     enum class Mode
  46:../libdaisy/src/per/dac.h ****     {
  47:../libdaisy/src/per/dac.h ****         POLLING,
  48:../libdaisy/src/per/dac.h ****         DMA,
  49:../libdaisy/src/per/dac.h ****     };
  50:../libdaisy/src/per/dac.h **** 
  51:../libdaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  52:../libdaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  53:../libdaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  54:../libdaisy/src/per/dac.h ****      ***/
  55:../libdaisy/src/per/dac.h ****     enum class BitDepth
  56:../libdaisy/src/per/dac.h ****     {
  57:../libdaisy/src/per/dac.h ****         BITS_8,
  58:../libdaisy/src/per/dac.h ****         BITS_12
  59:../libdaisy/src/per/dac.h ****     };
  60:../libdaisy/src/per/dac.h **** 
  61:../libdaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  62:../libdaisy/src/per/dac.h ****     enum class BufferState
  63:../libdaisy/src/per/dac.h ****     {
  64:../libdaisy/src/per/dac.h ****         ENABLED,
  65:../libdaisy/src/per/dac.h ****         DISABLED,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 357


  66:../libdaisy/src/per/dac.h ****     };
  67:../libdaisy/src/per/dac.h **** 
  68:../libdaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  69:../libdaisy/src/per/dac.h ****     struct Config
  70:../libdaisy/src/per/dac.h ****     {
  71:../libdaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  72:../libdaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  73:../libdaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  74:../libdaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  75:../libdaisy/src/per/dac.h ****         uint32_t target_samplerate;
  76:../libdaisy/src/per/dac.h **** 
  77:../libdaisy/src/per/dac.h ****         Channel     chn;
  78:../libdaisy/src/per/dac.h ****         Mode        mode;
  79:../libdaisy/src/per/dac.h ****         BitDepth    bitdepth;
  80:../libdaisy/src/per/dac.h ****         BufferState buff_state;
  81:../libdaisy/src/per/dac.h ****     };
  82:../libdaisy/src/per/dac.h **** 
  83:../libdaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 11703              		.loc 27 83 5 is_stmt 1 view .LVU3305
 11704              	.LBB2190:
 11705              	.LBB2191:
 11706              		.loc 27 83 33 is_stmt 0 view .LVU3306
 11707 0012 0662     		str	r6, [r0, #32]
 11708              	.LVL753:
 11709              		.loc 27 83 33 view .LVU3307
 11710              	.LBE2191:
 11711              	.LBE2190:
 11712              	.LBE2189:
 11713              	.LBB2192:
 11714              	.LBI2192:
  40:../libdaisy/src/hid/usb.h **** 
 11715              		.loc 4 40 5 is_stmt 1 view .LVU3308
  40:../libdaisy/src/hid/usb.h **** 
 11716              		.loc 4 40 5 is_stmt 0 view .LVU3309
 11717              	.LBE2192:
 11718              	.LBB2193:
 11719              	.LBI2193:
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 11720              		.loc 3 56 5 is_stmt 1 view .LVU3310
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 11721              		.loc 3 56 5 is_stmt 0 view .LVU3311
 11722              	.LBE2193:
 11723              	.LBE2195:
 11724              	.LBE2197:
 11725              		.loc 26 33 18 view .LVU3312
 11726 0014 FFF7FEFF 		bl	__aeabi_atexit
 11727              	.LVL754:
 11728              	.LBB2198:
 11729              	.LBI2198:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11730              		.loc 9 21 5 is_stmt 1 view .LVU3313
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11731              		.loc 9 21 5 is_stmt 0 view .LVU3314
 11732              	.LBE2198:
  40:Veno-Echo.cpp **** static Svf LPF_R;
 11733              		.loc 20 40 12 view .LVU3315
 11734 0018 2246     		mov	r2, r4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 358


 11735 001a 2946     		mov	r1, r5
 11736 001c 9548     		ldr	r0, .L639+16
 11737 001e FFF7FEFF 		bl	__aeabi_atexit
 11738              	.LVL755:
 11739              	.LBB2199:
 11740              	.LBI2199:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11741              		.loc 9 21 5 is_stmt 1 view .LVU3316
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11742              		.loc 9 21 5 is_stmt 0 view .LVU3317
 11743              	.LBE2199:
  41:Veno-Echo.cpp **** static Svf HPF_L;
 11744              		.loc 20 41 12 view .LVU3318
 11745 0022 2246     		mov	r2, r4
 11746 0024 2946     		mov	r1, r5
 11747 0026 9448     		ldr	r0, .L639+20
 11748 0028 FFF7FEFF 		bl	__aeabi_atexit
 11749              	.LVL756:
 11750              	.LBB2200:
 11751              	.LBI2200:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11752              		.loc 9 21 5 is_stmt 1 view .LVU3319
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11753              		.loc 9 21 5 is_stmt 0 view .LVU3320
 11754              	.LBE2200:
  42:Veno-Echo.cpp **** static Svf HPF_R;
 11755              		.loc 20 42 12 view .LVU3321
 11756 002c 2246     		mov	r2, r4
 11757 002e 2946     		mov	r1, r5
 11758 0030 9248     		ldr	r0, .L639+24
 11759 0032 FFF7FEFF 		bl	__aeabi_atexit
 11760              	.LVL757:
 11761              	.LBB2201:
 11762              	.LBI2201:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11763              		.loc 9 21 5 is_stmt 1 view .LVU3322
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11764              		.loc 9 21 5 is_stmt 0 view .LVU3323
 11765              	.LBE2201:
  43:Veno-Echo.cpp **** 
 11766              		.loc 20 43 12 view .LVU3324
 11767 0036 2246     		mov	r2, r4
 11768 0038 2946     		mov	r1, r5
 11769 003a 9148     		ldr	r0, .L639+28
 11770 003c FFF7FEFF 		bl	__aeabi_atexit
 11771              	.LVL758:
 11772              	.LBB2202:
 11773              	.LBI2202:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11774              		.loc 9 21 5 is_stmt 1 view .LVU3325
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11775              		.loc 9 21 5 is_stmt 0 view .LVU3326
 11776              	.LBE2202:
  45:Veno-Echo.cpp **** static Svf LPF_R_post;
 11777              		.loc 20 45 12 view .LVU3327
 11778 0040 2246     		mov	r2, r4
 11779 0042 2946     		mov	r1, r5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 359


 11780 0044 8F48     		ldr	r0, .L639+32
 11781 0046 FFF7FEFF 		bl	__aeabi_atexit
 11782              	.LVL759:
 11783              	.LBB2203:
 11784              	.LBI2203:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11785              		.loc 9 21 5 is_stmt 1 view .LVU3328
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11786              		.loc 9 21 5 is_stmt 0 view .LVU3329
 11787              	.LBE2203:
  46:Veno-Echo.cpp **** static Svf HPF_L_post;
 11788              		.loc 20 46 12 view .LVU3330
 11789 004a 2246     		mov	r2, r4
 11790 004c 2946     		mov	r1, r5
 11791 004e 8E48     		ldr	r0, .L639+36
 11792 0050 FFF7FEFF 		bl	__aeabi_atexit
 11793              	.LVL760:
 11794              	.LBB2204:
 11795              	.LBI2204:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11796              		.loc 9 21 5 is_stmt 1 view .LVU3331
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11797              		.loc 9 21 5 is_stmt 0 view .LVU3332
 11798              	.LBE2204:
  47:Veno-Echo.cpp **** static Svf HPF_R_post;
 11799              		.loc 20 47 12 view .LVU3333
 11800 0054 2246     		mov	r2, r4
 11801 0056 2946     		mov	r1, r5
 11802 0058 8C48     		ldr	r0, .L639+40
 11803 005a FFF7FEFF 		bl	__aeabi_atexit
 11804              	.LVL761:
 11805              	.LBB2205:
 11806              	.LBI2205:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11807              		.loc 9 21 5 is_stmt 1 view .LVU3334
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11808              		.loc 9 21 5 is_stmt 0 view .LVU3335
 11809              	.LBE2205:
  48:Veno-Echo.cpp **** 
 11810              		.loc 20 48 12 view .LVU3336
 11811 005e 2246     		mov	r2, r4
 11812 0060 2946     		mov	r1, r5
 11813 0062 8B48     		ldr	r0, .L639+44
 11814 0064 FFF7FEFF 		bl	__aeabi_atexit
 11815              	.LVL762:
 11816              	.LBB2206:
 11817              	.LBI2206:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 11818              		.loc 8 15 5 is_stmt 1 view .LVU3337
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 11819              		.loc 8 15 5 is_stmt 0 view .LVU3338
 11820              	.LBE2206:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 11821              		.loc 20 50 19 view .LVU3339
 11822 0068 2246     		mov	r2, r4
 11823 006a 8A49     		ldr	r1, .L639+48
 11824              	.LBB2207:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 360


 11825              	.LBB2208:
 11826              	.LBB2209:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11827              		.loc 12 45 13 view .LVU3340
 11828 006c 0025     		movs	r5, #0
 11829              	.LBE2209:
 11830              	.LBE2208:
 11831              	.LBE2207:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 11832              		.loc 20 50 19 view .LVU3341
 11833 006e 8A48     		ldr	r0, .L639+52
 11834 0070 FFF7FEFF 		bl	__aeabi_atexit
 11835              	.LVL763:
 11836              	.LBB2214:
 11837              	.LBI2207:
  43:envFollow.h   ****     {
 11838              		.loc 12 43 5 is_stmt 1 view .LVU3342
 11839              	.LBB2212:
 11840              	.LBB2210:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11841              		.loc 12 45 9 view .LVU3343
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 11842              		.loc 12 48 11 is_stmt 0 view .LVU3344
 11843 0074 894F     		ldr	r7, .L639+56
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11844              		.loc 12 45 13 view .LVU3345
 11845 0076 8A48     		ldr	r0, .L639+60
 11846              	.LBE2210:
 11847              	.LBE2212:
 11848              	.LBE2214:
  51:Veno-Echo.cpp **** 
 11849              		.loc 20 51 18 view .LVU3346
 11850 0078 2246     		mov	r2, r4
 11851 007a 8A49     		ldr	r1, .L639+64
 11852              	.LBB2215:
 11853              	.LBB2213:
 11854              	.LBB2211:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11855              		.loc 12 45 13 view .LVU3347
 11856 007c 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 11857              		.loc 12 46 9 is_stmt 1 view .LVU3348
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 11858              		.loc 12 46 20 is_stmt 0 view .LVU3349
 11859 007e 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 11860              		.loc 12 47 9 is_stmt 1 view .LVU3350
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 11861              		.loc 12 47 17 is_stmt 0 view .LVU3351
 11862 0080 C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 11863              		.loc 12 48 9 is_stmt 1 view .LVU3352
  50:envFollow.h   ****     }  
 11864              		.loc 12 50 21 is_stmt 0 view .LVU3353
 11865 0082 8560     		str	r5, [r0, #8]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 11866              		.loc 12 48 11 view .LVU3354
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 361


 11867 0084 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 11868              		.loc 12 49 9 is_stmt 1 view .LVU3355
  49:envFollow.h   ****         sample_noDC = 0.0f;
 11869              		.loc 12 49 15 is_stmt 0 view .LVU3356
 11870 0086 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 11871              		.loc 12 50 9 is_stmt 1 view .LVU3357
 11872              	.LVL764:
  50:envFollow.h   ****     }  
 11873              		.loc 12 50 9 is_stmt 0 view .LVU3358
 11874              	.LBE2211:
 11875              	.LBE2213:
 11876              	.LBE2215:
  51:Veno-Echo.cpp **** 
 11877              		.loc 20 51 18 view .LVU3359
 11878 0088 FFF7FEFF 		bl	__aeabi_atexit
 11879              	.LVL765:
 11880              	.LBB2216:
 11881              	.LBI2216:
  43:envFollow.h   ****     {
 11882              		.loc 12 43 5 is_stmt 1 view .LVU3360
 11883              	.LBB2217:
 11884              	.LBB2218:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11885              		.loc 12 45 9 view .LVU3361
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11886              		.loc 12 45 13 is_stmt 0 view .LVU3362
 11887 008c 8648     		ldr	r0, .L639+68
 11888              	.LBE2218:
 11889              	.LBE2217:
 11890              	.LBE2216:
  53:Veno-Echo.cpp **** 
 11891              		.loc 20 53 16 view .LVU3363
 11892 008e DFF8E082 		ldr	r8, .L639+268
  51:Veno-Echo.cpp **** 
 11893              		.loc 20 51 27 view .LVU3364
 11894 0092 2246     		mov	r2, r4
 11895 0094 8349     		ldr	r1, .L639+64
 11896              	.LBB2221:
 11897              	.LBB2220:
 11898              	.LBB2219:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11899              		.loc 12 45 13 view .LVU3365
 11900 0096 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 11901              		.loc 12 46 9 is_stmt 1 view .LVU3366
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 11902              		.loc 12 46 20 is_stmt 0 view .LVU3367
 11903 0098 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 11904              		.loc 12 47 9 is_stmt 1 view .LVU3368
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 11905              		.loc 12 47 17 is_stmt 0 view .LVU3369
 11906 009a C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 11907              		.loc 12 48 9 is_stmt 1 view .LVU3370
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 362


  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 11908              		.loc 12 48 11 is_stmt 0 view .LVU3371
 11909 009c 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 11910              		.loc 12 49 9 is_stmt 1 view .LVU3372
  49:envFollow.h   ****         sample_noDC = 0.0f;
 11911              		.loc 12 49 15 is_stmt 0 view .LVU3373
 11912 009e 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 11913              		.loc 12 50 9 is_stmt 1 view .LVU3374
  50:envFollow.h   ****     }  
 11914              		.loc 12 50 21 is_stmt 0 view .LVU3375
 11915 00a0 8560     		str	r5, [r0, #8]	@ float
 11916              	.LVL766:
  50:envFollow.h   ****     }  
 11917              		.loc 12 50 21 view .LVU3376
 11918              	.LBE2219:
 11919              	.LBE2220:
 11920              	.LBE2221:
  51:Veno-Echo.cpp **** 
 11921              		.loc 20 51 27 view .LVU3377
 11922 00a2 FFF7FEFF 		bl	__aeabi_atexit
 11923              	.LVL767:
 11924              	.LBB2222:
 11925              	.LBI2222:
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 11926              		.loc 11 14 5 is_stmt 1 view .LVU3378
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 11927              		.loc 11 14 5 is_stmt 0 view .LVU3379
 11928              	.LBE2222:
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 11929              		.loc 20 56 76 view .LVU3380
 11930 00a6 814F     		ldr	r7, .L639+72
  53:Veno-Echo.cpp **** 
 11931              		.loc 20 53 16 view .LVU3381
 11932 00a8 2246     		mov	r2, r4
 11933 00aa 4146     		mov	r1, r8
 11934 00ac 8048     		ldr	r0, .L639+76
 11935 00ae FFF7FEFF 		bl	__aeabi_atexit
 11936              	.LVL768:
 11937              	.LBB2223:
 11938              	.LBI2223:
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 11939              		.loc 11 14 5 is_stmt 1 view .LVU3382
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 11940              		.loc 11 14 5 is_stmt 0 view .LVU3383
 11941              	.LBE2223:
  53:Veno-Echo.cpp **** 
 11942              		.loc 20 53 29 view .LVU3384
 11943 00b2 2246     		mov	r2, r4
 11944 00b4 4146     		mov	r1, r8
 11945 00b6 7F48     		ldr	r0, .L639+80
 11946 00b8 FFF7FEFF 		bl	__aeabi_atexit
 11947              	.LVL769:
 11948              	.LBB2224:
 11949              	.LBI2224:
  48:delayline_multitap.h ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 363


 11950              		.loc 18 48 5 is_stmt 1 view .LVU3385
  48:delayline_multitap.h ****     {
 11951              		.loc 18 48 5 is_stmt 0 view .LVU3386
 11952              	.LBE2224:
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 11953              		.loc 20 59 80 view .LVU3387
 11954 00bc 7E4D     		ldr	r5, .L639+84
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 11955              		.loc 20 56 76 view .LVU3388
 11956 00be 2246     		mov	r2, r4
 11957 00c0 3946     		mov	r1, r7
 11958 00c2 7E48     		ldr	r0, .L639+88
 11959 00c4 FFF7FEFF 		bl	__aeabi_atexit
 11960              	.LVL770:
 11961              	.LBB2225:
 11962              	.LBI2225:
  48:delayline_multitap.h ****     {
 11963              		.loc 18 48 5 is_stmt 1 view .LVU3389
  48:delayline_multitap.h ****     {
 11964              		.loc 18 48 5 is_stmt 0 view .LVU3390
 11965              	.LBE2225:
  57:Veno-Echo.cpp **** 
 11966              		.loc 20 57 76 view .LVU3391
 11967 00c8 2246     		mov	r2, r4
 11968 00ca 3946     		mov	r1, r7
 11969 00cc 7C48     		ldr	r0, .L639+92
 11970 00ce FFF7FEFF 		bl	__aeabi_atexit
 11971              	.LVL771:
 11972              	.LBB2226:
 11973              	.LBI2226:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 11974              		.loc 19 38 5 is_stmt 1 view .LVU3392
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 11975              		.loc 19 38 5 is_stmt 0 view .LVU3393
 11976              	.LBE2226:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 11977              		.loc 20 98 12 view .LVU3394
 11978 00d2 7C4F     		ldr	r7, .L639+96
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 11979              		.loc 20 59 80 view .LVU3395
 11980 00d4 2246     		mov	r2, r4
 11981 00d6 2946     		mov	r1, r5
 11982 00d8 7B48     		ldr	r0, .L639+100
 11983 00da FFF7FEFF 		bl	__aeabi_atexit
 11984              	.LVL772:
 11985              	.LBB2227:
 11986              	.LBI2227:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 11987              		.loc 19 38 5 is_stmt 1 view .LVU3396
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 11988              		.loc 19 38 5 is_stmt 0 view .LVU3397
 11989              	.LBE2227:
  60:Veno-Echo.cpp **** 
 11990              		.loc 20 60 80 view .LVU3398
 11991 00de 2246     		mov	r2, r4
 11992 00e0 2946     		mov	r1, r5
 11993 00e2 7A48     		ldr	r0, .L639+104
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 364


 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 11994              		.loc 20 102 11 view .LVU3399
 11995 00e4 7A4D     		ldr	r5, .L639+108
  60:Veno-Echo.cpp **** 
 11996              		.loc 20 60 80 view .LVU3400
 11997 00e6 FFF7FEFF 		bl	__aeabi_atexit
 11998              	.LVL773:
 11999              	.LBB2228:
 12000              	.LBI2228:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12001              		.loc 17 49 1 is_stmt 1 view .LVU3401
 12002              	.LBB2229:
 12003              	.LBB2230:
 12004              	.LBI2230:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 12005              		.loc 14 47 1 view .LVU3402
 12006              	.LBB2231:
 12007              	.LBB2232:
 12008              	.LBI2232:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12009              		.loc 16 24 5 view .LVU3403
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12010              		.loc 16 24 5 is_stmt 0 view .LVU3404
 12011              	.LBE2232:
 12012              	.LBB2233:
 12013              	.LBI2233:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 12014              		.loc 15 15 5 is_stmt 1 view .LVU3405
  15:oscillator_p.h ****     ~Oscillator_p() {}
 12015              		.loc 15 15 5 is_stmt 0 view .LVU3406
 12016              	.LBE2233:
 12017              	.LBE2231:
 12018              	.LBE2230:
 12019              	.LBE2229:
 12020              	.LBE2228:
 12021              	.LBE2296:
 12022              	.LBE2300:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12023              		.loc 17 49 14 is_stmt 1 view .LVU3407
  49:DelayMulti.h  **** ~DelayMulti() {}
 12024              		.loc 17 49 14 view .LVU3408
 12025              	.LBB2301:
 12026              	.LBB2297:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 12027              		.loc 20 98 12 is_stmt 0 view .LVU3409
 12028 00ea 2246     		mov	r2, r4
 12029 00ec 3946     		mov	r1, r7
 12030 00ee 7948     		ldr	r0, .L639+112
 12031 00f0 FFF7FEFF 		bl	__aeabi_atexit
 12032              	.LVL774:
 12033              	.LBB2234:
 12034              	.LBI2234:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12035              		.loc 17 49 1 is_stmt 1 view .LVU3410
 12036              	.LBB2235:
 12037              	.LBB2236:
 12038              	.LBI2236:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 365


  47:LEDs.h        **** ~TempoLED(){}   //destructor
 12039              		.loc 14 47 1 view .LVU3411
 12040              	.LBB2237:
 12041              	.LBB2238:
 12042              	.LBI2238:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12043              		.loc 16 24 5 view .LVU3412
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12044              		.loc 16 24 5 is_stmt 0 view .LVU3413
 12045              	.LBE2238:
 12046              	.LBB2239:
 12047              	.LBI2239:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 12048              		.loc 15 15 5 is_stmt 1 view .LVU3414
  15:oscillator_p.h ****     ~Oscillator_p() {}
 12049              		.loc 15 15 5 is_stmt 0 view .LVU3415
 12050              	.LBE2239:
 12051              	.LBE2237:
 12052              	.LBE2236:
 12053              	.LBE2235:
 12054              	.LBE2234:
 12055              	.LBE2297:
 12056              	.LBE2301:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12057              		.loc 17 49 14 is_stmt 1 view .LVU3416
  49:DelayMulti.h  **** ~DelayMulti() {}
 12058              		.loc 17 49 14 view .LVU3417
 12059              	.LBB2302:
 12060              	.LBB2298:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 12061              		.loc 20 98 19 is_stmt 0 view .LVU3418
 12062 00f4 2246     		mov	r2, r4
 12063 00f6 3946     		mov	r1, r7
 12064 00f8 7748     		ldr	r0, .L639+116
 12065 00fa FFF7FEFF 		bl	__aeabi_atexit
 12066              	.LVL775:
 12067              	.LBB2240:
 12068              	.LBI2240:
  78:LEDs.h        ****     ~ButtonLED() {}
 12069              		.loc 14 78 5 is_stmt 1 view .LVU3419
 12070              	.LBB2241:
 12071              	.LBB2242:
 12072              	.LBI2242:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12073              		.loc 1 40 5 view .LVU3420
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12074              		.loc 1 40 5 is_stmt 0 view .LVU3421
 12075              	.LBE2242:
 12076              	.LBB2243:
 12077              	.LBI2243:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12078              		.loc 16 24 5 is_stmt 1 view .LVU3422
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12079              		.loc 16 24 5 is_stmt 0 view .LVU3423
 12080              	.LBE2243:
 12081              	.LBE2241:
 12082              	.LBE2240:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 366


 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12083              		.loc 20 102 11 view .LVU3424
 12084 00fe 2246     		mov	r2, r4
 12085 0100 2946     		mov	r1, r5
 12086 0102 7648     		ldr	r0, .L639+120
 12087 0104 FFF7FEFF 		bl	__aeabi_atexit
 12088              	.LVL776:
 12089              	.LBB2244:
 12090              	.LBI2244:
  78:LEDs.h        ****     ~ButtonLED() {}
 12091              		.loc 14 78 5 is_stmt 1 view .LVU3425
 12092              	.LBB2245:
 12093              	.LBB2246:
 12094              	.LBI2246:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12095              		.loc 1 40 5 view .LVU3426
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12096              		.loc 1 40 5 is_stmt 0 view .LVU3427
 12097              	.LBE2246:
 12098              	.LBB2247:
 12099              	.LBI2247:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12100              		.loc 16 24 5 is_stmt 1 view .LVU3428
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12101              		.loc 16 24 5 is_stmt 0 view .LVU3429
 12102              	.LBE2247:
 12103              	.LBE2245:
 12104              	.LBE2244:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12105              		.loc 20 102 18 view .LVU3430
 12106 0108 2246     		mov	r2, r4
 12107 010a 2946     		mov	r1, r5
 12108 010c 7448     		ldr	r0, .L639+124
 12109 010e FFF7FEFF 		bl	__aeabi_atexit
 12110              	.LVL777:
 12111              	.LBB2248:
 12112              	.LBI2248:
  78:LEDs.h        ****     ~ButtonLED() {}
 12113              		.loc 14 78 5 is_stmt 1 view .LVU3431
 12114              	.LBB2249:
 12115              	.LBB2250:
 12116              	.LBI2250:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12117              		.loc 1 40 5 view .LVU3432
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12118              		.loc 1 40 5 is_stmt 0 view .LVU3433
 12119              	.LBE2250:
 12120              	.LBB2251:
 12121              	.LBI2251:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12122              		.loc 16 24 5 is_stmt 1 view .LVU3434
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12123              		.loc 16 24 5 is_stmt 0 view .LVU3435
 12124              	.LBE2251:
 12125              	.LBE2249:
 12126              	.LBE2248:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 367


 12127              		.loc 20 102 25 view .LVU3436
 12128 0112 2246     		mov	r2, r4
 12129 0114 2946     		mov	r1, r5
 12130 0116 7348     		ldr	r0, .L639+128
 12131 0118 FFF7FEFF 		bl	__aeabi_atexit
 12132              	.LVL778:
 12133              	.LBB2252:
 12134              	.LBI2252:
  78:LEDs.h        ****     ~ButtonLED() {}
 12135              		.loc 14 78 5 is_stmt 1 view .LVU3437
 12136              	.LBB2253:
 12137              	.LBB2254:
 12138              	.LBI2254:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12139              		.loc 1 40 5 view .LVU3438
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12140              		.loc 1 40 5 is_stmt 0 view .LVU3439
 12141              	.LBE2254:
 12142              	.LBB2255:
 12143              	.LBI2255:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12144              		.loc 16 24 5 is_stmt 1 view .LVU3440
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12145              		.loc 16 24 5 is_stmt 0 view .LVU3441
 12146              	.LBE2255:
 12147              	.LBE2253:
 12148              	.LBE2252:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12149              		.loc 20 102 34 view .LVU3442
 12150 011c 2246     		mov	r2, r4
 12151 011e 2946     		mov	r1, r5
 12152 0120 7148     		ldr	r0, .L639+132
 12153 0122 FFF7FEFF 		bl	__aeabi_atexit
 12154              	.LVL779:
 12155              	.LBB2256:
 12156              	.LBI2256:
  78:LEDs.h        ****     ~ButtonLED() {}
 12157              		.loc 14 78 5 is_stmt 1 view .LVU3443
 12158              	.LBB2257:
 12159              	.LBB2258:
 12160              	.LBI2258:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12161              		.loc 1 40 5 view .LVU3444
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12162              		.loc 1 40 5 is_stmt 0 view .LVU3445
 12163              	.LBE2258:
 12164              	.LBB2259:
 12165              	.LBI2259:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12166              		.loc 16 24 5 is_stmt 1 view .LVU3446
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12167              		.loc 16 24 5 is_stmt 0 view .LVU3447
 12168              	.LBE2259:
 12169              	.LBE2257:
 12170              	.LBE2256:
 147:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 12171              		.loc 20 147 13 view .LVU3448
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 368


 12172 0126 714F     		ldr	r7, .L639+136
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12173              		.loc 20 102 44 view .LVU3449
 12174 0128 2246     		mov	r2, r4
 12175 012a 2946     		mov	r1, r5
 12176 012c 7048     		ldr	r0, .L639+140
 12177 012e FFF7FEFF 		bl	__aeabi_atexit
 12178              	.LVL780:
 12179              	.LBB2260:
 12180              	.LBI2260:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 12181              		.loc 14 47 1 is_stmt 1 view .LVU3450
 12182              	.LBB2261:
 12183              	.LBB2262:
 12184              	.LBI2262:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12185              		.loc 16 24 5 view .LVU3451
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12186              		.loc 16 24 5 is_stmt 0 view .LVU3452
 12187              	.LBE2262:
 12188              	.LBB2263:
 12189              	.LBI2263:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 12190              		.loc 15 15 5 is_stmt 1 view .LVU3453
  15:oscillator_p.h ****     ~Oscillator_p() {}
 12191              		.loc 15 15 5 is_stmt 0 view .LVU3454
 12192              	.LBE2263:
 12193              	.LBE2261:
 12194              	.LBE2260:
 103:Veno-Echo.cpp **** 
 12195              		.loc 20 103 10 view .LVU3455
 12196 0132 2246     		mov	r2, r4
 12197 0134 6F49     		ldr	r1, .L639+144
 12198 0136 7048     		ldr	r0, .L639+148
 12199 0138 FFF7FEFF 		bl	__aeabi_atexit
 12200              	.LVL781:
 12201              	.LBB2264:
 12202              	.LBI2264:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12203              		.loc 7 38 5 is_stmt 1 view .LVU3456
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12204              		.loc 7 38 5 is_stmt 0 view .LVU3457
 12205              	.LBE2264:
 147:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 12206              		.loc 20 147 13 view .LVU3458
 12207 013c 2246     		mov	r2, r4
 12208 013e 3946     		mov	r1, r7
 12209 0140 6E48     		ldr	r0, .L639+152
 12210 0142 FFF7FEFF 		bl	__aeabi_atexit
 12211              	.LVL782:
 12212              	.LBB2265:
 12213              	.LBI2265:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12214              		.loc 7 38 5 is_stmt 1 view .LVU3459
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12215              		.loc 7 38 5 is_stmt 0 view .LVU3460
 12216              	.LBE2265:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 369


 148:Veno-Echo.cpp **** 
 12217              		.loc 20 148 13 view .LVU3461
 12218 0146 2246     		mov	r2, r4
 12219 0148 3946     		mov	r1, r7
 12220 014a 6D48     		ldr	r0, .L639+156
 153:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 12221              		.loc 20 153 18 view .LVU3462
 12222 014c 6D4D     		ldr	r5, .L639+160
 148:Veno-Echo.cpp **** 
 12223              		.loc 20 148 13 view .LVU3463
 12224 014e FFF7FEFF 		bl	__aeabi_atexit
 12225              	.LVL783:
 12226              	.LBB2266:
 12227              	.LBI2266:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12228              		.loc 7 38 5 is_stmt 1 view .LVU3464
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12229              		.loc 7 38 5 is_stmt 0 view .LVU3465
 12230              	.LBE2266:
 150:Veno-Echo.cpp **** static Adsr HPF_Env;
 12231              		.loc 20 150 13 view .LVU3466
 12232 0152 2246     		mov	r2, r4
 12233 0154 3946     		mov	r1, r7
 12234 0156 6C48     		ldr	r0, .L639+164
 12235 0158 FFF7FEFF 		bl	__aeabi_atexit
 12236              	.LVL784:
 12237              	.LBB2267:
 12238              	.LBI2267:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12239              		.loc 7 38 5 is_stmt 1 view .LVU3467
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12240              		.loc 7 38 5 is_stmt 0 view .LVU3468
 12241              	.LBE2267:
 151:Veno-Echo.cpp **** 
 12242              		.loc 20 151 13 view .LVU3469
 12243 015c 2246     		mov	r2, r4
 12244 015e 3946     		mov	r1, r7
 12245 0160 6A48     		ldr	r0, .L639+168
 12246 0162 FFF7FEFF 		bl	__aeabi_atexit
 12247              	.LVL785:
 12248              	.LBB2268:
 12249              	.LBI2268:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12250              		.loc 10 36 5 is_stmt 1 view .LVU3470
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12251              		.loc 10 36 5 is_stmt 0 view .LVU3471
 12252              	.LBE2268:
 153:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 12253              		.loc 20 153 18 view .LVU3472
 12254 0166 2246     		mov	r2, r4
 12255 0168 2946     		mov	r1, r5
 12256 016a 6948     		ldr	r0, .L639+172
 12257 016c FFF7FEFF 		bl	__aeabi_atexit
 12258              	.LVL786:
 12259              	.LBB2269:
 12260              	.LBI2269:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 370


 12261              		.loc 10 36 5 is_stmt 1 view .LVU3473
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12262              		.loc 10 36 5 is_stmt 0 view .LVU3474
 12263              	.LBE2269:
 154:Veno-Echo.cpp **** 
 12264              		.loc 20 154 18 view .LVU3475
 12265 0170 2246     		mov	r2, r4
 12266 0172 2946     		mov	r1, r5
 12267 0174 6748     		ldr	r0, .L639+176
 12268 0176 FFF7FEFF 		bl	__aeabi_atexit
 12269              	.LVL787:
 12270              	.LBB2270:
 12271              	.LBI2270:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12272              		.loc 10 36 5 is_stmt 1 view .LVU3476
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12273              		.loc 10 36 5 is_stmt 0 view .LVU3477
 12274              	.LBE2270:
 156:Veno-Echo.cpp **** 
 12275              		.loc 20 156 18 view .LVU3478
 12276 017a 2246     		mov	r2, r4
 12277 017c 2946     		mov	r1, r5
 12278 017e 6648     		ldr	r0, .L639+180
 12279 0180 FFF7FEFF 		bl	__aeabi_atexit
 12280              	.LVL788:
 12281              	.LBB2271:
 12282              	.LBI2271:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12283              		.loc 10 36 5 is_stmt 1 view .LVU3479
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12284              		.loc 10 36 5 is_stmt 0 view .LVU3480
 12285              	.LBE2271:
 159:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 12286              		.loc 20 159 18 view .LVU3481
 12287 0184 2246     		mov	r2, r4
 12288 0186 2946     		mov	r1, r5
 12289 0188 6448     		ldr	r0, .L639+184
 12290 018a FFF7FEFF 		bl	__aeabi_atexit
 12291              	.LVL789:
 12292              	.LBB2272:
 12293              	.LBI2272:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12294              		.loc 10 36 5 is_stmt 1 view .LVU3482
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12295              		.loc 10 36 5 is_stmt 0 view .LVU3483
 12296              	.LBE2272:
 160:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 12297              		.loc 20 160 18 view .LVU3484
 12298 018e 2246     		mov	r2, r4
 12299 0190 2946     		mov	r1, r5
 12300 0192 6348     		ldr	r0, .L639+188
 12301 0194 FFF7FEFF 		bl	__aeabi_atexit
 12302              	.LVL790:
 12303              	.LBB2273:
 12304              	.LBI2273:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12305              		.loc 10 36 5 is_stmt 1 view .LVU3485
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 371


  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12306              		.loc 10 36 5 is_stmt 0 view .LVU3486
 12307              	.LBE2273:
 161:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 12308              		.loc 20 161 18 view .LVU3487
 12309 0198 2246     		mov	r2, r4
 12310 019a 2946     		mov	r1, r5
 12311 019c 6148     		ldr	r0, .L639+192
 12312 019e FFF7FEFF 		bl	__aeabi_atexit
 12313              	.LVL791:
 12314              	.LBB2274:
 12315              	.LBI2274:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12316              		.loc 10 36 5 is_stmt 1 view .LVU3488
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12317              		.loc 10 36 5 is_stmt 0 view .LVU3489
 12318              	.LBE2274:
 162:Veno-Echo.cpp **** 
 12319              		.loc 20 162 18 view .LVU3490
 12320 01a2 2246     		mov	r2, r4
 12321 01a4 2946     		mov	r1, r5
 12322 01a6 6048     		ldr	r0, .L639+196
 12323 01a8 FFF7FEFF 		bl	__aeabi_atexit
 12324              	.LVL792:
 12325              	.LBB2275:
 12326              	.LBI2275:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12327              		.loc 10 36 5 is_stmt 1 view .LVU3491
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12328              		.loc 10 36 5 is_stmt 0 view .LVU3492
 12329              	.LBE2275:
 165:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 12330              		.loc 20 165 18 view .LVU3493
 12331 01ac 2246     		mov	r2, r4
 12332 01ae 2946     		mov	r1, r5
 12333 01b0 5E48     		ldr	r0, .L639+200
 12334 01b2 FFF7FEFF 		bl	__aeabi_atexit
 12335              	.LVL793:
 12336              	.LBB2276:
 12337              	.LBI2276:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12338              		.loc 10 36 5 is_stmt 1 view .LVU3494
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12339              		.loc 10 36 5 is_stmt 0 view .LVU3495
 12340              	.LBE2276:
 166:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 12341              		.loc 20 166 18 view .LVU3496
 12342 01b6 2246     		mov	r2, r4
 12343 01b8 2946     		mov	r1, r5
 12344 01ba 5D48     		ldr	r0, .L639+204
 12345 01bc FFF7FEFF 		bl	__aeabi_atexit
 12346              	.LVL794:
 12347              	.LBB2277:
 12348              	.LBI2277:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12349              		.loc 10 36 5 is_stmt 1 view .LVU3497
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 372


 12350              		.loc 10 36 5 is_stmt 0 view .LVU3498
 12351              	.LBE2277:
 167:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 12352              		.loc 20 167 18 view .LVU3499
 12353 01c0 2246     		mov	r2, r4
 12354 01c2 2946     		mov	r1, r5
 12355 01c4 5B48     		ldr	r0, .L639+208
 12356 01c6 FFF7FEFF 		bl	__aeabi_atexit
 12357              	.LVL795:
 12358              	.LBB2278:
 12359              	.LBI2278:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12360              		.loc 10 36 5 is_stmt 1 view .LVU3500
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12361              		.loc 10 36 5 is_stmt 0 view .LVU3501
 12362              	.LBE2278:
 168:Veno-Echo.cpp **** 
 12363              		.loc 20 168 18 view .LVU3502
 12364 01ca 2246     		mov	r2, r4
 12365 01cc 2946     		mov	r1, r5
 12366 01ce 5A48     		ldr	r0, .L639+212
 12367 01d0 FFF7FEFF 		bl	__aeabi_atexit
 12368              	.LVL796:
 12369              	.LBB2279:
 12370              	.LBI2279:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12371              		.loc 10 36 5 is_stmt 1 view .LVU3503
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12372              		.loc 10 36 5 is_stmt 0 view .LVU3504
 12373              	.LBE2279:
 171:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 12374              		.loc 20 171 18 view .LVU3505
 12375 01d4 2246     		mov	r2, r4
 12376 01d6 2946     		mov	r1, r5
 12377 01d8 5848     		ldr	r0, .L639+216
 12378 01da FFF7FEFF 		bl	__aeabi_atexit
 12379              	.LVL797:
 12380              	.LBB2280:
 12381              	.LBI2280:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12382              		.loc 10 36 5 is_stmt 1 view .LVU3506
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12383              		.loc 10 36 5 is_stmt 0 view .LVU3507
 12384              	.LBE2280:
 172:Veno-Echo.cpp **** 
 12385              		.loc 20 172 18 view .LVU3508
 12386 01de 2246     		mov	r2, r4
 12387 01e0 2946     		mov	r1, r5
 12388 01e2 5748     		ldr	r0, .L639+220
 12389 01e4 FFF7FEFF 		bl	__aeabi_atexit
 12390              	.LVL798:
 12391              	.LBB2281:
 12392              	.LBI2281:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12393              		.loc 10 36 5 is_stmt 1 view .LVU3509
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12394              		.loc 10 36 5 is_stmt 0 view .LVU3510
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 373


 12395              	.LBE2281:
 178:Veno-Echo.cpp **** Switch ReverseGateR;
 12396              		.loc 20 178 8 view .LVU3511
 12397 01e8 564F     		ldr	r7, .L639+224
 174:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 12398              		.loc 20 174 18 view .LVU3512
 12399 01ea 2246     		mov	r2, r4
 12400 01ec 2946     		mov	r1, r5
 12401 01ee 5648     		ldr	r0, .L639+228
 12402 01f0 FFF7FEFF 		bl	__aeabi_atexit
 12403              	.LVL799:
 12404              	.LBB2282:
 12405              	.LBI2282:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12406              		.loc 10 36 5 is_stmt 1 view .LVU3513
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12407              		.loc 10 36 5 is_stmt 0 view .LVU3514
 12408              	.LBE2282:
 175:Veno-Echo.cpp **** 
 12409              		.loc 20 175 18 view .LVU3515
 12410 01f4 2246     		mov	r2, r4
 12411 01f6 2946     		mov	r1, r5
 12412 01f8 5448     		ldr	r0, .L639+232
 12413 01fa FFF7FEFF 		bl	__aeabi_atexit
 12414              	.LVL800:
 12415              	.LBB2283:
 12416              	.LBI2283:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12417              		.loc 1 40 5 is_stmt 1 view .LVU3516
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12418              		.loc 1 40 5 is_stmt 0 view .LVU3517
 12419              	.LBE2283:
 178:Veno-Echo.cpp **** Switch ReverseGateR;
 12420              		.loc 20 178 8 view .LVU3518
 12421 01fe 2246     		mov	r2, r4
 12422 0200 3946     		mov	r1, r7
 12423 0202 5348     		ldr	r0, .L639+236
 12424 0204 FFF7FEFF 		bl	__aeabi_atexit
 12425              	.LVL801:
 12426              	.LBB2284:
 12427              	.LBI2284:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12428              		.loc 1 40 5 is_stmt 1 view .LVU3519
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12429              		.loc 1 40 5 is_stmt 0 view .LVU3520
 12430              	.LBE2284:
 179:Veno-Echo.cpp **** 
 12431              		.loc 20 179 8 view .LVU3521
 12432 0208 2246     		mov	r2, r4
 12433 020a 3946     		mov	r1, r7
 12434 020c 5148     		ldr	r0, .L639+240
 12435 020e FFF7FEFF 		bl	__aeabi_atexit
 12436              	.LVL802:
 12437              	.LBB2285:
 12438              	.LBI2285:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12439              		.loc 1 40 5 is_stmt 1 view .LVU3522
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 374


  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12440              		.loc 1 40 5 is_stmt 0 view .LVU3523
 12441              	.LBE2285:
 182:Veno-Echo.cpp **** Switch ClockIn;
 12442              		.loc 20 182 8 view .LVU3524
 12443 0212 2246     		mov	r2, r4
 12444 0214 3946     		mov	r1, r7
 12445 0216 5048     		ldr	r0, .L639+244
 12446 0218 FFF7FEFF 		bl	__aeabi_atexit
 12447              	.LVL803:
 12448              	.LBB2286:
 12449              	.LBI2286:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12450              		.loc 1 40 5 is_stmt 1 view .LVU3525
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12451              		.loc 1 40 5 is_stmt 0 view .LVU3526
 12452              	.LBE2286:
 183:Veno-Echo.cpp **** 
 12453              		.loc 20 183 8 view .LVU3527
 12454 021c 2246     		mov	r2, r4
 12455 021e 3946     		mov	r1, r7
 12456 0220 4E48     		ldr	r0, .L639+248
 12457 0222 FFF7FEFF 		bl	__aeabi_atexit
 12458              	.LVL804:
 12459              	.LBB2287:
 12460              	.LBI2287:
  44:taptempo.h    ****     {
 12461              		.loc 13 44 5 is_stmt 1 view .LVU3528
 12462              	.LBB2288:
 12463              	.LBB2289:
  46:taptempo.h    ****         tap_tolerance_ = 1.25f;
 12464              		.loc 13 46 9 view .LVU3529
  54:taptempo.h    ****         clockLength_ = 0;
 12465              		.loc 13 54 19 is_stmt 0 view .LVU3530
 12466 0226 4FF07E55 		mov	r5, #1065353216
  46:taptempo.h    ****         tap_tolerance_ = 1.25f;
 12467              		.loc 13 46 18 view .LVU3531
 12468 022a 4D48     		ldr	r0, .L639+252
  57:taptempo.h    ****     }
 12469              		.loc 13 57 22 view .LVU3532
 12470 022c 42F21073 		movw	r3, #10000
  47:taptempo.h    ****         maxtap_ = 2000000;
 12471              		.loc 13 47 24 view .LVU3533
 12472 0230 4C49     		ldr	r1, .L639+256
 12473              	.LBE2289:
 12474              	.LBE2288:
 12475              	.LBE2287:
 186:Veno-Echo.cpp **** 
 12476              		.loc 20 186 10 view .LVU3534
 12477 0232 2246     		mov	r2, r4
 12478              	.LBB2294:
 12479              	.LBB2292:
 12480              	.LBB2290:
  48:taptempo.h    ****         mintap_ = 80000;
 12481              		.loc 13 48 17 view .LVU3535
 12482 0234 DFF83CE1 		ldr	lr, .L639+272
  51:taptempo.h    ****         lastTime_ = 0;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 375


 12483              		.loc 13 51 16 view .LVU3536
 12484 0238 4B4F     		ldr	r7, .L639+260
  49:taptempo.h    ****         lastTapLength_ = 0;
 12485              		.loc 13 49 17 view .LVU3537
 12486 023a DFF83CC1 		ldr	ip, .L639+276
  46:taptempo.h    ****         tap_tolerance_ = 1.25f;
 12487              		.loc 13 46 18 view .LVU3538
 12488 023e 80F82460 		strb	r6, [r0, #36]
  47:taptempo.h    ****         maxtap_ = 2000000;
 12489              		.loc 13 47 9 is_stmt 1 view .LVU3539
  53:taptempo.h    ****         tapRatio_ = 1.0f;
 12490              		.loc 13 53 22 is_stmt 0 view .LVU3540
 12491 0242 8660     		str	r6, [r0, #8]
  47:taptempo.h    ****         maxtap_ = 2000000;
 12492              		.loc 13 47 24 view .LVU3541
 12493 0244 8162     		str	r1, [r0, #40]	@ float
  48:taptempo.h    ****         mintap_ = 80000;
 12494              		.loc 13 48 9 is_stmt 1 view .LVU3542
  51:taptempo.h    ****         lastTime_ = 0;
 12495              		.loc 13 51 16 is_stmt 0 view .LVU3543
 12496 0246 C762     		str	r7, [r0, #44]	@ float
  54:taptempo.h    ****         clockLength_ = 0;
 12497              		.loc 13 54 19 view .LVU3544
 12498 0248 0563     		str	r5, [r0, #48]	@ float
 12499              	.LBE2290:
 12500              	.LBE2292:
 12501              	.LBE2294:
 186:Veno-Echo.cpp **** 
 12502              		.loc 20 186 10 view .LVU3545
 12503 024a 4849     		ldr	r1, .L639+264
 12504              	.LBB2295:
 12505              	.LBB2293:
 12506              	.LBB2291:
  57:taptempo.h    ****     }
 12507              		.loc 13 57 22 view .LVU3546
 12508 024c 0362     		str	r3, [r0, #32]
  52:taptempo.h    ****         currentTime_ = 0;
 12509              		.loc 13 52 19 view .LVU3547
 12510 024e C0E90366 		strd	r6, r6, [r0, #12]
  56:taptempo.h    ****         clockThresh_ = 10000; //Us change
 12511              		.loc 13 56 26 view .LVU3548
 12512 0252 C0E90666 		strd	r6, r6, [r0, #24]
  49:taptempo.h    ****         lastTapLength_ = 0;
 12513              		.loc 13 49 17 view .LVU3549
 12514 0256 C0E900CE 		strd	ip, lr, [r0]
  50:taptempo.h    ****         tempo_ = 500000.0f;
 12515              		.loc 13 50 9 is_stmt 1 view .LVU3550
  51:taptempo.h    ****         lastTime_ = 0;
 12516              		.loc 13 51 9 view .LVU3551
  52:taptempo.h    ****         currentTime_ = 0;
 12517              		.loc 13 52 9 view .LVU3552
  53:taptempo.h    ****         tapRatio_ = 1.0f;
 12518              		.loc 13 53 9 view .LVU3553
  54:taptempo.h    ****         clockLength_ = 0;
 12519              		.loc 13 54 9 view .LVU3554
  55:taptempo.h    ****         lastClockLength_ = 0;
 12520              		.loc 13 55 9 view .LVU3555
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 376


  56:taptempo.h    ****         clockThresh_ = 10000; //Us change
 12521              		.loc 13 56 9 view .LVU3556
  57:taptempo.h    ****     }
 12522              		.loc 13 57 9 view .LVU3557
 12523              	.LVL805:
  57:taptempo.h    ****     }
 12524              		.loc 13 57 9 is_stmt 0 view .LVU3558
 12525              	.LBE2291:
 12526              	.LBE2293:
 12527              	.LBE2295:
 12528              	.LBE2298:
 12529              	.LBE2302:
 12530              		.loc 20 2010 1 view .LVU3559
 12531 025a BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 12532              		.cfi_restore 14
 12533              		.cfi_restore 8
 12534              		.cfi_restore 7
 12535              		.cfi_restore 6
 12536              		.cfi_restore 5
 12537              		.cfi_restore 4
 12538              		.cfi_def_cfa_offset 0
 12539              	.LBB2303:
 12540              	.LBB2299:
 186:Veno-Echo.cpp **** 
 12541              		.loc 20 186 10 view .LVU3560
 12542 025e FFF7FEBF 		b	__aeabi_atexit
 12543              	.LVL806:
 12544              	.L640:
 12545 0262 00BF     		.align	2
 12546              	.L639:
 12547 0264 00000000 		.word	.LANCHOR4
 12548 0268 00000000 		.word	__dso_handle
 12549 026c 00000000 		.word	_ZN7daisysp3SvfD1Ev
 12550 0270 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 12551 0274 00000000 		.word	.LANCHOR46
 12552 0278 00000000 		.word	.LANCHOR47
 12553 027c 00000000 		.word	.LANCHOR34
 12554 0280 00000000 		.word	.LANCHOR35
 12555 0284 00000000 		.word	.LANCHOR48
 12556 0288 00000000 		.word	.LANCHOR49
 12557 028c 00000000 		.word	.LANCHOR36
 12558 0290 00000000 		.word	.LANCHOR37
 12559 0294 00000000 		.word	_ZN7daisysp10OscillatorD1Ev
 12560 0298 00000000 		.word	.LANCHOR75
 12561 029c 17B7D138 		.word	953267991
 12562 02a0 00000000 		.word	.LANCHOR129
 12563 02a4 00000000 		.word	_ZN7daisysp9EnvFollowD1Ev
 12564 02a8 00000000 		.word	.LANCHOR130
 12565 02ac 00000000 		.word	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 12566 02b0 00000000 		.word	.LANCHOR106
 12567 02b4 00000000 		.word	.LANCHOR107
 12568 02b8 00000000 		.word	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 12569 02bc 00000000 		.word	delMemsL
 12570 02c0 00000000 		.word	delMemsR
 12571 02c4 00000000 		.word	_ZN10DelayMultiD1Ev
 12572 02c8 00000000 		.word	delMemsL_REV
 12573 02cc 00000000 		.word	delMemsR_REV
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 377


 12574 02d0 00000000 		.word	_ZN9ButtonLEDD1Ev
 12575 02d4 00000000 		.word	.LANCHOR0
 12576 02d8 00000000 		.word	.LANCHOR1
 12577 02dc 00000000 		.word	.LANCHOR92
 12578 02e0 00000000 		.word	.LANCHOR93
 12579 02e4 00000000 		.word	.LANCHOR94
 12580 02e8 00000000 		.word	.LANCHOR95
 12581 02ec 00000000 		.word	_ZN7daisysp4AdsrD1Ev
 12582 02f0 00000000 		.word	.LANCHOR96
 12583 02f4 00000000 		.word	_ZN8TempoLEDD1Ev
 12584 02f8 00000000 		.word	.LANCHOR88
 12585 02fc 00000000 		.word	.LANCHOR100
 12586 0300 00000000 		.word	.LANCHOR101
 12587 0304 00000000 		.word	_ZN7daisysp9CrossFadeD1Ev
 12588 0308 00000000 		.word	.LANCHOR102
 12589 030c 00000000 		.word	.LANCHOR103
 12590 0310 00000000 		.word	.LANCHOR104
 12591 0314 00000000 		.word	.LANCHOR105
 12592 0318 00000000 		.word	.LANCHOR64
 12593 031c 00000000 		.word	.LANCHOR117
 12594 0320 00000000 		.word	.LANCHOR118
 12595 0324 00000000 		.word	.LANCHOR115
 12596 0328 00000000 		.word	.LANCHOR116
 12597 032c 00000000 		.word	.LANCHOR121
 12598 0330 00000000 		.word	.LANCHOR122
 12599 0334 00000000 		.word	.LANCHOR119
 12600 0338 00000000 		.word	.LANCHOR120
 12601 033c 00000000 		.word	.LANCHOR123
 12602 0340 00000000 		.word	.LANCHOR124
 12603 0344 00000000 		.word	_ZN5daisy6SwitchD1Ev
 12604 0348 00000000 		.word	.LANCHOR125
 12605 034c 00000000 		.word	.LANCHOR126
 12606 0350 00000000 		.word	.LANCHOR97
 12607 0354 00000000 		.word	.LANCHOR98
 12608 0358 00000000 		.word	.LANCHOR99
 12609 035c 00000000 		.word	.LANCHOR87
 12610 0360 00000000 		.word	.LANCHOR25
 12611 0364 0000A03F 		.word	1067450368
 12612 0368 0024F448 		.word	1223959552
 12613 036c 00000000 		.word	_ZN8TaptempoD1Ev
 12614 0370 00000000 		.word	_ZN7daisysp7DcBlockD1Ev
 12615 0374 80841E00 		.word	2000000
 12616 0378 80380100 		.word	80000
 12617              	.LBE2299:
 12618              	.LBE2303:
 12619              		.cfi_endproc
 12620              	.LFE4919:
 12622              		.section	.init_array,"aw",%init_array
 12623              		.align	2
 12624 0000 00000000 		.word	_GLOBAL__sub_I_delMemsL(target1)
 12625              		.global	AltControls
 12626              		.global	BaseTempo
 12627              		.global	ClockIn
 12628              		.global	Sync
 12629              		.global	ReverseGateR
 12630              		.global	ReverseGateL
 12631              		.global	DELAYR_DEBUG
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 378


 12632              		.global	DELAYL_DEBUG
 12633              		.global	save_flag
 12634              		.global	PostFilters
 12635              		.global	ClockInFlag
 12636              		.global	mute
 12637              		.global	shift
 12638              		.global	syncMode
 12639              		.global	modulation_CV_Raw
 12640              		.global	ModDepth
 12641              		.global	div_R
 12642              		.global	div_L
 12643              		.global	filterXfade
 12644              		.global	width_CV
 12645              		.global	width
 12646              		.global	drywet_CV
 12647              		.global	drywet
 12648              		.global	crossfeedback_CV
 12649              		.global	crossfeedback
 12650              		.global	feedbackR_CV
 12651              		.global	feedbackR
 12652              		.global	feedbackL_CV
 12653              		.global	feedbackL
 12654              		.global	delayTimeR_CV
 12655              		.global	delayTimeL_CV
 12656              		.global	tempoLED_BASE
 12657              		.global	Tap_Button
 12658              		.global	Rev_R_sw
 12659              		.global	Rev_L_sw
 12660              		.global	HPF_sw
 12661              		.global	LPF_sw
 12662              		.global	delaysR_REV
 12663              		.global	delaysL_REV
 12664              		.global	delayR
 12665              		.global	delayL
 12666              		.global	delMemsR_REV
 12667              		.global	delMemsL_REV
 12668              		.global	delMemsR
 12669              		.global	delMemsL
 12670              		.section	.bss.AltControls,"aw",%nobits
 12671              		.align	2
 12672              		.set	.LANCHOR15,. + 0
 12675              	AltControls:
 12676 0000 00000000 		.space	32
 12676      00000000 
 12676      00000000 
 12676      00000000 
 12676      00000000 
 12677              		.section	.bss.BaseTempo,"aw",%nobits
 12678              		.align	2
 12679              		.set	.LANCHOR25,. + 0
 12682              	BaseTempo:
 12683 0000 00000000 		.space	52
 12683      00000000 
 12683      00000000 
 12683      00000000 
 12683      00000000 
 12684              		.section	.bss.ClockIn,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 379


 12685              		.align	2
 12686              		.set	.LANCHOR87,. + 0
 12689              	ClockIn:
 12690 0000 00000000 		.space	16
 12690      00000000 
 12690      00000000 
 12690      00000000 
 12691              		.section	.bss.ClockInFlag,"aw",%nobits
 12694              	ClockInFlag:
 12695 0000 00       		.space	1
 12696              		.section	.bss.DELAYL_DEBUG,"aw",%nobits
 12697              		.align	2
 12698              		.set	.LANCHOR89,. + 0
 12701              	DELAYL_DEBUG:
 12702 0000 00000000 		.space	4
 12703              		.section	.bss.DELAYR_DEBUG,"aw",%nobits
 12704              		.align	2
 12705              		.set	.LANCHOR90,. + 0
 12708              	DELAYR_DEBUG:
 12709 0000 00000000 		.space	4
 12710              		.section	.bss.HPF_sw,"aw",%nobits
 12711              		.align	2
 12712              		.set	.LANCHOR93,. + 0
 12715              	HPF_sw:
 12716 0000 00000000 		.space	52
 12716      00000000 
 12716      00000000 
 12716      00000000 
 12716      00000000 
 12717              		.section	.bss.LPF_sw,"aw",%nobits
 12718              		.align	2
 12719              		.set	.LANCHOR92,. + 0
 12722              	LPF_sw:
 12723 0000 00000000 		.space	52
 12723      00000000 
 12723      00000000 
 12723      00000000 
 12723      00000000 
 12724              		.section	.bss.ModDepth,"aw",%nobits
 12725              		.align	2
 12726              		.set	.LANCHOR67,. + 0
 12729              	ModDepth:
 12730 0000 00000000 		.space	4
 12731              		.section	.bss.PostFilters,"aw",%nobits
 12732              		.set	.LANCHOR82,. + 0
 12735              	PostFilters:
 12736 0000 00       		.space	1
 12737              		.section	.bss.Rev_L_sw,"aw",%nobits
 12738              		.align	2
 12739              		.set	.LANCHOR94,. + 0
 12742              	Rev_L_sw:
 12743 0000 00000000 		.space	52
 12743      00000000 
 12743      00000000 
 12743      00000000 
 12743      00000000 
 12744              		.section	.bss.Rev_R_sw,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 380


 12745              		.align	2
 12746              		.set	.LANCHOR95,. + 0
 12749              	Rev_R_sw:
 12750 0000 00000000 		.space	52
 12750      00000000 
 12750      00000000 
 12750      00000000 
 12750      00000000 
 12751              		.section	.bss.ReverseGateL,"aw",%nobits
 12752              		.align	2
 12753              		.set	.LANCHOR97,. + 0
 12756              	ReverseGateL:
 12757 0000 00000000 		.space	16
 12757      00000000 
 12757      00000000 
 12757      00000000 
 12758              		.section	.bss.ReverseGateR,"aw",%nobits
 12759              		.align	2
 12760              		.set	.LANCHOR98,. + 0
 12763              	ReverseGateR:
 12764 0000 00000000 		.space	16
 12764      00000000 
 12764      00000000 
 12764      00000000 
 12765              		.section	.bss.Sync,"aw",%nobits
 12766              		.align	2
 12767              		.set	.LANCHOR99,. + 0
 12770              	Sync:
 12771 0000 00000000 		.space	16
 12771      00000000 
 12771      00000000 
 12771      00000000 
 12772              		.section	.bss.Tap_Button,"aw",%nobits
 12773              		.align	2
 12774              		.set	.LANCHOR96,. + 0
 12777              	Tap_Button:
 12778 0000 00000000 		.space	52
 12778      00000000 
 12778      00000000 
 12778      00000000 
 12778      00000000 
 12779              		.section	.bss._ZL10FwdRevLEnv,"aw",%nobits
 12780              		.align	2
 12781              		.set	.LANCHOR100,. + 0
 12784              	_ZL10FwdRevLEnv:
 12785 0000 00000000 		.space	56
 12785      00000000 
 12785      00000000 
 12785      00000000 
 12785      00000000 
 12786              		.section	.bss._ZL10FwdRevREnv,"aw",%nobits
 12787              		.align	2
 12788              		.set	.LANCHOR101,. + 0
 12791              	_ZL10FwdRevREnv:
 12792 0000 00000000 		.space	56
 12792      00000000 
 12792      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 381


 12792      00000000 
 12792      00000000 
 12793              		.section	.bss._ZL10HPF_LXfade,"aw",%nobits
 12794              		.align	2
 12795              		.set	.LANCHOR115,. + 0
 12798              	_ZL10HPF_LXfade:
 12799 0000 00000000 		.space	8
 12799      00000000 
 12800              		.section	.bss._ZL10HPF_L_post,"aw",%nobits
 12801              		.align	2
 12802              		.set	.LANCHOR36,. + 0
 12805              	_ZL10HPF_L_post:
 12806 0000 00000000 		.space	76
 12806      00000000 
 12806      00000000 
 12806      00000000 
 12806      00000000 
 12807              		.section	.bss._ZL10HPF_RXfade,"aw",%nobits
 12808              		.align	2
 12809              		.set	.LANCHOR116,. + 0
 12812              	_ZL10HPF_RXfade:
 12813 0000 00000000 		.space	8
 12813      00000000 
 12814              		.section	.bss._ZL10HPF_R_post,"aw",%nobits
 12815              		.align	2
 12816              		.set	.LANCHOR37,. + 0
 12819              	_ZL10HPF_R_post:
 12820 0000 00000000 		.space	76
 12820      00000000 
 12820      00000000 
 12820      00000000 
 12820      00000000 
 12821              		.section	.bss._ZL10LPF_LXfade,"aw",%nobits
 12822              		.align	2
 12823              		.set	.LANCHOR117,. + 0
 12826              	_ZL10LPF_LXfade:
 12827 0000 00000000 		.space	8
 12827      00000000 
 12828              		.section	.bss._ZL10LPF_L_post,"aw",%nobits
 12829              		.align	2
 12830              		.set	.LANCHOR48,. + 0
 12833              	_ZL10LPF_L_post:
 12834 0000 00000000 		.space	76
 12834      00000000 
 12834      00000000 
 12834      00000000 
 12834      00000000 
 12835              		.section	.bss._ZL10LPF_RXfade,"aw",%nobits
 12836              		.align	2
 12837              		.set	.LANCHOR118,. + 0
 12840              	_ZL10LPF_RXfade:
 12841 0000 00000000 		.space	8
 12841      00000000 
 12842              		.section	.bss._ZL10LPF_R_post,"aw",%nobits
 12843              		.align	2
 12844              		.set	.LANCHOR49,. + 0
 12847              	_ZL10LPF_R_post:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 382


 12848 0000 00000000 		.space	76
 12848      00000000 
 12848      00000000 
 12848      00000000 
 12848      00000000 
 12849              		.section	.bss._ZL10WidthXfade,"aw",%nobits
 12850              		.align	2
 12851              		.set	.LANCHOR64,. + 0
 12854              	_ZL10WidthXfade:
 12855 0000 00000000 		.space	8
 12855      00000000 
 12856              		.section	.bss._ZL11DcBlock_LFB,"aw",%nobits
 12857              		.align	2
 12858              		.set	.LANCHOR106,. + 0
 12861              	_ZL11DcBlock_LFB:
 12862 0000 00000000 		.space	12
 12862      00000000 
 12862      00000000 
 12863              		.section	.bss._ZL11DcBlock_RFB,"aw",%nobits
 12864              		.align	2
 12865              		.set	.LANCHOR107,. + 0
 12868              	_ZL11DcBlock_RFB:
 12869 0000 00000000 		.space	12
 12869      00000000 
 12869      00000000 
 12870              		.section	.bss._ZL11FilterMix_L,"aw",%nobits
 12871              		.align	2
 12872              		.set	.LANCHOR123,. + 0
 12875              	_ZL11FilterMix_L:
 12876 0000 00000000 		.space	8
 12876      00000000 
 12877              		.section	.bss._ZL11FilterMix_R,"aw",%nobits
 12878              		.align	2
 12879              		.set	.LANCHOR124,. + 0
 12882              	_ZL11FilterMix_R:
 12883 0000 00000000 		.space	8
 12883      00000000 
 12884              		.section	.bss._ZL12FwdRevLXfade,"aw",%nobits
 12885              		.align	2
 12886              		.set	.LANCHOR104,. + 0
 12889              	_ZL12FwdRevLXfade:
 12890 0000 00000000 		.space	8
 12890      00000000 
 12891              		.section	.bss._ZL12FwdRevRXfade,"aw",%nobits
 12892              		.align	2
 12893              		.set	.LANCHOR105,. + 0
 12896              	_ZL12FwdRevRXfade:
 12897 0000 00000000 		.space	8
 12897      00000000 
 12898              		.section	.bss._ZL15HPF_LXfade_post,"aw",%nobits
 12899              		.align	2
 12900              		.set	.LANCHOR119,. + 0
 12903              	_ZL15HPF_LXfade_post:
 12904 0000 00000000 		.space	8
 12904      00000000 
 12905              		.section	.bss._ZL15HPF_RXfade_post,"aw",%nobits
 12906              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 383


 12907              		.set	.LANCHOR120,. + 0
 12910              	_ZL15HPF_RXfade_post:
 12911 0000 00000000 		.space	8
 12911      00000000 
 12912              		.section	.bss._ZL15LPF_LXfade_post,"aw",%nobits
 12913              		.align	2
 12914              		.set	.LANCHOR121,. + 0
 12917              	_ZL15LPF_LXfade_post:
 12918 0000 00000000 		.space	8
 12918      00000000 
 12919              		.section	.bss._ZL15LPF_RXfade_post,"aw",%nobits
 12920              		.align	2
 12921              		.set	.LANCHOR122,. + 0
 12924              	_ZL15LPF_RXfade_post:
 12925 0000 00000000 		.space	8
 12925      00000000 
 12926              		.section	.bss._ZL16FilterMix_L_post,"aw",%nobits
 12927              		.align	2
 12928              		.set	.LANCHOR125,. + 0
 12931              	_ZL16FilterMix_L_post:
 12932 0000 00000000 		.space	8
 12932      00000000 
 12933              		.section	.bss._ZL16FilterMix_R_post,"aw",%nobits
 12934              		.align	2
 12935              		.set	.LANCHOR126,. + 0
 12938              	_ZL16FilterMix_R_post:
 12939 0000 00000000 		.space	8
 12939      00000000 
 12940              		.section	.bss._ZL2hw,"aw",%nobits
 12941              		.align	2
 12942              		.set	.LANCHOR4,. + 0
 12945              	_ZL2hw:
 12946 0000 00000000 		.space	60
 12946      00000000 
 12946      00000000 
 12946      00000000 
 12946      00000000 
 12947              		.section	.bss._ZL3lfo,"aw",%nobits
 12948              		.align	2
 12949              		.set	.LANCHOR75,. + 0
 12952              	_ZL3lfo:
 12953 0000 00000000 		.space	40
 12953      00000000 
 12953      00000000 
 12953      00000000 
 12953      00000000 
 12954              		.section	.bss._ZL5HPF_L,"aw",%nobits
 12955              		.align	2
 12956              		.set	.LANCHOR34,. + 0
 12959              	_ZL5HPF_L:
 12960 0000 00000000 		.space	76
 12960      00000000 
 12960      00000000 
 12960      00000000 
 12960      00000000 
 12961              		.section	.bss._ZL5HPF_R,"aw",%nobits
 12962              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 384


 12963              		.set	.LANCHOR35,. + 0
 12966              	_ZL5HPF_R:
 12967 0000 00000000 		.space	76
 12967      00000000 
 12967      00000000 
 12967      00000000 
 12967      00000000 
 12968              		.section	.bss._ZL5LPF_L,"aw",%nobits
 12969              		.align	2
 12970              		.set	.LANCHOR46,. + 0
 12973              	_ZL5LPF_L:
 12974 0000 00000000 		.space	76
 12974      00000000 
 12974      00000000 
 12974      00000000 
 12974      00000000 
 12975              		.section	.bss._ZL5LPF_R,"aw",%nobits
 12976              		.align	2
 12977              		.set	.LANCHOR47,. + 0
 12980              	_ZL5LPF_R:
 12981 0000 00000000 		.space	76
 12981      00000000 
 12981      00000000 
 12981      00000000 
 12981      00000000 
 12982              		.section	.bss._ZL7HPF_Env,"aw",%nobits
 12983              		.align	2
 12984              		.set	.LANCHOR103,. + 0
 12987              	_ZL7HPF_Env:
 12988 0000 00000000 		.space	56
 12988      00000000 
 12988      00000000 
 12988      00000000 
 12988      00000000 
 12989              		.section	.bss._ZL7LPF_Env,"aw",%nobits
 12990              		.align	2
 12991              		.set	.LANCHOR102,. + 0
 12994              	_ZL7LPF_Env:
 12995 0000 00000000 		.space	56
 12995      00000000 
 12995      00000000 
 12995      00000000 
 12995      00000000 
 12996              		.section	.bss._ZL7LeftEnv,"aw",%nobits
 12997              		.align	2
 12998              		.set	.LANCHOR129,. + 0
 13001              	_ZL7LeftEnv:
 13002 0000 00000000 		.space	24
 13002      00000000 
 13002      00000000 
 13002      00000000 
 13002      00000000 
 13003              		.section	.bss._ZL8RightEnv,"aw",%nobits
 13004              		.align	2
 13005              		.set	.LANCHOR130,. + 0
 13008              	_ZL8RightEnv:
 13009 0000 00000000 		.space	24
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 385


 13009      00000000 
 13009      00000000 
 13009      00000000 
 13009      00000000 
 13010              		.section	.bss._ZZ10Update_ModvE13modulation_CV,"aw",%nobits
 13011              		.align	2
 13012              		.set	.LANCHOR85,. + 0
 13015              	_ZZ10Update_ModvE13modulation_CV:
 13016 0000 00000000 		.space	4
 13017              		.section	.bss._ZZ10Update_ModvE17ModDepth_Filtered,"aw",%nobits
 13018              		.align	2
 13019              		.set	.LANCHOR86,. + 0
 13022              	_ZZ10Update_ModvE17ModDepth_Filtered:
 13023 0000 00000000 		.space	4
 13024              		.section	.bss._ZZ12Update_widthvE10width_Last,"aw",%nobits
 13025              		.align	2
 13026              		.set	.LANCHOR62,. + 0
 13029              	_ZZ12Update_widthvE10width_Last:
 13030 0000 00000000 		.space	4
 13031              		.section	.bss._ZZ12Update_widthvE12ModDepth_new,"aw",%nobits
 13032              		.align	2
 13033              		.set	.LANCHOR66,. + 0
 13036              	_ZZ12Update_widthvE12ModDepth_new:
 13037 0000 00000000 		.space	4
 13038              		.section	.bss._ZZ12Update_widthvE12width_pickup,"aw",%nobits
 13039              		.set	.LANCHOR60,. + 0
 13042              	_ZZ12Update_widthvE12width_pickup:
 13043 0000 00       		.space	1
 13044              		.section	.bss._ZZ12Update_widthvE15ModDepth_pickup,"aw",%nobits
 13045              		.set	.LANCHOR65,. + 0
 13048              	_ZZ12Update_widthvE15ModDepth_pickup:
 13049 0000 00       		.space	1
 13050              		.section	.bss._ZZ12Update_widthvE9lastShift,"aw",%nobits
 13051              		.set	.LANCHOR59,. + 0
 13054              	_ZZ12Update_widthvE9lastShift:
 13055 0000 00       		.space	1
 13056              		.section	.bss._ZZ12Update_widthvE9width_new,"aw",%nobits
 13057              		.align	2
 13058              		.set	.LANCHOR61,. + 0
 13061              	_ZZ12Update_widthvE9width_new:
 13062 0000 00000000 		.space	4
 13063              		.section	.bss._ZZ13Update_drywetvE10Res_pickup,"aw",%nobits
 13064              		.set	.LANCHOR56,. + 0
 13067              	_ZZ13Update_drywetvE10Res_pickup:
 13068 0000 00       		.space	1
 13069              		.section	.bss._ZZ13Update_drywetvE10drywet_new,"aw",%nobits
 13070              		.align	2
 13071              		.set	.LANCHOR53,. + 0
 13074              	_ZZ13Update_drywetvE10drywet_new:
 13075 0000 00000000 		.space	4
 13076              		.section	.bss._ZZ13Update_drywetvE11drywet_Last,"aw",%nobits
 13077              		.align	2
 13078              		.set	.LANCHOR54,. + 0
 13081              	_ZZ13Update_drywetvE11drywet_Last:
 13082 0000 00000000 		.space	4
 13083              		.section	.bss._ZZ13Update_drywetvE13drywet_pickup,"aw",%nobits
 13084              		.set	.LANCHOR52,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 386


 13087              	_ZZ13Update_drywetvE13drywet_pickup:
 13088 0000 00       		.space	1
 13089              		.section	.bss._ZZ13Update_drywetvE7Res_new,"aw",%nobits
 13090              		.align	2
 13091              		.set	.LANCHOR57,. + 0
 13094              	_ZZ13Update_drywetvE7Res_new:
 13095 0000 00000000 		.space	4
 13096              		.section	.bss._ZZ13Update_drywetvE9lastShift,"aw",%nobits
 13097              		.set	.LANCHOR51,. + 0
 13100              	_ZZ13Update_drywetvE9lastShift:
 13101 0000 00       		.space	1
 13102              		.section	.bss._ZZ14Update_ButtonsvE11buttonstate,"aw",%nobits
 13103              		.align	2
 13104              		.set	.LANCHOR109,. + 0
 13107              	_ZZ14Update_ButtonsvE11buttonstate:
 13108 0000 00000000 		.space	4
 13109              		.section	.bss._ZZ14Update_ButtonsvE9resetTime,"aw",%nobits
 13110              		.align	2
 13111              		.set	.LANCHOR110,. + 0
 13114              	_ZZ14Update_ButtonsvE9resetTime:
 13115 0000 00000000 		.space	4
 13116              		.section	.bss._ZZ14Update_ButtonsvE9shiftTime,"aw",%nobits
 13117              		.align	2
 13118              		.set	.LANCHOR111,. + 0
 13121              	_ZZ14Update_ButtonsvE9shiftTime:
 13122 0000 00000000 		.space	4
 13123              		.section	.bss._ZZ16Update_feedbackLvE12HPCutoff_new,"aw",%nobits
 13124              		.align	2
 13125              		.set	.LANCHOR33,. + 0
 13128              	_ZZ16Update_feedbackLvE12HPCutoff_new:
 13129 0000 00000000 		.space	4
 13130              		.section	.bss._ZZ16Update_feedbackLvE13feedbackL_new,"aw",%nobits
 13131              		.align	2
 13132              		.set	.LANCHOR29,. + 0
 13135              	_ZZ16Update_feedbackLvE13feedbackL_new:
 13136 0000 00000000 		.space	4
 13137              		.section	.bss._ZZ16Update_feedbackLvE14feedbackL_Last,"aw",%nobits
 13138              		.align	2
 13139              		.set	.LANCHOR30,. + 0
 13142              	_ZZ16Update_feedbackLvE14feedbackL_Last:
 13143 0000 00000000 		.space	4
 13144              		.section	.bss._ZZ16Update_feedbackLvE15HPCutoff_pickup,"aw",%nobits
 13145              		.set	.LANCHOR32,. + 0
 13148              	_ZZ16Update_feedbackLvE15HPCutoff_pickup:
 13149 0000 00       		.space	1
 13150              		.section	.bss._ZZ16Update_feedbackLvE16feedbackL_pickup,"aw",%nobits
 13151              		.set	.LANCHOR28,. + 0
 13154              	_ZZ16Update_feedbackLvE16feedbackL_pickup:
 13155 0000 00       		.space	1
 13156              		.section	.bss._ZZ16Update_feedbackLvE9lastShift,"aw",%nobits
 13157              		.set	.LANCHOR27,. + 0
 13160              	_ZZ16Update_feedbackLvE9lastShift:
 13161 0000 00       		.space	1
 13162              		.section	.bss._ZZ16Update_feedbackRvE12LPCutoff_new,"aw",%nobits
 13163              		.align	2
 13164              		.set	.LANCHOR45,. + 0
 13167              	_ZZ16Update_feedbackRvE12LPCutoff_new:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 387


 13168 0000 00000000 		.space	4
 13169              		.section	.bss._ZZ16Update_feedbackRvE13feedbackR_new,"aw",%nobits
 13170              		.align	2
 13171              		.set	.LANCHOR42,. + 0
 13174              	_ZZ16Update_feedbackRvE13feedbackR_new:
 13175 0000 00000000 		.space	4
 13176              		.section	.bss._ZZ16Update_feedbackRvE14feedbackR_Last,"aw",%nobits
 13177              		.align	2
 13178              		.set	.LANCHOR41,. + 0
 13181              	_ZZ16Update_feedbackRvE14feedbackR_Last:
 13182 0000 00000000 		.space	4
 13183              		.section	.bss._ZZ16Update_feedbackRvE15LPCutoff_pickup,"aw",%nobits
 13184              		.set	.LANCHOR44,. + 0
 13187              	_ZZ16Update_feedbackRvE15LPCutoff_pickup:
 13188 0000 00       		.space	1
 13189              		.section	.bss._ZZ16Update_feedbackRvE16feedbackR_pickup,"aw",%nobits
 13190              		.set	.LANCHOR40,. + 0
 13193              	_ZZ16Update_feedbackRvE16feedbackR_pickup:
 13194 0000 00       		.space	1
 13195              		.section	.bss._ZZ16Update_feedbackRvE9lastShift,"aw",%nobits
 13196              		.set	.LANCHOR39,. + 0
 13199              	_ZZ16Update_feedbackRvE9lastShift:
 13200 0000 00       		.space	1
 13201              		.section	.bss._ZZ17Update_DelayTimeLvE14delayTimeL_new,"aw",%nobits
 13202              		.align	2
 13203              		.set	.LANCHOR10,. + 0
 13206              	_ZZ17Update_DelayTimeLvE14delayTimeL_new:
 13207 0000 00000000 		.space	4
 13208              		.section	.bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last,"aw",%nobits
 13209              		.align	2
 13210              		.set	.LANCHOR11,. + 0
 13213              	_ZZ17Update_DelayTimeLvE15delayTimeL_Last:
 13214 0000 00000000 		.space	4
 13215              		.section	.bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new,"aw",%nobits
 13216              		.align	2
 13217              		.set	.LANCHOR14,. + 0
 13220              	_ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:
 13221 0000 00000000 		.space	4
 13222              		.section	.bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup,"aw",%nobits
 13223              		.set	.LANCHOR9,. + 0
 13226              	_ZZ17Update_DelayTimeLvE17delayTimeL_pickup:
 13227 0000 00       		.space	1
 13228              		.section	.bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup,"aw",%nobits
 13229              		.set	.LANCHOR13,. + 0
 13232              	_ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:
 13233 0000 00       		.space	1
 13234              		.section	.bss._ZZ17Update_DelayTimeLvE8counterL,"aw",%nobits
 13235              		.align	2
 13236              		.set	.LANCHOR6,. + 0
 13239              	_ZZ17Update_DelayTimeLvE8counterL:
 13240 0000 00000000 		.space	4
 13241              		.section	.bss._ZZ17Update_DelayTimeLvE9lastShift,"aw",%nobits
 13242              		.set	.LANCHOR8,. + 0
 13245              	_ZZ17Update_DelayTimeLvE9lastShift:
 13246 0000 00       		.space	1
 13247              		.section	.bss._ZZ17Update_DelayTimeRvE12tapRatio_new,"aw",%nobits
 13248              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 388


 13249              		.set	.LANCHOR23,. + 0
 13252              	_ZZ17Update_DelayTimeRvE12tapRatio_new:
 13253 0000 00000000 		.space	4
 13254              		.section	.bss._ZZ17Update_DelayTimeRvE14delayTimeR_new,"aw",%nobits
 13255              		.align	2
 13256              		.set	.LANCHOR20,. + 0
 13259              	_ZZ17Update_DelayTimeRvE14delayTimeR_new:
 13260 0000 00000000 		.space	4
 13261              		.section	.bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last,"aw",%nobits
 13262              		.align	2
 13263              		.set	.LANCHOR21,. + 0
 13266              	_ZZ17Update_DelayTimeRvE15delayTimeR_Last:
 13267 0000 00000000 		.space	4
 13268              		.section	.bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup,"aw",%nobits
 13269              		.set	.LANCHOR22,. + 0
 13272              	_ZZ17Update_DelayTimeRvE15tapRatio_pickup:
 13273 0000 00       		.space	1
 13274              		.section	.bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup,"aw",%nobits
 13275              		.set	.LANCHOR19,. + 0
 13278              	_ZZ17Update_DelayTimeRvE17delayTimeR_pickup:
 13279 0000 00       		.space	1
 13280              		.section	.bss._ZZ17Update_DelayTimeRvE8counterR,"aw",%nobits
 13281              		.align	2
 13282              		.set	.LANCHOR17,. + 0
 13285              	_ZZ17Update_DelayTimeRvE8counterR:
 13286 0000 00000000 		.space	4
 13287              		.section	.bss._ZZ17Update_DelayTimeRvE9lastShift,"aw",%nobits
 13288              		.set	.LANCHOR18,. + 0
 13291              	_ZZ17Update_DelayTimeRvE9lastShift:
 13292 0000 00       		.space	1
 13293              		.section	.bss._ZZ18Update_filterXfadevE15PostFilters_new,"aw",%nobits
 13294              		.align	2
 13295              		.set	.LANCHOR81,. + 0
 13298              	_ZZ18Update_filterXfadevE15PostFilters_new:
 13299 0000 00000000 		.space	4
 13300              		.section	.bss._ZZ18Update_filterXfadevE15filterXfade_new,"aw",%nobits
 13301              		.align	2
 13302              		.set	.LANCHOR78,. + 0
 13305              	_ZZ18Update_filterXfadevE15filterXfade_new:
 13306 0000 00000000 		.space	4
 13307              		.section	.bss._ZZ18Update_filterXfadevE16filterXfade_last,"aw",%nobits
 13308              		.align	2
 13309              		.set	.LANCHOR83,. + 0
 13312              	_ZZ18Update_filterXfadevE16filterXfade_last:
 13313 0000 00000000 		.space	4
 13314              		.section	.bss._ZZ18Update_filterXfadevE18PostFilters_pickup,"aw",%nobits
 13315              		.set	.LANCHOR80,. + 0
 13318              	_ZZ18Update_filterXfadevE18PostFilters_pickup:
 13319 0000 00       		.space	1
 13320              		.section	.bss._ZZ18Update_filterXfadevE18filterXfade_pickup,"aw",%nobits
 13321              		.set	.LANCHOR77,. + 0
 13324              	_ZZ18Update_filterXfadevE18filterXfade_pickup:
 13325 0000 00       		.space	1
 13326              		.section	.bss._ZZ18Update_filterXfadevE9lastShift,"aw",%nobits
 13327              		.set	.LANCHOR76,. + 0
 13330              	_ZZ18Update_filterXfadevE9lastShift:
 13331 0000 00       		.space	1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 389


 13332              		.section	.bss._ZZ19Update_BaseTempoLEDvE12phaseCounter,"aw",%nobits
 13333              		.align	2
 13334              		.set	.LANCHOR91,. + 0
 13337              	_ZZ19Update_BaseTempoLEDvE12phaseCounter:
 13338 0000 00000000 		.space	4
 13339              		.section	.bss._ZZ20Update_crossfeedbackvE11modRate_new,"aw",%nobits
 13340              		.align	2
 13341              		.set	.LANCHOR73,. + 0
 13344              	_ZZ20Update_crossfeedbackvE11modRate_new:
 13345 0000 00000000 		.space	4
 13346              		.section	.bss._ZZ20Update_crossfeedbackvE14modRate_pickup,"aw",%nobits
 13347              		.set	.LANCHOR72,. + 0
 13350              	_ZZ20Update_crossfeedbackvE14modRate_pickup:
 13351 0000 00       		.space	1
 13352              		.section	.bss._ZZ20Update_crossfeedbackvE17crossfeedback_new,"aw",%nobits
 13353              		.align	2
 13354              		.set	.LANCHOR70,. + 0
 13357              	_ZZ20Update_crossfeedbackvE17crossfeedback_new:
 13358 0000 00000000 		.space	4
 13359              		.section	.bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last,"aw",%nobits
 13360              		.align	2
 13361              		.set	.LANCHOR74,. + 0
 13364              	_ZZ20Update_crossfeedbackvE18crossfeedback_Last:
 13365 0000 00000000 		.space	4
 13366              		.section	.bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup,"aw",%nobits
 13367              		.set	.LANCHOR69,. + 0
 13370              	_ZZ20Update_crossfeedbackvE20crossfeedback_pickup:
 13371 0000 00       		.space	1
 13372              		.section	.bss._ZZ20Update_crossfeedbackvE9lastShift,"aw",%nobits
 13373              		.set	.LANCHOR68,. + 0
 13376              	_ZZ20Update_crossfeedbackvE9lastShift:
 13377 0000 00       		.space	1
 13378              		.section	.bss._ZZL13AudioCallbackPfS_jE6LNegFB,"aw",%nobits
 13379              		.align	2
 13380              		.set	.LANCHOR127,. + 0
 13383              	_ZZL13AudioCallbackPfS_jE6LNegFB:
 13384 0000 00000000 		.space	4
 13385              		.section	.bss._ZZL13AudioCallbackPfS_jE6RNegFB,"aw",%nobits
 13386              		.align	2
 13387              		.set	.LANCHOR128,. + 0
 13390              	_ZZL13AudioCallbackPfS_jE6RNegFB:
 13391 0000 00000000 		.space	4
 13392              		.section	.bss._ZZL13AudioCallbackPfS_jE7Counter,"aw",%nobits
 13393              		.align	2
 13394              		.set	.LANCHOR113,. + 0
 13397              	_ZZL13AudioCallbackPfS_jE7Counter:
 13398 0000 00000000 		.space	4
 13399              		.section	.bss.crossfeedback,"aw",%nobits
 13400              		.align	2
 13401              		.set	.LANCHOR71,. + 0
 13404              	crossfeedback:
 13405 0000 00000000 		.space	4
 13406              		.section	.bss.crossfeedback_CV,"aw",%nobits
 13407              		.align	2
 13410              	crossfeedback_CV:
 13411 0000 00000000 		.space	4
 13412              		.section	.bss.delayL,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 390


 13413              		.align	2
 13414              		.set	.LANCHOR0,. + 0
 13417              	delayL:
 13418 0000 00000000 		.space	296
 13418      00000000 
 13418      00000000 
 13418      00000000 
 13418      00000000 
 13419              		.section	.bss.delayR,"aw",%nobits
 13420              		.align	2
 13421              		.set	.LANCHOR1,. + 0
 13424              	delayR:
 13425 0000 00000000 		.space	296
 13425      00000000 
 13425      00000000 
 13425      00000000 
 13425      00000000 
 13426              		.section	.bss.delayTimeL_CV,"aw",%nobits
 13427              		.align	2
 13428              		.set	.LANCHOR5,. + 0
 13431              	delayTimeL_CV:
 13432 0000 00000000 		.space	4
 13433              		.section	.bss.delayTimeR_CV,"aw",%nobits
 13434              		.align	2
 13435              		.set	.LANCHOR16,. + 0
 13438              	delayTimeR_CV:
 13439 0000 00000000 		.space	4
 13440              		.section	.bss.delaysL_REV,"aw",%nobits
 13441              		.align	2
 13442              		.set	.LANCHOR2,. + 0
 13445              	delaysL_REV:
 13446 0000 00000000 		.space	8
 13446      00000000 
 13447              		.section	.bss.delaysR_REV,"aw",%nobits
 13448              		.align	2
 13449              		.set	.LANCHOR3,. + 0
 13452              	delaysR_REV:
 13453 0000 00000000 		.space	8
 13453      00000000 
 13454              		.section	.bss.div_L,"aw",%nobits
 13457              	div_L:
 13458 0000 00       		.space	1
 13459              		.section	.bss.div_R,"aw",%nobits
 13462              	div_R:
 13463 0000 00       		.space	1
 13464              		.section	.bss.drywet_CV,"aw",%nobits
 13465              		.align	2
 13466              		.set	.LANCHOR50,. + 0
 13469              	drywet_CV:
 13470 0000 00000000 		.space	4
 13471              		.section	.bss.feedbackL,"aw",%nobits
 13472              		.align	2
 13473              		.set	.LANCHOR31,. + 0
 13476              	feedbackL:
 13477 0000 00000000 		.space	4
 13478              		.section	.bss.feedbackL_CV,"aw",%nobits
 13479              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 391


 13480              		.set	.LANCHOR26,. + 0
 13483              	feedbackL_CV:
 13484 0000 00000000 		.space	4
 13485              		.section	.bss.feedbackR,"aw",%nobits
 13486              		.align	2
 13487              		.set	.LANCHOR43,. + 0
 13490              	feedbackR:
 13491 0000 00000000 		.space	4
 13492              		.section	.bss.feedbackR_CV,"aw",%nobits
 13493              		.align	2
 13494              		.set	.LANCHOR38,. + 0
 13497              	feedbackR_CV:
 13498 0000 00000000 		.space	4
 13499              		.section	.bss.filterXfade,"aw",%nobits
 13500              		.align	2
 13501              		.set	.LANCHOR79,. + 0
 13504              	filterXfade:
 13505 0000 00000000 		.space	4
 13506              		.section	.bss.modulation_CV_Raw,"aw",%nobits
 13507              		.align	2
 13508              		.set	.LANCHOR84,. + 0
 13511              	modulation_CV_Raw:
 13512 0000 00000000 		.space	4
 13513              		.section	.bss.mute,"aw",%nobits
 13514              		.set	.LANCHOR112,. + 0
 13517              	mute:
 13518 0000 00       		.space	1
 13519              		.section	.bss.save_flag,"aw",%nobits
 13520              		.align	2
 13521              		.set	.LANCHOR114,. + 0
 13524              	save_flag:
 13525 0000 00       		.space	1
 13526              		.section	.bss.shift,"aw",%nobits
 13527              		.set	.LANCHOR7,. + 0
 13530              	shift:
 13531 0000 00       		.space	1
 13532              		.section	.bss.syncMode,"aw",%nobits
 13533              		.set	.LANCHOR12,. + 0
 13536              	syncMode:
 13537 0000 00       		.space	1
 13538              		.section	.bss.tempoLED_BASE,"aw",%nobits
 13539              		.align	2
 13540              		.set	.LANCHOR88,. + 0
 13543              	tempoLED_BASE:
 13544 0000 00000000 		.space	72
 13544      00000000 
 13544      00000000 
 13544      00000000 
 13544      00000000 
 13545              		.section	.bss.width_CV,"aw",%nobits
 13546              		.align	2
 13547              		.set	.LANCHOR58,. + 0
 13550              	width_CV:
 13551 0000 00000000 		.space	4
 13552              		.section	.data.drywet,"aw"
 13553              		.align	2
 13554              		.set	.LANCHOR55,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 392


 13557              	drywet:
 13558 0000 0000003F 		.word	1056964608
 13559              		.section	.data.width,"aw"
 13560              		.align	2
 13561              		.set	.LANCHOR63,. + 0
 13564              	width:
 13565 0000 0000803F 		.word	1065353216
 13566              		.section	.rodata.CSWTCH.355,"a"
 13567              		.align	3
 13568              		.set	.LANCHOR24,. + 0
 13571              	CSWTCH.355:
 13572 0000 00000000 		.word	0
 13573 0004 0000F83F 		.word	1073217536
 13574 0008 00000000 		.word	0
 13575 000c 00000040 		.word	1073741824
 13576 0010 00000000 		.word	0
 13577 0014 00000840 		.word	1074266112
 13578              		.section	.rodata._ZL18defaultAltControls,"a"
 13579              		.align	2
 13580              		.set	.LANCHOR108,. + 0
 13583              	_ZL18defaultAltControls:
 13584 0000 00650148 		.word	1208050944
 13585 0004 0000803F 		.word	1065353216
 13586 0008 00000000 		.word	0
 13587 000c 9A99A140 		.word	1084332442
 13588 0010 00004843 		.word	1128792064
 13589 0014 00803B46 		.word	1178304512
 13590 0018 00000000 		.word	0
 13591 001c 00000000 		.word	0
 13592              		.section	.sdram_bss,"aw"
 13593              		.align	2
 13596              	delMemsR_REV:
 13597 0000 00000000 		.space	2400040
 13597      00000000 
 13597      00000000 
 13597      00000000 
 13597      00000000 
 13600              	delMemsL_REV:
 13601 249f28 00000000 		.space	2400040
 13601      00000000 
 13601      00000000 
 13601      00000000 
 13601      00000000 
 13604              	delMemsR:
 13605 493e50 00000000 		.space	6912136
 13605      00000000 
 13605      00000000 
 13605      00000000 
 13605      00000000 
 13608              	delMemsL:
 13609 b2b6d8 00000000 		.space	6912136
 13609      00000000 
 13609      00000000 
 13609      00000000 
 13609      00000000 
 13610              		.text
 13611              	.Letext0:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 393


 13612              		.file 28 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_d
 13613              		.file 29 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdin
 13614              		.file 30 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdint.h"
 13615              		.file 31 "../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 13616              		.file 32 "../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 13617              		.file 33 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 13618              		.file 34 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13619              		.file 35 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13620              		.file 36 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13621              		.file 37 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13622              		.file 38 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13623              		.file 39 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13624              		.file 40 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13625              		.file 41 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13626              		.file 42 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13627              		.file 43 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13628              		.file 44 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13629              		.file 45 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13630              		.file 46 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13631              		.file 47 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13632              		.file 48 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13633              		.file 49 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13634              		.file 50 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13635              		.file 51 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13636              		.file 52 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13637              		.file 53 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13638              		.file 54 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13639              		.file 55 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock.h
 13640              		.file 56 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_types
 13641              		.file 57 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reent.
 13642              		.file 58 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
 13643              		.file 59 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdlib.h"
 13644              		.file 60 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13645              		.file 61 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 13646              		.file 62 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 13647              		.file 63 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13648              		.file 64 "../libdaisy/src/daisy_core.h"
 13649              		.file 65 "../libdaisy/src/per/tim.h"
 13650              		.file 66 "../libdaisy/src/per/sai.h"
 13651              		.file 67 "../libdaisy/src/util/wav_format.h"
 13652              		.file 68 "../libdaisy/src/per/qspi.h"
 13653              		.file 69 "../libdaisy/src/per/gpio.h"
 13654              		.file 70 "../libdaisy/src/dev/sdram.h"
 13655              		.file 71 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 13656              		.file 72 "<built-in>"
 13657              		.file 73 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdio.h"
 13658              		.file 74 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/unistd
 13659              		.file 75 "../libdaisy/src/util/oled_fonts.h"
 13660              		.file 76 "../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 13661              		.file 77 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 13662              		.file 78 "../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 13663              		.file 79 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 13664              		.file 80 "../libdaisy/src/util/sd_diskio.h"
 13665              		.file 81 "../libdaisy/src/sys/fatfs.h"
 13666              		.file 82 "../DaisySP/Source/Control/adenv.h"
 13667              		.file 83 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/wchar.h"
 13668              		.file 84 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/locale.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 394


 13669              		.file 85 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/ctype.h"
 13670              		.file 86 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/errno.
 13671              		.file 87 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/string.h"
 13672              		.file 88 "QSPI_Settings.h"
 13673              		.file 89 "scale.h"
 13674              		.file 90 "constants.h"
 13675              		.file 91 "../libdaisy/src/dev/sr_595.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 395


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Veno-Echo.cpp
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:17     .text._ZN5daisy6SwitchD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:43     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:92     .text._ZN7daisysp4AdsrD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:100    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:100    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:117    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:125    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:125    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:142    .text._ZN7daisysp3SvfD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:150    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:150    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:167    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:175    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:175    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:192    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:200    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 _ZN7daisysp7DcBlockD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:200    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 _ZN7daisysp7DcBlockD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:217    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:242    .text._ZN8TaptempoD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:267    .text._ZN8TempoLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:304    .text._ZN9ButtonLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:312    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:312    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:338    .text._ZN10DelayMultiD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:346    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:346    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:377    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:385    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:385    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:402    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:410    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:410    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:427    .text._Z10InitDelaysf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:435    .text._Z10InitDelaysf:0000000000000000 _Z10InitDelaysf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:987    .text._Z10InitDelaysf:0000000000000178 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13608  .sdram_bss:0000000000b2b6d8 delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13604  .sdram_bss:0000000000493e50 delMemsR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13600  .sdram_bss:0000000000249f28 delMemsL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13596  .sdram_bss:0000000000000000 delMemsR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:1012   .text._Z20Update_DelayTimeL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:1020   .text._Z20Update_DelayTimeL_CVv:0000000000000000 _Z20Update_DelayTimeL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:1045   .text._Z20Update_DelayTimeL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:1051   .text._Z17Update_DelayTimeLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:1059   .text._Z17Update_DelayTimeLv:0000000000000000 _Z17Update_DelayTimeLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:1597   .text._Z17Update_DelayTimeLv:00000000000001d4 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 396


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:1626   .text._Z20Update_DelayTimeR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:1634   .text._Z20Update_DelayTimeR_CVv:0000000000000000 _Z20Update_DelayTimeR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:1659   .text._Z20Update_DelayTimeR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:1665   .text._Z17Update_DelayTimeRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:1673   .text._Z17Update_DelayTimeRv:0000000000000000 _Z17Update_DelayTimeRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:2127   .text._Z17Update_DelayTimeRv:000000000000019c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:2153   .text._Z19Update_feedbackL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:2161   .text._Z19Update_feedbackL_CVv:0000000000000000 _Z19Update_feedbackL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:2186   .text._Z19Update_feedbackL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:2192   .text._Z16Update_feedbackLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:2200   .text._Z16Update_feedbackLv:0000000000000000 _Z16Update_feedbackLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:2618   .text._Z16Update_feedbackLv:0000000000000190 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:2646   .text._Z19Update_feedbackR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:2654   .text._Z19Update_feedbackR_CVv:0000000000000000 _Z19Update_feedbackR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:2679   .text._Z19Update_feedbackR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:2685   .text._Z16Update_feedbackRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:2693   .text._Z16Update_feedbackRv:0000000000000000 _Z16Update_feedbackRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:3115   .text._Z16Update_feedbackRv:000000000000019c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:3143   .text._Z16Update_drywet_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:3151   .text._Z16Update_drywet_CVv:0000000000000000 _Z16Update_drywet_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:3176   .text._Z16Update_drywet_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:3182   .text._Z13Update_drywetv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:3190   .text._Z13Update_drywetv:0000000000000000 _Z13Update_drywetv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:3662   .text._Z13Update_drywetv:00000000000001f0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:3698   .text._Z15Update_width_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:3706   .text._Z15Update_width_CVv:0000000000000000 _Z15Update_width_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:3731   .text._Z15Update_width_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:3737   .text._Z12Update_widthv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:3745   .text._Z12Update_widthv:0000000000000000 _Z12Update_widthv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:4169   .text._Z12Update_widthv:0000000000000180 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:4194   .text._Z20Update_crossfeedbackv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:4202   .text._Z20Update_crossfeedbackv:0000000000000000 _Z20Update_crossfeedbackv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:4528   .text._Z20Update_crossfeedbackv:000000000000010c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:4547   .text._Z18Update_filterXfadev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:4555   .text._Z18Update_filterXfadev:0000000000000000 _Z18Update_filterXfadev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:4853   .text._Z18Update_filterXfadev:0000000000000110 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:4875   .text._Z8GetModCVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:4883   .text._Z8GetModCVv:0000000000000000 _Z8GetModCVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:4913   .text._Z8GetModCVv:0000000000000020 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:4921   .text._Z10Update_Modv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:4929   .text._Z10Update_Modv:0000000000000000 _Z10Update_Modv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:5086   .text._Z10Update_Modv:0000000000000058 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:5098   .text._Z11UpdateClockv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:5106   .text._Z11UpdateClockv:0000000000000000 _Z11UpdateClockv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:5169   .text._Z11UpdateClockv:000000000000002c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:5178   .text._Z21Update_DelayBaseTempov:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:5186   .text._Z21Update_DelayBaseTempov:0000000000000000 _Z21Update_DelayBaseTempov
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:5273   .text._Z21Update_DelayBaseTempov:0000000000000034 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:5282   .text._Z21Update_DelayTempoLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:5290   .text._Z21Update_DelayTempoLEDsv:0000000000000000 _Z21Update_DelayTempoLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:5323   .text._Z21Update_DelayTempoLEDsv:0000000000000018 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:5330   .text._Z19Update_BaseTempoLEDv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:5338   .text._Z19Update_BaseTempoLEDv:0000000000000000 _Z19Update_BaseTempoLEDv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:5456   .text._Z19Update_BaseTempoLEDv:000000000000005c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:5466   .text._Z13ApplySettingsRK8Settings:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:5474   .text._Z13ApplySettingsRK8Settings:0000000000000000 _Z13ApplySettingsRK8Settings
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:6171   .text._Z13ApplySettingsRK8Settings:0000000000000340 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 397


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:6210   .text.startup.main:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:6218   .text.startup.main:0000000000000000 main
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:7090   .text.startup.main:0000000000000344 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:7122   .text.startup.main:00000000000003b8 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:7486   .text.startup.main:00000000000005a0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:8133   .text._ZL13AudioCallbackPfS_j:0000000000000000 _ZL13AudioCallbackPfS_j
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:7505   .text._Z13TurnOnAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:7513   .text._Z13TurnOnAllLEDsv:0000000000000000 _Z13TurnOnAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:7575   .text._Z13TurnOnAllLEDsv:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:7586   .text._Z12ResetAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:7594   .text._Z12ResetAllLEDsv:0000000000000000 _Z12ResetAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:7697   .text._Z12ResetAllLEDsv:000000000000007c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:7709   .text._Z14Update_Buttonsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:7717   .text._Z14Update_Buttonsv:0000000000000000 _Z14Update_Buttonsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:8103   .text._Z14Update_Buttonsv:0000000000000190 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:8126   .text._ZL13AudioCallbackPfS_j:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:8245   .text._ZL13AudioCallbackPfS_j:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:8260   .text._ZL13AudioCallbackPfS_j:000000000000006a $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:8289   .text._ZL13AudioCallbackPfS_j:0000000000000090 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:8300   .text._ZL13AudioCallbackPfS_j:00000000000000a4 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:9436   .text._ZL13AudioCallbackPfS_j:0000000000000418 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:9492   .text._ZL13AudioCallbackPfS_j:00000000000004c8 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:10118  .text._ZL13AudioCallbackPfS_j:00000000000007a0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:10140  .text._ZL13AudioCallbackPfS_j:00000000000007e8 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:10895  .text._ZL13AudioCallbackPfS_j:0000000000000b44 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:10932  .text._ZL13AudioCallbackPfS_j:0000000000000bac $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:11265  .text._ZL13AudioCallbackPfS_j:0000000000000cac $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:11276  .text._Z9HardLimitff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:11284  .text._Z9HardLimitff:0000000000000000 _Z9HardLimitff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:11318  .text._Z10PotCVComboff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:11326  .text._Z10PotCVComboff:0000000000000000 _Z10PotCVComboff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:11373  .text._Z10PotCVComboff:0000000000000038 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:11378  .text._Z16checkPickupStateffbb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:11386  .text._Z16checkPickupStateffbb:0000000000000000 _Z16checkPickupStateffbb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:11470  .text._Z16checkPickupStateffbb:000000000000003c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:11475  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:11483  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 _Z20checkPickupState_altff11pickupStateb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:11573  .text._Z20checkPickupState_altff11pickupStateb:000000000000006c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:11578  .text._Z11GetTapRatio9TapRatios:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:11586  .text._Z11GetTapRatio9TapRatios:0000000000000000 _Z11GetTapRatio9TapRatios
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:11616  .text._Z11GetTapRatio9TapRatios:000000000000001c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:11621  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:11628  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 _GLOBAL__sub_I_delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12547  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000264 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12623  .init_array:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12675  .bss.AltControls:0000000000000000 AltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12682  .bss.BaseTempo:0000000000000000 BaseTempo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12689  .bss.ClockIn:0000000000000000 ClockIn
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12770  .bss.Sync:0000000000000000 Sync
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12763  .bss.ReverseGateR:0000000000000000 ReverseGateR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12756  .bss.ReverseGateL:0000000000000000 ReverseGateL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12708  .bss.DELAYR_DEBUG:0000000000000000 DELAYR_DEBUG
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12701  .bss.DELAYL_DEBUG:0000000000000000 DELAYL_DEBUG
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13524  .bss.save_flag:0000000000000000 save_flag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12735  .bss.PostFilters:0000000000000000 PostFilters
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12694  .bss.ClockInFlag:0000000000000000 ClockInFlag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13517  .bss.mute:0000000000000000 mute
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 398


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13530  .bss.shift:0000000000000000 shift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13536  .bss.syncMode:0000000000000000 syncMode
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13511  .bss.modulation_CV_Raw:0000000000000000 modulation_CV_Raw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12729  .bss.ModDepth:0000000000000000 ModDepth
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13462  .bss.div_R:0000000000000000 div_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13457  .bss.div_L:0000000000000000 div_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13504  .bss.filterXfade:0000000000000000 filterXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13550  .bss.width_CV:0000000000000000 width_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13564  .data.width:0000000000000000 width
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13469  .bss.drywet_CV:0000000000000000 drywet_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13557  .data.drywet:0000000000000000 drywet
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13410  .bss.crossfeedback_CV:0000000000000000 crossfeedback_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13404  .bss.crossfeedback:0000000000000000 crossfeedback
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13497  .bss.feedbackR_CV:0000000000000000 feedbackR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13490  .bss.feedbackR:0000000000000000 feedbackR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13483  .bss.feedbackL_CV:0000000000000000 feedbackL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13476  .bss.feedbackL:0000000000000000 feedbackL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13438  .bss.delayTimeR_CV:0000000000000000 delayTimeR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13431  .bss.delayTimeL_CV:0000000000000000 delayTimeL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13543  .bss.tempoLED_BASE:0000000000000000 tempoLED_BASE
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12777  .bss.Tap_Button:0000000000000000 Tap_Button
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12749  .bss.Rev_R_sw:0000000000000000 Rev_R_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12742  .bss.Rev_L_sw:0000000000000000 Rev_L_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12715  .bss.HPF_sw:0000000000000000 HPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12722  .bss.LPF_sw:0000000000000000 LPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13452  .bss.delaysR_REV:0000000000000000 delaysR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13445  .bss.delaysL_REV:0000000000000000 delaysL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13424  .bss.delayR:0000000000000000 delayR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13417  .bss.delayL:0000000000000000 delayL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12671  .bss.AltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12678  .bss.BaseTempo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12685  .bss.ClockIn:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12695  .bss.ClockInFlag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12697  .bss.DELAYL_DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12704  .bss.DELAYR_DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12711  .bss.HPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12718  .bss.LPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12725  .bss.ModDepth:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12736  .bss.PostFilters:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12738  .bss.Rev_L_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12745  .bss.Rev_R_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12752  .bss.ReverseGateL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12759  .bss.ReverseGateR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12766  .bss.Sync:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12773  .bss.Tap_Button:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12780  .bss._ZL10FwdRevLEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12784  .bss._ZL10FwdRevLEnv:0000000000000000 _ZL10FwdRevLEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12787  .bss._ZL10FwdRevREnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12791  .bss._ZL10FwdRevREnv:0000000000000000 _ZL10FwdRevREnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12794  .bss._ZL10HPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12798  .bss._ZL10HPF_LXfade:0000000000000000 _ZL10HPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12801  .bss._ZL10HPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12805  .bss._ZL10HPF_L_post:0000000000000000 _ZL10HPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12808  .bss._ZL10HPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12812  .bss._ZL10HPF_RXfade:0000000000000000 _ZL10HPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12815  .bss._ZL10HPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12819  .bss._ZL10HPF_R_post:0000000000000000 _ZL10HPF_R_post
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 399


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12822  .bss._ZL10LPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12826  .bss._ZL10LPF_LXfade:0000000000000000 _ZL10LPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12829  .bss._ZL10LPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12833  .bss._ZL10LPF_L_post:0000000000000000 _ZL10LPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12836  .bss._ZL10LPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12840  .bss._ZL10LPF_RXfade:0000000000000000 _ZL10LPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12843  .bss._ZL10LPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12847  .bss._ZL10LPF_R_post:0000000000000000 _ZL10LPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12850  .bss._ZL10WidthXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12854  .bss._ZL10WidthXfade:0000000000000000 _ZL10WidthXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12857  .bss._ZL11DcBlock_LFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12861  .bss._ZL11DcBlock_LFB:0000000000000000 _ZL11DcBlock_LFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12864  .bss._ZL11DcBlock_RFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12868  .bss._ZL11DcBlock_RFB:0000000000000000 _ZL11DcBlock_RFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12871  .bss._ZL11FilterMix_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12875  .bss._ZL11FilterMix_L:0000000000000000 _ZL11FilterMix_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12878  .bss._ZL11FilterMix_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12882  .bss._ZL11FilterMix_R:0000000000000000 _ZL11FilterMix_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12885  .bss._ZL12FwdRevLXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12889  .bss._ZL12FwdRevLXfade:0000000000000000 _ZL12FwdRevLXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12892  .bss._ZL12FwdRevRXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12896  .bss._ZL12FwdRevRXfade:0000000000000000 _ZL12FwdRevRXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12899  .bss._ZL15HPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12903  .bss._ZL15HPF_LXfade_post:0000000000000000 _ZL15HPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12906  .bss._ZL15HPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12910  .bss._ZL15HPF_RXfade_post:0000000000000000 _ZL15HPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12913  .bss._ZL15LPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12917  .bss._ZL15LPF_LXfade_post:0000000000000000 _ZL15LPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12920  .bss._ZL15LPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12924  .bss._ZL15LPF_RXfade_post:0000000000000000 _ZL15LPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12927  .bss._ZL16FilterMix_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12931  .bss._ZL16FilterMix_L_post:0000000000000000 _ZL16FilterMix_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12934  .bss._ZL16FilterMix_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12938  .bss._ZL16FilterMix_R_post:0000000000000000 _ZL16FilterMix_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12941  .bss._ZL2hw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12945  .bss._ZL2hw:0000000000000000 _ZL2hw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12948  .bss._ZL3lfo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12952  .bss._ZL3lfo:0000000000000000 _ZL3lfo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12955  .bss._ZL5HPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12959  .bss._ZL5HPF_L:0000000000000000 _ZL5HPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12962  .bss._ZL5HPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12966  .bss._ZL5HPF_R:0000000000000000 _ZL5HPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12969  .bss._ZL5LPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12973  .bss._ZL5LPF_L:0000000000000000 _ZL5LPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12976  .bss._ZL5LPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12980  .bss._ZL5LPF_R:0000000000000000 _ZL5LPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12983  .bss._ZL7HPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12987  .bss._ZL7HPF_Env:0000000000000000 _ZL7HPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12990  .bss._ZL7LPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12994  .bss._ZL7LPF_Env:0000000000000000 _ZL7LPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:12997  .bss._ZL7LeftEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13001  .bss._ZL7LeftEnv:0000000000000000 _ZL7LeftEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13004  .bss._ZL8RightEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13008  .bss._ZL8RightEnv:0000000000000000 _ZL8RightEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13011  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13015  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 _ZZ10Update_ModvE13modulation_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13018  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 400


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13022  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 _ZZ10Update_ModvE17ModDepth_Filtered
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13025  .bss._ZZ12Update_widthvE10width_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13029  .bss._ZZ12Update_widthvE10width_Last:0000000000000000 _ZZ12Update_widthvE10width_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13032  .bss._ZZ12Update_widthvE12ModDepth_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13036  .bss._ZZ12Update_widthvE12ModDepth_new:0000000000000000 _ZZ12Update_widthvE12ModDepth_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13042  .bss._ZZ12Update_widthvE12width_pickup:0000000000000000 _ZZ12Update_widthvE12width_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13043  .bss._ZZ12Update_widthvE12width_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13048  .bss._ZZ12Update_widthvE15ModDepth_pickup:0000000000000000 _ZZ12Update_widthvE15ModDepth_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13049  .bss._ZZ12Update_widthvE15ModDepth_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13054  .bss._ZZ12Update_widthvE9lastShift:0000000000000000 _ZZ12Update_widthvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13055  .bss._ZZ12Update_widthvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13057  .bss._ZZ12Update_widthvE9width_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13061  .bss._ZZ12Update_widthvE9width_new:0000000000000000 _ZZ12Update_widthvE9width_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13067  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 _ZZ13Update_drywetvE10Res_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13068  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13070  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13074  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 _ZZ13Update_drywetvE10drywet_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13077  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13081  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 _ZZ13Update_drywetvE11drywet_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13087  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 _ZZ13Update_drywetvE13drywet_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13088  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13090  .bss._ZZ13Update_drywetvE7Res_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13094  .bss._ZZ13Update_drywetvE7Res_new:0000000000000000 _ZZ13Update_drywetvE7Res_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13100  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 _ZZ13Update_drywetvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13101  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13103  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13107  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 _ZZ14Update_ButtonsvE11buttonstate
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13110  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13114  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 _ZZ14Update_ButtonsvE9resetTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13117  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13121  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 _ZZ14Update_ButtonsvE9shiftTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13124  .bss._ZZ16Update_feedbackLvE12HPCutoff_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13128  .bss._ZZ16Update_feedbackLvE12HPCutoff_new:0000000000000000 _ZZ16Update_feedbackLvE12HPCutoff_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13131  .bss._ZZ16Update_feedbackLvE13feedbackL_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13135  .bss._ZZ16Update_feedbackLvE13feedbackL_new:0000000000000000 _ZZ16Update_feedbackLvE13feedbackL_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13138  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13142  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 _ZZ16Update_feedbackLvE14feedbackL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13148  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackLvE15HPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13149  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13154  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 _ZZ16Update_feedbackLvE16feedbackL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13155  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13160  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 _ZZ16Update_feedbackLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13161  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13163  .bss._ZZ16Update_feedbackRvE12LPCutoff_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13167  .bss._ZZ16Update_feedbackRvE12LPCutoff_new:0000000000000000 _ZZ16Update_feedbackRvE12LPCutoff_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13170  .bss._ZZ16Update_feedbackRvE13feedbackR_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13174  .bss._ZZ16Update_feedbackRvE13feedbackR_new:0000000000000000 _ZZ16Update_feedbackRvE13feedbackR_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13177  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13181  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 _ZZ16Update_feedbackRvE14feedbackR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13187  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackRvE15LPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13188  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13193  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 _ZZ16Update_feedbackRvE16feedbackR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13194  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13199  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 _ZZ16Update_feedbackRvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13200  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13202  .bss._ZZ17Update_DelayTimeLvE14delayTimeL_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13206  .bss._ZZ17Update_DelayTimeLvE14delayTimeL_new:0000000000000000 _ZZ17Update_DelayTimeLvE14delayTimeL_new
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 401


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13209  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13213  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 _ZZ17Update_DelayTimeLvE15delayTimeL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13216  .bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13220  .bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:0000000000000000 _ZZ17Update_DelayTimeLvE17Rev_DelayTime_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13226  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE17delayTimeL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13227  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13232  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13233  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13235  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13239  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 _ZZ17Update_DelayTimeLvE8counterL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13245  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13246  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13248  .bss._ZZ17Update_DelayTimeRvE12tapRatio_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13252  .bss._ZZ17Update_DelayTimeRvE12tapRatio_new:0000000000000000 _ZZ17Update_DelayTimeRvE12tapRatio_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13255  .bss._ZZ17Update_DelayTimeRvE14delayTimeR_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13259  .bss._ZZ17Update_DelayTimeRvE14delayTimeR_new:0000000000000000 _ZZ17Update_DelayTimeRvE14delayTimeR_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13262  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13266  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 _ZZ17Update_DelayTimeRvE15delayTimeR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13272  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE15tapRatio_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13273  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13278  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE17delayTimeR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13279  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13281  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13285  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 _ZZ17Update_DelayTimeRvE8counterR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13291  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeRvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13292  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13294  .bss._ZZ18Update_filterXfadevE15PostFilters_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13298  .bss._ZZ18Update_filterXfadevE15PostFilters_new:0000000000000000 _ZZ18Update_filterXfadevE15PostFilters_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13301  .bss._ZZ18Update_filterXfadevE15filterXfade_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13305  .bss._ZZ18Update_filterXfadevE15filterXfade_new:0000000000000000 _ZZ18Update_filterXfadevE15filterXfade_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13308  .bss._ZZ18Update_filterXfadevE16filterXfade_last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13312  .bss._ZZ18Update_filterXfadevE16filterXfade_last:0000000000000000 _ZZ18Update_filterXfadevE16filterXfade_last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13318  .bss._ZZ18Update_filterXfadevE18PostFilters_pickup:0000000000000000 _ZZ18Update_filterXfadevE18PostFilters_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13319  .bss._ZZ18Update_filterXfadevE18PostFilters_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13324  .bss._ZZ18Update_filterXfadevE18filterXfade_pickup:0000000000000000 _ZZ18Update_filterXfadevE18filterXfade_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13325  .bss._ZZ18Update_filterXfadevE18filterXfade_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13330  .bss._ZZ18Update_filterXfadevE9lastShift:0000000000000000 _ZZ18Update_filterXfadevE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13331  .bss._ZZ18Update_filterXfadevE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13333  .bss._ZZ19Update_BaseTempoLEDvE12phaseCounter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13337  .bss._ZZ19Update_BaseTempoLEDvE12phaseCounter:0000000000000000 _ZZ19Update_BaseTempoLEDvE12phaseCounter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13340  .bss._ZZ20Update_crossfeedbackvE11modRate_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13344  .bss._ZZ20Update_crossfeedbackvE11modRate_new:0000000000000000 _ZZ20Update_crossfeedbackvE11modRate_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13350  .bss._ZZ20Update_crossfeedbackvE14modRate_pickup:0000000000000000 _ZZ20Update_crossfeedbackvE14modRate_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13351  .bss._ZZ20Update_crossfeedbackvE14modRate_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13353  .bss._ZZ20Update_crossfeedbackvE17crossfeedback_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13357  .bss._ZZ20Update_crossfeedbackvE17crossfeedback_new:0000000000000000 _ZZ20Update_crossfeedbackvE17crossfeedback_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13360  .bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13364  .bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last:0000000000000000 _ZZ20Update_crossfeedbackvE18crossfeedback_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13370  .bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup:0000000000000000 _ZZ20Update_crossfeedbackvE20crossfeedback_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13371  .bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13376  .bss._ZZ20Update_crossfeedbackvE9lastShift:0000000000000000 _ZZ20Update_crossfeedbackvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13377  .bss._ZZ20Update_crossfeedbackvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13379  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13383  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6LNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13386  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13390  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6RNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13393  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 402


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13397  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 _ZZL13AudioCallbackPfS_jE7Counter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13400  .bss.crossfeedback:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13407  .bss.crossfeedback_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13413  .bss.delayL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13420  .bss.delayR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13427  .bss.delayTimeL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13434  .bss.delayTimeR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13441  .bss.delaysL_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13448  .bss.delaysR_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13458  .bss.div_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13463  .bss.div_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13465  .bss.drywet_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13472  .bss.feedbackL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13479  .bss.feedbackL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13486  .bss.feedbackR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13493  .bss.feedbackR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13500  .bss.filterXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13507  .bss.modulation_CV_Raw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13518  .bss.mute:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13520  .bss.save_flag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13531  .bss.shift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13537  .bss.syncMode:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13539  .bss.tempoLED_BASE:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13546  .bss.width_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13553  .data.drywet:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13560  .data.width:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13567  .rodata.CSWTCH.355:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13571  .rodata.CSWTCH.355:0000000000000000 CSWTCH.355
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13579  .rodata._ZL18defaultAltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13583  .rodata._ZL18defaultAltControls:0000000000000000 _ZL18defaultAltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s:13593  .sdram_bss:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy6SwitchD5Ev
                           .group:0000000000000000 _ZN5daisy9DaisySeedD5Ev
                           .group:0000000000000000 _ZN7daisysp4AdsrD5Ev
                           .group:0000000000000000 _ZN7daisysp10OscillatorD5Ev
                           .group:0000000000000000 _ZN7daisysp3SvfD5Ev
                           .group:0000000000000000 _ZN7daisysp9CrossFadeD5Ev
                           .group:0000000000000000 _ZN7daisysp7DcBlockD5Ev
                           .group:0000000000000000 _ZN7daisysp9EnvFollowD5Ev
                           .group:0000000000000000 _ZN8TaptempoD5Ev
                           .group:0000000000000000 _ZN8TempoLEDD5Ev
                           .group:0000000000000000 _ZN9ButtonLEDD5Ev
                           .group:0000000000000000 _ZN10DelayMultiD5Ev
                           .group:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED5Ev
                           .group:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED5Ev

UNDEFINED SYMBOLS
_ZN5daisy9DaisySeed6GetPinEh
_ZN10DelayMulti4initE12dsy_gpio_pinf
_ZNK5daisy9AdcHandle8GetFloatEh
_ZNK5daisy9AdcHandle11GetMuxFloatEhh
_ZN10DelayMulti12SetDelayTimeEfb
_Z5scalefff9CurveType
_ZN8Taptempo11setTapRatioEf
_ZN7daisysp3Svf7SetFreqEf
_ZN7daisysp3Svf6SetResEf
_ZN7daisysp10Oscillator12CalcPhaseIncEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccuhqjGQ.s 			page 403


_ZN7daisysp10Oscillator7ProcessEv
_ZN5daisy6Switch8DebounceEv
_ZN8Taptempo3tapEv
_ZN8Taptempo10getTapFreqEv
_ZN8TempoLED8setTempoEf
_ZN8Taptempo12getTapLengthEv
_ZN10DelayMulti12GetDelayTimeEv
_ZN10DelayMulti14updateTempoLEDEb
_ZN8TempoLED6updateEv
_ZN8TempoLED5isEOCEv
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN7daisysp4Adsr4InitEf
_ZN7daisysp3Svf4InitEf
_ZN7daisysp3Svf8SetDriveEf
_ZN7daisysp7DcBlock4InitEf
_ZN8Taptempo4initEmmf
_ZN8TempoLED4initE12dsy_gpio_pinf
_ZN8TempoLED10resetPhaseEv
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
_ZN8TempoLED7LED_setEf
_ZN9ButtonLED7LED_setEf
_ZN9ButtonLED8getStateEv
_ZN9ButtonLED6updateEv
_ZN9ButtonLED10RisingEdgeEv
_ZN9ButtonLED11FallingEdgeEv
_ZN5daisy6System6GetNowEv
_ZN9ButtonLED6toggleEv
_ZN7daisysp7DcBlock7ProcessEf
_ZN10DelayMulti5WriteERKf
_ZN7daisysp9CrossFade7ProcessERfS1_
_ZN7daisysp4Adsr7ProcessEb
sinf
_ZN10DelayMulti9GetOutputEv
_ZN7daisysp3Svf7ProcessEf
__aeabi_atexit
__dso_handle
