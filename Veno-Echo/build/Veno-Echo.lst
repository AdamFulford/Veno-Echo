ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Veno-Echo.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy6SwitchD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy6SwitchD2Ev:
  27              	.LVL0:
  28              	.LFB1523:
  29              		.file 1 "../libdaisy/src/hid/switch.h"
   1:../libdaisy/src/hid/switch.h **** #pragma once
   2:../libdaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../libdaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../libdaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../libdaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../libdaisy/src/hid/switch.h **** 
   7:../libdaisy/src/hid/switch.h **** namespace daisy
   8:../libdaisy/src/hid/switch.h **** {
   9:../libdaisy/src/hid/switch.h **** /** 
  10:../libdaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  11:../libdaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  12:../libdaisy/src/hid/switch.h ****     @author Stephen Hensley
  13:../libdaisy/src/hid/switch.h ****     @date December 2019
  14:../libdaisy/src/hid/switch.h ****     @ingroup controls
  15:../libdaisy/src/hid/switch.h **** */
  16:../libdaisy/src/hid/switch.h **** class Switch
  17:../libdaisy/src/hid/switch.h **** {
  18:../libdaisy/src/hid/switch.h ****   public:
  19:../libdaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  20:../libdaisy/src/hid/switch.h ****     enum Type
  21:../libdaisy/src/hid/switch.h ****     {
  22:../libdaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  23:../libdaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  24:../libdaisy/src/hid/switch.h ****     };
  25:../libdaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  26:../libdaisy/src/hid/switch.h ****     enum Polarity
  27:../libdaisy/src/hid/switch.h ****     {
  28:../libdaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  29:../libdaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 2


  30:../libdaisy/src/hid/switch.h ****     };
  31:../libdaisy/src/hid/switch.h **** 
  32:../libdaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  33:../libdaisy/src/hid/switch.h ****     enum Pull
  34:../libdaisy/src/hid/switch.h ****     {
  35:../libdaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  36:../libdaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  37:../libdaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  38:../libdaisy/src/hid/switch.h ****     };
  39:../libdaisy/src/hid/switch.h **** 
  40:../libdaisy/src/hid/switch.h ****     Switch() {}
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
  30              		.loc 1 41 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 41 16 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE1523:
  40              		.weak	_ZN5daisy6SwitchD1Ev
  41              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
  42 0002 00BF     		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN5daisy9DaisySeedD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN5daisy9DaisySeedD2Ev:
  52              	.LVL1:
  53              	.LFB1703:
  54              		.file 2 "../libdaisy/src/daisy_seed.h"
   1:../libdaisy/src/daisy_seed.h **** #pragma once
   2:../libdaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../libdaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../libdaisy/src/daisy_seed.h **** 
   5:../libdaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../libdaisy/src/daisy_seed.h **** 
   7:../libdaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../libdaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../libdaisy/src/daisy_seed.h **** 
  10:../libdaisy/src/daisy_seed.h **** namespace daisy
  11:../libdaisy/src/daisy_seed.h **** {
  12:../libdaisy/src/daisy_seed.h **** /**
  13:../libdaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../libdaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../libdaisy/src/daisy_seed.h **** 
  16:../libdaisy/src/daisy_seed.h ****    @ingroup boards
  17:../libdaisy/src/daisy_seed.h **** */
  18:../libdaisy/src/daisy_seed.h **** class DaisySeed
  19:../libdaisy/src/daisy_seed.h **** {
  20:../libdaisy/src/daisy_seed.h ****   public:
  21:../libdaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 3


  55              		.loc 2 22 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LBB890:
  61              	.LBI890:
  62              		.file 3 "../libdaisy/src/sys/system.h"
   1:../libdaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../libdaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../libdaisy/src/sys/system.h **** 
   4:../libdaisy/src/sys/system.h **** #include <cstdint>
   5:../libdaisy/src/sys/system.h **** #include "per/tim.h"
   6:../libdaisy/src/sys/system.h **** 
   7:../libdaisy/src/sys/system.h **** namespace daisy
   8:../libdaisy/src/sys/system.h **** {
   9:../libdaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  10:../libdaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  11:../libdaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  12:../libdaisy/src/sys/system.h ****  **
  13:../libdaisy/src/sys/system.h ****  ** @author shensley
  14:../libdaisy/src/sys/system.h ****  ** @addtogroup system
  15:../libdaisy/src/sys/system.h ****  */
  16:../libdaisy/src/sys/system.h **** class System
  17:../libdaisy/src/sys/system.h **** {
  18:../libdaisy/src/sys/system.h ****   public:
  19:../libdaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  20:../libdaisy/src/sys/system.h ****     struct Config
  21:../libdaisy/src/sys/system.h ****     {
  22:../libdaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  23:../libdaisy/src/sys/system.h ****         enum class SysClkFreq
  24:../libdaisy/src/sys/system.h ****         {
  25:../libdaisy/src/sys/system.h ****             FREQ_400MHZ,
  26:../libdaisy/src/sys/system.h ****             FREQ_480MHZ,
  27:../libdaisy/src/sys/system.h ****         };
  28:../libdaisy/src/sys/system.h **** 
  29:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  30:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  31:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  32:../libdaisy/src/sys/system.h ****          ** */
  33:../libdaisy/src/sys/system.h ****         void Defaults()
  34:../libdaisy/src/sys/system.h ****         {
  35:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_400MHZ;
  36:../libdaisy/src/sys/system.h ****             use_dcache = true;
  37:../libdaisy/src/sys/system.h ****             use_icache = true;
  38:../libdaisy/src/sys/system.h ****         }
  39:../libdaisy/src/sys/system.h **** 
  40:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  41:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  42:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  43:../libdaisy/src/sys/system.h ****          ** */
  44:../libdaisy/src/sys/system.h ****         void Boost()
  45:../libdaisy/src/sys/system.h ****         {
  46:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_480MHZ;
  47:../libdaisy/src/sys/system.h ****             use_dcache = true;
  48:../libdaisy/src/sys/system.h ****             use_icache = true;
  49:../libdaisy/src/sys/system.h ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 4


  50:../libdaisy/src/sys/system.h **** 
  51:../libdaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  52:../libdaisy/src/sys/system.h ****         bool       use_dcache;
  53:../libdaisy/src/sys/system.h ****         bool       use_icache;
  54:../libdaisy/src/sys/system.h ****     };
  55:../libdaisy/src/sys/system.h **** 
  56:../libdaisy/src/sys/system.h ****     System() {}
  57:../libdaisy/src/sys/system.h ****     ~System() {}
  63              		.loc 3 57 5 view .LVU3
  64              		.loc 3 57 5 is_stmt 0 view .LVU4
  65              	.LBE890:
  66              	.LBB891:
  67              	.LBI891:
  68              		.file 4 "../libdaisy/src/hid/usb.h"
   1:../libdaisy/src/hid/usb.h **** #pragma once
   2:../libdaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../libdaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../libdaisy/src/hid/usb.h **** #include <stdint.h>
   5:../libdaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../libdaisy/src/hid/usb.h **** 
   7:../libdaisy/src/hid/usb.h **** namespace daisy
   8:../libdaisy/src/hid/usb.h **** /** @addtogroup externals
   9:../libdaisy/src/hid/usb.h ****     @{
  10:../libdaisy/src/hid/usb.h **** */
  11:../libdaisy/src/hid/usb.h **** 
  12:../libdaisy/src/hid/usb.h **** {
  13:../libdaisy/src/hid/usb.h **** /** 
  14:../libdaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../libdaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../libdaisy/src/hid/usb.h ****     @date December 2019
  17:../libdaisy/src/hid/usb.h **** */
  18:../libdaisy/src/hid/usb.h **** class UsbHandle
  19:../libdaisy/src/hid/usb.h **** {
  20:../libdaisy/src/hid/usb.h ****   public:
  21:../libdaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../libdaisy/src/hid/usb.h ****     enum class Result
  23:../libdaisy/src/hid/usb.h ****     {
  24:../libdaisy/src/hid/usb.h ****         OK,
  25:../libdaisy/src/hid/usb.h ****         ERR,
  26:../libdaisy/src/hid/usb.h ****     };
  27:../libdaisy/src/hid/usb.h **** 
  28:../libdaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../libdaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../libdaisy/src/hid/usb.h ****     {
  31:../libdaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../libdaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../libdaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../libdaisy/src/hid/usb.h ****     };
  35:../libdaisy/src/hid/usb.h **** 
  36:../libdaisy/src/hid/usb.h **** 
  37:../libdaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../libdaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../libdaisy/src/hid/usb.h **** 
  40:../libdaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../libdaisy/src/hid/usb.h **** 
  42:../libdaisy/src/hid/usb.h ****     ~UsbHandle() {}
  69              		.loc 4 42 5 is_stmt 1 view .LVU5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 5


  70              		.loc 4 42 5 is_stmt 0 view .LVU6
  71              	.LBE891:
  72              	.LBB892:
  73              	.LBI892:
  74              		.file 5 "../libdaisy/src/per/adc.h"
   1:../libdaisy/src/per/adc.h **** #pragma once
   2:../libdaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../libdaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../libdaisy/src/per/adc.h **** #include <stdint.h>
   5:../libdaisy/src/per/adc.h **** #include <stdlib.h>
   6:../libdaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../libdaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../libdaisy/src/per/adc.h **** 
   9:../libdaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 14 /**< Maximum number of ADC channels */
  10:../libdaisy/src/per/adc.h **** 
  11:../libdaisy/src/per/adc.h **** namespace daisy
  12:../libdaisy/src/per/adc.h **** {
  13:../libdaisy/src/per/adc.h **** /** @addtogroup analog_digital_conversion
  14:../libdaisy/src/per/adc.h ****     @{
  15:../libdaisy/src/per/adc.h **** */
  16:../libdaisy/src/per/adc.h **** 
  17:../libdaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../libdaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../libdaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../libdaisy/src/per/adc.h **** */
  21:../libdaisy/src/per/adc.h **** 
  22:../libdaisy/src/per/adc.h **** /** Configuration Structure for a given channel */
  23:../libdaisy/src/per/adc.h **** struct AdcChannelConfig
  24:../libdaisy/src/per/adc.h **** {
  25:../libdaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  26:../libdaisy/src/per/adc.h ****     enum MuxPin
  27:../libdaisy/src/per/adc.h ****     {
  28:../libdaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  29:../libdaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  30:../libdaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  31:../libdaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  32:../libdaisy/src/per/adc.h ****     };
  33:../libdaisy/src/per/adc.h **** 
  34:../libdaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  35:../libdaisy/src/per/adc.h ****     \param pin Pin to init.
  36:../libdaisy/src/per/adc.h ****      */
  37:../libdaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  38:../libdaisy/src/per/adc.h **** 
  39:../libdaisy/src/per/adc.h ****     /** 
  40:../libdaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  41:../libdaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  42:../libdaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  43:../libdaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  44:../libdaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  45:../libdaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  46:../libdaisy/src/per/adc.h ****     \param mux_0 First mux pin
  47:../libdaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  48:../libdaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  49:../libdaisy/src/per/adc.h ****     \param adc_pin &
  50:../libdaisy/src/per/adc.h ****     */
  51:../libdaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  52:../libdaisy/src/per/adc.h ****                  size_t       mux_channels,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 6


  53:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  54:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  55:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  56:../libdaisy/src/per/adc.h **** 
  57:../libdaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  58:../libdaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  59:../libdaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  60:../libdaisy/src/per/adc.h **** };
  61:../libdaisy/src/per/adc.h **** 
  62:../libdaisy/src/per/adc.h **** /**
  63:../libdaisy/src/per/adc.h ****    Handler for analog to digital conversion
  64:../libdaisy/src/per/adc.h **** */
  65:../libdaisy/src/per/adc.h **** class AdcHandle
  66:../libdaisy/src/per/adc.h **** {
  67:../libdaisy/src/per/adc.h ****   public:
  68:../libdaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  69:../libdaisy/src/per/adc.h ****     enum OverSampling
  70:../libdaisy/src/per/adc.h ****     {
  71:../libdaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  72:../libdaisy/src/per/adc.h ****         OVS_4,    /**< & */
  73:../libdaisy/src/per/adc.h ****         OVS_8,    /**< & */
  74:../libdaisy/src/per/adc.h ****         OVS_16,   /**< & */
  75:../libdaisy/src/per/adc.h ****         OVS_32,   /**< & */
  76:../libdaisy/src/per/adc.h ****         OVS_64,   /**< & */
  77:../libdaisy/src/per/adc.h ****         OVS_128,  /**< & */
  78:../libdaisy/src/per/adc.h ****         OVS_256,  /**< & */
  79:../libdaisy/src/per/adc.h ****         OVS_512,  /**< & */
  80:../libdaisy/src/per/adc.h ****         OVS_1024, /**< & */
  81:../libdaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  82:../libdaisy/src/per/adc.h ****     };
  83:../libdaisy/src/per/adc.h **** 
  84:../libdaisy/src/per/adc.h ****     AdcHandle() {}
  85:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
  75              		.loc 5 85 5 is_stmt 1 view .LVU7
  76              		.loc 5 85 5 is_stmt 0 view .LVU8
  77              	.LBE892:
  78              	.LBB893:
  79              	.LBI893:
  80              		.file 6 "../libdaisy/src/hid/audio.h"
   1:../libdaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../libdaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../libdaisy/src/hid/audio.h **** 
   4:../libdaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../libdaisy/src/hid/audio.h **** 
   6:../libdaisy/src/hid/audio.h **** namespace daisy
   7:../libdaisy/src/hid/audio.h **** {
   8:../libdaisy/src/hid/audio.h **** class AudioHandle
   9:../libdaisy/src/hid/audio.h **** {
  10:../libdaisy/src/hid/audio.h ****   public:
  11:../libdaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  12:../libdaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  13:../libdaisy/src/hid/audio.h ****     struct Config
  14:../libdaisy/src/hid/audio.h ****     {
  15:../libdaisy/src/hid/audio.h ****         size_t                        blocksize;
  16:../libdaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  17:../libdaisy/src/hid/audio.h ****         float                         postgain;
  18:../libdaisy/src/hid/audio.h ****     };
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 7


  19:../libdaisy/src/hid/audio.h **** 
  20:../libdaisy/src/hid/audio.h ****     enum class Result
  21:../libdaisy/src/hid/audio.h ****     {
  22:../libdaisy/src/hid/audio.h ****         OK,
  23:../libdaisy/src/hid/audio.h ****         ERR,
  24:../libdaisy/src/hid/audio.h ****     };
  25:../libdaisy/src/hid/audio.h **** 
  26:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. Both arrays arranged by float[chn][sample] */
  27:../libdaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(float** in, float** out, size_t size);
  28:../libdaisy/src/hid/audio.h **** 
  29:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. 
  30:../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  31:../libdaisy/src/hid/audio.h ****      */
  32:../libdaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(float* in,
  33:../libdaisy/src/hid/audio.h ****                                               float* out,
  34:../libdaisy/src/hid/audio.h ****                                               size_t size);
  35:../libdaisy/src/hid/audio.h **** 
  36:../libdaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  37:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
  81              		.loc 6 37 5 is_stmt 1 view .LVU9
  82              		.loc 6 37 5 is_stmt 0 view .LVU10
  83              	.LBE893:
  84              		.loc 2 22 19 view .LVU11
  85 0000 7047     		bx	lr
  86              		.cfi_endproc
  87              	.LFE1703:
  89              		.weak	_ZN5daisy9DaisySeedD1Ev
  90              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  91 0002 00BF     		.section	.text._ZN7daisysp4AdsrD2Ev,"axG",%progbits,_ZN7daisysp4AdsrD5Ev,comdat
  92              		.align	1
  93              		.p2align 2,,3
  94              		.weak	_ZN7daisysp4AdsrD2Ev
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv5-d16
 100              	_ZN7daisysp4AdsrD2Ev:
 101              	.LVL2:
 102              	.LFB1726:
 103              		.file 7 "../DaisySP/Source/Control/adsr.h"
   1:../DaisySP/Source/Control/adsr.h **** #pragma once
   2:../DaisySP/Source/Control/adsr.h **** #ifndef DSY_ADSR_H
   3:../DaisySP/Source/Control/adsr.h **** #define DSY_ADSR_H
   4:../DaisySP/Source/Control/adsr.h **** 
   5:../DaisySP/Source/Control/adsr.h **** #include <stdint.h>
   6:../DaisySP/Source/Control/adsr.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Control/adsr.h **** 
   8:../DaisySP/Source/Control/adsr.h **** namespace daisysp
   9:../DaisySP/Source/Control/adsr.h **** {
  10:../DaisySP/Source/Control/adsr.h **** /** Distinct stages that the phase of the envelope can be located in.
  11:../DaisySP/Source/Control/adsr.h **** - IDLE   = located at phase location 0, and not currently running
  12:../DaisySP/Source/Control/adsr.h **** - ATTACK  = First segment of envelope where phase moves from 0 to 1
  13:../DaisySP/Source/Control/adsr.h **** - DECAY   = Second segment of envelope where phase moves from 1 to SUSTAIN value
  14:../DaisySP/Source/Control/adsr.h **** - SUSTAIN = Third segment of envelope, stays at SUSTAIN level until GATE is released
  15:../DaisySP/Source/Control/adsr.h **** - RELEASE =     Fourth segment of envelop where phase moves from SUSTAIN to 0
  16:../DaisySP/Source/Control/adsr.h **** - LAST    =  Last segment, aka release
  17:../DaisySP/Source/Control/adsr.h **** */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 8


  18:../DaisySP/Source/Control/adsr.h **** enum
  19:../DaisySP/Source/Control/adsr.h **** {
  20:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_IDLE,
  21:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_ATTACK,
  22:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_DECAY,
  23:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_SUSTAIN,
  24:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_RELEASE,
  25:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_LAST,
  26:../DaisySP/Source/Control/adsr.h **** };
  27:../DaisySP/Source/Control/adsr.h **** 
  28:../DaisySP/Source/Control/adsr.h **** 
  29:../DaisySP/Source/Control/adsr.h **** /** adsr envelope module
  30:../DaisySP/Source/Control/adsr.h **** 
  31:../DaisySP/Source/Control/adsr.h **** Original author(s) : Paul Batchelor
  32:../DaisySP/Source/Control/adsr.h **** 
  33:../DaisySP/Source/Control/adsr.h **** Ported from Soundpipe by Ben Sergentanis, May 2020
  34:../DaisySP/Source/Control/adsr.h **** */
  35:../DaisySP/Source/Control/adsr.h **** class Adsr
  36:../DaisySP/Source/Control/adsr.h **** {
  37:../DaisySP/Source/Control/adsr.h ****   public:
  38:../DaisySP/Source/Control/adsr.h ****     Adsr() {}
  39:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 104              		.loc 7 39 5 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109              		.loc 7 39 14 is_stmt 0 view .LVU13
 110 0000 7047     		bx	lr
 111              		.cfi_endproc
 112              	.LFE1726:
 114              		.weak	_ZN7daisysp4AdsrD1Ev
 115              		.thumb_set _ZN7daisysp4AdsrD1Ev,_ZN7daisysp4AdsrD2Ev
 116 0002 00BF     		.section	.text._ZN7daisysp10OscillatorD2Ev,"axG",%progbits,_ZN7daisysp10OscillatorD5Ev,comdat
 117              		.align	1
 118              		.p2align 2,,3
 119              		.weak	_ZN7daisysp10OscillatorD2Ev
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv5-d16
 125              	_ZN7daisysp10OscillatorD2Ev:
 126              	.LVL3:
 127              	.LFB3340:
 128              		.file 8 "../DaisySP/Source/Synthesis/oscillator.h"
   1:../DaisySP/Source/Synthesis/oscillator.h **** #pragma once
   2:../DaisySP/Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
   3:../DaisySP/Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
   4:../DaisySP/Source/Synthesis/oscillator.h **** #include <stdint.h>
   5:../DaisySP/Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
   6:../DaisySP/Source/Synthesis/oscillator.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Synthesis/oscillator.h **** 
   8:../DaisySP/Source/Synthesis/oscillator.h **** namespace daisysp
   9:../DaisySP/Source/Synthesis/oscillator.h **** {
  10:../DaisySP/Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:../DaisySP/Source/Synthesis/oscillator.h **** */
  12:../DaisySP/Source/Synthesis/oscillator.h **** class Oscillator
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 9


  13:../DaisySP/Source/Synthesis/oscillator.h **** {
  14:../DaisySP/Source/Synthesis/oscillator.h ****   public:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     Oscillator() {}
  16:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 129              		.loc 8 16 5 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134              		.loc 8 16 20 is_stmt 0 view .LVU15
 135 0000 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE3340:
 139              		.weak	_ZN7daisysp10OscillatorD1Ev
 140              		.thumb_set _ZN7daisysp10OscillatorD1Ev,_ZN7daisysp10OscillatorD2Ev
 141 0002 00BF     		.section	.text._ZN7daisysp3SvfD2Ev,"axG",%progbits,_ZN7daisysp3SvfD5Ev,comdat
 142              		.align	1
 143              		.p2align 2,,3
 144              		.weak	_ZN7daisysp3SvfD2Ev
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv5-d16
 150              	_ZN7daisysp3SvfD2Ev:
 151              	.LVL4:
 152              	.LFB3356:
 153              		.file 9 "../DaisySP/Source/Filters/svf.h"
   1:../DaisySP/Source/Filters/svf.h **** #pragma once
   2:../DaisySP/Source/Filters/svf.h **** #ifndef DSY_SVF_H
   3:../DaisySP/Source/Filters/svf.h **** #define DSY_SVF_H
   4:../DaisySP/Source/Filters/svf.h **** 
   5:../DaisySP/Source/Filters/svf.h **** namespace daisysp
   6:../DaisySP/Source/Filters/svf.h **** {
   7:../DaisySP/Source/Filters/svf.h **** /**      Double Sampled, Stable State Variable Filter
   8:../DaisySP/Source/Filters/svf.h **** 
   9:../DaisySP/Source/Filters/svf.h **** Credit to Andrew Simper from musicdsp.org
  10:../DaisySP/Source/Filters/svf.h **** 
  11:../DaisySP/Source/Filters/svf.h **** This is his "State Variable Filter (Double Sampled, Stable)"
  12:../DaisySP/Source/Filters/svf.h **** 
  13:../DaisySP/Source/Filters/svf.h **** Additional thanks to Laurent de Soras for stability limit, and 
  14:../DaisySP/Source/Filters/svf.h **** Stefan Diedrichsen for the correct notch output
  15:../DaisySP/Source/Filters/svf.h **** 
  16:../DaisySP/Source/Filters/svf.h **** Ported by: Stephen Hensley
  17:../DaisySP/Source/Filters/svf.h **** */
  18:../DaisySP/Source/Filters/svf.h **** class Svf
  19:../DaisySP/Source/Filters/svf.h **** {
  20:../DaisySP/Source/Filters/svf.h ****   public:
  21:../DaisySP/Source/Filters/svf.h ****     Svf() {}
  22:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 154              		.loc 9 22 5 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 159              		.loc 9 22 13 is_stmt 0 view .LVU17
 160 0000 7047     		bx	lr
 161              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 10


 162              	.LFE3356:
 164              		.weak	_ZN7daisysp3SvfD1Ev
 165              		.thumb_set _ZN7daisysp3SvfD1Ev,_ZN7daisysp3SvfD2Ev
 166 0002 00BF     		.section	.text._ZN7daisysp9CrossFadeD2Ev,"axG",%progbits,_ZN7daisysp9CrossFadeD5Ev,comdat
 167              		.align	1
 168              		.p2align 2,,3
 169              		.weak	_ZN7daisysp9CrossFadeD2Ev
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv5-d16
 175              	_ZN7daisysp9CrossFadeD2Ev:
 176              	.LVL5:
 177              	.LFB3461:
 178              		.file 10 "../DaisySP/Source/Dynamics/crossfade.h"
   1:../DaisySP/Source/Dynamics/crossfade.h **** #pragma once
   2:../DaisySP/Source/Dynamics/crossfade.h **** #ifndef DSY_CROSSFADE_H
   3:../DaisySP/Source/Dynamics/crossfade.h **** #define DSY_CROSSFADE_H
   4:../DaisySP/Source/Dynamics/crossfade.h **** #include <stdint.h>
   5:../DaisySP/Source/Dynamics/crossfade.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Dynamics/crossfade.h **** 
   7:../DaisySP/Source/Dynamics/crossfade.h **** namespace daisysp
   8:../DaisySP/Source/Dynamics/crossfade.h **** {
   9:../DaisySP/Source/Dynamics/crossfade.h **** /** Curve applied to the CrossFade
  10:../DaisySP/Source/Dynamics/crossfade.h **** - LIN = linear
  11:../DaisySP/Source/Dynamics/crossfade.h **** - CPOW = constant power
  12:../DaisySP/Source/Dynamics/crossfade.h **** - LOG = logarithmic
  13:../DaisySP/Source/Dynamics/crossfade.h **** - EXP  exponential
  14:../DaisySP/Source/Dynamics/crossfade.h **** - LAST = end of enum (used for array indexing)
  15:../DaisySP/Source/Dynamics/crossfade.h **** */
  16:../DaisySP/Source/Dynamics/crossfade.h **** enum
  17:../DaisySP/Source/Dynamics/crossfade.h **** {
  18:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LIN,
  19:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_CPOW,
  20:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LOG,
  21:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_EXP,
  22:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LAST,
  23:../DaisySP/Source/Dynamics/crossfade.h **** };
  24:../DaisySP/Source/Dynamics/crossfade.h **** 
  25:../DaisySP/Source/Dynamics/crossfade.h **** /** Performs a CrossFade between two signals
  26:../DaisySP/Source/Dynamics/crossfade.h **** 
  27:../DaisySP/Source/Dynamics/crossfade.h ****     Original author: Paul Batchelor
  28:../DaisySP/Source/Dynamics/crossfade.h **** 
  29:../DaisySP/Source/Dynamics/crossfade.h ****     Ported from Soundpipe by Andrew Ikenberry
  30:../DaisySP/Source/Dynamics/crossfade.h **** 
  31:../DaisySP/Source/Dynamics/crossfade.h ****     added curve option for constant power, etc.
  32:../DaisySP/Source/Dynamics/crossfade.h **** */
  33:../DaisySP/Source/Dynamics/crossfade.h **** class CrossFade
  34:../DaisySP/Source/Dynamics/crossfade.h **** {
  35:../DaisySP/Source/Dynamics/crossfade.h ****   public:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     CrossFade() {}
  37:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 179              		.loc 10 37 5 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 11


 184              		.loc 10 37 19 is_stmt 0 view .LVU19
 185 0000 7047     		bx	lr
 186              		.cfi_endproc
 187              	.LFE3461:
 189              		.weak	_ZN7daisysp9CrossFadeD1Ev
 190              		.thumb_set _ZN7daisysp9CrossFadeD1Ev,_ZN7daisysp9CrossFadeD2Ev
 191 0002 00BF     		.section	.text._ZN7daisysp7DcBlockD2Ev,"axG",%progbits,_ZN7daisysp7DcBlockD5Ev,comdat
 192              		.align	1
 193              		.p2align 2,,3
 194              		.weak	_ZN7daisysp7DcBlockD2Ev
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu fpv5-d16
 200              	_ZN7daisysp7DcBlockD2Ev:
 201              	.LVL6:
 202              	.LFB3753:
 203              		.file 11 "../DaisySP/Source/Utility/dcblock.h"
   1:../DaisySP/Source/Utility/dcblock.h **** 
   2:../DaisySP/Source/Utility/dcblock.h **** #pragma once
   3:../DaisySP/Source/Utility/dcblock.h **** #ifndef DSY_DCBLOCK_H
   4:../DaisySP/Source/Utility/dcblock.h **** #define DSY_DCBLOCK_H
   5:../DaisySP/Source/Utility/dcblock.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Utility/dcblock.h **** 
   7:../DaisySP/Source/Utility/dcblock.h **** namespace daisysp
   8:../DaisySP/Source/Utility/dcblock.h **** {
   9:../DaisySP/Source/Utility/dcblock.h **** /** Removes DC component of a signal
  10:../DaisySP/Source/Utility/dcblock.h ****     */
  11:../DaisySP/Source/Utility/dcblock.h **** class DcBlock
  12:../DaisySP/Source/Utility/dcblock.h **** {
  13:../DaisySP/Source/Utility/dcblock.h ****   public:
  14:../DaisySP/Source/Utility/dcblock.h ****     DcBlock(){};
  15:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 204              		.loc 11 15 5 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 209              		.loc 11 15 16 is_stmt 0 view .LVU21
 210 0000 7047     		bx	lr
 211              		.cfi_endproc
 212              	.LFE3753:
 214              		.weak	_ZN7daisysp7DcBlockD1Ev
 215              		.thumb_set _ZN7daisysp7DcBlockD1Ev,_ZN7daisysp7DcBlockD2Ev
 216 0002 00BF     		.section	.text._ZN7daisysp9EnvFollowD2Ev,"axG",%progbits,_ZN7daisysp9EnvFollowD5Ev,comdat
 217              		.align	1
 218              		.p2align 2,,3
 219              		.weak	_ZN7daisysp9EnvFollowD2Ev
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu fpv5-d16
 225              	_ZN7daisysp9EnvFollowD2Ev:
 226              	.LVL7:
 227              	.LFB3940:
 228              		.file 12 "envFollow.h"
   1:envFollow.h   **** // Copyright 2021 Adam Fulford
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 12


   2:envFollow.h   **** // 
   3:envFollow.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:envFollow.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:envFollow.h   **** // in the Software without restriction, including without limitation the rights
   6:envFollow.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:envFollow.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:envFollow.h   **** // furnished to do so, subject to the following conditions:
   9:envFollow.h   **** // 
  10:envFollow.h   **** // The above copyright notice and this permission notice shall be included in
  11:envFollow.h   **** // all copies or substantial portions of the Software.
  12:envFollow.h   **** // 
  13:envFollow.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:envFollow.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:envFollow.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:envFollow.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:envFollow.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:envFollow.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:envFollow.h   **** // THE SOFTWARE.
  20:envFollow.h   **** // 
  21:envFollow.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:envFollow.h   **** 
  23:envFollow.h   **** #ifndef ENV_FOLLOW_H
  24:envFollow.h   **** #define ENV_FOLLOW_H
  25:envFollow.h   **** #include <math.h>
  26:envFollow.h   **** 
  27:envFollow.h   **** namespace daisysp
  28:envFollow.h   **** {
  29:envFollow.h   **** 
  30:envFollow.h   **** class EnvFollow
  31:envFollow.h   **** {
  32:envFollow.h   ****     private:
  33:envFollow.h   ****     
  34:envFollow.h   ****     float avg;      //exp average of input
  35:envFollow.h   ****     float pos_sample;   //positive sample
  36:envFollow.h   ****     float sample_noDC;  //no DC sample
  37:envFollow.h   ****     float avg_env;  //average envelope
  38:envFollow.h   ****     float w;        //weighting
  39:envFollow.h   ****     float w_env;    //envelope weighting
  40:envFollow.h   **** 
  41:envFollow.h   ****     public:
  42:envFollow.h   **** 
  43:envFollow.h   ****     EnvFollow() //default constructor
  44:envFollow.h   ****     {
  45:envFollow.h   ****         avg = 0.0f;      //exp average of input
  46:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
  47:envFollow.h   ****         avg_env = 0.0f;  //average envelope
  48:envFollow.h   ****         w = 0.0001f;        //weighting
  49:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
  50:envFollow.h   ****         sample_noDC = 0.0f;
  51:envFollow.h   ****     }  
  52:envFollow.h   ****     ~EnvFollow() {}
 229              		.loc 12 52 5 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              		.loc 12 52 19 is_stmt 0 view .LVU23
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 13


 235 0000 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE3940:
 239              		.weak	_ZN7daisysp9EnvFollowD1Ev
 240              		.thumb_set _ZN7daisysp9EnvFollowD1Ev,_ZN7daisysp9EnvFollowD2Ev
 241 0002 00BF     		.section	.text._ZN8TaptempoD2Ev,"axG",%progbits,_ZN8TaptempoD5Ev,comdat
 242              		.align	1
 243              		.p2align 2,,3
 244              		.weak	_ZN8TaptempoD2Ev
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu fpv5-d16
 250              	_ZN8TaptempoD2Ev:
 251              	.LVL8:
 252              	.LFB3947:
 253              		.file 13 "taptempo.h"
   1:taptempo.h    **** // Copyright 2021 Adam Fulford
   2:taptempo.h    **** // 
   3:taptempo.h    **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:taptempo.h    **** // of this software and associated documentation files (the "Software"), to deal
   5:taptempo.h    **** // in the Software without restriction, including without limitation the rights
   6:taptempo.h    **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:taptempo.h    **** // copies of the Software, and to permit persons to whom the Software is
   8:taptempo.h    **** // furnished to do so, subject to the following conditions:
   9:taptempo.h    **** // 
  10:taptempo.h    **** // The above copyright notice and this permission notice shall be included in
  11:taptempo.h    **** // all copies or substantial portions of the Software.
  12:taptempo.h    **** // 
  13:taptempo.h    **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:taptempo.h    **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:taptempo.h    **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:taptempo.h    **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:taptempo.h    **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:taptempo.h    **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:taptempo.h    **** // THE SOFTWARE.
  20:taptempo.h    **** // 
  21:taptempo.h    **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:taptempo.h    **** 
  23:taptempo.h    **** #ifndef TAP_TEMPO_H
  24:taptempo.h    **** #define TAP_TEMPO_H
  25:taptempo.h    **** 
  26:taptempo.h    **** #include "daisysp.h"
  27:taptempo.h    **** #include "daisy_seed.h"
  28:taptempo.h    **** 
  29:taptempo.h    **** using namespace daisy;
  30:taptempo.h    **** using namespace daisysp;
  31:taptempo.h    **** 
  32:taptempo.h    **** class Taptempo
  33:taptempo.h    **** {
  34:taptempo.h    ****     private:
  35:taptempo.h    ****         uint32_t mintap_,maxtap_;
  36:taptempo.h    ****         uint32_t currentTime_,lastTime_,lastTapLength_,tapLength_;
  37:taptempo.h    ****         uint32_t clockLength_, lastClockLength_, clockThresh_;
  38:taptempo.h    ****         bool tapflag_;
  39:taptempo.h    ****         float tap_tolerance_;
  40:taptempo.h    ****         float tempo_, tapRatio_;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 14


  41:taptempo.h    **** 
  42:taptempo.h    ****     public:
  43:taptempo.h    **** 
  44:taptempo.h    ****     Taptempo()  //default constructor
  45:taptempo.h    ****     {
  46:taptempo.h    ****         tapflag_ = false;
  47:taptempo.h    ****         tap_tolerance_ = 1.25f;
  48:taptempo.h    ****         maxtap_ = 2000000;
  49:taptempo.h    ****         mintap_ = 80000;
  50:taptempo.h    ****         lastTapLength_ = 0;
  51:taptempo.h    ****         tempo_ = 500000.0f;
  52:taptempo.h    ****         lastTime_ = 0;
  53:taptempo.h    ****         currentTime_ = 0;
  54:taptempo.h    ****         tapRatio_ = 1.0f;
  55:taptempo.h    ****         clockLength_ = 0;
  56:taptempo.h    ****         lastClockLength_ = 0;
  57:taptempo.h    ****         clockThresh_ = 10000; //Us change
  58:taptempo.h    ****     }
  59:taptempo.h    ****     ~Taptempo() {}
 254              		.loc 13 59 5 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259              		.loc 13 59 18 is_stmt 0 view .LVU25
 260 0000 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE3947:
 264              		.weak	_ZN8TaptempoD1Ev
 265              		.thumb_set _ZN8TaptempoD1Ev,_ZN8TaptempoD2Ev
 266 0002 00BF     		.section	.text._ZN8TempoLEDD2Ev,"axG",%progbits,_ZN8TempoLEDD5Ev,comdat
 267              		.align	1
 268              		.p2align 2,,3
 269              		.weak	_ZN8TempoLEDD2Ev
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv5-d16
 275              	_ZN8TempoLEDD2Ev:
 276              	.LVL9:
 277              	.LFB3970:
 278              		.file 14 "LEDs.h"
   1:LEDs.h        **** // Copyright 2021 Adam Fulford
   2:LEDs.h        **** // 
   3:LEDs.h        **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:LEDs.h        **** // of this software and associated documentation files (the "Software"), to deal
   5:LEDs.h        **** // in the Software without restriction, including without limitation the rights
   6:LEDs.h        **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:LEDs.h        **** // copies of the Software, and to permit persons to whom the Software is
   8:LEDs.h        **** // furnished to do so, subject to the following conditions:
   9:LEDs.h        **** // 
  10:LEDs.h        **** // The above copyright notice and this permission notice shall be included in
  11:LEDs.h        **** // all copies or substantial portions of the Software.
  12:LEDs.h        **** // 
  13:LEDs.h        **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:LEDs.h        **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:LEDs.h        **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 15


  16:LEDs.h        **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:LEDs.h        **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:LEDs.h        **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:LEDs.h        **** // THE SOFTWARE.
  20:LEDs.h        **** // 
  21:LEDs.h        **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:LEDs.h        **** 
  23:LEDs.h        **** #ifndef LEDS_H
  24:LEDs.h        **** #define LEDS_H
  25:LEDs.h        **** 
  26:LEDs.h        **** #include "daisysp.h"
  27:LEDs.h        **** #include "daisy_seed.h"
  28:LEDs.h        **** #include "oscillator_p.h"
  29:LEDs.h        **** #include "constants.h"
  30:LEDs.h        **** 
  31:LEDs.h        **** using namespace daisysp;
  32:LEDs.h        **** using namespace daisy;
  33:LEDs.h        **** 
  34:LEDs.h        **** class TempoLED
  35:LEDs.h        **** {
  36:LEDs.h        **** 
  37:LEDs.h        **** Led led;
  38:LEDs.h        **** Oscillator_p blink;
  39:LEDs.h        **** TempoDivs div_last_;
  40:LEDs.h        **** //int phaseCounter_;
  41:LEDs.h        **** //int div_int;
  42:LEDs.h        **** //float phase_last_;
  43:LEDs.h        **** float GetDivInt(TempoDivs div);
  44:LEDs.h        **** 
  45:LEDs.h        **** public:
  46:LEDs.h        **** 
  47:LEDs.h        **** TempoLED(){}
  48:LEDs.h        **** ~TempoLED(){}   //destructor
 279              		.loc 14 48 1 is_stmt 1 view -0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284              	.LBB894:
 285              	.LBI894:
 286              		.file 15 "oscillator_p.h"
   1:oscillator_p.h **** #pragma once
   2:oscillator_p.h **** #ifndef DSY_OSCILLATOR_P_H
   3:oscillator_p.h **** #define DSY_OSCILLATOR_P_H
   4:oscillator_p.h **** #include <stdint.h>
   5:oscillator_p.h **** #include "Utility/dsp.h"
   6:oscillator_p.h **** #ifdef __cplusplus
   7:oscillator_p.h **** 
   8:oscillator_p.h **** namespace daisysp
   9:oscillator_p.h **** {
  10:oscillator_p.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:oscillator_p.h **** */
  12:oscillator_p.h **** class Oscillator_p
  13:oscillator_p.h **** {
  14:oscillator_p.h ****   public:
  15:oscillator_p.h ****     Oscillator_p() {}
  16:oscillator_p.h ****     ~Oscillator_p() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 16


 287              		.loc 15 16 5 view .LVU27
 288              		.loc 15 16 5 is_stmt 0 view .LVU28
 289              	.LBE894:
 290              	.LBB895:
 291              	.LBI895:
 292              		.file 16 "../libdaisy/src/hid/led.h"
   1:../libdaisy/src/hid/led.h **** 
   2:../libdaisy/src/hid/led.h **** #pragma once
   3:../libdaisy/src/hid/led.h **** #ifndef DSY_LED_H
   4:../libdaisy/src/hid/led.h **** #define DSY_LED_H
   5:../libdaisy/src/hid/led.h **** #include "daisy_core.h"
   6:../libdaisy/src/hid/led.h **** #include "per/gpio.h"
   7:../libdaisy/src/hid/led.h **** 
   8:../libdaisy/src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../libdaisy/src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../libdaisy/src/hid/led.h **** */
  11:../libdaisy/src/hid/led.h **** 
  12:../libdaisy/src/hid/led.h **** namespace daisy
  13:../libdaisy/src/hid/led.h **** {
  14:../libdaisy/src/hid/led.h **** /**
  15:../libdaisy/src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../libdaisy/src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../libdaisy/src/hid/led.h ****     @author shensley
  18:../libdaisy/src/hid/led.h ****     @date March 2020
  19:../libdaisy/src/hid/led.h ****     @ingroup feedback
  20:../libdaisy/src/hid/led.h **** */
  21:../libdaisy/src/hid/led.h **** class Led
  22:../libdaisy/src/hid/led.h **** {
  23:../libdaisy/src/hid/led.h ****   public:
  24:../libdaisy/src/hid/led.h ****     Led() {}
  25:../libdaisy/src/hid/led.h ****     ~Led() {}
 293              		.loc 16 25 5 is_stmt 1 view .LVU29
 294              		.loc 16 25 5 is_stmt 0 view .LVU30
 295              	.LBE895:
 296              		.loc 14 48 13 view .LVU31
 297 0000 7047     		bx	lr
 298              		.cfi_endproc
 299              	.LFE3970:
 301              		.weak	_ZN8TempoLEDD1Ev
 302              		.thumb_set _ZN8TempoLEDD1Ev,_ZN8TempoLEDD2Ev
 303 0002 00BF     		.section	.text._ZN9ButtonLEDD2Ev,"axG",%progbits,_ZN9ButtonLEDD5Ev,comdat
 304              		.align	1
 305              		.p2align 2,,3
 306              		.weak	_ZN9ButtonLEDD2Ev
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 310              		.fpu fpv5-d16
 312              	_ZN9ButtonLEDD2Ev:
 313              	.LVL10:
 314              	.LFB3977:
  49:LEDs.h        **** 
  50:LEDs.h        **** void init(dsy_gpio_pin ledpin, float samplerate);  //led pin number
  51:LEDs.h        **** 
  52:LEDs.h        **** void setTempo(float tempo);
  53:LEDs.h        **** 
  54:LEDs.h        **** void resetPhase();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 17


  55:LEDs.h        **** 
  56:LEDs.h        **** void resetPhaseCounter();
  57:LEDs.h        **** 
  58:LEDs.h        **** //update using oscillator
  59:LEDs.h        **** void update();
  60:LEDs.h        **** 
  61:LEDs.h        **** //update using external sync
  62:LEDs.h        **** void update(TempoDivs div, float phase);
  63:LEDs.h        **** 
  64:LEDs.h        **** void LED_set(float brightness);
  65:LEDs.h        **** 
  66:LEDs.h        **** bool isEOC();
  67:LEDs.h        **** 
  68:LEDs.h        **** //high if just had a div change
  69:LEDs.h        **** //bool divChange();
  70:LEDs.h        **** 
  71:LEDs.h        **** float GetPhase() { return blink.GetPhase(); }
  72:LEDs.h        **** 
  73:LEDs.h        **** };
  74:LEDs.h        **** 
  75:LEDs.h        **** class ButtonLED    //button with status LED
  76:LEDs.h        **** {
  77:LEDs.h        ****     public:
  78:LEDs.h        ****     ButtonLED() {}
  79:LEDs.h        ****     ~ButtonLED() {}
 315              		.loc 14 79 5 is_stmt 1 view -0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              		@ link register save eliminated.
 320              	.LBB896:
 321              	.LBI896:
 322              		.loc 16 25 5 view .LVU33
 323              		.loc 16 25 5 is_stmt 0 view .LVU34
 324              	.LBE896:
 325              	.LBB897:
 326              	.LBI897:
 327              		.loc 1 41 5 is_stmt 1 view .LVU35
 328              		.loc 1 41 5 is_stmt 0 view .LVU36
 329              	.LBE897:
 330              		.loc 14 79 19 view .LVU37
 331 0000 7047     		bx	lr
 332              		.cfi_endproc
 333              	.LFE3977:
 335              		.weak	_ZN9ButtonLEDD1Ev
 336              		.thumb_set _ZN9ButtonLEDD1Ev,_ZN9ButtonLEDD2Ev
 337 0002 00BF     		.section	.text._ZN10DelayMultiD2Ev,"axG",%progbits,_ZN10DelayMultiD5Ev,comdat
 338              		.align	1
 339              		.p2align 2,,3
 340              		.weak	_ZN10DelayMultiD2Ev
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu fpv5-d16
 346              	_ZN10DelayMultiD2Ev:
 347              	.LVL11:
 348              	.LFB3983:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 18


 349              		.file 17 "DelayMulti.h"
   1:DelayMulti.h  **** // Copyright 2021 Adam Fulford
   2:DelayMulti.h  **** // 
   3:DelayMulti.h  **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:DelayMulti.h  **** // of this software and associated documentation files (the "Software"), to deal
   5:DelayMulti.h  **** // in the Software without restriction, including without limitation the rights
   6:DelayMulti.h  **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:DelayMulti.h  **** // copies of the Software, and to permit persons to whom the Software is
   8:DelayMulti.h  **** // furnished to do so, subject to the following conditions:
   9:DelayMulti.h  **** // 
  10:DelayMulti.h  **** // The above copyright notice and this permission notice shall be included in
  11:DelayMulti.h  **** // all copies or substantial portions of the Software.
  12:DelayMulti.h  **** // 
  13:DelayMulti.h  **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:DelayMulti.h  **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:DelayMulti.h  **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:DelayMulti.h  **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:DelayMulti.h  **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:DelayMulti.h  **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:DelayMulti.h  **** // THE SOFTWARE.
  20:DelayMulti.h  **** // 
  21:DelayMulti.h  **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:DelayMulti.h  **** 
  23:DelayMulti.h  **** #ifndef DELAYMULTI_H
  24:DelayMulti.h  **** #define DELAYMULTI_H
  25:DelayMulti.h  **** 
  26:DelayMulti.h  **** #include "daisysp.h"
  27:DelayMulti.h  **** #include "daisy_seed.h"
  28:DelayMulti.h  **** #include "delayline_multitap.h" //modified delayline
  29:DelayMulti.h  **** #include "constants.h"
  30:DelayMulti.h  **** #include "LEDs.h"
  31:DelayMulti.h  **** #include "scale.h"
  32:DelayMulti.h  **** 
  33:DelayMulti.h  **** using namespace daisysp;
  34:DelayMulti.h  **** using namespace daisy;
  35:DelayMulti.h  **** 
  36:DelayMulti.h  **** constexpr size_t numHeads{1};
  37:DelayMulti.h  **** //constexpr size_t numHeadsSets{2};
  38:DelayMulti.h  **** constexpr size_t totalNumHeads{2};
  39:DelayMulti.h  **** 
  40:DelayMulti.h  **** constexpr float delaytime_threshold{50};   //in samples
  41:DelayMulti.h  **** constexpr uint32_t timethresh{25}; //length of wait before triggering xfade (used to be 75)
  42:DelayMulti.h  **** 
  43:DelayMulti.h  **** class DelayMulti
  44:DelayMulti.h  **** {
  45:DelayMulti.h  **** public:
  46:DelayMulti.h  **** DelayLineMultiTap <float, static_cast<size_t>(48000 * 36.0f)>  *del; //36 second buffer
  47:DelayMulti.h  **** //tempoLED
  48:DelayMulti.h  **** TempoLED tempoled;
  49:DelayMulti.h  **** DelayMulti() {}
  50:DelayMulti.h  **** ~DelayMulti() {}
 350              		.loc 17 50 1 is_stmt 1 view -0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354              		@ link register save eliminated.
 355              	.LBB898:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 19


 356              	.LBI898:
  48:LEDs.h        **** 
 357              		.loc 14 48 1 view .LVU39
 358              	.LBB899:
 359              	.LBI899:
 360              		.loc 15 16 5 view .LVU40
 361              		.loc 15 16 5 is_stmt 0 view .LVU41
 362              	.LBE899:
 363              	.LBB900:
 364              	.LBI900:
 365              		.loc 16 25 5 is_stmt 1 view .LVU42
 366              		.loc 16 25 5 is_stmt 0 view .LVU43
 367              	.LBE900:
 368              	.LBE898:
 369              		.loc 17 50 16 view .LVU44
 370 0000 7047     		bx	lr
 371              		.cfi_endproc
 372              	.LFE3983:
 374              		.weak	_ZN10DelayMultiD1Ev
 375              		.thumb_set _ZN10DelayMultiD1Ev,_ZN10DelayMultiD2Ev
 376 0002 00BF     		.section	.text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev,"axG",%progbits,_ZN7daisysp17DelayL
 377              		.align	1
 378              		.p2align 2,,3
 379              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 383              		.fpu fpv5-d16
 385              	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:
 386              	.LVL12:
 387              	.LFB4914:
 388              		.file 18 "delayline_multitap.h"
   1:delayline_multitap.h **** // Copyright 2021 Adam Fulford
   2:delayline_multitap.h **** // 
   3:delayline_multitap.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_multitap.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_multitap.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_multitap.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_multitap.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_multitap.h **** // furnished to do so, subject to the following conditions:
   9:delayline_multitap.h **** // 
  10:delayline_multitap.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_multitap.h **** // all copies or substantial portions of the Software.
  12:delayline_multitap.h **** // 
  13:delayline_multitap.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_multitap.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_multitap.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_multitap.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_multitap.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_multitap.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_multitap.h **** // THE SOFTWARE.
  20:delayline_multitap.h **** // 
  21:delayline_multitap.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_multitap.h **** 
  23:delayline_multitap.h **** #pragma once
  24:delayline_multitap.h **** #ifndef DSY_DELAY_MULTITAP_H
  25:delayline_multitap.h **** #define DSY_DELAY_MULTITAP_H
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 20


  26:delayline_multitap.h **** #include <stdlib.h>
  27:delayline_multitap.h **** #include <stdint.h>
  28:delayline_multitap.h **** #include <array>
  29:delayline_multitap.h **** namespace daisysp
  30:delayline_multitap.h **** {
  31:delayline_multitap.h **** /** Mulitap Delay line.
  32:delayline_multitap.h **** 
  33:delayline_multitap.h **** DelayLine<float, SAMPLE_RATE> del;
  34:delayline_multitap.h **** 
  35:delayline_multitap.h **** By: Adam Fulford
  36:delayline_multitap.h **** */
  37:delayline_multitap.h **** template <typename T, size_t max_size>
  38:delayline_multitap.h **** class DelayLineMultiTap
  39:delayline_multitap.h **** {
  40:delayline_multitap.h **** private:
  41:delayline_multitap.h ****     size_t write_ptr_;
  42:delayline_multitap.h ****     std::array<size_t, 16> delay_;    //array to hold delay times for upto 16 read heads.
  43:delayline_multitap.h ****     std::array<float, 16> frac_;
  44:delayline_multitap.h ****     T      line_[max_size];
  45:delayline_multitap.h ****     size_t num_heads_;
  46:delayline_multitap.h **** 
  47:delayline_multitap.h ****   public:
  48:delayline_multitap.h ****     DelayLineMultiTap() 
  49:delayline_multitap.h ****     {
  50:delayline_multitap.h ****        // num_heads_ = 16; //Why can't I do this in the default constructor?! Compiles but does not
  51:delayline_multitap.h ****     }
  52:delayline_multitap.h ****     ~DelayLineMultiTap() {}
 389              		.loc 18 52 5 is_stmt 1 view -0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              		@ link register save eliminated.
 394              		.loc 18 52 27 is_stmt 0 view .LVU46
 395 0000 7047     		bx	lr
 396              		.cfi_endproc
 397              	.LFE4914:
 399              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 400              		.thumb_set _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev,_ZN7daisysp17DelayLineMultiTapIfLj17280
 401 0002 00BF     		.section	.text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev,"axG",%progbits,_ZN7daisysp16DelayLin
 402              		.align	1
 403              		.p2align 2,,3
 404              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu fpv5-d16
 410              	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:
 411              	.LVL13:
 412              	.LFB4917:
 413              		.file 19 "delayline_reverse.h"
   1:delayline_reverse.h **** // Copyright 2021 Adam Fulford
   2:delayline_reverse.h **** // 
   3:delayline_reverse.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_reverse.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_reverse.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_reverse.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_reverse.h **** // copies of the Software, and to permit persons to whom the Software is
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 21


   8:delayline_reverse.h **** // furnished to do so, subject to the following conditions:
   9:delayline_reverse.h **** // 
  10:delayline_reverse.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_reverse.h **** // all copies or substantial portions of the Software.
  12:delayline_reverse.h **** // 
  13:delayline_reverse.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_reverse.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_reverse.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_reverse.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_reverse.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_reverse.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_reverse.h **** // THE SOFTWARE.
  20:delayline_reverse.h **** // 
  21:delayline_reverse.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_reverse.h **** 
  23:delayline_reverse.h **** #pragma once
  24:delayline_reverse.h **** #ifndef DSY_DELAY_REVERSE_H
  25:delayline_reverse.h **** #define DSY_DELAY_REVERSE_H
  26:delayline_reverse.h **** #include <stdlib.h>
  27:delayline_reverse.h **** #include <stdint.h>
  28:delayline_reverse.h **** #include <math.h>
  29:delayline_reverse.h **** namespace daisysp
  30:delayline_reverse.h **** {
  31:delayline_reverse.h **** /** Reverse Delay line
  32:delayline_reverse.h **** By: Adam Fulford
  33:delayline_reverse.h **** */
  34:delayline_reverse.h **** template <typename T, size_t max_size>
  35:delayline_reverse.h **** class DelayLineReverse
  36:delayline_reverse.h **** {
  37:delayline_reverse.h ****   public:
  38:delayline_reverse.h ****     DelayLineReverse() {}
  39:delayline_reverse.h ****     ~DelayLineReverse() {}
 414              		.loc 19 39 5 is_stmt 1 view -0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              		@ link register save eliminated.
 419              		.loc 19 39 26 is_stmt 0 view .LVU48
 420 0000 7047     		bx	lr
 421              		.cfi_endproc
 422              	.LFE4917:
 424              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 425              		.thumb_set _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev,_ZN7daisysp16DelayLineReverseIfLj600000EE
 426 0002 00BF     		.section	.text._Z10InitDelaysf,"ax",%progbits
 427              		.align	1
 428              		.p2align 2,,3
 429              		.global	_Z10InitDelaysf
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 433              		.fpu fpv5-d16
 435              	_Z10InitDelaysf:
 436              	.LVL14:
 437              	.LFB4310:
 438              		.file 20 "Veno-Echo.cpp"
   1:Veno-Echo.cpp **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.cpp **** // 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 22


   3:Veno-Echo.cpp **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.cpp **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.cpp **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.cpp **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.cpp **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.cpp **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.cpp **** // 
  10:Veno-Echo.cpp **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.cpp **** // all copies or substantial portions of the Software.
  12:Veno-Echo.cpp **** // 
  13:Veno-Echo.cpp **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.cpp **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.cpp **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.cpp **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.cpp **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.cpp **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.cpp **** // THE SOFTWARE.
  20:Veno-Echo.cpp **** // 
  21:Veno-Echo.cpp **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.cpp **** 
  23:Veno-Echo.cpp **** #include "Veno-Echo.h"
  24:Veno-Echo.cpp **** #include "QSPI_Settings.h"
  25:Veno-Echo.cpp **** #include "daisysp.h"
  26:Veno-Echo.cpp **** #include "delayline_multitap.h" //modified delayline
  27:Veno-Echo.cpp **** #include "delayline_reverse.h"  //reverse delayline
  28:Veno-Echo.cpp **** #include "envFollow.h"
  29:Veno-Echo.cpp **** #include "scale.h"
  30:Veno-Echo.cpp **** #include "constants.h"
  31:Veno-Echo.cpp **** #include "taptempo.h"
  32:Veno-Echo.cpp **** #include "LEDs.h"
  33:Veno-Echo.cpp **** #include "DelayMulti.h"
  34:Veno-Echo.cpp **** #include <math.h>
  35:Veno-Echo.cpp **** #include <string.h>
  36:Veno-Echo.cpp **** #include <atomic>
  37:Veno-Echo.cpp **** 
  38:Veno-Echo.cpp **** using namespace daisysp;
  39:Veno-Echo.cpp **** 
  40:Veno-Echo.cpp **** static Svf LPF_L;
  41:Veno-Echo.cpp **** static Svf LPF_R;
  42:Veno-Echo.cpp **** static Svf HPF_L;
  43:Veno-Echo.cpp **** static Svf HPF_R;
  44:Veno-Echo.cpp **** 
  45:Veno-Echo.cpp **** static Svf LPF_L_post;
  46:Veno-Echo.cpp **** static Svf LPF_R_post;
  47:Veno-Echo.cpp **** static Svf HPF_L_post;
  48:Veno-Echo.cpp **** static Svf HPF_R_post;
  49:Veno-Echo.cpp **** 
  50:Veno-Echo.cpp **** static Oscillator lfo;
  51:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
  52:Veno-Echo.cpp **** 
  53:Veno-Echo.cpp **** static DcBlock DcBlock_LFB, DcBlock_RFB; //DC blocks
  54:Veno-Echo.cpp **** 
  55:Veno-Echo.cpp **** // Declare a DelayLine of MAX_DELAY number of floats.
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsL;
  57:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
  58:Veno-Echo.cpp **** 
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsL_REV; //10 s
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 23


  60:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
  61:Veno-Echo.cpp **** 
  62:Veno-Echo.cpp **** struct DelayRev
  63:Veno-Echo.cpp **** {
  64:Veno-Echo.cpp ****     DelayLineReverse <float, static_cast<size_t>(maxRevDelay*2.5f)>  *del;
  65:Veno-Echo.cpp ****     float currentDelay_;
  66:Veno-Echo.cpp ****     //float delayTarget;
  67:Veno-Echo.cpp **** 
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
  69:Veno-Echo.cpp ****     {
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
  71:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
  72:Veno-Echo.cpp ****         {
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
  75:Veno-Echo.cpp ****             //del -> Reset();
  76:Veno-Echo.cpp ****         }
  77:Veno-Echo.cpp ****     }
  78:Veno-Echo.cpp **** 
  79:Veno-Echo.cpp ****     float Read()
  80:Veno-Echo.cpp ****     {
  81:Veno-Echo.cpp ****         //read from head1
  82:Veno-Echo.cpp ****         float read = del -> ReadRev();
  83:Veno-Echo.cpp ****         return read;
  84:Veno-Echo.cpp ****     }
  85:Veno-Echo.cpp **** 
  86:Veno-Echo.cpp ****     float FwdFbk()
  87:Veno-Echo.cpp ****     {
  88:Veno-Echo.cpp ****         float read = del -> ReadFwd();
  89:Veno-Echo.cpp ****         return read;
  90:Veno-Echo.cpp ****     }
  91:Veno-Echo.cpp **** 
  92:Veno-Echo.cpp ****     void Write(float in)    //sort out feedback in audiocallback
  93:Veno-Echo.cpp ****     {
  94:Veno-Echo.cpp ****         del -> Write(in);
  95:Veno-Echo.cpp ****     }
  96:Veno-Echo.cpp **** };
  97:Veno-Echo.cpp **** 
  98:Veno-Echo.cpp **** DelayMulti delayL,delayR;
  99:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 100:Veno-Echo.cpp **** 
 101:Veno-Echo.cpp **** //LED objects:
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 103:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 104:Veno-Echo.cpp **** 
 105:Veno-Echo.cpp **** 
 106:Veno-Echo.cpp **** float delayTimeL_CV{};
 107:Veno-Echo.cpp **** float delayTimeR_CV{};
 108:Veno-Echo.cpp **** 
 109:Veno-Echo.cpp **** float feedbackL{};
 110:Veno-Echo.cpp **** float feedbackL_CV{};
 111:Veno-Echo.cpp **** 
 112:Veno-Echo.cpp **** float feedbackR{};
 113:Veno-Echo.cpp **** float feedbackR_CV{};
 114:Veno-Echo.cpp **** 
 115:Veno-Echo.cpp **** float crossfeedback{};
 116:Veno-Echo.cpp **** float crossfeedback_CV{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 24


 117:Veno-Echo.cpp **** 
 118:Veno-Echo.cpp **** float drywet{0.5};
 119:Veno-Echo.cpp **** float drywet_CV{};
 120:Veno-Echo.cpp **** 
 121:Veno-Echo.cpp **** float width{1.0};
 122:Veno-Echo.cpp **** float width_CV{};
 123:Veno-Echo.cpp **** 
 124:Veno-Echo.cpp **** float filterXfade{};
 125:Veno-Echo.cpp **** 
 126:Veno-Echo.cpp **** //TempoDivs div_L{};
 127:Veno-Echo.cpp **** //TempoDivs div_R{};
 128:Veno-Echo.cpp **** 
 129:Veno-Echo.cpp **** float ModDepth{0.0f};   //100.0 is a lot!
 130:Veno-Echo.cpp **** 
 131:Veno-Echo.cpp **** //float modulation_CV{};
 132:Veno-Echo.cpp **** float modulation_CV_Raw{};
 133:Veno-Echo.cpp **** 
 134:Veno-Echo.cpp **** bool syncMode{false};
 135:Veno-Echo.cpp **** bool shift{false};  //global variable for secondary shift functions
 136:Veno-Echo.cpp **** bool mute{};
 137:Veno-Echo.cpp **** 
 138:Veno-Echo.cpp **** bool ClockInFlag{false};
 139:Veno-Echo.cpp **** bool PostFilters{false};
 140:Veno-Echo.cpp **** 
 141:Veno-Echo.cpp **** std::atomic<bool> save_flag{};
 142:Veno-Echo.cpp **** 
 143:Veno-Echo.cpp **** SaveState saveState{IDLE};
 144:Veno-Echo.cpp **** 
 145:Veno-Echo.cpp **** float DELAYL_DEBUG;
 146:Veno-Echo.cpp **** float DELAYR_DEBUG;
 147:Veno-Echo.cpp **** float PHASE_DEBUG;
 148:Veno-Echo.cpp **** 
 149:Veno-Echo.cpp **** static Adsr FwdRevLEnv;
 150:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 151:Veno-Echo.cpp **** 
 152:Veno-Echo.cpp **** static Adsr LPF_Env;
 153:Veno-Echo.cpp **** static Adsr HPF_Env;
 154:Veno-Echo.cpp **** 
 155:Veno-Echo.cpp **** static CrossFade FwdRevLXfade;  //crossfades for reverse delay into fwd delay
 156:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 157:Veno-Echo.cpp **** 
 158:Veno-Echo.cpp **** static CrossFade WidthXfade;
 159:Veno-Echo.cpp **** 
 160:Veno-Echo.cpp **** //crossfades for switching in and out of filters
 161:Veno-Echo.cpp **** static CrossFade LPF_LXfade;
 162:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 163:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 164:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 165:Veno-Echo.cpp **** 
 166:Veno-Echo.cpp **** //crossfades for switching in and out of post filters
 167:Veno-Echo.cpp **** static CrossFade LPF_LXfade_post;
 168:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 169:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 170:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 171:Veno-Echo.cpp **** 
 172:Veno-Echo.cpp **** //cross fades for manual filter crossfading
 173:Veno-Echo.cpp **** static CrossFade FilterMix_L;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 25


 174:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 175:Veno-Echo.cpp **** 
 176:Veno-Echo.cpp **** static CrossFade FilterMix_L_post;
 177:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 178:Veno-Echo.cpp **** 
 179:Veno-Echo.cpp **** //Gate inputs
 180:Veno-Echo.cpp **** Switch ReverseGateL;
 181:Veno-Echo.cpp **** Switch ReverseGateR;
 182:Veno-Echo.cpp **** 
 183:Veno-Echo.cpp **** //Switch TapButton;
 184:Veno-Echo.cpp **** Switch Sync;
 185:Veno-Echo.cpp **** Switch ClockIn;
 186:Veno-Echo.cpp **** 
 187:Veno-Echo.cpp **** //Tap tempo
 188:Veno-Echo.cpp **** Taptempo BaseTempo; 
 189:Veno-Echo.cpp **** 
 190:Veno-Echo.cpp **** Settings AltControls;
 191:Veno-Echo.cpp **** 
 192:Veno-Echo.cpp **** //default alt control values
 193:Veno-Echo.cpp **** constexpr Settings defaultAltControls
 194:Veno-Echo.cpp **** {
 195:Veno-Echo.cpp ****     (minRevDelay + maxRevDelay) / 2.0f, //RevLength
 196:Veno-Echo.cpp ****     1.0f,   //tapRatio
 197:Veno-Echo.cpp ****     0.0f,   //ModDepth
 198:Veno-Echo.cpp ****     (maxModRate + minModRate) / 2.0f,   //ModFreq
 199:Veno-Echo.cpp ****     defaultHPCut,   //HP_Cutoff
 200:Veno-Echo.cpp ****     defaultLPCut,   //LP_Cutoff
 201:Veno-Echo.cpp ****     default_Res,     //Filter Resonance
 202:Veno-Echo.cpp ****     0.0f,    //filter prepost
 203:Veno-Echo.cpp ****     500000.0f,     //base tempo (in us)
 204:Veno-Echo.cpp ****     0.0f,       //L_Rev
 205:Veno-Echo.cpp ****     0.0f    //R_Rev
 206:Veno-Echo.cpp **** };
 207:Veno-Echo.cpp **** 
 208:Veno-Echo.cpp **** void Update_DelayTimeL_CV();
 209:Veno-Echo.cpp **** void Update_DelayTimeL();
 210:Veno-Echo.cpp **** 
 211:Veno-Echo.cpp **** void Update_DelayTimeR_CV();
 212:Veno-Echo.cpp **** void Update_DelayTimeR();
 213:Veno-Echo.cpp **** 
 214:Veno-Echo.cpp **** void Update_feedbackL_CV();
 215:Veno-Echo.cpp **** void Update_feedbackL();
 216:Veno-Echo.cpp **** 
 217:Veno-Echo.cpp **** void Update_feedbackR_CV();
 218:Veno-Echo.cpp **** void Update_feedbackR();
 219:Veno-Echo.cpp **** 
 220:Veno-Echo.cpp **** void Update_drywet_CV();
 221:Veno-Echo.cpp **** void Update_drywet();
 222:Veno-Echo.cpp **** 
 223:Veno-Echo.cpp **** void Update_width_CV();
 224:Veno-Echo.cpp **** void Update_width();
 225:Veno-Echo.cpp **** 
 226:Veno-Echo.cpp **** void Update_crossfeedback();
 227:Veno-Echo.cpp **** void Update_filterXfade();
 228:Veno-Echo.cpp **** 
 229:Veno-Echo.cpp **** void Update_Buttons();
 230:Veno-Echo.cpp **** void Update_DelayBaseTempo();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 26


 231:Veno-Echo.cpp **** void Update_BaseTempoLED();
 232:Veno-Echo.cpp **** void Update_DelayTempoLEDs();
 233:Veno-Echo.cpp **** void Update_Mod();
 234:Veno-Echo.cpp **** void GetModCV();
 235:Veno-Echo.cpp **** float SetTempoDiv(float input, TempoDivs *div);
 236:Veno-Echo.cpp **** void UpdateClock();
 237:Veno-Echo.cpp **** double GetTapRatio(TapRatios ratio);
 238:Veno-Echo.cpp **** void ApplySettings(const Settings &setting);
 239:Veno-Echo.cpp **** void TurnOnAllLEDs();
 240:Veno-Echo.cpp **** void ResetAllLEDs();
 241:Veno-Echo.cpp **** float HardLimit(float input, float limit);
 242:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val);
 243:Veno-Echo.cpp **** bool checkPickupState(float value, float lastvalue, bool lastState, bool ShiftChange);
 244:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
 245:Veno-Echo.cpp **** 
 246:Veno-Echo.cpp **** static void AudioCallback(float *in, float *out, size_t size)
 247:Veno-Echo.cpp **** {
 248:Veno-Echo.cpp **** 
 249:Veno-Echo.cpp **** /*
 250:Veno-Echo.cpp **** static uint32_t funcLength{};
 251:Veno-Echo.cpp **** static uint32_t lastFuncTime{};
 252:Veno-Echo.cpp **** static uint32_t maxFuncLength{};
 253:Veno-Echo.cpp **** static uint32_t minFuncLength{500000000};
 254:Veno-Echo.cpp **** static uint32_t aveFuncLength{};
 255:Veno-Echo.cpp **** 
 256:Veno-Echo.cpp **** */
 257:Veno-Echo.cpp **** 
 258:Veno-Echo.cpp **** static int Counter{};
 259:Veno-Echo.cpp **** 
 260:Veno-Echo.cpp **** /*
 261:Veno-Echo.cpp ****     funcLength = System::GetUs() - lastFuncTime;
 262:Veno-Echo.cpp **** 
 263:Veno-Echo.cpp ****     aveFuncLength = (funcLength + 1023 * aveFuncLength) >> 10;
 264:Veno-Echo.cpp ****     if (funcLength > maxFuncLength)
 265:Veno-Echo.cpp ****     {
 266:Veno-Echo.cpp ****         maxFuncLength = funcLength;
 267:Veno-Echo.cpp ****     }
 268:Veno-Echo.cpp **** 
 269:Veno-Echo.cpp ****     if (funcLength < minFuncLength)
 270:Veno-Echo.cpp ****     {
 271:Veno-Echo.cpp ****         minFuncLength = funcLength;
 272:Veno-Echo.cpp ****     }
 273:Veno-Echo.cpp **** 
 274:Veno-Echo.cpp **** */
 275:Veno-Echo.cpp **** 
 276:Veno-Echo.cpp **** Counter = (Counter + 1) % updateDiv;
 277:Veno-Echo.cpp **** 
 278:Veno-Echo.cpp ****     /*
 279:Veno-Echo.cpp ****         //each call generate random dither length between 0 and 14
 280:Veno-Echo.cpp ****         uint16_t randomDither{uint16_t (rand() % 5)};
 281:Veno-Echo.cpp ****         //init timeofCall as current time
 282:Veno-Echo.cpp ****         uint32_t timeofCall{System::GetUs()};
 283:Veno-Echo.cpp **** 
 284:Veno-Echo.cpp ****         //wait for random Dither time
 285:Veno-Echo.cpp ****         while( (System::GetUs() - timeofCall ) < randomDither)
 286:Veno-Echo.cpp ****         {}
 287:Veno-Echo.cpp ****     */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 27


 288:Veno-Echo.cpp **** 
 289:Veno-Echo.cpp ****         switch (Counter)
 290:Veno-Echo.cpp ****         {
 291:Veno-Echo.cpp ****             case 0:
 292:Veno-Echo.cpp ****                 Update_Buttons();
 293:Veno-Echo.cpp ****                 GetModCV();
 294:Veno-Echo.cpp ****                 Update_DelayBaseTempo();
 295:Veno-Echo.cpp ****                 Update_DelayTempoLEDs();
 296:Veno-Echo.cpp ****             break;
 297:Veno-Echo.cpp **** 
 298:Veno-Echo.cpp ****             case 1:
 299:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 300:Veno-Echo.cpp ****             break;
 301:Veno-Echo.cpp **** 
 302:Veno-Echo.cpp ****             case 2:
 303:Veno-Echo.cpp ****                 if(saveState != SAVING)
 304:Veno-Echo.cpp ****                 {
 305:Veno-Echo.cpp ****                     Update_DelayTimeL();
 306:Veno-Echo.cpp ****                 }
 307:Veno-Echo.cpp ****             break;
 308:Veno-Echo.cpp **** 
 309:Veno-Echo.cpp ****             case 3:
 310:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 311:Veno-Echo.cpp ****             break;
 312:Veno-Echo.cpp **** 
 313:Veno-Echo.cpp ****             case 4:
 314:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 315:Veno-Echo.cpp ****                 {
 316:Veno-Echo.cpp ****                     Update_DelayTimeR();
 317:Veno-Echo.cpp ****                 }
 318:Veno-Echo.cpp ****             break;
 319:Veno-Echo.cpp **** 
 320:Veno-Echo.cpp ****             case 5:
 321:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 322:Veno-Echo.cpp ****             break;
 323:Veno-Echo.cpp **** 
 324:Veno-Echo.cpp ****             case 6:
 325:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 326:Veno-Echo.cpp ****                 {
 327:Veno-Echo.cpp ****                     Update_feedbackL();
 328:Veno-Echo.cpp ****                 }
 329:Veno-Echo.cpp ****             break;
 330:Veno-Echo.cpp **** 
 331:Veno-Echo.cpp ****             case 7:
 332:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 333:Veno-Echo.cpp ****             break;
 334:Veno-Echo.cpp **** 
 335:Veno-Echo.cpp ****             case 8:
 336:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 337:Veno-Echo.cpp ****                 {
 338:Veno-Echo.cpp ****                     Update_feedbackR();
 339:Veno-Echo.cpp ****                 }
 340:Veno-Echo.cpp ****             break;
 341:Veno-Echo.cpp **** 
 342:Veno-Echo.cpp ****             case 9:
 343:Veno-Echo.cpp ****                 Update_drywet_CV();
 344:Veno-Echo.cpp ****             break;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 28


 345:Veno-Echo.cpp **** 
 346:Veno-Echo.cpp ****             case 10:
 347:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 348:Veno-Echo.cpp ****                 {
 349:Veno-Echo.cpp ****                     Update_drywet();
 350:Veno-Echo.cpp ****                 }
 351:Veno-Echo.cpp ****             break;
 352:Veno-Echo.cpp **** 
 353:Veno-Echo.cpp ****             case 11:
 354:Veno-Echo.cpp ****                 Update_width_CV();
 355:Veno-Echo.cpp ****             break;
 356:Veno-Echo.cpp **** 
 357:Veno-Echo.cpp ****             case 12:
 358:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 359:Veno-Echo.cpp ****                 {
 360:Veno-Echo.cpp ****                     Update_width();
 361:Veno-Echo.cpp ****                 }
 362:Veno-Echo.cpp ****             break;
 363:Veno-Echo.cpp **** 
 364:Veno-Echo.cpp ****             case 13:
 365:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 366:Veno-Echo.cpp ****                 {
 367:Veno-Echo.cpp ****                     Update_crossfeedback();
 368:Veno-Echo.cpp ****                 }
 369:Veno-Echo.cpp ****             break;
 370:Veno-Echo.cpp **** 
 371:Veno-Echo.cpp ****             case 14:
 372:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 373:Veno-Echo.cpp ****                 {
 374:Veno-Echo.cpp ****                     Update_filterXfade();
 375:Veno-Echo.cpp ****                 }
 376:Veno-Echo.cpp ****             break;
 377:Veno-Echo.cpp ****         }
 378:Veno-Echo.cpp **** 
 379:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
 380:Veno-Echo.cpp ****     {   
 381:Veno-Echo.cpp ****         UpdateClock(); 
 382:Veno-Echo.cpp ****         Update_Mod();
 383:Veno-Echo.cpp **** 
 384:Veno-Echo.cpp ****         //get xfade positions from envelopes:
 385:Veno-Echo.cpp ****         float FwdRevLXFadepos = FwdRevLEnv.Process(Rev_L_sw.getState());
 386:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 387:Veno-Echo.cpp ****         
 388:Veno-Echo.cpp ****         float HPFXFadepos = HPF_Env.Process(HPF_sw.getState());
 389:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 390:Veno-Echo.cpp **** 
 391:Veno-Echo.cpp ****         //set xfade positions      
 392:Veno-Echo.cpp ****         FwdRevLXfade.SetPos(FwdRevLXFadepos);
 393:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 394:Veno-Echo.cpp ****         
 395:Veno-Echo.cpp ****         HPF_LXfade.SetPos(HPFXFadepos);
 396:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 397:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 398:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 399:Veno-Echo.cpp **** 
 400:Veno-Echo.cpp ****         HPF_LXfade_post.SetPos(HPFXFadepos);
 401:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 29


 402:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 403:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 404:Veno-Echo.cpp **** 
 405:Veno-Echo.cpp ****         FilterMix_L.SetPos(filterXfade);
 406:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 407:Veno-Echo.cpp **** 
 408:Veno-Echo.cpp ****         FilterMix_L_post.SetPos(filterXfade);
 409:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 410:Veno-Echo.cpp **** 
 411:Veno-Echo.cpp ****         //filter controls, read from reverse delay lines:
 412:Veno-Echo.cpp ****         float delayRevSignalL = delaysL_REV.Read();
 413:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 414:Veno-Echo.cpp **** 
 415:Veno-Echo.cpp ****         //write input to reverse delay (no feedback)
 416:Veno-Echo.cpp ****         delaysL_REV.Write(in[i]);
 417:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 418:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 419:Veno-Echo.cpp ****         //delaysR_REV.Write(Input_R);
 420:Veno-Echo.cpp **** 
 421:Veno-Echo.cpp ****         //process Xfade between reverse and direct input
 422:Veno-Echo.cpp ****         float FwdRevSignalLXFade = FwdRevLXfade.Process(in[i],delayRevSignalL);
 423:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 424:Veno-Echo.cpp **** 
 425:Veno-Echo.cpp ****         //Get combined output from all delay heads
 426:Veno-Echo.cpp ****         float delaySignal_L{delayL.GetOutput()};   
 427:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 428:Veno-Echo.cpp **** 
 429:Veno-Echo.cpp ****         //Update Base Tempo LED
 430:Veno-Echo.cpp ****         Update_BaseTempoLED();
 431:Veno-Echo.cpp **** 
 432:Veno-Echo.cpp ****         //hard limit
 433:Veno-Echo.cpp ****         delaySignal_L = HardLimit(delaySignal_L,AudioLimit);
 434:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 435:Veno-Echo.cpp **** 
 436:Veno-Echo.cpp **** if(!PostFilters)
 437:Veno-Echo.cpp **** {
 438:Veno-Echo.cpp **** //****************************************************************************************
 439:Veno-Echo.cpp ****         //pre filters
 440:Veno-Echo.cpp ****         //process LPF
 441:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 442:Veno-Echo.cpp ****         LPF_L.Process(delaySignal_L * 0.1f);
 443:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 444:Veno-Echo.cpp **** 
 445:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 446:Veno-Echo.cpp ****         float LPF_L_signal{LPF_L.Low() * 10.0f};
 447:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 448:Veno-Echo.cpp ****         
 449:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 450:Veno-Echo.cpp ****         float filteredDelay_L{LPF_LXfade.Process(delaySignal_L, LPF_L_signal)};
 451:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 452:Veno-Echo.cpp **** 
 453:Veno-Echo.cpp ****         //hard limit
 454:Veno-Echo.cpp ****         filteredDelay_L = HardLimit(filteredDelay_L,AudioLimit);
 455:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 456:Veno-Echo.cpp **** 
 457:Veno-Echo.cpp ****         //process HPF
 458:Veno-Echo.cpp ****         HPF_L.Process(filteredDelay_L * 0.1f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 30


 459:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 460:Veno-Echo.cpp **** 
 461:Veno-Echo.cpp ****         float HPF_L_signal{HPF_L.High() * 10.0f};
 462:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 463:Veno-Echo.cpp **** 
 464:Veno-Echo.cpp ****         filteredDelay_L = HPF_LXfade.Process(filteredDelay_L, HPF_L_signal);
 465:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 466:Veno-Echo.cpp **** 
 467:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 468:Veno-Echo.cpp **** 
 469:Veno-Echo.cpp ****         delaySignal_L = FilterMix_L.Process(delaySignal_L,filteredDelay_L);
 470:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 471:Veno-Echo.cpp **** 
 472:Veno-Echo.cpp **** //****************************************************************************************
 473:Veno-Echo.cpp **** }
 474:Veno-Echo.cpp **** 
 475:Veno-Echo.cpp **** else
 476:Veno-Echo.cpp **** {
 477:Veno-Echo.cpp ****     /* code */
 478:Veno-Echo.cpp **** }
 479:Veno-Echo.cpp **** 
 480:Veno-Echo.cpp ****         static float LNegFB{};  //static so value can be used for next sample
 481:Veno-Echo.cpp ****         static float RNegFB{};
 482:Veno-Echo.cpp **** 
 483:Veno-Echo.cpp ****         //ensure we never get inverse feedback
 484:Veno-Echo.cpp ****         if(feedbackL < LNegFB) 
 485:Veno-Echo.cpp ****             LNegFB = 0.0f;
 486:Veno-Echo.cpp ****         
 487:Veno-Echo.cpp ****         if(feedbackR < RNegFB)
 488:Veno-Echo.cpp ****             RNegFB = 0.0f;
 489:Veno-Echo.cpp **** 
 490:Veno-Echo.cpp ****         float feedbackSignalL{ (feedbackL - LNegFB) * delaySignal_L };
 491:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 492:Veno-Echo.cpp **** 
 493:Veno-Echo.cpp ****         //crossfeedback:
 494:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 495:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 496:Veno-Echo.cpp **** 
 497:Veno-Echo.cpp **** 
 498:Veno-Echo.cpp ****         //get envelopes for feedback signals
 499:Veno-Echo.cpp ****         float EnvL{LeftEnv.GetEnv(feedbackSignalL)};  
 500:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 501:Veno-Echo.cpp **** 
 502:Veno-Echo.cpp ****             //if envelope of feedback signal exceeds threshold calculate negative FB factor
 503:Veno-Echo.cpp ****             if (EnvL >= NegFBOffset)
 504:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 505:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 506:Veno-Echo.cpp ****             else LNegFB = 0.0;
 507:Veno-Echo.cpp ****             
 508:Veno-Echo.cpp ****             if (EnvR >= NegFBOffset)
 509:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 510:Veno-Echo.cpp ****             else RNegFB = 0.0;
 511:Veno-Echo.cpp **** 
 512:Veno-Echo.cpp ****         //write to fwd delay lines, including a DC block and hard limit
 513:Veno-Echo.cpp ****         float combinedL{feedbackSignalLR + FwdRevSignalLXFade};
 514:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 515:Veno-Echo.cpp ****  
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 31


 516:Veno-Echo.cpp ****         //hard limit
 517:Veno-Echo.cpp ****         combinedL = HardLimit(combinedL,AudioLimit);
 518:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 519:Veno-Echo.cpp **** 
 520:Veno-Echo.cpp ****         delayL.Write( DcBlock_LFB.Process(combinedL ) );
 521:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 522:Veno-Echo.cpp **** 
 523:Veno-Echo.cpp ****         // floats for wet dry mix
 524:Veno-Echo.cpp ****         float mixL;
 525:Veno-Echo.cpp ****         float mixR;
 526:Veno-Echo.cpp **** 
 527:Veno-Echo.cpp ****         float delaySignal_L_SUM = WidthXfade.Process(delaySignal_L,delaySignal_R);    //mix to mono
 528:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 529:Veno-Echo.cpp **** 
 530:Veno-Echo.cpp ****         //hard limit
 531:Veno-Echo.cpp ****         delaySignal_L_SUM = HardLimit(delaySignal_L_SUM,AudioLimit);
 532:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 533:Veno-Echo.cpp **** 
 534:Veno-Echo.cpp **** if(PostFilters)
 535:Veno-Echo.cpp **** {
 536:Veno-Echo.cpp ****     //****************************************************************************************
 537:Veno-Echo.cpp ****         //post filters
 538:Veno-Echo.cpp ****         //process LPF
 539:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 540:Veno-Echo.cpp ****         LPF_L_post.Process(delaySignal_L_SUM * 0.1f);
 541:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 542:Veno-Echo.cpp **** 
 543:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 544:Veno-Echo.cpp ****         float LPF_L_signal_post{LPF_L_post.Low() * 10.0f};
 545:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 546:Veno-Echo.cpp ****         
 547:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 548:Veno-Echo.cpp ****         float filteredDelay_L_post{LPF_LXfade_post.Process(delaySignal_L_SUM, LPF_L_signal_post)};
 549:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 550:Veno-Echo.cpp **** 
 551:Veno-Echo.cpp ****         //hard limit
 552:Veno-Echo.cpp ****         filteredDelay_L_post = HardLimit(filteredDelay_L_post,AudioLimit);
 553:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 554:Veno-Echo.cpp **** 
 555:Veno-Echo.cpp ****         //process HPF
 556:Veno-Echo.cpp ****         HPF_L_post.Process(filteredDelay_L_post * 0.1f);
 557:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 558:Veno-Echo.cpp **** 
 559:Veno-Echo.cpp ****         float HPF_L_signal_post{HPF_L_post.High() * 10.0f};
 560:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 561:Veno-Echo.cpp **** 
 562:Veno-Echo.cpp ****         filteredDelay_L_post = HPF_LXfade_post.Process(filteredDelay_L_post, HPF_L_signal_post);
 563:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 564:Veno-Echo.cpp **** 
 565:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 566:Veno-Echo.cpp ****         delaySignal_L_SUM = FilterMix_L_post.Process(delaySignal_L_SUM,filteredDelay_L_post);
 567:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 568:Veno-Echo.cpp **** 
 569:Veno-Echo.cpp ****     //****************************************************************************************
 570:Veno-Echo.cpp **** }
 571:Veno-Echo.cpp **** else
 572:Veno-Echo.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 32


 573:Veno-Echo.cpp ****     /* code */
 574:Veno-Echo.cpp **** }
 575:Veno-Echo.cpp ****         if(drywet < 0.5f)
 576:Veno-Echo.cpp ****         {
 577:Veno-Echo.cpp ****             mixL = in[i] + (2.0f * drywet * delaySignal_L_SUM);
 578:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 579:Veno-Echo.cpp ****         }
 580:Veno-Echo.cpp ****         else if(drywet > 0.5f)
 581:Veno-Echo.cpp ****         {
 582:Veno-Echo.cpp ****             mixL = ((1 - drywet)* 2.0f * in[i]) + delaySignal_L_SUM;
 583:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 584:Veno-Echo.cpp ****         }
 585:Veno-Echo.cpp ****         else
 586:Veno-Echo.cpp ****         {
 587:Veno-Echo.cpp ****             mixL = in[i] + delaySignal_L_SUM;
 588:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 589:Veno-Echo.cpp ****         }
 590:Veno-Echo.cpp **** 
 591:Veno-Echo.cpp ****         //send mixes to outputs
 592:Veno-Echo.cpp ****         if(mute)
 593:Veno-Echo.cpp ****         {
 594:Veno-Echo.cpp ****             out[i] = 0.0f;
 595:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 596:Veno-Echo.cpp ****         }
 597:Veno-Echo.cpp ****         else
 598:Veno-Echo.cpp ****         {
 599:Veno-Echo.cpp ****             out[i] = mixL;
 600:Veno-Echo.cpp ****             out[i+1] = mixR;
 601:Veno-Echo.cpp ****         }
 602:Veno-Echo.cpp **** 
 603:Veno-Echo.cpp ****         //write to DAC for debug
 604:Veno-Echo.cpp ****        // dsy_dac_write(DSY_DAC_CHN1, static_cast<int>( EnvL * 4095.0f));
 605:Veno-Echo.cpp **** 
 606:Veno-Echo.cpp ****     }
 607:Veno-Echo.cpp **** 
 608:Veno-Echo.cpp **** }
 609:Veno-Echo.cpp **** 
 610:Veno-Echo.cpp **** void InitDelays(float samplerate)
 611:Veno-Echo.cpp **** {
 439              		.loc 20 611 1 is_stmt 1 view -0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 16
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 612:Veno-Echo.cpp **** 
 613:Veno-Echo.cpp ****     //Init fwd delays
 614:Veno-Echo.cpp ****     delMemsL.Init(2);    //2 heads
 443              		.loc 20 614 5 view .LVU50
 444              	.LBB901:
 445              	.LBI901:
  53:delayline_multitap.h ****     
  54:delayline_multitap.h ****     /** initializes the delay line by clearing the values within, and setting delay head times to 0
  55:delayline_multitap.h ****     */
  56:delayline_multitap.h ****     void Init( size_t num_heads) 
 446              		.loc 18 56 10 view .LVU51
 447              	.LBB902:
 448              	.LBB903:
  57:delayline_multitap.h ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 33


  58:delayline_multitap.h ****         for(size_t i = 0; i < max_size; i++)
 449              		.loc 18 58 29 view .LVU52
 450 0000 5D4B     		ldr	r3, .L36
 451 0002 5E49     		ldr	r1, .L36+4
 452              	.LBE903:
 453              	.LBE902:
 454              	.LBE901:
 611:Veno-Echo.cpp **** 
 455              		.loc 20 611 1 is_stmt 0 view .LVU53
 456 0004 F0B5     		push	{r4, r5, r6, r7, lr}
 457              		.cfi_def_cfa_offset 20
 458              		.cfi_offset 4, -20
 459              		.cfi_offset 5, -16
 460              		.cfi_offset 6, -12
 461              		.cfi_offset 7, -8
 462              		.cfi_offset 14, -4
 463 0006 A3F18405 		sub	r5, r3, #132
 464 000a 85B0     		sub	sp, sp, #20
 465              		.cfi_def_cfa_offset 40
 466 000c 2846     		mov	r0, r5
 467              	.LVL15:
 468              	.L17:
 469              	.LBB908:
 470              	.LBB907:
 471              	.LBB904:
  59:delayline_multitap.h ****         {
  60:delayline_multitap.h ****             line_[i] = T(0);
 472              		.loc 18 60 13 view .LVU54
 473 000e 0022     		movs	r2, #0
 474 0010 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 475              		.loc 18 58 9 is_stmt 1 view .LVU55
  58:delayline_multitap.h ****         {
 476              		.loc 18 58 29 view .LVU56
 477 0014 8B42     		cmp	r3, r1
 478 0016 FAD1     		bne	.L17
 479              	.LBE904:
  61:delayline_multitap.h ****         }
  62:delayline_multitap.h **** 
  63:delayline_multitap.h ****         write_ptr_ = 0;
 480              		.loc 18 63 9 is_stmt 0 view .LVU57
 481 0018 0022     		movs	r2, #0
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 482              		.loc 18 64 9 view .LVU58
 483 001a 594C     		ldr	r4, .L36+8
 484 001c 0226     		movs	r6, #2
 485              	.LBB905:
  65:delayline_multitap.h **** 
  66:delayline_multitap.h ****         for (size_t i{ 0 }; i < num_heads_; ++i)
 486              		.loc 18 66 21 view .LVU59
 487 001e 1346     		mov	r3, r2
 488              	.LBE905:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 489              		.loc 18 63 9 view .LVU60
 490 0020 2A60     		str	r2, [r5]
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 491              		.loc 18 64 9 view .LVU61
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 34


 492 0022 2E51     		str	r6, [r5, r4]
 493              	.LVL16:
 494              	.LBB906:
 495              		.loc 18 66 31 is_stmt 1 view .LVU62
 496              	.L18:
  67:delayline_multitap.h ****         {
  68:delayline_multitap.h ****             delay_[i] = 0;  //set all delay heads to 0 (no delay)
 497              		.loc 18 68 13 is_stmt 0 view .LVU63
 498 0024 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 499              		.loc 18 66 9 view .LVU64
 500 0026 0133     		adds	r3, r3, #1
 501              	.LVL17:
  69:delayline_multitap.h ****             frac_[i] = 0;
 502              		.loc 18 69 13 view .LVU65
 503 0028 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 504              		.loc 18 68 13 view .LVU66
 505 002a 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 506              		.loc 18 66 31 view .LVU67
 507 002e 0A68     		ldr	r2, [r1]
 508              		.loc 18 69 13 view .LVU68
 509 0030 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 510              		.loc 18 66 9 is_stmt 1 view .LVU69
 511              	.LVL18:
  66:delayline_multitap.h ****         {
 512              		.loc 18 66 31 view .LVU70
 513 0032 9A42     		cmp	r2, r3
 514 0034 F6D8     		bhi	.L18
 515 0036 534B     		ldr	r3, .L36+12
 516              	.LVL19:
  66:delayline_multitap.h ****         {
 517              		.loc 18 66 31 is_stmt 0 view .LVU71
 518 0038 5349     		ldr	r1, .L36+16
 519 003a A3F18406 		sub	r6, r3, #132
 520 003e 3046     		mov	r0, r6
 521              	.LVL20:
 522              	.L19:
  66:delayline_multitap.h ****         {
 523              		.loc 18 66 31 view .LVU72
 524              	.LBE906:
 525              	.LBE907:
 526              	.LBE908:
 527              	.LBB909:
 528              	.LBB910:
 529              	.LBB911:
  60:delayline_multitap.h ****         }
 530              		.loc 18 60 13 view .LVU73
 531 0040 0022     		movs	r2, #0
 532 0042 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 533              		.loc 18 58 9 is_stmt 1 view .LVU74
  58:delayline_multitap.h ****         {
 534              		.loc 18 58 29 view .LVU75
 535 0046 8B42     		cmp	r3, r1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 35


 536 0048 FAD1     		bne	.L19
 537              	.LBE911:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 538              		.loc 18 63 9 is_stmt 0 view .LVU76
 539 004a 0022     		movs	r2, #0
  64:delayline_multitap.h **** 
 540              		.loc 18 64 9 view .LVU77
 541 004c 4C4C     		ldr	r4, .L36+8
 542 004e 0227     		movs	r7, #2
 543              	.LBB912:
  66:delayline_multitap.h ****         {
 544              		.loc 18 66 21 view .LVU78
 545 0050 1346     		mov	r3, r2
 546              	.LBE912:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 547              		.loc 18 63 9 view .LVU79
 548 0052 3260     		str	r2, [r6]
  64:delayline_multitap.h **** 
 549              		.loc 18 64 9 view .LVU80
 550 0054 3751     		str	r7, [r6, r4]
 551              	.LVL21:
 552              	.LBB913:
  66:delayline_multitap.h ****         {
 553              		.loc 18 66 31 is_stmt 1 view .LVU81
 554              	.L20:
  68:delayline_multitap.h ****             frac_[i] = 0;
 555              		.loc 18 68 13 is_stmt 0 view .LVU82
 556 0056 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 557              		.loc 18 66 9 view .LVU83
 558 0058 0133     		adds	r3, r3, #1
 559              	.LVL22:
 560              		.loc 18 69 13 view .LVU84
 561 005a 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 562              		.loc 18 68 13 view .LVU85
 563 005c 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 564              		.loc 18 66 31 view .LVU86
 565 0060 0A68     		ldr	r2, [r1]
 566              		.loc 18 69 13 view .LVU87
 567 0062 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 568              		.loc 18 66 9 is_stmt 1 view .LVU88
 569              	.LVL23:
  66:delayline_multitap.h ****         {
 570              		.loc 18 66 31 view .LVU89
 571 0064 9A42     		cmp	r2, r3
 572 0066 F6D8     		bhi	.L20
 573              	.LVL24:
  66:delayline_multitap.h ****         {
 574              		.loc 18 66 31 is_stmt 0 view .LVU90
 575              	.LBE913:
 576              	.LBE910:
 577              	.LBE909:
 615:Veno-Echo.cpp ****     delMemsR.Init(2);    //2 heads
 616:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 36


 617:Veno-Echo.cpp ****     //point del classes at SDRAM buffers
 618:Veno-Echo.cpp ****     delayL.del = &delMemsL; 
 578              		.loc 20 618 5 is_stmt 1 view .LVU91
 619:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 579              		.loc 20 619 16 is_stmt 0 view .LVU92
 580 0068 484C     		ldr	r4, .L36+20
 620:Veno-Echo.cpp **** 
 621:Veno-Echo.cpp ****     delayL.init(hw.GetPin(8),samplerate);
 581              		.loc 20 621 16 view .LVU93
 582 006a 0820     		movs	r0, #8
 618:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 583              		.loc 20 618 16 view .LVU94
 584 006c 484F     		ldr	r7, .L36+24
 585 006e 8DED010A 		vstr.32	s0, [sp, #4]	@ int
 586 0072 3D60     		str	r5, [r7]
 619:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 587              		.loc 20 619 5 is_stmt 1 view .LVU95
 588              	.LBB914:
 589              	.LBB915:
 590              	.LBB916:
  40:delayline_reverse.h ****     /** initializes the delay line by clearing the values within, and setting delay to min time.
  41:delayline_reverse.h ****     */
  42:delayline_reverse.h ****     void Init() 
  43:delayline_reverse.h ****     { 
  44:delayline_reverse.h ****         Reset(); 
  45:delayline_reverse.h ****     }
  46:delayline_reverse.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
  47:delayline_reverse.h ****     */
  48:delayline_reverse.h ****     void Reset()
  49:delayline_reverse.h ****     {
  50:delayline_reverse.h **** 
  51:delayline_reverse.h ****         delay1_  = 25000; //min Reverse delay time
 591              		.loc 19 51 9 is_stmt 0 view .LVU96
 592 0074 46F2A815 		movw	r5, #25000
 593              	.LBE916:
 594              	.LBE915:
 595              	.LBE914:
 619:Veno-Echo.cpp **** 
 596              		.loc 20 619 16 view .LVU97
 597 0078 2660     		str	r6, [r4]
 598              		.loc 20 621 5 is_stmt 1 view .LVU98
 599              		.loc 20 621 16 is_stmt 0 view .LVU99
 600 007a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 601              	.LVL25:
 602              		.loc 20 621 16 view .LVU100
 603 007e 0346     		mov	r3, r0	@ movhi
 604 0080 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 605 0084 3846     		mov	r0, r7
 606 0086 ADF80830 		strh	r3, [sp, #8]	@ movhi
 607 008a 0299     		ldr	r1, [sp, #8]
 608 008c FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 609              	.LVL26:
 622:Veno-Echo.cpp ****     delayR.init(hw.GetPin(9),samplerate);
 610              		.loc 20 622 5 is_stmt 1 view .LVU101
 611              		.loc 20 622 16 is_stmt 0 view .LVU102
 612 0090 0920     		movs	r0, #9
 613 0092 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 37


 614              	.LVL27:
 615 0096 0346     		mov	r3, r0	@ movhi
 616 0098 2046     		mov	r0, r4
 617              	.LBB928:
 618              	.LBB923:
 619              	.LBB918:
 620              		.loc 19 51 9 view .LVU103
 621 009a 3E4C     		ldr	r4, .L36+28
 622              	.LBE918:
 623              	.LBE923:
 624              	.LBE928:
 625              		.loc 20 622 16 view .LVU104
 626 009c ADF80C30 		strh	r3, [sp, #12]	@ movhi
 627 00a0 0399     		ldr	r1, [sp, #12]
 628 00a2 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 629 00a6 FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 630              	.LVL28:
 623:Veno-Echo.cpp **** 
 624:Veno-Echo.cpp ****     //delayL.SetDelayTime(500.0f);
 625:Veno-Echo.cpp ****     //delayR.SetDelayTime(500.0f);
 626:Veno-Echo.cpp **** 
 627:Veno-Echo.cpp ****     //Init rev delays
 628:Veno-Echo.cpp ****     delMemsL_REV.Init();
 631              		.loc 20 628 5 is_stmt 1 view .LVU105
 632              	.LBB929:
 633              	.LBI914:
  42:delayline_reverse.h ****     { 
 634              		.loc 19 42 10 view .LVU106
 635              	.LBB924:
 636              	.LBI915:
  48:delayline_reverse.h ****     {
 637              		.loc 19 48 10 view .LVU107
 638              	.LBB919:
  52:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 639              		.loc 19 52 9 is_stmt 0 view .LVU108
 640 00aa 3B4A     		ldr	r2, .L36+32
 641 00ac 45F6C050 		movw	r0, #24000
 642 00b0 04F11803 		add	r3, r4, #24
 643 00b4 3949     		ldr	r1, .L36+36
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 644              		.loc 19 51 9 view .LVU109
 645 00b6 2561     		str	r5, [r4, #16]
 646              		.loc 19 52 9 view .LVU110
 647 00b8 A050     		str	r0, [r4, r2]
 648              	.LVL29:
 649              	.LBB917:
  53:delayline_reverse.h ****         
  54:delayline_reverse.h ****         for(size_t i = 0; i < max_size; i++)
 650              		.loc 19 54 29 is_stmt 1 view .LVU111
 651              	.L21:
  55:delayline_reverse.h ****         {
  56:delayline_reverse.h ****             line_[i] = T(0);
 652              		.loc 19 56 13 is_stmt 0 view .LVU112
 653 00ba 0022     		movs	r2, #0
 654 00bc 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 655              		.loc 19 54 9 is_stmt 1 view .LVU113
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 38


  54:delayline_reverse.h ****         {
 656              		.loc 19 54 29 view .LVU114
 657 00c0 8B42     		cmp	r3, r1
 658 00c2 FAD1     		bne	.L21
 659              	.LBE917:
 660              	.LBE919:
 661              	.LBE924:
 662              	.LBE929:
 663              	.LBB930:
 664              	.LBB931:
 665              	.LBB932:
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 666              		.loc 19 51 9 is_stmt 0 view .LVU115
 667 00c4 3648     		ldr	r0, .L36+40
 668 00c6 46F2A811 		movw	r1, #25000
  52:delayline_reverse.h ****         
 669              		.loc 19 52 9 view .LVU116
 670 00ca 334D     		ldr	r5, .L36+32
 671 00cc 45F6C056 		movw	r6, #24000
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 672              		.loc 19 51 9 view .LVU117
 673 00d0 0161     		str	r1, [r0, #16]
 674              	.LBE932:
 675              	.LBE931:
 676              	.LBE930:
 677              	.LBB955:
 678              	.LBB925:
 679              	.LBB920:
  57:delayline_reverse.h ****         }
  58:delayline_reverse.h ****         write_ptr_ = 0;
 680              		.loc 19 58 9 view .LVU118
 681 00d2 0021     		movs	r1, #0
 682              	.LBE920:
 683              	.LBE925:
 684              	.LBE955:
 685              	.LBB956:
 686              	.LBB945:
 687              	.LBB935:
  52:delayline_reverse.h ****         
 688              		.loc 19 52 9 view .LVU119
 689 00d4 4651     		str	r6, [r0, r5]
 690              	.LBE935:
 691              	.LBE945:
 692              	.LBE956:
 693              	.LBB957:
 694              	.LBB926:
 695              	.LBB921:
  59:delayline_reverse.h ****         read_ptr1_ = 0;
  60:delayline_reverse.h ****         read_ptr2_ = 0;
  61:delayline_reverse.h ****         headDiff_ = 0;
  62:delayline_reverse.h ****         playinghead_ = false;
 696              		.loc 19 62 9 view .LVU120
 697 00d6 0435     		adds	r5, r5, #4
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
  64:delayline_reverse.h ****         fading_ = false;
 698              		.loc 19 64 9 view .LVU121
 699 00d8 324E     		ldr	r6, .L36+44
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 39


 700 00da 00F11803 		add	r3, r0, #24
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 701              		.loc 19 62 9 view .LVU122
 702 00de 6155     		strb	r1, [r4, r5]
  60:delayline_reverse.h ****         headDiff_ = 0;
 703              		.loc 19 60 9 view .LVU123
 704 00e0 E160     		str	r1, [r4, #12]
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
 705              		.loc 19 63 9 view .LVU124
 706 00e2 314D     		ldr	r5, .L36+48
  61:delayline_reverse.h ****         playinghead_ = false;
 707              		.loc 19 61 9 view .LVU125
 708 00e4 6161     		str	r1, [r4, #20]
 709              		.loc 19 64 9 view .LVU126
 710 00e6 A155     		strb	r1, [r4, r6]
 711              	.LVL30:
 712              		.loc 19 64 9 view .LVU127
 713              	.LBE921:
 714              	.LBE926:
 715              	.LBE957:
 629:Veno-Echo.cpp ****     delMemsR_REV.Init();
 716              		.loc 20 629 5 is_stmt 1 view .LVU128
 717              	.LBB958:
 718              	.LBI930:
  42:delayline_reverse.h ****     { 
 719              		.loc 19 42 10 view .LVU129
 720              	.LBB946:
 721              	.LBI931:
  48:delayline_reverse.h ****     {
 722              		.loc 19 48 10 view .LVU130
 723              	.LBB936:
 724              	.LBB933:
  54:delayline_reverse.h ****         {
 725              		.loc 19 54 29 view .LVU131
 726              	.LBE933:
 727              	.LBE936:
 728              	.LBE946:
 729              	.LBE958:
 730              	.LBB959:
 731              	.LBB927:
 732              	.LBB922:
  63:delayline_reverse.h ****         fading_ = false;
 733              		.loc 19 63 9 is_stmt 0 view .LVU132
 734 00e8 2A60     		str	r2, [r5]	@ float
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 735              		.loc 19 59 9 view .LVU133
 736 00ea C4E90111 		strd	r1, r1, [r4, #4]
 737 00ee 2F49     		ldr	r1, .L36+52
 738              	.LVL31:
 739              	.L22:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 740              		.loc 19 59 9 view .LVU134
 741              	.LBE922:
 742              	.LBE927:
 743              	.LBE959:
 744              	.LBB960:
 745              	.LBB947:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 40


 746              	.LBB937:
 747              	.LBB934:
  56:delayline_reverse.h ****         }
 748              		.loc 19 56 13 view .LVU135
 749 00f0 0022     		movs	r2, #0
 750 00f2 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 751              		.loc 19 54 9 is_stmt 1 view .LVU136
  54:delayline_reverse.h ****         {
 752              		.loc 19 54 29 view .LVU137
 753 00f6 8B42     		cmp	r3, r1
 754 00f8 FAD1     		bne	.L22
 755              	.LBE934:
 756              	.LBE937:
 757              	.LBE947:
 758              	.LBE960:
 630:Veno-Echo.cpp **** 
 631:Veno-Echo.cpp ****     //point struct at SDRAM buffers
 632:Veno-Echo.cpp ****     delaysL_REV.del = &delMemsL_REV; 
 759              		.loc 20 632 21 is_stmt 0 view .LVU138
 760 00fa 2D49     		ldr	r1, .L36+56
 761              	.LBB961:
 762              	.LBB948:
 763              	.LBB938:
  58:delayline_reverse.h ****         read_ptr1_ = 0;
 764              		.loc 19 58 9 view .LVU139
 765 00fc 0023     		movs	r3, #0
 766              	.LBE938:
 767              	.LBE948:
 768              	.LBE961:
 769              	.LBB962:
 770              	.LBB963:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 771              		.loc 20 70 15 view .LVU140
 772 00fe DFED2D6A 		vldr.32	s13, .L36+60
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 773              		.loc 20 70 28 view .LVU141
 774 0102 D1ED017A 		vldr.32	s15, [r1, #4]
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 775              		.loc 20 70 53 view .LVU142
 776 0106 9FED2C6A 		vldr.32	s12, .L36+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 777              		.loc 20 70 15 view .LVU143
 778 010a 36EEE77A 		vsub.f32	s14, s13, s15
 779              	.LBE963:
 780              	.LBE962:
 781              	.LBB977:
 782              	.LBB949:
 783              	.LBB939:
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 784              		.loc 19 62 9 view .LVU144
 785 010e 2B4D     		ldr	r5, .L36+68
 786              	.LBE939:
 787              	.LBE949:
 788              	.LBE977:
 789              	.LBB978:
 790              	.LBB972:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 41


  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 791              		.loc 20 70 53 view .LVU145
 792 0110 67EE867A 		vmul.f32	s15, s15, s12
 793              	.LBE972:
 794              	.LBE978:
 795              	.LBB979:
 796              	.LBB950:
 797              	.LBB940:
 798              		.loc 19 64 9 view .LVU146
 799 0114 234E     		ldr	r6, .L36+44
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 800              		.loc 19 62 9 view .LVU147
 801 0116 4355     		strb	r3, [r0, r5]
 802              	.LBE940:
 803              	.LBE950:
 804              	.LBE979:
 805              	.LBB980:
 806              	.LBB973:
 807              	.LBB964:
 808              	.LBB965:
 809              		.file 21 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Copyright (C) 2016-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** /** @file include/bits/std_abs.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 42


  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include_next <stdlib.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** # include_next <math.h>
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef abs
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** extern "C++"
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   using ::abs;
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long long
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(double __x)
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabs(__x); }
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(float __x)
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 810              		.loc 21 76 31 view .LVU148
 811 0118 B0EEC77A 		vabs.f32	s14, s14
 812              	.LBE965:
 813              	.LBE964:
 814              	.LBE973:
 815              	.LBE980:
 816              	.LBB981:
 817              	.LBB951:
 818              	.LBB941:
  63:delayline_reverse.h ****         fading_ = false;
 819              		.loc 19 63 9 view .LVU149
 820 011c 284D     		ldr	r5, .L36+72
  60:delayline_reverse.h ****         headDiff_ = 0;
 821              		.loc 19 60 9 view .LVU150
 822 011e C360     		str	r3, [r0, #12]
  61:delayline_reverse.h ****         playinghead_ = false;
 823              		.loc 19 61 9 view .LVU151
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 43


 824 0120 4361     		str	r3, [r0, #20]
 825              	.LBE941:
 826              	.LBE951:
 827              	.LBE981:
 828              	.LBB982:
 829              	.LBB974:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 830              		.loc 20 70 9 view .LVU152
 831 0122 B4EEE77A 		vcmpe.f32	s14, s15
 832              	.LBE974:
 833              	.LBE982:
 834              	.LBB983:
 835              	.LBB952:
 836              	.LBB942:
 837              		.loc 19 64 9 view .LVU153
 838 0126 8355     		strb	r3, [r0, r6]
 839              	.LVL32:
 840              		.loc 19 64 9 view .LVU154
 841              	.LBE942:
 842              	.LBE952:
 843              	.LBE983:
 844              		.loc 20 632 5 is_stmt 1 view .LVU155
 633:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 845              		.loc 20 633 5 view .LVU156
 632:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 846              		.loc 20 632 21 is_stmt 0 view .LVU157
 847 0128 0C60     		str	r4, [r1]
 848              	.LBB984:
 849              	.LBB953:
 850              	.LBB943:
  63:delayline_reverse.h ****         fading_ = false;
 851              		.loc 19 63 9 view .LVU158
 852 012a 2A60     		str	r2, [r5]	@ float
 853              	.LBE943:
 854              	.LBE953:
 855              	.LBE984:
 856              	.LBB985:
 857              	.LBB975:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 858              		.loc 20 70 9 view .LVU159
 859 012c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 860              	.LBE975:
 861              	.LBE985:
 862              	.LBB986:
 863              	.LBB954:
 864              	.LBB944:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 865              		.loc 19 59 9 view .LVU160
 866 0130 C0E90133 		strd	r3, r3, [r0, #4]
 867              	.LBE944:
 868              	.LBE954:
 869              	.LBE986:
 870              		.loc 20 633 21 view .LVU161
 871 0134 234B     		ldr	r3, .L36+76
 872 0136 1860     		str	r0, [r3]
 634:Veno-Echo.cpp **** 
 635:Veno-Echo.cpp ****     //Reverse Delay Length. Setup as static value for now. Will make this a shift function
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 44


 636:Veno-Echo.cpp ****     delaysL_REV.SetDelayTime(maxRevDelay / 3.f);
 873              		.loc 20 636 5 is_stmt 1 view .LVU162
 874              	.LVL33:
 875              	.LBB987:
 876              	.LBI962:
  68:Veno-Echo.cpp ****     {
 877              		.loc 20 68 10 view .LVU163
 878              	.LBB976:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 879              		.loc 20 70 9 view .LVU164
 880              	.LBB967:
 881              	.LBI964:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 882              		.loc 21 75 3 view .LVU165
 883              	.LBB966:
 884              		.loc 21 76 5 view .LVU166
 885              		.loc 21 76 5 is_stmt 0 view .LVU167
 886              	.LBE966:
 887              	.LBE967:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 888              		.loc 20 70 9 view .LVU168
 889 0138 04DD     		ble	.L23
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 890              		.loc 20 73 13 is_stmt 1 view .LVU169
 891              	.LBB968:
 892              	.LBB969:
  65:delayline_reverse.h ****     }
  66:delayline_reverse.h **** 
  67:delayline_reverse.h ****     /** sets the delay time in samples
  68:delayline_reverse.h ****     */
  69:delayline_reverse.h ****     inline void SetDelay1(size_t delay)
  70:delayline_reverse.h ****     {
  71:delayline_reverse.h ****         frac1_  = 0.0f;
  72:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 893              		.loc 19 72 9 is_stmt 0 view .LVU170
 894 013a 234D     		ldr	r5, .L36+80
 895              	.LBE969:
 896              	.LBE968:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 897              		.loc 20 73 27 view .LVU171
 898 013c C1ED016A 		vstr.32	s13, [r1, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 899              		.loc 20 74 13 is_stmt 1 view .LVU172
 900              	.LVL34:
 901              	.LBB971:
 902              	.LBI968:
  69:delayline_reverse.h ****     {
 903              		.loc 19 69 17 view .LVU173
 904              	.LBB970:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 905              		.loc 19 71 9 is_stmt 0 view .LVU174
 906 0140 2260     		str	r2, [r4]	@ float
 907              		.loc 19 72 9 view .LVU175
 908 0142 2561     		str	r5, [r4, #16]
 909              	.LVL35:
 910              	.L23:
 911              		.loc 19 72 9 view .LVU176
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 45


 912              	.LBE970:
 913              	.LBE971:
 914              	.LBE976:
 915              	.LBE987:
 637:Veno-Echo.cpp ****     delaysR_REV.SetDelayTime(maxRevDelay / 3.f);   //default maxRevDelay / 3.0f
 916              		.loc 20 637 5 is_stmt 1 view .LVU177
 917              	.LBB988:
 918              	.LBI988:
  68:Veno-Echo.cpp ****     {
 919              		.loc 20 68 10 view .LVU178
 920              	.LBB989:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 921              		.loc 20 70 9 view .LVU179
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 922              		.loc 20 70 28 is_stmt 0 view .LVU180
 923 0144 D3ED017A 		vldr.32	s15, [r3, #4]
 924              	.LVL36:
 925              	.LBB990:
 926              	.LBI990:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 927              		.loc 21 75 3 is_stmt 1 view .LVU181
 928              	.LBB991:
 929              		.loc 21 76 5 view .LVU182
 930              		.loc 21 76 5 is_stmt 0 view .LVU183
 931              	.LBE991:
 932              	.LBE990:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 933              		.loc 20 70 15 view .LVU184
 934 0148 DFED1A6A 		vldr.32	s13, .L36+60
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 935              		.loc 20 70 53 view .LVU185
 936 014c 9FED1A6A 		vldr.32	s12, .L36+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 937              		.loc 20 70 15 view .LVU186
 938 0150 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 939              		.loc 20 70 53 view .LVU187
 940 0154 67EE867A 		vmul.f32	s15, s15, s12
 941              	.LBB993:
 942              	.LBB992:
 943              		.loc 21 76 31 view .LVU188
 944 0158 B0EEC77A 		vabs.f32	s14, s14
 945              	.LBE992:
 946              	.LBE993:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 947              		.loc 20 70 9 view .LVU189
 948 015c B4EEE77A 		vcmpe.f32	s14, s15
 949 0160 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 950 0164 05DD     		ble	.L16
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 951              		.loc 20 73 13 is_stmt 1 view .LVU190
 952              	.LBB994:
 953              	.LBB995:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 954              		.loc 19 71 9 is_stmt 0 view .LVU191
 955 0166 0021     		movs	r1, #0
 956              		.loc 19 72 9 view .LVU192
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 46


 957 0168 174A     		ldr	r2, .L36+80
 958              	.LBE995:
 959              	.LBE994:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 960              		.loc 20 73 27 view .LVU193
 961 016a C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 962              		.loc 20 74 13 is_stmt 1 view .LVU194
 963              	.LVL37:
 964              	.LBB997:
 965              	.LBI994:
  69:delayline_reverse.h ****     {
 966              		.loc 19 69 17 view .LVU195
 967              	.LBB996:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 968              		.loc 19 71 9 is_stmt 0 view .LVU196
 969 016e 0160     		str	r1, [r0]	@ float
 970              		.loc 19 72 9 view .LVU197
 971 0170 0261     		str	r2, [r0, #16]
 972              	.LVL38:
 973              	.L16:
 974              		.loc 19 72 9 view .LVU198
 975              	.LBE996:
 976              	.LBE997:
 977              	.LBE989:
 978              	.LBE988:
 638:Veno-Echo.cpp **** 
 639:Veno-Echo.cpp **** }
 979              		.loc 20 639 1 view .LVU199
 980 0172 05B0     		add	sp, sp, #20
 981              		.cfi_def_cfa_offset 20
 982              		@ sp needed
 983 0174 F0BD     		pop	{r4, r5, r6, r7, pc}
 984              	.L37:
 985 0176 00BF     		.align	2
 986              	.L36:
 987 0178 84000000 		.word	delMemsL+132
 988 017c 84786900 		.word	delMemsL+6912132
 989 0180 84786900 		.word	6912132
 990 0184 84000000 		.word	delMemsR+132
 991 0188 84786900 		.word	delMemsR+6912132
 992 018c 00000000 		.word	.LANCHOR1
 993 0190 00000000 		.word	.LANCHOR0
 994 0194 00000000 		.word	delMemsL_REV
 995 0198 189F2400 		.word	2400024
 996 019c 189F2400 		.word	delMemsL_REV+2400024
 997 01a0 00000000 		.word	delMemsR_REV
 998 01a4 249F2400 		.word	2400036
 999 01a8 209F2400 		.word	delMemsL_REV+2400032
 1000 01ac 189F2400 		.word	delMemsR_REV+2400024
 1001 01b0 00000000 		.word	.LANCHOR2
 1002 01b4 00409C47 		.word	1201422336
 1003 01b8 0AD7A33B 		.word	1000593162
 1004 01bc 1C9F2400 		.word	2400028
 1005 01c0 209F2400 		.word	delMemsR_REV+2400032
 1006 01c4 00000000 		.word	.LANCHOR3
 1007 01c8 80380100 		.word	80000
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 47


 1008              		.cfi_endproc
 1009              	.LFE4310:
 1011              		.section	.text._Z20Update_DelayTimeL_CVv,"ax",%progbits
 1012              		.align	1
 1013              		.p2align 2,,3
 1014              		.global	_Z20Update_DelayTimeL_CVv
 1015              		.syntax unified
 1016              		.thumb
 1017              		.thumb_func
 1018              		.fpu fpv5-d16
 1020              	_Z20Update_DelayTimeL_CVv:
 1021              	.LFB4312:
 640:Veno-Echo.cpp **** 
 641:Veno-Echo.cpp **** int main(void)
 642:Veno-Echo.cpp **** {
 643:Veno-Echo.cpp ****     // initialize hardware.
 644:Veno-Echo.cpp ****     hw.Configure();
 645:Veno-Echo.cpp ****     hw.Init();
 646:Veno-Echo.cpp ****     
 647:Veno-Echo.cpp ****     //Buttons or switches with status LEDs
 648:Veno-Echo.cpp **** 
 649:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / static_cast<flo
 650:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 651:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 652:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 653:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 654:Veno-Echo.cpp **** 
 655:Veno-Echo.cpp ****     //Gates
 656:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 657:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 658:Veno-Echo.cpp **** 
 659:Veno-Echo.cpp ****     //TapButton.Init(hw.GetPin(4), hw.AudioSampleRate() / 48.f);
 660:Veno-Echo.cpp ****     Sync.Init(hw.GetPin(23), hw.AudioSampleRate() / static_cast<float> (updateDiv));
 661:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 662:Veno-Echo.cpp ****     
 663:Veno-Echo.cpp ****     FwdRevLEnv.Init(hw.AudioSampleRate());
 664:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 665:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 666:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 667:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 668:Veno-Echo.cpp **** 
 669:Veno-Echo.cpp ****     FwdRevREnv.Init(hw.AudioSampleRate());
 670:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 671:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 672:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 673:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 674:Veno-Echo.cpp **** 
 675:Veno-Echo.cpp ****     LPF_Env.Init(hw.AudioSampleRate());
 676:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 677:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 678:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 679:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 680:Veno-Echo.cpp **** 
 681:Veno-Echo.cpp ****     HPF_Env.Init(hw.AudioSampleRate());
 682:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 683:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 684:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 48


 685:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 686:Veno-Echo.cpp **** 
 687:Veno-Echo.cpp ****     // set params for CrossFade objects
 688:Veno-Echo.cpp ****     FwdRevLXfade.Init();
 689:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 690:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 691:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 692:Veno-Echo.cpp **** 
 693:Veno-Echo.cpp ****     WidthXfade.Init();
 694:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 695:Veno-Echo.cpp **** 
 696:Veno-Echo.cpp ****     InitDelays(hw.AudioSampleRate());
 697:Veno-Echo.cpp **** 
 698:Veno-Echo.cpp ****     //setup L and R Low Pass filters
 699:Veno-Echo.cpp ****     LPF_L.Init(hw.AudioSampleRate());
 700:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 701:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 702:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 703:Veno-Echo.cpp **** 
 704:Veno-Echo.cpp ****     LPF_R.Init(hw.AudioSampleRate());
 705:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 706:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 707:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 708:Veno-Echo.cpp **** 
 709:Veno-Echo.cpp ****     //setup L and R High Pass filters
 710:Veno-Echo.cpp ****     HPF_L.Init(hw.AudioSampleRate());
 711:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 712:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 713:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 714:Veno-Echo.cpp **** 
 715:Veno-Echo.cpp ****     HPF_R.Init(hw.AudioSampleRate());
 716:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 717:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 718:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 719:Veno-Echo.cpp **** 
 720:Veno-Echo.cpp ****     //post filters
 721:Veno-Echo.cpp ****     LPF_L_post.Init(hw.AudioSampleRate());
 722:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 723:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 724:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 725:Veno-Echo.cpp **** 
 726:Veno-Echo.cpp ****     LPF_R_post.Init(hw.AudioSampleRate());
 727:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 728:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 729:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 730:Veno-Echo.cpp **** 
 731:Veno-Echo.cpp ****     //setup L and R High Pass filters
 732:Veno-Echo.cpp ****     HPF_L_post.Init(hw.AudioSampleRate());
 733:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 734:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 735:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 736:Veno-Echo.cpp **** 
 737:Veno-Echo.cpp ****     HPF_R_post.Init(hw.AudioSampleRate());
 738:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 739:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 740:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 741:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 49


 742:Veno-Echo.cpp ****     DcBlock_LFB.Init(hw.AudioSampleRate());
 743:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 744:Veno-Echo.cpp **** 
 745:Veno-Echo.cpp ****     //LFO for modulation of fwd delay time
 746:Veno-Echo.cpp ****     lfo.Init(hw.AudioSampleRate());
 747:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 748:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 749:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 750:Veno-Echo.cpp **** 
 751:Veno-Echo.cpp ****     BaseTempo.init(mintap,maxtap,1.25f);  //max 6 second tap
 752:Veno-Echo.cpp **** 
 753:Veno-Echo.cpp ****     //setup tempo indicators
 754:Veno-Echo.cpp ****     //tempoLED_BASE.init(hw.GetPin(14),hw.AudioSampleRate());
 755:Veno-Echo.cpp ****     tempoLED_BASE.init(hw.GetPin(24),hw.AudioSampleRate());
 756:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 757:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 758:Veno-Echo.cpp **** 
 759:Veno-Echo.cpp ****     //load settings from flash
 760:Veno-Echo.cpp **** 
 761:Veno-Echo.cpp ****     Settings SavedSettings{LoadSettings()};
 762:Veno-Echo.cpp ****     //ApplySettings(defaultAltControls);
 763:Veno-Echo.cpp ****     //AltControls = defaultAltControls;
 764:Veno-Echo.cpp **** 
 765:Veno-Echo.cpp ****     ApplySettings(SavedSettings);
 766:Veno-Echo.cpp ****     AltControls = SavedSettings;
 767:Veno-Echo.cpp **** 
 768:Veno-Echo.cpp ****     //initialize DAC
 769:Veno-Echo.cpp **** 
 770:Veno-Echo.cpp ****    //ADC
 771:Veno-Echo.cpp ****     AdcChannelConfig adcConfig[8];
 772:Veno-Echo.cpp **** 
 773:Veno-Echo.cpp ****     adcConfig[0].InitSingle(hw.GetPin(15));
 774:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 775:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 776:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 777:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 778:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 779:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 780:Veno-Echo.cpp ****     adcConfig[6].InitSingle(hw.GetPin(22));
 781:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 782:Veno-Echo.cpp **** 
 783:Veno-Echo.cpp **** 
 784:Veno-Echo.cpp ****     hw.adc.Init(adcConfig, 8,daisy::AdcHandle::OVS_128);
 785:Veno-Echo.cpp ****     hw.adc.Start();
 786:Veno-Echo.cpp **** 
 787:Veno-Echo.cpp **** 
 788:Veno-Echo.cpp ****     hw.SetAudioBlockSize(1);     //set blocksize.
 789:Veno-Echo.cpp ****     // start audio callback
 790:Veno-Echo.cpp ****     hw.StartAudio(AudioCallback);
 791:Veno-Echo.cpp **** 
 792:Veno-Echo.cpp ****     
 793:Veno-Echo.cpp **** 
 794:Veno-Echo.cpp ****      for(;;)
 795:Veno-Echo.cpp ****      {  
 796:Veno-Echo.cpp **** 
 797:Veno-Echo.cpp ****         static uint32_t saveTimer{};
 798:Veno-Echo.cpp ****         //static bool SaveWaitFlag{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 50


 799:Veno-Echo.cpp ****        
 800:Veno-Echo.cpp ****         if(save_flag)   //if save_flag is set
 801:Veno-Echo.cpp ****         {
 802:Veno-Echo.cpp ****             save_flag = false;
 803:Veno-Echo.cpp ****             saveState = WAITING;    //set flag - start waiting
 804:Veno-Echo.cpp ****             saveTimer = System::GetNow();   //reset timer
 805:Veno-Echo.cpp ****         }
 806:Veno-Echo.cpp ****         
 807:Veno-Echo.cpp ****         else    //save flag not set
 808:Veno-Echo.cpp ****         {
 809:Veno-Echo.cpp ****            if(saveState == WAITING)    //wait flag set (waiting)
 810:Veno-Echo.cpp ****            {
 811:Veno-Echo.cpp ****                if(System::GetNow() - saveTimer > 1000)  //1second wait to save
 812:Veno-Echo.cpp ****                 {
 813:Veno-Echo.cpp ****                     saveState = SAVING; //stop reading ADCs temporarily
 814:Veno-Echo.cpp ****                     
 815:Veno-Echo.cpp ****                     Settings ToSave{AltControls};   //copy settings
 816:Veno-Echo.cpp ****                     if (SaveSettings(ToSave) == DSY_MEMORY_OK)  //save settings
 817:Veno-Echo.cpp ****                     {
 818:Veno-Echo.cpp ****                     }
 819:Veno-Echo.cpp ****                 }
 820:Veno-Echo.cpp **** 
 821:Veno-Echo.cpp ****                 else{} //still waiting
 822:Veno-Echo.cpp **** 
 823:Veno-Echo.cpp ****            }
 824:Veno-Echo.cpp **** 
 825:Veno-Echo.cpp ****            if(saveState == SAVING)
 826:Veno-Echo.cpp ****            {
 827:Veno-Echo.cpp ****             if(System::GetNow() - saveTimer > 1200) //additional 0.2 second wait
 828:Veno-Echo.cpp ****             {
 829:Veno-Echo.cpp ****                     saveState = IDLE;   //reset saveState
 830:Veno-Echo.cpp ****             }
 831:Veno-Echo.cpp ****             else{} //ADCs paused
 832:Veno-Echo.cpp **** 
 833:Veno-Echo.cpp ****            }
 834:Veno-Echo.cpp **** 
 835:Veno-Echo.cpp ****            else //IDLE - do nothing
 836:Veno-Echo.cpp ****            {
 837:Veno-Echo.cpp ****            }
 838:Veno-Echo.cpp ****         }
 839:Veno-Echo.cpp **** 
 840:Veno-Echo.cpp ****      }
 841:Veno-Echo.cpp **** 
 842:Veno-Echo.cpp **** }
 843:Veno-Echo.cpp **** 
 844:Veno-Echo.cpp **** void Update_DelayTimeL_CV()
 845:Veno-Echo.cpp **** {
 1022              		.loc 20 845 1 is_stmt 1 view -0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 0
 1025              		@ frame_needed = 0, uses_anonymous_args = 0
 846:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1026              		.loc 20 846 5 view .LVU201
 845:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1027              		.loc 20 845 1 is_stmt 0 view .LVU202
 1028 0000 08B5     		push	{r3, lr}
 1029              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 51


 1030              		.cfi_offset 3, -8
 1031              		.cfi_offset 14, -4
 1032              		.loc 20 846 36 view .LVU203
 1033 0002 0021     		movs	r1, #0
 1034 0004 0348     		ldr	r0, .L40
 1035 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1036              	.LVL39:
 1037              		.loc 20 846 19 view .LVU204
 1038 000a 034B     		ldr	r3, .L40+4
 1039 000c 83ED000A 		vstr.32	s0, [r3]
 847:Veno-Echo.cpp **** }
 1040              		.loc 20 847 1 view .LVU205
 1041 0010 08BD     		pop	{r3, pc}
 1042              	.L41:
 1043 0012 00BF     		.align	2
 1044              	.L40:
 1045 0014 18000000 		.word	.LANCHOR4+24
 1046 0018 00000000 		.word	.LANCHOR5
 1047              		.cfi_endproc
 1048              	.LFE4312:
 1050              		.section	.text._Z17Update_DelayTimeLv,"ax",%progbits
 1051              		.align	1
 1052              		.p2align 2,,3
 1053              		.global	_Z17Update_DelayTimeLv
 1054              		.syntax unified
 1055              		.thumb
 1056              		.thumb_func
 1057              		.fpu fpv5-d16
 1059              	_Z17Update_DelayTimeLv:
 1060              	.LFB4313:
 848:Veno-Echo.cpp **** 
 849:Veno-Echo.cpp **** void Update_DelayTimeL()
 850:Veno-Echo.cpp **** {
 1061              		.loc 20 850 1 is_stmt 1 view -0
 1062              		.cfi_startproc
 1063              		@ args = 0, pretend = 0, frame = 0
 1064              		@ frame_needed = 0, uses_anonymous_args = 0
 851:Veno-Echo.cpp ****     static bool lastShift{};
 1065              		.loc 20 851 5 view .LVU207
 852:Veno-Echo.cpp ****     static bool delayTimeL_pickup{};
 1066              		.loc 20 852 5 view .LVU208
 853:Veno-Echo.cpp ****     static bool Rev_DelayTime_pickup{};
 1067              		.loc 20 853 5 view .LVU209
 854:Veno-Echo.cpp ****     
 855:Veno-Echo.cpp ****     static float delayTimeL_Last{};
 1068              		.loc 20 855 5 view .LVU210
 856:Veno-Echo.cpp **** 
 857:Veno-Echo.cpp ****     //update pot values
 858:Veno-Echo.cpp ****     float delayTimeL_Pot{hw.adc.GetMuxFloat(7,2)};
 1069              		.loc 20 858 5 view .LVU211
 850:Veno-Echo.cpp ****     static bool lastShift{};
 1070              		.loc 20 850 1 is_stmt 0 view .LVU212
 1071 0000 10B5     		push	{r4, lr}
 1072              		.cfi_def_cfa_offset 8
 1073              		.cfi_offset 4, -8
 1074              		.cfi_offset 14, -4
 1075              		.loc 20 858 44 view .LVU213
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 52


 1076 0002 0222     		movs	r2, #2
 1077 0004 0721     		movs	r1, #7
 1078 0006 7648     		ldr	r0, .L75
 1079 0008 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1080              	.LVL40:
 859:Veno-Echo.cpp **** 
 860:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 861:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 862:Veno-Echo.cpp ****     static int counterL{};
 863:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 1081              		.loc 20 863 26 view .LVU214
 1082 000c 7549     		ldr	r1, .L75+4
 1083              		.loc 20 863 31 view .LVU215
 1084 000e 764B     		ldr	r3, .L75+8
 1085              	.LVL41:
 862:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 1086              		.loc 20 862 5 is_stmt 1 view .LVU216
 1087              		.loc 20 863 5 view .LVU217
 1088              		.loc 20 863 26 is_stmt 0 view .LVU218
 1089 0010 0A68     		ldr	r2, [r1]
 1090              	.LBB998:
 864:Veno-Echo.cpp **** 
 865:Veno-Echo.cpp ****     if (!shift) //default control
 1091              		.loc 20 865 9 view .LVU219
 1092 0012 7648     		ldr	r0, .L75+12
 1093              	.LBE998:
 863:Veno-Echo.cpp **** 
 1094              		.loc 20 863 26 view .LVU220
 1095 0014 0132     		adds	r2, r2, #1
 1096              	.LBB1071:
 1097              		.loc 20 865 5 view .LVU221
 1098 0016 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1099              	.LBE1071:
 863:Veno-Echo.cpp **** 
 1100              		.loc 20 863 31 view .LVU222
 1101 0018 83FB0243 		smull	r4, r3, r3, r2
 1102 001c D417     		asrs	r4, r2, #31
 1103 001e C4EB6313 		rsb	r3, r4, r3, asr #5
 1104 0022 03EB4303 		add	r3, r3, r3, lsl #1
 1105 0026 A2EB8313 		sub	r3, r2, r3, lsl #6
 1106              	.LBB1072:
 1107              	.LBB999:
 866:Veno-Echo.cpp ****     {
 867:Veno-Echo.cpp ****         static float delayTimeL_new{};
 868:Veno-Echo.cpp ****         //udpate pickup
 869:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 1108              		.loc 20 869 19 view .LVU223
 1109 002a 714A     		ldr	r2, .L75+16
 1110              	.LBE999:
 1111              	.LBE1072:
 863:Veno-Echo.cpp **** 
 1112              		.loc 20 863 14 view .LVU224
 1113 002c 0B60     		str	r3, [r1]
 865:Veno-Echo.cpp ****     {
 1114              		.loc 20 865 5 is_stmt 1 view .LVU225
 1115              	.LBB1073:
 1116 002e 80BB     		cbnz	r0, .L43
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 53


 1117              	.LBB1018:
 867:Veno-Echo.cpp ****         //udpate pickup
 1118              		.loc 20 867 9 view .LVU226
 1119              		.loc 20 869 9 view .LVU227
 1120 0030 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1121 0032 0029     		cmp	r1, #0
 1122 0034 38D0     		beq	.L44
 870:Veno-Echo.cpp ****         {
 871:Veno-Echo.cpp ****             lastShift = shift;
 1123              		.loc 20 871 13 view .LVU228
 872:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1124              		.loc 20 872 31 is_stmt 0 view .LVU229
 1125 0036 6F4C     		ldr	r4, .L75+20
 873:Veno-Echo.cpp ****             delayTimeL_new = delayTimeL_Pot;   //update new value
 1126              		.loc 20 873 28 view .LVU230
 1127 0038 6F49     		ldr	r1, .L75+24
 871:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1128              		.loc 20 871 23 view .LVU231
 1129 003a 1070     		strb	r0, [r2]
 872:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1130              		.loc 20 872 13 is_stmt 1 view .LVU232
 872:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1131              		.loc 20 872 31 is_stmt 0 view .LVU233
 1132 003c 2070     		strb	r0, [r4]
 1133              		.loc 20 873 13 is_stmt 1 view .LVU234
 1134              		.loc 20 873 28 is_stmt 0 view .LVU235
 1135 003e 81ED000A 		vstr.32	s0, [r1]
 1136              	.L45:
 874:Veno-Echo.cpp ****         } 
 875:Veno-Echo.cpp ****         else    //not a recent shift change
 876:Veno-Echo.cpp ****         {
 877:Veno-Echo.cpp ****             if(!delayTimeL_pickup)  //not picked up
 878:Veno-Echo.cpp ****             {
 879:Veno-Echo.cpp ****                 if(abs(delayTimeL_Pot - delayTimeL_new) > pickupTolerance)  //checked if changed fr
 880:Veno-Echo.cpp ****                 {
 881:Veno-Echo.cpp ****                     delayTimeL_pickup = true;   //set to picked up
 882:Veno-Echo.cpp ****                 }
 883:Veno-Echo.cpp ****             }
 884:Veno-Echo.cpp ****         }
 885:Veno-Echo.cpp **** 
 886:Veno-Echo.cpp ****         float delayTimeL{};
 1137              		.loc 20 886 9 is_stmt 1 view .LVU236
 1138              	.LVL42:
 887:Veno-Echo.cpp **** 
 888:Veno-Echo.cpp ****         if(delayTimeL_pickup)
 1139              		.loc 20 888 9 view .LVU237
 889:Veno-Echo.cpp ****         {
 890:Veno-Echo.cpp ****             delayTimeL = PotCVCombo(delayTimeL_Pot,delayTimeL_CV);  //combine pot value and CV
 891:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 892:Veno-Echo.cpp ****         }
 893:Veno-Echo.cpp **** 
 894:Veno-Echo.cpp ****         else
 895:Veno-Echo.cpp ****         {
 896:Veno-Echo.cpp ****             delayTimeL = PotCVCombo(delayTimeL_Last,delayTimeL_CV); //combine last pot value and CV
 1140              		.loc 20 896 13 view .LVU238
 1141              	.LBB1000:
 1142              	.LBI1000:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 54


 897:Veno-Echo.cpp ****         }
 898:Veno-Echo.cpp **** 
 899:Veno-Echo.cpp ****         if(counterL == 0)
 900:Veno-Echo.cpp ****         {
 901:Veno-Echo.cpp ****             if(delayL.SetDelayTime(delayTimeL,syncMode))
 902:Veno-Echo.cpp ****             {
 903:Veno-Echo.cpp ****             };
 904:Veno-Echo.cpp ****         }
 905:Veno-Echo.cpp **** 
 906:Veno-Echo.cpp ****     }   //not shift mode
 907:Veno-Echo.cpp **** 
 908:Veno-Echo.cpp ****     else    //shift mode
 909:Veno-Echo.cpp ****     {
 910:Veno-Echo.cpp ****         static float Rev_DelayTime_new{};
 911:Veno-Echo.cpp **** 
 912:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 913:Veno-Echo.cpp ****         {
 914:Veno-Echo.cpp ****             lastShift = shift;
 915:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 916:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 917:Veno-Echo.cpp ****         }
 918:Veno-Echo.cpp **** 
 919:Veno-Echo.cpp ****         else    //not a recent shift change
 920:Veno-Echo.cpp ****         {
 921:Veno-Echo.cpp ****             if(!Rev_DelayTime_pickup) //not picked up
 922:Veno-Echo.cpp ****             {
 923:Veno-Echo.cpp ****                 if(abs(delayTimeL_Pot - Rev_DelayTime_new) > pickupTolerance)
 924:Veno-Echo.cpp ****                 {
 925:Veno-Echo.cpp ****                     Rev_DelayTime_pickup = true;   //set picked up
 926:Veno-Echo.cpp ****                 }
 927:Veno-Echo.cpp ****             }
 928:Veno-Echo.cpp ****         }
 929:Veno-Echo.cpp **** 
 930:Veno-Echo.cpp ****         if(Rev_DelayTime_pickup)
 931:Veno-Echo.cpp ****         {
 932:Veno-Echo.cpp ****             float Rev_DelayTime{scale(delayTimeL_Pot,maxRevDelay,minRevDelay,EXPONENTIAL)};
 933:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 934:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 935:Veno-Echo.cpp ****             //save setting:
 936:Veno-Echo.cpp ****             AltControls.RevLength = Rev_DelayTime;
 937:Veno-Echo.cpp ****             save_flag = true;
 938:Veno-Echo.cpp ****         }
 939:Veno-Echo.cpp ****     }
 940:Veno-Echo.cpp ****     
 941:Veno-Echo.cpp **** }
 942:Veno-Echo.cpp **** 
 943:Veno-Echo.cpp **** void Update_DelayTimeR_CV()
 944:Veno-Echo.cpp **** {
 945:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 946:Veno-Echo.cpp **** }
 947:Veno-Echo.cpp **** 
 948:Veno-Echo.cpp **** void Update_DelayTimeR()
 949:Veno-Echo.cpp **** {
 950:Veno-Echo.cpp ****     static bool lastShift{};
 951:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 952:Veno-Echo.cpp ****     static bool tapRatio_pickup{};
 953:Veno-Echo.cpp ****     
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 55


 954:Veno-Echo.cpp ****     static float delayTimeR_Last{};
 955:Veno-Echo.cpp **** 
 956:Veno-Echo.cpp ****     //update pot values
 957:Veno-Echo.cpp ****     float delayTimeR_Pot{hw.adc.GetMuxFloat(7,6)};
 958:Veno-Echo.cpp **** 
 959:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 960:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 961:Veno-Echo.cpp ****     static int counterR{};
 962:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 963:Veno-Echo.cpp **** 
 964:Veno-Echo.cpp ****     if (!shift) //default control
 965:Veno-Echo.cpp ****     {
 966:Veno-Echo.cpp ****         static float delayTimeR_new{};
 967:Veno-Echo.cpp ****         //udpate pickup
 968:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 969:Veno-Echo.cpp ****         {
 970:Veno-Echo.cpp ****             lastShift = shift;
 971:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 972:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 973:Veno-Echo.cpp ****         } 
 974:Veno-Echo.cpp ****         else    //not a default shift change
 975:Veno-Echo.cpp ****         {
 976:Veno-Echo.cpp ****             if(!delayTimeR_pickup)  //not picked up
 977:Veno-Echo.cpp ****             {
 978:Veno-Echo.cpp ****                 if(abs(delayTimeR_Pot - delayTimeR_new) > pickupTolerance)  //checked if changed fr
 979:Veno-Echo.cpp ****                 {
 980:Veno-Echo.cpp ****                     delayTimeR_pickup = true;   //set to picked up
 981:Veno-Echo.cpp ****                 }
 982:Veno-Echo.cpp ****             }
 983:Veno-Echo.cpp ****         }
 984:Veno-Echo.cpp **** 
 985:Veno-Echo.cpp ****         float delayTimeR{};
 986:Veno-Echo.cpp **** 
 987:Veno-Echo.cpp ****         if(delayTimeR_pickup)
 988:Veno-Echo.cpp ****         {
 989:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Pot,delayTimeR_CV);
 990:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 991:Veno-Echo.cpp ****         }
 992:Veno-Echo.cpp **** 
 993:Veno-Echo.cpp ****         else
 994:Veno-Echo.cpp ****         {
 995:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Last,delayTimeR_CV);
 996:Veno-Echo.cpp ****         }
 997:Veno-Echo.cpp **** 
 998:Veno-Echo.cpp ****         if(counterR == 0)
 999:Veno-Echo.cpp ****         {
1000:Veno-Echo.cpp ****             if(delayR.SetDelayTime(delayTimeR,syncMode))
1001:Veno-Echo.cpp ****             {
1002:Veno-Echo.cpp ****             };
1003:Veno-Echo.cpp **** 
1004:Veno-Echo.cpp ****         }
1005:Veno-Echo.cpp ****     }   //not shift mode
1006:Veno-Echo.cpp **** 
1007:Veno-Echo.cpp ****     else    //shift mode
1008:Veno-Echo.cpp ****     {
1009:Veno-Echo.cpp **** 
1010:Veno-Echo.cpp ****         static float tapRatio_new{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 56


1011:Veno-Echo.cpp **** 
1012:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1013:Veno-Echo.cpp ****         {
1014:Veno-Echo.cpp ****             lastShift = shift;
1015:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
1016:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
1017:Veno-Echo.cpp ****         }
1018:Veno-Echo.cpp **** 
1019:Veno-Echo.cpp ****         else    //not a recent shift change
1020:Veno-Echo.cpp ****         {
1021:Veno-Echo.cpp ****             if(!tapRatio_pickup) //not picked up
1022:Veno-Echo.cpp ****             {
1023:Veno-Echo.cpp ****                 if(abs(delayTimeR_Pot - tapRatio_new) > pickupTolerance)
1024:Veno-Echo.cpp ****                 {
1025:Veno-Echo.cpp ****                     tapRatio_pickup = true;   //set picked up
1026:Veno-Echo.cpp ****                 }
1027:Veno-Echo.cpp ****             }
1028:Veno-Echo.cpp ****         }
1029:Veno-Echo.cpp **** 
1030:Veno-Echo.cpp ****         if(tapRatio_pickup)
1031:Veno-Echo.cpp ****         {
1032:Veno-Echo.cpp ****             float tapRatioInput{delayTimeR_Pot};
1033:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
1034:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
1035:Veno-Echo.cpp ****             //save setting:
1036:Veno-Echo.cpp ****             AltControls.tapRatio = GetTapRatio(tapRatio);
1037:Veno-Echo.cpp ****             save_flag = true;
1038:Veno-Echo.cpp ****         }
1039:Veno-Echo.cpp ****     }
1040:Veno-Echo.cpp ****     
1041:Veno-Echo.cpp **** }
1042:Veno-Echo.cpp **** void Update_feedbackL_CV()
1043:Veno-Echo.cpp **** {
1044:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
1045:Veno-Echo.cpp **** }
1046:Veno-Echo.cpp **** void Update_feedbackL()
1047:Veno-Echo.cpp **** {
1048:Veno-Echo.cpp ****     static bool lastShift{};
1049:Veno-Echo.cpp ****     static bool feedbackL_pickup{};
1050:Veno-Echo.cpp ****     static bool HPCutoff_pickup{};
1051:Veno-Echo.cpp **** 
1052:Veno-Echo.cpp ****     static float feedbackL_Last{};
1053:Veno-Echo.cpp **** 
1054:Veno-Echo.cpp ****     //get pot values:
1055:Veno-Echo.cpp ****     //float feedbackL_Pot{hw.adc.GetFloat(2)};
1056:Veno-Echo.cpp ****     float feedbackL_Pot{hw.adc.GetMuxFloat(7,1)};
1057:Veno-Echo.cpp **** 
1058:Veno-Echo.cpp ****     if (!shift) //default controls
1059:Veno-Echo.cpp ****     {   
1060:Veno-Echo.cpp ****         static float feedbackL_new{};
1061:Veno-Echo.cpp ****         //update pickup
1062:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1063:Veno-Echo.cpp ****         {
1064:Veno-Echo.cpp ****             lastShift = shift;
1065:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
1066:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
1067:Veno-Echo.cpp ****         } 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 57


1068:Veno-Echo.cpp ****         else    //not a default shift change
1069:Veno-Echo.cpp ****         {
1070:Veno-Echo.cpp ****             if(!feedbackL_pickup)  //not picked up
1071:Veno-Echo.cpp ****             {
1072:Veno-Echo.cpp ****                 if(abs(feedbackL_Pot - feedbackL_new) > pickupTolerance)  //checked if changed from
1073:Veno-Echo.cpp ****                 {
1074:Veno-Echo.cpp ****                     feedbackL_pickup = true;   //set to picked up
1075:Veno-Echo.cpp ****                 }
1076:Veno-Echo.cpp ****             }
1077:Veno-Echo.cpp ****         }
1078:Veno-Echo.cpp **** 
1079:Veno-Echo.cpp ****         float feedbackL_combo{};
1080:Veno-Echo.cpp **** 
1081:Veno-Echo.cpp ****         if(feedbackL_pickup)
1082:Veno-Echo.cpp ****         {
1083:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Pot,feedbackL_CV);
1084:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
1085:Veno-Echo.cpp ****         }
1086:Veno-Echo.cpp **** 
1087:Veno-Echo.cpp ****         else
1088:Veno-Echo.cpp ****         {
1089:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Last,feedbackL_CV);
1090:Veno-Echo.cpp ****         }
1091:Veno-Echo.cpp ****   
1092:Veno-Echo.cpp ****         float feedbackL_Target{scale(feedbackL_combo,0.0,maxFB,LINEAR)};  
1093:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
1094:Veno-Echo.cpp ****     }
1095:Veno-Echo.cpp ****     else    //alternate controls
1096:Veno-Echo.cpp ****     {
1097:Veno-Echo.cpp ****         static float HPCutoff_new{};
1098:Veno-Echo.cpp **** 
1099:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1100:Veno-Echo.cpp ****         {
1101:Veno-Echo.cpp ****             lastShift = shift;
1102:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
1103:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
1104:Veno-Echo.cpp ****         }
1105:Veno-Echo.cpp **** 
1106:Veno-Echo.cpp ****         else    //not a recent shift change
1107:Veno-Echo.cpp ****         {
1108:Veno-Echo.cpp ****             if(!HPCutoff_pickup) //not picked up
1109:Veno-Echo.cpp ****             {
1110:Veno-Echo.cpp ****                 if(abs(feedbackL_Pot - HPCutoff_new) > pickupTolerance)
1111:Veno-Echo.cpp ****                 {
1112:Veno-Echo.cpp ****                     HPCutoff_pickup = true;   //set picked up
1113:Veno-Echo.cpp ****                 }
1114:Veno-Echo.cpp ****             }
1115:Veno-Echo.cpp ****         }
1116:Veno-Echo.cpp **** 
1117:Veno-Echo.cpp ****         if(HPCutoff_pickup)
1118:Veno-Echo.cpp ****         {
1119:Veno-Echo.cpp ****             float HPCutoff{};
1120:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
1121:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
1122:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
1123:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
1124:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 58


1125:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
1126:Veno-Echo.cpp ****             save_flag = true;
1127:Veno-Echo.cpp ****         }
1128:Veno-Echo.cpp ****     }
1129:Veno-Echo.cpp **** }
1130:Veno-Echo.cpp **** 
1131:Veno-Echo.cpp **** void Update_feedbackR_CV()
1132:Veno-Echo.cpp **** {
1133:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
1134:Veno-Echo.cpp **** }
1135:Veno-Echo.cpp **** 
1136:Veno-Echo.cpp **** void Update_feedbackR()
1137:Veno-Echo.cpp **** {
1138:Veno-Echo.cpp ****     static bool lastShift{};
1139:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
1140:Veno-Echo.cpp ****     static bool LPCutoff_pickup{};
1141:Veno-Echo.cpp **** 
1142:Veno-Echo.cpp ****     static float feedbackR_Last{};
1143:Veno-Echo.cpp **** 
1144:Veno-Echo.cpp ****     //get pot values:
1145:Veno-Echo.cpp ****     float feedbackR_Pot{hw.adc.GetMuxFloat(7,4)};
1146:Veno-Echo.cpp **** 
1147:Veno-Echo.cpp ****     if (!shift) //default controls
1148:Veno-Echo.cpp ****     {   
1149:Veno-Echo.cpp ****         static float feedbackR_new{};
1150:Veno-Echo.cpp ****         //update pickup
1151:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1152:Veno-Echo.cpp ****         {
1153:Veno-Echo.cpp ****             lastShift = shift;
1154:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
1155:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
1156:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
1157:Veno-Echo.cpp ****         } 
1158:Veno-Echo.cpp ****         else    //not a recent shift change
1159:Veno-Echo.cpp ****         {
1160:Veno-Echo.cpp ****             if(!feedbackR_pickup)  //not picked up
1161:Veno-Echo.cpp ****             {
1162:Veno-Echo.cpp ****                 if(abs(feedbackR_Pot - feedbackR_new) > pickupTolerance)  //checked if changed from
1163:Veno-Echo.cpp ****                 {
1164:Veno-Echo.cpp ****                     feedbackR_pickup = true;   //set to picked up
1165:Veno-Echo.cpp ****                 }
1166:Veno-Echo.cpp ****             }
1167:Veno-Echo.cpp ****         }
1168:Veno-Echo.cpp **** 
1169:Veno-Echo.cpp ****         float feedbackR_combo{};
1170:Veno-Echo.cpp ****         
1171:Veno-Echo.cpp ****         if(feedbackR_pickup)
1172:Veno-Echo.cpp ****         {
1173:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Pot,feedbackR_CV);
1174:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
1175:Veno-Echo.cpp ****         }
1176:Veno-Echo.cpp **** 
1177:Veno-Echo.cpp ****         else
1178:Veno-Echo.cpp ****         {
1179:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Last,feedbackR_CV);
1180:Veno-Echo.cpp ****         }
1181:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 59


1182:Veno-Echo.cpp ****         float feedbackR_Target{scale(feedbackR_combo,0.0,maxFB,LINEAR)};
1183:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
1184:Veno-Echo.cpp ****     }
1185:Veno-Echo.cpp ****     else    //alternate controls
1186:Veno-Echo.cpp ****     {
1187:Veno-Echo.cpp **** 
1188:Veno-Echo.cpp ****         static float LPCutoff_new{};
1189:Veno-Echo.cpp **** 
1190:Veno-Echo.cpp ****          if (shift != lastShift) //recent shift change
1191:Veno-Echo.cpp ****         {
1192:Veno-Echo.cpp ****             lastShift = shift;
1193:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
1194:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
1195:Veno-Echo.cpp ****         }
1196:Veno-Echo.cpp **** 
1197:Veno-Echo.cpp ****         else    //not a recent shift change
1198:Veno-Echo.cpp ****         {
1199:Veno-Echo.cpp ****             if(!LPCutoff_pickup) //not picked up
1200:Veno-Echo.cpp ****             {
1201:Veno-Echo.cpp ****                 if(abs(feedbackR_Pot - LPCutoff_new) > pickupTolerance)
1202:Veno-Echo.cpp ****                 {
1203:Veno-Echo.cpp ****                     LPCutoff_pickup = true;   //set picked up
1204:Veno-Echo.cpp ****                 }
1205:Veno-Echo.cpp ****             }
1206:Veno-Echo.cpp ****         }
1207:Veno-Echo.cpp **** 
1208:Veno-Echo.cpp ****         if(LPCutoff_pickup)
1209:Veno-Echo.cpp ****         {
1210:Veno-Echo.cpp ****             float LPCutoff{};
1211:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
1212:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
1213:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
1214:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
1215:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
1216:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
1217:Veno-Echo.cpp ****             save_flag = true;
1218:Veno-Echo.cpp ****         }
1219:Veno-Echo.cpp ****     }
1220:Veno-Echo.cpp **** }
1221:Veno-Echo.cpp **** 
1222:Veno-Echo.cpp **** void Update_drywet_CV()
1223:Veno-Echo.cpp **** {
1224:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
1225:Veno-Echo.cpp **** }
1226:Veno-Echo.cpp **** 
1227:Veno-Echo.cpp **** void Update_drywet()
1228:Veno-Echo.cpp **** {
1229:Veno-Echo.cpp ****     static bool lastShift{};
1230:Veno-Echo.cpp ****     static bool drywet_pickup{};
1231:Veno-Echo.cpp ****     static bool Res_pickup{};
1232:Veno-Echo.cpp **** 
1233:Veno-Echo.cpp ****     static float drywet_Last{}; //last drywet position (unscaled)
1234:Veno-Echo.cpp ****     //static float Res_Last{}; //last res value (unscaled)
1235:Veno-Echo.cpp **** 
1236:Veno-Echo.cpp ****     //get pot values:
1237:Veno-Echo.cpp ****     //float drywet_Pot{hw.adc.GetFloat(4)};
1238:Veno-Echo.cpp ****     float drywet_Pot{hw.adc.GetMuxFloat(7,5)}; //read current pot position
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 60


1239:Veno-Echo.cpp **** 
1240:Veno-Echo.cpp ****     if (!shift) //default controls
1241:Veno-Echo.cpp ****     {   
1242:Veno-Echo.cpp **** 
1243:Veno-Echo.cpp ****         static float drywet_new{};
1244:Veno-Echo.cpp **** 
1245:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1246:Veno-Echo.cpp ****         {
1247:Veno-Echo.cpp ****             lastShift = shift;
1248:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
1249:Veno-Echo.cpp ****             drywet_pickup = false;  //set to not picked up
1250:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
1251:Veno-Echo.cpp ****         } 
1252:Veno-Echo.cpp ****         
1253:Veno-Echo.cpp ****         else    //not a recent shift change
1254:Veno-Echo.cpp ****         {
1255:Veno-Echo.cpp ****             if(!drywet_pickup)  //not pickup
1256:Veno-Echo.cpp ****             {
1257:Veno-Echo.cpp ****                 //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,false);
1258:Veno-Echo.cpp ****                 if(abs(drywet_Pot - drywet_new) > pickupTolerance)  //check if changed from new val
1259:Veno-Echo.cpp ****                 {
1260:Veno-Echo.cpp ****                     drywet_pickup = true;   //set to picked up
1261:Veno-Echo.cpp ****                 }
1262:Veno-Echo.cpp ****             }
1263:Veno-Echo.cpp **** 
1264:Veno-Echo.cpp ****         }
1265:Veno-Echo.cpp ****         
1266:Veno-Echo.cpp ****         float drywetcombo{};
1267:Veno-Echo.cpp **** 
1268:Veno-Echo.cpp ****         if (drywet_pickup)
1269:Veno-Echo.cpp ****         {
1270:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Pot,drywet_CV);    //combine pot and CV
1271:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
1272:Veno-Echo.cpp ****         }
1273:Veno-Echo.cpp **** 
1274:Veno-Echo.cpp ****         else
1275:Veno-Echo.cpp ****         {
1276:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Last,drywet_CV);    //combine last pot value and CV
1277:Veno-Echo.cpp ****         }
1278:Veno-Echo.cpp **** 
1279:Veno-Echo.cpp ****         float drywetTarget{};
1280:Veno-Echo.cpp **** 
1281:Veno-Echo.cpp ****         if(drywetcombo >= 0.98)
1282:Veno-Echo.cpp ****         {
1283:Veno-Echo.cpp ****             drywetTarget = 1.0f;
1284:Veno-Echo.cpp ****         }
1285:Veno-Echo.cpp ****         else if(drywetcombo <= 0.02)
1286:Veno-Echo.cpp ****         {
1287:Veno-Echo.cpp ****             drywetTarget = 0.0f;
1288:Veno-Echo.cpp ****         }
1289:Veno-Echo.cpp ****         else
1290:Veno-Echo.cpp ****         {
1291:Veno-Echo.cpp ****             drywetTarget = scale(drywetcombo,0.0,1.0,LINEAR); 
1292:Veno-Echo.cpp ****         }
1293:Veno-Echo.cpp **** 
1294:Veno-Echo.cpp ****         //fonepole(drywet,drywetTarget,0.032f); 
1295:Veno-Echo.cpp ****         fonepole(drywet,drywetTarget,0.016f); 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 61


1296:Veno-Echo.cpp ****     }
1297:Veno-Echo.cpp ****     else    //alternate controls
1298:Veno-Echo.cpp ****     {
1299:Veno-Echo.cpp ****         static float Res_new{};
1300:Veno-Echo.cpp **** 
1301:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1302:Veno-Echo.cpp ****         {
1303:Veno-Echo.cpp ****             lastShift = shift;
1304:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
1305:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
1306:Veno-Echo.cpp ****         }
1307:Veno-Echo.cpp **** 
1308:Veno-Echo.cpp ****         else    //not a recent shift change
1309:Veno-Echo.cpp ****         {
1310:Veno-Echo.cpp ****             if(!Res_pickup) //not picked up
1311:Veno-Echo.cpp ****             {
1312:Veno-Echo.cpp ****                 if(abs(drywet_Pot - Res_new) > pickupTolerance)
1313:Veno-Echo.cpp ****                 {
1314:Veno-Echo.cpp ****                     Res_pickup = true;  //set picked up
1315:Veno-Echo.cpp ****                 }
1316:Veno-Echo.cpp ****             }
1317:Veno-Echo.cpp ****         }
1318:Veno-Echo.cpp **** 
1319:Veno-Echo.cpp ****         if(Res_pickup)
1320:Veno-Echo.cpp ****         {
1321:Veno-Echo.cpp ****             float Res{};
1322:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
1323:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
1324:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
1325:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
1326:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
1327:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
1328:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
1329:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
1330:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
1331:Veno-Echo.cpp ****             AltControls.Resonance = Res;
1332:Veno-Echo.cpp ****             save_flag = true;
1333:Veno-Echo.cpp ****         }
1334:Veno-Echo.cpp ****     }
1335:Veno-Echo.cpp **** }
1336:Veno-Echo.cpp **** 
1337:Veno-Echo.cpp **** void Update_width_CV()
1338:Veno-Echo.cpp **** {
1339:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
1340:Veno-Echo.cpp **** }
1341:Veno-Echo.cpp **** 
1342:Veno-Echo.cpp **** void Update_width()
1343:Veno-Echo.cpp **** {
1344:Veno-Echo.cpp ****     static bool lastShift{};
1345:Veno-Echo.cpp ****     static bool width_pickup{};
1346:Veno-Echo.cpp ****     static bool ModDepth_pickup{};
1347:Veno-Echo.cpp **** 
1348:Veno-Echo.cpp ****     static float width_Last{};
1349:Veno-Echo.cpp **** 
1350:Veno-Echo.cpp ****     //get pot values:
1351:Veno-Echo.cpp ****     float width_Pot{hw.adc.GetMuxFloat(7,7)};
1352:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 62


1353:Veno-Echo.cpp ****     if (!shift) //default controls
1354:Veno-Echo.cpp ****     {   
1355:Veno-Echo.cpp ****         static float width_new{};
1356:Veno-Echo.cpp ****         //update pickup
1357:Veno-Echo.cpp ****         if (shift != lastShift)
1358:Veno-Echo.cpp ****         {
1359:Veno-Echo.cpp ****             lastShift = shift;
1360:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
1361:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
1362:Veno-Echo.cpp ****         }
1363:Veno-Echo.cpp **** 
1364:Veno-Echo.cpp ****         else
1365:Veno-Echo.cpp ****         {
1366:Veno-Echo.cpp ****             if(!width_pickup)  //not picked up
1367:Veno-Echo.cpp ****             {
1368:Veno-Echo.cpp ****                 if(abs(width_Pot - width_new) > pickupTolerance)  //checked if changed from new val
1369:Veno-Echo.cpp ****                 {
1370:Veno-Echo.cpp ****                     width_pickup = true;   //set to picked up
1371:Veno-Echo.cpp ****                 }
1372:Veno-Echo.cpp ****             }
1373:Veno-Echo.cpp **** 
1374:Veno-Echo.cpp ****         }
1375:Veno-Echo.cpp **** 
1376:Veno-Echo.cpp ****         float widthTarget{};
1377:Veno-Echo.cpp **** 
1378:Veno-Echo.cpp ****         if(width_pickup)
1379:Veno-Echo.cpp ****         {
1380:Veno-Echo.cpp ****             widthTarget = scale(PotCVCombo(width_Pot,width_CV),0.5f,0.0f,LINEAR);
1381:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
1382:Veno-Echo.cpp ****         }
1383:Veno-Echo.cpp **** 
1384:Veno-Echo.cpp ****         else
1385:Veno-Echo.cpp ****         {        
1386:Veno-Echo.cpp ****             widthTarget = scale(PotCVCombo(width_Last,width_CV),0.5f,0.0f,LINEAR);
1387:Veno-Echo.cpp ****         }
1388:Veno-Echo.cpp ****             
1389:Veno-Echo.cpp ****             fonepole(width,widthTarget,0.032f);
1390:Veno-Echo.cpp ****             WidthXfade.SetPos(width);
1391:Veno-Echo.cpp ****     }
1392:Veno-Echo.cpp **** 
1393:Veno-Echo.cpp ****     else    //alternate controls
1394:Veno-Echo.cpp ****     {
1395:Veno-Echo.cpp ****         static float ModDepth_new{};
1396:Veno-Echo.cpp **** 
1397:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1398:Veno-Echo.cpp ****         {
1399:Veno-Echo.cpp ****             lastShift = shift;
1400:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
1401:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
1402:Veno-Echo.cpp ****         }
1403:Veno-Echo.cpp **** 
1404:Veno-Echo.cpp ****         else    //not a recent shift change
1405:Veno-Echo.cpp ****         {
1406:Veno-Echo.cpp ****             if(!ModDepth_pickup) //not picked up
1407:Veno-Echo.cpp ****             {
1408:Veno-Echo.cpp ****                 if(abs(width_Pot - ModDepth_new) > pickupTolerance)
1409:Veno-Echo.cpp ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 63


1410:Veno-Echo.cpp ****                     ModDepth_pickup = true;   //set picked up
1411:Veno-Echo.cpp ****                 }
1412:Veno-Echo.cpp ****             }
1413:Veno-Echo.cpp ****         }
1414:Veno-Echo.cpp **** 
1415:Veno-Echo.cpp ****         if(ModDepth_pickup)
1416:Veno-Echo.cpp ****         {
1417:Veno-Echo.cpp ****             ModDepth = scale(width_Pot,minModDepth,maxModDepth,LINEAR); 
1418:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
1419:Veno-Echo.cpp ****             save_flag = true;
1420:Veno-Echo.cpp ****         }
1421:Veno-Echo.cpp ****     }
1422:Veno-Echo.cpp **** }
1423:Veno-Echo.cpp **** 
1424:Veno-Echo.cpp **** void Update_crossfeedback()
1425:Veno-Echo.cpp **** {
1426:Veno-Echo.cpp ****     static bool lastShift{};
1427:Veno-Echo.cpp ****     static bool crossfeedback_pickup{};
1428:Veno-Echo.cpp ****     static bool modRate_pickup{};
1429:Veno-Echo.cpp **** 
1430:Veno-Echo.cpp ****     static float crossfeedback_Last{};
1431:Veno-Echo.cpp **** 
1432:Veno-Echo.cpp ****     //get pot values:
1433:Veno-Echo.cpp ****     float crossfeedback_Pot{hw.adc.GetMuxFloat(7,0)};
1434:Veno-Echo.cpp **** 
1435:Veno-Echo.cpp ****     if (!shift) //default controls
1436:Veno-Echo.cpp ****     {   
1437:Veno-Echo.cpp ****         static float crossfeedback_new{};
1438:Veno-Echo.cpp ****         //update pickup
1439:Veno-Echo.cpp ****         if (shift != lastShift)
1440:Veno-Echo.cpp ****         {
1441:Veno-Echo.cpp ****             lastShift = shift;
1442:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
1443:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
1444:Veno-Echo.cpp ****         }
1445:Veno-Echo.cpp **** 
1446:Veno-Echo.cpp ****         else
1447:Veno-Echo.cpp ****         {
1448:Veno-Echo.cpp ****             if(!crossfeedback_pickup)  //not picked up
1449:Veno-Echo.cpp ****             {
1450:Veno-Echo.cpp ****                 if(abs(crossfeedback_Pot - crossfeedback_new) > pickupTolerance)  //checked if chan
1451:Veno-Echo.cpp ****                 {
1452:Veno-Echo.cpp ****                     crossfeedback_pickup = true;   //set to picked up
1453:Veno-Echo.cpp ****                 }
1454:Veno-Echo.cpp ****             }
1455:Veno-Echo.cpp ****         }
1456:Veno-Echo.cpp ****         float crossfeedbackTarget{};
1457:Veno-Echo.cpp **** 
1458:Veno-Echo.cpp ****         if(crossfeedback_pickup)
1459:Veno-Echo.cpp ****         {
1460:Veno-Echo.cpp ****             crossfeedbackTarget = scale(crossfeedback_Pot,0.0,1.0,LINEAR);
1461:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
1462:Veno-Echo.cpp ****         }
1463:Veno-Echo.cpp **** 
1464:Veno-Echo.cpp ****         else
1465:Veno-Echo.cpp ****         {
1466:Veno-Echo.cpp ****             crossfeedbackTarget = scale(crossfeedback_Last,0.0,1.0,LINEAR);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 64


1467:Veno-Echo.cpp ****         }
1468:Veno-Echo.cpp **** 
1469:Veno-Echo.cpp ****         fonepole(crossfeedback,crossfeedbackTarget,0.032f);
1470:Veno-Echo.cpp ****     }
1471:Veno-Echo.cpp ****     else    //alternate controls
1472:Veno-Echo.cpp ****     {
1473:Veno-Echo.cpp ****         static float modRate_new{};
1474:Veno-Echo.cpp **** 
1475:Veno-Echo.cpp ****         if (shift != lastShift)
1476:Veno-Echo.cpp ****         {
1477:Veno-Echo.cpp ****             lastShift = shift;
1478:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
1479:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
1480:Veno-Echo.cpp ****         }
1481:Veno-Echo.cpp **** 
1482:Veno-Echo.cpp ****         else
1483:Veno-Echo.cpp ****         {
1484:Veno-Echo.cpp ****             if(!modRate_pickup)
1485:Veno-Echo.cpp ****             {
1486:Veno-Echo.cpp ****                 if(abs(crossfeedback_Pot - modRate_new) > pickupTolerance)
1487:Veno-Echo.cpp ****                 {
1488:Veno-Echo.cpp ****                     modRate_pickup = true; //set picked up
1489:Veno-Echo.cpp ****                 }
1490:Veno-Echo.cpp ****             }
1491:Veno-Echo.cpp ****         }
1492:Veno-Echo.cpp **** 
1493:Veno-Echo.cpp ****         if(modRate_pickup)
1494:Veno-Echo.cpp ****         {
1495:Veno-Echo.cpp ****             float modRate{scale(crossfeedback_Pot,minModRate,maxModRate,LINEAR)};
1496:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
1497:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
1498:Veno-Echo.cpp ****             save_flag = true;
1499:Veno-Echo.cpp ****         }
1500:Veno-Echo.cpp ****     }
1501:Veno-Echo.cpp **** }
1502:Veno-Echo.cpp **** 
1503:Veno-Echo.cpp **** void Update_filterXfade()
1504:Veno-Echo.cpp **** {
1505:Veno-Echo.cpp ****     static bool lastShift{};
1506:Veno-Echo.cpp ****     static bool filterXfade_pickup{};
1507:Veno-Echo.cpp ****     static bool PostFilters_pickup{};
1508:Veno-Echo.cpp **** 
1509:Veno-Echo.cpp ****     static float filterXfade_last{};
1510:Veno-Echo.cpp **** 
1511:Veno-Echo.cpp ****     //get pot values:
1512:Veno-Echo.cpp ****     float filterXfade_Pot{hw.adc.GetMuxFloat(7,3)};
1513:Veno-Echo.cpp **** 
1514:Veno-Echo.cpp ****     if (!shift) //default controls
1515:Veno-Echo.cpp ****     {   
1516:Veno-Echo.cpp ****         static float filterXfade_new{};
1517:Veno-Echo.cpp ****         //update pickup
1518:Veno-Echo.cpp ****         if (shift != lastShift)
1519:Veno-Echo.cpp ****         {
1520:Veno-Echo.cpp ****             lastShift = shift;
1521:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
1522:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
1523:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 65


1524:Veno-Echo.cpp **** 
1525:Veno-Echo.cpp ****         else
1526:Veno-Echo.cpp ****         {
1527:Veno-Echo.cpp ****             if(!filterXfade_pickup)  //not picked up
1528:Veno-Echo.cpp ****             {
1529:Veno-Echo.cpp ****                 if(abs(filterXfade_Pot - filterXfade_new) > pickupTolerance)  //checked if changed 
1530:Veno-Echo.cpp ****                 {
1531:Veno-Echo.cpp ****                     filterXfade_pickup = true;   //set to picked up
1532:Veno-Echo.cpp ****                 }
1533:Veno-Echo.cpp ****             }
1534:Veno-Echo.cpp ****         }
1535:Veno-Echo.cpp **** 
1536:Veno-Echo.cpp ****         float filterXfadeTarget{};
1537:Veno-Echo.cpp **** 
1538:Veno-Echo.cpp ****         if(filterXfade_pickup)
1539:Veno-Echo.cpp ****         {
1540:Veno-Echo.cpp ****             filterXfadeTarget = scale(filterXfade_Pot,0.0,1.0,EXPONENTIAL);
1541:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
1542:Veno-Echo.cpp ****         }
1543:Veno-Echo.cpp **** 
1544:Veno-Echo.cpp ****         else
1545:Veno-Echo.cpp ****         {
1546:Veno-Echo.cpp ****             filterXfadeTarget = scale(filterXfade_last,0.0,1.0,EXPONENTIAL);
1547:Veno-Echo.cpp ****         }
1548:Veno-Echo.cpp **** 
1549:Veno-Echo.cpp ****         fonepole(filterXfade,filterXfadeTarget,0.032f);
1550:Veno-Echo.cpp ****     }
1551:Veno-Echo.cpp ****     else    //alternate controls
1552:Veno-Echo.cpp ****     {
1553:Veno-Echo.cpp **** 
1554:Veno-Echo.cpp ****         static float PostFilters_new{};
1555:Veno-Echo.cpp **** 
1556:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1557:Veno-Echo.cpp ****         {
1558:Veno-Echo.cpp ****             lastShift = shift;
1559:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
1560:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
1561:Veno-Echo.cpp ****         }
1562:Veno-Echo.cpp **** 
1563:Veno-Echo.cpp ****         else    //not a recent shift change
1564:Veno-Echo.cpp ****         {
1565:Veno-Echo.cpp ****             if(!PostFilters_pickup) //not picked up
1566:Veno-Echo.cpp ****             {
1567:Veno-Echo.cpp ****                 if(abs(filterXfade_Pot - PostFilters_new) > pickupTolerance)
1568:Veno-Echo.cpp ****                 {
1569:Veno-Echo.cpp ****                     PostFilters_pickup = true;   //set picked up
1570:Veno-Echo.cpp ****                 }
1571:Veno-Echo.cpp ****             }
1572:Veno-Echo.cpp ****         }
1573:Veno-Echo.cpp ****         
1574:Veno-Echo.cpp ****         if(PostFilters_pickup)
1575:Veno-Echo.cpp ****         {
1576:Veno-Echo.cpp ****             if(filterXfade_Pot < 0.45f)
1577:Veno-Echo.cpp ****             {
1578:Veno-Echo.cpp ****                 PostFilters = false;
1579:Veno-Echo.cpp ****             }
1580:Veno-Echo.cpp ****             else if(filterXfade_Pot > 0.55f)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 66


1581:Veno-Echo.cpp ****             {
1582:Veno-Echo.cpp ****                 PostFilters = true;
1583:Veno-Echo.cpp ****             }
1584:Veno-Echo.cpp ****             else
1585:Veno-Echo.cpp ****             {
1586:Veno-Echo.cpp ****               //do nothing
1587:Veno-Echo.cpp ****             }
1588:Veno-Echo.cpp ****             AltControls.FilterPrePost = filterXfade_Pot;
1589:Veno-Echo.cpp ****             save_flag = true;
1590:Veno-Echo.cpp ****         }  
1591:Veno-Echo.cpp ****     }
1592:Veno-Echo.cpp **** }
1593:Veno-Echo.cpp **** 
1594:Veno-Echo.cpp **** void GetModCV()
1595:Veno-Echo.cpp **** {
1596:Veno-Echo.cpp ****     //get modulation CV input
1597:Veno-Echo.cpp ****     modulation_CV_Raw = scale(hw.adc.GetFloat(6),-1.0f * maxModAmp,maxModAmp,LINEAR);
1598:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
1599:Veno-Echo.cpp **** }
1600:Veno-Echo.cpp **** 
1601:Veno-Echo.cpp **** void Update_Mod()
1602:Veno-Echo.cpp **** {    
1603:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
1604:Veno-Echo.cpp ****     static float modulation_CV{};
1605:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
1606:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
1607:Veno-Echo.cpp ****     //calculate InternalMod
1608:Veno-Echo.cpp ****     float internalmod{lfo.Process() * ModDepth_Filtered};
1609:Veno-Echo.cpp ****     //apply modulation to delay lines
1610:Veno-Echo.cpp ****     delayL.SetModulation(modulation_CV + internalmod);
1611:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
1612:Veno-Echo.cpp **** }
1613:Veno-Echo.cpp **** 
1614:Veno-Echo.cpp **** void UpdateClock()
1615:Veno-Echo.cpp **** {
1616:Veno-Echo.cpp ****     static int divCounter{};
1617:Veno-Echo.cpp ****     ClockIn.Debounce();
1618:Veno-Echo.cpp **** 
1619:Veno-Echo.cpp ****     //if clock in pulse received
1620:Veno-Echo.cpp ****     if (ClockIn.RisingEdge())    
1621:Veno-Echo.cpp ****     {   
1622:Veno-Echo.cpp ****         divCounter = (divCounter + 1) % PPQN;
1623:Veno-Echo.cpp ****         //tempoLED_BASE.resetPhase();
1624:Veno-Echo.cpp ****         if(divCounter == 0)
1625:Veno-Echo.cpp ****         {
1626:Veno-Echo.cpp ****             if(BaseTempo.tap()) //if valid tap resistered
1627:Veno-Echo.cpp ****             {
1628:Veno-Echo.cpp ****                 tempoLED_BASE.setTempo(BaseTempo.getTapFreq()); //set new base freq
1629:Veno-Echo.cpp ****                 AltControls.tapLength = BaseTempo.getTapLength();
1630:Veno-Echo.cpp ****                 save_flag = true;
1631:Veno-Echo.cpp ****             }
1632:Veno-Echo.cpp ****         }
1633:Veno-Echo.cpp ****     }
1634:Veno-Echo.cpp ****     
1635:Veno-Echo.cpp **** }
1636:Veno-Echo.cpp **** 
1637:Veno-Echo.cpp **** void Update_Buttons()
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 67


1638:Veno-Echo.cpp **** {  
1639:Veno-Echo.cpp ****     static uint32_t shiftTime{};
1640:Veno-Echo.cpp ****     static uint32_t resetTime{};
1641:Veno-Echo.cpp ****     static int buttonstate{};
1642:Veno-Echo.cpp **** 
1643:Veno-Echo.cpp ****     Rev_L_sw.update();
1644:Veno-Echo.cpp ****     Rev_R_sw.update();
1645:Veno-Echo.cpp ****     LPF_sw.update();
1646:Veno-Echo.cpp ****     HPF_sw.update();
1647:Veno-Echo.cpp ****     Tap_Button.update();
1648:Veno-Echo.cpp **** 
1649:Veno-Echo.cpp ****     ReverseGateL.Debounce();
1650:Veno-Echo.cpp ****     ReverseGateR.Debounce();
1651:Veno-Echo.cpp ****     //TapButton.Debounce();
1652:Veno-Echo.cpp ****     Sync.Debounce();
1653:Veno-Echo.cpp ****     ClockIn.Debounce();
1654:Veno-Echo.cpp ****     //gate inputs
1655:Veno-Echo.cpp ****     if (ReverseGateL.RisingEdge())
1656:Veno-Echo.cpp ****     {
1657:Veno-Echo.cpp ****         Rev_L_sw.toggle();
1658:Veno-Echo.cpp ****         if(Rev_L_sw.getState())
1659:Veno-Echo.cpp ****         {
1660:Veno-Echo.cpp ****             AltControls.L_Rev = 1.0f;
1661:Veno-Echo.cpp ****         }
1662:Veno-Echo.cpp ****         else
1663:Veno-Echo.cpp ****         {
1664:Veno-Echo.cpp ****             AltControls.L_Rev = 0.0f;
1665:Veno-Echo.cpp ****         }
1666:Veno-Echo.cpp ****         save_flag = true;
1667:Veno-Echo.cpp ****     }
1668:Veno-Echo.cpp **** 
1669:Veno-Echo.cpp ****     if (ReverseGateR.RisingEdge())
1670:Veno-Echo.cpp ****     {
1671:Veno-Echo.cpp ****         Rev_R_sw.toggle();
1672:Veno-Echo.cpp ****         if(Rev_R_sw.getState())
1673:Veno-Echo.cpp ****         {
1674:Veno-Echo.cpp ****             AltControls.R_Rev = 1.0f;
1675:Veno-Echo.cpp ****         }
1676:Veno-Echo.cpp ****         else
1677:Veno-Echo.cpp ****         {
1678:Veno-Echo.cpp ****             AltControls.R_Rev = 0.0f;
1679:Veno-Echo.cpp ****         }
1680:Veno-Echo.cpp ****         save_flag = true;
1681:Veno-Echo.cpp ****     }
1682:Veno-Echo.cpp **** 
1683:Veno-Echo.cpp ****     //buttons
1684:Veno-Echo.cpp **** 
1685:Veno-Echo.cpp ****     if (Rev_L_sw.RisingEdge())
1686:Veno-Echo.cpp ****     {
1687:Veno-Echo.cpp ****         buttonstate += 1;
1688:Veno-Echo.cpp ****         if (buttonstate == 3)
1689:Veno-Echo.cpp ****         {
1690:Veno-Echo.cpp ****             resetTime = System::GetNow();
1691:Veno-Echo.cpp ****         }
1692:Veno-Echo.cpp ****         if(Rev_L_sw.getState())
1693:Veno-Echo.cpp ****         {
1694:Veno-Echo.cpp ****             AltControls.L_Rev = 1.0f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 68


1695:Veno-Echo.cpp ****         }
1696:Veno-Echo.cpp ****         else
1697:Veno-Echo.cpp ****         {
1698:Veno-Echo.cpp ****             AltControls.L_Rev = 0.0f;
1699:Veno-Echo.cpp ****         }
1700:Veno-Echo.cpp ****         save_flag = true;
1701:Veno-Echo.cpp ****     }
1702:Veno-Echo.cpp **** 
1703:Veno-Echo.cpp ****     if (Rev_L_sw.FallingEdge())
1704:Veno-Echo.cpp ****     {
1705:Veno-Echo.cpp ****         buttonstate -= 1;
1706:Veno-Echo.cpp ****     }
1707:Veno-Echo.cpp **** 
1708:Veno-Echo.cpp ****     if (Rev_R_sw.RisingEdge())
1709:Veno-Echo.cpp ****     {
1710:Veno-Echo.cpp ****         buttonstate += 1;
1711:Veno-Echo.cpp ****         if (buttonstate == 3)
1712:Veno-Echo.cpp ****         {
1713:Veno-Echo.cpp ****             resetTime = System::GetNow();
1714:Veno-Echo.cpp ****         }
1715:Veno-Echo.cpp ****         if(Rev_R_sw.getState())
1716:Veno-Echo.cpp ****         {
1717:Veno-Echo.cpp ****             AltControls.R_Rev = 1.0f;
1718:Veno-Echo.cpp ****         }
1719:Veno-Echo.cpp ****         else
1720:Veno-Echo.cpp ****         {
1721:Veno-Echo.cpp ****             AltControls.R_Rev = 0.0f;
1722:Veno-Echo.cpp ****         }
1723:Veno-Echo.cpp ****         save_flag = true;
1724:Veno-Echo.cpp ****     }
1725:Veno-Echo.cpp **** 
1726:Veno-Echo.cpp ****     if (Rev_R_sw.FallingEdge())
1727:Veno-Echo.cpp ****     {
1728:Veno-Echo.cpp ****         buttonstate -= 1;
1729:Veno-Echo.cpp ****     }
1730:Veno-Echo.cpp **** 
1731:Veno-Echo.cpp ****     if (Tap_Button.RisingEdge())    
1732:Veno-Echo.cpp ****     {
1733:Veno-Echo.cpp ****         if(BaseTempo.tap()) //if tempo changed
1734:Veno-Echo.cpp ****         {
1735:Veno-Echo.cpp ****             tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1736:Veno-Echo.cpp ****             AltControls.tapLength = BaseTempo.getTapLength();
1737:Veno-Echo.cpp ****             save_flag = true;
1738:Veno-Echo.cpp ****         }
1739:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
1740:Veno-Echo.cpp ****         
1741:Veno-Echo.cpp **** 
1742:Veno-Echo.cpp ****         shiftTime = System::GetNow();   //reset shift timer
1743:Veno-Echo.cpp ****         buttonstate += 1;
1744:Veno-Echo.cpp ****         
1745:Veno-Echo.cpp ****         if (buttonstate == 3)
1746:Veno-Echo.cpp ****         {
1747:Veno-Echo.cpp ****             resetTime = System::GetNow();
1748:Veno-Echo.cpp ****         }
1749:Veno-Echo.cpp **** 
1750:Veno-Echo.cpp ****     }
1751:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 69


1752:Veno-Echo.cpp ****     if (Tap_Button.FallingEdge())    //when button is let go shift is off
1753:Veno-Echo.cpp ****     {
1754:Veno-Echo.cpp ****         shift = false;
1755:Veno-Echo.cpp ****         buttonstate -= 1;
1756:Veno-Echo.cpp ****         mute = false;
1757:Veno-Echo.cpp ****     }
1758:Veno-Echo.cpp **** 
1759:Veno-Echo.cpp ****     if (Tap_Button.getState())
1760:Veno-Echo.cpp ****     {
1761:Veno-Echo.cpp ****         if ( (System::GetNow() - shiftTime) > shiftWait)
1762:Veno-Echo.cpp ****         {
1763:Veno-Echo.cpp ****             shift = true;   //turn on shift if button held for longer than shiftWait
1764:Veno-Echo.cpp ****         } 
1765:Veno-Echo.cpp ****     }
1766:Veno-Echo.cpp **** 
1767:Veno-Echo.cpp ****     if (buttonstate == 3) //all buttons held
1768:Veno-Echo.cpp ****     {
1769:Veno-Echo.cpp **** 
1770:Veno-Echo.cpp ****             if( ((System::GetNow() - resetTime) > resetWait) )
1771:Veno-Echo.cpp ****             {
1772:Veno-Echo.cpp ****                 Rev_L_sw.toggle();
1773:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
1774:Veno-Echo.cpp ****                 ResetAllLEDs();
1775:Veno-Echo.cpp ****                 //don't let reset or shift update
1776:Veno-Echo.cpp ****                 shift = false;
1777:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
1778:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
1779:Veno-Echo.cpp ****                 resetTime = System::GetNow();
1780:Veno-Echo.cpp ****                 save_flag = true;
1781:Veno-Echo.cpp ****             }
1782:Veno-Echo.cpp ****     } 
1783:Veno-Echo.cpp **** 
1784:Veno-Echo.cpp ****     syncMode = Sync.Pressed() ? true : false;
1785:Veno-Echo.cpp **** }
1786:Veno-Echo.cpp **** 
1787:Veno-Echo.cpp **** void Update_DelayBaseTempo()
1788:Veno-Echo.cpp **** {
1789:Veno-Echo.cpp ****     delayL.SetBaseTempo(BaseTempo.getDelayLength());
1790:Veno-Echo.cpp ****     delayR.SetBaseTempo(BaseTempo.getDelayLength());
1791:Veno-Echo.cpp **** }
1792:Veno-Echo.cpp **** 
1793:Veno-Echo.cpp **** void Update_DelayTempoLEDs()
1794:Veno-Echo.cpp **** {    
1795:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
1796:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
1797:Veno-Echo.cpp ****     DELAYL_DEBUG = delayL.GetDelayTime();
1798:Veno-Echo.cpp ****     DELAYR_DEBUG = delayR.GetDelayTime();
1799:Veno-Echo.cpp **** }
1800:Veno-Echo.cpp **** 
1801:Veno-Echo.cpp **** void Update_BaseTempoLED()
1802:Veno-Echo.cpp **** {
1803:Veno-Echo.cpp ****     tempoLED_BASE.update();
1804:Veno-Echo.cpp **** 
1805:Veno-Echo.cpp ****     static int phaseCounter{};
1806:Veno-Echo.cpp **** 
1807:Veno-Echo.cpp ****     if(tempoLED_BASE.isEOC())
1808:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 70


1809:Veno-Echo.cpp ****         phaseCounter = (phaseCounter + 1) % 6;
1810:Veno-Echo.cpp ****     }
1811:Veno-Echo.cpp **** 
1812:Veno-Echo.cpp ****     float dividedPhase{(tempoLED_BASE.GetPhase() / 6) + ( (TWOPI_F / 6) * phaseCounter ) };
1813:Veno-Echo.cpp ****     //update base phase for both delay lines
1814:Veno-Echo.cpp ****     delayL.SetBasePhase( dividedPhase );
1815:Veno-Echo.cpp ****     delayR.SetBasePhase( dividedPhase );
1816:Veno-Echo.cpp ****     PHASE_DEBUG = dividedPhase;
1817:Veno-Echo.cpp **** }
1818:Veno-Echo.cpp **** 
1819:Veno-Echo.cpp **** 
1820:Veno-Echo.cpp **** void ApplySettings(const Settings &setting)
1821:Veno-Echo.cpp **** {
1822:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
1823:Veno-Echo.cpp ****     {
1824:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(setting.RevLength);
1825:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
1826:Veno-Echo.cpp ****     }
1827:Veno-Echo.cpp ****     else
1828:Veno-Echo.cpp ****     {
1829:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(defaultAltControls.RevLength);
1830:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
1831:Veno-Echo.cpp ****     }
1832:Veno-Echo.cpp **** 
1833:Veno-Echo.cpp ****     if((setting.tapRatio >= 1.0f) && (setting.tapRatio <= 3.0f ))
1834:Veno-Echo.cpp ****     {
1835:Veno-Echo.cpp ****         BaseTempo.setTapRatio(setting.tapRatio);
1836:Veno-Echo.cpp ****     }
1837:Veno-Echo.cpp ****     else
1838:Veno-Echo.cpp ****     {
1839:Veno-Echo.cpp ****         BaseTempo.setTapRatio(defaultAltControls.tapRatio);
1840:Veno-Echo.cpp ****     }
1841:Veno-Echo.cpp **** 
1842:Veno-Echo.cpp ****     if((setting.ModDepth >= minModDepth) && (setting.ModDepth <= maxModDepth))
1843:Veno-Echo.cpp ****     {
1844:Veno-Echo.cpp ****         ModDepth = setting.ModDepth;
1845:Veno-Echo.cpp ****     }
1846:Veno-Echo.cpp ****     else
1847:Veno-Echo.cpp ****     {
1848:Veno-Echo.cpp ****         ModDepth = defaultAltControls.ModDepth;
1849:Veno-Echo.cpp ****     }
1850:Veno-Echo.cpp **** 
1851:Veno-Echo.cpp ****     if((setting.ModFreq >= minModRate) && (setting.ModFreq <= maxModRate))
1852:Veno-Echo.cpp ****     {
1853:Veno-Echo.cpp ****         lfo.SetFreq(setting.ModFreq);
1854:Veno-Echo.cpp ****     }
1855:Veno-Echo.cpp ****     else
1856:Veno-Echo.cpp ****     {
1857:Veno-Echo.cpp ****         lfo.SetFreq(defaultAltControls.ModFreq);
1858:Veno-Echo.cpp ****     }
1859:Veno-Echo.cpp **** 
1860:Veno-Echo.cpp ****     if((setting.LP_Cutoff >= minLPCut) && (setting.LP_Cutoff <= maxLPCut))
1861:Veno-Echo.cpp ****     {
1862:Veno-Echo.cpp ****         LPF_L.SetFreq(setting.LP_Cutoff);
1863:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
1864:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
1865:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 71


1866:Veno-Echo.cpp ****     }
1867:Veno-Echo.cpp ****     else
1868:Veno-Echo.cpp ****     {
1869:Veno-Echo.cpp ****         LPF_L.SetFreq(defaultAltControls.LP_Cutoff);
1870:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
1871:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
1872:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
1873:Veno-Echo.cpp ****     }
1874:Veno-Echo.cpp ****     
1875:Veno-Echo.cpp ****     if((setting.HP_Cutoff >= minHPCut) && (setting.HP_Cutoff <= maxHPCut))
1876:Veno-Echo.cpp ****     {
1877:Veno-Echo.cpp ****         HPF_L.SetFreq(setting.HP_Cutoff);
1878:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
1879:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
1880:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
1881:Veno-Echo.cpp ****     }
1882:Veno-Echo.cpp ****     else
1883:Veno-Echo.cpp ****     {
1884:Veno-Echo.cpp ****         HPF_L.SetFreq(defaultAltControls.HP_Cutoff);
1885:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
1886:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
1887:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
1888:Veno-Echo.cpp **** 
1889:Veno-Echo.cpp ****     }
1890:Veno-Echo.cpp **** 
1891:Veno-Echo.cpp ****     if((setting.Resonance >= minRes) && (setting.Resonance <= maxRes))
1892:Veno-Echo.cpp ****     {
1893:Veno-Echo.cpp ****         LPF_L.SetRes(setting.Resonance);
1894:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
1895:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
1896:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
1897:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
1898:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
1899:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
1900:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
1901:Veno-Echo.cpp ****     }
1902:Veno-Echo.cpp **** 
1903:Veno-Echo.cpp ****     else
1904:Veno-Echo.cpp ****     {
1905:Veno-Echo.cpp ****         LPF_L_post.SetRes(defaultAltControls.Resonance);
1906:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
1907:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
1908:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
1909:Veno-Echo.cpp ****     }
1910:Veno-Echo.cpp **** 
1911:Veno-Echo.cpp ****     if(setting.FilterPrePost < 0.45f)
1912:Veno-Echo.cpp ****     {
1913:Veno-Echo.cpp ****         PostFilters = false;
1914:Veno-Echo.cpp ****     }
1915:Veno-Echo.cpp ****         else if(setting.FilterPrePost > 0.55f)
1916:Veno-Echo.cpp ****     {
1917:Veno-Echo.cpp ****         PostFilters = true;
1918:Veno-Echo.cpp ****     }
1919:Veno-Echo.cpp ****     else
1920:Veno-Echo.cpp ****     {
1921:Veno-Echo.cpp ****         PostFilters = false;    //default to pre filter
1922:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 72


1923:Veno-Echo.cpp **** 
1924:Veno-Echo.cpp ****     //if between min and max tap length
1925:Veno-Echo.cpp ****     if( (setting.tapLength >= static_cast<float> (mintap)) 
1926:Veno-Echo.cpp ****         && (setting.tapLength <= static_cast<float> (maxtap)) )
1927:Veno-Echo.cpp ****     {
1928:Veno-Echo.cpp ****         BaseTempo.setTapLength(setting.tapLength);
1929:Veno-Echo.cpp ****         tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1930:Veno-Echo.cpp ****     }
1931:Veno-Echo.cpp **** 
1932:Veno-Echo.cpp ****     else
1933:Veno-Echo.cpp ****     {
1934:Veno-Echo.cpp ****         BaseTempo.setTapLength(defaultAltControls.tapLength);
1935:Veno-Echo.cpp ****         tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1936:Veno-Echo.cpp ****     }
1937:Veno-Echo.cpp **** 
1938:Veno-Echo.cpp ****     if((setting.L_Rev > 0.49f)) //if more than half
1939:Veno-Echo.cpp ****     {
1940:Veno-Echo.cpp ****         Rev_L_sw.turnON();
1941:Veno-Echo.cpp ****     }
1942:Veno-Echo.cpp ****     else    //default OFF
1943:Veno-Echo.cpp ****     {
1944:Veno-Echo.cpp ****         Rev_L_sw.turnOFF();
1945:Veno-Echo.cpp ****     }
1946:Veno-Echo.cpp **** 
1947:Veno-Echo.cpp ****     if((setting.R_Rev > 0.49f)) //if more than half
1948:Veno-Echo.cpp ****     {
1949:Veno-Echo.cpp ****         Rev_R_sw.turnON();
1950:Veno-Echo.cpp ****     }
1951:Veno-Echo.cpp ****     else    //default OFF
1952:Veno-Echo.cpp ****     {
1953:Veno-Echo.cpp ****         Rev_R_sw.turnOFF();
1954:Veno-Echo.cpp ****     }
1955:Veno-Echo.cpp **** 
1956:Veno-Echo.cpp **** }
1957:Veno-Echo.cpp **** 
1958:Veno-Echo.cpp **** void TurnOnAllLEDs()
1959:Veno-Echo.cpp **** {
1960:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
1961:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
1962:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
1963:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
1964:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
1965:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
1966:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
1967:Veno-Echo.cpp **** }
1968:Veno-Echo.cpp **** 
1969:Veno-Echo.cpp **** void ResetAllLEDs()
1970:Veno-Echo.cpp **** {
1971:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
1972:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
1973:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
1974:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
1975:Veno-Echo.cpp ****     {
1976:Veno-Echo.cpp ****         Rev_L_sw.LED_set(0.0f);
1977:Veno-Echo.cpp ****     }
1978:Veno-Echo.cpp ****     else
1979:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 73


1980:Veno-Echo.cpp ****        Rev_L_sw.LED_set(1.0f);
1981:Veno-Echo.cpp ****     }
1982:Veno-Echo.cpp **** 
1983:Veno-Echo.cpp ****     if(!Rev_R_sw.getState())
1984:Veno-Echo.cpp ****     {
1985:Veno-Echo.cpp ****         Rev_R_sw.LED_set(0.0f);
1986:Veno-Echo.cpp ****     }
1987:Veno-Echo.cpp ****     else
1988:Veno-Echo.cpp ****     {
1989:Veno-Echo.cpp ****         Rev_R_sw.LED_set(1.0f);
1990:Veno-Echo.cpp ****     }
1991:Veno-Echo.cpp ****     
1992:Veno-Echo.cpp ****     LPF_sw.LED_set(0.0f);
1993:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
1994:Veno-Echo.cpp **** }
1995:Veno-Echo.cpp **** 
1996:Veno-Echo.cpp **** float HardLimit(float input, float limit)
1997:Veno-Echo.cpp **** {
1998:Veno-Echo.cpp ****     float returnval{};
1999:Veno-Echo.cpp ****     if (input > limit)
2000:Veno-Echo.cpp ****         returnval = limit;
2001:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
2002:Veno-Echo.cpp ****         returnval = limit * -1.0f;
2003:Veno-Echo.cpp ****     else
2004:Veno-Echo.cpp ****         returnval = input;
2005:Veno-Echo.cpp **** 
2006:Veno-Echo.cpp ****     return returnval;   
2007:Veno-Echo.cpp **** }
2008:Veno-Echo.cpp **** 
2009:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 1143              		.loc 20 2009 7 view .LVU239
 1144              	.LBB1001:
2010:Veno-Echo.cpp **** {
2011:Veno-Echo.cpp ****     float output{};
 1145              		.loc 20 2011 5 view .LVU240
2012:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1146              		.loc 20 2012 5 view .LVU241
 1147              	.LBE1001:
 1148              	.LBE1000:
 896:Veno-Echo.cpp ****         }
 1149              		.loc 20 896 36 is_stmt 0 view .LVU242
 1150 0042 6E49     		ldr	r1, .L75+28
 1151              	.LBB1005:
 1152              	.LBB1002:
 1153              		.loc 20 2012 39 view .LVU243
 1154 0044 F7EE006A 		vmov.f32	s13, #1.0e+0
 1155              		.loc 20 2012 49 view .LVU244
 1156 0048 F6EE005A 		vmov.f32	s11, #5.0e-1
 1157              	.LBE1002:
 1158              	.LBE1005:
 896:Veno-Echo.cpp ****         }
 1159              		.loc 20 896 36 view .LVU245
 1160 004c 6C4A     		ldr	r2, .L75+32
 1161              	.LBB1006:
 1162              	.LBB1003:
 1163              		.loc 20 2012 39 view .LVU246
 1164 004e 91ED007A 		vldr.32	s14, [r1]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 74


 1165              		.loc 20 2012 12 view .LVU247
 1166 0052 B0EE006A 		vmov.f32	s12, #2.0e+0
 1167 0056 D2ED007A 		vldr.32	s15, [r2]
 1168              		.loc 20 2012 39 view .LVU248
 1169 005a 36EEC77A 		vsub.f32	s14, s13, s14
 1170              		.loc 20 2012 49 view .LVU249
 1171 005e 37EE657A 		vsub.f32	s14, s14, s11
 1172              		.loc 20 2012 12 view .LVU250
 1173 0062 E7EE067A 		vfma.f32	s15, s14, s12
 1174              	.LVL43:
2013:Veno-Echo.cpp **** 
2014:Veno-Echo.cpp ****     if(output < 0.0f)
 1175              		.loc 20 2014 5 is_stmt 1 view .LVU251
 1176 0066 F5EEC07A 		vcmpe.f32	s15, #0
 1177 006a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1178 006e 00F1B180 		bmi	.L73
2015:Veno-Echo.cpp ****     {
2016:Veno-Echo.cpp ****         output = 0.0f;
2017:Veno-Echo.cpp ****     }
2018:Veno-Echo.cpp **** 
2019:Veno-Echo.cpp ****     if(output > 1.0f)
 1179              		.loc 20 2019 5 view .LVU252
2020:Veno-Echo.cpp ****     {
2021:Veno-Echo.cpp ****         output = 1.0f;
 1180              		.loc 20 2021 16 is_stmt 0 view .LVU253
 1181 0072 F4EE667A 		vcmp.f32	s15, s13
 1182 0076 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1183 007a 76FEA77A 		vselgt.f32	s15, s13, s15
 1184              	.LVL44:
 1185              	.L50:
 1186              		.loc 20 2021 16 view .LVU254
 1187              	.LBE1003:
 1188              	.LBE1006:
 899:Veno-Echo.cpp ****         {
 1189              		.loc 20 899 9 is_stmt 1 view .LVU255
 1190 007e 93B9     		cbnz	r3, .L42
 901:Veno-Echo.cpp ****             {
 1191              		.loc 20 901 13 view .LVU256
 901:Veno-Echo.cpp ****             {
 1192              		.loc 20 901 35 is_stmt 0 view .LVU257
 1193 0080 604B     		ldr	r3, .L75+36
 1194 0082 B0EE670A 		vmov.f32	s0, s15
 1195              	.LVL45:
 901:Veno-Echo.cpp ****             {
 1196              		.loc 20 901 35 view .LVU258
 1197 0086 6048     		ldr	r0, .L75+40
 1198 0088 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1199              	.LBE1018:
 1200              	.LBE1073:
 941:Veno-Echo.cpp **** 
 1201              		.loc 20 941 1 view .LVU259
 1202 008a BDE81040 		pop	{r4, lr}
 1203              		.cfi_remember_state
 1204              		.cfi_restore 14
 1205              		.cfi_restore 4
 1206              		.cfi_def_cfa_offset 0
 1207              	.LBB1074:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 75


 1208              	.LBB1019:
 901:Veno-Echo.cpp ****             {
 1209              		.loc 20 901 35 view .LVU260
 1210 008e FFF7FEBF 		b	_ZN10DelayMulti12SetDelayTimeEfb
 1211              	.LVL46:
 1212              	.L43:
 1213              		.cfi_restore_state
 901:Veno-Echo.cpp ****             {
 1214              		.loc 20 901 35 view .LVU261
 1215              	.LBE1019:
 1216              	.LBB1020:
 910:Veno-Echo.cpp **** 
 1217              		.loc 20 910 9 is_stmt 1 view .LVU262
 912:Veno-Echo.cpp ****         {
 1218              		.loc 20 912 9 view .LVU263
 1219 0092 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1220 0094 002B     		cmp	r3, #0
 1221 0096 3CD1     		bne	.L53
 914:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1222              		.loc 20 914 13 view .LVU264
 914:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1223              		.loc 20 914 23 is_stmt 0 view .LVU265
 1224 0098 0124     		movs	r4, #1
 915:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1225              		.loc 20 915 34 view .LVU266
 1226 009a 5C48     		ldr	r0, .L75+44
 916:Veno-Echo.cpp ****         }
 1227              		.loc 20 916 31 view .LVU267
 1228 009c 5C49     		ldr	r1, .L75+48
 914:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1229              		.loc 20 914 23 view .LVU268
 1230 009e 1470     		strb	r4, [r2]
 915:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1231              		.loc 20 915 13 is_stmt 1 view .LVU269
 915:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1232              		.loc 20 915 34 is_stmt 0 view .LVU270
 1233 00a0 0370     		strb	r3, [r0]
 916:Veno-Echo.cpp ****         }
 1234              		.loc 20 916 13 is_stmt 1 view .LVU271
 916:Veno-Echo.cpp ****         }
 1235              		.loc 20 916 31 is_stmt 0 view .LVU272
 1236 00a2 81ED000A 		vstr.32	s0, [r1]
 1237              	.L42:
 916:Veno-Echo.cpp ****         }
 1238              		.loc 20 916 31 view .LVU273
 1239              	.LBE1020:
 1240              	.LBE1074:
 941:Veno-Echo.cpp **** 
 1241              		.loc 20 941 1 view .LVU274
 1242 00a6 10BD     		pop	{r4, pc}
 1243              	.L44:
 1244              	.LBB1075:
 1245              	.LBB1068:
 877:Veno-Echo.cpp ****             {
 1246              		.loc 20 877 13 is_stmt 1 view .LVU275
 877:Veno-Echo.cpp ****             {
 1247              		.loc 20 877 16 is_stmt 0 view .LVU276
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 76


 1248 00a8 524A     		ldr	r2, .L75+20
 877:Veno-Echo.cpp ****             {
 1249              		.loc 20 877 13 view .LVU277
 1250 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1251 00ac 79B9     		cbnz	r1, .L46
 879:Veno-Echo.cpp ****                 {
 1252              		.loc 20 879 17 is_stmt 1 view .LVU278
 1253              	.LVL47:
 1254              	.LBB1007:
 1255              	.LBI1007:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1256              		.loc 21 75 3 view .LVU279
 1257              	.LBB1008:
 1258              		.loc 21 76 5 view .LVU280
 1259              		.loc 21 76 5 is_stmt 0 view .LVU281
 1260              	.LBE1008:
 1261              	.LBE1007:
 879:Veno-Echo.cpp ****                 {
 1262              		.loc 20 879 23 view .LVU282
 1263 00ae 5249     		ldr	r1, .L75+24
 879:Veno-Echo.cpp ****                 {
 1264              		.loc 20 879 17 view .LVU283
 1265 00b0 9FED587A 		vldr.32	s14, .L75+52
 879:Veno-Echo.cpp ****                 {
 1266              		.loc 20 879 23 view .LVU284
 1267 00b4 D1ED007A 		vldr.32	s15, [r1]
 1268 00b8 70EE677A 		vsub.f32	s15, s0, s15
 1269              	.LBB1010:
 1270              	.LBB1009:
 1271              		.loc 21 76 31 view .LVU285
 1272 00bc F0EEE77A 		vabs.f32	s15, s15
 1273              	.LBE1009:
 1274              	.LBE1010:
 879:Veno-Echo.cpp ****                 {
 1275              		.loc 20 879 17 view .LVU286
 1276 00c0 F4EEC77A 		vcmpe.f32	s15, s14
 1277 00c4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1278 00c8 BBDD     		ble	.L45
 881:Veno-Echo.cpp ****                 }
 1279              		.loc 20 881 21 is_stmt 1 view .LVU287
 881:Veno-Echo.cpp ****                 }
 1280              		.loc 20 881 39 is_stmt 0 view .LVU288
 1281 00ca 0121     		movs	r1, #1
 1282 00cc 1170     		strb	r1, [r2]
 1283              	.L46:
 886:Veno-Echo.cpp **** 
 1284              		.loc 20 886 9 is_stmt 1 view .LVU289
 1285              	.LVL48:
 888:Veno-Echo.cpp ****         {
 1286              		.loc 20 888 9 view .LVU290
 890:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 1287              		.loc 20 890 13 view .LVU291
 1288              	.LBB1011:
 1289              	.LBI1011:
2009:Veno-Echo.cpp **** {
 1290              		.loc 20 2009 7 view .LVU292
 1291              	.LBB1012:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 77


2011:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1292              		.loc 20 2011 5 view .LVU293
2012:Veno-Echo.cpp **** 
 1293              		.loc 20 2012 5 view .LVU294
 1294              	.LBE1012:
 1295              	.LBE1011:
 890:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 1296              		.loc 20 890 36 is_stmt 0 view .LVU295
 1297 00ce 4B4A     		ldr	r2, .L75+28
 1298              	.LBB1015:
 1299              	.LBB1013:
2012:Veno-Echo.cpp **** 
 1300              		.loc 20 2012 39 view .LVU296
 1301 00d0 B7EE007A 		vmov.f32	s14, #1.0e+0
2012:Veno-Echo.cpp **** 
 1302              		.loc 20 2012 49 view .LVU297
 1303 00d4 B6EE006A 		vmov.f32	s12, #5.0e-1
2012:Veno-Echo.cpp **** 
 1304              		.loc 20 2012 39 view .LVU298
 1305 00d8 D2ED007A 		vldr.32	s15, [r2]
2012:Veno-Echo.cpp **** 
 1306              		.loc 20 2012 12 view .LVU299
 1307 00dc F0EE006A 		vmov.f32	s13, #2.0e+0
2012:Veno-Echo.cpp **** 
 1308              		.loc 20 2012 39 view .LVU300
 1309 00e0 77EE677A 		vsub.f32	s15, s14, s15
2012:Veno-Echo.cpp **** 
 1310              		.loc 20 2012 49 view .LVU301
 1311 00e4 77EEC67A 		vsub.f32	s15, s15, s12
2012:Veno-Echo.cpp **** 
 1312              		.loc 20 2012 12 view .LVU302
 1313 00e8 B0EE406A 		vmov.f32	s12, s0
 1314 00ec A7EEA66A 		vfma.f32	s12, s15, s13
2014:Veno-Echo.cpp ****     {
 1315              		.loc 20 2014 5 view .LVU303
 1316 00f0 B5EEC06A 		vcmpe.f32	s12, #0
2012:Veno-Echo.cpp **** 
 1317              		.loc 20 2012 12 view .LVU304
 1318 00f4 F0EE467A 		vmov.f32	s15, s12
 1319              	.LVL49:
2014:Veno-Echo.cpp ****     {
 1320              		.loc 20 2014 5 is_stmt 1 view .LVU305
 1321 00f8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1322 00fc 6DD4     		bmi	.L74
2019:Veno-Echo.cpp ****     {
 1323              		.loc 20 2019 5 view .LVU306
 1324              		.loc 20 2021 16 is_stmt 0 view .LVU307
 1325 00fe F4EE477A 		vcmp.f32	s15, s14
 1326 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1327 0106 77FE277A 		vselgt.f32	s15, s14, s15
 1328              	.L48:
 1329              	.LVL50:
2022:Veno-Echo.cpp ****     }
2023:Veno-Echo.cpp **** 
2024:Veno-Echo.cpp ****     return output;
 1330              		.loc 20 2024 5 is_stmt 1 view .LVU308
 1331              		.loc 20 2024 5 is_stmt 0 view .LVU309
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 78


 1332              	.LBE1013:
 1333              	.LBE1015:
 891:Veno-Echo.cpp ****         }
 1334              		.loc 20 891 13 is_stmt 1 view .LVU310
 891:Veno-Echo.cpp ****         }
 1335              		.loc 20 891 29 is_stmt 0 view .LVU311
 1336 010a 3D4A     		ldr	r2, .L75+32
 1337 010c 82ED000A 		vstr.32	s0, [r2]
 1338 0110 B5E7     		b	.L50
 1339              	.LVL51:
 1340              	.L53:
 891:Veno-Echo.cpp ****         }
 1341              		.loc 20 891 29 view .LVU312
 1342              	.LBE1068:
 1343              	.LBB1069:
 921:Veno-Echo.cpp ****             {
 1344              		.loc 20 921 13 is_stmt 1 view .LVU313
 921:Veno-Echo.cpp ****             {
 1345              		.loc 20 921 16 is_stmt 0 view .LVU314
 1346 0112 3E4B     		ldr	r3, .L75+44
 921:Veno-Echo.cpp ****             {
 1347              		.loc 20 921 13 view .LVU315
 1348 0114 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1349 0116 7AB9     		cbnz	r2, .L54
 923:Veno-Echo.cpp ****                 {
 1350              		.loc 20 923 17 is_stmt 1 view .LVU316
 1351              	.LVL52:
 1352              	.LBB1021:
 1353              	.LBI1021:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1354              		.loc 21 75 3 view .LVU317
 1355              	.LBB1022:
 1356              		.loc 21 76 5 view .LVU318
 1357              		.loc 21 76 5 is_stmt 0 view .LVU319
 1358              	.LBE1022:
 1359              	.LBE1021:
 923:Veno-Echo.cpp ****                 {
 1360              		.loc 20 923 23 view .LVU320
 1361 0118 3D4A     		ldr	r2, .L75+48
 923:Veno-Echo.cpp ****                 {
 1362              		.loc 20 923 17 view .LVU321
 1363 011a 9FED3E7A 		vldr.32	s14, .L75+52
 923:Veno-Echo.cpp ****                 {
 1364              		.loc 20 923 23 view .LVU322
 1365 011e D2ED007A 		vldr.32	s15, [r2]
 1366 0122 70EE677A 		vsub.f32	s15, s0, s15
 1367              	.LBB1024:
 1368              	.LBB1023:
 1369              		.loc 21 76 31 view .LVU323
 1370 0126 F0EEE77A 		vabs.f32	s15, s15
 1371              	.LBE1023:
 1372              	.LBE1024:
 923:Veno-Echo.cpp ****                 {
 1373              		.loc 20 923 17 view .LVU324
 1374 012a F4EEC77A 		vcmpe.f32	s15, s14
 1375 012e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1376 0132 B8DD     		ble	.L42
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 79


 925:Veno-Echo.cpp ****                 }
 1377              		.loc 20 925 21 is_stmt 1 view .LVU325
 925:Veno-Echo.cpp ****                 }
 1378              		.loc 20 925 42 is_stmt 0 view .LVU326
 1379 0134 0122     		movs	r2, #1
 1380 0136 1A70     		strb	r2, [r3]
 1381              	.L54:
 930:Veno-Echo.cpp ****         {
 1382              		.loc 20 930 9 is_stmt 1 view .LVU327
 1383              	.LBB1025:
 932:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 1384              		.loc 20 932 13 view .LVU328
 932:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 1385              		.loc 20 932 38 is_stmt 0 view .LVU329
 1386 0138 0120     		movs	r0, #1
 1387 013a 9FED371A 		vldr.32	s2, .L75+56
 1388 013e DFED370A 		vldr.32	s1, .L75+60
 1389 0142 FFF7FEFF 		bl	_Z5scalefff9CurveType
 1390              	.LVL53:
 1391              	.LBB1026:
 1392              	.LBB1027:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1393              		.loc 20 70 28 view .LVU330
 1394 0146 364B     		ldr	r3, .L75+64
 1395              	.LVL54:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1396              		.loc 20 70 28 view .LVU331
 1397              	.LBE1027:
 1398              	.LBE1026:
 933:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 1399              		.loc 20 933 13 is_stmt 1 view .LVU332
 1400              	.LBB1041:
 1401              	.LBI1026:
  68:Veno-Echo.cpp ****     {
 1402              		.loc 20 68 10 view .LVU333
 1403              	.LBB1039:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1404              		.loc 20 70 9 view .LVU334
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1405              		.loc 20 70 53 is_stmt 0 view .LVU335
 1406 0148 DFED326A 		vldr.32	s13, .L75+52
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1407              		.loc 20 70 28 view .LVU336
 1408 014c D3ED017A 		vldr.32	s15, [r3, #4]
 1409              	.LVL55:
 1410              	.LBB1028:
 1411              	.LBI1028:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1412              		.loc 21 75 3 is_stmt 1 view .LVU337
 1413              	.LBB1029:
 1414              		.loc 21 76 5 view .LVU338
 1415              		.loc 21 76 5 is_stmt 0 view .LVU339
 1416              	.LBE1029:
 1417              	.LBE1028:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1418              		.loc 20 70 15 view .LVU340
 1419 0150 30EE677A 		vsub.f32	s14, s0, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 80


  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1420              		.loc 20 70 53 view .LVU341
 1421 0154 67EEA67A 		vmul.f32	s15, s15, s13
 1422              	.LBB1031:
 1423              	.LBB1030:
 1424              		.loc 21 76 31 view .LVU342
 1425 0158 B0EEC77A 		vabs.f32	s14, s14
 1426              	.LBE1030:
 1427              	.LBE1031:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1428              		.loc 20 70 9 view .LVU343
 1429 015c B4EEE77A 		vcmpe.f32	s14, s15
 1430 0160 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1431 0164 0DDD     		ble	.L62
  74:Veno-Echo.cpp ****             //del -> Reset();
 1432              		.loc 20 74 29 view .LVU344
 1433 0166 FCEEC07A 		vcvt.u32.f32	s15, s0
 1434              	.LBB1032:
 1435              	.LBB1033:
 1436              		.loc 19 72 9 view .LVU345
 1437 016a 2E4C     		ldr	r4, .L75+68
 1438              	.LBE1033:
 1439              	.LBE1032:
 1440              	.LBE1039:
 1441              	.LBE1041:
 933:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 1442              		.loc 20 933 37 view .LVU346
 1443 016c 1968     		ldr	r1, [r3]
 1444              	.LBB1042:
 1445              	.LBB1040:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1446              		.loc 20 73 13 is_stmt 1 view .LVU347
 1447              	.LBB1036:
 1448              	.LBB1034:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1449              		.loc 19 71 9 is_stmt 0 view .LVU348
 1450 016e 0020     		movs	r0, #0
 1451              	.LBE1034:
 1452              	.LBE1036:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1453              		.loc 20 73 27 view .LVU349
 1454 0170 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 1455              		.loc 20 74 13 is_stmt 1 view .LVU350
 1456              	.LVL56:
 1457              	.LBB1037:
 1458              	.LBI1032:
  69:delayline_reverse.h ****     {
 1459              		.loc 19 69 17 view .LVU351
  69:delayline_reverse.h ****     {
 1460              		.loc 19 69 17 is_stmt 0 view .LVU352
 1461              	.LBE1037:
  74:Veno-Echo.cpp ****             //del -> Reset();
 1462              		.loc 20 74 29 view .LVU353
 1463 0174 17EE902A 		vmov	r2, s15	@ int
 1464              	.LBB1038:
 1465              	.LBB1035:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 81


  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1466              		.loc 19 71 9 view .LVU354
 1467 0178 0860     		str	r0, [r1]	@ float
 1468              		.loc 19 72 9 view .LVU355
 1469 017a A242     		cmp	r2, r4
 1470 017c 28BF     		it	cs
 1471 017e 2246     		movcs	r2, r4
 1472 0180 0A61     		str	r2, [r1, #16]
 1473              	.LVL57:
 1474              	.L62:
 1475              		.loc 19 72 9 view .LVU356
 1476              	.LBE1035:
 1477              	.LBE1038:
 1478              	.LBE1040:
 1479              	.LBE1042:
 934:Veno-Echo.cpp ****             //save setting:
 1480              		.loc 20 934 13 is_stmt 1 view .LVU357
 1481              	.LBB1043:
 1482              	.LBI1043:
  68:Veno-Echo.cpp ****     {
 1483              		.loc 20 68 10 view .LVU358
 1484              	.LBB1044:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1485              		.loc 20 70 9 view .LVU359
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1486              		.loc 20 70 28 is_stmt 0 view .LVU360
 1487 0182 294B     		ldr	r3, .L75+72
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1488              		.loc 20 70 53 view .LVU361
 1489 0184 DFED236A 		vldr.32	s13, .L75+52
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1490              		.loc 20 70 28 view .LVU362
 1491 0188 D3ED017A 		vldr.32	s15, [r3, #4]
 1492              	.LVL58:
 1493              	.LBB1045:
 1494              	.LBI1045:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1495              		.loc 21 75 3 is_stmt 1 view .LVU363
 1496              	.LBB1046:
 1497              		.loc 21 76 5 view .LVU364
 1498              		.loc 21 76 5 is_stmt 0 view .LVU365
 1499              	.LBE1046:
 1500              	.LBE1045:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1501              		.loc 20 70 15 view .LVU366
 1502 018c 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1503              		.loc 20 70 53 view .LVU367
 1504 0190 67EEA67A 		vmul.f32	s15, s15, s13
 1505              	.LBB1048:
 1506              	.LBB1047:
 1507              		.loc 21 76 31 view .LVU368
 1508 0194 B0EEC77A 		vabs.f32	s14, s14
 1509              	.LBE1047:
 1510              	.LBE1048:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1511              		.loc 20 70 9 view .LVU369
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 82


 1512 0198 B4EEE77A 		vcmpe.f32	s14, s15
 1513 019c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1514 01a0 0DDD     		ble	.L56
  74:Veno-Echo.cpp ****             //del -> Reset();
 1515              		.loc 20 74 29 view .LVU370
 1516 01a2 FCEEC07A 		vcvt.u32.f32	s15, s0
 1517              	.LBB1049:
 1518              	.LBB1050:
 1519              		.loc 19 72 9 view .LVU371
 1520 01a6 1F4C     		ldr	r4, .L75+68
 1521              	.LBE1050:
 1522              	.LBE1049:
 1523              	.LBE1044:
 1524              	.LBE1043:
 934:Veno-Echo.cpp ****             //save setting:
 1525              		.loc 20 934 37 view .LVU372
 1526 01a8 1968     		ldr	r1, [r3]
 1527              	.LBB1057:
 1528              	.LBB1056:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1529              		.loc 20 73 13 is_stmt 1 view .LVU373
 1530              	.LBB1053:
 1531              	.LBB1051:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1532              		.loc 19 71 9 is_stmt 0 view .LVU374
 1533 01aa 0020     		movs	r0, #0
 1534              	.LBE1051:
 1535              	.LBE1053:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1536              		.loc 20 73 27 view .LVU375
 1537 01ac 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 1538              		.loc 20 74 13 is_stmt 1 view .LVU376
 1539              	.LVL59:
 1540              	.LBB1054:
 1541              	.LBI1049:
  69:delayline_reverse.h ****     {
 1542              		.loc 19 69 17 view .LVU377
  69:delayline_reverse.h ****     {
 1543              		.loc 19 69 17 is_stmt 0 view .LVU378
 1544              	.LBE1054:
  74:Veno-Echo.cpp ****             //del -> Reset();
 1545              		.loc 20 74 29 view .LVU379
 1546 01b0 17EE902A 		vmov	r2, s15	@ int
 1547              	.LBB1055:
 1548              	.LBB1052:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1549              		.loc 19 71 9 view .LVU380
 1550 01b4 0860     		str	r0, [r1]	@ float
 1551              		.loc 19 72 9 view .LVU381
 1552 01b6 A242     		cmp	r2, r4
 1553 01b8 28BF     		it	cs
 1554 01ba 2246     		movcs	r2, r4
 1555 01bc 0A61     		str	r2, [r1, #16]
 1556              	.LVL60:
 1557              	.L56:
 1558              		.loc 19 72 9 view .LVU382
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 83


 1559              	.LBE1052:
 1560              	.LBE1055:
 1561              	.LBE1056:
 1562              	.LBE1057:
 936:Veno-Echo.cpp ****             save_flag = true;
 1563              		.loc 20 936 13 is_stmt 1 view .LVU383
 936:Veno-Echo.cpp ****             save_flag = true;
 1564              		.loc 20 936 35 is_stmt 0 view .LVU384
 1565 01be 1B49     		ldr	r1, .L75+76
 1566              	.LBB1058:
 1567              	.LBB1059:
 1568              	.LBB1060:
 1569              	.LBB1061:
 1570              	.LBB1062:
 1571              		.file 22 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** /** @file bits/atomic_base.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  Do not attempt to use it directly. @headername{atomic}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ATOMIC_BASE_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ATOMIC_BASE_H 1
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <stdint.h>
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/atomic_lockfree_defines.h>
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 84


  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** namespace std _GLIBCXX_VISIBILITY(default)
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** {
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @defgroup atomics Atomics
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * Components for performing atomic operations.
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @{
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    */
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Enumeration for memory_order
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __cplusplus > 201703L
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum class memory_order : int
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       relaxed,
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       consume,
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acquire,
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       release,
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acq_rel,
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       seq_cst
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_relaxed = memory_order::relaxed;
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_consume = memory_order::consume;
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acquire = memory_order::acquire;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_release = memory_order::release;
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acq_rel = memory_order::acq_rel;
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_seq_cst = memory_order::seq_cst;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   typedef enum memory_order
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_relaxed,
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_consume,
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acquire,
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_release,
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acq_rel,
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_seq_cst
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     } memory_order;
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum __memory_order_modifier
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_mask          = 0x0ffff,
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_modifier_mask = 0xffff0000,
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_acquire   = 0x10000,
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_release   = 0x20000
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator|(memory_order __m, __memory_order_modifier __mod)
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) | int(__mod));
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator&(memory_order __m, __memory_order_modifier __mod)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 85


 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) & int(__mod));
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Drop release ordering as per [atomics.types.operations.req]/21
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order2(memory_order __m) noexcept
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return __m == memory_order_acq_rel ? memory_order_acquire
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __m == memory_order_release ? memory_order_relaxed : __m;
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order(memory_order __m) noexcept
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(__cmpexch_failure_order2(__m & __memory_order_mask)
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       | __memory_order_modifier(__m & __memory_order_modifier_mask));
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_thread_fence(memory_order __m) noexcept
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_thread_fence(int(__m)); }
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_signal_fence(memory_order __m) noexcept
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_signal_fence(int(__m)); }
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// kill_dependency
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     inline _Tp
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     kill_dependency(_Tp __y) noexcept
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _Tp __ret(__y);
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __ret;
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Base types for atomics.
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _IntTp>
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base;
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_VAR_INIT(_VI) { _VI }
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic;
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic<_Tp*>;
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     /* The target's "set" value for test-and-set may not be exactly 1.  */
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __GCC_ATOMIC_TEST_AND_SET_TRUEVAL == 1
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef bool __atomic_flag_data_type;
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef unsigned char __atomic_flag_data_type;
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 86


 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  @brief Base type for atomic_flag.
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  Base type is POD with data, allowing atomic_flag to derive from
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  it and meet the standard layout type requirement. In addition to
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  compatibility with a C interface, this allows different
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  implementations of atomic_flag to use the same atomic operation
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  functions, via a standard conversion to the __atomic_flag_base
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  argument.
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   */
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_BEGIN_EXTERN_C
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct __atomic_flag_base
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     __atomic_flag_data_type _M_i;
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_END_EXTERN_C
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_FLAG_INIT { 0 }
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// atomic_flag
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct atomic_flag : public __atomic_flag_base
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag() noexcept = default;
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     ~atomic_flag() noexcept = default;
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag(const atomic_flag&) = delete;
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) = delete;
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) volatile = delete;
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     // Conversion to ATOMIC_FLAG_INIT.
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     constexpr atomic_flag(bool __i) noexcept
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __atomic_flag_base{ _S_init(__i) }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { }
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) noexcept
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) volatile noexcept
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) noexcept
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 87


 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) volatile noexcept
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   private:
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     static constexpr __atomic_flag_data_type
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _S_init(bool __i)
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { return __i ? __GCC_ATOMIC_TEST_AND_SET_TRUEVAL : 0; }
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Base class for atomic integrals.
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // For each of the integral types, define atomic_[integral type] struct
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_bool     bool
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char     char
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_schar    signed char
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uchar    unsigned char
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_short    short
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ushort   unsigned short
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_int      int
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uint     unsigned int
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_long     long
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ulong    unsigned long
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_llong    long long
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ullong   unsigned long long
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char8_t  char8_t
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char16_t char16_t
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char32_t char32_t
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_wchar_t  wchar_t
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // NB: Assuming _ITp is an integral scalar type that is 1, 2, 4, or
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // 8 bytes, since that is what GCC built-in functions for atomic
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // memory access expect.
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _ITp>
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using value_type = _ITp;
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using difference_type = value_type;
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     private:
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       typedef _ITp 	__int_type;
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       static constexpr int _S_alignment =
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	sizeof(_ITp) > alignof(_ITp) ? sizeof(_ITp) : alignof(_ITp);
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       alignas(_S_alignment) __int_type _M_i;
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 88


 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     public:
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base() noexcept = default;
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       ~__atomic_base() noexcept = default;
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base(const __atomic_base&) = delete;
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) = delete;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) volatile = delete;
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       // Requires __int_type convertible to _M_i.
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       constexpr __atomic_base(__int_type __i) noexcept : _M_i (__i) { }
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const noexcept
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const volatile noexcept
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) noexcept
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) volatile noexcept
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) noexcept
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) volatile noexcept
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) noexcept
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) volatile noexcept
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() noexcept
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() volatile noexcept
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() noexcept
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 89


 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() volatile noexcept
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) noexcept
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) volatile noexcept
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) noexcept
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) volatile noexcept
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) noexcept
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) volatile noexcept
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) noexcept
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) volatile noexcept
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) noexcept
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) volatile noexcept
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const noexcept
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const volatile noexcept
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 90


 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i, memory_order __m = memory_order_seq_cst) noexcept
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 1572              		.loc 22 397 18 view .LVU385
 1573 01c0 0122     		movs	r2, #1
 1574 01c2 1B4B     		ldr	r3, .L75+80
 1575              	.LBE1062:
 1576              	.LBE1061:
 1577              	.LBE1060:
 1578              	.LBE1059:
 1579              	.LBE1058:
 936:Veno-Echo.cpp ****             save_flag = true;
 1580              		.loc 20 936 35 view .LVU386
 1581 01c4 81ED000A 		vstr.32	s0, [r1]
 937:Veno-Echo.cpp ****         }
 1582              		.loc 20 937 13 is_stmt 1 view .LVU387
 1583              	.LVL61:
 1584              	.LBB1067:
 1585              	.LBI1058:
 1586              		.file 23 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** /** @file include/atomic
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  *  This is a Standard C++ Library header.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 91


  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Based on "C++ Atomic Types and Operations" by Hans Boehm and Lawrence Crowl.
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2427.html
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #ifndef _GLIBCXX_ATOMIC
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #define _GLIBCXX_ATOMIC 1
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #pragma GCC system_header
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus < 201103L
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # include <bits/c++0x_warning.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #else
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/atomic_base.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/move.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** namespace std _GLIBCXX_VISIBILITY(default)
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** {
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /**
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @addtogroup atomics
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @{
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    */
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus >= 201703L
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # define __cpp_lib_atomic_is_always_lock_free 201603
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #endif
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<typename _Tp>
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     struct atomic;
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /// atomic<bool>
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   // NB: No operators or fetch-operations for this type.
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<>
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   struct atomic<bool>
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   {
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     using value_type = bool;
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   private:
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     __atomic_base<bool>	_M_base;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   public:
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic() noexcept = default;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     ~atomic() noexcept = default;
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic(const atomic&) = delete;
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) = delete;
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) volatile = delete;
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     constexpr atomic(bool __i) noexcept : _M_base(__i) { }
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) noexcept
 1587              		.loc 23 80 5 view .LVU388
 1588              	.LBB1066:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 1589              		.loc 23 81 7 view .LVU389
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 92


 1590              	.LBB1065:
 1591              	.LBI1060:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 1592              		.loc 22 288 7 view .LVU390
 1593              	.LBB1064:
 1594              	.LBI1061:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 1595              		.loc 22 390 7 view .LVU391
 1596              	.LBB1063:
 1597              		.loc 22 397 18 is_stmt 0 view .LVU392
 1598 01c8 BFF35B8F 		dmb	ish
 1599 01cc 1A70     		strb	r2, [r3]
 1600 01ce BFF35B8F 		dmb	ish
 1601              	.LVL62:
 1602              		.loc 22 397 18 view .LVU393
 1603              	.LBE1063:
 1604              	.LBE1064:
 1605              	.LBE1065:
 1606              	.LBE1066:
 1607              	.LBE1067:
 1608              	.LBE1025:
 1609              	.LBE1069:
 1610              	.LBE1075:
 941:Veno-Echo.cpp **** 
 1611              		.loc 20 941 1 view .LVU394
 1612 01d2 10BD     		pop	{r4, pc}
 1613              	.LVL63:
 1614              	.L73:
 1615              	.LBB1076:
 1616              	.LBB1070:
 1617              	.LBB1016:
 1618              	.LBB1004:
2016:Veno-Echo.cpp ****     }
 1619              		.loc 20 2016 16 view .LVU395
 1620 01d4 DFED177A 		vldr.32	s15, .L75+84
 1621              	.LVL64:
2016:Veno-Echo.cpp ****     }
 1622              		.loc 20 2016 16 view .LVU396
 1623 01d8 51E7     		b	.L50
 1624              	.LVL65:
 1625              	.L74:
2016:Veno-Echo.cpp ****     }
 1626              		.loc 20 2016 16 view .LVU397
 1627              	.LBE1004:
 1628              	.LBE1016:
 1629              	.LBB1017:
 1630              	.LBB1014:
 1631 01da DFED167A 		vldr.32	s15, .L75+84
 1632 01de 94E7     		b	.L48
 1633              	.L76:
 1634              		.align	2
 1635              	.L75:
 1636 01e0 18000000 		.word	.LANCHOR4+24
 1637 01e4 00000000 		.word	.LANCHOR6
 1638 01e8 ABAAAA2A 		.word	715827883
 1639 01ec 00000000 		.word	.LANCHOR7
 1640 01f0 00000000 		.word	.LANCHOR8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 93


 1641 01f4 00000000 		.word	.LANCHOR9
 1642 01f8 00000000 		.word	.LANCHOR10
 1643 01fc 00000000 		.word	.LANCHOR5
 1644 0200 00000000 		.word	.LANCHOR11
 1645 0204 00000000 		.word	.LANCHOR12
 1646 0208 00000000 		.word	.LANCHOR0
 1647 020c 00000000 		.word	.LANCHOR13
 1648 0210 00000000 		.word	.LANCHOR14
 1649 0214 0AD7A33B 		.word	1000593162
 1650 0218 0050C346 		.word	1187205120
 1651 021c 00606A48 		.word	1214930944
 1652 0220 00000000 		.word	.LANCHOR2
 1653 0224 BF270900 		.word	599999
 1654 0228 00000000 		.word	.LANCHOR3
 1655 022c 00000000 		.word	.LANCHOR15
 1656 0230 00000000 		.word	.LANCHOR16
 1657 0234 00000000 		.word	0
 1658              	.LBE1014:
 1659              	.LBE1017:
 1660              	.LBE1070:
 1661              	.LBE1076:
 1662              		.cfi_endproc
 1663              	.LFE4313:
 1665              		.section	.text._Z20Update_DelayTimeR_CVv,"ax",%progbits
 1666              		.align	1
 1667              		.p2align 2,,3
 1668              		.global	_Z20Update_DelayTimeR_CVv
 1669              		.syntax unified
 1670              		.thumb
 1671              		.thumb_func
 1672              		.fpu fpv5-d16
 1674              	_Z20Update_DelayTimeR_CVv:
 1675              	.LFB4314:
 944:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1676              		.loc 20 944 1 is_stmt 1 view -0
 1677              		.cfi_startproc
 1678              		@ args = 0, pretend = 0, frame = 0
 1679              		@ frame_needed = 0, uses_anonymous_args = 0
 945:Veno-Echo.cpp **** }
 1680              		.loc 20 945 5 view .LVU399
 944:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1681              		.loc 20 944 1 is_stmt 0 view .LVU400
 1682 0000 08B5     		push	{r3, lr}
 1683              		.cfi_def_cfa_offset 8
 1684              		.cfi_offset 3, -8
 1685              		.cfi_offset 14, -4
 945:Veno-Echo.cpp **** }
 1686              		.loc 20 945 36 view .LVU401
 1687 0002 0121     		movs	r1, #1
 1688 0004 0348     		ldr	r0, .L79
 1689 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1690              	.LVL66:
 945:Veno-Echo.cpp **** }
 1691              		.loc 20 945 19 view .LVU402
 1692 000a 034B     		ldr	r3, .L79+4
 1693 000c 83ED000A 		vstr.32	s0, [r3]
 946:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 94


 1694              		.loc 20 946 1 view .LVU403
 1695 0010 08BD     		pop	{r3, pc}
 1696              	.L80:
 1697 0012 00BF     		.align	2
 1698              	.L79:
 1699 0014 18000000 		.word	.LANCHOR4+24
 1700 0018 00000000 		.word	.LANCHOR17
 1701              		.cfi_endproc
 1702              	.LFE4314:
 1704              		.section	.text._Z17Update_DelayTimeRv,"ax",%progbits
 1705              		.align	1
 1706              		.p2align 2,,3
 1707              		.global	_Z17Update_DelayTimeRv
 1708              		.syntax unified
 1709              		.thumb
 1710              		.thumb_func
 1711              		.fpu fpv5-d16
 1713              	_Z17Update_DelayTimeRv:
 1714              	.LFB4315:
 949:Veno-Echo.cpp ****     static bool lastShift{};
 1715              		.loc 20 949 1 is_stmt 1 view -0
 1716              		.cfi_startproc
 1717              		@ args = 0, pretend = 0, frame = 0
 1718              		@ frame_needed = 0, uses_anonymous_args = 0
 950:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 1719              		.loc 20 950 5 view .LVU405
 951:Veno-Echo.cpp ****     static bool tapRatio_pickup{};
 1720              		.loc 20 951 5 view .LVU406
 952:Veno-Echo.cpp ****     
 1721              		.loc 20 952 5 view .LVU407
 954:Veno-Echo.cpp **** 
 1722              		.loc 20 954 5 view .LVU408
 957:Veno-Echo.cpp **** 
 1723              		.loc 20 957 5 view .LVU409
 949:Veno-Echo.cpp ****     static bool lastShift{};
 1724              		.loc 20 949 1 is_stmt 0 view .LVU410
 1725 0000 10B5     		push	{r4, lr}
 1726              		.cfi_def_cfa_offset 8
 1727              		.cfi_offset 4, -8
 1728              		.cfi_offset 14, -4
 957:Veno-Echo.cpp **** 
 1729              		.loc 20 957 44 view .LVU411
 1730 0002 0622     		movs	r2, #6
 1731 0004 0721     		movs	r1, #7
 1732 0006 6948     		ldr	r0, .L111
 949:Veno-Echo.cpp ****     static bool lastShift{};
 1733              		.loc 20 949 1 view .LVU412
 1734 0008 2DED028B 		vpush.64	{d8}
 1735              		.cfi_def_cfa_offset 16
 1736              		.cfi_offset 80, -16
 1737              		.cfi_offset 81, -12
 957:Veno-Echo.cpp **** 
 1738              		.loc 20 957 44 view .LVU413
 1739 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1740              	.LVL67:
 962:Veno-Echo.cpp **** 
 1741              		.loc 20 962 26 view .LVU414
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 95


 1742 0010 6749     		ldr	r1, .L111+4
 962:Veno-Echo.cpp **** 
 1743              		.loc 20 962 31 view .LVU415
 1744 0012 684B     		ldr	r3, .L111+8
 1745              	.LVL68:
 961:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 1746              		.loc 20 961 5 is_stmt 1 view .LVU416
 962:Veno-Echo.cpp **** 
 1747              		.loc 20 962 5 view .LVU417
 962:Veno-Echo.cpp **** 
 1748              		.loc 20 962 26 is_stmt 0 view .LVU418
 1749 0014 0A68     		ldr	r2, [r1]
 1750              	.LBB1077:
 964:Veno-Echo.cpp ****     {
 1751              		.loc 20 964 9 view .LVU419
 1752 0016 6848     		ldr	r0, .L111+12
 1753              	.LBE1077:
 962:Veno-Echo.cpp **** 
 1754              		.loc 20 962 26 view .LVU420
 1755 0018 0132     		adds	r2, r2, #1
 1756              	.LBB1126:
 964:Veno-Echo.cpp ****     {
 1757              		.loc 20 964 5 view .LVU421
 1758 001a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1759              	.LBE1126:
 962:Veno-Echo.cpp **** 
 1760              		.loc 20 962 31 view .LVU422
 1761 001c 83FB0243 		smull	r4, r3, r3, r2
 1762 0020 D417     		asrs	r4, r2, #31
 1763 0022 C4EB6313 		rsb	r3, r4, r3, asr #5
 1764 0026 03EB4303 		add	r3, r3, r3, lsl #1
 1765 002a A2EB8313 		sub	r3, r2, r3, lsl #6
 1766              	.LBB1127:
 1767              	.LBB1078:
 968:Veno-Echo.cpp ****         {
 1768              		.loc 20 968 19 view .LVU423
 1769 002e 634A     		ldr	r2, .L111+16
 1770              	.LBE1078:
 1771              	.LBE1127:
 962:Veno-Echo.cpp **** 
 1772              		.loc 20 962 14 view .LVU424
 1773 0030 0B60     		str	r3, [r1]
 964:Veno-Echo.cpp ****     {
 1774              		.loc 20 964 5 is_stmt 1 view .LVU425
 1775              	.LBB1128:
 1776 0032 90BB     		cbnz	r0, .L82
 1777              	.LBB1097:
 966:Veno-Echo.cpp ****         //udpate pickup
 1778              		.loc 20 966 9 view .LVU426
 968:Veno-Echo.cpp ****         {
 1779              		.loc 20 968 9 view .LVU427
 1780 0034 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1781 0036 0029     		cmp	r1, #0
 1782 0038 3CD0     		beq	.L83
 970:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 1783              		.loc 20 970 13 view .LVU428
 971:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 96


 1784              		.loc 20 971 31 is_stmt 0 view .LVU429
 1785 003a 614C     		ldr	r4, .L111+20
 972:Veno-Echo.cpp ****         } 
 1786              		.loc 20 972 28 view .LVU430
 1787 003c 6149     		ldr	r1, .L111+24
 970:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 1788              		.loc 20 970 23 view .LVU431
 1789 003e 1070     		strb	r0, [r2]
 971:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1790              		.loc 20 971 13 is_stmt 1 view .LVU432
 971:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1791              		.loc 20 971 31 is_stmt 0 view .LVU433
 1792 0040 2070     		strb	r0, [r4]
 972:Veno-Echo.cpp ****         } 
 1793              		.loc 20 972 13 is_stmt 1 view .LVU434
 972:Veno-Echo.cpp ****         } 
 1794              		.loc 20 972 28 is_stmt 0 view .LVU435
 1795 0042 81ED000A 		vstr.32	s0, [r1]
 1796              	.L84:
 985:Veno-Echo.cpp **** 
 1797              		.loc 20 985 9 is_stmt 1 view .LVU436
 1798              	.LVL69:
 987:Veno-Echo.cpp ****         {
 1799              		.loc 20 987 9 view .LVU437
 995:Veno-Echo.cpp ****         }
 1800              		.loc 20 995 13 view .LVU438
 1801              	.LBB1079:
 1802              	.LBI1079:
2009:Veno-Echo.cpp **** {
 1803              		.loc 20 2009 7 view .LVU439
 1804              	.LBB1080:
2011:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1805              		.loc 20 2011 5 view .LVU440
2012:Veno-Echo.cpp **** 
 1806              		.loc 20 2012 5 view .LVU441
 1807              	.LBE1080:
 1808              	.LBE1079:
 995:Veno-Echo.cpp ****         }
 1809              		.loc 20 995 36 is_stmt 0 view .LVU442
 1810 0046 6049     		ldr	r1, .L111+28
 1811              	.LBB1084:
 1812              	.LBB1081:
2012:Veno-Echo.cpp **** 
 1813              		.loc 20 2012 39 view .LVU443
 1814 0048 F7EE006A 		vmov.f32	s13, #1.0e+0
2012:Veno-Echo.cpp **** 
 1815              		.loc 20 2012 49 view .LVU444
 1816 004c F6EE005A 		vmov.f32	s11, #5.0e-1
 1817              	.LBE1081:
 1818              	.LBE1084:
 995:Veno-Echo.cpp ****         }
 1819              		.loc 20 995 36 view .LVU445
 1820 0050 5E4A     		ldr	r2, .L111+32
 1821              	.LBB1085:
 1822              	.LBB1082:
2012:Veno-Echo.cpp **** 
 1823              		.loc 20 2012 39 view .LVU446
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 97


 1824 0052 91ED007A 		vldr.32	s14, [r1]
2012:Veno-Echo.cpp **** 
 1825              		.loc 20 2012 12 view .LVU447
 1826 0056 B0EE006A 		vmov.f32	s12, #2.0e+0
 1827 005a D2ED007A 		vldr.32	s15, [r2]
2012:Veno-Echo.cpp **** 
 1828              		.loc 20 2012 39 view .LVU448
 1829 005e 36EEC77A 		vsub.f32	s14, s13, s14
2012:Veno-Echo.cpp **** 
 1830              		.loc 20 2012 49 view .LVU449
 1831 0062 37EE657A 		vsub.f32	s14, s14, s11
2012:Veno-Echo.cpp **** 
 1832              		.loc 20 2012 12 view .LVU450
 1833 0066 E7EE067A 		vfma.f32	s15, s14, s12
 1834              	.LVL70:
2014:Veno-Echo.cpp ****     {
 1835              		.loc 20 2014 5 is_stmt 1 view .LVU451
 1836 006a F5EEC07A 		vcmpe.f32	s15, #0
 1837 006e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1838 0072 00F18C80 		bmi	.L109
2019:Veno-Echo.cpp ****     {
 1839              		.loc 20 2019 5 view .LVU452
2021:Veno-Echo.cpp ****     }
 1840              		.loc 20 2021 16 is_stmt 0 view .LVU453
 1841 0076 F4EE667A 		vcmp.f32	s15, s13
 1842 007a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1843 007e 76FEA77A 		vselgt.f32	s15, s13, s15
 1844              	.LVL71:
 1845              	.L89:
2021:Veno-Echo.cpp ****     }
 1846              		.loc 20 2021 16 view .LVU454
 1847              	.LBE1082:
 1848              	.LBE1085:
 998:Veno-Echo.cpp ****         {
 1849              		.loc 20 998 9 is_stmt 1 view .LVU455
 1850 0082 A3B9     		cbnz	r3, .L81
1000:Veno-Echo.cpp ****             {
 1851              		.loc 20 1000 13 view .LVU456
1000:Veno-Echo.cpp ****             {
 1852              		.loc 20 1000 35 is_stmt 0 view .LVU457
 1853 0084 524B     		ldr	r3, .L111+36
 1854 0086 B0EE670A 		vmov.f32	s0, s15
 1855              	.LVL72:
1000:Veno-Echo.cpp ****             {
 1856              		.loc 20 1000 35 view .LVU458
 1857 008a 5248     		ldr	r0, .L111+40
 1858 008c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1859              	.LBE1097:
 1860              	.LBE1128:
1041:Veno-Echo.cpp **** void Update_feedbackL_CV()
 1861              		.loc 20 1041 1 view .LVU459
 1862 008e BDEC028B 		vldm	sp!, {d8}
 1863              		.cfi_remember_state
 1864              		.cfi_restore 80
 1865              		.cfi_restore 81
 1866              		.cfi_def_cfa_offset 8
 1867 0092 BDE81040 		pop	{r4, lr}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 98


 1868              		.cfi_restore 14
 1869              		.cfi_restore 4
 1870              		.cfi_def_cfa_offset 0
 1871              	.LBB1129:
 1872              	.LBB1098:
1000:Veno-Echo.cpp ****             {
 1873              		.loc 20 1000 35 view .LVU460
 1874 0096 FFF7FEBF 		b	_ZN10DelayMulti12SetDelayTimeEfb
 1875              	.LVL73:
 1876              	.L82:
 1877              		.cfi_restore_state
1000:Veno-Echo.cpp ****             {
 1878              		.loc 20 1000 35 view .LVU461
 1879              	.LBE1098:
 1880              	.LBB1099:
1010:Veno-Echo.cpp **** 
 1881              		.loc 20 1010 9 is_stmt 1 view .LVU462
1012:Veno-Echo.cpp ****         {
 1882              		.loc 20 1012 9 view .LVU463
 1883 009a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1884 009c 002B     		cmp	r3, #0
 1885 009e 3ED1     		bne	.L92
1014:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1886              		.loc 20 1014 13 view .LVU464
1014:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1887              		.loc 20 1014 23 is_stmt 0 view .LVU465
 1888 00a0 0124     		movs	r4, #1
1015:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1889              		.loc 20 1015 29 view .LVU466
 1890 00a2 4D48     		ldr	r0, .L111+44
1016:Veno-Echo.cpp ****         }
 1891              		.loc 20 1016 26 view .LVU467
 1892 00a4 4D49     		ldr	r1, .L111+48
1014:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1893              		.loc 20 1014 23 view .LVU468
 1894 00a6 1470     		strb	r4, [r2]
1015:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1895              		.loc 20 1015 13 is_stmt 1 view .LVU469
1015:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1896              		.loc 20 1015 29 is_stmt 0 view .LVU470
 1897 00a8 0370     		strb	r3, [r0]
1016:Veno-Echo.cpp ****         }
 1898              		.loc 20 1016 13 is_stmt 1 view .LVU471
1016:Veno-Echo.cpp ****         }
 1899              		.loc 20 1016 26 is_stmt 0 view .LVU472
 1900 00aa 81ED000A 		vstr.32	s0, [r1]
 1901              	.L81:
1016:Veno-Echo.cpp ****         }
 1902              		.loc 20 1016 26 view .LVU473
 1903              	.LBE1099:
 1904              	.LBE1129:
1041:Veno-Echo.cpp **** void Update_feedbackL_CV()
 1905              		.loc 20 1041 1 view .LVU474
 1906 00ae BDEC028B 		vldm	sp!, {d8}
 1907              		.cfi_remember_state
 1908              		.cfi_restore 80
 1909              		.cfi_restore 81
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 99


 1910              		.cfi_def_cfa_offset 8
 1911 00b2 10BD     		pop	{r4, pc}
 1912              	.L83:
 1913              		.cfi_restore_state
 1914              	.LBB1130:
 1915              	.LBB1122:
 976:Veno-Echo.cpp ****             {
 1916              		.loc 20 976 13 is_stmt 1 view .LVU475
 976:Veno-Echo.cpp ****             {
 1917              		.loc 20 976 16 is_stmt 0 view .LVU476
 1918 00b4 424A     		ldr	r2, .L111+20
 976:Veno-Echo.cpp ****             {
 1919              		.loc 20 976 13 view .LVU477
 1920 00b6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1921 00b8 79B9     		cbnz	r1, .L85
 978:Veno-Echo.cpp ****                 {
 1922              		.loc 20 978 17 is_stmt 1 view .LVU478
 1923              	.LVL74:
 1924              	.LBB1086:
 1925              	.LBI1086:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1926              		.loc 21 75 3 view .LVU479
 1927              	.LBB1087:
 1928              		.loc 21 76 5 view .LVU480
 1929              		.loc 21 76 5 is_stmt 0 view .LVU481
 1930              	.LBE1087:
 1931              	.LBE1086:
 978:Veno-Echo.cpp ****                 {
 1932              		.loc 20 978 23 view .LVU482
 1933 00ba 4249     		ldr	r1, .L111+24
 978:Veno-Echo.cpp ****                 {
 1934              		.loc 20 978 17 view .LVU483
 1935 00bc 9FED487A 		vldr.32	s14, .L111+52
 978:Veno-Echo.cpp ****                 {
 1936              		.loc 20 978 23 view .LVU484
 1937 00c0 D1ED007A 		vldr.32	s15, [r1]
 1938 00c4 70EE677A 		vsub.f32	s15, s0, s15
 1939              	.LBB1089:
 1940              	.LBB1088:
 1941              		.loc 21 76 31 view .LVU485
 1942 00c8 F0EEE77A 		vabs.f32	s15, s15
 1943              	.LBE1088:
 1944              	.LBE1089:
 978:Veno-Echo.cpp ****                 {
 1945              		.loc 20 978 17 view .LVU486
 1946 00cc F4EEC77A 		vcmpe.f32	s15, s14
 1947 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1948 00d4 B7DD     		ble	.L84
 980:Veno-Echo.cpp ****                 }
 1949              		.loc 20 980 21 is_stmt 1 view .LVU487
 980:Veno-Echo.cpp ****                 }
 1950              		.loc 20 980 39 is_stmt 0 view .LVU488
 1951 00d6 0121     		movs	r1, #1
 1952 00d8 1170     		strb	r1, [r2]
 1953              	.L85:
 985:Veno-Echo.cpp **** 
 1954              		.loc 20 985 9 is_stmt 1 view .LVU489
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 100


 1955              	.LVL75:
 987:Veno-Echo.cpp ****         {
 1956              		.loc 20 987 9 view .LVU490
 989:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 1957              		.loc 20 989 13 view .LVU491
 1958              	.LBB1090:
 1959              	.LBI1090:
2009:Veno-Echo.cpp **** {
 1960              		.loc 20 2009 7 view .LVU492
 1961              	.LBB1091:
2011:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1962              		.loc 20 2011 5 view .LVU493
2012:Veno-Echo.cpp **** 
 1963              		.loc 20 2012 5 view .LVU494
 1964              	.LBE1091:
 1965              	.LBE1090:
 989:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 1966              		.loc 20 989 36 is_stmt 0 view .LVU495
 1967 00da 3B4A     		ldr	r2, .L111+28
 1968              	.LBB1094:
 1969              	.LBB1092:
2012:Veno-Echo.cpp **** 
 1970              		.loc 20 2012 39 view .LVU496
 1971 00dc B7EE007A 		vmov.f32	s14, #1.0e+0
2012:Veno-Echo.cpp **** 
 1972              		.loc 20 2012 49 view .LVU497
 1973 00e0 B6EE006A 		vmov.f32	s12, #5.0e-1
2012:Veno-Echo.cpp **** 
 1974              		.loc 20 2012 39 view .LVU498
 1975 00e4 D2ED007A 		vldr.32	s15, [r2]
2012:Veno-Echo.cpp **** 
 1976              		.loc 20 2012 12 view .LVU499
 1977 00e8 F0EE006A 		vmov.f32	s13, #2.0e+0
2012:Veno-Echo.cpp **** 
 1978              		.loc 20 2012 39 view .LVU500
 1979 00ec 77EE677A 		vsub.f32	s15, s14, s15
2012:Veno-Echo.cpp **** 
 1980              		.loc 20 2012 49 view .LVU501
 1981 00f0 77EEC67A 		vsub.f32	s15, s15, s12
2012:Veno-Echo.cpp **** 
 1982              		.loc 20 2012 12 view .LVU502
 1983 00f4 B0EE406A 		vmov.f32	s12, s0
 1984 00f8 A7EEA66A 		vfma.f32	s12, s15, s13
2014:Veno-Echo.cpp ****     {
 1985              		.loc 20 2014 5 view .LVU503
 1986 00fc B5EEC06A 		vcmpe.f32	s12, #0
2012:Veno-Echo.cpp **** 
 1987              		.loc 20 2012 12 view .LVU504
 1988 0100 F0EE467A 		vmov.f32	s15, s12
 1989              	.LVL76:
2014:Veno-Echo.cpp ****     {
 1990              		.loc 20 2014 5 is_stmt 1 view .LVU505
 1991 0104 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1992 0108 44D4     		bmi	.L110
2019:Veno-Echo.cpp ****     {
 1993              		.loc 20 2019 5 view .LVU506
2021:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 101


 1994              		.loc 20 2021 16 is_stmt 0 view .LVU507
 1995 010a F4EE477A 		vcmp.f32	s15, s14
 1996 010e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1997 0112 77FE277A 		vselgt.f32	s15, s14, s15
 1998              	.L87:
 1999              	.LVL77:
 2000              		.loc 20 2024 5 is_stmt 1 view .LVU508
 2001              		.loc 20 2024 5 is_stmt 0 view .LVU509
 2002              	.LBE1092:
 2003              	.LBE1094:
 990:Veno-Echo.cpp ****         }
 2004              		.loc 20 990 13 is_stmt 1 view .LVU510
 990:Veno-Echo.cpp ****         }
 2005              		.loc 20 990 29 is_stmt 0 view .LVU511
 2006 0116 2D4A     		ldr	r2, .L111+32
 2007 0118 82ED000A 		vstr.32	s0, [r2]
 2008 011c B1E7     		b	.L89
 2009              	.LVL78:
 2010              	.L92:
 990:Veno-Echo.cpp ****         }
 2011              		.loc 20 990 29 view .LVU512
 2012              	.LBE1122:
 2013              	.LBB1123:
1021:Veno-Echo.cpp ****             {
 2014              		.loc 20 1021 13 is_stmt 1 view .LVU513
1021:Veno-Echo.cpp ****             {
 2015              		.loc 20 1021 16 is_stmt 0 view .LVU514
 2016 011e 2E4B     		ldr	r3, .L111+44
1021:Veno-Echo.cpp ****             {
 2017              		.loc 20 1021 13 view .LVU515
 2018 0120 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2019 0122 7AB9     		cbnz	r2, .L93
1023:Veno-Echo.cpp ****                 {
 2020              		.loc 20 1023 17 is_stmt 1 view .LVU516
 2021              	.LVL79:
 2022              	.LBB1100:
 2023              	.LBI1100:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2024              		.loc 21 75 3 view .LVU517
 2025              	.LBB1101:
 2026              		.loc 21 76 5 view .LVU518
 2027              		.loc 21 76 5 is_stmt 0 view .LVU519
 2028              	.LBE1101:
 2029              	.LBE1100:
1023:Veno-Echo.cpp ****                 {
 2030              		.loc 20 1023 23 view .LVU520
 2031 0124 2D4A     		ldr	r2, .L111+48
1023:Veno-Echo.cpp ****                 {
 2032              		.loc 20 1023 17 view .LVU521
 2033 0126 9FED2E7A 		vldr.32	s14, .L111+52
1023:Veno-Echo.cpp ****                 {
 2034              		.loc 20 1023 23 view .LVU522
 2035 012a D2ED007A 		vldr.32	s15, [r2]
 2036 012e 70EE677A 		vsub.f32	s15, s0, s15
 2037              	.LBB1103:
 2038              	.LBB1102:
 2039              		.loc 21 76 31 view .LVU523
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 102


 2040 0132 F0EEE77A 		vabs.f32	s15, s15
 2041              	.LBE1102:
 2042              	.LBE1103:
1023:Veno-Echo.cpp ****                 {
 2043              		.loc 20 1023 17 view .LVU524
 2044 0136 F4EEC77A 		vcmpe.f32	s15, s14
 2045 013a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2046 013e B6DD     		ble	.L81
1025:Veno-Echo.cpp ****                 }
 2047              		.loc 20 1025 21 is_stmt 1 view .LVU525
1025:Veno-Echo.cpp ****                 }
 2048              		.loc 20 1025 37 is_stmt 0 view .LVU526
 2049 0140 0122     		movs	r2, #1
 2050 0142 1A70     		strb	r2, [r3]
 2051              	.L93:
1030:Veno-Echo.cpp ****         {
 2052              		.loc 20 1030 9 is_stmt 1 view .LVU527
 2053              	.LBB1104:
1032:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
 2054              		.loc 20 1032 13 view .LVU528
 2055              	.LVL80:
1033:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2056              		.loc 20 1033 13 view .LVU529
1033:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2057              		.loc 20 1033 61 is_stmt 0 view .LVU530
 2058 0144 F0EE080A 		vmov.f32	s1, #3.0e+0
 2059 0148 0020     		movs	r0, #0
 2060 014a 9FED261A 		vldr.32	s2, .L111+56
 2061 014e FFF7FEFF 		bl	_Z5scalefff9CurveType
 2062              	.LVL81:
 2063              	.LBB1105:
 2064              	.LBI1105:
 2065              		.file 24 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // -*- C++ -*- C forwarding header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 103


  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** /** @file include/cmath
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  as macros in C).
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  */
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // ISO C++ 14882: 26.5  C library
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #pragma GCC system_header
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/c++config.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/cpp_type_traits.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <ext/type_traits.h>
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include_next <math.h>
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/std_abs.h>
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_CMATH
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_CMATH 1
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef div
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acos
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asin
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan2
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ceil
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cos
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cosh
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fabs
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef floor
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmod
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef frexp
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ldexp
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log10
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef modf
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef pow
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sin
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sinh
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sqrt
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tan
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tanh
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** extern "C++"
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 104


  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acos;
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(float __x)
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosf(__x); }
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(long double __x)
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosl(__x); }
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acos(_Tp __x)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acos(__x); }
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asin;
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(float __x)
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinf(__x); }
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(long double __x)
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinl(__x); }
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asin(_Tp __x)
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asin(__x); }
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan;
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(float __x)
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanf(__x); }
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(long double __x)
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanl(__x); }
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan(_Tp __x)
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atan(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 105


 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan2;
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(float __y, float __x)
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2f(__y, __x); }
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(long double __y, long double __x)
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2l(__y, __x); }
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan2(_Tp __y, _Up __x)
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return atan2(__type(__y), __type(__x));
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ceil;
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(float __x)
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceilf(__x); }
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(long double __x)
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceill(__x); }
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ceil(_Tp __x)
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ceil(__x); }
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cos;
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(float __x)
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosf(__x); }
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(long double __x)
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosl(__x); }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 106


 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cos(_Tp __x)
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cos(__x); }
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cosh;
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(float __x)
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshf(__x); }
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(long double __x)
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshl(__x); }
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cosh(_Tp __x)
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cosh(__x); }
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(float __x)
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expf(__x); }
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(long double __x)
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expl(__x); }
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp(_Tp __x)
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp(__x); }
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fabs;
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(float __x)
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsf(__x); }
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(long double __x)
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsl(__x); }
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 107


 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fabs(_Tp __x)
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_fabs(__x); }
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::floor;
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(float __x)
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorf(__x); }
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(long double __x)
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorl(__x); }
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     floor(_Tp __x)
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_floor(__x); }
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmod;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(float __x, float __y)
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodf(__x, __y); }
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(long double __x, long double __y)
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodl(__x, __y); }
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmod(_Tp __x, _Up __y)
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmod(__type(__x), __type(__y));
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::frexp;
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(float __x, int* __exp)
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(long double __x, int* __exp)
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 108


 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     frexp(_Tp __x, int* __exp)
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_frexp(__x, __exp); }
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ldexp;
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(float __x, int __exp)
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(long double __x, int __exp)
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ldexp(_Tp __x, int __exp)
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log;
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(float __x)
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logf(__x); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(long double __x)
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logl(__x); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log(_Tp __x)
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log(__x); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log10;
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(float __x)
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10f(__x); }
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(long double __x)
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10l(__x); }
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 109


 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log10(_Tp __x)
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log10(__x); }
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::modf;
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(float __x, float* __iptr)
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modff(__x, __iptr); }
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(long double __x, long double* __iptr)
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::pow;
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, float __y)
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powf(__x, __y); }
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, long double __y)
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powl(__x, __y); }
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus < 201103L
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline double
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(double __x, int __i)
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powi(__x, __i); }
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, int __n)
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powif(__x, __n); }
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, int __n)
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powil(__x, __n); }
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     pow(_Tp __x, _Up __y)
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return pow(__type(__x), __type(__y));
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sin;
 422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 110


 424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(float __x)
 426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinf(__x); }
 427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(long double __x)
 430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinl(__x); }
 431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sin(_Tp __x)
 438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sin(__x); }
 439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sinh;
 441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(float __x)
 445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhf(__x); }
 446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(long double __x)
 449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhl(__x); }
 450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sinh(_Tp __x)
 457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sinh(__x); }
 458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sqrt;
 460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(float __x)
 464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtf(__x); }
 465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(long double __x)
 468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtl(__x); }
 469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sqrt(_Tp __x)
 476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sqrt(__x); }
 477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tan;
 479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 111


 481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(float __x)
 483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanf(__x); }
 484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(long double __x)
 487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanl(__x); }
 488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tan(_Tp __x)
 495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tan(__x); }
 496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tanh;
 498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(float __x)
 502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhf(__x); }
 503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(long double __x)
 506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhl(__x); }
 507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tanh(_Tp __x)
 514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tanh(__x); }
 515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_USE_C99_MATH
 517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC
 518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // These are possible macros imported from C99-land.
 520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fpclassify
 521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isfinite
 522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isinf
 523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnan
 524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnormal
 525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef signbit
 526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreater
 527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreaterequal
 528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isless
 529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessequal
 530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessgreater
 531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isunordered
 532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(float __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 112


 538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(double __x)
 543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(long double __x)
 548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               int>::__type
 556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __x)
 557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? FP_NORMAL : FP_ZERO; }
 558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(float __x)
 563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(double __x)
 567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(long double __x)
 571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __x)
 579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return true; }
 580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(float __x)
 585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISINF \
 588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isinf;
 590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(double __x)
 593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 113


 595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(long double __x)
 598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __x)
 606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(float __x)
 612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISNAN \
 615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isnan;
 617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(double __x)
 620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(long double __x)
 625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __x)
 633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(float __x)
 639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(double __x)
 643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(long double __x)
 647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 114


 652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __x)
 655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? true : false; }
 656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // Note: middle-end/36757 is fixed, __builtin_signbit is type-generic.
 660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(float __x)
 662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(double __x)
 666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(long double __x)
 670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __x)
 678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x < 0 ? true : false; }
 679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(float __x, float __y)
 684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(double __x, double __y)
 688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(long double __x, long double __y)
 692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __x, _Up __y)
 701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__x), __type(__y));
 704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 115


 709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(float __x, float __y)
 710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(double __x, double __y)
 714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(long double __x, long double __y)
 718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __x, _Up __y)
 727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__x), __type(__y));
 730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(float __x, float __y)
 736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(double __x, double __y)
 740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(long double __x, long double __y)
 744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __x, _Up __y)
 753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__x), __type(__y));
 756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 758:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 759:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 760:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 761:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(float __x, float __y)
 762:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 763:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 764:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 765:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(double __x, double __y)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 116


 766:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 767:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 768:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 769:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(long double __x, long double __y)
 770:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 771:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 772:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 773:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 774:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 775:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 776:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 777:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 778:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __x, _Up __y)
 779:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 780:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 781:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__x), __type(__y));
 782:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 783:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 784:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 785:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 786:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 787:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(float __x, float __y)
 788:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 789:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 790:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 791:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(double __x, double __y)
 792:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 793:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 794:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 795:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(long double __x, long double __y)
 796:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 797:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 798:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 799:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 800:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 801:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 802:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 803:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 804:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __x, _Up __y)
 805:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 806:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 807:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__x), __type(__y));
 808:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 809:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 810:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 811:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 812:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 813:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(float __x, float __y)
 814:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 815:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 816:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 817:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(double __x, double __y)
 818:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 819:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 820:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 821:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(long double __x, long double __y)
 822:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 117


 823:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 824:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 825:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 826:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 827:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 828:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 829:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 830:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __x, _Up __y)
 831:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 832:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 833:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__x), __type(__y));
 834:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 835:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 836:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 837:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 838:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 839:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 840:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 841:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 842:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __f)
 843:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 844:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 845:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 846:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				  FP_SUBNORMAL, FP_ZERO, __type(__f));
 847:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 848:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 849:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 850:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 851:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 852:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __f)
 853:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 854:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 855:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isfinite(__type(__f));
 856:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 857:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 858:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 859:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 860:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 861:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __f)
 862:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 863:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 864:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isinf(__type(__f));
 865:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 866:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 867:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 868:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 869:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 870:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __f)
 871:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 872:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 873:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnan(__type(__f));
 874:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 875:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 876:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 877:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 878:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 879:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __f)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 118


 880:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 881:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 882:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnormal(__type(__f));
 883:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 884:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 885:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 886:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 887:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 888:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __f)
 889:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 890:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 891:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_signbit(__type(__f));
 892:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 893:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 894:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 895:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 896:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 897:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __f1, _Tp __f2)
 898:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 899:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 900:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__f1), __type(__f2));
 901:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 902:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 903:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 904:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 905:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 906:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __f1, _Tp __f2)
 907:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 908:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 909:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__f1), __type(__f2));
 910:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 911:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 912:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 913:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 914:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 915:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __f1, _Tp __f2)
 916:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 917:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 918:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__f1), __type(__f2));
 919:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 920:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 921:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 922:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 923:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 924:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __f1, _Tp __f2)
 925:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 926:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 927:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__f1), __type(__f2));
 928:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 929:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 930:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 931:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 932:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 933:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __f1, _Tp __f2)
 934:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 935:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 936:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__f1), __type(__f2));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 119


 937:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 938:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 939:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 940:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 941:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 942:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __f1, _Tp __f2)
 943:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 944:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 945:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__f1), __type(__f2));
 946:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 947:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 948:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif // C++11
 949:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_FP_MACROS_DYNAMIC */
 950:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_MATH */
 951:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 952:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 953:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 954:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifdef _GLIBCXX_USE_C99_MATH_TR1
 955:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 956:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acosh
 957:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshf
 958:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshl
 959:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinh
 960:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhf
 961:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhl
 962:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanh
 963:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhf
 964:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhl
 965:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrt
 966:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtf
 967:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtl
 968:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysign
 969:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignf
 970:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignl
 971:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erf
 972:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erff
 973:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfl
 974:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfc
 975:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcf
 976:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcl
 977:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2
 978:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2f
 979:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2l
 980:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1
 981:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1f
 982:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1l
 983:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdim
 984:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdimf
 985:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdiml
 986:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fma
 987:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaf
 988:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmal
 989:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmax
 990:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxf
 991:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxl
 992:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmin
 993:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 120


 994:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminl
 995:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypot
 996:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotf
 997:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotl
 998:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogb
 999:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbf
1000:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbl
1001:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgamma
1002:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammaf
1003:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammal
1004:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1005:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrint
1006:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintf
1007:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintl
1008:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llround
1009:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundf
1010:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundl
1011:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1012:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1p
1013:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pf
1014:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pl
1015:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2
1016:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2f
1017:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2l
1018:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logb
1019:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbf
1020:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbl
1021:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrint
1022:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintf
1023:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintl
1024:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lround
1025:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundf
1026:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundl
1027:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nan
1028:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanf
1029:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanl
1030:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyint
1031:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintf
1032:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintl
1033:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafter
1034:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterf
1035:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterl
1036:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttoward
1037:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardf
1038:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardl
1039:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainder
1040:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderf
1041:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderl
1042:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquo
1043:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquof
1044:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquol
1045:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rint
1046:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintf
1047:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintl
1048:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef round
1049:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundf
1050:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundl
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 121


1051:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbln
1052:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnf
1053:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnl
1054:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbn
1055:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnf
1056:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnl
1057:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgamma
1058:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammaf
1059:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammal
1060:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef trunc
1061:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncf
1062:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncl
1063:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1064:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // types
1065:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::double_t;
1066:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::float_t;
1067:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1068:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // functions
1069:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acosh;
1070:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshf;
1071:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshl;
1072:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1073:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinh;
1074:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhf;
1075:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhl;
1076:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1077:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanh;
1078:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhf;
1079:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhl;
1080:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1081:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrt;
1082:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtf;
1083:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtl;
1084:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1085:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysign;
1086:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignf;
1087:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignl;
1088:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1089:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erf;
1090:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erff;
1091:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfl;
1092:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1093:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfc;
1094:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcf;
1095:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcl;
1096:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1097:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2;
1098:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2f;
1099:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2l;
1100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1;
1102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1f;
1103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1l;
1104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdim;
1106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdimf;
1107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdiml;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 122


1108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fma;
1110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaf;
1111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmal;
1112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmax;
1114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxf;
1115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxl;
1116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmin;
1118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminf;
1119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminl;
1120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypot;
1122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotf;
1123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotl;
1124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogb;
1126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbf;
1127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbl;
1128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgamma;
1130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammaf;
1131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammal;
1132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrint;
1135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintf;
1136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintl;
1137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llround;
1139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundf;
1140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundl;
1141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1p;
1144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pf;
1145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pl;
1146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2;
1148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2f;
1149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2l;
1150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logb;
1152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbf;
1153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbl;
1154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrint;
1156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintf;
1157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintl;
1158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lround;
1160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundf;
1161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundl;
1162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nan;
1164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanf;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 123


1165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanl;
1166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyint;
1168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintf;
1169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintl;
1170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafter;
1172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterf;
1173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterl;
1174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttoward;
1176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardf;
1177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardl;
1178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainder;
1180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderf;
1181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderl;
1182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquo;
1184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquof;
1185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquol;
1186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rint;
1188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintf;
1189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintl;
1190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::round;
1192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundf;
1193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundl;
1194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbln;
1196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnf;
1197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnl;
1198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbn;
1200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnf;
1201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnl;
1202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgamma;
1204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammaf;
1205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammal;
1206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::trunc;
1208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncf;
1209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncl;
1210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   /// Additional overloads.
1212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(float __x)
1215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshf(__x); }
1216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(long double __x)
1219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshl(__x); }
1220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 124


1222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acosh(_Tp __x)
1227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acosh(__x); }
1228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(float __x)
1233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhf(__x); }
1234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(long double __x)
1237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhl(__x); }
1238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asinh(_Tp __x)
1245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asinh(__x); }
1246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(float __x)
1251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhf(__x); }
1252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(long double __x)
1255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhl(__x); }
1256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atanh(_Tp __x)
1263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atanh(__x); }
1264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(float __x)
1269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtf(__x); }
1270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(long double __x)
1273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtl(__x); }
1274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 125


1279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cbrt(_Tp __x)
1281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cbrt(__x); }
1282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(float __x, float __y)
1287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignf(__x, __y); }
1288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(long double __x, long double __y)
1291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignl(__x, __y); }
1292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     copysign(_Tp __x, _Up __y)
1298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return copysign(__type(__x), __type(__y));
1301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(float __x)
1307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erff(__x); }
1308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(long double __x)
1311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfl(__x); }
1312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erf(_Tp __x)
1319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erf(__x); }
1320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(float __x)
1325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcf(__x); }
1326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(long double __x)
1329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcl(__x); }
1330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 126


1336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erfc(_Tp __x)
1337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erfc(__x); }
1338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(float __x)
1343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2f(__x); }
1344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(long double __x)
1347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2l(__x); }
1348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp2(_Tp __x)
1355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp2(__x); }
1356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(float __x)
1361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1f(__x); }
1362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(long double __x)
1365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1l(__x); }
1366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     expm1(_Tp __x)
1373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_expm1(__x); }
1374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(float __x, float __y)
1379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdimf(__x, __y); }
1380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(long double __x, long double __y)
1383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdiml(__x, __y); }
1384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fdim(_Tp __x, _Up __y)
1390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fdim(__type(__x), __type(__y));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 127


1393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(float __x, float __y, float __z)
1399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaf(__x, __y, __z); }
1400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(long double __x, long double __y, long double __z)
1403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmal(__x, __y, __z); }
1404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up, typename _Vp>
1408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type
1409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fma(_Tp __x, _Up __y, _Vp __z)
1410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type __type;
1412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fma(__type(__x), __type(__y), __type(__z));
1413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(float __x, float __y)
1419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxf(__x, __y); }
1420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(long double __x, long double __y)
1423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxl(__x, __y); }
1424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmax(_Tp __x, _Up __y)
1430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmax(__type(__x), __type(__y));
1433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(float __x, float __y)
1439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminf(__x, __y); }
1440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(long double __x, long double __y)
1443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminl(__x, __y); }
1444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmin(_Tp __x, _Up __y)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 128


1450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmin(__type(__x), __type(__y));
1453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(float __x, float __y)
1459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotf(__x, __y); }
1460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(long double __x, long double __y)
1463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotl(__x, __y); }
1464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     hypot(_Tp __x, _Up __y)
1470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return hypot(__type(__x), __type(__y));
1473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(float __x)
1479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbf(__x); }
1480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(long double __x)
1483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbl(__x); }
1484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr
1489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     int>::__type
1491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ilogb(_Tp __x)
1492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ilogb(__x); }
1493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(float __x)
1498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammaf(__x); }
1499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(long double __x)
1502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammal(__x); }
1503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 129


1507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lgamma(_Tp __x)
1510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lgamma(__x); }
1511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(float __x)
1516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintf(__x); }
1517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(long double __x)
1520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintl(__x); }
1521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llrint(_Tp __x)
1528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llrint(__x); }
1529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(float __x)
1534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundf(__x); }
1535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(long double __x)
1538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundl(__x); }
1539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llround(_Tp __x)
1546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llround(__x); }
1547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(float __x)
1552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pf(__x); }
1553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(long double __x)
1556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pl(__x); }
1557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log1p(_Tp __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 130


1564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log1p(__x); }
1565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 568.
1569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(float __x)
1571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2f(__x); }
1572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(long double __x)
1575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2l(__x); }
1576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log2(_Tp __x)
1583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log2(__x); }
1584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(float __x)
1589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbf(__x); }
1590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(long double __x)
1593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbl(__x); }
1594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     logb(_Tp __x)
1601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_logb(__x); }
1602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(float __x)
1607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintf(__x); }
1608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(long double __x)
1611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintl(__x); }
1612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lrint(_Tp __x)
1619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lrint(__x); }
1620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 131


1621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(float __x)
1625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundf(__x); }
1626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(long double __x)
1629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundl(__x); }
1630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lround(_Tp __x)
1637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lround(__x); }
1638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(float __x)
1643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintf(__x); }
1644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(long double __x)
1647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintl(__x); }
1648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nearbyint(_Tp __x)
1655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nearbyint(__x); }
1656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(float __x, float __y)
1661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterf(__x, __y); }
1662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(long double __x, long double __y)
1665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterl(__x, __y); }
1666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nextafter(_Tp __x, _Up __y)
1672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return nextafter(__type(__x), __type(__y));
1675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 132


1678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(float __x, long double __y)
1681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardf(__x, __y); }
1682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(long double __x, long double __y)
1685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardl(__x, __y); }
1686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nexttoward(_Tp __x, long double __y)
1693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nexttoward(__x, __y); }
1694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(float __x, float __y)
1699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderf(__x, __y); }
1700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(long double __x, long double __y)
1703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderl(__x, __y); }
1704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remainder(_Tp __x, _Up __y)
1710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remainder(__type(__x), __type(__y));
1713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
1718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(float __x, float __y, int* __pquo)
1719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquof(__x, __y, __pquo); }
1720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
1722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(long double __x, long double __y, int* __pquo)
1723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquol(__x, __y, __pquo); }
1724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remquo(_Tp __x, _Up __y, int* __pquo)
1730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remquo(__type(__x), __type(__y), __pquo);
1733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 133


1735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(float __x)
1739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintf(__x); }
1740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(long double __x)
1743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintl(__x); }
1744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     rint(_Tp __x)
1751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_rint(__x); }
1752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   round(float __x)
 2066              		.loc 24 1756 3 is_stmt 1 view .LVU531
 2067              	.LBB1106:
1757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_roundf(__x); }
 2068              		.loc 24 1757 5 view .LVU532
 2069              		.loc 24 1757 28 is_stmt 0 view .LVU533
 2070 0152 B8FE400A 		vrinta.f32	s0, s0
 2071              	.LVL82:
 2072              		.loc 24 1757 28 view .LVU534
 2073              	.LBE1106:
 2074              	.LBE1105:
1034:Veno-Echo.cpp ****             //save setting:
 2075              		.loc 20 1034 13 is_stmt 1 view .LVU535
 2076              	.LBB1107:
 2077              	.LBI1107:
2025:Veno-Echo.cpp **** }
2026:Veno-Echo.cpp **** 
2027:Veno-Echo.cpp **** //checks pickup state of primary controls
2028:Veno-Echo.cpp **** bool checkPickupState(float value, float lastValue, bool lastState, bool ShiftChange)
2029:Veno-Echo.cpp **** {
2030:Veno-Echo.cpp ****     bool retval{};
2031:Veno-Echo.cpp ****     
2032:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change to not picked up, unless there's been no change
2033:Veno-Echo.cpp ****     {
2034:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
2035:Veno-Echo.cpp ****         {
2036:Veno-Echo.cpp ****             retval = false;
2037:Veno-Echo.cpp ****         }
2038:Veno-Echo.cpp ****         else
2039:Veno-Echo.cpp ****         {
2040:Veno-Echo.cpp ****             retval = true;
2041:Veno-Echo.cpp ****         }
2042:Veno-Echo.cpp ****     }
2043:Veno-Echo.cpp **** 
2044:Veno-Echo.cpp ****     else //not recent shift change, change to pickup if there's been a change since last shift chan
2045:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 134


2046:Veno-Echo.cpp ****     if(!lastState) //if not picked up
2047:Veno-Echo.cpp ****     {
2048:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
2049:Veno-Echo.cpp ****         {
2050:Veno-Echo.cpp ****             retval = true;
2051:Veno-Echo.cpp ****         }
2052:Veno-Echo.cpp **** 
2053:Veno-Echo.cpp ****         else
2054:Veno-Echo.cpp ****         {
2055:Veno-Echo.cpp ****             retval = false;
2056:Veno-Echo.cpp ****         }
2057:Veno-Echo.cpp **** 
2058:Veno-Echo.cpp ****     }
2059:Veno-Echo.cpp ****     else    //previous state is picked up
2060:Veno-Echo.cpp ****     {
2061:Veno-Echo.cpp ****         retval = true;  //always return true
2062:Veno-Echo.cpp ****     }
2063:Veno-Echo.cpp **** 
2064:Veno-Echo.cpp ****     }
2065:Veno-Echo.cpp ****     return retval;
2066:Veno-Echo.cpp **** 
2067:Veno-Echo.cpp **** }
2068:Veno-Echo.cpp **** 
2069:Veno-Echo.cpp **** //Checks pickup state of secondary controls
2070:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
2071:Veno-Echo.cpp **** {
2072:Veno-Echo.cpp ****     pickupState retval{};
2073:Veno-Echo.cpp **** 
2074:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
2075:Veno-Echo.cpp ****     {
2076:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
2077:Veno-Echo.cpp ****         {
2078:Veno-Echo.cpp ****             retval = BELOW;
2079:Veno-Echo.cpp ****         }
2080:Veno-Echo.cpp ****         
2081:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
2082:Veno-Echo.cpp ****         {
2083:Veno-Echo.cpp ****             retval = ABOVE;
2084:Veno-Echo.cpp ****         }
2085:Veno-Echo.cpp **** 
2086:Veno-Echo.cpp ****         else    //within tolerance i.e. unchanged
2087:Veno-Echo.cpp ****         {
2088:Veno-Echo.cpp ****             retval = PICKEDUP;
2089:Veno-Echo.cpp ****         }
2090:Veno-Echo.cpp ****     }
2091:Veno-Echo.cpp **** 
2092:Veno-Echo.cpp ****     else    //not a recent shift change
2093:Veno-Echo.cpp ****     {
2094:Veno-Echo.cpp ****         switch(lastState)
2095:Veno-Echo.cpp ****         {
2096:Veno-Echo.cpp ****             case BELOW:
2097:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
2098:Veno-Echo.cpp ****                 retval = PICKEDUP;
2099:Veno-Echo.cpp ****             else
2100:Veno-Echo.cpp ****                 retval = lastState;
2101:Veno-Echo.cpp ****             break;
2102:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 135


2103:Veno-Echo.cpp ****             case ABOVE:
2104:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
2105:Veno-Echo.cpp ****                 retval = PICKEDUP;
2106:Veno-Echo.cpp ****             else
2107:Veno-Echo.cpp ****                 retval = lastState;
2108:Veno-Echo.cpp ****             break;
2109:Veno-Echo.cpp ****             case PICKEDUP:
2110:Veno-Echo.cpp ****                 retval = lastState;
2111:Veno-Echo.cpp ****             break;
2112:Veno-Echo.cpp ****         }
2113:Veno-Echo.cpp ****     }
2114:Veno-Echo.cpp ****     
2115:Veno-Echo.cpp ****     return retval;
2116:Veno-Echo.cpp **** }
2117:Veno-Echo.cpp **** 
2118:Veno-Echo.cpp **** double GetTapRatio(TapRatios ratio)
 2078              		.loc 20 2118 8 view .LVU536
 2079              	.LBB1108:
2119:Veno-Echo.cpp **** {
2120:Veno-Echo.cpp **** double retVal{};
 2080              		.loc 20 2120 1 view .LVU537
2121:Veno-Echo.cpp ****     switch(ratio)
 2081              		.loc 20 2121 5 view .LVU538
 2082              	.LBE1108:
 2083              	.LBE1107:
1033:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2084              		.loc 20 1033 130 is_stmt 0 view .LVU539
 2085 0156 FCEEC07A 		vcvt.u32.f32	s15, s0
 2086 015a 17EE903A 		vmov	r3, s15	@ int
 2087 015e 013B     		subs	r3, r3, #1
 2088 0160 DBB2     		uxtb	r3, r3
 2089 0162 022B     		cmp	r3, #2
 2090 0164 19D9     		bls	.L97
 2091 0166 B7EE008A 		vmov.f32	s16, #1.0e+0
 2092              	.L98:
 2093              	.LVL83:
 2094              	.LBB1110:
 2095              	.LBB1109:
2122:Veno-Echo.cpp ****     {
2123:Veno-Echo.cpp ****         case QUARTER:
2124:Veno-Echo.cpp ****         retVal = 1.0;
2125:Veno-Echo.cpp ****         break;
2126:Veno-Echo.cpp **** 
2127:Veno-Echo.cpp ****         case DOTTED_EIGHT:
2128:Veno-Echo.cpp ****         retVal = 3.0/2.0;
2129:Veno-Echo.cpp ****         break;
2130:Veno-Echo.cpp **** 
2131:Veno-Echo.cpp ****         case EIGHT:
2132:Veno-Echo.cpp ****         retVal = 2.0;
2133:Veno-Echo.cpp ****         break;
2134:Veno-Echo.cpp **** 
2135:Veno-Echo.cpp ****         case TWELVE:
2136:Veno-Echo.cpp ****         retVal = 3.0;
2137:Veno-Echo.cpp ****         break;
2138:Veno-Echo.cpp **** 
2139:Veno-Echo.cpp ****         default:
2140:Veno-Echo.cpp ****         retVal = 1.0;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 136


2141:Veno-Echo.cpp ****         break;
2142:Veno-Echo.cpp ****     }
2143:Veno-Echo.cpp **** 
2144:Veno-Echo.cpp **** return retVal;
 2096              		.loc 20 2144 1 is_stmt 1 view .LVU540
 2097              		.loc 20 2144 1 is_stmt 0 view .LVU541
 2098              	.LBE1109:
 2099              	.LBE1110:
1034:Veno-Echo.cpp ****             //save setting:
 2100              		.loc 20 1034 34 view .LVU542
 2101 016a B0EE480A 		vmov.f32	s0, s16
 2102              	.LVL84:
1034:Veno-Echo.cpp ****             //save setting:
 2103              		.loc 20 1034 34 view .LVU543
 2104 016e 1E48     		ldr	r0, .L111+60
 2105 0170 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 2106              	.LVL85:
1036:Veno-Echo.cpp ****             save_flag = true;
 2107              		.loc 20 1036 13 is_stmt 1 view .LVU544
1036:Veno-Echo.cpp ****             save_flag = true;
 2108              		.loc 20 1036 13 is_stmt 0 view .LVU545
 2109              	.LBE1104:
 2110              	.LBE1123:
 2111              	.LBE1130:
2120:Veno-Echo.cpp ****     switch(ratio)
 2112              		.loc 20 2120 1 is_stmt 1 view .LVU546
2121:Veno-Echo.cpp ****     {
 2113              		.loc 20 2121 5 view .LVU547
 2114              		.loc 20 2144 1 view .LVU548
 2115              	.LBB1131:
 2116              	.LBB1124:
 2117              	.LBB1121:
1036:Veno-Echo.cpp ****             save_flag = true;
 2118              		.loc 20 1036 34 is_stmt 0 view .LVU549
 2119 0174 1D49     		ldr	r1, .L111+64
 2120              	.LBB1111:
 2121              	.LBB1112:
 2122              	.LBB1113:
 2123              	.LBB1114:
 2124              	.LBB1115:
 2125              		.loc 22 397 18 view .LVU550
 2126 0176 1E4B     		ldr	r3, .L111+68
 2127 0178 0122     		movs	r2, #1
 2128              	.LBE1115:
 2129              	.LBE1114:
 2130              	.LBE1113:
 2131              	.LBE1112:
 2132              	.LBE1111:
1036:Veno-Echo.cpp ****             save_flag = true;
 2133              		.loc 20 1036 34 view .LVU551
 2134 017a 81ED018A 		vstr.32	s16, [r1, #4]
1037:Veno-Echo.cpp ****         }
 2135              		.loc 20 1037 13 is_stmt 1 view .LVU552
 2136              	.LVL86:
 2137              	.LBB1120:
 2138              	.LBI1111:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 137


 2139              		.loc 23 80 5 view .LVU553
 2140              	.LBB1119:
 2141              		.loc 23 81 7 view .LVU554
 2142              	.LBB1118:
 2143              	.LBI1113:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 2144              		.loc 22 288 7 view .LVU555
 2145              	.LBB1117:
 2146              	.LBI1114:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 2147              		.loc 22 390 7 view .LVU556
 2148              	.LBB1116:
 2149              		.loc 22 397 18 is_stmt 0 view .LVU557
 2150 017e BFF35B8F 		dmb	ish
 2151 0182 1A70     		strb	r2, [r3]
 2152 0184 BFF35B8F 		dmb	ish
 2153              	.LVL87:
 2154              		.loc 22 397 18 view .LVU558
 2155              	.LBE1116:
 2156              	.LBE1117:
 2157              	.LBE1118:
 2158              	.LBE1119:
 2159              	.LBE1120:
 2160              	.LBE1121:
 2161              	.LBE1124:
 2162              	.LBE1131:
1041:Veno-Echo.cpp **** void Update_feedbackL_CV()
 2163              		.loc 20 1041 1 view .LVU559
 2164 0188 BDEC028B 		vldm	sp!, {d8}
 2165              		.cfi_remember_state
 2166              		.cfi_restore 80
 2167              		.cfi_restore 81
 2168              		.cfi_def_cfa_offset 8
 2169 018c 10BD     		pop	{r4, pc}
 2170              	.LVL88:
 2171              	.L109:
 2172              		.cfi_restore_state
 2173              	.LBB1132:
 2174              	.LBB1125:
 2175              	.LBB1095:
 2176              	.LBB1083:
2016:Veno-Echo.cpp ****     }
 2177              		.loc 20 2016 16 view .LVU560
 2178 018e DFED157A 		vldr.32	s15, .L111+56
 2179              	.LVL89:
2016:Veno-Echo.cpp ****     }
 2180              		.loc 20 2016 16 view .LVU561
 2181 0192 76E7     		b	.L89
 2182              	.LVL90:
 2183              	.L110:
2016:Veno-Echo.cpp ****     }
 2184              		.loc 20 2016 16 view .LVU562
 2185              	.LBE1083:
 2186              	.LBE1095:
 2187              	.LBB1096:
 2188              	.LBB1093:
 2189 0194 DFED137A 		vldr.32	s15, .L111+56
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 138


 2190 0198 BDE7     		b	.L87
 2191              	.LVL91:
 2192              	.L97:
2016:Veno-Echo.cpp ****     }
 2193              		.loc 20 2016 16 view .LVU563
 2194 019a 164A     		ldr	r2, .L111+72
 2195 019c 02EBC303 		add	r3, r2, r3, lsl #3
 2196 01a0 93ED008B 		vldr.64	d8, [r3]
 2197 01a4 B7EEC88B 		vcvt.f32.f64	s16, d8
 2198 01a8 DFE7     		b	.L98
 2199              	.L112:
 2200 01aa 00BF     		.align	2
 2201              	.L111:
 2202 01ac 18000000 		.word	.LANCHOR4+24
 2203 01b0 00000000 		.word	.LANCHOR18
 2204 01b4 ABAAAA2A 		.word	715827883
 2205 01b8 00000000 		.word	.LANCHOR7
 2206 01bc 00000000 		.word	.LANCHOR19
 2207 01c0 00000000 		.word	.LANCHOR20
 2208 01c4 00000000 		.word	.LANCHOR21
 2209 01c8 00000000 		.word	.LANCHOR17
 2210 01cc 00000000 		.word	.LANCHOR22
 2211 01d0 00000000 		.word	.LANCHOR12
 2212 01d4 00000000 		.word	.LANCHOR1
 2213 01d8 00000000 		.word	.LANCHOR23
 2214 01dc 00000000 		.word	.LANCHOR24
 2215 01e0 0AD7A33B 		.word	1000593162
 2216 01e4 00000000 		.word	0
 2217 01e8 00000000 		.word	.LANCHOR26
 2218 01ec 00000000 		.word	.LANCHOR15
 2219 01f0 00000000 		.word	.LANCHOR16
 2220 01f4 00000000 		.word	.LANCHOR25
 2221              	.LBE1093:
 2222              	.LBE1096:
 2223              	.LBE1125:
 2224              	.LBE1132:
 2225              		.cfi_endproc
 2226              	.LFE4315:
 2228              		.section	.text._Z19Update_feedbackL_CVv,"ax",%progbits
 2229              		.align	1
 2230              		.p2align 2,,3
 2231              		.global	_Z19Update_feedbackL_CVv
 2232              		.syntax unified
 2233              		.thumb
 2234              		.thumb_func
 2235              		.fpu fpv5-d16
 2237              	_Z19Update_feedbackL_CVv:
 2238              	.LFB4316:
1043:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 2239              		.loc 20 1043 1 is_stmt 1 view -0
 2240              		.cfi_startproc
 2241              		@ args = 0, pretend = 0, frame = 0
 2242              		@ frame_needed = 0, uses_anonymous_args = 0
1044:Veno-Echo.cpp **** }
 2243              		.loc 20 1044 5 view .LVU565
1043:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 2244              		.loc 20 1043 1 is_stmt 0 view .LVU566
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 139


 2245 0000 08B5     		push	{r3, lr}
 2246              		.cfi_def_cfa_offset 8
 2247              		.cfi_offset 3, -8
 2248              		.cfi_offset 14, -4
1044:Veno-Echo.cpp **** }
 2249              		.loc 20 1044 35 view .LVU567
 2250 0002 0221     		movs	r1, #2
 2251 0004 0348     		ldr	r0, .L115
 2252 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2253              	.LVL92:
1044:Veno-Echo.cpp **** }
 2254              		.loc 20 1044 18 view .LVU568
 2255 000a 034B     		ldr	r3, .L115+4
 2256 000c 83ED000A 		vstr.32	s0, [r3]
1045:Veno-Echo.cpp **** void Update_feedbackL()
 2257              		.loc 20 1045 1 view .LVU569
 2258 0010 08BD     		pop	{r3, pc}
 2259              	.L116:
 2260 0012 00BF     		.align	2
 2261              	.L115:
 2262 0014 18000000 		.word	.LANCHOR4+24
 2263 0018 00000000 		.word	.LANCHOR27
 2264              		.cfi_endproc
 2265              	.LFE4316:
 2267              		.section	.text._Z16Update_feedbackLv,"ax",%progbits
 2268              		.align	1
 2269              		.p2align 2,,3
 2270              		.global	_Z16Update_feedbackLv
 2271              		.syntax unified
 2272              		.thumb
 2273              		.thumb_func
 2274              		.fpu fpv5-d16
 2276              	_Z16Update_feedbackLv:
 2277              	.LFB4317:
1047:Veno-Echo.cpp ****     static bool lastShift{};
 2278              		.loc 20 1047 1 is_stmt 1 view -0
 2279              		.cfi_startproc
 2280              		@ args = 0, pretend = 0, frame = 0
 2281              		@ frame_needed = 0, uses_anonymous_args = 0
1048:Veno-Echo.cpp ****     static bool feedbackL_pickup{};
 2282              		.loc 20 1048 5 view .LVU571
1049:Veno-Echo.cpp ****     static bool HPCutoff_pickup{};
 2283              		.loc 20 1049 5 view .LVU572
1050:Veno-Echo.cpp **** 
 2284              		.loc 20 1050 5 view .LVU573
1052:Veno-Echo.cpp **** 
 2285              		.loc 20 1052 5 view .LVU574
1056:Veno-Echo.cpp **** 
 2286              		.loc 20 1056 5 view .LVU575
1056:Veno-Echo.cpp **** 
 2287              		.loc 20 1056 43 is_stmt 0 view .LVU576
 2288 0000 0122     		movs	r2, #1
 2289 0002 0721     		movs	r1, #7
 2290 0004 6548     		ldr	r0, .L145
1047:Veno-Echo.cpp ****     static bool lastShift{};
 2291              		.loc 20 1047 1 view .LVU577
 2292 0006 10B5     		push	{r4, lr}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 140


 2293              		.cfi_def_cfa_offset 8
 2294              		.cfi_offset 4, -8
 2295              		.cfi_offset 14, -4
 2296 0008 2DED028B 		vpush.64	{d8}
 2297              		.cfi_def_cfa_offset 16
 2298              		.cfi_offset 80, -16
 2299              		.cfi_offset 81, -12
1056:Veno-Echo.cpp **** 
 2300              		.loc 20 1056 43 view .LVU578
 2301 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2302              	.LVL93:
 2303              	.LBB1133:
1058:Veno-Echo.cpp ****     {   
 2304              		.loc 20 1058 9 view .LVU579
 2305 0010 634B     		ldr	r3, .L145+4
 2306              	.LVL94:
1058:Veno-Echo.cpp ****     {   
 2307              		.loc 20 1058 9 view .LVU580
 2308              	.LBE1133:
1058:Veno-Echo.cpp ****     {   
 2309              		.loc 20 1058 5 is_stmt 1 view .LVU581
 2310              	.LBB1178:
 2311              	.LBB1134:
1062:Veno-Echo.cpp ****         {
 2312              		.loc 20 1062 19 is_stmt 0 view .LVU582
 2313 0012 644A     		ldr	r2, .L145+8
 2314              	.LBE1134:
1058:Veno-Echo.cpp ****     {   
 2315              		.loc 20 1058 5 view .LVU583
 2316 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2317 0016 002B     		cmp	r3, #0
 2318 0018 3DD1     		bne	.L118
 2319              	.LBB1157:
1060:Veno-Echo.cpp ****         //update pickup
 2320              		.loc 20 1060 9 is_stmt 1 view .LVU584
1062:Veno-Echo.cpp ****         {
 2321              		.loc 20 1062 9 view .LVU585
 2322 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2323 001c 0029     		cmp	r1, #0
 2324 001e 47D0     		beq	.L119
1064:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 2325              		.loc 20 1064 13 view .LVU586
1065:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2326              		.loc 20 1065 30 is_stmt 0 view .LVU587
 2327 0020 6148     		ldr	r0, .L145+12
1066:Veno-Echo.cpp ****         } 
 2328              		.loc 20 1066 27 view .LVU588
 2329 0022 6249     		ldr	r1, .L145+16
1064:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 2330              		.loc 20 1064 23 view .LVU589
 2331 0024 1370     		strb	r3, [r2]
1065:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2332              		.loc 20 1065 13 is_stmt 1 view .LVU590
1065:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2333              		.loc 20 1065 30 is_stmt 0 view .LVU591
 2334 0026 0370     		strb	r3, [r0]
1066:Veno-Echo.cpp ****         } 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 141


 2335              		.loc 20 1066 13 is_stmt 1 view .LVU592
1066:Veno-Echo.cpp ****         } 
 2336              		.loc 20 1066 27 is_stmt 0 view .LVU593
 2337 0028 81ED000A 		vstr.32	s0, [r1]
 2338              	.L120:
1079:Veno-Echo.cpp **** 
 2339              		.loc 20 1079 9 is_stmt 1 view .LVU594
 2340              	.LVL95:
1081:Veno-Echo.cpp ****         {
 2341              		.loc 20 1081 9 view .LVU595
1089:Veno-Echo.cpp ****         }
 2342              		.loc 20 1089 13 view .LVU596
 2343              	.LBB1135:
 2344              	.LBI1135:
2009:Veno-Echo.cpp **** {
 2345              		.loc 20 2009 7 view .LVU597
 2346              	.LBB1136:
2011:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2347              		.loc 20 2011 5 view .LVU598
2012:Veno-Echo.cpp **** 
 2348              		.loc 20 2012 5 view .LVU599
 2349              	.LBE1136:
 2350              	.LBE1135:
1089:Veno-Echo.cpp ****         }
 2351              		.loc 20 1089 41 is_stmt 0 view .LVU600
 2352 002c 604A     		ldr	r2, .L145+20
 2353              	.LBB1140:
 2354              	.LBB1137:
2012:Veno-Echo.cpp **** 
 2355              		.loc 20 2012 39 view .LVU601
 2356 002e F7EE006A 		vmov.f32	s13, #1.0e+0
2012:Veno-Echo.cpp **** 
 2357              		.loc 20 2012 49 view .LVU602
 2358 0032 F6EE005A 		vmov.f32	s11, #5.0e-1
 2359              	.LBE1137:
 2360              	.LBE1140:
1089:Veno-Echo.cpp ****         }
 2361              		.loc 20 1089 41 view .LVU603
 2362 0036 5F4B     		ldr	r3, .L145+24
 2363              	.LBB1141:
 2364              	.LBB1138:
2012:Veno-Echo.cpp **** 
 2365              		.loc 20 2012 39 view .LVU604
 2366 0038 92ED007A 		vldr.32	s14, [r2]
2012:Veno-Echo.cpp **** 
 2367              		.loc 20 2012 12 view .LVU605
 2368 003c B0EE006A 		vmov.f32	s12, #2.0e+0
 2369 0040 D3ED007A 		vldr.32	s15, [r3]
2012:Veno-Echo.cpp **** 
 2370              		.loc 20 2012 39 view .LVU606
 2371 0044 36EEC77A 		vsub.f32	s14, s13, s14
2012:Veno-Echo.cpp **** 
 2372              		.loc 20 2012 49 view .LVU607
 2373 0048 37EE657A 		vsub.f32	s14, s14, s11
2012:Veno-Echo.cpp **** 
 2374              		.loc 20 2012 12 view .LVU608
 2375 004c E7EE067A 		vfma.f32	s15, s14, s12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 142


 2376              	.LVL96:
2014:Veno-Echo.cpp ****     {
 2377              		.loc 20 2014 5 is_stmt 1 view .LVU609
 2378 0050 F5EEC07A 		vcmpe.f32	s15, #0
 2379 0054 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2380 0058 00F19A80 		bmi	.L143
2019:Veno-Echo.cpp ****     {
 2381              		.loc 20 2019 5 view .LVU610
2021:Veno-Echo.cpp ****     }
 2382              		.loc 20 2021 16 is_stmt 0 view .LVU611
 2383 005c F4EE667A 		vcmp.f32	s15, s13
 2384 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2385 0064 76FEA77A 		vselgt.f32	s15, s13, s15
 2386              	.LVL97:
 2387              	.L125:
2021:Veno-Echo.cpp ****     }
 2388              		.loc 20 2021 16 view .LVU612
 2389              	.LBE1138:
 2390              	.LBE1141:
1092:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2391              		.loc 20 1092 9 is_stmt 1 view .LVU613
1092:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2392              		.loc 20 1092 37 is_stmt 0 view .LVU614
 2393 0068 B0EE670A 		vmov.f32	s0, s15
 2394              	.LVL98:
1092:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2395              		.loc 20 1092 37 view .LVU615
 2396 006c 0020     		movs	r0, #0
 2397 006e B7EE041A 		vmov.f32	s2, #1.25e+0
 2398 0072 DFED510A 		vldr.32	s1, .L145+28
 2399 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2400              	.LVL99:
1093:Veno-Echo.cpp ****     }
 2401              		.loc 20 1093 9 is_stmt 1 view .LVU616
 2402              	.LBB1142:
 2403              	.LBI1142:
 2404              		.file 25 "../DaisySP/Source/Utility/dsp.h"
   1:../DaisySP/Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../DaisySP/Source/Utility/dsp.h **** */
   3:../DaisySP/Source/Utility/dsp.h **** #pragma once
   4:../DaisySP/Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
   5:../DaisySP/Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../DaisySP/Source/Utility/dsp.h **** #include <cassert>
   7:../DaisySP/Source/Utility/dsp.h **** #include <cstdint>
   8:../DaisySP/Source/Utility/dsp.h **** #include <random>
   9:../DaisySP/Source/Utility/dsp.h **** #include <cmath>
  10:../DaisySP/Source/Utility/dsp.h **** 
  11:../DaisySP/Source/Utility/dsp.h **** /** PIs
  12:../DaisySP/Source/Utility/dsp.h **** */
  13:../DaisySP/Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../DaisySP/Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../DaisySP/Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../DaisySP/Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../DaisySP/Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  18:../DaisySP/Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../DaisySP/Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../DaisySP/Source/Utility/dsp.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 143


  21:../DaisySP/Source/Utility/dsp.h **** namespace daisysp
  22:../DaisySP/Source/Utility/dsp.h **** {
  23:../DaisySP/Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../DaisySP/Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../DaisySP/Source/Utility/dsp.h **** 
  26:../DaisySP/Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../DaisySP/Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../DaisySP/Source/Utility/dsp.h **** 
  29:../DaisySP/Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../DaisySP/Source/Utility/dsp.h **** c/o stephen mccaul
  31:../DaisySP/Source/Utility/dsp.h **** */
  32:../DaisySP/Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../DaisySP/Source/Utility/dsp.h **** {
  34:../DaisySP/Source/Utility/dsp.h ****     float r;
  35:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  36:../DaisySP/Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../DaisySP/Source/Utility/dsp.h **** #else
  38:../DaisySP/Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  40:../DaisySP/Source/Utility/dsp.h ****     return r;
  41:../DaisySP/Source/Utility/dsp.h **** }
  42:../DaisySP/Source/Utility/dsp.h **** 
  43:../DaisySP/Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../DaisySP/Source/Utility/dsp.h **** {
  45:../DaisySP/Source/Utility/dsp.h ****     float r;
  46:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  47:../DaisySP/Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  48:../DaisySP/Source/Utility/dsp.h **** #else
  49:../DaisySP/Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  50:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  51:../DaisySP/Source/Utility/dsp.h ****     return r;
  52:../DaisySP/Source/Utility/dsp.h **** }
  53:../DaisySP/Source/Utility/dsp.h **** 
  54:../DaisySP/Source/Utility/dsp.h **** /** quick fp clamp
  55:../DaisySP/Source/Utility/dsp.h **** */
  56:../DaisySP/Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../DaisySP/Source/Utility/dsp.h **** {
  58:../DaisySP/Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../DaisySP/Source/Utility/dsp.h **** }
  60:../DaisySP/Source/Utility/dsp.h **** 
  61:../DaisySP/Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  62:../DaisySP/Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../DaisySP/Source/Utility/dsp.h **** These are approximations
  64:../DaisySP/Source/Utility/dsp.h **** */
  65:../DaisySP/Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../DaisySP/Source/Utility/dsp.h **** {
  67:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  68:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  70:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../DaisySP/Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  74:../DaisySP/Source/Utility/dsp.h ****     return f;
  75:../DaisySP/Source/Utility/dsp.h **** }
  76:../DaisySP/Source/Utility/dsp.h **** 
  77:../DaisySP/Source/Utility/dsp.h **** inline float fastroot(float f, int n)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 144


  78:../DaisySP/Source/Utility/dsp.h **** {
  79:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  80:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  82:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../DaisySP/Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  86:../DaisySP/Source/Utility/dsp.h ****     return f;
  87:../DaisySP/Source/Utility/dsp.h **** }
  88:../DaisySP/Source/Utility/dsp.h **** 
  89:../DaisySP/Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../DaisySP/Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../DaisySP/Source/Utility/dsp.h **** */
  92:../DaisySP/Source/Utility/dsp.h **** inline float pow10f(float f)
  93:../DaisySP/Source/Utility/dsp.h **** {
  94:../DaisySP/Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../DaisySP/Source/Utility/dsp.h **** }
  96:../DaisySP/Source/Utility/dsp.h **** 
  97:../DaisySP/Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../DaisySP/Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../DaisySP/Source/Utility/dsp.h **** */
 100:../DaisySP/Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../DaisySP/Source/Utility/dsp.h **** {
 102:../DaisySP/Source/Utility/dsp.h ****     float frac;
 103:../DaisySP/Source/Utility/dsp.h ****     int   exp;
 104:../DaisySP/Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../DaisySP/Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 107:../DaisySP/Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 109:../DaisySP/Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 111:../DaisySP/Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../DaisySP/Source/Utility/dsp.h ****     f += exp;
 113:../DaisySP/Source/Utility/dsp.h ****     return (f);
 114:../DaisySP/Source/Utility/dsp.h **** }
 115:../DaisySP/Source/Utility/dsp.h **** 
 116:../DaisySP/Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../DaisySP/Source/Utility/dsp.h **** {
 118:../DaisySP/Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 119:../DaisySP/Source/Utility/dsp.h **** }
 120:../DaisySP/Source/Utility/dsp.h **** 
 121:../DaisySP/Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../DaisySP/Source/Utility/dsp.h **** */
 123:../DaisySP/Source/Utility/dsp.h **** inline float mtof(float m)
 124:../DaisySP/Source/Utility/dsp.h **** {
 125:../DaisySP/Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 126:../DaisySP/Source/Utility/dsp.h **** }
 127:../DaisySP/Source/Utility/dsp.h **** 
 128:../DaisySP/Source/Utility/dsp.h **** 
 129:../DaisySP/Source/Utility/dsp.h **** /** one pole lpf
 130:../DaisySP/Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 131:../DaisySP/Source/Utility/dsp.h **** calls to properly filter the signal
 132:../DaisySP/Source/Utility/dsp.h **** coeff can be calculated:
 133:../DaisySP/Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 134:../DaisySP/Source/Utility/dsp.h **** */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 145


 135:../DaisySP/Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 2405              		.loc 25 135 13 view .LVU617
 2406              	.LBB1143:
 136:../DaisySP/Source/Utility/dsp.h **** {
 137:../DaisySP/Source/Utility/dsp.h ****     out += coeff * (in - out);
 2407              		.loc 25 137 5 view .LVU618
 2408              		.loc 25 137 9 is_stmt 0 view .LVU619
 2409 007a 504B     		ldr	r3, .L145+32
 2410 007c 9FED507A 		vldr.32	s14, .L145+36
 2411 0080 D3ED007A 		vldr.32	s15, [r3]
 2412              		.loc 25 137 24 view .LVU620
 2413 0084 30EE670A 		vsub.f32	s0, s0, s15
 2414              	.LVL100:
 2415              		.loc 25 137 24 view .LVU621
 2416              	.LBE1143:
 2417              	.LBE1142:
 2418              	.LBE1157:
 2419              	.LBE1178:
1129:Veno-Echo.cpp **** 
 2420              		.loc 20 1129 1 view .LVU622
 2421 0088 BDEC028B 		vldm	sp!, {d8}
 2422              		.cfi_remember_state
 2423              		.cfi_restore 80
 2424              		.cfi_restore 81
 2425              		.cfi_def_cfa_offset 8
 2426              	.LBB1179:
 2427              	.LBB1158:
 2428              	.LBB1145:
 2429              	.LBB1144:
 2430              		.loc 25 137 9 view .LVU623
 2431 008c E0EE077A 		vfma.f32	s15, s0, s14
 2432 0090 C3ED007A 		vstr.32	s15, [r3]
 2433              	.LBE1144:
 2434              	.LBE1145:
 2435              	.LBE1158:
 2436              	.LBE1179:
1129:Veno-Echo.cpp **** 
 2437              		.loc 20 1129 1 view .LVU624
 2438 0094 10BD     		pop	{r4, pc}
 2439              	.LVL101:
 2440              	.L118:
 2441              		.cfi_restore_state
 2442              	.LBB1180:
 2443              	.LBB1159:
1097:Veno-Echo.cpp **** 
 2444              		.loc 20 1097 9 is_stmt 1 view .LVU625
1099:Veno-Echo.cpp ****         {
 2445              		.loc 20 1099 9 view .LVU626
 2446 0096 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2447 0098 002B     		cmp	r3, #0
 2448 009a 3ED1     		bne	.L128
1101:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2449              		.loc 20 1101 13 view .LVU627
1101:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2450              		.loc 20 1101 23 is_stmt 0 view .LVU628
 2451 009c 0124     		movs	r4, #1
1102:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 146


 2452              		.loc 20 1102 29 view .LVU629
 2453 009e 4948     		ldr	r0, .L145+40
1103:Veno-Echo.cpp ****         }
 2454              		.loc 20 1103 26 view .LVU630
 2455 00a0 4949     		ldr	r1, .L145+44
1101:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2456              		.loc 20 1101 23 view .LVU631
 2457 00a2 1470     		strb	r4, [r2]
1102:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2458              		.loc 20 1102 13 is_stmt 1 view .LVU632
1102:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2459              		.loc 20 1102 29 is_stmt 0 view .LVU633
 2460 00a4 0370     		strb	r3, [r0]
1103:Veno-Echo.cpp ****         }
 2461              		.loc 20 1103 13 is_stmt 1 view .LVU634
1103:Veno-Echo.cpp ****         }
 2462              		.loc 20 1103 26 is_stmt 0 view .LVU635
 2463 00a6 81ED000A 		vstr.32	s0, [r1]
 2464              	.L117:
1103:Veno-Echo.cpp ****         }
 2465              		.loc 20 1103 26 view .LVU636
 2466              	.LBE1159:
 2467              	.LBE1180:
1129:Veno-Echo.cpp **** 
 2468              		.loc 20 1129 1 view .LVU637
 2469 00aa BDEC028B 		vldm	sp!, {d8}
 2470              		.cfi_remember_state
 2471              		.cfi_restore 80
 2472              		.cfi_restore 81
 2473              		.cfi_def_cfa_offset 8
 2474 00ae 10BD     		pop	{r4, pc}
 2475              	.L119:
 2476              		.cfi_restore_state
 2477              	.LBB1181:
 2478              	.LBB1175:
1070:Veno-Echo.cpp ****             {
 2479              		.loc 20 1070 13 is_stmt 1 view .LVU638
1070:Veno-Echo.cpp ****             {
 2480              		.loc 20 1070 16 is_stmt 0 view .LVU639
 2481 00b0 3D4B     		ldr	r3, .L145+12
1070:Veno-Echo.cpp ****             {
 2482              		.loc 20 1070 13 view .LVU640
 2483 00b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2484 00b4 7AB9     		cbnz	r2, .L121
1072:Veno-Echo.cpp ****                 {
 2485              		.loc 20 1072 17 is_stmt 1 view .LVU641
 2486              	.LVL102:
 2487              	.LBB1146:
 2488              	.LBI1146:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2489              		.loc 21 75 3 view .LVU642
 2490              	.LBB1147:
 2491              		.loc 21 76 5 view .LVU643
 2492              		.loc 21 76 5 is_stmt 0 view .LVU644
 2493              	.LBE1147:
 2494              	.LBE1146:
1072:Veno-Echo.cpp ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 147


 2495              		.loc 20 1072 23 view .LVU645
 2496 00b6 3D4A     		ldr	r2, .L145+16
1072:Veno-Echo.cpp ****                 {
 2497              		.loc 20 1072 17 view .LVU646
 2498 00b8 9FED447A 		vldr.32	s14, .L145+48
1072:Veno-Echo.cpp ****                 {
 2499              		.loc 20 1072 23 view .LVU647
 2500 00bc D2ED007A 		vldr.32	s15, [r2]
 2501 00c0 70EE677A 		vsub.f32	s15, s0, s15
 2502              	.LBB1149:
 2503              	.LBB1148:
 2504              		.loc 21 76 31 view .LVU648
 2505 00c4 F0EEE77A 		vabs.f32	s15, s15
 2506              	.LBE1148:
 2507              	.LBE1149:
1072:Veno-Echo.cpp ****                 {
 2508              		.loc 20 1072 17 view .LVU649
 2509 00c8 F4EEC77A 		vcmpe.f32	s15, s14
 2510 00cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2511 00d0 ACDD     		ble	.L120
1074:Veno-Echo.cpp ****                 }
 2512              		.loc 20 1074 21 is_stmt 1 view .LVU650
1074:Veno-Echo.cpp ****                 }
 2513              		.loc 20 1074 38 is_stmt 0 view .LVU651
 2514 00d2 0122     		movs	r2, #1
 2515 00d4 1A70     		strb	r2, [r3]
 2516              	.L121:
1079:Veno-Echo.cpp **** 
 2517              		.loc 20 1079 9 is_stmt 1 view .LVU652
 2518              	.LVL103:
1081:Veno-Echo.cpp ****         {
 2519              		.loc 20 1081 9 view .LVU653
1083:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 2520              		.loc 20 1083 13 view .LVU654
 2521              	.LBB1150:
 2522              	.LBI1150:
2009:Veno-Echo.cpp **** {
 2523              		.loc 20 2009 7 view .LVU655
 2524              	.LBB1151:
2011:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2525              		.loc 20 2011 5 view .LVU656
2012:Veno-Echo.cpp **** 
 2526              		.loc 20 2012 5 view .LVU657
 2527              	.LBE1151:
 2528              	.LBE1150:
1083:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 2529              		.loc 20 1083 41 is_stmt 0 view .LVU658
 2530 00d6 364B     		ldr	r3, .L145+20
 2531              	.LBB1154:
 2532              	.LBB1152:
2012:Veno-Echo.cpp **** 
 2533              		.loc 20 2012 39 view .LVU659
 2534 00d8 B7EE007A 		vmov.f32	s14, #1.0e+0
2012:Veno-Echo.cpp **** 
 2535              		.loc 20 2012 49 view .LVU660
 2536 00dc B6EE006A 		vmov.f32	s12, #5.0e-1
2012:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 148


 2537              		.loc 20 2012 39 view .LVU661
 2538 00e0 D3ED007A 		vldr.32	s15, [r3]
2012:Veno-Echo.cpp **** 
 2539              		.loc 20 2012 12 view .LVU662
 2540 00e4 F0EE006A 		vmov.f32	s13, #2.0e+0
2012:Veno-Echo.cpp **** 
 2541              		.loc 20 2012 39 view .LVU663
 2542 00e8 77EE677A 		vsub.f32	s15, s14, s15
2012:Veno-Echo.cpp **** 
 2543              		.loc 20 2012 49 view .LVU664
 2544 00ec 77EEC67A 		vsub.f32	s15, s15, s12
2012:Veno-Echo.cpp **** 
 2545              		.loc 20 2012 12 view .LVU665
 2546 00f0 B0EE406A 		vmov.f32	s12, s0
 2547 00f4 A7EEA66A 		vfma.f32	s12, s15, s13
2014:Veno-Echo.cpp ****     {
 2548              		.loc 20 2014 5 view .LVU666
 2549 00f8 B5EEC06A 		vcmpe.f32	s12, #0
2012:Veno-Echo.cpp **** 
 2550              		.loc 20 2012 12 view .LVU667
 2551 00fc F0EE467A 		vmov.f32	s15, s12
 2552              	.LVL104:
2014:Veno-Echo.cpp ****     {
 2553              		.loc 20 2014 5 is_stmt 1 view .LVU668
 2554 0100 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2555 0104 47D4     		bmi	.L144
2019:Veno-Echo.cpp ****     {
 2556              		.loc 20 2019 5 view .LVU669
2021:Veno-Echo.cpp ****     }
 2557              		.loc 20 2021 16 is_stmt 0 view .LVU670
 2558 0106 F4EE477A 		vcmp.f32	s15, s14
 2559 010a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2560 010e 77FE277A 		vselgt.f32	s15, s14, s15
 2561              	.L123:
 2562              	.LVL105:
2024:Veno-Echo.cpp **** }
 2563              		.loc 20 2024 5 is_stmt 1 view .LVU671
2024:Veno-Echo.cpp **** }
 2564              		.loc 20 2024 5 is_stmt 0 view .LVU672
 2565              	.LBE1152:
 2566              	.LBE1154:
1084:Veno-Echo.cpp ****         }
 2567              		.loc 20 1084 13 is_stmt 1 view .LVU673
1084:Veno-Echo.cpp ****         }
 2568              		.loc 20 1084 28 is_stmt 0 view .LVU674
 2569 0112 284B     		ldr	r3, .L145+24
 2570 0114 83ED000A 		vstr.32	s0, [r3]
 2571 0118 A6E7     		b	.L125
 2572              	.LVL106:
 2573              	.L128:
1084:Veno-Echo.cpp ****         }
 2574              		.loc 20 1084 28 view .LVU675
 2575              	.LBE1175:
 2576              	.LBB1176:
1108:Veno-Echo.cpp ****             {
 2577              		.loc 20 1108 13 is_stmt 1 view .LVU676
1108:Veno-Echo.cpp ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 149


 2578              		.loc 20 1108 16 is_stmt 0 view .LVU677
 2579 011a 2A4B     		ldr	r3, .L145+40
1108:Veno-Echo.cpp ****             {
 2580              		.loc 20 1108 13 view .LVU678
 2581 011c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2582 011e 7AB9     		cbnz	r2, .L130
1110:Veno-Echo.cpp ****                 {
 2583              		.loc 20 1110 17 is_stmt 1 view .LVU679
 2584              	.LVL107:
 2585              	.LBB1160:
 2586              	.LBI1160:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2587              		.loc 21 75 3 view .LVU680
 2588              	.LBB1161:
 2589              		.loc 21 76 5 view .LVU681
 2590              		.loc 21 76 5 is_stmt 0 view .LVU682
 2591              	.LBE1161:
 2592              	.LBE1160:
1110:Veno-Echo.cpp ****                 {
 2593              		.loc 20 1110 23 view .LVU683
 2594 0120 294A     		ldr	r2, .L145+44
1110:Veno-Echo.cpp ****                 {
 2595              		.loc 20 1110 17 view .LVU684
 2596 0122 9FED2A7A 		vldr.32	s14, .L145+48
1110:Veno-Echo.cpp ****                 {
 2597              		.loc 20 1110 23 view .LVU685
 2598 0126 D2ED007A 		vldr.32	s15, [r2]
 2599 012a 70EE677A 		vsub.f32	s15, s0, s15
 2600              	.LBB1163:
 2601              	.LBB1162:
 2602              		.loc 21 76 31 view .LVU686
 2603 012e F0EEE77A 		vabs.f32	s15, s15
 2604              	.LBE1162:
 2605              	.LBE1163:
1110:Veno-Echo.cpp ****                 {
 2606              		.loc 20 1110 17 view .LVU687
 2607 0132 F4EEC77A 		vcmpe.f32	s15, s14
 2608 0136 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2609 013a B6DD     		ble	.L117
1112:Veno-Echo.cpp ****                 }
 2610              		.loc 20 1112 21 is_stmt 1 view .LVU688
1112:Veno-Echo.cpp ****                 }
 2611              		.loc 20 1112 37 is_stmt 0 view .LVU689
 2612 013c 0122     		movs	r2, #1
 2613 013e 1A70     		strb	r2, [r3]
 2614              	.L130:
1117:Veno-Echo.cpp ****         {
 2615              		.loc 20 1117 9 is_stmt 1 view .LVU690
 2616              	.LBB1164:
1119:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
 2617              		.loc 20 1119 13 view .LVU691
 2618              	.LVL108:
1120:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2619              		.loc 20 1120 13 view .LVU692
1120:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2620              		.loc 20 1120 29 is_stmt 0 view .LVU693
 2621 0140 9FED231A 		vldr.32	s2, .L145+52
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 150


 2622 0144 0120     		movs	r0, #1
 2623 0146 DFED230A 		vldr.32	s1, .L145+56
 2624 014a FFF7FEFF 		bl	_Z5scalefff9CurveType
 2625              	.LVL109:
1120:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2626              		.loc 20 1120 29 view .LVU694
 2627 014e B0EE408A 		vmov.f32	s16, s0
 2628              	.LVL110:
1121:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 2629              		.loc 20 1121 13 is_stmt 1 view .LVU695
1121:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 2630              		.loc 20 1121 26 is_stmt 0 view .LVU696
 2631 0152 2148     		ldr	r0, .L145+60
 2632 0154 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2633              	.LVL111:
1122:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 2634              		.loc 20 1122 13 is_stmt 1 view .LVU697
1122:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 2635              		.loc 20 1122 26 is_stmt 0 view .LVU698
 2636 0158 2048     		ldr	r0, .L145+64
 2637 015a B0EE480A 		vmov.f32	s0, s16
 2638 015e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2639              	.LVL112:
1123:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 2640              		.loc 20 1123 13 is_stmt 1 view .LVU699
1123:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 2641              		.loc 20 1123 31 is_stmt 0 view .LVU700
 2642 0162 B0EE480A 		vmov.f32	s0, s16
 2643 0166 1E48     		ldr	r0, .L145+68
 2644 0168 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2645              	.LVL113:
1124:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 2646              		.loc 20 1124 13 is_stmt 1 view .LVU701
1124:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 2647              		.loc 20 1124 31 is_stmt 0 view .LVU702
 2648 016c B0EE480A 		vmov.f32	s0, s16
 2649 0170 1C48     		ldr	r0, .L145+72
 2650 0172 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2651              	.LVL114:
1125:Veno-Echo.cpp ****             save_flag = true;
 2652              		.loc 20 1125 13 is_stmt 1 view .LVU703
1125:Veno-Echo.cpp ****             save_flag = true;
 2653              		.loc 20 1125 35 is_stmt 0 view .LVU704
 2654 0176 1C49     		ldr	r1, .L145+76
 2655              	.LBB1165:
 2656              	.LBB1166:
 2657              	.LBB1167:
 2658              	.LBB1168:
 2659              	.LBB1169:
 2660              		.loc 22 397 18 view .LVU705
 2661 0178 1C4B     		ldr	r3, .L145+80
 2662 017a 0122     		movs	r2, #1
 2663              	.LBE1169:
 2664              	.LBE1168:
 2665              	.LBE1167:
 2666              	.LBE1166:
 2667              	.LBE1165:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 151


1125:Veno-Echo.cpp ****             save_flag = true;
 2668              		.loc 20 1125 35 view .LVU706
 2669 017c 81ED048A 		vstr.32	s16, [r1, #16]
1126:Veno-Echo.cpp ****         }
 2670              		.loc 20 1126 13 is_stmt 1 view .LVU707
 2671              	.LVL115:
 2672              	.LBB1174:
 2673              	.LBI1165:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 2674              		.loc 23 80 5 view .LVU708
 2675              	.LBB1173:
 2676              		.loc 23 81 7 view .LVU709
 2677              	.LBB1172:
 2678              	.LBI1167:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 2679              		.loc 22 288 7 view .LVU710
 2680              	.LBB1171:
 2681              	.LBI1168:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 2682              		.loc 22 390 7 view .LVU711
 2683              	.LBB1170:
 2684              		.loc 22 397 18 is_stmt 0 view .LVU712
 2685 0180 BFF35B8F 		dmb	ish
 2686 0184 1A70     		strb	r2, [r3]
 2687 0186 BFF35B8F 		dmb	ish
 2688              	.LVL116:
 2689              		.loc 22 397 18 view .LVU713
 2690              	.LBE1170:
 2691              	.LBE1171:
 2692              	.LBE1172:
 2693              	.LBE1173:
 2694              	.LBE1174:
 2695              	.LBE1164:
 2696              	.LBE1176:
 2697              	.LBE1181:
1129:Veno-Echo.cpp **** 
 2698              		.loc 20 1129 1 view .LVU714
 2699 018a BDEC028B 		vldm	sp!, {d8}
 2700              		.cfi_remember_state
 2701              		.cfi_restore 80
 2702              		.cfi_restore 81
 2703              		.cfi_def_cfa_offset 8
 2704              	.LVL117:
1129:Veno-Echo.cpp **** 
 2705              		.loc 20 1129 1 view .LVU715
 2706 018e 10BD     		pop	{r4, pc}
 2707              	.LVL118:
 2708              	.L143:
 2709              		.cfi_restore_state
 2710              	.LBB1182:
 2711              	.LBB1177:
 2712              	.LBB1155:
 2713              	.LBB1139:
2016:Veno-Echo.cpp ****     }
 2714              		.loc 20 2016 16 view .LVU716
 2715 0190 DFED097A 		vldr.32	s15, .L145+28
 2716              	.LVL119:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 152


2016:Veno-Echo.cpp ****     }
 2717              		.loc 20 2016 16 view .LVU717
 2718 0194 68E7     		b	.L125
 2719              	.LVL120:
 2720              	.L144:
2016:Veno-Echo.cpp ****     }
 2721              		.loc 20 2016 16 view .LVU718
 2722              	.LBE1139:
 2723              	.LBE1155:
 2724              	.LBB1156:
 2725              	.LBB1153:
 2726 0196 DFED087A 		vldr.32	s15, .L145+28
 2727 019a BAE7     		b	.L123
 2728              	.L146:
 2729              		.align	2
 2730              	.L145:
 2731 019c 18000000 		.word	.LANCHOR4+24
 2732 01a0 00000000 		.word	.LANCHOR7
 2733 01a4 00000000 		.word	.LANCHOR28
 2734 01a8 00000000 		.word	.LANCHOR29
 2735 01ac 00000000 		.word	.LANCHOR30
 2736 01b0 00000000 		.word	.LANCHOR27
 2737 01b4 00000000 		.word	.LANCHOR31
 2738 01b8 00000000 		.word	0
 2739 01bc 00000000 		.word	.LANCHOR32
 2740 01c0 6F12033D 		.word	1023611503
 2741 01c4 00000000 		.word	.LANCHOR33
 2742 01c8 00000000 		.word	.LANCHOR34
 2743 01cc 0AD7A33B 		.word	1000593162
 2744 01d0 00004844 		.word	1145569280
 2745 01d4 0000C842 		.word	1120403456
 2746 01d8 00000000 		.word	.LANCHOR35
 2747 01dc 00000000 		.word	.LANCHOR36
 2748 01e0 00000000 		.word	.LANCHOR37
 2749 01e4 00000000 		.word	.LANCHOR38
 2750 01e8 00000000 		.word	.LANCHOR15
 2751 01ec 00000000 		.word	.LANCHOR16
 2752              	.LBE1153:
 2753              	.LBE1156:
 2754              	.LBE1177:
 2755              	.LBE1182:
 2756              		.cfi_endproc
 2757              	.LFE4317:
 2759              		.section	.text._Z19Update_feedbackR_CVv,"ax",%progbits
 2760              		.align	1
 2761              		.p2align 2,,3
 2762              		.global	_Z19Update_feedbackR_CVv
 2763              		.syntax unified
 2764              		.thumb
 2765              		.thumb_func
 2766              		.fpu fpv5-d16
 2768              	_Z19Update_feedbackR_CVv:
 2769              	.LFB4318:
1132:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 2770              		.loc 20 1132 1 is_stmt 1 view -0
 2771              		.cfi_startproc
 2772              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 153


 2773              		@ frame_needed = 0, uses_anonymous_args = 0
1133:Veno-Echo.cpp **** }
 2774              		.loc 20 1133 5 view .LVU720
1132:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 2775              		.loc 20 1132 1 is_stmt 0 view .LVU721
 2776 0000 08B5     		push	{r3, lr}
 2777              		.cfi_def_cfa_offset 8
 2778              		.cfi_offset 3, -8
 2779              		.cfi_offset 14, -4
1133:Veno-Echo.cpp **** }
 2780              		.loc 20 1133 35 view .LVU722
 2781 0002 0321     		movs	r1, #3
 2782 0004 0348     		ldr	r0, .L149
 2783 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2784              	.LVL121:
1133:Veno-Echo.cpp **** }
 2785              		.loc 20 1133 18 view .LVU723
 2786 000a 034B     		ldr	r3, .L149+4
 2787 000c 83ED000A 		vstr.32	s0, [r3]
1134:Veno-Echo.cpp **** 
 2788              		.loc 20 1134 1 view .LVU724
 2789 0010 08BD     		pop	{r3, pc}
 2790              	.L150:
 2791 0012 00BF     		.align	2
 2792              	.L149:
 2793 0014 18000000 		.word	.LANCHOR4+24
 2794 0018 00000000 		.word	.LANCHOR39
 2795              		.cfi_endproc
 2796              	.LFE4318:
 2798              		.section	.text._Z16Update_feedbackRv,"ax",%progbits
 2799              		.align	1
 2800              		.p2align 2,,3
 2801              		.global	_Z16Update_feedbackRv
 2802              		.syntax unified
 2803              		.thumb
 2804              		.thumb_func
 2805              		.fpu fpv5-d16
 2807              	_Z16Update_feedbackRv:
 2808              	.LFB4319:
1137:Veno-Echo.cpp ****     static bool lastShift{};
 2809              		.loc 20 1137 1 is_stmt 1 view -0
 2810              		.cfi_startproc
 2811              		@ args = 0, pretend = 0, frame = 0
 2812              		@ frame_needed = 0, uses_anonymous_args = 0
1138:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
 2813              		.loc 20 1138 5 view .LVU726
1139:Veno-Echo.cpp ****     static bool LPCutoff_pickup{};
 2814              		.loc 20 1139 5 view .LVU727
1140:Veno-Echo.cpp **** 
 2815              		.loc 20 1140 5 view .LVU728
1142:Veno-Echo.cpp **** 
 2816              		.loc 20 1142 5 view .LVU729
1145:Veno-Echo.cpp **** 
 2817              		.loc 20 1145 5 view .LVU730
1145:Veno-Echo.cpp **** 
 2818              		.loc 20 1145 43 is_stmt 0 view .LVU731
 2819 0000 0422     		movs	r2, #4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 154


 2820 0002 0721     		movs	r1, #7
 2821 0004 6848     		ldr	r0, .L181
1137:Veno-Echo.cpp ****     static bool lastShift{};
 2822              		.loc 20 1137 1 view .LVU732
 2823 0006 10B5     		push	{r4, lr}
 2824              		.cfi_def_cfa_offset 8
 2825              		.cfi_offset 4, -8
 2826              		.cfi_offset 14, -4
 2827 0008 2DED028B 		vpush.64	{d8}
 2828              		.cfi_def_cfa_offset 16
 2829              		.cfi_offset 80, -16
 2830              		.cfi_offset 81, -12
1145:Veno-Echo.cpp **** 
 2831              		.loc 20 1145 43 view .LVU733
 2832 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2833              	.LVL122:
 2834              	.LBB1183:
1147:Veno-Echo.cpp ****     {   
 2835              		.loc 20 1147 9 view .LVU734
 2836 0010 664B     		ldr	r3, .L181+4
 2837              	.LVL123:
1147:Veno-Echo.cpp ****     {   
 2838              		.loc 20 1147 9 view .LVU735
 2839              	.LBE1183:
1147:Veno-Echo.cpp ****     {   
 2840              		.loc 20 1147 5 is_stmt 1 view .LVU736
 2841              	.LBB1226:
 2842              	.LBB1184:
1151:Veno-Echo.cpp ****         {
 2843              		.loc 20 1151 19 is_stmt 0 view .LVU737
 2844 0012 674A     		ldr	r2, .L181+8
 2845              	.LBE1184:
1147:Veno-Echo.cpp ****     {   
 2846              		.loc 20 1147 5 view .LVU738
 2847 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2848 0016 002B     		cmp	r3, #0
 2849 0018 3FD1     		bne	.L152
 2850              	.LBB1205:
1149:Veno-Echo.cpp ****         //update pickup
 2851              		.loc 20 1149 9 is_stmt 1 view .LVU739
1151:Veno-Echo.cpp ****         {
 2852              		.loc 20 1151 9 view .LVU740
 2853 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2854 001c 0029     		cmp	r1, #0
 2855 001e 49D0     		beq	.L153
1153:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
 2856              		.loc 20 1153 13 view .LVU741
1154:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
 2857              		.loc 20 1154 30 is_stmt 0 view .LVU742
 2858 0020 644C     		ldr	r4, .L181+12
1155:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2859              		.loc 20 1155 28 view .LVU743
 2860 0022 6548     		ldr	r0, .L181+16
1156:Veno-Echo.cpp ****         } 
 2861              		.loc 20 1156 27 view .LVU744
 2862 0024 6549     		ldr	r1, .L181+20
1153:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 155


 2863              		.loc 20 1153 23 view .LVU745
 2864 0026 1370     		strb	r3, [r2]
1154:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
 2865              		.loc 20 1154 13 is_stmt 1 view .LVU746
1154:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
 2866              		.loc 20 1154 30 is_stmt 0 view .LVU747
 2867 0028 2370     		strb	r3, [r4]
1155:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2868              		.loc 20 1155 13 is_stmt 1 view .LVU748
1155:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2869              		.loc 20 1155 28 is_stmt 0 view .LVU749
 2870 002a 80ED000A 		vstr.32	s0, [r0]
1156:Veno-Echo.cpp ****         } 
 2871              		.loc 20 1156 13 is_stmt 1 view .LVU750
1156:Veno-Echo.cpp ****         } 
 2872              		.loc 20 1156 27 is_stmt 0 view .LVU751
 2873 002e 81ED000A 		vstr.32	s0, [r1]
 2874              	.LVL124:
 2875              	.L154:
1169:Veno-Echo.cpp ****         
 2876              		.loc 20 1169 9 is_stmt 1 view .LVU752
1171:Veno-Echo.cpp ****         {
 2877              		.loc 20 1171 9 view .LVU753
1179:Veno-Echo.cpp ****         }
 2878              		.loc 20 1179 13 view .LVU754
 2879              	.LBB1185:
 2880              	.LBI1185:
2009:Veno-Echo.cpp **** {
 2881              		.loc 20 2009 7 view .LVU755
 2882              	.LBB1186:
2011:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2883              		.loc 20 2011 5 view .LVU756
2012:Veno-Echo.cpp **** 
 2884              		.loc 20 2012 5 view .LVU757
 2885              	.LBE1186:
 2886              	.LBE1185:
1179:Veno-Echo.cpp ****         }
 2887              		.loc 20 1179 41 is_stmt 0 view .LVU758
 2888 0032 634B     		ldr	r3, .L181+24
 2889              	.LBB1189:
 2890              	.LBB1187:
2012:Veno-Echo.cpp **** 
 2891              		.loc 20 2012 39 view .LVU759
 2892 0034 B7EE007A 		vmov.f32	s14, #1.0e+0
2012:Veno-Echo.cpp **** 
 2893              		.loc 20 2012 49 view .LVU760
 2894 0038 B6EE006A 		vmov.f32	s12, #5.0e-1
2012:Veno-Echo.cpp **** 
 2895              		.loc 20 2012 39 view .LVU761
 2896 003c D3ED007A 		vldr.32	s15, [r3]
2012:Veno-Echo.cpp **** 
 2897              		.loc 20 2012 12 view .LVU762
 2898 0040 F0EE006A 		vmov.f32	s13, #2.0e+0
2012:Veno-Echo.cpp **** 
 2899              		.loc 20 2012 39 view .LVU763
 2900 0044 77EE677A 		vsub.f32	s15, s14, s15
2012:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 156


 2901              		.loc 20 2012 49 view .LVU764
 2902 0048 77EEC67A 		vsub.f32	s15, s15, s12
2012:Veno-Echo.cpp **** 
 2903              		.loc 20 2012 12 view .LVU765
 2904 004c A7EEA60A 		vfma.f32	s0, s15, s13
2014:Veno-Echo.cpp ****     {
 2905              		.loc 20 2014 5 view .LVU766
 2906 0050 B5EEC00A 		vcmpe.f32	s0, #0
2012:Veno-Echo.cpp **** 
 2907              		.loc 20 2012 12 view .LVU767
 2908 0054 F0EE407A 		vmov.f32	s15, s0
 2909              	.LVL125:
2014:Veno-Echo.cpp ****     {
 2910              		.loc 20 2014 5 is_stmt 1 view .LVU768
 2911 0058 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2912 005c 00F19A80 		bmi	.L179
2019:Veno-Echo.cpp ****     {
 2913              		.loc 20 2019 5 view .LVU769
2021:Veno-Echo.cpp ****     }
 2914              		.loc 20 2021 16 is_stmt 0 view .LVU770
 2915 0060 F4EE477A 		vcmp.f32	s15, s14
 2916 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2917 0068 77FE277A 		vselgt.f32	s15, s14, s15
 2918              	.LVL126:
 2919              	.L160:
2021:Veno-Echo.cpp ****     }
 2920              		.loc 20 2021 16 view .LVU771
 2921              	.LBE1187:
 2922              	.LBE1189:
1182:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2923              		.loc 20 1182 9 is_stmt 1 view .LVU772
1182:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2924              		.loc 20 1182 37 is_stmt 0 view .LVU773
 2925 006c B0EE670A 		vmov.f32	s0, s15
 2926 0070 0020     		movs	r0, #0
 2927 0072 B7EE041A 		vmov.f32	s2, #1.25e+0
 2928 0076 DFED530A 		vldr.32	s1, .L181+28
 2929 007a FFF7FEFF 		bl	_Z5scalefff9CurveType
 2930              	.LVL127:
1183:Veno-Echo.cpp ****     }
 2931              		.loc 20 1183 9 is_stmt 1 view .LVU774
 2932              	.LBB1190:
 2933              	.LBI1190:
 135:../DaisySP/Source/Utility/dsp.h **** {
 2934              		.loc 25 135 13 view .LVU775
 2935              	.LBB1191:
 2936              		.loc 25 137 5 view .LVU776
 2937              		.loc 25 137 9 is_stmt 0 view .LVU777
 2938 007e 524B     		ldr	r3, .L181+32
 2939 0080 9FED527A 		vldr.32	s14, .L181+36
 2940 0084 D3ED007A 		vldr.32	s15, [r3]
 2941              		.loc 25 137 24 view .LVU778
 2942 0088 30EE670A 		vsub.f32	s0, s0, s15
 2943              	.LVL128:
 2944              		.loc 25 137 24 view .LVU779
 2945              	.LBE1191:
 2946              	.LBE1190:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 157


 2947              	.LBE1205:
 2948              	.LBE1226:
1220:Veno-Echo.cpp **** 
 2949              		.loc 20 1220 1 view .LVU780
 2950 008c BDEC028B 		vldm	sp!, {d8}
 2951              		.cfi_remember_state
 2952              		.cfi_restore 80
 2953              		.cfi_restore 81
 2954              		.cfi_def_cfa_offset 8
 2955              	.LBB1227:
 2956              	.LBB1206:
 2957              	.LBB1193:
 2958              	.LBB1192:
 2959              		.loc 25 137 9 view .LVU781
 2960 0090 E0EE077A 		vfma.f32	s15, s0, s14
 2961 0094 C3ED007A 		vstr.32	s15, [r3]
 2962              	.LBE1192:
 2963              	.LBE1193:
 2964              	.LBE1206:
 2965              	.LBE1227:
1220:Veno-Echo.cpp **** 
 2966              		.loc 20 1220 1 view .LVU782
 2967 0098 10BD     		pop	{r4, pc}
 2968              	.LVL129:
 2969              	.L152:
 2970              		.cfi_restore_state
 2971              	.LBB1228:
 2972              	.LBB1207:
1188:Veno-Echo.cpp **** 
 2973              		.loc 20 1188 9 is_stmt 1 view .LVU783
1190:Veno-Echo.cpp ****         {
 2974              		.loc 20 1190 10 view .LVU784
 2975 009a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2976 009c 002B     		cmp	r3, #0
 2977 009e 3ED1     		bne	.L163
1192:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2978              		.loc 20 1192 13 view .LVU785
1192:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2979              		.loc 20 1192 23 is_stmt 0 view .LVU786
 2980 00a0 0124     		movs	r4, #1
1193:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2981              		.loc 20 1193 29 view .LVU787
 2982 00a2 4B48     		ldr	r0, .L181+40
1194:Veno-Echo.cpp ****         }
 2983              		.loc 20 1194 26 view .LVU788
 2984 00a4 4B49     		ldr	r1, .L181+44
1192:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2985              		.loc 20 1192 23 view .LVU789
 2986 00a6 1470     		strb	r4, [r2]
1193:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2987              		.loc 20 1193 13 is_stmt 1 view .LVU790
1193:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2988              		.loc 20 1193 29 is_stmt 0 view .LVU791
 2989 00a8 0370     		strb	r3, [r0]
1194:Veno-Echo.cpp ****         }
 2990              		.loc 20 1194 13 is_stmt 1 view .LVU792
1194:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 158


 2991              		.loc 20 1194 26 is_stmt 0 view .LVU793
 2992 00aa 81ED000A 		vstr.32	s0, [r1]
 2993              	.L151:
1194:Veno-Echo.cpp ****         }
 2994              		.loc 20 1194 26 view .LVU794
 2995              	.LBE1207:
 2996              	.LBE1228:
1220:Veno-Echo.cpp **** 
 2997              		.loc 20 1220 1 view .LVU795
 2998 00ae BDEC028B 		vldm	sp!, {d8}
 2999              		.cfi_remember_state
 3000              		.cfi_restore 80
 3001              		.cfi_restore 81
 3002              		.cfi_def_cfa_offset 8
 3003 00b2 10BD     		pop	{r4, pc}
 3004              	.L153:
 3005              		.cfi_restore_state
 3006              	.LBB1229:
 3007              	.LBB1223:
1160:Veno-Echo.cpp ****             {
 3008              		.loc 20 1160 13 is_stmt 1 view .LVU796
1160:Veno-Echo.cpp ****             {
 3009              		.loc 20 1160 16 is_stmt 0 view .LVU797
 3010 00b4 3F4B     		ldr	r3, .L181+12
1160:Veno-Echo.cpp ****             {
 3011              		.loc 20 1160 13 view .LVU798
 3012 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3013 00b8 7AB9     		cbnz	r2, .L155
1162:Veno-Echo.cpp ****                 {
 3014              		.loc 20 1162 17 is_stmt 1 view .LVU799
 3015              	.LVL130:
 3016              	.LBB1194:
 3017              	.LBI1194:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3018              		.loc 21 75 3 view .LVU800
 3019              	.LBB1195:
 3020              		.loc 21 76 5 view .LVU801
 3021              		.loc 21 76 5 is_stmt 0 view .LVU802
 3022              	.LBE1195:
 3023              	.LBE1194:
1162:Veno-Echo.cpp ****                 {
 3024              		.loc 20 1162 23 view .LVU803
 3025 00ba 404A     		ldr	r2, .L181+20
1162:Veno-Echo.cpp ****                 {
 3026              		.loc 20 1162 17 view .LVU804
 3027 00bc 9FED467A 		vldr.32	s14, .L181+48
1162:Veno-Echo.cpp ****                 {
 3028              		.loc 20 1162 23 view .LVU805
 3029 00c0 D2ED007A 		vldr.32	s15, [r2]
 3030 00c4 70EE677A 		vsub.f32	s15, s0, s15
 3031              	.LBB1197:
 3032              	.LBB1196:
 3033              		.loc 21 76 31 view .LVU806
 3034 00c8 F0EEE77A 		vabs.f32	s15, s15
 3035              	.LBE1196:
 3036              	.LBE1197:
1162:Veno-Echo.cpp ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 159


 3037              		.loc 20 1162 17 view .LVU807
 3038 00cc F4EEC77A 		vcmpe.f32	s15, s14
 3039 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3040 00d4 64DD     		ble	.L175
1164:Veno-Echo.cpp ****                 }
 3041              		.loc 20 1164 21 is_stmt 1 view .LVU808
1164:Veno-Echo.cpp ****                 }
 3042              		.loc 20 1164 38 is_stmt 0 view .LVU809
 3043 00d6 0122     		movs	r2, #1
 3044 00d8 1A70     		strb	r2, [r3]
 3045              	.L155:
1169:Veno-Echo.cpp ****         
 3046              		.loc 20 1169 9 is_stmt 1 view .LVU810
 3047              	.LVL131:
1171:Veno-Echo.cpp ****         {
 3048              		.loc 20 1171 9 view .LVU811
1173:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
 3049              		.loc 20 1173 13 view .LVU812
 3050              	.LBB1198:
 3051              	.LBI1198:
2009:Veno-Echo.cpp **** {
 3052              		.loc 20 2009 7 view .LVU813
 3053              	.LBB1199:
2011:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3054              		.loc 20 2011 5 view .LVU814
2012:Veno-Echo.cpp **** 
 3055              		.loc 20 2012 5 view .LVU815
 3056              	.LBE1199:
 3057              	.LBE1198:
1173:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
 3058              		.loc 20 1173 41 is_stmt 0 view .LVU816
 3059 00da 394B     		ldr	r3, .L181+24
 3060              	.LBB1202:
 3061              	.LBB1200:
2012:Veno-Echo.cpp **** 
 3062              		.loc 20 2012 39 view .LVU817
 3063 00dc B7EE007A 		vmov.f32	s14, #1.0e+0
2012:Veno-Echo.cpp **** 
 3064              		.loc 20 2012 49 view .LVU818
 3065 00e0 B6EE006A 		vmov.f32	s12, #5.0e-1
2012:Veno-Echo.cpp **** 
 3066              		.loc 20 2012 39 view .LVU819
 3067 00e4 D3ED007A 		vldr.32	s15, [r3]
2012:Veno-Echo.cpp **** 
 3068              		.loc 20 2012 12 view .LVU820
 3069 00e8 F0EE006A 		vmov.f32	s13, #2.0e+0
2012:Veno-Echo.cpp **** 
 3070              		.loc 20 2012 39 view .LVU821
 3071 00ec 77EE677A 		vsub.f32	s15, s14, s15
2012:Veno-Echo.cpp **** 
 3072              		.loc 20 2012 49 view .LVU822
 3073 00f0 77EEC67A 		vsub.f32	s15, s15, s12
2012:Veno-Echo.cpp **** 
 3074              		.loc 20 2012 12 view .LVU823
 3075 00f4 B0EE406A 		vmov.f32	s12, s0
 3076 00f8 A7EEA66A 		vfma.f32	s12, s15, s13
2014:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 160


 3077              		.loc 20 2014 5 view .LVU824
 3078 00fc B5EEC06A 		vcmpe.f32	s12, #0
2012:Veno-Echo.cpp **** 
 3079              		.loc 20 2012 12 view .LVU825
 3080 0100 F0EE467A 		vmov.f32	s15, s12
 3081              	.LVL132:
2014:Veno-Echo.cpp ****     {
 3082              		.loc 20 2014 5 is_stmt 1 view .LVU826
 3083 0104 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3084 0108 47D4     		bmi	.L180
2019:Veno-Echo.cpp ****     {
 3085              		.loc 20 2019 5 view .LVU827
2021:Veno-Echo.cpp ****     }
 3086              		.loc 20 2021 16 is_stmt 0 view .LVU828
 3087 010a F4EE477A 		vcmp.f32	s15, s14
 3088 010e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3089 0112 77FE277A 		vselgt.f32	s15, s14, s15
 3090              	.L158:
 3091              	.LVL133:
2024:Veno-Echo.cpp **** }
 3092              		.loc 20 2024 5 is_stmt 1 view .LVU829
2024:Veno-Echo.cpp **** }
 3093              		.loc 20 2024 5 is_stmt 0 view .LVU830
 3094              	.LBE1200:
 3095              	.LBE1202:
1174:Veno-Echo.cpp ****         }
 3096              		.loc 20 1174 13 is_stmt 1 view .LVU831
1174:Veno-Echo.cpp ****         }
 3097              		.loc 20 1174 28 is_stmt 0 view .LVU832
 3098 0116 284B     		ldr	r3, .L181+16
 3099 0118 83ED000A 		vstr.32	s0, [r3]
 3100 011c A6E7     		b	.L160
 3101              	.LVL134:
 3102              	.L163:
1174:Veno-Echo.cpp ****         }
 3103              		.loc 20 1174 28 view .LVU833
 3104              	.LBE1223:
 3105              	.LBB1224:
1199:Veno-Echo.cpp ****             {
 3106              		.loc 20 1199 13 is_stmt 1 view .LVU834
1199:Veno-Echo.cpp ****             {
 3107              		.loc 20 1199 16 is_stmt 0 view .LVU835
 3108 011e 2C4B     		ldr	r3, .L181+40
1199:Veno-Echo.cpp ****             {
 3109              		.loc 20 1199 13 view .LVU836
 3110 0120 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3111 0122 7AB9     		cbnz	r2, .L165
1201:Veno-Echo.cpp ****                 {
 3112              		.loc 20 1201 17 is_stmt 1 view .LVU837
 3113              	.LVL135:
 3114              	.LBB1208:
 3115              	.LBI1208:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3116              		.loc 21 75 3 view .LVU838
 3117              	.LBB1209:
 3118              		.loc 21 76 5 view .LVU839
 3119              		.loc 21 76 5 is_stmt 0 view .LVU840
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 161


 3120              	.LBE1209:
 3121              	.LBE1208:
1201:Veno-Echo.cpp ****                 {
 3122              		.loc 20 1201 23 view .LVU841
 3123 0124 2B4A     		ldr	r2, .L181+44
1201:Veno-Echo.cpp ****                 {
 3124              		.loc 20 1201 17 view .LVU842
 3125 0126 9FED2C7A 		vldr.32	s14, .L181+48
1201:Veno-Echo.cpp ****                 {
 3126              		.loc 20 1201 23 view .LVU843
 3127 012a D2ED007A 		vldr.32	s15, [r2]
 3128 012e 70EE677A 		vsub.f32	s15, s0, s15
 3129              	.LBB1211:
 3130              	.LBB1210:
 3131              		.loc 21 76 31 view .LVU844
 3132 0132 F0EEE77A 		vabs.f32	s15, s15
 3133              	.LBE1210:
 3134              	.LBE1211:
1201:Veno-Echo.cpp ****                 {
 3135              		.loc 20 1201 17 view .LVU845
 3136 0136 F4EEC77A 		vcmpe.f32	s15, s14
 3137 013a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3138 013e B6DD     		ble	.L151
1203:Veno-Echo.cpp ****                 }
 3139              		.loc 20 1203 21 is_stmt 1 view .LVU846
1203:Veno-Echo.cpp ****                 }
 3140              		.loc 20 1203 37 is_stmt 0 view .LVU847
 3141 0140 0122     		movs	r2, #1
 3142 0142 1A70     		strb	r2, [r3]
 3143              	.L165:
1208:Veno-Echo.cpp ****         {
 3144              		.loc 20 1208 9 is_stmt 1 view .LVU848
 3145              	.LBB1212:
1210:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
 3146              		.loc 20 1210 13 view .LVU849
 3147              	.LVL136:
1211:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3148              		.loc 20 1211 13 view .LVU850
1211:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3149              		.loc 20 1211 29 is_stmt 0 view .LVU851
 3150 0144 9FED251A 		vldr.32	s2, .L181+52
 3151 0148 0120     		movs	r0, #1
 3152 014a DFED250A 		vldr.32	s1, .L181+56
 3153 014e FFF7FEFF 		bl	_Z5scalefff9CurveType
 3154              	.LVL137:
1211:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3155              		.loc 20 1211 29 view .LVU852
 3156 0152 B0EE408A 		vmov.f32	s16, s0
 3157              	.LVL138:
1212:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 3158              		.loc 20 1212 13 is_stmt 1 view .LVU853
1212:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 3159              		.loc 20 1212 26 is_stmt 0 view .LVU854
 3160 0156 2348     		ldr	r0, .L181+60
 3161 0158 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3162              	.LVL139:
1213:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 162


 3163              		.loc 20 1213 13 is_stmt 1 view .LVU855
1213:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 3164              		.loc 20 1213 26 is_stmt 0 view .LVU856
 3165 015c 2248     		ldr	r0, .L181+64
 3166 015e B0EE480A 		vmov.f32	s0, s16
 3167 0162 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3168              	.LVL140:
1214:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 3169              		.loc 20 1214 13 is_stmt 1 view .LVU857
1214:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 3170              		.loc 20 1214 31 is_stmt 0 view .LVU858
 3171 0166 B0EE480A 		vmov.f32	s0, s16
 3172 016a 2048     		ldr	r0, .L181+68
 3173 016c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3174              	.LVL141:
1215:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 3175              		.loc 20 1215 13 is_stmt 1 view .LVU859
1215:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 3176              		.loc 20 1215 31 is_stmt 0 view .LVU860
 3177 0170 B0EE480A 		vmov.f32	s0, s16
 3178 0174 1E48     		ldr	r0, .L181+72
 3179 0176 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3180              	.LVL142:
1216:Veno-Echo.cpp ****             save_flag = true;
 3181              		.loc 20 1216 13 is_stmt 1 view .LVU861
1216:Veno-Echo.cpp ****             save_flag = true;
 3182              		.loc 20 1216 35 is_stmt 0 view .LVU862
 3183 017a 1E49     		ldr	r1, .L181+76
 3184              	.LBB1213:
 3185              	.LBB1214:
 3186              	.LBB1215:
 3187              	.LBB1216:
 3188              	.LBB1217:
 3189              		.loc 22 397 18 view .LVU863
 3190 017c 1E4B     		ldr	r3, .L181+80
 3191 017e 0122     		movs	r2, #1
 3192              	.LBE1217:
 3193              	.LBE1216:
 3194              	.LBE1215:
 3195              	.LBE1214:
 3196              	.LBE1213:
1216:Veno-Echo.cpp ****             save_flag = true;
 3197              		.loc 20 1216 35 view .LVU864
 3198 0180 81ED058A 		vstr.32	s16, [r1, #20]
1217:Veno-Echo.cpp ****         }
 3199              		.loc 20 1217 13 is_stmt 1 view .LVU865
 3200              	.LVL143:
 3201              	.LBB1222:
 3202              	.LBI1213:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 3203              		.loc 23 80 5 view .LVU866
 3204              	.LBB1221:
 3205              		.loc 23 81 7 view .LVU867
 3206              	.LBB1220:
 3207              	.LBI1215:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 3208              		.loc 22 288 7 view .LVU868
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 163


 3209              	.LBB1219:
 3210              	.LBI1216:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 3211              		.loc 22 390 7 view .LVU869
 3212              	.LBB1218:
 3213              		.loc 22 397 18 is_stmt 0 view .LVU870
 3214 0184 BFF35B8F 		dmb	ish
 3215 0188 1A70     		strb	r2, [r3]
 3216 018a BFF35B8F 		dmb	ish
 3217              	.LVL144:
 3218              		.loc 22 397 18 view .LVU871
 3219              	.LBE1218:
 3220              	.LBE1219:
 3221              	.LBE1220:
 3222              	.LBE1221:
 3223              	.LBE1222:
 3224              	.LBE1212:
 3225              	.LBE1224:
 3226              	.LBE1229:
1220:Veno-Echo.cpp **** 
 3227              		.loc 20 1220 1 view .LVU872
 3228 018e BDEC028B 		vldm	sp!, {d8}
 3229              		.cfi_remember_state
 3230              		.cfi_restore 80
 3231              		.cfi_restore 81
 3232              		.cfi_def_cfa_offset 8
 3233              	.LVL145:
1220:Veno-Echo.cpp **** 
 3234              		.loc 20 1220 1 view .LVU873
 3235 0192 10BD     		pop	{r4, pc}
 3236              	.LVL146:
 3237              	.L179:
 3238              		.cfi_restore_state
 3239              	.LBB1230:
 3240              	.LBB1225:
 3241              	.LBB1203:
 3242              	.LBB1188:
2016:Veno-Echo.cpp ****     }
 3243              		.loc 20 2016 16 view .LVU874
 3244 0194 DFED0B7A 		vldr.32	s15, .L181+28
 3245 0198 68E7     		b	.L160
 3246              	.LVL147:
 3247              	.L180:
2016:Veno-Echo.cpp ****     }
 3248              		.loc 20 2016 16 view .LVU875
 3249              	.LBE1188:
 3250              	.LBE1203:
 3251              	.LBB1204:
 3252              	.LBB1201:
 3253 019a DFED0A7A 		vldr.32	s15, .L181+28
 3254 019e BAE7     		b	.L158
 3255              	.LVL148:
 3256              	.L175:
2016:Veno-Echo.cpp ****     }
 3257              		.loc 20 2016 16 view .LVU876
 3258 01a0 054B     		ldr	r3, .L181+16
 3259 01a2 93ED000A 		vldr.32	s0, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 164


 3260              	.LVL149:
2016:Veno-Echo.cpp ****     }
 3261              		.loc 20 2016 16 view .LVU877
 3262 01a6 44E7     		b	.L154
 3263              	.L182:
 3264              		.align	2
 3265              	.L181:
 3266 01a8 18000000 		.word	.LANCHOR4+24
 3267 01ac 00000000 		.word	.LANCHOR7
 3268 01b0 00000000 		.word	.LANCHOR40
 3269 01b4 00000000 		.word	.LANCHOR41
 3270 01b8 00000000 		.word	.LANCHOR42
 3271 01bc 00000000 		.word	.LANCHOR43
 3272 01c0 00000000 		.word	.LANCHOR39
 3273 01c4 00000000 		.word	0
 3274 01c8 00000000 		.word	.LANCHOR44
 3275 01cc 6F12033D 		.word	1023611503
 3276 01d0 00000000 		.word	.LANCHOR45
 3277 01d4 00000000 		.word	.LANCHOR46
 3278 01d8 0AD7A33B 		.word	1000593162
 3279 01dc 00803B46 		.word	1178304512
 3280 01e0 0080BB44 		.word	1153138688
 3281 01e4 00000000 		.word	.LANCHOR47
 3282 01e8 00000000 		.word	.LANCHOR48
 3283 01ec 00000000 		.word	.LANCHOR49
 3284 01f0 00000000 		.word	.LANCHOR50
 3285 01f4 00000000 		.word	.LANCHOR15
 3286 01f8 00000000 		.word	.LANCHOR16
 3287              	.LBE1201:
 3288              	.LBE1204:
 3289              	.LBE1225:
 3290              	.LBE1230:
 3291              		.cfi_endproc
 3292              	.LFE4319:
 3294              		.section	.text._Z16Update_drywet_CVv,"ax",%progbits
 3295              		.align	1
 3296              		.p2align 2,,3
 3297              		.global	_Z16Update_drywet_CVv
 3298              		.syntax unified
 3299              		.thumb
 3300              		.thumb_func
 3301              		.fpu fpv5-d16
 3303              	_Z16Update_drywet_CVv:
 3304              	.LFB4320:
1223:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 3305              		.loc 20 1223 1 is_stmt 1 view -0
 3306              		.cfi_startproc
 3307              		@ args = 0, pretend = 0, frame = 0
 3308              		@ frame_needed = 0, uses_anonymous_args = 0
1224:Veno-Echo.cpp **** }
 3309              		.loc 20 1224 5 view .LVU879
1223:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 3310              		.loc 20 1223 1 is_stmt 0 view .LVU880
 3311 0000 08B5     		push	{r3, lr}
 3312              		.cfi_def_cfa_offset 8
 3313              		.cfi_offset 3, -8
 3314              		.cfi_offset 14, -4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 165


1224:Veno-Echo.cpp **** }
 3315              		.loc 20 1224 32 view .LVU881
 3316 0002 0421     		movs	r1, #4
 3317 0004 0348     		ldr	r0, .L185
 3318 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3319              	.LVL150:
1224:Veno-Echo.cpp **** }
 3320              		.loc 20 1224 15 view .LVU882
 3321 000a 034B     		ldr	r3, .L185+4
 3322 000c 83ED000A 		vstr.32	s0, [r3]
1225:Veno-Echo.cpp **** 
 3323              		.loc 20 1225 1 view .LVU883
 3324 0010 08BD     		pop	{r3, pc}
 3325              	.L186:
 3326 0012 00BF     		.align	2
 3327              	.L185:
 3328 0014 18000000 		.word	.LANCHOR4+24
 3329 0018 00000000 		.word	.LANCHOR51
 3330              		.cfi_endproc
 3331              	.LFE4320:
 3333              		.section	.text._Z13Update_drywetv,"ax",%progbits
 3334              		.align	1
 3335              		.p2align 2,,3
 3336              		.global	_Z13Update_drywetv
 3337              		.syntax unified
 3338              		.thumb
 3339              		.thumb_func
 3340              		.fpu fpv5-d16
 3342              	_Z13Update_drywetv:
 3343              	.LFB4321:
1228:Veno-Echo.cpp ****     static bool lastShift{};
 3344              		.loc 20 1228 1 is_stmt 1 view -0
 3345              		.cfi_startproc
 3346              		@ args = 0, pretend = 0, frame = 0
 3347              		@ frame_needed = 0, uses_anonymous_args = 0
1229:Veno-Echo.cpp ****     static bool drywet_pickup{};
 3348              		.loc 20 1229 5 view .LVU885
1230:Veno-Echo.cpp ****     static bool Res_pickup{};
 3349              		.loc 20 1230 5 view .LVU886
1231:Veno-Echo.cpp **** 
 3350              		.loc 20 1231 5 view .LVU887
1233:Veno-Echo.cpp ****     //static float Res_Last{}; //last res value (unscaled)
 3351              		.loc 20 1233 5 view .LVU888
1238:Veno-Echo.cpp **** 
 3352              		.loc 20 1238 5 view .LVU889
1238:Veno-Echo.cpp **** 
 3353              		.loc 20 1238 40 is_stmt 0 view .LVU890
 3354 0000 0522     		movs	r2, #5
 3355 0002 0721     		movs	r1, #7
 3356 0004 8248     		ldr	r0, .L220+24
1228:Veno-Echo.cpp ****     static bool lastShift{};
 3357              		.loc 20 1228 1 view .LVU891
 3358 0006 10B5     		push	{r4, lr}
 3359              		.cfi_def_cfa_offset 8
 3360              		.cfi_offset 4, -8
 3361              		.cfi_offset 14, -4
 3362 0008 2DED028B 		vpush.64	{d8}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 166


 3363              		.cfi_def_cfa_offset 16
 3364              		.cfi_offset 80, -16
 3365              		.cfi_offset 81, -12
1238:Veno-Echo.cpp **** 
 3366              		.loc 20 1238 40 view .LVU892
 3367 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3368              	.LVL151:
 3369              	.LBB1231:
1240:Veno-Echo.cpp ****     {   
 3370              		.loc 20 1240 9 view .LVU893
 3371 0010 804B     		ldr	r3, .L220+28
 3372              	.LVL152:
1240:Veno-Echo.cpp ****     {   
 3373              		.loc 20 1240 9 view .LVU894
 3374              	.LBE1231:
1240:Veno-Echo.cpp ****     {   
 3375              		.loc 20 1240 5 is_stmt 1 view .LVU895
 3376              	.LBB1274:
 3377              	.LBB1232:
1245:Veno-Echo.cpp ****         {
 3378              		.loc 20 1245 19 is_stmt 0 view .LVU896
 3379 0012 814A     		ldr	r2, .L220+32
 3380              	.LBE1232:
1240:Veno-Echo.cpp ****     {   
 3381              		.loc 20 1240 5 view .LVU897
 3382 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3383 0016 B3BB     		cbnz	r3, .L188
 3384              	.LBB1253:
1243:Veno-Echo.cpp **** 
 3385              		.loc 20 1243 9 is_stmt 1 view .LVU898
1245:Veno-Echo.cpp ****         {
 3386              		.loc 20 1245 9 view .LVU899
 3387 0018 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3388 001a 0029     		cmp	r1, #0
 3389 001c 40D0     		beq	.L189
1247:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 3390              		.loc 20 1247 13 view .LVU900
1249:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3391              		.loc 20 1249 27 is_stmt 0 view .LVU901
 3392 001e 7F48     		ldr	r0, .L220+36
1250:Veno-Echo.cpp ****         } 
 3393              		.loc 20 1250 24 view .LVU902
 3394 0020 7F49     		ldr	r1, .L220+40
1247:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 3395              		.loc 20 1247 23 view .LVU903
 3396 0022 1370     		strb	r3, [r2]
1249:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3397              		.loc 20 1249 13 is_stmt 1 view .LVU904
1249:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3398              		.loc 20 1249 27 is_stmt 0 view .LVU905
 3399 0024 0370     		strb	r3, [r0]
1250:Veno-Echo.cpp ****         } 
 3400              		.loc 20 1250 13 is_stmt 1 view .LVU906
1250:Veno-Echo.cpp ****         } 
 3401              		.loc 20 1250 24 is_stmt 0 view .LVU907
 3402 0026 81ED000A 		vstr.32	s0, [r1]
 3403              	.L190:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 167


1266:Veno-Echo.cpp **** 
 3404              		.loc 20 1266 9 is_stmt 1 view .LVU908
 3405              	.LVL153:
1268:Veno-Echo.cpp ****         {
 3406              		.loc 20 1268 9 view .LVU909
1276:Veno-Echo.cpp ****         }
 3407              		.loc 20 1276 13 view .LVU910
 3408              	.LBB1233:
 3409              	.LBI1233:
2009:Veno-Echo.cpp **** {
 3410              		.loc 20 2009 7 view .LVU911
 3411              	.LBB1234:
2011:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3412              		.loc 20 2011 5 view .LVU912
2012:Veno-Echo.cpp **** 
 3413              		.loc 20 2012 5 view .LVU913
 3414              	.LBE1234:
 3415              	.LBE1233:
1276:Veno-Echo.cpp ****         }
 3416              		.loc 20 1276 37 is_stmt 0 view .LVU914
 3417 002a 7E4A     		ldr	r2, .L220+44
 3418              	.LBB1237:
 3419              	.LBB1235:
2012:Veno-Echo.cpp **** 
 3420              		.loc 20 2012 39 view .LVU915
 3421 002c F7EE006A 		vmov.f32	s13, #1.0e+0
2012:Veno-Echo.cpp **** 
 3422              		.loc 20 2012 49 view .LVU916
 3423 0030 F6EE005A 		vmov.f32	s11, #5.0e-1
 3424              	.LBE1235:
 3425              	.LBE1237:
1276:Veno-Echo.cpp ****         }
 3426              		.loc 20 1276 37 view .LVU917
 3427 0034 7C4B     		ldr	r3, .L220+48
 3428              	.LBB1238:
 3429              	.LBB1236:
2012:Veno-Echo.cpp **** 
 3430              		.loc 20 2012 39 view .LVU918
 3431 0036 92ED007A 		vldr.32	s14, [r2]
2012:Veno-Echo.cpp **** 
 3432              		.loc 20 2012 12 view .LVU919
 3433 003a B0EE006A 		vmov.f32	s12, #2.0e+0
 3434 003e D3ED007A 		vldr.32	s15, [r3]
2012:Veno-Echo.cpp **** 
 3435              		.loc 20 2012 39 view .LVU920
 3436 0042 36EEC77A 		vsub.f32	s14, s13, s14
2012:Veno-Echo.cpp **** 
 3437              		.loc 20 2012 49 view .LVU921
 3438 0046 37EE657A 		vsub.f32	s14, s14, s11
2012:Veno-Echo.cpp **** 
 3439              		.loc 20 2012 12 view .LVU922
 3440 004a E7EE067A 		vfma.f32	s15, s14, s12
 3441              	.LVL154:
2014:Veno-Echo.cpp ****     {
 3442              		.loc 20 2014 5 is_stmt 1 view .LVU923
 3443 004e F5EEC07A 		vcmpe.f32	s15, #0
 3444 0052 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 168


 3445 0056 00F1C180 		bmi	.L207
2019:Veno-Echo.cpp ****     {
 3446              		.loc 20 2019 5 view .LVU924
 3447 005a F4EEE67A 		vcmpe.f32	s15, s13
 3448 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3449 0062 40F3C680 		ble	.L213
 3450              	.LVL155:
 3451              	.L198:
2019:Veno-Echo.cpp ****     {
 3452              		.loc 20 2019 5 is_stmt 0 view .LVU925
 3453              	.LBE1236:
 3454              	.LBE1238:
1283:Veno-Echo.cpp ****         }
 3455              		.loc 20 1283 26 view .LVU926
 3456 0066 B7EE000A 		vmov.f32	s0, #1.0e+0
 3457              	.LVL156:
 3458              	.L197:
1295:Veno-Echo.cpp ****     }
 3459              		.loc 20 1295 9 is_stmt 1 view .LVU927
 3460              	.LBB1239:
 3461              	.LBI1239:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3462              		.loc 25 135 13 view .LVU928
 3463              	.LBB1240:
 3464              		.loc 25 137 5 view .LVU929
 3465              		.loc 25 137 9 is_stmt 0 view .LVU930
 3466 006a 704B     		ldr	r3, .L220+52
 3467 006c 9FED707A 		vldr.32	s14, .L220+56
 3468 0070 D3ED007A 		vldr.32	s15, [r3]
 3469              		.loc 25 137 24 view .LVU931
 3470 0074 30EE670A 		vsub.f32	s0, s0, s15
 3471              	.LVL157:
 3472              		.loc 25 137 24 view .LVU932
 3473              	.LBE1240:
 3474              	.LBE1239:
 3475              	.LBE1253:
 3476              	.LBE1274:
1335:Veno-Echo.cpp **** 
 3477              		.loc 20 1335 1 view .LVU933
 3478 0078 BDEC028B 		vldm	sp!, {d8}
 3479              		.cfi_remember_state
 3480              		.cfi_restore 80
 3481              		.cfi_restore 81
 3482              		.cfi_def_cfa_offset 8
 3483              	.LBB1275:
 3484              	.LBB1254:
 3485              	.LBB1242:
 3486              	.LBB1241:
 3487              		.loc 25 137 9 view .LVU934
 3488 007c E0EE077A 		vfma.f32	s15, s0, s14
 3489 0080 C3ED007A 		vstr.32	s15, [r3]
 3490              	.LBE1241:
 3491              	.LBE1242:
 3492              	.LBE1254:
 3493              	.LBE1275:
1335:Veno-Echo.cpp **** 
 3494              		.loc 20 1335 1 view .LVU935
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 169


 3495 0084 10BD     		pop	{r4, pc}
 3496              	.LVL158:
 3497              	.L188:
 3498              		.cfi_restore_state
 3499              	.LBB1276:
 3500              	.LBB1255:
1299:Veno-Echo.cpp **** 
 3501              		.loc 20 1299 9 is_stmt 1 view .LVU936
1301:Veno-Echo.cpp ****         {
 3502              		.loc 20 1301 9 view .LVU937
 3503 0086 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3504 0088 002B     		cmp	r3, #0
 3505 008a 58D1     		bne	.L202
1303:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3506              		.loc 20 1303 13 view .LVU938
1303:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3507              		.loc 20 1303 23 is_stmt 0 view .LVU939
 3508 008c 0124     		movs	r4, #1
1304:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3509              		.loc 20 1304 24 view .LVU940
 3510 008e 6948     		ldr	r0, .L220+60
1305:Veno-Echo.cpp ****         }
 3511              		.loc 20 1305 21 view .LVU941
 3512 0090 6949     		ldr	r1, .L220+64
1303:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3513              		.loc 20 1303 23 view .LVU942
 3514 0092 1470     		strb	r4, [r2]
1304:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3515              		.loc 20 1304 13 is_stmt 1 view .LVU943
1304:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3516              		.loc 20 1304 24 is_stmt 0 view .LVU944
 3517 0094 0370     		strb	r3, [r0]
1305:Veno-Echo.cpp ****         }
 3518              		.loc 20 1305 13 is_stmt 1 view .LVU945
1305:Veno-Echo.cpp ****         }
 3519              		.loc 20 1305 21 is_stmt 0 view .LVU946
 3520 0096 81ED000A 		vstr.32	s0, [r1]
 3521              	.L187:
1305:Veno-Echo.cpp ****         }
 3522              		.loc 20 1305 21 view .LVU947
 3523              	.LBE1255:
 3524              	.LBE1276:
1335:Veno-Echo.cpp **** 
 3525              		.loc 20 1335 1 view .LVU948
 3526 009a BDEC028B 		vldm	sp!, {d8}
 3527              		.cfi_remember_state
 3528              		.cfi_restore 80
 3529              		.cfi_restore 81
 3530              		.cfi_def_cfa_offset 8
 3531 009e 10BD     		pop	{r4, pc}
 3532              	.L189:
 3533              		.cfi_restore_state
 3534              	.LBB1277:
 3535              	.LBB1271:
1255:Veno-Echo.cpp ****             {
 3536              		.loc 20 1255 13 is_stmt 1 view .LVU949
1255:Veno-Echo.cpp ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 170


 3537              		.loc 20 1255 16 is_stmt 0 view .LVU950
 3538 00a0 5E4B     		ldr	r3, .L220+36
1255:Veno-Echo.cpp ****             {
 3539              		.loc 20 1255 13 view .LVU951
 3540 00a2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3541 00a4 7AB9     		cbnz	r2, .L191
1258:Veno-Echo.cpp ****                 {
 3542              		.loc 20 1258 17 is_stmt 1 view .LVU952
 3543              	.LVL159:
 3544              	.LBB1243:
 3545              	.LBI1243:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3546              		.loc 21 75 3 view .LVU953
 3547              	.LBB1244:
 3548              		.loc 21 76 5 view .LVU954
 3549              		.loc 21 76 5 is_stmt 0 view .LVU955
 3550              	.LBE1244:
 3551              	.LBE1243:
1258:Veno-Echo.cpp ****                 {
 3552              		.loc 20 1258 23 view .LVU956
 3553 00a6 5E4A     		ldr	r2, .L220+40
1258:Veno-Echo.cpp ****                 {
 3554              		.loc 20 1258 17 view .LVU957
 3555 00a8 9FED647A 		vldr.32	s14, .L220+68
1258:Veno-Echo.cpp ****                 {
 3556              		.loc 20 1258 23 view .LVU958
 3557 00ac D2ED007A 		vldr.32	s15, [r2]
 3558 00b0 70EE677A 		vsub.f32	s15, s0, s15
 3559              	.LBB1246:
 3560              	.LBB1245:
 3561              		.loc 21 76 31 view .LVU959
 3562 00b4 F0EEE77A 		vabs.f32	s15, s15
 3563              	.LBE1245:
 3564              	.LBE1246:
1258:Veno-Echo.cpp ****                 {
 3565              		.loc 20 1258 17 view .LVU960
 3566 00b8 F4EEC77A 		vcmpe.f32	s15, s14
 3567 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3568 00c0 B3DD     		ble	.L190
1260:Veno-Echo.cpp ****                 }
 3569              		.loc 20 1260 21 is_stmt 1 view .LVU961
1260:Veno-Echo.cpp ****                 }
 3570              		.loc 20 1260 35 is_stmt 0 view .LVU962
 3571 00c2 0122     		movs	r2, #1
 3572 00c4 1A70     		strb	r2, [r3]
 3573              	.L191:
1266:Veno-Echo.cpp **** 
 3574              		.loc 20 1266 9 is_stmt 1 view .LVU963
 3575              	.LVL160:
1268:Veno-Echo.cpp ****         {
 3576              		.loc 20 1268 9 view .LVU964
1270:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 3577              		.loc 20 1270 13 view .LVU965
 3578              	.LBB1247:
 3579              	.LBI1247:
2009:Veno-Echo.cpp **** {
 3580              		.loc 20 2009 7 view .LVU966
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 171


 3581              	.LBB1248:
2011:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3582              		.loc 20 2011 5 view .LVU967
2012:Veno-Echo.cpp **** 
 3583              		.loc 20 2012 5 view .LVU968
 3584              	.LBE1248:
 3585              	.LBE1247:
1270:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 3586              		.loc 20 1270 37 is_stmt 0 view .LVU969
 3587 00c6 574B     		ldr	r3, .L220+44
 3588              	.LBB1251:
 3589              	.LBB1249:
2012:Veno-Echo.cpp **** 
 3590              		.loc 20 2012 39 view .LVU970
 3591 00c8 B7EE007A 		vmov.f32	s14, #1.0e+0
2012:Veno-Echo.cpp **** 
 3592              		.loc 20 2012 49 view .LVU971
 3593 00cc B6EE006A 		vmov.f32	s12, #5.0e-1
2012:Veno-Echo.cpp **** 
 3594              		.loc 20 2012 39 view .LVU972
 3595 00d0 D3ED007A 		vldr.32	s15, [r3]
2012:Veno-Echo.cpp **** 
 3596              		.loc 20 2012 12 view .LVU973
 3597 00d4 F0EE006A 		vmov.f32	s13, #2.0e+0
2012:Veno-Echo.cpp **** 
 3598              		.loc 20 2012 39 view .LVU974
 3599 00d8 77EE677A 		vsub.f32	s15, s14, s15
2012:Veno-Echo.cpp **** 
 3600              		.loc 20 2012 49 view .LVU975
 3601 00dc 77EEC67A 		vsub.f32	s15, s15, s12
2012:Veno-Echo.cpp **** 
 3602              		.loc 20 2012 12 view .LVU976
 3603 00e0 B0EE406A 		vmov.f32	s12, s0
 3604 00e4 A7EEA66A 		vfma.f32	s12, s15, s13
2014:Veno-Echo.cpp ****     {
 3605              		.loc 20 2014 5 view .LVU977
 3606 00e8 B5EEC06A 		vcmpe.f32	s12, #0
2012:Veno-Echo.cpp **** 
 3607              		.loc 20 2012 12 view .LVU978
 3608 00ec F0EE467A 		vmov.f32	s15, s12
 3609              	.LVL161:
2014:Veno-Echo.cpp ****     {
 3610              		.loc 20 2014 5 is_stmt 1 view .LVU979
 3611 00f0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3612 00f4 75D4     		bmi	.L218
2019:Veno-Echo.cpp ****     {
 3613              		.loc 20 2019 5 view .LVU980
 3614 00f6 F4EEC77A 		vcmpe.f32	s15, s14
 3615 00fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3616 00fe 75DD     		ble	.L219
2021:Veno-Echo.cpp ****     }
 3617              		.loc 20 2021 16 is_stmt 0 view .LVU981
 3618 0100 F0EE477A 		vmov.f32	s15, s14
 3619 0104 B7EE006B 		vmov.f64	d6, #1.0e+0
 3620              	.LVL162:
 3621              	.L193:
2024:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 172


 3622              		.loc 20 2024 5 is_stmt 1 view .LVU982
2024:Veno-Echo.cpp **** }
 3623              		.loc 20 2024 5 is_stmt 0 view .LVU983
 3624              	.LBE1249:
 3625              	.LBE1251:
1271:Veno-Echo.cpp ****         }
 3626              		.loc 20 1271 13 is_stmt 1 view .LVU984
1271:Veno-Echo.cpp ****         }
 3627              		.loc 20 1271 25 is_stmt 0 view .LVU985
 3628 0108 474B     		ldr	r3, .L220+48
 3629 010a 83ED000A 		vstr.32	s0, [r3]
 3630              	.LVL163:
 3631              	.L194:
1279:Veno-Echo.cpp **** 
 3632              		.loc 20 1279 9 is_stmt 1 view .LVU986
1281:Veno-Echo.cpp ****         {
 3633              		.loc 20 1281 9 view .LVU987
 3634 010e 9FED3A5B 		vldr.64	d5, .L220
 3635 0112 B4EEC56B 		vcmpe.f64	d6, d5
 3636 0116 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3637 011a A4DA     		bge	.L198
1285:Veno-Echo.cpp ****         {
 3638              		.loc 20 1285 14 view .LVU988
 3639 011c 9FED385B 		vldr.64	d5, .L220+8
 3640 0120 B4EEC56B 		vcmpe.f64	d6, d5
 3641 0124 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3642 0128 58D9     		bls	.L207
1291:Veno-Echo.cpp ****         }
 3643              		.loc 20 1291 13 view .LVU989
1291:Veno-Echo.cpp ****         }
 3644              		.loc 20 1291 33 is_stmt 0 view .LVU990
 3645 012a B0EE670A 		vmov.f32	s0, s15
 3646              	.LVL164:
1291:Veno-Echo.cpp ****         }
 3647              		.loc 20 1291 33 view .LVU991
 3648 012e 0020     		movs	r0, #0
 3649 0130 B7EE001A 		vmov.f32	s2, #1.0e+0
 3650 0134 DFED420A 		vldr.32	s1, .L220+72
 3651 0138 FFF7FEFF 		bl	_Z5scalefff9CurveType
 3652              	.LVL165:
1291:Veno-Echo.cpp ****         }
 3653              		.loc 20 1291 33 view .LVU992
 3654 013c 95E7     		b	.L197
 3655              	.LVL166:
 3656              	.L202:
1291:Veno-Echo.cpp ****         }
 3657              		.loc 20 1291 33 view .LVU993
 3658              	.LBE1271:
 3659              	.LBB1272:
1310:Veno-Echo.cpp ****             {
 3660              		.loc 20 1310 13 is_stmt 1 view .LVU994
1310:Veno-Echo.cpp ****             {
 3661              		.loc 20 1310 16 is_stmt 0 view .LVU995
 3662 013e 3D4B     		ldr	r3, .L220+60
1310:Veno-Echo.cpp ****             {
 3663              		.loc 20 1310 13 view .LVU996
 3664 0140 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 173


 3665 0142 7AB9     		cbnz	r2, .L204
1312:Veno-Echo.cpp ****                 {
 3666              		.loc 20 1312 17 is_stmt 1 view .LVU997
 3667              	.LVL167:
 3668              	.LBB1256:
 3669              	.LBI1256:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3670              		.loc 21 75 3 view .LVU998
 3671              	.LBB1257:
 3672              		.loc 21 76 5 view .LVU999
 3673              		.loc 21 76 5 is_stmt 0 view .LVU1000
 3674              	.LBE1257:
 3675              	.LBE1256:
1312:Veno-Echo.cpp ****                 {
 3676              		.loc 20 1312 23 view .LVU1001
 3677 0144 3C4A     		ldr	r2, .L220+64
1312:Veno-Echo.cpp ****                 {
 3678              		.loc 20 1312 17 view .LVU1002
 3679 0146 9FED3D7A 		vldr.32	s14, .L220+68
1312:Veno-Echo.cpp ****                 {
 3680              		.loc 20 1312 23 view .LVU1003
 3681 014a D2ED007A 		vldr.32	s15, [r2]
 3682 014e 70EE677A 		vsub.f32	s15, s0, s15
 3683              	.LBB1259:
 3684              	.LBB1258:
 3685              		.loc 21 76 31 view .LVU1004
 3686 0152 F0EEE77A 		vabs.f32	s15, s15
 3687              	.LBE1258:
 3688              	.LBE1259:
1312:Veno-Echo.cpp ****                 {
 3689              		.loc 20 1312 17 view .LVU1005
 3690 0156 F4EEC77A 		vcmpe.f32	s15, s14
 3691 015a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3692 015e 9CDD     		ble	.L187
1314:Veno-Echo.cpp ****                 }
 3693              		.loc 20 1314 21 is_stmt 1 view .LVU1006
1314:Veno-Echo.cpp ****                 }
 3694              		.loc 20 1314 32 is_stmt 0 view .LVU1007
 3695 0160 0122     		movs	r2, #1
 3696 0162 1A70     		strb	r2, [r3]
 3697              	.L204:
1319:Veno-Echo.cpp ****         {
 3698              		.loc 20 1319 9 is_stmt 1 view .LVU1008
 3699              	.LBB1260:
1321:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
 3700              		.loc 20 1321 13 view .LVU1009
 3701              	.LVL168:
1322:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3702              		.loc 20 1322 13 view .LVU1010
1322:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3703              		.loc 20 1322 24 is_stmt 0 view .LVU1011
 3704 0164 B6EE001A 		vmov.f32	s2, #5.0e-1
 3705 0168 DFED350A 		vldr.32	s1, .L220+72
 3706 016c 0020     		movs	r0, #0
 3707 016e FFF7FEFF 		bl	_Z5scalefff9CurveType
 3708              	.LVL169:
1322:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 174


 3709              		.loc 20 1322 24 view .LVU1012
 3710 0172 B0EE408A 		vmov.f32	s16, s0
 3711              	.LVL170:
1323:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 3712              		.loc 20 1323 13 is_stmt 1 view .LVU1013
1323:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 3713              		.loc 20 1323 25 is_stmt 0 view .LVU1014
 3714 0176 3348     		ldr	r0, .L220+76
 3715 0178 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3716              	.LVL171:
1324:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 3717              		.loc 20 1324 13 is_stmt 1 view .LVU1015
1324:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 3718              		.loc 20 1324 25 is_stmt 0 view .LVU1016
 3719 017c 3248     		ldr	r0, .L220+80
 3720 017e B0EE480A 		vmov.f32	s0, s16
 3721 0182 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3722              	.LVL172:
1325:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 3723              		.loc 20 1325 13 is_stmt 1 view .LVU1017
1325:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 3724              		.loc 20 1325 25 is_stmt 0 view .LVU1018
 3725 0186 B0EE480A 		vmov.f32	s0, s16
 3726 018a 3048     		ldr	r0, .L220+84
 3727 018c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3728              	.LVL173:
1326:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 3729              		.loc 20 1326 13 is_stmt 1 view .LVU1019
1326:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 3730              		.loc 20 1326 25 is_stmt 0 view .LVU1020
 3731 0190 B0EE480A 		vmov.f32	s0, s16
 3732 0194 2E48     		ldr	r0, .L220+88
 3733 0196 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3734              	.LVL174:
1327:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 3735              		.loc 20 1327 13 is_stmt 1 view .LVU1021
1327:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 3736              		.loc 20 1327 30 is_stmt 0 view .LVU1022
 3737 019a B0EE480A 		vmov.f32	s0, s16
 3738 019e 2D48     		ldr	r0, .L220+92
 3739 01a0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3740              	.LVL175:
1328:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 3741              		.loc 20 1328 13 is_stmt 1 view .LVU1023
1328:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 3742              		.loc 20 1328 30 is_stmt 0 view .LVU1024
 3743 01a4 B0EE480A 		vmov.f32	s0, s16
 3744 01a8 2B48     		ldr	r0, .L220+96
 3745 01aa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3746              	.LVL176:
1329:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 3747              		.loc 20 1329 13 is_stmt 1 view .LVU1025
1329:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 3748              		.loc 20 1329 30 is_stmt 0 view .LVU1026
 3749 01ae B0EE480A 		vmov.f32	s0, s16
 3750 01b2 2A48     		ldr	r0, .L220+100
 3751 01b4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 175


 3752              	.LVL177:
1330:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 3753              		.loc 20 1330 13 is_stmt 1 view .LVU1027
1330:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 3754              		.loc 20 1330 30 is_stmt 0 view .LVU1028
 3755 01b8 B0EE480A 		vmov.f32	s0, s16
 3756 01bc 2848     		ldr	r0, .L220+104
 3757 01be FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3758              	.LVL178:
1331:Veno-Echo.cpp ****             save_flag = true;
 3759              		.loc 20 1331 13 is_stmt 1 view .LVU1029
1331:Veno-Echo.cpp ****             save_flag = true;
 3760              		.loc 20 1331 35 is_stmt 0 view .LVU1030
 3761 01c2 2849     		ldr	r1, .L220+108
 3762              	.LBB1261:
 3763              	.LBB1262:
 3764              	.LBB1263:
 3765              	.LBB1264:
 3766              	.LBB1265:
 3767              		.loc 22 397 18 view .LVU1031
 3768 01c4 284B     		ldr	r3, .L220+112
 3769 01c6 0122     		movs	r2, #1
 3770              	.LBE1265:
 3771              	.LBE1264:
 3772              	.LBE1263:
 3773              	.LBE1262:
 3774              	.LBE1261:
1331:Veno-Echo.cpp ****             save_flag = true;
 3775              		.loc 20 1331 35 view .LVU1032
 3776 01c8 81ED068A 		vstr.32	s16, [r1, #24]
1332:Veno-Echo.cpp ****         }
 3777              		.loc 20 1332 13 is_stmt 1 view .LVU1033
 3778              	.LVL179:
 3779              	.LBB1270:
 3780              	.LBI1261:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 3781              		.loc 23 80 5 view .LVU1034
 3782              	.LBB1269:
 3783              		.loc 23 81 7 view .LVU1035
 3784              	.LBB1268:
 3785              	.LBI1263:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 3786              		.loc 22 288 7 view .LVU1036
 3787              	.LBB1267:
 3788              	.LBI1264:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 3789              		.loc 22 390 7 view .LVU1037
 3790              	.LBB1266:
 3791              		.loc 22 397 18 is_stmt 0 view .LVU1038
 3792 01cc BFF35B8F 		dmb	ish
 3793 01d0 1A70     		strb	r2, [r3]
 3794 01d2 BFF35B8F 		dmb	ish
 3795              	.LVL180:
 3796              		.loc 22 397 18 view .LVU1039
 3797              	.LBE1266:
 3798              	.LBE1267:
 3799              	.LBE1268:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 176


 3800              	.LBE1269:
 3801              	.LBE1270:
 3802              	.LBE1260:
 3803              	.LBE1272:
 3804              	.LBE1277:
1335:Veno-Echo.cpp **** 
 3805              		.loc 20 1335 1 view .LVU1040
 3806 01d6 BDEC028B 		vldm	sp!, {d8}
 3807              		.cfi_remember_state
 3808              		.cfi_restore 80
 3809              		.cfi_restore 81
 3810              		.cfi_def_cfa_offset 8
 3811              	.LVL181:
1335:Veno-Echo.cpp **** 
 3812              		.loc 20 1335 1 view .LVU1041
 3813 01da 10BD     		pop	{r4, pc}
 3814              	.LVL182:
 3815              	.L207:
 3816              		.cfi_restore_state
 3817              	.LBB1278:
 3818              	.LBB1273:
1287:Veno-Echo.cpp ****         }
 3819              		.loc 20 1287 26 view .LVU1042
 3820 01dc 9FED180A 		vldr.32	s0, .L220+72
 3821              	.LVL183:
1287:Veno-Echo.cpp ****         }
 3822              		.loc 20 1287 26 view .LVU1043
 3823 01e0 43E7     		b	.L197
 3824              	.LVL184:
 3825              	.L218:
 3826              	.LBB1252:
 3827              	.LBB1250:
1287:Veno-Echo.cpp ****         }
 3828              		.loc 20 1287 26 view .LVU1044
 3829 01e2 9FED096B 		vldr.64	d6, .L220+16
 3830              	.LVL185:
2016:Veno-Echo.cpp ****     }
 3831              		.loc 20 2016 16 view .LVU1045
 3832 01e6 DFED167A 		vldr.32	s15, .L220+72
 3833              	.LVL186:
2016:Veno-Echo.cpp ****     }
 3834              		.loc 20 2016 16 view .LVU1046
 3835 01ea 8DE7     		b	.L193
 3836              	.LVL187:
 3837              	.L219:
2016:Veno-Echo.cpp ****     }
 3838              		.loc 20 2016 16 view .LVU1047
 3839 01ec B7EEE76A 		vcvt.f64.f32	d6, s15
 3840              	.LVL188:
2016:Veno-Echo.cpp ****     }
 3841              		.loc 20 2016 16 view .LVU1048
 3842 01f0 8AE7     		b	.L193
 3843              	.LVL189:
 3844              	.L213:
2016:Veno-Echo.cpp ****     }
 3845              		.loc 20 2016 16 view .LVU1049
 3846 01f2 B7EEE76A 		vcvt.f64.f32	d6, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 177


 3847 01f6 8AE7     		b	.L194
 3848              	.L221:
 3849              		.align	3
 3850              	.L220:
 3851 01f8 5C8FC2F5 		.word	4123168604
 3852 01fc 285CEF3F 		.word	1072651304
 3853 0200 7B14AE47 		.word	1202590843
 3854 0204 E17A943F 		.word	1066695393
 3855 0208 00000000 		.word	0
 3856 020c 00000000 		.word	0
 3857 0210 18000000 		.word	.LANCHOR4+24
 3858 0214 00000000 		.word	.LANCHOR7
 3859 0218 00000000 		.word	.LANCHOR52
 3860 021c 00000000 		.word	.LANCHOR53
 3861 0220 00000000 		.word	.LANCHOR54
 3862 0224 00000000 		.word	.LANCHOR51
 3863 0228 00000000 		.word	.LANCHOR55
 3864 022c 00000000 		.word	.LANCHOR56
 3865 0230 6F12833C 		.word	1015222895
 3866 0234 00000000 		.word	.LANCHOR57
 3867 0238 00000000 		.word	.LANCHOR58
 3868 023c 0AD7A33B 		.word	1000593162
 3869 0240 00000000 		.word	0
 3870 0244 00000000 		.word	.LANCHOR47
 3871 0248 00000000 		.word	.LANCHOR48
 3872 024c 00000000 		.word	.LANCHOR35
 3873 0250 00000000 		.word	.LANCHOR36
 3874 0254 00000000 		.word	.LANCHOR49
 3875 0258 00000000 		.word	.LANCHOR50
 3876 025c 00000000 		.word	.LANCHOR37
 3877 0260 00000000 		.word	.LANCHOR38
 3878 0264 00000000 		.word	.LANCHOR15
 3879 0268 00000000 		.word	.LANCHOR16
 3880              	.LBE1250:
 3881              	.LBE1252:
 3882              	.LBE1273:
 3883              	.LBE1278:
 3884              		.cfi_endproc
 3885              	.LFE4321:
 3887              		.section	.text._Z15Update_width_CVv,"ax",%progbits
 3888              		.align	1
 3889              		.p2align 2,,3
 3890              		.global	_Z15Update_width_CVv
 3891              		.syntax unified
 3892              		.thumb
 3893              		.thumb_func
 3894              		.fpu fpv5-d16
 3896              	_Z15Update_width_CVv:
 3897              	.LFB4322:
1338:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 3898              		.loc 20 1338 1 is_stmt 1 view -0
 3899              		.cfi_startproc
 3900              		@ args = 0, pretend = 0, frame = 0
 3901              		@ frame_needed = 0, uses_anonymous_args = 0
1339:Veno-Echo.cpp **** }
 3902              		.loc 20 1339 5 view .LVU1051
1338:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 178


 3903              		.loc 20 1338 1 is_stmt 0 view .LVU1052
 3904 0000 08B5     		push	{r3, lr}
 3905              		.cfi_def_cfa_offset 8
 3906              		.cfi_offset 3, -8
 3907              		.cfi_offset 14, -4
1339:Veno-Echo.cpp **** }
 3908              		.loc 20 1339 30 view .LVU1053
 3909 0002 0521     		movs	r1, #5
 3910 0004 0348     		ldr	r0, .L224
 3911 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3912              	.LVL190:
1339:Veno-Echo.cpp **** }
 3913              		.loc 20 1339 13 view .LVU1054
 3914 000a 034B     		ldr	r3, .L224+4
 3915 000c 83ED000A 		vstr.32	s0, [r3]
1340:Veno-Echo.cpp **** 
 3916              		.loc 20 1340 1 view .LVU1055
 3917 0010 08BD     		pop	{r3, pc}
 3918              	.L225:
 3919 0012 00BF     		.align	2
 3920              	.L224:
 3921 0014 18000000 		.word	.LANCHOR4+24
 3922 0018 00000000 		.word	.LANCHOR59
 3923              		.cfi_endproc
 3924              	.LFE4322:
 3926              		.section	.text._Z12Update_widthv,"ax",%progbits
 3927              		.align	1
 3928              		.p2align 2,,3
 3929              		.global	_Z12Update_widthv
 3930              		.syntax unified
 3931              		.thumb
 3932              		.thumb_func
 3933              		.fpu fpv5-d16
 3935              	_Z12Update_widthv:
 3936              	.LFB4323:
1343:Veno-Echo.cpp ****     static bool lastShift{};
 3937              		.loc 20 1343 1 is_stmt 1 view -0
 3938              		.cfi_startproc
 3939              		@ args = 0, pretend = 0, frame = 0
 3940              		@ frame_needed = 0, uses_anonymous_args = 0
1344:Veno-Echo.cpp ****     static bool width_pickup{};
 3941              		.loc 20 1344 5 view .LVU1057
1345:Veno-Echo.cpp ****     static bool ModDepth_pickup{};
 3942              		.loc 20 1345 5 view .LVU1058
1346:Veno-Echo.cpp **** 
 3943              		.loc 20 1346 5 view .LVU1059
1348:Veno-Echo.cpp **** 
 3944              		.loc 20 1348 5 view .LVU1060
1351:Veno-Echo.cpp **** 
 3945              		.loc 20 1351 5 view .LVU1061
1351:Veno-Echo.cpp **** 
 3946              		.loc 20 1351 39 is_stmt 0 view .LVU1062
 3947 0000 0722     		movs	r2, #7
 3948 0002 6348     		ldr	r0, .L255
 3949 0004 1146     		mov	r1, r2
1343:Veno-Echo.cpp ****     static bool lastShift{};
 3950              		.loc 20 1343 1 view .LVU1063
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 179


 3951 0006 10B5     		push	{r4, lr}
 3952              		.cfi_def_cfa_offset 8
 3953              		.cfi_offset 4, -8
 3954              		.cfi_offset 14, -4
 3955 0008 2DED028B 		vpush.64	{d8}
 3956              		.cfi_def_cfa_offset 16
 3957              		.cfi_offset 80, -16
 3958              		.cfi_offset 81, -12
1351:Veno-Echo.cpp **** 
 3959              		.loc 20 1351 39 view .LVU1064
 3960 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3961              	.LVL191:
 3962              	.LBB1279:
1353:Veno-Echo.cpp ****     {   
 3963              		.loc 20 1353 9 view .LVU1065
 3964 0010 604B     		ldr	r3, .L255+4
 3965              	.LBE1279:
1351:Veno-Echo.cpp **** 
 3966              		.loc 20 1351 39 view .LVU1066
 3967 0012 B0EE408A 		vmov.f32	s16, s0
 3968              	.LVL192:
1353:Veno-Echo.cpp ****     {   
 3969              		.loc 20 1353 5 is_stmt 1 view .LVU1067
 3970              	.LBB1334:
 3971              	.LBB1280:
1357:Veno-Echo.cpp ****         {
 3972              		.loc 20 1357 19 is_stmt 0 view .LVU1068
 3973 0016 604A     		ldr	r2, .L255+8
 3974              	.LBE1280:
1353:Veno-Echo.cpp ****     {   
 3975              		.loc 20 1353 5 view .LVU1069
 3976 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3977 001a 002B     		cmp	r3, #0
 3978 001c 3ED1     		bne	.L227
 3979              	.LBB1309:
1355:Veno-Echo.cpp ****         //update pickup
 3980              		.loc 20 1355 9 is_stmt 1 view .LVU1070
1357:Veno-Echo.cpp ****         {
 3981              		.loc 20 1357 9 view .LVU1071
 3982 001e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3983 0020 0029     		cmp	r1, #0
 3984 0022 48D0     		beq	.L228
1359:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
 3985              		.loc 20 1359 13 view .LVU1072
1360:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3986              		.loc 20 1360 26 is_stmt 0 view .LVU1073
 3987 0024 5D48     		ldr	r0, .L255+12
1361:Veno-Echo.cpp ****         }
 3988              		.loc 20 1361 23 view .LVU1074
 3989 0026 5E49     		ldr	r1, .L255+16
1359:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
 3990              		.loc 20 1359 23 view .LVU1075
 3991 0028 1370     		strb	r3, [r2]
1360:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3992              		.loc 20 1360 13 is_stmt 1 view .LVU1076
1360:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3993              		.loc 20 1360 26 is_stmt 0 view .LVU1077
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 180


 3994 002a 0370     		strb	r3, [r0]
1361:Veno-Echo.cpp ****         }
 3995              		.loc 20 1361 13 is_stmt 1 view .LVU1078
1361:Veno-Echo.cpp ****         }
 3996              		.loc 20 1361 23 is_stmt 0 view .LVU1079
 3997 002c 81ED000A 		vstr.32	s0, [r1]
 3998              	.L229:
1376:Veno-Echo.cpp **** 
 3999              		.loc 20 1376 9 is_stmt 1 view .LVU1080
 4000              	.LVL193:
1378:Veno-Echo.cpp ****         {
 4001              		.loc 20 1378 9 view .LVU1081
1386:Veno-Echo.cpp ****         }
 4002              		.loc 20 1386 13 view .LVU1082
 4003              	.LBB1281:
 4004              	.LBI1281:
2009:Veno-Echo.cpp **** {
 4005              		.loc 20 2009 7 view .LVU1083
 4006              	.LBB1282:
2011:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4007              		.loc 20 2011 5 view .LVU1084
2012:Veno-Echo.cpp **** 
 4008              		.loc 20 2012 5 view .LVU1085
 4009              	.LBE1282:
 4010              	.LBE1281:
1386:Veno-Echo.cpp ****         }
 4011              		.loc 20 1386 32 is_stmt 0 view .LVU1086
 4012 0030 5C4A     		ldr	r2, .L255+20
 4013              	.LBB1286:
 4014              	.LBB1283:
2012:Veno-Echo.cpp **** 
 4015              		.loc 20 2012 39 view .LVU1087
 4016 0032 B7EE007A 		vmov.f32	s14, #1.0e+0
2012:Veno-Echo.cpp **** 
 4017              		.loc 20 2012 49 view .LVU1088
 4018 0036 B6EE006A 		vmov.f32	s12, #5.0e-1
 4019              	.LBE1283:
 4020              	.LBE1286:
1386:Veno-Echo.cpp ****         }
 4021              		.loc 20 1386 32 view .LVU1089
 4022 003a 5B4B     		ldr	r3, .L255+24
 4023              	.LBB1287:
 4024              	.LBB1284:
2012:Veno-Echo.cpp **** 
 4025              		.loc 20 2012 39 view .LVU1090
 4026 003c D2ED007A 		vldr.32	s15, [r2]
2012:Veno-Echo.cpp **** 
 4027              		.loc 20 2012 12 view .LVU1091
 4028 0040 F0EE006A 		vmov.f32	s13, #2.0e+0
 4029 0044 93ED000A 		vldr.32	s0, [r3]
 4030              	.LVL194:
2012:Veno-Echo.cpp **** 
 4031              		.loc 20 2012 39 view .LVU1092
 4032 0048 77EE677A 		vsub.f32	s15, s14, s15
2012:Veno-Echo.cpp **** 
 4033              		.loc 20 2012 49 view .LVU1093
 4034 004c 77EEC67A 		vsub.f32	s15, s15, s12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 181


2012:Veno-Echo.cpp **** 
 4035              		.loc 20 2012 12 view .LVU1094
 4036 0050 A7EEA60A 		vfma.f32	s0, s15, s13
 4037              	.LVL195:
2014:Veno-Echo.cpp ****     {
 4038              		.loc 20 2014 5 is_stmt 1 view .LVU1095
 4039 0054 B5EEC00A 		vcmpe.f32	s0, #0
 4040 0058 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4041 005c 00F19180 		bmi	.L253
2019:Veno-Echo.cpp ****     {
 4042              		.loc 20 2019 5 view .LVU1096
2021:Veno-Echo.cpp ****     }
 4043              		.loc 20 2021 16 is_stmt 0 view .LVU1097
 4044 0060 B4EE470A 		vcmp.f32	s0, s14
 4045 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4046 0068 37FE000A 		vselgt.f32	s0, s14, s0
 4047              	.LVL196:
 4048              	.L235:
2024:Veno-Echo.cpp **** }
 4049              		.loc 20 2024 5 is_stmt 1 view .LVU1098
2024:Veno-Echo.cpp **** }
 4050              		.loc 20 2024 5 is_stmt 0 view .LVU1099
 4051              	.LBE1284:
 4052              	.LBE1287:
1386:Veno-Echo.cpp ****         }
 4053              		.loc 20 1386 32 view .LVU1100
 4054 006c F6EE000A 		vmov.f32	s1, #5.0e-1
 4055 0070 0020     		movs	r0, #0
 4056 0072 9FED4E1A 		vldr.32	s2, .L255+28
 4057 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4058              	.LVL197:
 4059              	.L234:
1389:Veno-Echo.cpp ****             WidthXfade.SetPos(width);
 4060              		.loc 20 1389 13 is_stmt 1 view .LVU1101
 4061              	.LBB1288:
 4062              	.LBI1288:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4063              		.loc 25 135 13 view .LVU1102
 4064              	.LBB1289:
 4065              		.loc 25 137 5 view .LVU1103
 4066              		.loc 25 137 9 is_stmt 0 view .LVU1104
 4067 007a 4D4B     		ldr	r3, .L255+32
 4068 007c 9FED4D7A 		vldr.32	s14, .L255+36
 4069 0080 D3ED007A 		vldr.32	s15, [r3]
 4070              	.LBE1289:
 4071              	.LBE1288:
 4072              	.LBB1292:
 4073              	.LBB1293:
  38:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initializes CrossFade module
  39:../DaisySP/Source/Dynamics/crossfade.h ****         Defaults
  40:../DaisySP/Source/Dynamics/crossfade.h ****         - current position = .5
  41:../DaisySP/Source/Dynamics/crossfade.h ****         - curve = linear
  42:../DaisySP/Source/Dynamics/crossfade.h ****     */
  43:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init(int curve)
  44:../DaisySP/Source/Dynamics/crossfade.h ****     {
  45:../DaisySP/Source/Dynamics/crossfade.h ****         pos_   = 0.5f;
  46:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 182


  47:../DaisySP/Source/Dynamics/crossfade.h ****     }
  48:../DaisySP/Source/Dynamics/crossfade.h **** 
  49:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initialize with default linear curve 
  50:../DaisySP/Source/Dynamics/crossfade.h ****     */
  51:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init() { Init(CROSSFADE_LIN); }
  52:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
  53:../DaisySP/Source/Dynamics/crossfade.h ****     */
  54:../DaisySP/Source/Dynamics/crossfade.h ****     float Process(float &in1, float &in2);
  55:../DaisySP/Source/Dynamics/crossfade.h **** 
  56:../DaisySP/Source/Dynamics/crossfade.h **** 
  57:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets position of CrossFade between two input signals
  58:../DaisySP/Source/Dynamics/crossfade.h ****         Input range: 0 to 1
  59:../DaisySP/Source/Dynamics/crossfade.h ****     */
  60:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetPos(float pos) { pos_ = pos; }
 4074              		.loc 10 60 42 view .LVU1105
 4075 0084 4C4A     		ldr	r2, .L255+40
 4076              	.LBE1293:
 4077              	.LBE1292:
 4078              	.LBB1295:
 4079              	.LBB1290:
 4080              		.loc 25 137 24 view .LVU1106
 4081 0086 30EE670A 		vsub.f32	s0, s0, s15
 4082              	.LVL198:
 4083              		.loc 25 137 24 view .LVU1107
 4084              	.LBE1290:
 4085              	.LBE1295:
 4086              	.LBE1309:
 4087              	.LBE1334:
1422:Veno-Echo.cpp **** 
 4088              		.loc 20 1422 1 view .LVU1108
 4089 008a BDEC028B 		vldm	sp!, {d8}
 4090              		.cfi_remember_state
 4091              		.cfi_restore 80
 4092              		.cfi_restore 81
 4093              		.cfi_def_cfa_offset 8
 4094              	.LVL199:
 4095              	.LBB1335:
 4096              	.LBB1310:
 4097              	.LBB1296:
 4098              	.LBB1291:
 4099              		.loc 25 137 9 view .LVU1109
 4100 008e E0EE077A 		vfma.f32	s15, s0, s14
 4101 0092 C3ED007A 		vstr.32	s15, [r3]
 4102              	.LVL200:
 4103              		.loc 25 137 9 view .LVU1110
 4104              	.LBE1291:
 4105              	.LBE1296:
1390:Veno-Echo.cpp ****     }
 4106              		.loc 20 1390 13 is_stmt 1 view .LVU1111
 4107              	.LBB1297:
 4108              	.LBI1292:
 4109              		.loc 10 60 17 view .LVU1112
 4110              	.LBB1294:
 4111              		.loc 10 60 37 view .LVU1113
 4112              		.loc 10 60 42 is_stmt 0 view .LVU1114
 4113 0096 C2ED007A 		vstr.32	s15, [r2]
 4114              	.LBE1294:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 183


 4115              	.LBE1297:
 4116              	.LBE1310:
 4117              	.LBE1335:
1422:Veno-Echo.cpp **** 
 4118              		.loc 20 1422 1 view .LVU1115
 4119 009a 10BD     		pop	{r4, pc}
 4120              	.LVL201:
 4121              	.L227:
 4122              		.cfi_restore_state
 4123              	.LBB1336:
 4124              	.LBB1311:
1395:Veno-Echo.cpp **** 
 4125              		.loc 20 1395 9 is_stmt 1 view .LVU1116
1397:Veno-Echo.cpp ****         {
 4126              		.loc 20 1397 9 view .LVU1117
 4127 009c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4128 009e 002B     		cmp	r3, #0
 4129 00a0 43D1     		bne	.L238
1399:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 4130              		.loc 20 1399 13 view .LVU1118
1399:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 4131              		.loc 20 1399 23 is_stmt 0 view .LVU1119
 4132 00a2 0124     		movs	r4, #1
1400:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 4133              		.loc 20 1400 29 view .LVU1120
 4134 00a4 4548     		ldr	r0, .L255+44
1401:Veno-Echo.cpp ****         }
 4135              		.loc 20 1401 26 view .LVU1121
 4136 00a6 4649     		ldr	r1, .L255+48
1399:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 4137              		.loc 20 1399 23 view .LVU1122
 4138 00a8 1470     		strb	r4, [r2]
1400:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 4139              		.loc 20 1400 13 is_stmt 1 view .LVU1123
1400:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 4140              		.loc 20 1400 29 is_stmt 0 view .LVU1124
 4141 00aa 0370     		strb	r3, [r0]
1401:Veno-Echo.cpp ****         }
 4142              		.loc 20 1401 13 is_stmt 1 view .LVU1125
1401:Veno-Echo.cpp ****         }
 4143              		.loc 20 1401 26 is_stmt 0 view .LVU1126
 4144 00ac 81ED000A 		vstr.32	s0, [r1]
 4145              	.L226:
1401:Veno-Echo.cpp ****         }
 4146              		.loc 20 1401 26 view .LVU1127
 4147              	.LBE1311:
 4148              	.LBE1336:
1422:Veno-Echo.cpp **** 
 4149              		.loc 20 1422 1 view .LVU1128
 4150 00b0 BDEC028B 		vldm	sp!, {d8}
 4151              		.cfi_remember_state
 4152              		.cfi_restore 80
 4153              		.cfi_restore 81
 4154              		.cfi_def_cfa_offset 8
 4155 00b4 10BD     		pop	{r4, pc}
 4156              	.L228:
 4157              		.cfi_restore_state
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 184


 4158              	.LBB1337:
 4159              	.LBB1331:
1366:Veno-Echo.cpp ****             {
 4160              		.loc 20 1366 13 is_stmt 1 view .LVU1129
1366:Veno-Echo.cpp ****             {
 4161              		.loc 20 1366 16 is_stmt 0 view .LVU1130
 4162 00b6 394B     		ldr	r3, .L255+12
1366:Veno-Echo.cpp ****             {
 4163              		.loc 20 1366 13 view .LVU1131
 4164 00b8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4165 00ba 7AB9     		cbnz	r2, .L230
1368:Veno-Echo.cpp ****                 {
 4166              		.loc 20 1368 17 is_stmt 1 view .LVU1132
 4167              	.LVL202:
 4168              	.LBB1298:
 4169              	.LBI1298:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4170              		.loc 21 75 3 view .LVU1133
 4171              	.LBB1299:
 4172              		.loc 21 76 5 view .LVU1134
 4173              		.loc 21 76 5 is_stmt 0 view .LVU1135
 4174              	.LBE1299:
 4175              	.LBE1298:
1368:Veno-Echo.cpp ****                 {
 4176              		.loc 20 1368 23 view .LVU1136
 4177 00bc 384A     		ldr	r2, .L255+16
1368:Veno-Echo.cpp ****                 {
 4178              		.loc 20 1368 17 view .LVU1137
 4179 00be 9FED417A 		vldr.32	s14, .L255+52
1368:Veno-Echo.cpp ****                 {
 4180              		.loc 20 1368 23 view .LVU1138
 4181 00c2 D2ED007A 		vldr.32	s15, [r2]
 4182 00c6 70EE677A 		vsub.f32	s15, s0, s15
 4183              	.LBB1301:
 4184              	.LBB1300:
 4185              		.loc 21 76 31 view .LVU1139
 4186 00ca F0EEE77A 		vabs.f32	s15, s15
 4187              	.LBE1300:
 4188              	.LBE1301:
1368:Veno-Echo.cpp ****                 {
 4189              		.loc 20 1368 17 view .LVU1140
 4190 00ce F4EEC77A 		vcmpe.f32	s15, s14
 4191 00d2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4192 00d6 ABDD     		ble	.L229
1370:Veno-Echo.cpp ****                 }
 4193              		.loc 20 1370 21 is_stmt 1 view .LVU1141
1370:Veno-Echo.cpp ****                 }
 4194              		.loc 20 1370 34 is_stmt 0 view .LVU1142
 4195 00d8 0122     		movs	r2, #1
 4196 00da 1A70     		strb	r2, [r3]
 4197              	.L230:
1376:Veno-Echo.cpp **** 
 4198              		.loc 20 1376 9 is_stmt 1 view .LVU1143
 4199              	.LVL203:
1378:Veno-Echo.cpp ****         {
 4200              		.loc 20 1378 9 view .LVU1144
1380:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 185


 4201              		.loc 20 1380 13 view .LVU1145
 4202              	.LBB1302:
 4203              	.LBI1302:
2009:Veno-Echo.cpp **** {
 4204              		.loc 20 2009 7 view .LVU1146
 4205              	.LBB1303:
2011:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4206              		.loc 20 2011 5 view .LVU1147
2012:Veno-Echo.cpp **** 
 4207              		.loc 20 2012 5 view .LVU1148
 4208              	.LBE1303:
 4209              	.LBE1302:
1380:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4210              		.loc 20 1380 32 is_stmt 0 view .LVU1149
 4211 00dc 314B     		ldr	r3, .L255+20
 4212              	.LBB1306:
 4213              	.LBB1304:
2012:Veno-Echo.cpp **** 
 4214              		.loc 20 2012 39 view .LVU1150
 4215 00de B7EE007A 		vmov.f32	s14, #1.0e+0
2012:Veno-Echo.cpp **** 
 4216              		.loc 20 2012 49 view .LVU1151
 4217 00e2 B6EE006A 		vmov.f32	s12, #5.0e-1
2012:Veno-Echo.cpp **** 
 4218              		.loc 20 2012 39 view .LVU1152
 4219 00e6 D3ED007A 		vldr.32	s15, [r3]
2012:Veno-Echo.cpp **** 
 4220              		.loc 20 2012 12 view .LVU1153
 4221 00ea F0EE006A 		vmov.f32	s13, #2.0e+0
 4222 00ee B0EE480A 		vmov.f32	s0, s16
 4223              	.LVL204:
2012:Veno-Echo.cpp **** 
 4224              		.loc 20 2012 39 view .LVU1154
 4225 00f2 77EE677A 		vsub.f32	s15, s14, s15
2012:Veno-Echo.cpp **** 
 4226              		.loc 20 2012 49 view .LVU1155
 4227 00f6 77EEC67A 		vsub.f32	s15, s15, s12
2012:Veno-Echo.cpp **** 
 4228              		.loc 20 2012 12 view .LVU1156
 4229 00fa A7EEA60A 		vfma.f32	s0, s15, s13
 4230              	.LVL205:
2014:Veno-Echo.cpp ****     {
 4231              		.loc 20 2014 5 is_stmt 1 view .LVU1157
 4232 00fe B5EEC00A 		vcmpe.f32	s0, #0
 4233 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4234 0106 3FD4     		bmi	.L254
2019:Veno-Echo.cpp ****     {
 4235              		.loc 20 2019 5 view .LVU1158
2021:Veno-Echo.cpp ****     }
 4236              		.loc 20 2021 16 is_stmt 0 view .LVU1159
 4237 0108 B4EE470A 		vcmp.f32	s0, s14
 4238 010c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4239 0110 37FE000A 		vselgt.f32	s0, s14, s0
 4240              	.LVL206:
 4241              	.L232:
2024:Veno-Echo.cpp **** }
 4242              		.loc 20 2024 5 is_stmt 1 view .LVU1160
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 186


2024:Veno-Echo.cpp **** }
 4243              		.loc 20 2024 5 is_stmt 0 view .LVU1161
 4244              	.LBE1304:
 4245              	.LBE1306:
1380:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4246              		.loc 20 1380 32 view .LVU1162
 4247 0114 F6EE000A 		vmov.f32	s1, #5.0e-1
 4248 0118 0020     		movs	r0, #0
 4249 011a 9FED241A 		vldr.32	s2, .L255+28
 4250 011e FFF7FEFF 		bl	_Z5scalefff9CurveType
 4251              	.LVL207:
1381:Veno-Echo.cpp ****         }
 4252              		.loc 20 1381 24 view .LVU1163
 4253 0122 214B     		ldr	r3, .L255+24
 4254              	.LVL208:
1381:Veno-Echo.cpp ****         }
 4255              		.loc 20 1381 13 is_stmt 1 view .LVU1164
1381:Veno-Echo.cpp ****         }
 4256              		.loc 20 1381 24 is_stmt 0 view .LVU1165
 4257 0124 83ED008A 		vstr.32	s16, [r3]
 4258 0128 A7E7     		b	.L234
 4259              	.LVL209:
 4260              	.L238:
1381:Veno-Echo.cpp ****         }
 4261              		.loc 20 1381 24 view .LVU1166
 4262              	.LBE1331:
 4263              	.LBB1332:
1406:Veno-Echo.cpp ****             {
 4264              		.loc 20 1406 13 is_stmt 1 view .LVU1167
1406:Veno-Echo.cpp ****             {
 4265              		.loc 20 1406 16 is_stmt 0 view .LVU1168
 4266 012a 244B     		ldr	r3, .L255+44
1406:Veno-Echo.cpp ****             {
 4267              		.loc 20 1406 13 view .LVU1169
 4268 012c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4269 012e 7AB9     		cbnz	r2, .L240
1408:Veno-Echo.cpp ****                 {
 4270              		.loc 20 1408 17 is_stmt 1 view .LVU1170
 4271              	.LVL210:
 4272              	.LBB1312:
 4273              	.LBI1312:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4274              		.loc 21 75 3 view .LVU1171
 4275              	.LBB1313:
 4276              		.loc 21 76 5 view .LVU1172
 4277              		.loc 21 76 5 is_stmt 0 view .LVU1173
 4278              	.LBE1313:
 4279              	.LBE1312:
1408:Veno-Echo.cpp ****                 {
 4280              		.loc 20 1408 23 view .LVU1174
 4281 0130 234A     		ldr	r2, .L255+48
1408:Veno-Echo.cpp ****                 {
 4282              		.loc 20 1408 17 view .LVU1175
 4283 0132 9FED247A 		vldr.32	s14, .L255+52
1408:Veno-Echo.cpp ****                 {
 4284              		.loc 20 1408 23 view .LVU1176
 4285 0136 D2ED007A 		vldr.32	s15, [r2]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 187


 4286 013a 70EE677A 		vsub.f32	s15, s0, s15
 4287              	.LBB1315:
 4288              	.LBB1314:
 4289              		.loc 21 76 31 view .LVU1177
 4290 013e F0EEE77A 		vabs.f32	s15, s15
 4291              	.LBE1314:
 4292              	.LBE1315:
1408:Veno-Echo.cpp ****                 {
 4293              		.loc 20 1408 17 view .LVU1178
 4294 0142 F4EEC77A 		vcmpe.f32	s15, s14
 4295 0146 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4296 014a B1DD     		ble	.L226
1410:Veno-Echo.cpp ****                 }
 4297              		.loc 20 1410 21 is_stmt 1 view .LVU1179
1410:Veno-Echo.cpp ****                 }
 4298              		.loc 20 1410 37 is_stmt 0 view .LVU1180
 4299 014c 0122     		movs	r2, #1
 4300 014e 1A70     		strb	r2, [r3]
 4301              	.L240:
1415:Veno-Echo.cpp ****         {
 4302              		.loc 20 1415 9 is_stmt 1 view .LVU1181
1417:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4303              		.loc 20 1417 13 view .LVU1182
1417:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4304              		.loc 20 1417 29 is_stmt 0 view .LVU1183
 4305 0150 B0EE480A 		vmov.f32	s0, s16
 4306              	.LVL211:
1417:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4307              		.loc 20 1417 29 view .LVU1184
 4308 0154 0020     		movs	r0, #0
 4309 0156 9FED1C1A 		vldr.32	s2, .L255+56
 4310 015a DFED140A 		vldr.32	s1, .L255+28
 4311 015e FFF7FEFF 		bl	_Z5scalefff9CurveType
 4312              	.LVL212:
1417:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4313              		.loc 20 1417 22 view .LVU1185
 4314 0162 1A48     		ldr	r0, .L255+60
 4315              	.LBB1316:
 4316              	.LBB1317:
 4317              	.LBB1318:
 4318              	.LBB1319:
 4319              	.LBB1320:
 4320              		.loc 22 397 18 view .LVU1186
 4321 0164 0122     		movs	r2, #1
 4322              	.LBE1320:
 4323              	.LBE1319:
 4324              	.LBE1318:
 4325              	.LBE1317:
 4326              	.LBE1316:
1418:Veno-Echo.cpp ****             save_flag = true;
 4327              		.loc 20 1418 34 view .LVU1187
 4328 0166 1A49     		ldr	r1, .L255+64
 4329              	.LBB1329:
 4330              	.LBB1327:
 4331              	.LBB1325:
 4332              	.LBB1323:
 4333              	.LBB1321:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 188


 4334              		.loc 22 397 18 view .LVU1188
 4335 0168 1A4B     		ldr	r3, .L255+68
 4336              	.LBE1321:
 4337              	.LBE1323:
 4338              	.LBE1325:
 4339              	.LBE1327:
 4340              	.LBE1329:
1417:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4341              		.loc 20 1417 22 view .LVU1189
 4342 016a 80ED000A 		vstr.32	s0, [r0]
1418:Veno-Echo.cpp ****             save_flag = true;
 4343              		.loc 20 1418 13 is_stmt 1 view .LVU1190
1418:Veno-Echo.cpp ****             save_flag = true;
 4344              		.loc 20 1418 34 is_stmt 0 view .LVU1191
 4345 016e 81ED020A 		vstr.32	s0, [r1, #8]
1419:Veno-Echo.cpp ****         }
 4346              		.loc 20 1419 13 is_stmt 1 view .LVU1192
 4347              	.LVL213:
 4348              	.LBB1330:
 4349              	.LBI1316:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 4350              		.loc 23 80 5 view .LVU1193
 4351              	.LBB1328:
 4352              		.loc 23 81 7 view .LVU1194
 4353              	.LBB1326:
 4354              	.LBI1318:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 4355              		.loc 22 288 7 view .LVU1195
 4356              	.LBB1324:
 4357              	.LBI1319:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 4358              		.loc 22 390 7 view .LVU1196
 4359              	.LBB1322:
 4360              		.loc 22 397 18 is_stmt 0 view .LVU1197
 4361 0172 BFF35B8F 		dmb	ish
 4362 0176 1A70     		strb	r2, [r3]
 4363 0178 BFF35B8F 		dmb	ish
 4364              	.LVL214:
 4365              		.loc 22 397 18 view .LVU1198
 4366              	.LBE1322:
 4367              	.LBE1324:
 4368              	.LBE1326:
 4369              	.LBE1328:
 4370              	.LBE1330:
 4371              	.LBE1332:
 4372              	.LBE1337:
1422:Veno-Echo.cpp **** 
 4373              		.loc 20 1422 1 view .LVU1199
 4374 017c BDEC028B 		vldm	sp!, {d8}
 4375              		.cfi_remember_state
 4376              		.cfi_restore 80
 4377              		.cfi_restore 81
 4378              		.cfi_def_cfa_offset 8
 4379              	.LVL215:
1422:Veno-Echo.cpp **** 
 4380              		.loc 20 1422 1 view .LVU1200
 4381 0180 10BD     		pop	{r4, pc}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 189


 4382              	.LVL216:
 4383              	.L253:
 4384              		.cfi_restore_state
 4385              	.LBB1338:
 4386              	.LBB1333:
 4387              	.LBB1307:
 4388              	.LBB1285:
2016:Veno-Echo.cpp ****     }
 4389              		.loc 20 2016 16 view .LVU1201
 4390 0182 9FED0A0A 		vldr.32	s0, .L255+28
 4391              	.LVL217:
2016:Veno-Echo.cpp ****     }
 4392              		.loc 20 2016 16 view .LVU1202
 4393 0186 71E7     		b	.L235
 4394              	.LVL218:
 4395              	.L254:
2016:Veno-Echo.cpp ****     }
 4396              		.loc 20 2016 16 view .LVU1203
 4397              	.LBE1285:
 4398              	.LBE1307:
 4399              	.LBB1308:
 4400              	.LBB1305:
 4401 0188 9FED080A 		vldr.32	s0, .L255+28
 4402              	.LVL219:
2016:Veno-Echo.cpp ****     }
 4403              		.loc 20 2016 16 view .LVU1204
 4404 018c C2E7     		b	.L232
 4405              	.L256:
 4406 018e 00BF     		.align	2
 4407              	.L255:
 4408 0190 18000000 		.word	.LANCHOR4+24
 4409 0194 00000000 		.word	.LANCHOR7
 4410 0198 00000000 		.word	.LANCHOR60
 4411 019c 00000000 		.word	.LANCHOR61
 4412 01a0 00000000 		.word	.LANCHOR62
 4413 01a4 00000000 		.word	.LANCHOR59
 4414 01a8 00000000 		.word	.LANCHOR63
 4415 01ac 00000000 		.word	0
 4416 01b0 00000000 		.word	.LANCHOR64
 4417 01b4 6F12033D 		.word	1023611503
 4418 01b8 00000000 		.word	.LANCHOR65
 4419 01bc 00000000 		.word	.LANCHOR66
 4420 01c0 00000000 		.word	.LANCHOR67
 4421 01c4 0AD7A33B 		.word	1000593162
 4422 01c8 0000FA43 		.word	1140457472
 4423 01cc 00000000 		.word	.LANCHOR68
 4424 01d0 00000000 		.word	.LANCHOR15
 4425 01d4 00000000 		.word	.LANCHOR16
 4426              	.LBE1305:
 4427              	.LBE1308:
 4428              	.LBE1333:
 4429              	.LBE1338:
 4430              		.cfi_endproc
 4431              	.LFE4323:
 4433              		.section	.text._Z20Update_crossfeedbackv,"ax",%progbits
 4434              		.align	1
 4435              		.p2align 2,,3
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 190


 4436              		.global	_Z20Update_crossfeedbackv
 4437              		.syntax unified
 4438              		.thumb
 4439              		.thumb_func
 4440              		.fpu fpv5-d16
 4442              	_Z20Update_crossfeedbackv:
 4443              	.LFB4324:
1425:Veno-Echo.cpp ****     static bool lastShift{};
 4444              		.loc 20 1425 1 is_stmt 1 view -0
 4445              		.cfi_startproc
 4446              		@ args = 0, pretend = 0, frame = 0
 4447              		@ frame_needed = 0, uses_anonymous_args = 0
1426:Veno-Echo.cpp ****     static bool crossfeedback_pickup{};
 4448              		.loc 20 1426 5 view .LVU1206
1427:Veno-Echo.cpp ****     static bool modRate_pickup{};
 4449              		.loc 20 1427 5 view .LVU1207
1428:Veno-Echo.cpp **** 
 4450              		.loc 20 1428 5 view .LVU1208
1430:Veno-Echo.cpp **** 
 4451              		.loc 20 1430 5 view .LVU1209
1433:Veno-Echo.cpp **** 
 4452              		.loc 20 1433 5 view .LVU1210
1433:Veno-Echo.cpp **** 
 4453              		.loc 20 1433 47 is_stmt 0 view .LVU1211
 4454 0000 0022     		movs	r2, #0
 4455 0002 0721     		movs	r1, #7
 4456 0004 4548     		ldr	r0, .L272
1425:Veno-Echo.cpp ****     static bool lastShift{};
 4457              		.loc 20 1425 1 view .LVU1212
 4458 0006 10B5     		push	{r4, lr}
 4459              		.cfi_def_cfa_offset 8
 4460              		.cfi_offset 4, -8
 4461              		.cfi_offset 14, -4
 4462 0008 2DED028B 		vpush.64	{d8}
 4463              		.cfi_def_cfa_offset 16
 4464              		.cfi_offset 80, -16
 4465              		.cfi_offset 81, -12
1433:Veno-Echo.cpp **** 
 4466              		.loc 20 1433 47 view .LVU1213
 4467 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 4468              	.LVL220:
 4469              	.LBB1339:
1435:Veno-Echo.cpp ****     {   
 4470              		.loc 20 1435 9 view .LVU1214
 4471 0010 434B     		ldr	r3, .L272+4
 4472              	.LBE1339:
1433:Veno-Echo.cpp **** 
 4473              		.loc 20 1433 47 view .LVU1215
 4474 0012 B0EE408A 		vmov.f32	s16, s0
 4475              	.LVL221:
1435:Veno-Echo.cpp ****     {   
 4476              		.loc 20 1435 5 is_stmt 1 view .LVU1216
 4477              	.LBB1377:
 4478              	.LBB1340:
1439:Veno-Echo.cpp ****         {
 4479              		.loc 20 1439 19 is_stmt 0 view .LVU1217
 4480 0016 434A     		ldr	r2, .L272+8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 191


 4481              	.LBE1340:
1435:Veno-Echo.cpp ****     {   
 4482              		.loc 20 1435 5 view .LVU1218
 4483 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4484 001a FBB9     		cbnz	r3, .L258
 4485              	.LBB1349:
1437:Veno-Echo.cpp ****         //update pickup
 4486              		.loc 20 1437 9 is_stmt 1 view .LVU1219
1439:Veno-Echo.cpp ****         {
 4487              		.loc 20 1439 9 view .LVU1220
 4488 001c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4489 001e 49B3     		cbz	r1, .L259
1441:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
 4490              		.loc 20 1441 13 view .LVU1221
1442:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4491              		.loc 20 1442 34 is_stmt 0 view .LVU1222
 4492 0020 4148     		ldr	r0, .L272+12
1443:Veno-Echo.cpp ****         }
 4493              		.loc 20 1443 31 view .LVU1223
 4494 0022 4249     		ldr	r1, .L272+16
1441:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
 4495              		.loc 20 1441 23 view .LVU1224
 4496 0024 1370     		strb	r3, [r2]
1442:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4497              		.loc 20 1442 13 is_stmt 1 view .LVU1225
1442:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4498              		.loc 20 1442 34 is_stmt 0 view .LVU1226
 4499 0026 0370     		strb	r3, [r0]
1443:Veno-Echo.cpp ****         }
 4500              		.loc 20 1443 13 is_stmt 1 view .LVU1227
1443:Veno-Echo.cpp ****         }
 4501              		.loc 20 1443 31 is_stmt 0 view .LVU1228
 4502 0028 81ED000A 		vstr.32	s0, [r1]
 4503              	.L260:
1456:Veno-Echo.cpp **** 
 4504              		.loc 20 1456 9 is_stmt 1 view .LVU1229
 4505              	.LVL222:
1458:Veno-Echo.cpp ****         {
 4506              		.loc 20 1458 9 view .LVU1230
1466:Veno-Echo.cpp ****         }
 4507              		.loc 20 1466 13 view .LVU1231
1466:Veno-Echo.cpp ****         }
 4508              		.loc 20 1466 40 is_stmt 0 view .LVU1232
 4509 002c 404B     		ldr	r3, .L272+20
 4510 002e B7EE001A 		vmov.f32	s2, #1.0e+0
 4511 0032 0020     		movs	r0, #0
 4512 0034 DFED3F0A 		vldr.32	s1, .L272+24
 4513 0038 93ED000A 		vldr.32	s0, [r3]
 4514              	.LVL223:
1466:Veno-Echo.cpp ****         }
 4515              		.loc 20 1466 40 view .LVU1233
 4516 003c FFF7FEFF 		bl	_Z5scalefff9CurveType
 4517              	.LVL224:
 4518              	.L268:
1469:Veno-Echo.cpp ****     }
 4519              		.loc 20 1469 9 is_stmt 1 view .LVU1234
 4520              	.LBB1341:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 192


 4521              	.LBI1341:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4522              		.loc 25 135 13 view .LVU1235
 4523              	.LBB1342:
 4524              		.loc 25 137 5 view .LVU1236
 4525              		.loc 25 137 9 is_stmt 0 view .LVU1237
 4526 0040 3D4B     		ldr	r3, .L272+28
 4527 0042 9FED3E7A 		vldr.32	s14, .L272+32
 4528 0046 D3ED007A 		vldr.32	s15, [r3]
 4529              		.loc 25 137 24 view .LVU1238
 4530 004a 30EE670A 		vsub.f32	s0, s0, s15
 4531              	.LVL225:
 4532              		.loc 25 137 24 view .LVU1239
 4533              	.LBE1342:
 4534              	.LBE1341:
 4535              	.LBE1349:
 4536              	.LBE1377:
1501:Veno-Echo.cpp **** 
 4537              		.loc 20 1501 1 view .LVU1240
 4538 004e BDEC028B 		vldm	sp!, {d8}
 4539              		.cfi_remember_state
 4540              		.cfi_restore 80
 4541              		.cfi_restore 81
 4542              		.cfi_def_cfa_offset 8
 4543              	.LVL226:
 4544              	.LBB1378:
 4545              	.LBB1350:
 4546              	.LBB1344:
 4547              	.LBB1343:
 4548              		.loc 25 137 9 view .LVU1241
 4549 0052 E0EE077A 		vfma.f32	s15, s0, s14
 4550 0056 C3ED007A 		vstr.32	s15, [r3]
 4551              	.LBE1343:
 4552              	.LBE1344:
 4553              	.LBE1350:
 4554              	.LBE1378:
1501:Veno-Echo.cpp **** 
 4555              		.loc 20 1501 1 view .LVU1242
 4556 005a 10BD     		pop	{r4, pc}
 4557              	.LVL227:
 4558              	.L258:
 4559              		.cfi_restore_state
 4560              	.LBB1379:
 4561              	.LBB1351:
1473:Veno-Echo.cpp **** 
 4562              		.loc 20 1473 9 is_stmt 1 view .LVU1243
1475:Veno-Echo.cpp ****         {
 4563              		.loc 20 1475 9 view .LVU1244
 4564 005c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4565 005e 4BBB     		cbnz	r3, .L264
1477:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4566              		.loc 20 1477 13 view .LVU1245
1477:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4567              		.loc 20 1477 23 is_stmt 0 view .LVU1246
 4568 0060 0124     		movs	r4, #1
1478:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4569              		.loc 20 1478 28 view .LVU1247
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 193


 4570 0062 3748     		ldr	r0, .L272+36
1479:Veno-Echo.cpp ****         }
 4571              		.loc 20 1479 25 view .LVU1248
 4572 0064 3749     		ldr	r1, .L272+40
1477:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4573              		.loc 20 1477 23 view .LVU1249
 4574 0066 1470     		strb	r4, [r2]
1478:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4575              		.loc 20 1478 13 is_stmt 1 view .LVU1250
1478:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4576              		.loc 20 1478 28 is_stmt 0 view .LVU1251
 4577 0068 0370     		strb	r3, [r0]
1479:Veno-Echo.cpp ****         }
 4578              		.loc 20 1479 13 is_stmt 1 view .LVU1252
1479:Veno-Echo.cpp ****         }
 4579              		.loc 20 1479 25 is_stmt 0 view .LVU1253
 4580 006a 81ED000A 		vstr.32	s0, [r1]
 4581              	.L257:
1479:Veno-Echo.cpp ****         }
 4582              		.loc 20 1479 25 view .LVU1254
 4583              	.LBE1351:
 4584              	.LBE1379:
1501:Veno-Echo.cpp **** 
 4585              		.loc 20 1501 1 view .LVU1255
 4586 006e BDEC028B 		vldm	sp!, {d8}
 4587              		.cfi_remember_state
 4588              		.cfi_restore 80
 4589              		.cfi_restore 81
 4590              		.cfi_def_cfa_offset 8
 4591 0072 10BD     		pop	{r4, pc}
 4592              	.L259:
 4593              		.cfi_restore_state
 4594              	.LBB1380:
 4595              	.LBB1375:
1448:Veno-Echo.cpp ****             {
 4596              		.loc 20 1448 13 is_stmt 1 view .LVU1256
1448:Veno-Echo.cpp ****             {
 4597              		.loc 20 1448 16 is_stmt 0 view .LVU1257
 4598 0074 2C4B     		ldr	r3, .L272+12
1448:Veno-Echo.cpp ****             {
 4599              		.loc 20 1448 13 view .LVU1258
 4600 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4601 0078 7AB9     		cbnz	r2, .L261
1450:Veno-Echo.cpp ****                 {
 4602              		.loc 20 1450 17 is_stmt 1 view .LVU1259
 4603              	.LVL228:
 4604              	.LBB1345:
 4605              	.LBI1345:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4606              		.loc 21 75 3 view .LVU1260
 4607              	.LBB1346:
 4608              		.loc 21 76 5 view .LVU1261
 4609              		.loc 21 76 5 is_stmt 0 view .LVU1262
 4610              	.LBE1346:
 4611              	.LBE1345:
1450:Veno-Echo.cpp ****                 {
 4612              		.loc 20 1450 23 view .LVU1263
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 194


 4613 007a 2C4A     		ldr	r2, .L272+16
1450:Veno-Echo.cpp ****                 {
 4614              		.loc 20 1450 17 view .LVU1264
 4615 007c 9FED327A 		vldr.32	s14, .L272+44
1450:Veno-Echo.cpp ****                 {
 4616              		.loc 20 1450 23 view .LVU1265
 4617 0080 D2ED007A 		vldr.32	s15, [r2]
 4618 0084 70EE677A 		vsub.f32	s15, s0, s15
 4619              	.LBB1348:
 4620              	.LBB1347:
 4621              		.loc 21 76 31 view .LVU1266
 4622 0088 F0EEE77A 		vabs.f32	s15, s15
 4623              	.LBE1347:
 4624              	.LBE1348:
1450:Veno-Echo.cpp ****                 {
 4625              		.loc 20 1450 17 view .LVU1267
 4626 008c F4EEC77A 		vcmpe.f32	s15, s14
 4627 0090 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4628 0094 CADD     		ble	.L260
1452:Veno-Echo.cpp ****                 }
 4629              		.loc 20 1452 21 is_stmt 1 view .LVU1268
1452:Veno-Echo.cpp ****                 }
 4630              		.loc 20 1452 42 is_stmt 0 view .LVU1269
 4631 0096 0122     		movs	r2, #1
 4632 0098 1A70     		strb	r2, [r3]
 4633              	.L261:
1456:Veno-Echo.cpp **** 
 4634              		.loc 20 1456 9 is_stmt 1 view .LVU1270
 4635              	.LVL229:
1458:Veno-Echo.cpp ****         {
 4636              		.loc 20 1458 9 view .LVU1271
1460:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4637              		.loc 20 1460 13 view .LVU1272
1460:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4638              		.loc 20 1460 40 is_stmt 0 view .LVU1273
 4639 009a B7EE001A 		vmov.f32	s2, #1.0e+0
 4640 009e 0020     		movs	r0, #0
 4641 00a0 B0EE480A 		vmov.f32	s0, s16
 4642              	.LVL230:
1460:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4643              		.loc 20 1460 40 view .LVU1274
 4644 00a4 DFED230A 		vldr.32	s1, .L272+24
 4645 00a8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4646              	.LVL231:
1461:Veno-Echo.cpp ****         }
 4647              		.loc 20 1461 32 view .LVU1275
 4648 00ac 204B     		ldr	r3, .L272+20
 4649              	.LVL232:
1461:Veno-Echo.cpp ****         }
 4650              		.loc 20 1461 13 is_stmt 1 view .LVU1276
1461:Veno-Echo.cpp ****         }
 4651              		.loc 20 1461 32 is_stmt 0 view .LVU1277
 4652 00ae 83ED008A 		vstr.32	s16, [r3]
 4653 00b2 C5E7     		b	.L268
 4654              	.LVL233:
 4655              	.L264:
1461:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 195


 4656              		.loc 20 1461 32 view .LVU1278
 4657              	.LBE1375:
 4658              	.LBB1376:
1484:Veno-Echo.cpp ****             {
 4659              		.loc 20 1484 13 is_stmt 1 view .LVU1279
1484:Veno-Echo.cpp ****             {
 4660              		.loc 20 1484 16 is_stmt 0 view .LVU1280
 4661 00b4 224B     		ldr	r3, .L272+36
1484:Veno-Echo.cpp ****             {
 4662              		.loc 20 1484 13 view .LVU1281
 4663 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4664 00b8 7AB9     		cbnz	r2, .L266
1486:Veno-Echo.cpp ****                 {
 4665              		.loc 20 1486 17 is_stmt 1 view .LVU1282
 4666              	.LVL234:
 4667              	.LBB1352:
 4668              	.LBI1352:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4669              		.loc 21 75 3 view .LVU1283
 4670              	.LBB1353:
 4671              		.loc 21 76 5 view .LVU1284
 4672              		.loc 21 76 5 is_stmt 0 view .LVU1285
 4673              	.LBE1353:
 4674              	.LBE1352:
1486:Veno-Echo.cpp ****                 {
 4675              		.loc 20 1486 23 view .LVU1286
 4676 00ba 224A     		ldr	r2, .L272+40
1486:Veno-Echo.cpp ****                 {
 4677              		.loc 20 1486 17 view .LVU1287
 4678 00bc 9FED227A 		vldr.32	s14, .L272+44
1486:Veno-Echo.cpp ****                 {
 4679              		.loc 20 1486 23 view .LVU1288
 4680 00c0 D2ED007A 		vldr.32	s15, [r2]
 4681 00c4 70EE677A 		vsub.f32	s15, s0, s15
 4682              	.LBB1355:
 4683              	.LBB1354:
 4684              		.loc 21 76 31 view .LVU1289
 4685 00c8 F0EEE77A 		vabs.f32	s15, s15
 4686              	.LBE1354:
 4687              	.LBE1355:
1486:Veno-Echo.cpp ****                 {
 4688              		.loc 20 1486 17 view .LVU1290
 4689 00cc F4EEC77A 		vcmpe.f32	s15, s14
 4690 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4691 00d4 CBDD     		ble	.L257
1488:Veno-Echo.cpp ****                 }
 4692              		.loc 20 1488 21 is_stmt 1 view .LVU1291
1488:Veno-Echo.cpp ****                 }
 4693              		.loc 20 1488 36 is_stmt 0 view .LVU1292
 4694 00d6 0122     		movs	r2, #1
 4695 00d8 1A70     		strb	r2, [r3]
 4696              	.L266:
1493:Veno-Echo.cpp ****         {
 4697              		.loc 20 1493 9 is_stmt 1 view .LVU1293
 4698              	.LBB1356:
1495:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4699              		.loc 20 1495 13 view .LVU1294
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 196


 4700              	.LBB1357:
 4701              	.LBB1358:
  17:../DaisySP/Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:../DaisySP/Source/Synthesis/oscillator.h ****     */
  19:../DaisySP/Source/Synthesis/oscillator.h ****     enum
  20:../DaisySP/Source/Synthesis/oscillator.h ****     {
  21:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SIN,
  22:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_TRI,
  23:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SAW,
  24:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  25:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  26:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  27:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  28:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  29:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_LAST,
  30:../DaisySP/Source/Synthesis/oscillator.h ****     };
  31:../DaisySP/Source/Synthesis/oscillator.h **** 
  32:../DaisySP/Source/Synthesis/oscillator.h **** 
  33:../DaisySP/Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  34:../DaisySP/Source/Synthesis/oscillator.h **** 
  35:../DaisySP/Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:../DaisySP/Source/Synthesis/oscillator.h **** 
  37:../DaisySP/Source/Synthesis/oscillator.h ****         Defaults:
  38:../DaisySP/Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
  39:../DaisySP/Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  40:../DaisySP/Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  41:../DaisySP/Source/Synthesis/oscillator.h ****     */
  42:../DaisySP/Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  43:../DaisySP/Source/Synthesis/oscillator.h ****     {
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
  45:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  46:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  47:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
  49:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
  52:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
  53:../DaisySP/Source/Synthesis/oscillator.h ****     }
  54:../DaisySP/Source/Synthesis/oscillator.h **** 
  55:../DaisySP/Source/Synthesis/oscillator.h **** 
  56:../DaisySP/Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:../DaisySP/Source/Synthesis/oscillator.h ****     */
  58:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
  59:../DaisySP/Source/Synthesis/oscillator.h ****     {
  60:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = f;
 4702              		.loc 8 60 20 is_stmt 0 view .LVU1295
 4703 00da 1C4C     		ldr	r4, .L272+48
 4704              	.LBE1358:
 4705              	.LBE1357:
1495:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4706              		.loc 20 1495 32 view .LVU1296
 4707 00dc B0EE480A 		vmov.f32	s0, s16
 4708              	.LVL235:
1495:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4709              		.loc 20 1495 32 view .LVU1297
 4710 00e0 B2EE041A 		vmov.f32	s2, #1.0e+1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 197


 4711 00e4 0020     		movs	r0, #0
 4712 00e6 DFED1A0A 		vldr.32	s1, .L272+52
 4713 00ea FFF7FEFF 		bl	_Z5scalefff9CurveType
 4714              	.LVL236:
 4715              	.LBB1362:
 4716              	.LBB1359:
  61:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4717              		.loc 8 61 34 view .LVU1298
 4718 00ee 2046     		mov	r0, r4
 4719              	.LBE1359:
 4720              	.LBE1362:
1495:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4721              		.loc 20 1495 32 view .LVU1299
 4722 00f0 B0EE408A 		vmov.f32	s16, s0
 4723              	.LVL237:
1496:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
 4724              		.loc 20 1496 13 is_stmt 1 view .LVU1300
 4725              	.LBB1363:
 4726              	.LBI1357:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 4727              		.loc 8 58 17 view .LVU1301
 4728              	.LBB1360:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4729              		.loc 8 60 9 view .LVU1302
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4730              		.loc 8 60 20 is_stmt 0 view .LVU1303
 4731 00f4 84ED020A 		vstr.32	s0, [r4, #8]
 4732              		.loc 8 61 9 is_stmt 1 view .LVU1304
 4733              		.loc 8 61 34 is_stmt 0 view .LVU1305
 4734 00f8 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 4735              	.LVL238:
 4736              		.loc 8 61 34 view .LVU1306
 4737              	.LBE1360:
 4738              	.LBE1363:
1497:Veno-Echo.cpp ****             save_flag = true;
 4739              		.loc 20 1497 33 view .LVU1307
 4740 00fc 1549     		ldr	r1, .L272+56
 4741              	.LBB1364:
 4742              	.LBB1365:
 4743              	.LBB1366:
 4744              	.LBB1367:
 4745              	.LBB1368:
 4746              		.loc 22 397 18 view .LVU1308
 4747 00fe 164B     		ldr	r3, .L272+60
 4748 0100 0122     		movs	r2, #1
 4749              	.LBE1368:
 4750              	.LBE1367:
 4751              	.LBE1366:
 4752              	.LBE1365:
 4753              	.LBE1364:
1497:Veno-Echo.cpp ****             save_flag = true;
 4754              		.loc 20 1497 33 view .LVU1309
 4755 0102 81ED038A 		vstr.32	s16, [r1, #12]
 4756              	.LBB1373:
 4757              	.LBB1361:
 4758              		.loc 8 61 20 view .LVU1310
 4759 0106 84ED060A 		vstr.32	s0, [r4, #24]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 198


 4760              	.LVL239:
 4761              		.loc 8 61 20 view .LVU1311
 4762              	.LBE1361:
 4763              	.LBE1373:
1497:Veno-Echo.cpp ****             save_flag = true;
 4764              		.loc 20 1497 13 is_stmt 1 view .LVU1312
1498:Veno-Echo.cpp ****         }
 4765              		.loc 20 1498 13 view .LVU1313
 4766              	.LBB1374:
 4767              	.LBI1364:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 4768              		.loc 23 80 5 view .LVU1314
 4769              	.LBB1372:
 4770              		.loc 23 81 7 view .LVU1315
 4771              	.LBB1371:
 4772              	.LBI1366:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 4773              		.loc 22 288 7 view .LVU1316
 4774              	.LBB1370:
 4775              	.LBI1367:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 4776              		.loc 22 390 7 view .LVU1317
 4777              	.LBB1369:
 4778              		.loc 22 397 18 is_stmt 0 view .LVU1318
 4779 010a BFF35B8F 		dmb	ish
 4780 010e 1A70     		strb	r2, [r3]
 4781 0110 BFF35B8F 		dmb	ish
 4782              	.LVL240:
 4783              		.loc 22 397 18 view .LVU1319
 4784              	.LBE1369:
 4785              	.LBE1370:
 4786              	.LBE1371:
 4787              	.LBE1372:
 4788              	.LBE1374:
 4789              	.LBE1356:
 4790              	.LBE1376:
 4791              	.LBE1380:
1501:Veno-Echo.cpp **** 
 4792              		.loc 20 1501 1 view .LVU1320
 4793 0114 BDEC028B 		vldm	sp!, {d8}
 4794              		.cfi_restore 80
 4795              		.cfi_restore 81
 4796              		.cfi_def_cfa_offset 8
 4797              	.LVL241:
1501:Veno-Echo.cpp **** 
 4798              		.loc 20 1501 1 view .LVU1321
 4799 0118 10BD     		pop	{r4, pc}
 4800              	.L273:
 4801 011a 00BF     		.align	2
 4802              	.L272:
 4803 011c 18000000 		.word	.LANCHOR4+24
 4804 0120 00000000 		.word	.LANCHOR7
 4805 0124 00000000 		.word	.LANCHOR69
 4806 0128 00000000 		.word	.LANCHOR70
 4807 012c 00000000 		.word	.LANCHOR71
 4808 0130 00000000 		.word	.LANCHOR75
 4809 0134 00000000 		.word	0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 199


 4810 0138 00000000 		.word	.LANCHOR72
 4811 013c 6F12033D 		.word	1023611503
 4812 0140 00000000 		.word	.LANCHOR73
 4813 0144 00000000 		.word	.LANCHOR74
 4814 0148 0AD7A33B 		.word	1000593162
 4815 014c 00000000 		.word	.LANCHOR76
 4816 0150 CDCCCC3D 		.word	1036831949
 4817 0154 00000000 		.word	.LANCHOR15
 4818 0158 00000000 		.word	.LANCHOR16
 4819              		.cfi_endproc
 4820              	.LFE4324:
 4822              		.section	.text._Z18Update_filterXfadev,"ax",%progbits
 4823              		.align	1
 4824              		.p2align 2,,3
 4825              		.global	_Z18Update_filterXfadev
 4826              		.syntax unified
 4827              		.thumb
 4828              		.thumb_func
 4829              		.fpu fpv5-d16
 4831              	_Z18Update_filterXfadev:
 4832              	.LFB4325:
1504:Veno-Echo.cpp ****     static bool lastShift{};
 4833              		.loc 20 1504 1 is_stmt 1 view -0
 4834              		.cfi_startproc
 4835              		@ args = 0, pretend = 0, frame = 0
 4836              		@ frame_needed = 0, uses_anonymous_args = 0
1505:Veno-Echo.cpp ****     static bool filterXfade_pickup{};
 4837              		.loc 20 1505 5 view .LVU1323
1506:Veno-Echo.cpp ****     static bool PostFilters_pickup{};
 4838              		.loc 20 1506 5 view .LVU1324
1507:Veno-Echo.cpp **** 
 4839              		.loc 20 1507 5 view .LVU1325
1509:Veno-Echo.cpp **** 
 4840              		.loc 20 1509 5 view .LVU1326
1512:Veno-Echo.cpp **** 
 4841              		.loc 20 1512 5 view .LVU1327
1512:Veno-Echo.cpp **** 
 4842              		.loc 20 1512 45 is_stmt 0 view .LVU1328
 4843 0000 0322     		movs	r2, #3
 4844 0002 0721     		movs	r1, #7
 4845 0004 4648     		ldr	r0, .L296
1504:Veno-Echo.cpp ****     static bool lastShift{};
 4846              		.loc 20 1504 1 view .LVU1329
 4847 0006 10B5     		push	{r4, lr}
 4848              		.cfi_def_cfa_offset 8
 4849              		.cfi_offset 4, -8
 4850              		.cfi_offset 14, -4
 4851 0008 2DED028B 		vpush.64	{d8}
 4852              		.cfi_def_cfa_offset 16
 4853              		.cfi_offset 80, -16
 4854              		.cfi_offset 81, -12
1512:Veno-Echo.cpp **** 
 4855              		.loc 20 1512 45 view .LVU1330
 4856 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 4857              	.LVL242:
 4858              	.LBB1381:
1514:Veno-Echo.cpp ****     {   
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 200


 4859              		.loc 20 1514 9 view .LVU1331
 4860 0010 444B     		ldr	r3, .L296+4
 4861              	.LBE1381:
1512:Veno-Echo.cpp **** 
 4862              		.loc 20 1512 45 view .LVU1332
 4863 0012 B0EE408A 		vmov.f32	s16, s0
 4864              	.LVL243:
1514:Veno-Echo.cpp ****     {   
 4865              		.loc 20 1514 5 is_stmt 1 view .LVU1333
 4866              	.LBB1411:
 4867              	.LBB1382:
1518:Veno-Echo.cpp ****         {
 4868              		.loc 20 1518 19 is_stmt 0 view .LVU1334
 4869 0016 444A     		ldr	r2, .L296+8
 4870              	.LBE1382:
1514:Veno-Echo.cpp ****     {   
 4871              		.loc 20 1514 5 view .LVU1335
 4872 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4873 001a FBB9     		cbnz	r3, .L275
 4874              	.LBB1391:
1516:Veno-Echo.cpp ****         //update pickup
 4875              		.loc 20 1516 9 is_stmt 1 view .LVU1336
1518:Veno-Echo.cpp ****         {
 4876              		.loc 20 1518 9 view .LVU1337
 4877 001c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4878 001e 49B3     		cbz	r1, .L276
1520:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
 4879              		.loc 20 1520 13 view .LVU1338
1521:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4880              		.loc 20 1521 32 is_stmt 0 view .LVU1339
 4881 0020 4248     		ldr	r0, .L296+12
1522:Veno-Echo.cpp ****         }
 4882              		.loc 20 1522 29 view .LVU1340
 4883 0022 4349     		ldr	r1, .L296+16
1520:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
 4884              		.loc 20 1520 23 view .LVU1341
 4885 0024 1370     		strb	r3, [r2]
1521:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4886              		.loc 20 1521 13 is_stmt 1 view .LVU1342
1521:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4887              		.loc 20 1521 32 is_stmt 0 view .LVU1343
 4888 0026 0370     		strb	r3, [r0]
1522:Veno-Echo.cpp ****         }
 4889              		.loc 20 1522 13 is_stmt 1 view .LVU1344
1522:Veno-Echo.cpp ****         }
 4890              		.loc 20 1522 29 is_stmt 0 view .LVU1345
 4891 0028 81ED000A 		vstr.32	s0, [r1]
 4892              	.L277:
1536:Veno-Echo.cpp **** 
 4893              		.loc 20 1536 9 is_stmt 1 view .LVU1346
 4894              	.LVL244:
1538:Veno-Echo.cpp ****         {
 4895              		.loc 20 1538 9 view .LVU1347
1546:Veno-Echo.cpp ****         }
 4896              		.loc 20 1546 13 view .LVU1348
1546:Veno-Echo.cpp ****         }
 4897              		.loc 20 1546 38 is_stmt 0 view .LVU1349
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 201


 4898 002c 414B     		ldr	r3, .L296+20
 4899 002e B7EE001A 		vmov.f32	s2, #1.0e+0
 4900 0032 0120     		movs	r0, #1
 4901 0034 DFED400A 		vldr.32	s1, .L296+24
 4902 0038 93ED000A 		vldr.32	s0, [r3]
 4903              	.LVL245:
1546:Veno-Echo.cpp ****         }
 4904              		.loc 20 1546 38 view .LVU1350
 4905 003c FFF7FEFF 		bl	_Z5scalefff9CurveType
 4906              	.LVL246:
 4907              	.L287:
1549:Veno-Echo.cpp ****     }
 4908              		.loc 20 1549 9 is_stmt 1 view .LVU1351
 4909              	.LBB1383:
 4910              	.LBI1383:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4911              		.loc 25 135 13 view .LVU1352
 4912              	.LBB1384:
 4913              		.loc 25 137 5 view .LVU1353
 4914              		.loc 25 137 9 is_stmt 0 view .LVU1354
 4915 0040 3E4B     		ldr	r3, .L296+28
 4916 0042 9FED3F7A 		vldr.32	s14, .L296+32
 4917 0046 D3ED007A 		vldr.32	s15, [r3]
 4918              		.loc 25 137 24 view .LVU1355
 4919 004a 30EE670A 		vsub.f32	s0, s0, s15
 4920              	.LVL247:
 4921              		.loc 25 137 24 view .LVU1356
 4922              	.LBE1384:
 4923              	.LBE1383:
 4924              	.LBE1391:
 4925              	.LBE1411:
1592:Veno-Echo.cpp **** 
 4926              		.loc 20 1592 1 view .LVU1357
 4927 004e BDEC028B 		vldm	sp!, {d8}
 4928              		.cfi_remember_state
 4929              		.cfi_restore 80
 4930              		.cfi_restore 81
 4931              		.cfi_def_cfa_offset 8
 4932              	.LVL248:
 4933              	.LBB1412:
 4934              	.LBB1392:
 4935              	.LBB1386:
 4936              	.LBB1385:
 4937              		.loc 25 137 9 view .LVU1358
 4938 0052 E0EE077A 		vfma.f32	s15, s0, s14
 4939 0056 C3ED007A 		vstr.32	s15, [r3]
 4940              	.LBE1385:
 4941              	.LBE1386:
 4942              	.LBE1392:
 4943              	.LBE1412:
1592:Veno-Echo.cpp **** 
 4944              		.loc 20 1592 1 view .LVU1359
 4945 005a 10BD     		pop	{r4, pc}
 4946              	.LVL249:
 4947              	.L275:
 4948              		.cfi_restore_state
 4949              	.LBB1413:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 202


 4950              	.LBB1393:
1554:Veno-Echo.cpp **** 
 4951              		.loc 20 1554 9 is_stmt 1 view .LVU1360
1556:Veno-Echo.cpp ****         {
 4952              		.loc 20 1556 9 view .LVU1361
 4953 005c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4954 005e 4BBB     		cbnz	r3, .L281
1558:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4955              		.loc 20 1558 13 view .LVU1362
1558:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4956              		.loc 20 1558 23 is_stmt 0 view .LVU1363
 4957 0060 0124     		movs	r4, #1
1559:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4958              		.loc 20 1559 32 view .LVU1364
 4959 0062 3848     		ldr	r0, .L296+36
1560:Veno-Echo.cpp ****         }
 4960              		.loc 20 1560 29 view .LVU1365
 4961 0064 3849     		ldr	r1, .L296+40
1558:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4962              		.loc 20 1558 23 view .LVU1366
 4963 0066 1470     		strb	r4, [r2]
1559:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4964              		.loc 20 1559 13 is_stmt 1 view .LVU1367
1559:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4965              		.loc 20 1559 32 is_stmt 0 view .LVU1368
 4966 0068 0370     		strb	r3, [r0]
1560:Veno-Echo.cpp ****         }
 4967              		.loc 20 1560 13 is_stmt 1 view .LVU1369
1560:Veno-Echo.cpp ****         }
 4968              		.loc 20 1560 29 is_stmt 0 view .LVU1370
 4969 006a 81ED000A 		vstr.32	s0, [r1]
 4970              	.L274:
1560:Veno-Echo.cpp ****         }
 4971              		.loc 20 1560 29 view .LVU1371
 4972              	.LBE1393:
 4973              	.LBE1413:
1592:Veno-Echo.cpp **** 
 4974              		.loc 20 1592 1 view .LVU1372
 4975 006e BDEC028B 		vldm	sp!, {d8}
 4976              		.cfi_remember_state
 4977              		.cfi_restore 80
 4978              		.cfi_restore 81
 4979              		.cfi_def_cfa_offset 8
 4980 0072 10BD     		pop	{r4, pc}
 4981              	.L276:
 4982              		.cfi_restore_state
 4983              	.LBB1414:
 4984              	.LBB1408:
1527:Veno-Echo.cpp ****             {
 4985              		.loc 20 1527 13 is_stmt 1 view .LVU1373
1527:Veno-Echo.cpp ****             {
 4986              		.loc 20 1527 16 is_stmt 0 view .LVU1374
 4987 0074 2D4B     		ldr	r3, .L296+12
1527:Veno-Echo.cpp ****             {
 4988              		.loc 20 1527 13 view .LVU1375
 4989 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4990 0078 7AB9     		cbnz	r2, .L278
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 203


1529:Veno-Echo.cpp ****                 {
 4991              		.loc 20 1529 17 is_stmt 1 view .LVU1376
 4992              	.LVL250:
 4993              	.LBB1387:
 4994              	.LBI1387:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4995              		.loc 21 75 3 view .LVU1377
 4996              	.LBB1388:
 4997              		.loc 21 76 5 view .LVU1378
 4998              		.loc 21 76 5 is_stmt 0 view .LVU1379
 4999              	.LBE1388:
 5000              	.LBE1387:
1529:Veno-Echo.cpp ****                 {
 5001              		.loc 20 1529 23 view .LVU1380
 5002 007a 2D4A     		ldr	r2, .L296+16
1529:Veno-Echo.cpp ****                 {
 5003              		.loc 20 1529 17 view .LVU1381
 5004 007c 9FED337A 		vldr.32	s14, .L296+44
1529:Veno-Echo.cpp ****                 {
 5005              		.loc 20 1529 23 view .LVU1382
 5006 0080 D2ED007A 		vldr.32	s15, [r2]
 5007 0084 70EE677A 		vsub.f32	s15, s0, s15
 5008              	.LBB1390:
 5009              	.LBB1389:
 5010              		.loc 21 76 31 view .LVU1383
 5011 0088 F0EEE77A 		vabs.f32	s15, s15
 5012              	.LBE1389:
 5013              	.LBE1390:
1529:Veno-Echo.cpp ****                 {
 5014              		.loc 20 1529 17 view .LVU1384
 5015 008c F4EEC77A 		vcmpe.f32	s15, s14
 5016 0090 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5017 0094 CADD     		ble	.L277
1531:Veno-Echo.cpp ****                 }
 5018              		.loc 20 1531 21 is_stmt 1 view .LVU1385
1531:Veno-Echo.cpp ****                 }
 5019              		.loc 20 1531 40 is_stmt 0 view .LVU1386
 5020 0096 0122     		movs	r2, #1
 5021 0098 1A70     		strb	r2, [r3]
 5022              	.L278:
1536:Veno-Echo.cpp **** 
 5023              		.loc 20 1536 9 is_stmt 1 view .LVU1387
 5024              	.LVL251:
1538:Veno-Echo.cpp ****         {
 5025              		.loc 20 1538 9 view .LVU1388
1540:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 5026              		.loc 20 1540 13 view .LVU1389
1540:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 5027              		.loc 20 1540 38 is_stmt 0 view .LVU1390
 5028 009a B7EE001A 		vmov.f32	s2, #1.0e+0
 5029 009e 0120     		movs	r0, #1
 5030 00a0 B0EE480A 		vmov.f32	s0, s16
 5031              	.LVL252:
1540:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 5032              		.loc 20 1540 38 view .LVU1391
 5033 00a4 DFED240A 		vldr.32	s1, .L296+24
 5034 00a8 FFF7FEFF 		bl	_Z5scalefff9CurveType
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 204


 5035              	.LVL253:
1541:Veno-Echo.cpp ****         }
 5036              		.loc 20 1541 30 view .LVU1392
 5037 00ac 214B     		ldr	r3, .L296+20
 5038              	.LVL254:
1541:Veno-Echo.cpp ****         }
 5039              		.loc 20 1541 13 is_stmt 1 view .LVU1393
1541:Veno-Echo.cpp ****         }
 5040              		.loc 20 1541 30 is_stmt 0 view .LVU1394
 5041 00ae 83ED008A 		vstr.32	s16, [r3]
 5042 00b2 C5E7     		b	.L287
 5043              	.LVL255:
 5044              	.L281:
1541:Veno-Echo.cpp ****         }
 5045              		.loc 20 1541 30 view .LVU1395
 5046              	.LBE1408:
 5047              	.LBB1409:
1565:Veno-Echo.cpp ****             {
 5048              		.loc 20 1565 13 is_stmt 1 view .LVU1396
1565:Veno-Echo.cpp ****             {
 5049              		.loc 20 1565 16 is_stmt 0 view .LVU1397
 5050 00b4 234B     		ldr	r3, .L296+36
1565:Veno-Echo.cpp ****             {
 5051              		.loc 20 1565 13 view .LVU1398
 5052 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5053 00b8 7AB9     		cbnz	r2, .L283
1567:Veno-Echo.cpp ****                 {
 5054              		.loc 20 1567 17 is_stmt 1 view .LVU1399
 5055              	.LVL256:
 5056              	.LBB1394:
 5057              	.LBI1394:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5058              		.loc 21 75 3 view .LVU1400
 5059              	.LBB1395:
 5060              		.loc 21 76 5 view .LVU1401
 5061              		.loc 21 76 5 is_stmt 0 view .LVU1402
 5062              	.LBE1395:
 5063              	.LBE1394:
1567:Veno-Echo.cpp ****                 {
 5064              		.loc 20 1567 23 view .LVU1403
 5065 00ba 234A     		ldr	r2, .L296+40
1567:Veno-Echo.cpp ****                 {
 5066              		.loc 20 1567 17 view .LVU1404
 5067 00bc 9FED237A 		vldr.32	s14, .L296+44
1567:Veno-Echo.cpp ****                 {
 5068              		.loc 20 1567 23 view .LVU1405
 5069 00c0 D2ED007A 		vldr.32	s15, [r2]
 5070 00c4 70EE677A 		vsub.f32	s15, s0, s15
 5071              	.LBB1397:
 5072              	.LBB1396:
 5073              		.loc 21 76 31 view .LVU1406
 5074 00c8 F0EEE77A 		vabs.f32	s15, s15
 5075              	.LBE1396:
 5076              	.LBE1397:
1567:Veno-Echo.cpp ****                 {
 5077              		.loc 20 1567 17 view .LVU1407
 5078 00cc F4EEC77A 		vcmpe.f32	s15, s14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 205


 5079 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5080 00d4 CBDD     		ble	.L274
1569:Veno-Echo.cpp ****                 }
 5081              		.loc 20 1569 21 is_stmt 1 view .LVU1408
1569:Veno-Echo.cpp ****                 }
 5082              		.loc 20 1569 40 is_stmt 0 view .LVU1409
 5083 00d6 0122     		movs	r2, #1
 5084 00d8 1A70     		strb	r2, [r3]
 5085              	.L283:
1574:Veno-Echo.cpp ****         {
 5086              		.loc 20 1574 9 is_stmt 1 view .LVU1410
1576:Veno-Echo.cpp ****             {
 5087              		.loc 20 1576 13 view .LVU1411
 5088 00da DFED1D7A 		vldr.32	s15, .L296+48
 5089 00de B4EEE78A 		vcmpe.f32	s16, s15
 5090 00e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5091 00e6 0FD5     		bpl	.L295
1578:Veno-Echo.cpp ****             }
 5092              		.loc 20 1578 17 view .LVU1412
1578:Veno-Echo.cpp ****             }
 5093              		.loc 20 1578 29 is_stmt 0 view .LVU1413
 5094 00e8 1A4B     		ldr	r3, .L296+52
 5095 00ea 0022     		movs	r2, #0
 5096 00ec 1A70     		strb	r2, [r3]
 5097              	.L285:
1588:Veno-Echo.cpp ****             save_flag = true;
 5098              		.loc 20 1588 13 is_stmt 1 view .LVU1414
1588:Veno-Echo.cpp ****             save_flag = true;
 5099              		.loc 20 1588 39 is_stmt 0 view .LVU1415
 5100 00ee 1A49     		ldr	r1, .L296+56
 5101              	.LBB1398:
 5102              	.LBB1399:
 5103              	.LBB1400:
 5104              	.LBB1401:
 5105              	.LBB1402:
 5106              		.loc 22 397 18 view .LVU1416
 5107 00f0 0122     		movs	r2, #1
 5108 00f2 1A4B     		ldr	r3, .L296+60
 5109              	.LBE1402:
 5110              	.LBE1401:
 5111              	.LBE1400:
 5112              	.LBE1399:
 5113              	.LBE1398:
1588:Veno-Echo.cpp ****             save_flag = true;
 5114              		.loc 20 1588 39 view .LVU1417
 5115 00f4 81ED078A 		vstr.32	s16, [r1, #28]
1589:Veno-Echo.cpp ****         }  
 5116              		.loc 20 1589 13 is_stmt 1 view .LVU1418
 5117              	.LVL257:
 5118              	.LBB1407:
 5119              	.LBI1398:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 5120              		.loc 23 80 5 view .LVU1419
 5121              	.LBB1406:
 5122              		.loc 23 81 7 view .LVU1420
 5123              	.LBB1405:
 5124              	.LBI1400:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 206


 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 5125              		.loc 22 288 7 view .LVU1421
 5126              	.LBB1404:
 5127              	.LBI1401:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 5128              		.loc 22 390 7 view .LVU1422
 5129              	.LBB1403:
 5130              		.loc 22 397 18 is_stmt 0 view .LVU1423
 5131 00f8 BFF35B8F 		dmb	ish
 5132 00fc 1A70     		strb	r2, [r3]
 5133 00fe BFF35B8F 		dmb	ish
 5134              	.LVL258:
 5135              		.loc 22 397 18 view .LVU1424
 5136              	.LBE1403:
 5137              	.LBE1404:
 5138              	.LBE1405:
 5139              	.LBE1406:
 5140              	.LBE1407:
 5141              	.LBE1409:
 5142              	.LBE1414:
1592:Veno-Echo.cpp **** 
 5143              		.loc 20 1592 1 view .LVU1425
 5144 0102 BDEC028B 		vldm	sp!, {d8}
 5145              		.cfi_remember_state
 5146              		.cfi_restore 80
 5147              		.cfi_restore 81
 5148              		.cfi_def_cfa_offset 8
 5149 0106 10BD     		pop	{r4, pc}
 5150              	.L295:
 5151              		.cfi_restore_state
 5152              	.LBB1415:
 5153              	.LBB1410:
1580:Veno-Echo.cpp ****             {
 5154              		.loc 20 1580 18 is_stmt 1 view .LVU1426
 5155 0108 DFED157A 		vldr.32	s15, .L296+64
 5156 010c B4EEE78A 		vcmpe.f32	s16, s15
 5157 0110 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5158 0114 EBDD     		ble	.L285
1582:Veno-Echo.cpp ****             }
 5159              		.loc 20 1582 17 view .LVU1427
1582:Veno-Echo.cpp ****             }
 5160              		.loc 20 1582 29 is_stmt 0 view .LVU1428
 5161 0116 0F4B     		ldr	r3, .L296+52
 5162 0118 0122     		movs	r2, #1
 5163 011a 1A70     		strb	r2, [r3]
 5164 011c E7E7     		b	.L285
 5165              	.L297:
 5166 011e 00BF     		.align	2
 5167              	.L296:
 5168 0120 18000000 		.word	.LANCHOR4+24
 5169 0124 00000000 		.word	.LANCHOR7
 5170 0128 00000000 		.word	.LANCHOR77
 5171 012c 00000000 		.word	.LANCHOR78
 5172 0130 00000000 		.word	.LANCHOR79
 5173 0134 00000000 		.word	.LANCHOR84
 5174 0138 00000000 		.word	0
 5175 013c 00000000 		.word	.LANCHOR80
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 207


 5176 0140 6F12033D 		.word	1023611503
 5177 0144 00000000 		.word	.LANCHOR81
 5178 0148 00000000 		.word	.LANCHOR82
 5179 014c 0AD7A33B 		.word	1000593162
 5180 0150 6666E63E 		.word	1055286886
 5181 0154 00000000 		.word	.LANCHOR83
 5182 0158 00000000 		.word	.LANCHOR15
 5183 015c 00000000 		.word	.LANCHOR16
 5184 0160 CDCC0C3F 		.word	1057803469
 5185              	.LBE1410:
 5186              	.LBE1415:
 5187              		.cfi_endproc
 5188              	.LFE4325:
 5190              		.section	.text._Z8GetModCVv,"ax",%progbits
 5191              		.align	1
 5192              		.p2align 2,,3
 5193              		.global	_Z8GetModCVv
 5194              		.syntax unified
 5195              		.thumb
 5196              		.thumb_func
 5197              		.fpu fpv5-d16
 5199              	_Z8GetModCVv:
 5200              	.LFB4326:
1595:Veno-Echo.cpp ****     //get modulation CV input
 5201              		.loc 20 1595 1 is_stmt 1 view -0
 5202              		.cfi_startproc
 5203              		@ args = 0, pretend = 0, frame = 0
 5204              		@ frame_needed = 0, uses_anonymous_args = 0
1597:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 5205              		.loc 20 1597 5 view .LVU1430
1595:Veno-Echo.cpp ****     //get modulation CV input
 5206              		.loc 20 1595 1 is_stmt 0 view .LVU1431
 5207 0000 08B5     		push	{r3, lr}
 5208              		.cfi_def_cfa_offset 8
 5209              		.cfi_offset 3, -8
 5210              		.cfi_offset 14, -4
1597:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 5211              		.loc 20 1597 30 view .LVU1432
 5212 0002 0621     		movs	r1, #6
 5213 0004 0648     		ldr	r0, .L300
 5214 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 5215              	.LVL259:
 5216 000a 0020     		movs	r0, #0
 5217 000c 9FED051A 		vldr.32	s2, .L300+4
 5218 0010 DFED050A 		vldr.32	s1, .L300+8
 5219 0014 FFF7FEFF 		bl	_Z5scalefff9CurveType
 5220              	.LVL260:
1597:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 5221              		.loc 20 1597 23 view .LVU1433
 5222 0018 044B     		ldr	r3, .L300+12
 5223 001a 83ED000A 		vstr.32	s0, [r3]
1599:Veno-Echo.cpp **** 
 5224              		.loc 20 1599 1 view .LVU1434
 5225 001e 08BD     		pop	{r3, pc}
 5226              	.L301:
 5227              		.align	2
 5228              	.L300:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 208


 5229 0020 18000000 		.word	.LANCHOR4+24
 5230 0024 00004843 		.word	1128792064
 5231 0028 000048C3 		.word	3276275712
 5232 002c 00000000 		.word	.LANCHOR85
 5233              		.cfi_endproc
 5234              	.LFE4326:
 5236              		.section	.text._Z10Update_Modv,"ax",%progbits
 5237              		.align	1
 5238              		.p2align 2,,3
 5239              		.global	_Z10Update_Modv
 5240              		.syntax unified
 5241              		.thumb
 5242              		.thumb_func
 5243              		.fpu fpv5-d16
 5245              	_Z10Update_Modv:
 5246              	.LFB4327:
1602:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 5247              		.loc 20 1602 1 is_stmt 1 view -0
 5248              		.cfi_startproc
 5249              		@ args = 0, pretend = 0, frame = 0
 5250              		@ frame_needed = 0, uses_anonymous_args = 0
1603:Veno-Echo.cpp ****     static float modulation_CV{};
 5251              		.loc 20 1603 5 view .LVU1436
1604:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
 5252              		.loc 20 1604 5 view .LVU1437
1605:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 5253              		.loc 20 1605 5 view .LVU1438
 5254              	.LVL261:
 5255              	.LBB1416:
 5256              	.LBI1416:
 135:../DaisySP/Source/Utility/dsp.h **** {
 5257              		.loc 25 135 13 view .LVU1439
 5258              	.LBB1417:
 5259              		.loc 25 137 5 view .LVU1440
 5260              	.LBE1417:
 5261              	.LBE1416:
1602:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 5262              		.loc 20 1602 1 is_stmt 0 view .LVU1441
 5263 0000 38B5     		push	{r3, r4, r5, lr}
 5264              		.cfi_def_cfa_offset 16
 5265              		.cfi_offset 3, -16
 5266              		.cfi_offset 4, -12
 5267              		.cfi_offset 5, -8
 5268              		.cfi_offset 14, -4
1605:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 5269              		.loc 20 1605 13 view .LVU1442
 5270 0002 154A     		ldr	r2, .L304
 5271              	.LBB1424:
 5272              	.LBB1418:
 5273              		.loc 25 137 9 view .LVU1443
 5274 0004 154C     		ldr	r4, .L304+4
 5275              	.LBE1418:
 5276              	.LBE1424:
 5277              	.LBB1425:
 5278              	.LBB1426:
 5279 0006 164D     		ldr	r5, .L304+8
 5280              	.LBE1426:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 209


 5281              	.LBE1425:
1606:Veno-Echo.cpp ****     //calculate InternalMod
 5282              		.loc 20 1606 13 view .LVU1444
 5283 0008 164B     		ldr	r3, .L304+12
 5284              	.LBB1432:
 5285              	.LBB1419:
 5286              		.loc 25 137 9 view .LVU1445
 5287 000a 94ED007A 		vldr.32	s14, [r4]
 5288              	.LBE1419:
 5289              	.LBE1432:
 5290              	.LBB1433:
 5291              	.LBB1427:
 5292 000e D5ED007A 		vldr.32	s15, [r5]
 5293              	.LBE1427:
 5294              	.LBE1433:
 5295              	.LBB1434:
 5296              	.LBB1420:
 5297              		.loc 25 137 24 view .LVU1446
 5298 0012 92ED006A 		vldr.32	s12, [r2]
 5299              	.LBE1420:
 5300              	.LBE1434:
 5301              	.LBB1435:
 5302              	.LBB1428:
 5303 0016 D3ED006A 		vldr.32	s13, [r3]
 5304              	.LBE1428:
 5305              	.LBE1435:
 5306              	.LBB1436:
 5307              	.LBB1421:
 5308 001a 36EE476A 		vsub.f32	s12, s12, s14
 5309              		.loc 25 137 9 view .LVU1447
 5310 001e DFED125A 		vldr.32	s11, .L304+16
 5311              	.LBE1421:
 5312              	.LBE1436:
 5313              	.LBB1437:
 5314              	.LBB1429:
 5315              		.loc 25 137 24 view .LVU1448
 5316 0022 76EEE76A 		vsub.f32	s13, s13, s15
 5317              	.LBE1429:
 5318              	.LBE1437:
1608:Veno-Echo.cpp ****     //apply modulation to delay lines
 5319              		.loc 20 1608 34 view .LVU1449
 5320 0026 1148     		ldr	r0, .L304+20
 5321              	.LBB1438:
 5322              	.LBB1422:
 5323              		.loc 25 137 9 view .LVU1450
 5324 0028 A6EE257A 		vfma.f32	s14, s12, s11
 5325              	.LBE1422:
 5326              	.LBE1438:
 5327              	.LBB1439:
 5328              	.LBB1430:
 5329 002c E6EEA57A 		vfma.f32	s15, s13, s11
 5330              	.LBE1430:
 5331              	.LBE1439:
 5332              	.LBB1440:
 5333              	.LBB1423:
 5334 0030 84ED007A 		vstr.32	s14, [r4]
 5335              	.LVL262:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 210


 5336              		.loc 25 137 9 view .LVU1451
 5337              	.LBE1423:
 5338              	.LBE1440:
1606:Veno-Echo.cpp ****     //calculate InternalMod
 5339              		.loc 20 1606 5 is_stmt 1 view .LVU1452
 5340              	.LBB1441:
 5341              	.LBI1425:
 135:../DaisySP/Source/Utility/dsp.h **** {
 5342              		.loc 25 135 13 view .LVU1453
 5343              	.LBB1431:
 5344              		.loc 25 137 5 view .LVU1454
 5345              		.loc 25 137 9 is_stmt 0 view .LVU1455
 5346 0034 C5ED007A 		vstr.32	s15, [r5]
 5347              	.LVL263:
 5348              		.loc 25 137 9 view .LVU1456
 5349              	.LBE1431:
 5350              	.LBE1441:
1608:Veno-Echo.cpp ****     //apply modulation to delay lines
 5351              		.loc 20 1608 5 is_stmt 1 view .LVU1457
1608:Veno-Echo.cpp ****     //apply modulation to delay lines
 5352              		.loc 20 1608 34 is_stmt 0 view .LVU1458
 5353 0038 FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 5354              	.LVL264:
1610:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5355              		.loc 20 1610 5 is_stmt 1 view .LVU1459
1610:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5356              		.loc 20 1610 40 is_stmt 0 view .LVU1460
 5357 003c 95ED007A 		vldr.32	s14, [r5]
 5358 0040 D4ED007A 		vldr.32	s15, [r4]
 5359              	.LBB1442:
 5360              	.LBB1443:
  51:DelayMulti.h  **** 
  52:DelayMulti.h  **** //functions:
  53:DelayMulti.h  **** 
  54:DelayMulti.h  **** //initialises delay class
  55:DelayMulti.h  **** void init(dsy_gpio_pin ledpin, float samplerate);
  56:DelayMulti.h  **** 
  57:DelayMulti.h  **** //Updates delay time from pot value and base tempo (set ratio)
  58:DelayMulti.h  **** bool SetDelayTime(float delaytime_pot, bool syncMode);
  59:DelayMulti.h  **** 
  60:DelayMulti.h  **** //Updates xfades, updates delayline with delayTime[] + modulation and 
  61:DelayMulti.h  **** //returns combined output from delay heads, and updates LEDs. 
  62:DelayMulti.h  **** //Call at audio samplerate
  63:DelayMulti.h  **** const float& GetOutput();
  64:DelayMulti.h  **** 
  65:DelayMulti.h  **** //Writes to delayline
  66:DelayMulti.h  **** void Write(const float& in);
  67:DelayMulti.h  **** 
  68:DelayMulti.h  **** //this must be called once per sample
  69:DelayMulti.h  **** void SetModulation(const float& mod){mod_ = mod;}
 5361              		.loc 17 69 43 view .LVU1461
 5362 0044 0A4A     		ldr	r2, .L304+24
 5363              	.LBE1443:
 5364              	.LBE1442:
1610:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5365              		.loc 20 1610 40 view .LVU1462
 5366 0046 E0EE077A 		vfma.f32	s15, s0, s14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 211


 5367              	.LBB1446:
 5368              	.LBI1442:
 5369              		.loc 17 69 6 is_stmt 1 view .LVU1463
 5370              	.LVL265:
 5371              	.LBB1444:
 5372              		.loc 17 69 38 view .LVU1464
 5373              	.LBE1444:
 5374              	.LBE1446:
 5375              	.LBB1447:
 5376              	.LBB1448:
 5377              		.loc 17 69 43 is_stmt 0 view .LVU1465
 5378 004a 0A4B     		ldr	r3, .L304+28
 5379              	.LBE1448:
 5380              	.LBE1447:
 5381              	.LBB1450:
 5382              	.LBB1445:
 5383 004c C2ED3E7A 		vstr.32	s15, [r2, #248]
 5384              	.LBE1445:
 5385              	.LBE1450:
1611:Veno-Echo.cpp **** }
 5386              		.loc 20 1611 5 is_stmt 1 view .LVU1466
 5387              	.LVL266:
 5388              	.LBB1451:
 5389              	.LBI1447:
 5390              		.loc 17 69 6 view .LVU1467
 5391              	.LBB1449:
 5392              		.loc 17 69 38 view .LVU1468
 5393              		.loc 17 69 43 is_stmt 0 view .LVU1469
 5394 0050 C3ED3E7A 		vstr.32	s15, [r3, #248]
 5395              	.LBE1449:
 5396              	.LBE1451:
1612:Veno-Echo.cpp **** 
 5397              		.loc 20 1612 1 view .LVU1470
 5398 0054 38BD     		pop	{r3, r4, r5, pc}
 5399              	.L305:
 5400 0056 00BF     		.align	2
 5401              	.L304:
 5402 0058 00000000 		.word	.LANCHOR85
 5403 005c 00000000 		.word	.LANCHOR86
 5404 0060 00000000 		.word	.LANCHOR87
 5405 0064 00000000 		.word	.LANCHOR68
 5406 0068 0AD7233C 		.word	1008981770
 5407 006c 00000000 		.word	.LANCHOR76
 5408 0070 00000000 		.word	.LANCHOR0
 5409 0074 00000000 		.word	.LANCHOR1
 5410              		.cfi_endproc
 5411              	.LFE4327:
 5413              		.section	.text._Z11UpdateClockv,"ax",%progbits
 5414              		.align	1
 5415              		.p2align 2,,3
 5416              		.global	_Z11UpdateClockv
 5417              		.syntax unified
 5418              		.thumb
 5419              		.thumb_func
 5420              		.fpu fpv5-d16
 5422              	_Z11UpdateClockv:
 5423              	.LFB4328:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 212


1615:Veno-Echo.cpp ****     static int divCounter{};
 5424              		.loc 20 1615 1 is_stmt 1 view -0
 5425              		.cfi_startproc
 5426              		@ args = 0, pretend = 0, frame = 0
 5427              		@ frame_needed = 0, uses_anonymous_args = 0
1616:Veno-Echo.cpp ****     ClockIn.Debounce();
 5428              		.loc 20 1616 5 view .LVU1472
1617:Veno-Echo.cpp **** 
 5429              		.loc 20 1617 5 view .LVU1473
1615:Veno-Echo.cpp ****     static int divCounter{};
 5430              		.loc 20 1615 1 is_stmt 0 view .LVU1474
 5431 0000 10B5     		push	{r4, lr}
 5432              		.cfi_def_cfa_offset 8
 5433              		.cfi_offset 4, -8
 5434              		.cfi_offset 14, -4
1617:Veno-Echo.cpp **** 
 5435              		.loc 20 1617 21 view .LVU1475
 5436 0002 104C     		ldr	r4, .L315
 5437 0004 2046     		mov	r0, r4
 5438 0006 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 5439              	.LVL267:
1620:Veno-Echo.cpp ****     {   
 5440              		.loc 20 1620 5 is_stmt 1 view .LVU1476
  42:../libdaisy/src/hid/switch.h **** 
  43:../libdaisy/src/hid/switch.h ****     /** 
  44:../libdaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  45:../libdaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  46:../libdaisy/src/hid/switch.h ****     \param update_rate the rate at which the Debounce() function will be called. (used for timing).
  47:../libdaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  48:../libdaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  49:../libdaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  50:../libdaisy/src/hid/switch.h ****     */
  51:../libdaisy/src/hid/switch.h ****     void
  52:../libdaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  53:../libdaisy/src/hid/switch.h **** 
  54:../libdaisy/src/hid/switch.h ****     /**
  55:../libdaisy/src/hid/switch.h ****        Simplified Init.
  56:../libdaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  57:../libdaisy/src/hid/switch.h ****        \param update_rate the rate at which the Debounce() function will be called. (used for timin
  58:../libdaisy/src/hid/switch.h ****     */
  59:../libdaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate);
  60:../libdaisy/src/hid/switch.h **** 
  61:../libdaisy/src/hid/switch.h ****     /** 
  62:../libdaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  63:../libdaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  64:../libdaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  65:../libdaisy/src/hid/switch.h ****     */
  66:../libdaisy/src/hid/switch.h ****     void Debounce();
  67:../libdaisy/src/hid/switch.h **** 
  68:../libdaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  69:../libdaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return state_ == 0x7f; }
 5441              		.loc 1 69 38 view .LVU1477
1620:Veno-Echo.cpp ****     {   
 5442              		.loc 20 1620 5 is_stmt 0 view .LVU1478
 5443 000a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 5444 000c 7F2B     		cmp	r3, #127
 5445 000e 00D0     		beq	.L314
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 213


 5446              	.L306:
1635:Veno-Echo.cpp **** 
 5447              		.loc 20 1635 1 view .LVU1479
 5448 0010 10BD     		pop	{r4, pc}
 5449              	.L314:
1622:Veno-Echo.cpp ****         //tempoLED_BASE.resetPhase();
 5450              		.loc 20 1622 9 is_stmt 1 view .LVU1480
1624:Veno-Echo.cpp ****         {
 5451              		.loc 20 1624 9 view .LVU1481
1626:Veno-Echo.cpp ****             {
 5452              		.loc 20 1626 13 view .LVU1482
1626:Veno-Echo.cpp ****             {
 5453              		.loc 20 1626 29 is_stmt 0 view .LVU1483
 5454 0012 0D48     		ldr	r0, .L315+4
 5455 0014 FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 5456              	.LVL268:
1626:Veno-Echo.cpp ****             {
 5457              		.loc 20 1626 13 view .LVU1484
 5458 0018 0028     		cmp	r0, #0
 5459 001a F9D0     		beq	.L306
 5460              	.LBB1461:
 5461              	.LBI1461:
1614:Veno-Echo.cpp **** {
 5462              		.loc 20 1614 6 is_stmt 1 view .LVU1485
 5463              	.LBB1462:
1628:Veno-Echo.cpp ****                 AltControls.tapLength = BaseTempo.getTapLength();
 5464              		.loc 20 1628 17 view .LVU1486
1628:Veno-Echo.cpp ****                 AltControls.tapLength = BaseTempo.getTapLength();
 5465              		.loc 20 1628 39 is_stmt 0 view .LVU1487
 5466 001c 0A48     		ldr	r0, .L315+4
 5467 001e FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 5468              	.LVL269:
 5469 0022 0A48     		ldr	r0, .L315+8
 5470 0024 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 5471              	.LVL270:
1629:Veno-Echo.cpp ****                 save_flag = true;
 5472              		.loc 20 1629 17 is_stmt 1 view .LVU1488
1629:Veno-Echo.cpp ****                 save_flag = true;
 5473              		.loc 20 1629 63 is_stmt 0 view .LVU1489
 5474 0028 0748     		ldr	r0, .L315+4
 5475 002a FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 5476              	.LVL271:
1629:Veno-Echo.cpp ****                 save_flag = true;
 5477              		.loc 20 1629 39 view .LVU1490
 5478 002e 0849     		ldr	r1, .L315+12
 5479              	.LBB1463:
 5480              	.LBB1464:
 5481              	.LBB1465:
 5482              	.LBB1466:
 5483              		.loc 22 397 18 view .LVU1491
 5484 0030 0122     		movs	r2, #1
 5485 0032 084B     		ldr	r3, .L315+16
 5486              	.LBE1466:
 5487              	.LBE1465:
 5488              	.LBE1464:
 5489              	.LBE1463:
1629:Veno-Echo.cpp ****                 save_flag = true;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 214


 5490              		.loc 20 1629 39 view .LVU1492
 5491 0034 81ED080A 		vstr.32	s0, [r1, #32]
1630:Veno-Echo.cpp ****             }
 5492              		.loc 20 1630 17 is_stmt 1 view .LVU1493
 5493              	.LVL272:
 5494              	.LBB1470:
 5495              	.LBI1463:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 5496              		.loc 23 80 5 view .LVU1494
 5497              	.LBE1470:
 5498              	.LBE1462:
 5499              	.LBE1461:
 5500              		.loc 23 81 7 view .LVU1495
 5501              	.LBB1473:
 5502              	.LBB1472:
 5503              	.LBB1471:
 5504              	.LBB1469:
 5505              	.LBI1464:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 5506              		.loc 22 288 7 view .LVU1496
 5507              	.LBB1468:
 5508              	.LBI1465:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 5509              		.loc 22 390 7 view .LVU1497
 5510              	.LBB1467:
 5511              		.loc 22 397 18 is_stmt 0 view .LVU1498
 5512 0038 BFF35B8F 		dmb	ish
 5513 003c 1A70     		strb	r2, [r3]
 5514 003e BFF35B8F 		dmb	ish
 5515              	.LVL273:
 5516              		.loc 22 397 18 view .LVU1499
 5517              	.LBE1467:
 5518              	.LBE1468:
 5519              	.LBE1469:
 5520              	.LBE1471:
 5521              	.LBE1472:
 5522              	.LBE1473:
1635:Veno-Echo.cpp **** 
 5523              		.loc 20 1635 1 view .LVU1500
 5524 0042 10BD     		pop	{r4, pc}
 5525              	.L316:
 5526              		.align	2
 5527              	.L315:
 5528 0044 00000000 		.word	.LANCHOR88
 5529 0048 00000000 		.word	.LANCHOR26
 5530 004c 00000000 		.word	.LANCHOR89
 5531 0050 00000000 		.word	.LANCHOR15
 5532 0054 00000000 		.word	.LANCHOR16
 5533              		.cfi_endproc
 5534              	.LFE4328:
 5536              		.section	.text._Z21Update_DelayBaseTempov,"ax",%progbits
 5537              		.align	1
 5538              		.p2align 2,,3
 5539              		.global	_Z21Update_DelayBaseTempov
 5540              		.syntax unified
 5541              		.thumb
 5542              		.thumb_func
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 215


 5543              		.fpu fpv5-d16
 5545              	_Z21Update_DelayBaseTempov:
 5546              	.LFB4330:
1788:Veno-Echo.cpp ****     delayL.SetBaseTempo(BaseTempo.getDelayLength());
 5547              		.loc 20 1788 1 is_stmt 1 view -0
 5548              		.cfi_startproc
 5549              		@ args = 0, pretend = 0, frame = 0
 5550              		@ frame_needed = 0, uses_anonymous_args = 0
1789:Veno-Echo.cpp ****     delayR.SetBaseTempo(BaseTempo.getDelayLength());
 5551              		.loc 20 1789 5 view .LVU1502
1788:Veno-Echo.cpp ****     delayL.SetBaseTempo(BaseTempo.getDelayLength());
 5552              		.loc 20 1788 1 is_stmt 0 view .LVU1503
 5553 0000 08B5     		push	{r3, lr}
 5554              		.cfi_def_cfa_offset 8
 5555              		.cfi_offset 3, -8
 5556              		.cfi_offset 14, -4
1789:Veno-Echo.cpp ****     delayR.SetBaseTempo(BaseTempo.getDelayLength());
 5557              		.loc 20 1789 49 view .LVU1504
 5558 0002 0648     		ldr	r0, .L319
 5559 0004 FFF7FEFF 		bl	_ZN8Taptempo14getDelayLengthEv
 5560              	.LVL274:
 5561              	.LBB1474:
 5562              	.LBI1474:
  70:DelayMulti.h  **** //void SetSync(const bool& syncMode){syncMode_ = syncMode;}
  71:DelayMulti.h  **** void SetBaseTempo(const float& tempo){baseTempo_ = tempo;}
 5563              		.loc 17 71 6 is_stmt 1 view .LVU1505
 5564              	.LBB1475:
 5565              		.loc 17 71 39 view .LVU1506
 5566              		.loc 17 71 50 is_stmt 0 view .LVU1507
 5567 0008 054B     		ldr	r3, .L319+4
 5568              	.LBE1475:
 5569              	.LBE1474:
1790:Veno-Echo.cpp **** }
 5570              		.loc 20 1790 49 view .LVU1508
 5571 000a 0448     		ldr	r0, .L319
 5572              	.LBB1477:
 5573              	.LBB1476:
 5574              		.loc 17 71 50 view .LVU1509
 5575 000c 83ED480A 		vstr.32	s0, [r3, #288]
 5576              	.LBE1476:
 5577              	.LBE1477:
1790:Veno-Echo.cpp **** }
 5578              		.loc 20 1790 5 is_stmt 1 view .LVU1510
1790:Veno-Echo.cpp **** }
 5579              		.loc 20 1790 49 is_stmt 0 view .LVU1511
 5580 0010 FFF7FEFF 		bl	_ZN8Taptempo14getDelayLengthEv
 5581              	.LVL275:
 5582              	.LBB1478:
 5583              	.LBI1478:
 5584              		.loc 17 71 6 is_stmt 1 view .LVU1512
 5585              	.LBB1479:
 5586              		.loc 17 71 39 view .LVU1513
 5587              		.loc 17 71 50 is_stmt 0 view .LVU1514
 5588 0014 034B     		ldr	r3, .L319+8
 5589 0016 83ED480A 		vstr.32	s0, [r3, #288]
 5590              	.LBE1479:
 5591              	.LBE1478:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 216


1791:Veno-Echo.cpp **** 
 5592              		.loc 20 1791 1 view .LVU1515
 5593 001a 08BD     		pop	{r3, pc}
 5594              	.L320:
 5595              		.align	2
 5596              	.L319:
 5597 001c 00000000 		.word	.LANCHOR26
 5598 0020 00000000 		.word	.LANCHOR0
 5599 0024 00000000 		.word	.LANCHOR1
 5600              		.cfi_endproc
 5601              	.LFE4330:
 5603              		.section	.text._Z21Update_DelayTempoLEDsv,"ax",%progbits
 5604              		.align	1
 5605              		.p2align 2,,3
 5606              		.global	_Z21Update_DelayTempoLEDsv
 5607              		.syntax unified
 5608              		.thumb
 5609              		.thumb_func
 5610              		.fpu fpv5-d16
 5612              	_Z21Update_DelayTempoLEDsv:
 5613              	.LFB4331:
1794:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
 5614              		.loc 20 1794 1 is_stmt 1 view -0
 5615              		.cfi_startproc
 5616              		@ args = 0, pretend = 0, frame = 0
 5617              		@ frame_needed = 0, uses_anonymous_args = 0
1795:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
 5618              		.loc 20 1795 5 view .LVU1517
1794:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
 5619              		.loc 20 1794 1 is_stmt 0 view .LVU1518
 5620 0000 70B5     		push	{r4, r5, r6, lr}
 5621              		.cfi_def_cfa_offset 16
 5622              		.cfi_offset 4, -16
 5623              		.cfi_offset 5, -12
 5624              		.cfi_offset 6, -8
 5625              		.cfi_offset 14, -4
1795:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
 5626              		.loc 20 1795 26 view .LVU1519
 5627 0002 0C4E     		ldr	r6, .L323
 5628 0004 0C4D     		ldr	r5, .L323+4
1796:Veno-Echo.cpp ****     DELAYL_DEBUG = delayL.GetDelayTime();
 5629              		.loc 20 1796 26 view .LVU1520
 5630 0006 0D4C     		ldr	r4, .L323+8
1795:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
 5631              		.loc 20 1795 26 view .LVU1521
 5632 0008 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 5633 000a 2846     		mov	r0, r5
 5634 000c FFF7FEFF 		bl	_ZN10DelayMulti14updateTempoLEDEb
 5635              	.LVL276:
1796:Veno-Echo.cpp ****     DELAYL_DEBUG = delayL.GetDelayTime();
 5636              		.loc 20 1796 5 is_stmt 1 view .LVU1522
1796:Veno-Echo.cpp ****     DELAYL_DEBUG = delayL.GetDelayTime();
 5637              		.loc 20 1796 26 is_stmt 0 view .LVU1523
 5638 0010 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 5639 0012 2046     		mov	r0, r4
 5640 0014 FFF7FEFF 		bl	_ZN10DelayMulti14updateTempoLEDEb
 5641              	.LVL277:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 217


1797:Veno-Echo.cpp ****     DELAYR_DEBUG = delayR.GetDelayTime();
 5642              		.loc 20 1797 5 is_stmt 1 view .LVU1524
1797:Veno-Echo.cpp ****     DELAYR_DEBUG = delayR.GetDelayTime();
 5643              		.loc 20 1797 39 is_stmt 0 view .LVU1525
 5644 0018 2846     		mov	r0, r5
 5645 001a FFF7FEFF 		bl	_ZN10DelayMulti12GetDelayTimeEv
 5646              	.LVL278:
1797:Veno-Echo.cpp ****     DELAYR_DEBUG = delayR.GetDelayTime();
 5647              		.loc 20 1797 18 view .LVU1526
 5648 001e 084B     		ldr	r3, .L323+12
1798:Veno-Echo.cpp **** }
 5649              		.loc 20 1798 39 view .LVU1527
 5650 0020 2046     		mov	r0, r4
1797:Veno-Echo.cpp ****     DELAYR_DEBUG = delayR.GetDelayTime();
 5651              		.loc 20 1797 18 view .LVU1528
 5652 0022 83ED000A 		vstr.32	s0, [r3]
1798:Veno-Echo.cpp **** }
 5653              		.loc 20 1798 5 is_stmt 1 view .LVU1529
1798:Veno-Echo.cpp **** }
 5654              		.loc 20 1798 39 is_stmt 0 view .LVU1530
 5655 0026 FFF7FEFF 		bl	_ZN10DelayMulti12GetDelayTimeEv
 5656              	.LVL279:
1798:Veno-Echo.cpp **** }
 5657              		.loc 20 1798 18 view .LVU1531
 5658 002a 064B     		ldr	r3, .L323+16
 5659 002c 83ED000A 		vstr.32	s0, [r3]
1799:Veno-Echo.cpp **** 
 5660              		.loc 20 1799 1 view .LVU1532
 5661 0030 70BD     		pop	{r4, r5, r6, pc}
 5662              	.L324:
 5663 0032 00BF     		.align	2
 5664              	.L323:
 5665 0034 00000000 		.word	.LANCHOR12
 5666 0038 00000000 		.word	.LANCHOR0
 5667 003c 00000000 		.word	.LANCHOR1
 5668 0040 00000000 		.word	.LANCHOR90
 5669 0044 00000000 		.word	.LANCHOR91
 5670              		.cfi_endproc
 5671              	.LFE4331:
 5673              		.section	.text._Z19Update_BaseTempoLEDv,"ax",%progbits
 5674              		.align	1
 5675              		.p2align 2,,3
 5676              		.global	_Z19Update_BaseTempoLEDv
 5677              		.syntax unified
 5678              		.thumb
 5679              		.thumb_func
 5680              		.fpu fpv5-d16
 5682              	_Z19Update_BaseTempoLEDv:
 5683              	.LFB4332:
1802:Veno-Echo.cpp ****     tempoLED_BASE.update();
 5684              		.loc 20 1802 1 is_stmt 1 view -0
 5685              		.cfi_startproc
 5686              		@ args = 0, pretend = 0, frame = 0
 5687              		@ frame_needed = 0, uses_anonymous_args = 0
1803:Veno-Echo.cpp **** 
 5688              		.loc 20 1803 5 view .LVU1534
1803:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 218


 5689              		.loc 20 1803 25 is_stmt 0 view .LVU1535
 5690 0000 1848     		ldr	r0, .L329
1802:Veno-Echo.cpp ****     tempoLED_BASE.update();
 5691              		.loc 20 1802 1 view .LVU1536
 5692 0002 08B5     		push	{r3, lr}
 5693              		.cfi_def_cfa_offset 8
 5694              		.cfi_offset 3, -8
 5695              		.cfi_offset 14, -4
1803:Veno-Echo.cpp **** 
 5696              		.loc 20 1803 25 view .LVU1537
 5697 0004 FFF7FEFF 		bl	_ZN8TempoLED6updateEv
 5698              	.LVL280:
1805:Veno-Echo.cpp **** 
 5699              		.loc 20 1805 5 is_stmt 1 view .LVU1538
1807:Veno-Echo.cpp ****     {
 5700              		.loc 20 1807 5 view .LVU1539
1807:Veno-Echo.cpp ****     {
 5701              		.loc 20 1807 27 is_stmt 0 view .LVU1540
 5702 0008 1648     		ldr	r0, .L329
 5703 000a FFF7FEFF 		bl	_ZN8TempoLED5isEOCEv
 5704              	.LVL281:
1807:Veno-Echo.cpp ****     {
 5705              		.loc 20 1807 5 view .LVU1541
 5706 000e D0B9     		cbnz	r0, .L326
 5707 0010 154B     		ldr	r3, .L329+4
 5708 0012 1B68     		ldr	r3, [r3]
 5709              	.L327:
1812:Veno-Echo.cpp ****     //update base phase for both delay lines
 5710              		.loc 20 1812 5 is_stmt 1 view .LVU1542
 5711              	.LVL282:
 5712              	.LBB1480:
 5713              	.LBI1480:
  71:LEDs.h        **** 
 5714              		.loc 14 71 7 view .LVU1543
 5715              	.LBB1481:
  71:LEDs.h        **** 
 5716              		.loc 14 71 20 view .LVU1544
  71:LEDs.h        **** 
 5717              		.loc 14 71 20 is_stmt 0 view .LVU1545
 5718              	.LBE1481:
 5719              	.LBE1480:
  17:oscillator_p.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:oscillator_p.h ****     */
  19:oscillator_p.h ****     enum
  20:oscillator_p.h ****     {
  21:oscillator_p.h ****         WAVE_SIN,
  22:oscillator_p.h ****         WAVE_TRI,
  23:oscillator_p.h ****         WAVE_SAW,
  24:oscillator_p.h ****         WAVE_RAMP,
  25:oscillator_p.h ****         WAVE_SQUARE,
  26:oscillator_p.h ****         WAVE_POLYBLEP_TRI,
  27:oscillator_p.h ****         WAVE_POLYBLEP_SAW,
  28:oscillator_p.h ****         WAVE_POLYBLEP_SQUARE,
  29:oscillator_p.h ****         WAVE_LAST,
  30:oscillator_p.h ****     };
  31:oscillator_p.h **** 
  32:oscillator_p.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 219


  33:oscillator_p.h ****     /** Initializes the Oscillator
  34:oscillator_p.h **** 
  35:oscillator_p.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:oscillator_p.h **** 
  37:oscillator_p.h ****         Defaults:
  38:oscillator_p.h ****         - freq_ = 100 Hz
  39:oscillator_p.h ****         - amp_ = 0.5
  40:oscillator_p.h ****         - waveform_ = sine wave.
  41:oscillator_p.h ****     */
  42:oscillator_p.h ****     void Init(float sample_rate)
  43:oscillator_p.h ****     {
  44:oscillator_p.h ****         sr_        = sample_rate;
  45:oscillator_p.h ****         sr_recip_  = 1.0f / sample_rate;
  46:oscillator_p.h ****         freq_      = 100.0f;
  47:oscillator_p.h ****         amp_       = 0.5f;
  48:oscillator_p.h ****         phase_     = 0.0f;
  49:oscillator_p.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:oscillator_p.h ****         waveform_  = WAVE_SIN;
  51:oscillator_p.h ****         eoc_       = true;
  52:oscillator_p.h ****         eor_       = true;
  53:oscillator_p.h ****     }
  54:oscillator_p.h **** 
  55:oscillator_p.h **** 
  56:oscillator_p.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:oscillator_p.h ****     */
  58:oscillator_p.h ****     inline void SetFreq(const float f)
  59:oscillator_p.h ****     {
  60:oscillator_p.h ****         freq_      = f;
  61:oscillator_p.h ****         phase_inc_ = CalcPhaseInc(f);
  62:oscillator_p.h ****     }
  63:oscillator_p.h **** 
  64:oscillator_p.h **** 
  65:oscillator_p.h ****     /** Sets the amplitude of the waveform.
  66:oscillator_p.h ****     */
  67:oscillator_p.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:oscillator_p.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:oscillator_p.h ****     */
  70:oscillator_p.h ****     inline void SetWaveform(const uint8_t wf)
  71:oscillator_p.h ****     {
  72:oscillator_p.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
  73:oscillator_p.h ****     }
  74:oscillator_p.h **** 
  75:oscillator_p.h ****     /** Returns true if cycle is at end of rise. Set during call to Process.
  76:oscillator_p.h ****     */
  77:oscillator_p.h ****     inline bool IsEOR() { return eor_; }
  78:oscillator_p.h **** 
  79:oscillator_p.h ****     /** Returns true if cycle is at end of cycle. Set during call to Process.
  80:oscillator_p.h ****     */
  81:oscillator_p.h ****     inline bool IsEOC() { return eoc_; }
  82:oscillator_p.h **** 
  83:oscillator_p.h ****     /** Returns true if cycle rising.
  84:oscillator_p.h ****     */
  85:oscillator_p.h ****     inline bool IsRising() { return phase_ < PI_F; }
  86:oscillator_p.h **** 
  87:oscillator_p.h ****     /** Returns true if cycle falling.
  88:oscillator_p.h ****     */
  89:oscillator_p.h ****     inline bool IsFalling() { return phase_ >= PI_F; }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 220


  90:oscillator_p.h **** 
  91:oscillator_p.h ****     //Returns phase angle
  92:oscillator_p.h ****     inline float GetPhase() { return phase_; }
 5720              		.loc 15 92 31 is_stmt 1 view .LVU1546
 5721              	.LBB1483:
 5722              	.LBB1482:
  71:LEDs.h        **** 
 5723              		.loc 14 71 41 is_stmt 0 view .LVU1547
 5724 0014 134A     		ldr	r2, .L329
 5725              	.LBE1482:
 5726              	.LBE1483:
1812:Veno-Echo.cpp ****     //update base phase for both delay lines
 5727              		.loc 20 1812 50 view .LVU1548
 5728 0016 B1EE086A 		vmov.f32	s12, #6.0e+0
1812:Veno-Echo.cpp ****     //update base phase for both delay lines
 5729              		.loc 20 1812 73 view .LVU1549
 5730 001a 07EE903A 		vmov	s15, r3	@ int
1812:Veno-Echo.cpp ****     //update base phase for both delay lines
 5731              		.loc 20 1812 55 view .LVU1550
 5732 001e DFED136A 		vldr.32	s13, .L329+8
1812:Veno-Echo.cpp ****     //update base phase for both delay lines
 5733              		.loc 20 1812 50 view .LVU1551
 5734 0022 D2ED0C5A 		vldr.32	s11, [r2, #48]
1812:Veno-Echo.cpp ****     //update base phase for both delay lines
 5735              		.loc 20 1812 73 view .LVU1552
 5736 0026 F8EEE77A 		vcvt.f32.s32	s15, s15
 5737              	.LBB1484:
 5738              	.LBB1485:
  72:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 5739              		.loc 17 72 54 view .LVU1553
 5740 002a 1149     		ldr	r1, .L329+12
 5741              	.LBE1485:
 5742              	.LBE1484:
1812:Veno-Echo.cpp ****     //update base phase for both delay lines
 5743              		.loc 20 1812 50 view .LVU1554
 5744 002c 85EE867A 		vdiv.f32	s14, s11, s12
 5745              	.LBB1487:
 5746              	.LBB1488:
 5747              		.loc 17 72 54 view .LVU1555
 5748 0030 104A     		ldr	r2, .L329+16
 5749              	.LBE1488:
 5750              	.LBE1487:
1816:Veno-Echo.cpp **** }
 5751              		.loc 20 1816 17 view .LVU1556
 5752 0032 114B     		ldr	r3, .L329+20
1812:Veno-Echo.cpp ****     //update base phase for both delay lines
 5753              		.loc 20 1812 55 view .LVU1557
 5754 0034 A7EEA67A 		vfma.f32	s14, s15, s13
 5755              	.LVL283:
1814:Veno-Echo.cpp ****     delayR.SetBasePhase( dividedPhase );
 5756              		.loc 20 1814 5 is_stmt 1 view .LVU1558
 5757              	.LBB1490:
 5758              	.LBI1484:
 5759              		.loc 17 72 6 view .LVU1559
 5760              	.LBB1486:
 5761              		.loc 17 72 43 view .LVU1560
 5762              		.loc 17 72 54 is_stmt 0 view .LVU1561
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 221


 5763 0038 81ED477A 		vstr.32	s14, [r1, #284]
 5764              	.LBE1486:
 5765              	.LBE1490:
1815:Veno-Echo.cpp ****     PHASE_DEBUG = dividedPhase;
 5766              		.loc 20 1815 5 is_stmt 1 view .LVU1562
 5767              	.LVL284:
 5768              	.LBB1491:
 5769              	.LBI1487:
 5770              		.loc 17 72 6 view .LVU1563
 5771              	.LBB1489:
 5772              		.loc 17 72 43 view .LVU1564
 5773              		.loc 17 72 54 is_stmt 0 view .LVU1565
 5774 003c 82ED477A 		vstr.32	s14, [r2, #284]
 5775              	.LBE1489:
 5776              	.LBE1491:
1816:Veno-Echo.cpp **** }
 5777              		.loc 20 1816 5 is_stmt 1 view .LVU1566
1816:Veno-Echo.cpp **** }
 5778              		.loc 20 1816 17 is_stmt 0 view .LVU1567
 5779 0040 83ED007A 		vstr.32	s14, [r3]
 5780              	.LVL285:
1817:Veno-Echo.cpp **** 
 5781              		.loc 20 1817 1 view .LVU1568
 5782 0044 08BD     		pop	{r3, pc}
 5783              	.LVL286:
 5784              	.L326:
1809:Veno-Echo.cpp ****     }
 5785              		.loc 20 1809 9 is_stmt 1 view .LVU1569
1809:Veno-Echo.cpp ****     }
 5786              		.loc 20 1809 38 is_stmt 0 view .LVU1570
 5787 0046 0849     		ldr	r1, .L329+4
1809:Veno-Echo.cpp ****     }
 5788              		.loc 20 1809 43 view .LVU1571
 5789 0048 0C4B     		ldr	r3, .L329+24
1809:Veno-Echo.cpp ****     }
 5790              		.loc 20 1809 38 view .LVU1572
 5791 004a 0A68     		ldr	r2, [r1]
 5792 004c 0132     		adds	r2, r2, #1
1809:Veno-Echo.cpp ****     }
 5793              		.loc 20 1809 43 view .LVU1573
 5794 004e 83FB0203 		smull	r0, r3, r3, r2
 5795 0052 A3EBE273 		sub	r3, r3, r2, asr #31
 5796 0056 03EB4303 		add	r3, r3, r3, lsl #1
 5797 005a A2EB4303 		sub	r3, r2, r3, lsl #1
1809:Veno-Echo.cpp ****     }
 5798              		.loc 20 1809 22 view .LVU1574
 5799 005e 0B60     		str	r3, [r1]
 5800 0060 D8E7     		b	.L327
 5801              	.L330:
 5802 0062 00BF     		.align	2
 5803              	.L329:
 5804 0064 00000000 		.word	.LANCHOR89
 5805 0068 00000000 		.word	.LANCHOR92
 5806 006c 920A863F 		.word	1065749138
 5807 0070 00000000 		.word	.LANCHOR0
 5808 0074 00000000 		.word	.LANCHOR1
 5809 0078 00000000 		.word	.LANCHOR93
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 222


 5810 007c ABAAAA2A 		.word	715827883
 5811              		.cfi_endproc
 5812              	.LFE4332:
 5814              		.section	.text._Z13ApplySettingsRK8Settings,"ax",%progbits
 5815              		.align	1
 5816              		.p2align 2,,3
 5817              		.global	_Z13ApplySettingsRK8Settings
 5818              		.syntax unified
 5819              		.thumb
 5820              		.thumb_func
 5821              		.fpu fpv5-d16
 5823              	_Z13ApplySettingsRK8Settings:
 5824              	.LVL287:
 5825              	.LFB4333:
1821:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5826              		.loc 20 1821 1 is_stmt 1 view -0
 5827              		.cfi_startproc
 5828              		@ args = 0, pretend = 0, frame = 0
 5829              		@ frame_needed = 0, uses_anonymous_args = 0
1822:Veno-Echo.cpp ****     {
 5830              		.loc 20 1822 5 view .LVU1576
 5831 0000 9FEDDA7A 		vldr.32	s14, .L416
1822:Veno-Echo.cpp ****     {
 5832              		.loc 20 1822 17 is_stmt 0 view .LVU1577
 5833 0004 D0ED007A 		vldr.32	s15, [r0]
1822:Veno-Echo.cpp ****     {
 5834              		.loc 20 1822 5 view .LVU1578
 5835 0008 F4EEC77A 		vcmpe.f32	s15, s14
1821:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5836              		.loc 20 1821 1 view .LVU1579
 5837 000c 38B5     		push	{r3, r4, r5, lr}
 5838              		.cfi_def_cfa_offset 16
 5839              		.cfi_offset 3, -16
 5840              		.cfi_offset 4, -12
 5841              		.cfi_offset 5, -8
 5842              		.cfi_offset 14, -4
1822:Veno-Echo.cpp ****     {
 5843              		.loc 20 1822 5 view .LVU1580
 5844 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1821:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5845              		.loc 20 1821 1 view .LVU1581
 5846 0012 0446     		mov	r4, r0
 5847              	.LBB1492:
 5848              	.LBB1493:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5849              		.loc 20 70 28 view .LVU1582
 5850 0014 D64B     		ldr	r3, .L416+4
 5851              	.LBE1493:
 5852              	.LBE1492:
1822:Veno-Echo.cpp ****     {
 5853              		.loc 20 1822 5 view .LVU1583
 5854 0016 C0F23281 		blt	.L332
1822:Veno-Echo.cpp ****     {
 5855              		.loc 20 1822 43 discriminator 1 view .LVU1584
 5856 001a 9FEDD67A 		vldr.32	s14, .L416+8
 5857 001e F4EEC77A 		vcmpe.f32	s15, s14
 5858 0022 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 223


 5859 0026 00F22A81 		bhi	.L332
1824:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5860              		.loc 20 1824 9 is_stmt 1 view .LVU1585
 5861              	.LVL288:
 5862              	.LBB1507:
 5863              	.LBI1492:
  68:Veno-Echo.cpp ****     {
 5864              		.loc 20 68 10 view .LVU1586
 5865              	.LBB1505:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5866              		.loc 20 70 9 view .LVU1587
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5867              		.loc 20 70 28 is_stmt 0 view .LVU1588
 5868 002a 93ED017A 		vldr.32	s14, [r3, #4]
 5869              	.LVL289:
 5870              	.LBB1494:
 5871              	.LBI1494:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5872              		.loc 21 75 3 is_stmt 1 view .LVU1589
 5873              	.LBB1495:
 5874              		.loc 21 76 5 view .LVU1590
 5875              		.loc 21 76 5 is_stmt 0 view .LVU1591
 5876              	.LBE1495:
 5877              	.LBE1494:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5878              		.loc 20 70 53 view .LVU1592
 5879 002e 9FEDD26A 		vldr.32	s12, .L416+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5880              		.loc 20 70 15 view .LVU1593
 5881 0032 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5882              		.loc 20 70 53 view .LVU1594
 5883 0036 27EE067A 		vmul.f32	s14, s14, s12
 5884              	.LBB1497:
 5885              	.LBB1496:
 5886              		.loc 21 76 31 view .LVU1595
 5887 003a F0EEE66A 		vabs.f32	s13, s13
 5888              	.LBE1496:
 5889              	.LBE1497:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5890              		.loc 20 70 9 view .LVU1596
 5891 003e F4EEC76A 		vcmpe.f32	s13, s14
 5892 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5893 0046 0FDD     		ble	.L335
  74:Veno-Echo.cpp ****             //del -> Reset();
 5894              		.loc 20 74 29 view .LVU1597
 5895 0048 BCEEE77A 		vcvt.u32.f32	s14, s15
 5896              	.LBB1498:
 5897              	.LBB1499:
 5898              		.loc 19 72 9 view .LVU1598
 5899 004c CB4D     		ldr	r5, .L416+16
 5900              	.LBE1499:
 5901              	.LBE1498:
 5902              	.LBE1505:
 5903              	.LBE1507:
1824:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5904              		.loc 20 1824 33 view .LVU1599
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 224


 5905 004e 1968     		ldr	r1, [r3]
 5906              	.LBB1508:
 5907              	.LBB1506:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5908              		.loc 20 73 13 is_stmt 1 view .LVU1600
 5909              	.LBB1502:
 5910              	.LBB1500:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5911              		.loc 19 71 9 is_stmt 0 view .LVU1601
 5912 0050 0020     		movs	r0, #0
 5913              	.LVL290:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5914              		.loc 19 71 9 view .LVU1602
 5915              	.LBE1500:
 5916              	.LBE1502:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5917              		.loc 20 73 27 view .LVU1603
 5918 0052 C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5919              		.loc 20 74 13 is_stmt 1 view .LVU1604
 5920              	.LVL291:
 5921              	.LBB1503:
 5922              	.LBI1498:
  69:delayline_reverse.h ****     {
 5923              		.loc 19 69 17 view .LVU1605
  69:delayline_reverse.h ****     {
 5924              		.loc 19 69 17 is_stmt 0 view .LVU1606
 5925              	.LBE1503:
  74:Veno-Echo.cpp ****             //del -> Reset();
 5926              		.loc 20 74 29 view .LVU1607
 5927 0056 17EE102A 		vmov	r2, s14	@ int
 5928              	.LBB1504:
 5929              	.LBB1501:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5930              		.loc 19 71 9 view .LVU1608
 5931 005a 0860     		str	r0, [r1]	@ float
 5932 005c D4ED007A 		vldr.32	s15, [r4]
 5933              	.LVL292:
 5934              		.loc 19 72 9 view .LVU1609
 5935 0060 AA42     		cmp	r2, r5
 5936 0062 28BF     		it	cs
 5937 0064 2A46     		movcs	r2, r5
 5938 0066 0A61     		str	r2, [r1, #16]
 5939              	.LVL293:
 5940              	.L335:
 5941              		.loc 19 72 9 view .LVU1610
 5942              	.LBE1501:
 5943              	.LBE1504:
 5944              	.LBE1506:
 5945              	.LBE1508:
1825:Veno-Echo.cpp ****     }
 5946              		.loc 20 1825 9 is_stmt 1 view .LVU1611
 5947              	.LBB1509:
 5948              	.LBI1509:
  68:Veno-Echo.cpp ****     {
 5949              		.loc 20 68 10 view .LVU1612
 5950              	.LBB1510:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 225


  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5951              		.loc 20 70 9 view .LVU1613
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5952              		.loc 20 70 28 is_stmt 0 view .LVU1614
 5953 0068 C54B     		ldr	r3, .L416+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5954              		.loc 20 70 53 view .LVU1615
 5955 006a 9FEDC36A 		vldr.32	s12, .L416+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5956              		.loc 20 70 28 view .LVU1616
 5957 006e 93ED017A 		vldr.32	s14, [r3, #4]
 5958              	.LVL294:
 5959              	.LBB1511:
 5960              	.LBI1511:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5961              		.loc 21 75 3 is_stmt 1 view .LVU1617
 5962              	.LBB1512:
 5963              		.loc 21 76 5 view .LVU1618
 5964              		.loc 21 76 5 is_stmt 0 view .LVU1619
 5965              	.LBE1512:
 5966              	.LBE1511:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5967              		.loc 20 70 15 view .LVU1620
 5968 0072 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5969              		.loc 20 70 53 view .LVU1621
 5970 0076 27EE067A 		vmul.f32	s14, s14, s12
 5971              	.LBB1514:
 5972              	.LBB1513:
 5973              		.loc 21 76 31 view .LVU1622
 5974 007a F0EEE66A 		vabs.f32	s13, s13
 5975              	.LBE1513:
 5976              	.LBE1514:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5977              		.loc 20 70 9 view .LVU1623
 5978 007e F4EEC76A 		vcmpe.f32	s13, s14
 5979 0082 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5980 0086 00F3D381 		bgt	.L411
 5981              	.LVL295:
 5982              	.L338:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5983              		.loc 20 70 9 view .LVU1624
 5984              	.LBE1510:
 5985              	.LBE1509:
1833:Veno-Echo.cpp ****     {
 5986              		.loc 20 1833 5 is_stmt 1 view .LVU1625
 5987 008a F7EE007A 		vmov.f32	s15, #1.0e+0
1833:Veno-Echo.cpp ****     {
 5988              		.loc 20 1833 17 is_stmt 0 view .LVU1626
 5989 008e 94ED010A 		vldr.32	s0, [r4, #4]
1833:Veno-Echo.cpp ****     {
 5990              		.loc 20 1833 5 view .LVU1627
 5991 0092 B4EEE70A 		vcmpe.f32	s0, s15
 5992 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5993 009a 06DB     		blt	.L343
1833:Veno-Echo.cpp ****     {
 5994              		.loc 20 1833 35 discriminator 1 view .LVU1628
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 226


 5995 009c F0EE087A 		vmov.f32	s15, #3.0e+0
 5996 00a0 B4EEE70A 		vcmpe.f32	s0, s15
 5997 00a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5998 00a8 01D9     		bls	.L408
 5999              	.L343:
1839:Veno-Echo.cpp ****     }
 6000              		.loc 20 1839 9 is_stmt 1 view .LVU1629
1839:Veno-Echo.cpp ****     }
 6001              		.loc 20 1839 30 is_stmt 0 view .LVU1630
 6002 00aa B7EE000A 		vmov.f32	s0, #1.0e+0
 6003              	.L408:
 6004 00ae B548     		ldr	r0, .L416+24
 6005 00b0 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 6006              	.LVL296:
1842:Veno-Echo.cpp ****     {
 6007              		.loc 20 1842 5 is_stmt 1 view .LVU1631
1842:Veno-Echo.cpp ****     {
 6008              		.loc 20 1842 17 is_stmt 0 view .LVU1632
 6009 00b4 D4ED027A 		vldr.32	s15, [r4, #8]
1842:Veno-Echo.cpp ****     {
 6010              		.loc 20 1842 5 view .LVU1633
 6011 00b8 F5EEC07A 		vcmpe.f32	s15, #0
 6012 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6013 00c0 C0F2B381 		blt	.L403
1842:Veno-Echo.cpp ****     {
 6014              		.loc 20 1842 42 discriminator 1 view .LVU1634
 6015 00c4 DFEDB06A 		vldr.32	s13, .L416+28
1848:Veno-Echo.cpp ****     }
 6016              		.loc 20 1848 18 discriminator 1 view .LVU1635
 6017 00c8 9FEDB07A 		vldr.32	s14, .L416+32
 6018 00cc F4EEE67A 		vcmpe.f32	s15, s13
 6019 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6020 00d4 88BF     		it	hi
 6021 00d6 F0EE477A 		vmovhi.f32	s15, s14
 6022              	.L347:
1851:Veno-Echo.cpp ****     {
 6023              		.loc 20 1851 17 view .LVU1636
 6024 00da 94ED030A 		vldr.32	s0, [r4, #12]
1851:Veno-Echo.cpp ****     {
 6025              		.loc 20 1851 5 view .LVU1637
 6026 00de 9FEDAC7A 		vldr.32	s14, .L416+36
 6027 00e2 AC4B     		ldr	r3, .L416+40
 6028 00e4 B4EEC70A 		vcmpe.f32	s0, s14
 6029              	.LBB1525:
 6030              	.LBB1526:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6031              		.loc 8 60 20 view .LVU1638
 6032 00e8 AB4D     		ldr	r5, .L416+44
 6033 00ea C3ED007A 		vstr.32	s15, [r3]
 6034              	.LBE1526:
 6035              	.LBE1525:
1851:Veno-Echo.cpp ****     {
 6036              		.loc 20 1851 5 is_stmt 1 view .LVU1639
 6037 00ee F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6038 00f2 06DB     		blt	.L350
1851:Veno-Echo.cpp ****     {
 6039              		.loc 20 1851 40 is_stmt 0 discriminator 1 view .LVU1640
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 227


 6040 00f4 F2EE047A 		vmov.f32	s15, #1.0e+1
 6041 00f8 B4EEE70A 		vcmpe.f32	s0, s15
 6042 00fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6043 0100 01D9     		bls	.L409
 6044              	.L350:
1857:Veno-Echo.cpp ****     }
 6045              		.loc 20 1857 9 is_stmt 1 view .LVU1641
 6046              	.LVL297:
 6047              	.LBB1527:
 6048              	.LBI1527:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 6049              		.loc 8 58 17 view .LVU1642
 6050              	.LBB1528:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6051              		.loc 8 60 9 view .LVU1643
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6052              		.loc 8 60 20 is_stmt 0 view .LVU1644
 6053 0102 9FEDA60A 		vldr.32	s0, .L416+48
 6054              	.LVL298:
 6055              	.L409:
 6056              		.loc 8 61 34 view .LVU1645
 6057 0106 2846     		mov	r0, r5
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6058              		.loc 8 60 20 view .LVU1646
 6059 0108 85ED020A 		vstr.32	s0, [r5, #8]
 6060              		.loc 8 61 9 is_stmt 1 view .LVU1647
 6061              		.loc 8 61 34 is_stmt 0 view .LVU1648
 6062 010c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 6063              	.LVL299:
 6064              	.LBE1528:
 6065              	.LBE1527:
1860:Veno-Echo.cpp ****     {
 6066              		.loc 20 1860 5 view .LVU1649
 6067 0110 DFEDA37A 		vldr.32	s15, .L416+52
 6068              	.LBB1530:
 6069              	.LBB1529:
 6070              		.loc 8 61 20 view .LVU1650
 6071 0114 85ED060A 		vstr.32	s0, [r5, #24]
 6072              	.LBE1529:
 6073              	.LBE1530:
1860:Veno-Echo.cpp ****     {
 6074              		.loc 20 1860 5 is_stmt 1 view .LVU1651
1860:Veno-Echo.cpp ****     {
 6075              		.loc 20 1860 17 is_stmt 0 view .LVU1652
 6076 0118 94ED050A 		vldr.32	s0, [r4, #20]
1860:Veno-Echo.cpp ****     {
 6077              		.loc 20 1860 5 view .LVU1653
 6078 011c B4EEE70A 		vcmpe.f32	s0, s15
 6079 0120 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6080 0124 07DB     		blt	.L354
1860:Veno-Echo.cpp ****     {
 6081              		.loc 20 1860 40 discriminator 1 view .LVU1654
 6082 0126 DFED9F7A 		vldr.32	s15, .L416+56
 6083 012a B4EEE70A 		vcmpe.f32	s0, s15
 6084 012e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6085 0132 40F26781 		bls	.L412
 6086              	.L354:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 228


1869:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 6087              		.loc 20 1869 9 is_stmt 1 view .LVU1655
1869:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 6088              		.loc 20 1869 22 is_stmt 0 view .LVU1656
 6089 0136 9FED9B0A 		vldr.32	s0, .L416+56
 6090 013a 9B48     		ldr	r0, .L416+60
 6091 013c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6092              	.LVL300:
1870:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 6093              		.loc 20 1870 9 is_stmt 1 view .LVU1657
1870:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 6094              		.loc 20 1870 22 is_stmt 0 view .LVU1658
 6095 0140 9FED980A 		vldr.32	s0, .L416+56
 6096 0144 9948     		ldr	r0, .L416+64
 6097 0146 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6098              	.LVL301:
1871:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 6099              		.loc 20 1871 9 is_stmt 1 view .LVU1659
1871:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 6100              		.loc 20 1871 27 is_stmt 0 view .LVU1660
 6101 014a 9FED960A 		vldr.32	s0, .L416+56
 6102 014e 9848     		ldr	r0, .L416+68
 6103 0150 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6104              	.LVL302:
1872:Veno-Echo.cpp ****     }
 6105              		.loc 20 1872 9 is_stmt 1 view .LVU1661
1872:Veno-Echo.cpp ****     }
 6106              		.loc 20 1872 27 is_stmt 0 view .LVU1662
 6107 0154 9FED930A 		vldr.32	s0, .L416+56
 6108 0158 9648     		ldr	r0, .L416+72
 6109 015a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6110              	.LVL303:
 6111              	.L357:
1875:Veno-Echo.cpp ****     {
 6112              		.loc 20 1875 5 is_stmt 1 view .LVU1663
1875:Veno-Echo.cpp ****     {
 6113              		.loc 20 1875 17 is_stmt 0 view .LVU1664
 6114 015e 94ED040A 		vldr.32	s0, [r4, #16]
1875:Veno-Echo.cpp ****     {
 6115              		.loc 20 1875 5 view .LVU1665
 6116 0162 DFED957A 		vldr.32	s15, .L416+76
 6117 0166 B4EEE70A 		vcmpe.f32	s0, s15
 6118 016a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6119 016e 07DB     		blt	.L358
1875:Veno-Echo.cpp ****     {
 6120              		.loc 20 1875 40 discriminator 1 view .LVU1666
 6121 0170 DFED927A 		vldr.32	s15, .L416+80
 6122 0174 B4EEE70A 		vcmpe.f32	s0, s15
 6123 0178 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6124 017c 40F2E380 		bls	.L413
 6125              	.L358:
1884:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 6126              		.loc 20 1884 9 is_stmt 1 view .LVU1667
1884:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 6127              		.loc 20 1884 22 is_stmt 0 view .LVU1668
 6128 0180 9FED8F0A 		vldr.32	s0, .L416+84
 6129 0184 8F48     		ldr	r0, .L416+88
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 229


 6130 0186 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6131              	.LVL304:
1885:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 6132              		.loc 20 1885 9 is_stmt 1 view .LVU1669
1885:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 6133              		.loc 20 1885 22 is_stmt 0 view .LVU1670
 6134 018a 9FED8D0A 		vldr.32	s0, .L416+84
 6135 018e 8E48     		ldr	r0, .L416+92
 6136 0190 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6137              	.LVL305:
1886:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 6138              		.loc 20 1886 9 is_stmt 1 view .LVU1671
1886:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 6139              		.loc 20 1886 27 is_stmt 0 view .LVU1672
 6140 0194 9FED8A0A 		vldr.32	s0, .L416+84
 6141 0198 8C48     		ldr	r0, .L416+96
 6142 019a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6143              	.LVL306:
1887:Veno-Echo.cpp **** 
 6144              		.loc 20 1887 9 is_stmt 1 view .LVU1673
1887:Veno-Echo.cpp **** 
 6145              		.loc 20 1887 27 is_stmt 0 view .LVU1674
 6146 019e 9FED880A 		vldr.32	s0, .L416+84
 6147 01a2 8B48     		ldr	r0, .L416+100
 6148 01a4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6149              	.LVL307:
 6150              	.L361:
1891:Veno-Echo.cpp ****     {
 6151              		.loc 20 1891 5 is_stmt 1 view .LVU1675
1891:Veno-Echo.cpp ****     {
 6152              		.loc 20 1891 17 is_stmt 0 view .LVU1676
 6153 01a8 94ED060A 		vldr.32	s0, [r4, #24]
1891:Veno-Echo.cpp ****     {
 6154              		.loc 20 1891 5 view .LVU1677
 6155 01ac B5EEC00A 		vcmpe.f32	s0, #0
 6156 01b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6157 01b4 07DB     		blt	.L362
1891:Veno-Echo.cpp ****     {
 6158              		.loc 20 1891 38 discriminator 1 view .LVU1678
 6159 01b6 F6EE007A 		vmov.f32	s15, #5.0e-1
 6160 01ba B4EEE70A 		vcmpe.f32	s0, s15
 6161 01be F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6162 01c2 40F29980 		bls	.L414
 6163              	.L362:
1905:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 6164              		.loc 20 1905 9 is_stmt 1 view .LVU1679
1905:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 6165              		.loc 20 1905 26 is_stmt 0 view .LVU1680
 6166 01c6 9FED710A 		vldr.32	s0, .L416+32
 6167 01ca 7948     		ldr	r0, .L416+68
 6168 01cc FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6169              	.LVL308:
1906:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 6170              		.loc 20 1906 9 is_stmt 1 view .LVU1681
1906:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 6171              		.loc 20 1906 26 is_stmt 0 view .LVU1682
 6172 01d0 9FED6E0A 		vldr.32	s0, .L416+32
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 230


 6173 01d4 7D48     		ldr	r0, .L416+96
 6174 01d6 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6175              	.LVL309:
1907:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 6176              		.loc 20 1907 9 is_stmt 1 view .LVU1683
1907:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 6177              		.loc 20 1907 26 is_stmt 0 view .LVU1684
 6178 01da 9FED6C0A 		vldr.32	s0, .L416+32
 6179 01de 7548     		ldr	r0, .L416+72
 6180 01e0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6181              	.LVL310:
1908:Veno-Echo.cpp ****     }
 6182              		.loc 20 1908 9 is_stmt 1 view .LVU1685
1908:Veno-Echo.cpp ****     }
 6183              		.loc 20 1908 26 is_stmt 0 view .LVU1686
 6184 01e4 9FED690A 		vldr.32	s0, .L416+32
 6185 01e8 7948     		ldr	r0, .L416+100
 6186 01ea FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6187              	.LVL311:
 6188              	.L365:
1911:Veno-Echo.cpp ****     {
 6189              		.loc 20 1911 5 is_stmt 1 view .LVU1687
1911:Veno-Echo.cpp ****     {
 6190              		.loc 20 1911 16 is_stmt 0 view .LVU1688
 6191 01ee D4ED077A 		vldr.32	s15, [r4, #28]
1911:Veno-Echo.cpp ****     {
 6192              		.loc 20 1911 5 view .LVU1689
 6193 01f2 9FED787A 		vldr.32	s14, .L416+104
1917:Veno-Echo.cpp ****     }
 6194              		.loc 20 1917 21 view .LVU1690
 6195 01f6 784B     		ldr	r3, .L416+108
1911:Veno-Echo.cpp ****     {
 6196              		.loc 20 1911 5 view .LVU1691
 6197 01f8 F4EEC77A 		vcmpe.f32	s15, s14
 6198 01fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6199 0200 06D4     		bmi	.L369
1915:Veno-Echo.cpp ****     {
 6200              		.loc 20 1915 14 is_stmt 1 view .LVU1692
 6201 0202 9FED767A 		vldr.32	s14, .L416+112
 6202 0206 F4EEC77A 		vcmpe.f32	s15, s14
 6203 020a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6204 020e 70DC     		bgt	.L415
 6205              	.L369:
1913:Veno-Echo.cpp ****     }
 6206              		.loc 20 1913 9 view .LVU1693
1913:Veno-Echo.cpp ****     }
 6207              		.loc 20 1913 21 is_stmt 0 view .LVU1694
 6208 0210 0022     		movs	r2, #0
 6209 0212 1A70     		strb	r2, [r3]
 6210              	.L368:
1925:Veno-Echo.cpp ****         && (setting.tapLength <= static_cast<float> (maxtap)) )
 6211              		.loc 20 1925 5 is_stmt 1 view .LVU1695
1925:Veno-Echo.cpp ****         && (setting.tapLength <= static_cast<float> (maxtap)) )
 6212              		.loc 20 1925 18 is_stmt 0 view .LVU1696
 6213 0214 94ED080A 		vldr.32	s0, [r4, #32]
1925:Veno-Echo.cpp ****         && (setting.tapLength <= static_cast<float> (maxtap)) )
 6214              		.loc 20 1925 5 view .LVU1697
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 231


 6215 0218 DFED717A 		vldr.32	s15, .L416+116
 6216 021c B4EEE70A 		vcmpe.f32	s0, s15
 6217 0220 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6218 0224 06DB     		blt	.L371
1926:Veno-Echo.cpp ****     {
 6219              		.loc 20 1926 9 view .LVU1698
 6220 0226 DFED6F7A 		vldr.32	s15, .L416+120
 6221 022a B4EEE70A 		vcmpe.f32	s0, s15
 6222 022e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6223 0232 01D9     		bls	.L410
 6224              	.L371:
1934:Veno-Echo.cpp ****         tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 6225              		.loc 20 1934 9 is_stmt 1 view .LVU1699
1934:Veno-Echo.cpp ****         tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 6226              		.loc 20 1934 31 is_stmt 0 view .LVU1700
 6227 0234 9FED6C0A 		vldr.32	s0, .L416+124
 6228              	.L410:
 6229 0238 5248     		ldr	r0, .L416+24
 6230 023a FFF7FEFF 		bl	_ZN8Taptempo12setTapLengthEf
 6231              	.LVL312:
1935:Veno-Echo.cpp ****     }
 6232              		.loc 20 1935 9 is_stmt 1 view .LVU1701
1935:Veno-Echo.cpp ****     }
 6233              		.loc 20 1935 31 is_stmt 0 view .LVU1702
 6234 023e 5148     		ldr	r0, .L416+24
 6235 0240 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 6236              	.LVL313:
 6237 0244 6948     		ldr	r0, .L416+128
 6238 0246 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 6239              	.LVL314:
1938:Veno-Echo.cpp ****     {
 6240              		.loc 20 1938 5 is_stmt 1 view .LVU1703
 6241 024a DFED697A 		vldr.32	s15, .L416+132
 6242 024e 94ED097A 		vldr.32	s14, [r4, #36]
1940:Veno-Echo.cpp ****     }
 6243              		.loc 20 1940 24 is_stmt 0 view .LVU1704
 6244 0252 6848     		ldr	r0, .L416+136
1938:Veno-Echo.cpp ****     {
 6245              		.loc 20 1938 5 view .LVU1705
 6246 0254 B4EEE77A 		vcmpe.f32	s14, s15
 6247 0258 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6248 025c 42DD     		ble	.L405
1940:Veno-Echo.cpp ****     }
 6249              		.loc 20 1940 9 is_stmt 1 view .LVU1706
1940:Veno-Echo.cpp ****     }
 6250              		.loc 20 1940 24 is_stmt 0 view .LVU1707
 6251 025e FFF7FEFF 		bl	_ZN9ButtonLED6turnONEv
 6252              	.LVL315:
 6253              	.L377:
1947:Veno-Echo.cpp ****     {
 6254              		.loc 20 1947 5 is_stmt 1 view .LVU1708
 6255 0262 DFED637A 		vldr.32	s15, .L416+132
 6256 0266 94ED0A7A 		vldr.32	s14, [r4, #40]
1949:Veno-Echo.cpp ****     }
 6257              		.loc 20 1949 24 is_stmt 0 view .LVU1709
 6258 026a 6348     		ldr	r0, .L416+140
1947:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 232


 6259              		.loc 20 1947 5 view .LVU1710
 6260 026c B4EEE77A 		vcmpe.f32	s14, s15
 6261 0270 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6262 0274 39DD     		ble	.L406
1949:Veno-Echo.cpp ****     }
 6263              		.loc 20 1949 9 is_stmt 1 view .LVU1711
1956:Veno-Echo.cpp **** 
 6264              		.loc 20 1956 1 is_stmt 0 view .LVU1712
 6265 0276 BDE83840 		pop	{r3, r4, r5, lr}
 6266              		.cfi_remember_state
 6267              		.cfi_restore 14
 6268              		.cfi_restore 5
 6269              		.cfi_restore 4
 6270              		.cfi_restore 3
 6271              		.cfi_def_cfa_offset 0
 6272              	.LVL316:
1949:Veno-Echo.cpp ****     }
 6273              		.loc 20 1949 24 view .LVU1713
 6274 027a FFF7FEBF 		b	_ZN9ButtonLED6turnONEv
 6275              	.LVL317:
 6276              	.L332:
 6277              		.cfi_restore_state
1829:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 6278              		.loc 20 1829 9 is_stmt 1 view .LVU1714
 6279              	.LBB1531:
 6280              	.LBI1531:
  68:Veno-Echo.cpp ****     {
 6281              		.loc 20 68 10 view .LVU1715
 6282              	.LBB1532:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6283              		.loc 20 70 9 view .LVU1716
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6284              		.loc 20 70 28 is_stmt 0 view .LVU1717
 6285 027e D3ED017A 		vldr.32	s15, [r3, #4]
 6286              	.LVL318:
 6287              	.LBB1533:
 6288              	.LBI1533:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 6289              		.loc 21 75 3 is_stmt 1 view .LVU1718
 6290              	.LBB1534:
 6291              		.loc 21 76 5 view .LVU1719
 6292              		.loc 21 76 5 is_stmt 0 view .LVU1720
 6293              	.LBE1534:
 6294              	.LBE1533:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6295              		.loc 20 70 15 view .LVU1721
 6296 0282 DFED5E6A 		vldr.32	s13, .L416+144
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6297              		.loc 20 70 53 view .LVU1722
 6298 0286 9FED3C6A 		vldr.32	s12, .L416+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6299              		.loc 20 70 15 view .LVU1723
 6300 028a 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6301              		.loc 20 70 53 view .LVU1724
 6302 028e 67EE867A 		vmul.f32	s15, s15, s12
 6303              	.LBB1536:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 233


 6304              	.LBB1535:
 6305              		.loc 21 76 31 view .LVU1725
 6306 0292 B0EEC77A 		vabs.f32	s14, s14
 6307              	.LBE1535:
 6308              	.LBE1536:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6309              		.loc 20 70 9 view .LVU1726
 6310 0296 B4EEE77A 		vcmpe.f32	s14, s15
 6311 029a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6312 029e 06DD     		ble	.L339
 6313              	.LBE1532:
 6314              	.LBE1531:
1829:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 6315              		.loc 20 1829 33 view .LVU1727
 6316 02a0 1A68     		ldr	r2, [r3]
 6317              	.LBB1542:
 6318              	.LBB1541:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6319              		.loc 20 73 13 is_stmt 1 view .LVU1728
 6320              	.LBB1537:
 6321              	.LBB1538:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6322              		.loc 19 71 9 is_stmt 0 view .LVU1729
 6323 02a2 0021     		movs	r1, #0
 6324              		.loc 19 72 9 view .LVU1730
 6325 02a4 5648     		ldr	r0, .L416+148
 6326              	.LVL319:
 6327              		.loc 19 72 9 view .LVU1731
 6328              	.LBE1538:
 6329              	.LBE1537:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6330              		.loc 20 73 27 view .LVU1732
 6331 02a6 C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6332              		.loc 20 74 13 is_stmt 1 view .LVU1733
 6333              	.LVL320:
 6334              	.LBB1540:
 6335              	.LBI1537:
  69:delayline_reverse.h ****     {
 6336              		.loc 19 69 17 view .LVU1734
 6337              	.LBB1539:
 6338              		.loc 19 72 9 is_stmt 0 view .LVU1735
 6339 02aa 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6340              		.loc 19 71 9 view .LVU1736
 6341 02ac 1160     		str	r1, [r2]	@ float
 6342              	.LVL321:
 6343              	.L339:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6344              		.loc 19 71 9 view .LVU1737
 6345              	.LBE1539:
 6346              	.LBE1540:
 6347              	.LBE1541:
 6348              	.LBE1542:
1830:Veno-Echo.cpp ****     }
 6349              		.loc 20 1830 9 is_stmt 1 view .LVU1738
 6350              	.LBB1543:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 234


 6351              	.LBI1543:
  68:Veno-Echo.cpp ****     {
 6352              		.loc 20 68 10 view .LVU1739
 6353              	.LBB1544:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6354              		.loc 20 70 9 view .LVU1740
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6355              		.loc 20 70 28 is_stmt 0 view .LVU1741
 6356 02ae 344B     		ldr	r3, .L416+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6357              		.loc 20 70 15 view .LVU1742
 6358 02b0 DFED526A 		vldr.32	s13, .L416+144
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6359              		.loc 20 70 28 view .LVU1743
 6360 02b4 D3ED017A 		vldr.32	s15, [r3, #4]
 6361              	.LVL322:
 6362              	.LBB1545:
 6363              	.LBI1545:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 6364              		.loc 21 75 3 is_stmt 1 view .LVU1744
 6365              	.LBB1546:
 6366              		.loc 21 76 5 view .LVU1745
 6367              		.loc 21 76 5 is_stmt 0 view .LVU1746
 6368              	.LBE1546:
 6369              	.LBE1545:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6370              		.loc 20 70 53 view .LVU1747
 6371 02b8 9FED2F6A 		vldr.32	s12, .L416+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6372              		.loc 20 70 15 view .LVU1748
 6373 02bc 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6374              		.loc 20 70 53 view .LVU1749
 6375 02c0 67EE867A 		vmul.f32	s15, s15, s12
 6376              	.LBB1548:
 6377              	.LBB1547:
 6378              		.loc 21 76 31 view .LVU1750
 6379 02c4 B0EEC77A 		vabs.f32	s14, s14
 6380              	.LBE1547:
 6381              	.LBE1548:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6382              		.loc 20 70 9 view .LVU1751
 6383 02c8 B4EEE77A 		vcmpe.f32	s14, s15
 6384 02cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6385 02d0 7FF7DBAE 		ble	.L338
 6386              	.LBE1544:
 6387              	.LBE1543:
1830:Veno-Echo.cpp ****     }
 6388              		.loc 20 1830 33 view .LVU1752
 6389 02d4 1A68     		ldr	r2, [r3]
 6390              	.LBB1554:
 6391              	.LBB1553:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6392              		.loc 20 73 13 is_stmt 1 view .LVU1753
 6393              	.LBB1549:
 6394              	.LBB1550:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 235


 6395              		.loc 19 71 9 is_stmt 0 view .LVU1754
 6396 02d6 0021     		movs	r1, #0
 6397              		.loc 19 72 9 view .LVU1755
 6398 02d8 4948     		ldr	r0, .L416+148
 6399              	.LBE1550:
 6400              	.LBE1549:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6401              		.loc 20 73 27 view .LVU1756
 6402 02da C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6403              		.loc 20 74 13 is_stmt 1 view .LVU1757
 6404              	.LVL323:
 6405              	.LBB1552:
 6406              	.LBI1549:
  69:delayline_reverse.h ****     {
 6407              		.loc 19 69 17 view .LVU1758
 6408              	.LBB1551:
 6409              		.loc 19 72 9 is_stmt 0 view .LVU1759
 6410 02de 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6411              		.loc 19 71 9 view .LVU1760
 6412 02e0 1160     		str	r1, [r2]	@ float
  73:delayline_reverse.h ****     }
 6413              		.loc 19 73 5 view .LVU1761
 6414 02e2 D2E6     		b	.L338
 6415              	.LVL324:
 6416              	.L405:
 6417              		.loc 19 73 5 view .LVU1762
 6418              	.LBE1551:
 6419              	.LBE1552:
 6420              	.LBE1553:
 6421              	.LBE1554:
1944:Veno-Echo.cpp ****     }
 6422              		.loc 20 1944 9 is_stmt 1 view .LVU1763
1944:Veno-Echo.cpp ****     }
 6423              		.loc 20 1944 25 is_stmt 0 view .LVU1764
 6424 02e4 FFF7FEFF 		bl	_ZN9ButtonLED7turnOFFEv
 6425              	.LVL325:
 6426 02e8 BBE7     		b	.L377
 6427              	.L406:
1953:Veno-Echo.cpp ****     }
 6428              		.loc 20 1953 9 is_stmt 1 view .LVU1765
1956:Veno-Echo.cpp **** 
 6429              		.loc 20 1956 1 is_stmt 0 view .LVU1766
 6430 02ea BDE83840 		pop	{r3, r4, r5, lr}
 6431              		.cfi_remember_state
 6432              		.cfi_restore 14
 6433              		.cfi_restore 5
 6434              		.cfi_restore 4
 6435              		.cfi_restore 3
 6436              		.cfi_def_cfa_offset 0
 6437              	.LVL326:
1953:Veno-Echo.cpp ****     }
 6438              		.loc 20 1953 25 view .LVU1767
 6439 02ee FFF7FEBF 		b	_ZN9ButtonLED7turnOFFEv
 6440              	.LVL327:
 6441              	.L415:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 236


 6442              		.cfi_restore_state
1917:Veno-Echo.cpp ****     }
 6443              		.loc 20 1917 9 is_stmt 1 view .LVU1768
1917:Veno-Echo.cpp ****     }
 6444              		.loc 20 1917 21 is_stmt 0 view .LVU1769
 6445 02f2 0122     		movs	r2, #1
 6446 02f4 1A70     		strb	r2, [r3]
 6447 02f6 8DE7     		b	.L368
 6448              	.L414:
1893:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 6449              		.loc 20 1893 9 is_stmt 1 view .LVU1770
1893:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 6450              		.loc 20 1893 21 is_stmt 0 view .LVU1771
 6451 02f8 2B48     		ldr	r0, .L416+60
 6452 02fa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6453              	.LVL328:
1894:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 6454              		.loc 20 1894 9 is_stmt 1 view .LVU1772
1894:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 6455              		.loc 20 1894 21 is_stmt 0 view .LVU1773
 6456 02fe 94ED060A 		vldr.32	s0, [r4, #24]
 6457 0302 3048     		ldr	r0, .L416+88
 6458 0304 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6459              	.LVL329:
1895:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 6460              		.loc 20 1895 9 is_stmt 1 view .LVU1774
1895:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 6461              		.loc 20 1895 21 is_stmt 0 view .LVU1775
 6462 0308 94ED060A 		vldr.32	s0, [r4, #24]
 6463 030c 2748     		ldr	r0, .L416+64
 6464 030e FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6465              	.LVL330:
1896:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 6466              		.loc 20 1896 9 is_stmt 1 view .LVU1776
1896:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 6467              		.loc 20 1896 21 is_stmt 0 view .LVU1777
 6468 0312 94ED060A 		vldr.32	s0, [r4, #24]
 6469 0316 2C48     		ldr	r0, .L416+92
 6470 0318 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6471              	.LVL331:
1897:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 6472              		.loc 20 1897 9 is_stmt 1 view .LVU1778
1897:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 6473              		.loc 20 1897 26 is_stmt 0 view .LVU1779
 6474 031c 94ED060A 		vldr.32	s0, [r4, #24]
 6475 0320 2348     		ldr	r0, .L416+68
 6476 0322 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6477              	.LVL332:
1898:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 6478              		.loc 20 1898 9 is_stmt 1 view .LVU1780
1898:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 6479              		.loc 20 1898 26 is_stmt 0 view .LVU1781
 6480 0326 94ED060A 		vldr.32	s0, [r4, #24]
 6481 032a 2848     		ldr	r0, .L416+96
 6482 032c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6483              	.LVL333:
1899:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 237


 6484              		.loc 20 1899 9 is_stmt 1 view .LVU1782
1899:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 6485              		.loc 20 1899 26 is_stmt 0 view .LVU1783
 6486 0330 94ED060A 		vldr.32	s0, [r4, #24]
 6487 0334 1F48     		ldr	r0, .L416+72
 6488 0336 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6489              	.LVL334:
1900:Veno-Echo.cpp ****     }
 6490              		.loc 20 1900 9 is_stmt 1 view .LVU1784
1900:Veno-Echo.cpp ****     }
 6491              		.loc 20 1900 26 is_stmt 0 view .LVU1785
 6492 033a 94ED060A 		vldr.32	s0, [r4, #24]
 6493 033e 2448     		ldr	r0, .L416+100
 6494 0340 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6495              	.LVL335:
 6496 0344 53E7     		b	.L365
 6497              	.L413:
1877:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 6498              		.loc 20 1877 9 is_stmt 1 view .LVU1786
1877:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 6499              		.loc 20 1877 22 is_stmt 0 view .LVU1787
 6500 0346 1F48     		ldr	r0, .L416+88
 6501 0348 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6502              	.LVL336:
1878:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 6503              		.loc 20 1878 9 is_stmt 1 view .LVU1788
1878:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 6504              		.loc 20 1878 22 is_stmt 0 view .LVU1789
 6505 034c 94ED040A 		vldr.32	s0, [r4, #16]
 6506 0350 1D48     		ldr	r0, .L416+92
 6507 0352 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6508              	.LVL337:
1879:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 6509              		.loc 20 1879 9 is_stmt 1 view .LVU1790
1879:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 6510              		.loc 20 1879 27 is_stmt 0 view .LVU1791
 6511 0356 94ED040A 		vldr.32	s0, [r4, #16]
 6512 035a 1C48     		ldr	r0, .L416+96
 6513 035c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6514              	.LVL338:
1880:Veno-Echo.cpp ****     }
 6515              		.loc 20 1880 9 is_stmt 1 view .LVU1792
1880:Veno-Echo.cpp ****     }
 6516              		.loc 20 1880 27 is_stmt 0 view .LVU1793
 6517 0360 94ED040A 		vldr.32	s0, [r4, #16]
 6518 0364 1A48     		ldr	r0, .L416+100
 6519 0366 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6520              	.LVL339:
 6521 036a 1DE7     		b	.L361
 6522              	.L417:
 6523              		.align	2
 6524              	.L416:
 6525 036c 0050C346 		.word	1187205120
 6526 0370 00000000 		.word	.LANCHOR2
 6527 0374 00606A48 		.word	1214930944
 6528 0378 0AD7A33B 		.word	1000593162
 6529 037c BF270900 		.word	599999
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 238


 6530 0380 00000000 		.word	.LANCHOR3
 6531 0384 00000000 		.word	.LANCHOR26
 6532 0388 0000FA43 		.word	1140457472
 6533 038c 00000000 		.word	0
 6534 0390 CDCCCC3D 		.word	1036831949
 6535 0394 00000000 		.word	.LANCHOR68
 6536 0398 00000000 		.word	.LANCHOR76
 6537 039c 9A99A140 		.word	1084332442
 6538 03a0 0080BB44 		.word	1153138688
 6539 03a4 00803B46 		.word	1178304512
 6540 03a8 00000000 		.word	.LANCHOR47
 6541 03ac 00000000 		.word	.LANCHOR48
 6542 03b0 00000000 		.word	.LANCHOR49
 6543 03b4 00000000 		.word	.LANCHOR50
 6544 03b8 0000C842 		.word	1120403456
 6545 03bc 00004844 		.word	1145569280
 6546 03c0 00004843 		.word	1128792064
 6547 03c4 00000000 		.word	.LANCHOR35
 6548 03c8 00000000 		.word	.LANCHOR36
 6549 03cc 00000000 		.word	.LANCHOR37
 6550 03d0 00000000 		.word	.LANCHOR38
 6551 03d4 6666E63E 		.word	1055286886
 6552 03d8 00000000 		.word	.LANCHOR83
 6553 03dc CDCC0C3F 		.word	1057803469
 6554 03e0 00409C46 		.word	1184645120
 6555 03e4 001BB74A 		.word	1253513984
 6556 03e8 0024F448 		.word	1223959552
 6557 03ec 00000000 		.word	.LANCHOR89
 6558 03f0 48E1FA3E 		.word	1056629064
 6559 03f4 00000000 		.word	.LANCHOR94
 6560 03f8 00000000 		.word	.LANCHOR95
 6561 03fc 00650148 		.word	1208050944
 6562 0400 94050200 		.word	132500
 6563              	.L412:
1862:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 6564              		.loc 20 1862 9 is_stmt 1 view .LVU1794
1862:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 6565              		.loc 20 1862 22 is_stmt 0 view .LVU1795
 6566 0404 1248     		ldr	r0, .L418
 6567 0406 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6568              	.LVL340:
1863:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 6569              		.loc 20 1863 9 is_stmt 1 view .LVU1796
1863:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 6570              		.loc 20 1863 22 is_stmt 0 view .LVU1797
 6571 040a 94ED050A 		vldr.32	s0, [r4, #20]
 6572 040e 1148     		ldr	r0, .L418+4
 6573 0410 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6574              	.LVL341:
1864:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 6575              		.loc 20 1864 9 is_stmt 1 view .LVU1798
1864:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 6576              		.loc 20 1864 27 is_stmt 0 view .LVU1799
 6577 0414 94ED050A 		vldr.32	s0, [r4, #20]
 6578 0418 0F48     		ldr	r0, .L418+8
 6579 041a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6580              	.LVL342:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 239


1865:Veno-Echo.cpp ****     }
 6581              		.loc 20 1865 9 is_stmt 1 view .LVU1800
1865:Veno-Echo.cpp ****     }
 6582              		.loc 20 1865 27 is_stmt 0 view .LVU1801
 6583 041e 94ED050A 		vldr.32	s0, [r4, #20]
 6584 0422 0E48     		ldr	r0, .L418+12
 6585 0424 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6586              	.LVL343:
 6587 0428 99E6     		b	.L357
 6588              	.L403:
1848:Veno-Echo.cpp ****     }
 6589              		.loc 20 1848 18 view .LVU1802
 6590 042a DFED0D7A 		vldr.32	s15, .L418+16
 6591 042e 54E6     		b	.L347
 6592              	.LVL344:
 6593              	.L411:
 6594              	.LBB1555:
 6595              	.LBB1523:
  74:Veno-Echo.cpp ****             //del -> Reset();
 6596              		.loc 20 74 29 view .LVU1803
 6597 0430 BCEEE77A 		vcvt.u32.f32	s14, s15
 6598              	.LBB1515:
 6599              	.LBB1516:
  72:delayline_reverse.h ****     }
 6600              		.loc 19 72 9 view .LVU1804
 6601 0434 0B4D     		ldr	r5, .L418+20
 6602              	.LBE1516:
 6603              	.LBE1515:
 6604              	.LBE1523:
 6605              	.LBE1555:
1825:Veno-Echo.cpp ****     }
 6606              		.loc 20 1825 33 view .LVU1805
 6607 0436 1968     		ldr	r1, [r3]
 6608              	.LBB1556:
 6609              	.LBB1524:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6610              		.loc 20 73 13 is_stmt 1 view .LVU1806
 6611              	.LBB1520:
 6612              	.LBB1517:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6613              		.loc 19 71 9 is_stmt 0 view .LVU1807
 6614 0438 0020     		movs	r0, #0
 6615              	.LBE1517:
 6616              	.LBE1520:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6617              		.loc 20 73 27 view .LVU1808
 6618 043a C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6619              		.loc 20 74 29 view .LVU1809
 6620 043e 17EE102A 		vmov	r2, s14	@ int
 6621              	.LBB1521:
 6622              	.LBB1518:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6623              		.loc 19 71 9 view .LVU1810
 6624 0442 0860     		str	r0, [r1]	@ float
 6625              	.LVL345:
  72:delayline_reverse.h ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 240


 6626              		.loc 19 72 9 view .LVU1811
 6627 0444 AA42     		cmp	r2, r5
 6628 0446 28BF     		it	cs
 6629 0448 2A46     		movcs	r2, r5
 6630              	.LBE1518:
 6631              	.LBE1521:
  74:Veno-Echo.cpp ****             //del -> Reset();
 6632              		.loc 20 74 13 is_stmt 1 view .LVU1812
 6633              	.LVL346:
 6634              	.LBB1522:
 6635              	.LBI1515:
  69:delayline_reverse.h ****     {
 6636              		.loc 19 69 17 view .LVU1813
 6637              	.LBB1519:
  72:delayline_reverse.h ****     }
 6638              		.loc 19 72 9 is_stmt 0 view .LVU1814
 6639 044a 0A61     		str	r2, [r1, #16]
 6640              		.loc 19 73 5 view .LVU1815
 6641 044c 1DE6     		b	.L338
 6642              	.L419:
 6643 044e 00BF     		.align	2
 6644              	.L418:
 6645 0450 00000000 		.word	.LANCHOR47
 6646 0454 00000000 		.word	.LANCHOR48
 6647 0458 00000000 		.word	.LANCHOR49
 6648 045c 00000000 		.word	.LANCHOR50
 6649 0460 00000000 		.word	0
 6650 0464 BF270900 		.word	599999
 6651              	.LBE1519:
 6652              	.LBE1522:
 6653              	.LBE1524:
 6654              	.LBE1556:
 6655              		.cfi_endproc
 6656              	.LFE4333:
 6658              		.section	.text.startup.main,"ax",%progbits
 6659              		.align	1
 6660              		.p2align 2,,3
 6661              		.global	main
 6662              		.syntax unified
 6663              		.thumb
 6664              		.thumb_func
 6665              		.fpu fpv5-d16
 6667              	main:
 6668              	.LFB4311:
 642:Veno-Echo.cpp ****     // initialize hardware.
 6669              		.loc 20 642 1 is_stmt 1 view -0
 6670              		.cfi_startproc
 6671              		@ Volatile: function does not return.
 6672              		@ args = 0, pretend = 0, frame = 328
 6673              		@ frame_needed = 0, uses_anonymous_args = 0
 644:Veno-Echo.cpp ****     hw.Init();
 6674              		.loc 20 644 5 view .LVU1817
 642:Veno-Echo.cpp ****     // initialize hardware.
 6675              		.loc 20 642 1 is_stmt 0 view .LVU1818
 6676 0000 80B5     		push	{r7, lr}
 6677              		.cfi_def_cfa_offset 8
 6678              		.cfi_offset 7, -8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 241


 6679              		.cfi_offset 14, -4
 644:Veno-Echo.cpp ****     hw.Init();
 6680              		.loc 20 644 17 view .LVU1819
 6681 0002 CF48     		ldr	r0, .L430
 642:Veno-Echo.cpp ****     // initialize hardware.
 6682              		.loc 20 642 1 view .LVU1820
 6683 0004 D4B0     		sub	sp, sp, #336
 6684              		.cfi_def_cfa_offset 344
 644:Veno-Echo.cpp ****     hw.Init();
 6685              		.loc 20 644 17 view .LVU1821
 6686 0006 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 6687              	.LVL347:
 645:Veno-Echo.cpp ****     
 6688              		.loc 20 645 5 is_stmt 1 view .LVU1822
 645:Veno-Echo.cpp ****     
 6689              		.loc 20 645 12 is_stmt 0 view .LVU1823
 6690 000a 0021     		movs	r1, #0
 6691 000c CC48     		ldr	r0, .L430
 649:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6692              		.loc 20 649 16 view .LVU1824
 6693 000e B2EE0E8A 		vmov.f32	s16, #1.5e+1
 645:Veno-Echo.cpp ****     
 6694              		.loc 20 645 12 view .LVU1825
 6695 0012 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 6696              	.LVL348:
 649:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6697              		.loc 20 649 5 is_stmt 1 view .LVU1826
 649:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6698              		.loc 20 649 16 is_stmt 0 view .LVU1827
 6699 0016 1D20     		movs	r0, #29
 6700 0018 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6701              	.LVL349:
 6702 001c 0346     		mov	r3, r0	@ movhi
 6703 001e 0620     		movs	r0, #6
 656:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6704              		.loc 20 656 22 view .LVU1828
 6705 0020 0224     		movs	r4, #2
 649:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6706              		.loc 20 649 16 view .LVU1829
 6707 0022 ADF80830 		strh	r3, [sp, #8]	@ movhi
 6708 0026 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6709              	.LVL350:
 6710 002a 0346     		mov	r3, r0	@ movhi
 649:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6711              		.loc 20 649 80 view .LVU1830
 6712 002c C448     		ldr	r0, .L430
 6713              	.LBB1557:
 6714              	.LBB1558:
  61:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
  62:../DaisySP/Source/Dynamics/crossfade.h ****     Expected input: See [Curve Options](##curve-options)
  63:../DaisySP/Source/Dynamics/crossfade.h ****     */
  64:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetCurve(uint8_t curve) { curve_ = curve; }
 6715              		.loc 10 64 50 view .LVU1831
 6716 002e 4FF00108 		mov	r8, #1
 6717              	.LBE1558:
 6718              	.LBE1557:
 6719              	.LBB1561:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 242


 6720              	.LBB1562:
  40:../DaisySP/Source/Control/adsr.h ****     /** Initializes the Adsr module.
  41:../DaisySP/Source/Control/adsr.h ****         \param sample_rate - The sample rate of the audio engine being run. 
  42:../DaisySP/Source/Control/adsr.h ****     */
  43:../DaisySP/Source/Control/adsr.h ****     void Init(float sample_rate);
  44:../DaisySP/Source/Control/adsr.h **** 
  45:../DaisySP/Source/Control/adsr.h **** 
  46:../DaisySP/Source/Control/adsr.h ****     /** Processes one sample through the filter and returns one sample.
  47:../DaisySP/Source/Control/adsr.h ****         \param gate - trigger the envelope, hold it to sustain 
  48:../DaisySP/Source/Control/adsr.h ****     */
  49:../DaisySP/Source/Control/adsr.h ****     float Process(bool gate);
  50:../DaisySP/Source/Control/adsr.h **** 
  51:../DaisySP/Source/Control/adsr.h ****     /** Sets time
  52:../DaisySP/Source/Control/adsr.h ****         Set time per segment in seconds
  53:../DaisySP/Source/Control/adsr.h ****     */
  54:../DaisySP/Source/Control/adsr.h ****     inline void SetTime(int seg, float time) { seg_time_[seg] = time; }
  55:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
  56:../DaisySP/Source/Control/adsr.h ****         \param sus_level - sets sustain level
  57:../DaisySP/Source/Control/adsr.h ****     */
  58:../DaisySP/Source/Control/adsr.h ****     inline void SetSustainLevel(float sus_level) { sus_ = sus_level; }
 6721              		.loc 7 58 57 view .LVU1832
 6722 0032 F7EE008A 		vmov.f32	s17, #1.0e+0
 6723              	.LBE1562:
 6724              	.LBE1561:
 649:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6725              		.loc 20 649 16 view .LVU1833
 6726 0036 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 649:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6727              		.loc 20 649 80 view .LVU1834
 6728 003a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6729              	.LVL351:
 649:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6730              		.loc 20 649 16 view .LVU1835
 6731 003e 0123     		movs	r3, #1
 6732 0040 80EE080A 		vdiv.f32	s0, s0, s16
 6733 0044 BF48     		ldr	r0, .L430+4
 663:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6734              		.loc 20 663 20 view .LVU1836
 6735 0046 C04F     		ldr	r7, .L430+8
 6736              	.LBB1565:
 6737              	.LBB1566:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6738              		.loc 7 54 63 view .LVU1837
 6739 0048 C04D     		ldr	r5, .L430+12
 6740              	.LBE1566:
 6741              	.LBE1565:
 669:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6742              		.loc 20 669 20 view .LVU1838
 6743 004a C14E     		ldr	r6, .L430+16
 649:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6744              		.loc 20 649 16 view .LVU1839
 6745 004c DDE90212 		ldrd	r1, r2, [sp, #8]
 6746 0050 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6747              	.LVL352:
 650:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6748              		.loc 20 650 5 is_stmt 1 view .LVU1840
 650:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 243


 6749              		.loc 20 650 16 is_stmt 0 view .LVU1841
 6750 0054 1E20     		movs	r0, #30
 6751 0056 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6752              	.LVL353:
 6753 005a 0346     		mov	r3, r0	@ movhi
 6754 005c 0720     		movs	r0, #7
 6755 005e ADF81030 		strh	r3, [sp, #16]	@ movhi
 6756 0062 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6757              	.LVL354:
 6758 0066 0346     		mov	r3, r0	@ movhi
 650:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6759              		.loc 20 650 80 view .LVU1842
 6760 0068 B548     		ldr	r0, .L430
 650:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6761              		.loc 20 650 16 view .LVU1843
 6762 006a ADF81430 		strh	r3, [sp, #20]	@ movhi
 650:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6763              		.loc 20 650 80 view .LVU1844
 6764 006e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6765              	.LVL355:
 650:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6766              		.loc 20 650 16 view .LVU1845
 6767 0072 0123     		movs	r3, #1
 6768 0074 80EE080A 		vdiv.f32	s0, s0, s16
 6769 0078 B648     		ldr	r0, .L430+20
 6770 007a DDE90412 		ldrd	r1, r2, [sp, #16]
 6771 007e FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6772              	.LVL356:
 651:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6773              		.loc 20 651 5 is_stmt 1 view .LVU1846
 651:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6774              		.loc 20 651 18 is_stmt 0 view .LVU1847
 6775 0082 0A20     		movs	r0, #10
 6776 0084 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6777              	.LVL357:
 6778 0088 0346     		mov	r3, r0	@ movhi
 6779 008a 0220     		movs	r0, #2
 6780 008c ADF81830 		strh	r3, [sp, #24]	@ movhi
 6781 0090 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6782              	.LVL358:
 6783 0094 0346     		mov	r3, r0	@ movhi
 651:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6784              		.loc 20 651 85 view .LVU1848
 6785 0096 AA48     		ldr	r0, .L430
 651:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6786              		.loc 20 651 18 view .LVU1849
 6787 0098 ADF81C30 		strh	r3, [sp, #28]	@ movhi
 651:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6788              		.loc 20 651 85 view .LVU1850
 6789 009c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6790              	.LVL359:
 651:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6791              		.loc 20 651 18 view .LVU1851
 6792 00a0 0023     		movs	r3, #0
 6793 00a2 80EE080A 		vdiv.f32	s0, s0, s16
 6794 00a6 AC48     		ldr	r0, .L430+24
 6795 00a8 DDE90612 		ldrd	r1, r2, [sp, #24]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 244


 6796 00ac FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6797              	.LVL360:
 652:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6798              		.loc 20 652 5 is_stmt 1 view .LVU1852
 652:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6799              		.loc 20 652 18 is_stmt 0 view .LVU1853
 6800 00b0 0B20     		movs	r0, #11
 6801 00b2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6802              	.LVL361:
 6803 00b6 0346     		mov	r3, r0	@ movhi
 6804 00b8 0320     		movs	r0, #3
 6805 00ba ADF82030 		strh	r3, [sp, #32]	@ movhi
 6806 00be FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6807              	.LVL362:
 6808 00c2 0346     		mov	r3, r0	@ movhi
 652:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6809              		.loc 20 652 85 view .LVU1854
 6810 00c4 9E48     		ldr	r0, .L430
 652:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6811              		.loc 20 652 18 view .LVU1855
 6812 00c6 ADF82430 		strh	r3, [sp, #36]	@ movhi
 652:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6813              		.loc 20 652 85 view .LVU1856
 6814 00ca FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6815              	.LVL363:
 652:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6816              		.loc 20 652 18 view .LVU1857
 6817 00ce 0023     		movs	r3, #0
 6818 00d0 80EE080A 		vdiv.f32	s0, s0, s16
 6819 00d4 A148     		ldr	r0, .L430+28
 6820 00d6 DDE90812 		ldrd	r1, r2, [sp, #32]
 6821 00da FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6822              	.LVL364:
 653:Veno-Echo.cpp **** 
 6823              		.loc 20 653 5 is_stmt 1 view .LVU1858
 653:Veno-Echo.cpp **** 
 6824              		.loc 20 653 20 is_stmt 0 view .LVU1859
 6825 00de 1820     		movs	r0, #24
 6826 00e0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6827              	.LVL365:
 6828 00e4 0346     		mov	r3, r0	@ movhi
 6829 00e6 0420     		movs	r0, #4
 6830 00e8 ADF82830 		strh	r3, [sp, #40]	@ movhi
 6831 00ec FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6832              	.LVL366:
 6833 00f0 0346     		mov	r3, r0	@ movhi
 653:Veno-Echo.cpp **** 
 6834              		.loc 20 653 93 view .LVU1860
 6835 00f2 9348     		ldr	r0, .L430
 653:Veno-Echo.cpp **** 
 6836              		.loc 20 653 20 view .LVU1861
 6837 00f4 ADF82C30 		strh	r3, [sp, #44]	@ movhi
 653:Veno-Echo.cpp **** 
 6838              		.loc 20 653 93 view .LVU1862
 6839 00f8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6840              	.LVL367:
 653:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 245


 6841              		.loc 20 653 20 view .LVU1863
 6842 00fc 2346     		mov	r3, r4
 6843 00fe 80EE080A 		vdiv.f32	s0, s0, s16
 6844 0102 9748     		ldr	r0, .L430+32
 6845 0104 DDE90A12 		ldrd	r1, r2, [sp, #40]
 6846 0108 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6847              	.LVL368:
 656:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6848              		.loc 20 656 5 is_stmt 1 view .LVU1864
 656:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6849              		.loc 20 656 22 is_stmt 0 view .LVU1865
 6850 010c 0020     		movs	r0, #0
 6851 010e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6852              	.LVL369:
 6853 0112 0346     		mov	r3, r0	@ movhi
 656:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6854              		.loc 20 656 55 view .LVU1866
 6855 0114 8A48     		ldr	r0, .L430
 656:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6856              		.loc 20 656 22 view .LVU1867
 6857 0116 ADF83030 		strh	r3, [sp, #48]	@ movhi
 656:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6858              		.loc 20 656 55 view .LVU1868
 6859 011a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6860              	.LVL370:
 656:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6861              		.loc 20 656 22 view .LVU1869
 6862 011e 0123     		movs	r3, #1
 6863 0120 80EE080A 		vdiv.f32	s0, s0, s16
 6864 0124 0C99     		ldr	r1, [sp, #48]
 6865 0126 1A46     		mov	r2, r3
 6866 0128 8E48     		ldr	r0, .L430+36
 6867 012a 0094     		str	r4, [sp]
 6868 012c FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6869              	.LVL371:
 657:Veno-Echo.cpp **** 
 6870              		.loc 20 657 5 is_stmt 1 view .LVU1870
 657:Veno-Echo.cpp **** 
 6871              		.loc 20 657 22 is_stmt 0 view .LVU1871
 6872 0130 0120     		movs	r0, #1
 6873 0132 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6874              	.LVL372:
 6875 0136 0346     		mov	r3, r0	@ movhi
 657:Veno-Echo.cpp **** 
 6876              		.loc 20 657 55 view .LVU1872
 6877 0138 8148     		ldr	r0, .L430
 657:Veno-Echo.cpp **** 
 6878              		.loc 20 657 22 view .LVU1873
 6879 013a ADF83430 		strh	r3, [sp, #52]	@ movhi
 657:Veno-Echo.cpp **** 
 6880              		.loc 20 657 55 view .LVU1874
 6881 013e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6882              	.LVL373:
 657:Veno-Echo.cpp **** 
 6883              		.loc 20 657 22 view .LVU1875
 6884 0142 4246     		mov	r2, r8
 6885 0144 80EE080A 		vdiv.f32	s0, s0, s16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 246


 6886 0148 0D99     		ldr	r1, [sp, #52]
 6887 014a 4346     		mov	r3, r8
 6888 014c 8648     		ldr	r0, .L430+40
 6889 014e 0094     		str	r4, [sp]
 6890              	.LBB1569:
 6891              	.LBB1570:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6892              		.loc 7 54 63 view .LVU1876
 6893 0150 4FF07C54 		mov	r4, #1056964608
 6894              	.LBE1570:
 6895              	.LBE1569:
 657:Veno-Echo.cpp **** 
 6896              		.loc 20 657 22 view .LVU1877
 6897 0154 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6898              	.LVL374:
 660:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6899              		.loc 20 660 5 is_stmt 1 view .LVU1878
 660:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6900              		.loc 20 660 14 is_stmt 0 view .LVU1879
 6901 0158 1720     		movs	r0, #23
 6902 015a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6903              	.LVL375:
 6904 015e 0346     		mov	r3, r0	@ movhi
 660:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6905              		.loc 20 660 48 view .LVU1880
 6906 0160 7748     		ldr	r0, .L430
 660:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6907              		.loc 20 660 14 view .LVU1881
 6908 0162 ADF83830 		strh	r3, [sp, #56]	@ movhi
 660:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6909              		.loc 20 660 48 view .LVU1882
 6910 0166 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6911              	.LVL376:
 660:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6912              		.loc 20 660 14 view .LVU1883
 6913 016a 0E99     		ldr	r1, [sp, #56]
 6914 016c 80EE080A 		vdiv.f32	s0, s0, s16
 6915 0170 7E48     		ldr	r0, .L430+44
 6916 0172 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 6917              	.LVL377:
 661:Veno-Echo.cpp ****     
 6918              		.loc 20 661 5 is_stmt 1 view .LVU1884
 661:Veno-Echo.cpp ****     
 6919              		.loc 20 661 17 is_stmt 0 view .LVU1885
 6920 0176 0520     		movs	r0, #5
 6921 0178 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6922              	.LVL378:
 6923 017c 0346     		mov	r3, r0	@ movhi
 6924 017e 7048     		ldr	r0, .L430
 6925 0180 ADF83C30 		strh	r3, [sp, #60]	@ movhi
 6926 0184 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6927              	.LVL379:
 6928 0188 0F99     		ldr	r1, [sp, #60]
 6929 018a 7948     		ldr	r0, .L430+48
 6930 018c FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 6931              	.LVL380:
 663:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 247


 6932              		.loc 20 663 5 is_stmt 1 view .LVU1886
 663:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6933              		.loc 20 663 20 is_stmt 0 view .LVU1887
 6934 0190 6B48     		ldr	r0, .L430
 6935 0192 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6936              	.LVL381:
 6937 0196 3846     		mov	r0, r7
 6938 0198 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6939              	.LVL382:
 664:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 6940              		.loc 20 664 5 is_stmt 1 view .LVU1888
 6941              	.LBB1573:
 6942              	.LBI1569:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6943              		.loc 7 54 17 view .LVU1889
 6944              	.LBB1571:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6945              		.loc 7 54 48 view .LVU1890
 6946              	.LBE1571:
 6947              	.LBE1573:
 669:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6948              		.loc 20 669 20 is_stmt 0 view .LVU1891
 6949 019c 6848     		ldr	r0, .L430
 6950              	.LBB1574:
 6951              	.LBB1563:
 6952              		.loc 7 58 57 view .LVU1892
 6953 019e C7ED008A 		vstr.32	s17, [r7]
 6954              	.LBE1563:
 6955              	.LBE1574:
 6956              	.LBB1575:
 6957              	.LBB1572:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6958              		.loc 7 54 63 view .LVU1893
 6959 01a2 BC60     		str	r4, [r7, #8]	@ float
 6960              	.LVL383:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6961              		.loc 7 54 63 view .LVU1894
 6962              	.LBE1572:
 6963              	.LBE1575:
 665:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 6964              		.loc 20 665 5 is_stmt 1 view .LVU1895
 6965              	.LBB1576:
 6966              	.LBI1565:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6967              		.loc 7 54 17 view .LVU1896
 6968              	.LBB1567:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6969              		.loc 7 54 48 view .LVU1897
 6970              	.LBE1567:
 6971              	.LBE1576:
 6972              	.LBB1577:
 6973              	.LBB1578:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6974              		.loc 7 54 63 is_stmt 0 view .LVU1898
 6975 01a4 7C61     		str	r4, [r7, #20]	@ float
 6976              	.LBE1578:
 6977              	.LBE1577:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 248


 6978              	.LBB1580:
 6979              	.LBB1568:
 6980 01a6 FD60     		str	r5, [r7, #12]	@ float
 6981              	.LVL384:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6982              		.loc 7 54 63 view .LVU1899
 6983              	.LBE1568:
 6984              	.LBE1580:
 666:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 6985              		.loc 20 666 5 is_stmt 1 view .LVU1900
 6986              	.LBB1581:
 6987              	.LBI1577:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6988              		.loc 7 54 17 view .LVU1901
 6989              	.LBB1579:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6990              		.loc 7 54 48 view .LVU1902
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6991              		.loc 7 54 48 is_stmt 0 view .LVU1903
 6992              	.LBE1579:
 6993              	.LBE1581:
 667:Veno-Echo.cpp **** 
 6994              		.loc 20 667 5 is_stmt 1 view .LVU1904
 6995              	.LBB1582:
 6996              	.LBI1561:
 6997              		.loc 7 58 17 view .LVU1905
 6998              	.LBB1564:
 6999              		.loc 7 58 52 view .LVU1906
 7000              		.loc 7 58 52 is_stmt 0 view .LVU1907
 7001              	.LBE1564:
 7002              	.LBE1582:
 669:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 7003              		.loc 20 669 5 is_stmt 1 view .LVU1908
 669:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 7004              		.loc 20 669 20 is_stmt 0 view .LVU1909
 7005 01a8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7006              	.LVL385:
 675:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7007              		.loc 20 675 17 view .LVU1910
 7008 01ac 714F     		ldr	r7, .L430+52
 669:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 7009              		.loc 20 669 20 view .LVU1911
 7010 01ae 3046     		mov	r0, r6
 7011 01b0 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 7012              	.LVL386:
 670:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 7013              		.loc 20 670 5 is_stmt 1 view .LVU1912
 7014              	.LBB1583:
 7015              	.LBI1583:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7016              		.loc 7 54 17 view .LVU1913
 7017              	.LBB1584:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7018              		.loc 7 54 48 view .LVU1914
 7019              	.LBE1584:
 7020              	.LBE1583:
 675:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 249


 7021              		.loc 20 675 17 is_stmt 0 view .LVU1915
 7022 01b4 6248     		ldr	r0, .L430
 7023              	.LBB1586:
 7024              	.LBB1587:
 7025              		.loc 7 58 57 view .LVU1916
 7026 01b6 C6ED008A 		vstr.32	s17, [r6]
 7027              	.LBE1587:
 7028              	.LBE1586:
 7029              	.LBB1589:
 7030              	.LBB1585:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7031              		.loc 7 54 63 view .LVU1917
 7032 01ba B460     		str	r4, [r6, #8]	@ float
 7033              	.LVL387:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7034              		.loc 7 54 63 view .LVU1918
 7035              	.LBE1585:
 7036              	.LBE1589:
 671:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 7037              		.loc 20 671 5 is_stmt 1 view .LVU1919
 7038              	.LBB1590:
 7039              	.LBI1590:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7040              		.loc 7 54 17 view .LVU1920
 7041              	.LBB1591:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7042              		.loc 7 54 48 view .LVU1921
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7043              		.loc 7 54 63 is_stmt 0 view .LVU1922
 7044 01bc F560     		str	r5, [r6, #12]	@ float
 7045              	.LVL388:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7046              		.loc 7 54 63 view .LVU1923
 7047              	.LBE1591:
 7048              	.LBE1590:
 672:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 7049              		.loc 20 672 5 is_stmt 1 view .LVU1924
 7050              	.LBB1592:
 7051              	.LBI1592:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7052              		.loc 7 54 17 view .LVU1925
 7053              	.LBB1593:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7054              		.loc 7 54 48 view .LVU1926
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7055              		.loc 7 54 63 is_stmt 0 view .LVU1927
 7056 01be 7461     		str	r4, [r6, #20]	@ float
 7057              	.LVL389:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7058              		.loc 7 54 63 view .LVU1928
 7059              	.LBE1593:
 7060              	.LBE1592:
 673:Veno-Echo.cpp **** 
 7061              		.loc 20 673 5 is_stmt 1 view .LVU1929
 7062              	.LBB1594:
 7063              	.LBI1586:
 7064              		.loc 7 58 17 view .LVU1930
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 250


 7065              	.LBB1588:
 7066              		.loc 7 58 52 view .LVU1931
 7067              		.loc 7 58 52 is_stmt 0 view .LVU1932
 7068              	.LBE1588:
 7069              	.LBE1594:
 675:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7070              		.loc 20 675 5 is_stmt 1 view .LVU1933
 675:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7071              		.loc 20 675 17 is_stmt 0 view .LVU1934
 7072 01c0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7073              	.LVL390:
 681:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7074              		.loc 20 681 17 view .LVU1935
 7075 01c4 6C4E     		ldr	r6, .L430+56
 675:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7076              		.loc 20 675 17 view .LVU1936
 7077 01c6 3846     		mov	r0, r7
 7078 01c8 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 7079              	.LVL391:
 676:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 7080              		.loc 20 676 5 is_stmt 1 view .LVU1937
 7081              	.LBB1595:
 7082              	.LBI1595:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7083              		.loc 7 54 17 view .LVU1938
 7084              	.LBB1596:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7085              		.loc 7 54 48 view .LVU1939
 7086              	.LBE1596:
 7087              	.LBE1595:
 681:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7088              		.loc 20 681 17 is_stmt 0 view .LVU1940
 7089 01cc 5C48     		ldr	r0, .L430
 7090              	.LBB1598:
 7091              	.LBB1599:
 7092              		.loc 7 58 57 view .LVU1941
 7093 01ce C7ED008A 		vstr.32	s17, [r7]
 7094              	.LBE1599:
 7095              	.LBE1598:
 7096              	.LBB1601:
 7097              	.LBB1597:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7098              		.loc 7 54 63 view .LVU1942
 7099 01d2 BD60     		str	r5, [r7, #8]	@ float
 7100              	.LVL392:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7101              		.loc 7 54 63 view .LVU1943
 7102              	.LBE1597:
 7103              	.LBE1601:
 677:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 7104              		.loc 20 677 5 is_stmt 1 view .LVU1944
 7105              	.LBB1602:
 7106              	.LBI1602:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7107              		.loc 7 54 17 view .LVU1945
 7108              	.LBB1603:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 251


 7109              		.loc 7 54 48 view .LVU1946
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7110              		.loc 7 54 63 is_stmt 0 view .LVU1947
 7111 01d4 FD60     		str	r5, [r7, #12]	@ float
 7112              	.LVL393:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7113              		.loc 7 54 63 view .LVU1948
 7114              	.LBE1603:
 7115              	.LBE1602:
 678:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 7116              		.loc 20 678 5 is_stmt 1 view .LVU1949
 7117              	.LBB1604:
 7118              	.LBI1604:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7119              		.loc 7 54 17 view .LVU1950
 7120              	.LBB1605:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7121              		.loc 7 54 48 view .LVU1951
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7122              		.loc 7 54 63 is_stmt 0 view .LVU1952
 7123 01d6 7D61     		str	r5, [r7, #20]	@ float
 7124              	.LVL394:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7125              		.loc 7 54 63 view .LVU1953
 7126              	.LBE1605:
 7127              	.LBE1604:
 679:Veno-Echo.cpp **** 
 7128              		.loc 20 679 5 is_stmt 1 view .LVU1954
 7129              	.LBB1606:
 7130              	.LBI1598:
 7131              		.loc 7 58 17 view .LVU1955
 7132              	.LBB1600:
 7133              		.loc 7 58 52 view .LVU1956
 7134              		.loc 7 58 52 is_stmt 0 view .LVU1957
 7135              	.LBE1600:
 7136              	.LBE1606:
 681:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7137              		.loc 20 681 5 is_stmt 1 view .LVU1958
 681:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7138              		.loc 20 681 17 is_stmt 0 view .LVU1959
 7139 01d8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7140              	.LVL395:
 7141 01dc 3046     		mov	r0, r6
 700:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 7142              		.loc 20 700 17 view .LVU1960
 7143 01de 9FED678A 		vldr.32	s16, .L430+60
 681:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7144              		.loc 20 681 17 view .LVU1961
 7145 01e2 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 7146              	.LVL396:
 682:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 7147              		.loc 20 682 5 is_stmt 1 view .LVU1962
 7148              	.LBB1607:
 7149              	.LBI1607:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7150              		.loc 7 54 17 view .LVU1963
 7151              	.LBB1608:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 252


  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7152              		.loc 7 54 48 view .LVU1964
 7153              	.LBE1608:
 7154              	.LBE1607:
 7155              	.LBB1610:
 7156              	.LBB1611:
 7157              	.LBB1612:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7158              		.loc 10 45 16 is_stmt 0 view .LVU1965
 7159 01e6 6649     		ldr	r1, .L430+64
 7160              	.LBE1612:
 7161              	.LBE1611:
 7162              	.LBE1610:
 7163              	.LBB1617:
 7164              	.LBB1618:
 7165              	.LBB1619:
 7166 01e8 664A     		ldr	r2, .L430+68
 7167              	.LBE1619:
 7168              	.LBE1618:
 7169              	.LBE1617:
 7170              	.LBB1624:
 7171              	.LBB1625:
 7172              	.LBB1626:
 7173 01ea 674B     		ldr	r3, .L430+72
 7174              	.LBE1626:
 7175              	.LBE1625:
 7176              	.LBE1624:
 7177              	.LBB1631:
 7178              	.LBB1615:
 7179              	.LBB1613:
 7180 01ec 0C60     		str	r4, [r1]	@ float
 7181              	.LBE1613:
 7182              	.LBE1615:
 7183              	.LBE1631:
 7184              	.LBB1632:
 7185              	.LBB1622:
 7186              	.LBB1620:
 7187 01ee 1460     		str	r4, [r2]	@ float
 7188              	.LBE1620:
 7189              	.LBE1622:
 7190              	.LBE1632:
 7191              	.LBB1633:
 7192              	.LBB1629:
 7193              	.LBB1627:
 7194 01f0 1C60     		str	r4, [r3]	@ float
 7195              	.LBE1627:
 7196              	.LBE1629:
 7197              	.LBE1633:
 7198              	.LBB1634:
 7199              	.LBB1559:
 7200              		.loc 10 64 50 view .LVU1966
 7201 01f2 81F80480 		strb	r8, [r1, #4]
 7202              	.LBE1559:
 7203              	.LBE1634:
 7204              	.LBB1635:
 7205              	.LBB1636:
 7206 01f6 82F80480 		strb	r8, [r2, #4]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 253


 7207              	.LBE1636:
 7208              	.LBE1635:
 7209              	.LBB1638:
 7210              	.LBB1639:
 7211 01fa 83F80480 		strb	r8, [r3, #4]
 7212              	.LBE1639:
 7213              	.LBE1638:
 696:Veno-Echo.cpp **** 
 7214              		.loc 20 696 15 view .LVU1967
 7215 01fe 5048     		ldr	r0, .L430
 7216              	.LBB1641:
 7217              	.LBB1642:
 7218              		.loc 7 58 57 view .LVU1968
 7219 0200 C6ED008A 		vstr.32	s17, [r6]
 7220              	.LBE1642:
 7221              	.LBE1641:
 7222              	.LBB1644:
 7223              	.LBB1609:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7224              		.loc 7 54 63 view .LVU1969
 7225 0204 B560     		str	r5, [r6, #8]	@ float
 7226              	.LVL397:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7227              		.loc 7 54 63 view .LVU1970
 7228              	.LBE1609:
 7229              	.LBE1644:
 683:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 7230              		.loc 20 683 5 is_stmt 1 view .LVU1971
 7231              	.LBB1645:
 7232              	.LBI1645:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7233              		.loc 7 54 17 view .LVU1972
 7234              	.LBB1646:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7235              		.loc 7 54 48 view .LVU1973
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7236              		.loc 7 54 63 is_stmt 0 view .LVU1974
 7237 0206 F560     		str	r5, [r6, #12]	@ float
 7238              	.LVL398:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7239              		.loc 7 54 63 view .LVU1975
 7240              	.LBE1646:
 7241              	.LBE1645:
 684:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 7242              		.loc 20 684 5 is_stmt 1 view .LVU1976
 7243              	.LBB1647:
 7244              	.LBI1647:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7245              		.loc 7 54 17 view .LVU1977
 7246              	.LBB1648:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7247              		.loc 7 54 48 view .LVU1978
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7248              		.loc 7 54 63 is_stmt 0 view .LVU1979
 7249 0208 7561     		str	r5, [r6, #20]	@ float
 7250              	.LVL399:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 254


 7251              		.loc 7 54 63 view .LVU1980
 7252              	.LBE1648:
 7253              	.LBE1647:
 685:Veno-Echo.cpp **** 
 7254              		.loc 20 685 5 is_stmt 1 view .LVU1981
 7255              	.LBB1649:
 7256              	.LBI1641:
 7257              		.loc 7 58 17 view .LVU1982
 7258              	.LBB1643:
 7259              		.loc 7 58 52 view .LVU1983
 7260              		.loc 7 58 52 is_stmt 0 view .LVU1984
 7261              	.LBE1643:
 7262              	.LBE1649:
 688:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 7263              		.loc 20 688 5 is_stmt 1 view .LVU1985
 7264              	.LBB1650:
 7265              	.LBI1610:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7266              		.loc 10 51 17 view .LVU1986
 7267              	.LBE1650:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7268              		.loc 10 51 26 view .LVU1987
 7269              	.LBB1651:
 7270              	.LBB1616:
 7271              	.LBI1611:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7272              		.loc 10 43 17 view .LVU1988
 7273              	.LBB1614:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7274              		.loc 10 45 9 view .LVU1989
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7275              		.loc 10 46 9 view .LVU1990
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7276              		.loc 10 46 9 is_stmt 0 view .LVU1991
 7277              	.LBE1614:
 7278              	.LBE1616:
 7279              	.LBE1651:
 689:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 7280              		.loc 20 689 5 is_stmt 1 view .LVU1992
 7281              	.LBB1652:
 7282              	.LBI1557:
 7283              		.loc 10 64 17 view .LVU1993
 7284              	.LBB1560:
 7285              		.loc 10 64 43 view .LVU1994
 7286              		.loc 10 64 43 is_stmt 0 view .LVU1995
 7287              	.LBE1560:
 7288              	.LBE1652:
 690:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 7289              		.loc 20 690 5 is_stmt 1 view .LVU1996
 7290              	.LBB1653:
 7291              	.LBI1617:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7292              		.loc 10 51 17 view .LVU1997
 7293              	.LBE1653:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7294              		.loc 10 51 26 view .LVU1998
 7295              	.LBB1654:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 255


 7296              	.LBB1623:
 7297              	.LBI1618:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7298              		.loc 10 43 17 view .LVU1999
 7299              	.LBB1621:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7300              		.loc 10 45 9 view .LVU2000
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7301              		.loc 10 46 9 view .LVU2001
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7302              		.loc 10 46 9 is_stmt 0 view .LVU2002
 7303              	.LBE1621:
 7304              	.LBE1623:
 7305              	.LBE1654:
 691:Veno-Echo.cpp **** 
 7306              		.loc 20 691 5 is_stmt 1 view .LVU2003
 7307              	.LBB1655:
 7308              	.LBI1635:
 7309              		.loc 10 64 17 view .LVU2004
 7310              	.LBB1637:
 7311              		.loc 10 64 43 view .LVU2005
 7312              		.loc 10 64 43 is_stmt 0 view .LVU2006
 7313              	.LBE1637:
 7314              	.LBE1655:
 693:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 7315              		.loc 20 693 5 is_stmt 1 view .LVU2007
 7316              	.LBB1656:
 7317              	.LBI1624:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7318              		.loc 10 51 17 view .LVU2008
 7319              	.LBE1656:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7320              		.loc 10 51 26 view .LVU2009
 7321              	.LBB1657:
 7322              	.LBB1630:
 7323              	.LBI1625:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7324              		.loc 10 43 17 view .LVU2010
 7325              	.LBB1628:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7326              		.loc 10 45 9 view .LVU2011
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7327              		.loc 10 46 9 view .LVU2012
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7328              		.loc 10 46 9 is_stmt 0 view .LVU2013
 7329              	.LBE1628:
 7330              	.LBE1630:
 7331              	.LBE1657:
 694:Veno-Echo.cpp **** 
 7332              		.loc 20 694 5 is_stmt 1 view .LVU2014
 7333              	.LBB1658:
 7334              	.LBI1638:
 7335              		.loc 10 64 17 view .LVU2015
 7336              	.LBB1640:
 7337              		.loc 10 64 43 view .LVU2016
 7338              		.loc 10 64 43 is_stmt 0 view .LVU2017
 7339              	.LBE1640:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 256


 7340              	.LBE1658:
 696:Veno-Echo.cpp **** 
 7341              		.loc 20 696 5 is_stmt 1 view .LVU2018
 696:Veno-Echo.cpp **** 
 7342              		.loc 20 696 15 is_stmt 0 view .LVU2019
 7343 020a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7344              	.LVL400:
 7345 020e FFF7FEFF 		bl	_Z10InitDelaysf
 7346              	.LVL401:
 699:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 7347              		.loc 20 699 5 is_stmt 1 view .LVU2020
 699:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 7348              		.loc 20 699 15 is_stmt 0 view .LVU2021
 7349 0212 4B48     		ldr	r0, .L430
 7350 0214 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7351              	.LVL402:
 7352 0218 5C48     		ldr	r0, .L430+76
 7353 021a FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7354              	.LVL403:
 700:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 7355              		.loc 20 700 5 is_stmt 1 view .LVU2022
 700:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 7356              		.loc 20 700 17 is_stmt 0 view .LVU2023
 7357 021e B0EE480A 		vmov.f32	s0, s16
 7358 0222 5A48     		ldr	r0, .L430+76
 7359 0224 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7360              	.LVL404:
 701:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 7361              		.loc 20 701 5 is_stmt 1 view .LVU2024
 701:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 7362              		.loc 20 701 18 is_stmt 0 view .LVU2025
 7363 0228 9FED590A 		vldr.32	s0, .L430+80
 7364 022c 5748     		ldr	r0, .L430+76
 7365 022e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7366              	.LVL405:
 702:Veno-Echo.cpp **** 
 7367              		.loc 20 702 5 is_stmt 1 view .LVU2026
 702:Veno-Echo.cpp **** 
 7368              		.loc 20 702 19 is_stmt 0 view .LVU2027
 7369 0232 9FED580A 		vldr.32	s0, .L430+84
 7370 0236 5548     		ldr	r0, .L430+76
 7371 0238 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7372              	.LVL406:
 704:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 7373              		.loc 20 704 5 is_stmt 1 view .LVU2028
 704:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 7374              		.loc 20 704 15 is_stmt 0 view .LVU2029
 7375 023c 4048     		ldr	r0, .L430
 7376 023e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7377              	.LVL407:
 7378 0242 5548     		ldr	r0, .L430+88
 7379 0244 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7380              	.LVL408:
 705:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 7381              		.loc 20 705 5 is_stmt 1 view .LVU2030
 705:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 7382              		.loc 20 705 17 is_stmt 0 view .LVU2031
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 257


 7383 0248 B0EE480A 		vmov.f32	s0, s16
 7384 024c 5248     		ldr	r0, .L430+88
 7385 024e FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7386              	.LVL409:
 706:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 7387              		.loc 20 706 5 is_stmt 1 view .LVU2032
 706:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 7388              		.loc 20 706 18 is_stmt 0 view .LVU2033
 7389 0252 9FED4F0A 		vldr.32	s0, .L430+80
 7390 0256 5048     		ldr	r0, .L430+88
 7391 0258 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7392              	.LVL410:
 707:Veno-Echo.cpp **** 
 7393              		.loc 20 707 5 is_stmt 1 view .LVU2034
 707:Veno-Echo.cpp **** 
 7394              		.loc 20 707 19 is_stmt 0 view .LVU2035
 7395 025c 9FED4D0A 		vldr.32	s0, .L430+84
 7396 0260 4D48     		ldr	r0, .L430+88
 7397 0262 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7398              	.LVL411:
 710:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 7399              		.loc 20 710 5 is_stmt 1 view .LVU2036
 710:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 7400              		.loc 20 710 15 is_stmt 0 view .LVU2037
 7401 0266 3648     		ldr	r0, .L430
 7402 0268 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7403              	.LVL412:
 7404 026c 4B48     		ldr	r0, .L430+92
 7405 026e FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7406              	.LVL413:
 711:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 7407              		.loc 20 711 5 is_stmt 1 view .LVU2038
 711:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 7408              		.loc 20 711 17 is_stmt 0 view .LVU2039
 7409 0272 B0EE480A 		vmov.f32	s0, s16
 7410 0276 4948     		ldr	r0, .L430+92
 7411 0278 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7412              	.LVL414:
 712:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 7413              		.loc 20 712 5 is_stmt 1 view .LVU2040
 712:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 7414              		.loc 20 712 18 is_stmt 0 view .LVU2041
 7415 027c 9FED480A 		vldr.32	s0, .L430+96
 7416 0280 4648     		ldr	r0, .L430+92
 7417 0282 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7418              	.LVL415:
 713:Veno-Echo.cpp **** 
 7419              		.loc 20 713 5 is_stmt 1 view .LVU2042
 713:Veno-Echo.cpp **** 
 7420              		.loc 20 713 19 is_stmt 0 view .LVU2043
 7421 0286 9FED430A 		vldr.32	s0, .L430+84
 7422 028a 4448     		ldr	r0, .L430+92
 7423 028c FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7424              	.LVL416:
 715:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 7425              		.loc 20 715 5 is_stmt 1 view .LVU2044
 715:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 258


 7426              		.loc 20 715 15 is_stmt 0 view .LVU2045
 7427 0290 2B48     		ldr	r0, .L430
 7428 0292 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7429              	.LVL417:
 7430 0296 4348     		ldr	r0, .L430+100
 7431 0298 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7432              	.LVL418:
 716:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 7433              		.loc 20 716 5 is_stmt 1 view .LVU2046
 716:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 7434              		.loc 20 716 17 is_stmt 0 view .LVU2047
 7435 029c B0EE480A 		vmov.f32	s0, s16
 7436 02a0 4048     		ldr	r0, .L430+100
 7437 02a2 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7438              	.LVL419:
 717:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 7439              		.loc 20 717 5 is_stmt 1 view .LVU2048
 717:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 7440              		.loc 20 717 18 is_stmt 0 view .LVU2049
 7441 02a6 9FED3E0A 		vldr.32	s0, .L430+96
 7442 02aa 3E48     		ldr	r0, .L430+100
 7443 02ac FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7444              	.LVL420:
 718:Veno-Echo.cpp **** 
 7445              		.loc 20 718 5 is_stmt 1 view .LVU2050
 718:Veno-Echo.cpp **** 
 7446              		.loc 20 718 19 is_stmt 0 view .LVU2051
 7447 02b0 9FED380A 		vldr.32	s0, .L430+84
 7448 02b4 3B48     		ldr	r0, .L430+100
 7449 02b6 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7450              	.LVL421:
 721:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 7451              		.loc 20 721 5 is_stmt 1 view .LVU2052
 721:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 7452              		.loc 20 721 20 is_stmt 0 view .LVU2053
 7453 02ba 2148     		ldr	r0, .L430
 7454 02bc FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7455              	.LVL422:
 7456 02c0 3948     		ldr	r0, .L430+104
 7457 02c2 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7458              	.LVL423:
 722:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 7459              		.loc 20 722 5 is_stmt 1 view .LVU2054
 722:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 7460              		.loc 20 722 22 is_stmt 0 view .LVU2055
 7461 02c6 B0EE480A 		vmov.f32	s0, s16
 7462 02ca 3748     		ldr	r0, .L430+104
 7463 02cc FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7464              	.LVL424:
 723:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 7465              		.loc 20 723 5 is_stmt 1 view .LVU2056
 723:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 7466              		.loc 20 723 23 is_stmt 0 view .LVU2057
 7467 02d0 9FED2F0A 		vldr.32	s0, .L430+80
 7468 02d4 3448     		ldr	r0, .L430+104
 7469 02d6 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7470              	.LVL425:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 259


 724:Veno-Echo.cpp **** 
 7471              		.loc 20 724 5 is_stmt 1 view .LVU2058
 724:Veno-Echo.cpp **** 
 7472              		.loc 20 724 24 is_stmt 0 view .LVU2059
 7473 02da 9FED2E0A 		vldr.32	s0, .L430+84
 7474 02de 3248     		ldr	r0, .L430+104
 7475 02e0 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7476              	.LVL426:
 726:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 7477              		.loc 20 726 5 is_stmt 1 view .LVU2060
 726:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 7478              		.loc 20 726 20 is_stmt 0 view .LVU2061
 7479 02e4 1648     		ldr	r0, .L430
 7480 02e6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7481              	.LVL427:
 7482 02ea 3048     		ldr	r0, .L430+108
 7483 02ec FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7484              	.LVL428:
 727:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 7485              		.loc 20 727 5 is_stmt 1 view .LVU2062
 727:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 7486              		.loc 20 727 22 is_stmt 0 view .LVU2063
 7487 02f0 B0EE480A 		vmov.f32	s0, s16
 7488 02f4 2D48     		ldr	r0, .L430+108
 7489 02f6 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7490              	.LVL429:
 728:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 7491              		.loc 20 728 5 is_stmt 1 view .LVU2064
 728:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 7492              		.loc 20 728 23 is_stmt 0 view .LVU2065
 7493 02fa 9FED250A 		vldr.32	s0, .L430+80
 7494 02fe 2B48     		ldr	r0, .L430+108
 7495 0300 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7496              	.LVL430:
 729:Veno-Echo.cpp **** 
 7497              		.loc 20 729 5 is_stmt 1 view .LVU2066
 729:Veno-Echo.cpp **** 
 7498              		.loc 20 729 24 is_stmt 0 view .LVU2067
 7499 0304 9FED230A 		vldr.32	s0, .L430+84
 7500 0308 2848     		ldr	r0, .L430+108
 7501 030a FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7502              	.LVL431:
 732:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 7503              		.loc 20 732 5 is_stmt 1 view .LVU2068
 732:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 7504              		.loc 20 732 20 is_stmt 0 view .LVU2069
 7505 030e 0C48     		ldr	r0, .L430
 7506 0310 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7507              	.LVL432:
 7508 0314 2648     		ldr	r0, .L430+112
 7509 0316 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7510              	.LVL433:
 733:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 7511              		.loc 20 733 5 is_stmt 1 view .LVU2070
 733:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 7512              		.loc 20 733 22 is_stmt 0 view .LVU2071
 7513 031a B0EE480A 		vmov.f32	s0, s16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 260


 7514 031e 2448     		ldr	r0, .L430+112
 7515 0320 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7516              	.LVL434:
 734:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 7517              		.loc 20 734 5 is_stmt 1 view .LVU2072
 734:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 7518              		.loc 20 734 23 is_stmt 0 view .LVU2073
 7519 0324 9FED1E0A 		vldr.32	s0, .L430+96
 7520 0328 2148     		ldr	r0, .L430+112
 7521 032a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7522              	.LVL435:
 735:Veno-Echo.cpp **** 
 7523              		.loc 20 735 5 is_stmt 1 view .LVU2074
 735:Veno-Echo.cpp **** 
 7524              		.loc 20 735 24 is_stmt 0 view .LVU2075
 7525 032e 9FED190A 		vldr.32	s0, .L430+84
 7526 0332 1F48     		ldr	r0, .L430+112
 7527 0334 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7528              	.LVL436:
 737:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 7529              		.loc 20 737 5 is_stmt 1 view .LVU2076
 737:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 7530              		.loc 20 737 20 is_stmt 0 view .LVU2077
 7531 0338 0148     		ldr	r0, .L430
 7532 033a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7533              	.LVL437:
 7534 033e 39E0     		b	.L431
 7535              	.L432:
 7536              		.align	2
 7537              	.L430:
 7538 0340 00000000 		.word	.LANCHOR4
 7539 0344 00000000 		.word	.LANCHOR96
 7540 0348 00000000 		.word	.LANCHOR102
 7541 034c 0AD7233C 		.word	1008981770
 7542 0350 00000000 		.word	.LANCHOR103
 7543 0354 00000000 		.word	.LANCHOR97
 7544 0358 00000000 		.word	.LANCHOR94
 7545 035c 00000000 		.word	.LANCHOR95
 7546 0360 00000000 		.word	.LANCHOR98
 7547 0364 00000000 		.word	.LANCHOR99
 7548 0368 00000000 		.word	.LANCHOR100
 7549 036c 00000000 		.word	.LANCHOR101
 7550 0370 00000000 		.word	.LANCHOR88
 7551 0374 00000000 		.word	.LANCHOR104
 7552 0378 00000000 		.word	.LANCHOR105
 7553 037c 00000000 		.word	0
 7554 0380 00000000 		.word	.LANCHOR106
 7555 0384 00000000 		.word	.LANCHOR107
 7556 0388 00000000 		.word	.LANCHOR65
 7557 038c 00000000 		.word	.LANCHOR47
 7558 0390 00803B46 		.word	1178304512
 7559 0394 3333333F 		.word	1060320051
 7560 0398 00000000 		.word	.LANCHOR48
 7561 039c 00000000 		.word	.LANCHOR35
 7562 03a0 00004843 		.word	1128792064
 7563 03a4 00000000 		.word	.LANCHOR36
 7564 03a8 00000000 		.word	.LANCHOR49
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 261


 7565 03ac 00000000 		.word	.LANCHOR50
 7566 03b0 00000000 		.word	.LANCHOR37
 7567              	.L431:
 7568 03b4 9E48     		ldr	r0, .L433
 7569 03b6 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7570              	.LVL438:
 738:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 7571              		.loc 20 738 5 is_stmt 1 view .LVU2078
 738:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 7572              		.loc 20 738 22 is_stmt 0 view .LVU2079
 7573 03ba B0EE480A 		vmov.f32	s0, s16
 7574 03be 9C48     		ldr	r0, .L433
 7575 03c0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7576              	.LVL439:
 739:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 7577              		.loc 20 739 5 is_stmt 1 view .LVU2080
 739:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 7578              		.loc 20 739 23 is_stmt 0 view .LVU2081
 7579 03c4 9FED9B0A 		vldr.32	s0, .L433+4
 7580 03c8 9948     		ldr	r0, .L433
 7581 03ca FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7582              	.LVL440:
 740:Veno-Echo.cpp **** 
 7583              		.loc 20 740 5 is_stmt 1 view .LVU2082
 740:Veno-Echo.cpp **** 
 7584              		.loc 20 740 24 is_stmt 0 view .LVU2083
 7585 03ce 9FED9A0A 		vldr.32	s0, .L433+8
 7586 03d2 9748     		ldr	r0, .L433
 7587 03d4 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7588              	.LVL441:
 742:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 7589              		.loc 20 742 5 is_stmt 1 view .LVU2084
 742:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 7590              		.loc 20 742 21 is_stmt 0 view .LVU2085
 7591 03d8 9848     		ldr	r0, .L433+12
 7592 03da FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7593              	.LVL442:
 7594 03de 9848     		ldr	r0, .L433+16
 7595 03e0 FFF7FEFF 		bl	_ZN7daisysp7DcBlock4InitEf
 7596              	.LVL443:
 743:Veno-Echo.cpp **** 
 7597              		.loc 20 743 5 is_stmt 1 view .LVU2086
 743:Veno-Echo.cpp **** 
 7598              		.loc 20 743 21 is_stmt 0 view .LVU2087
 7599 03e4 9548     		ldr	r0, .L433+12
 7600 03e6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7601              	.LVL444:
 7602 03ea 9648     		ldr	r0, .L433+20
 7603 03ec FFF7FEFF 		bl	_ZN7daisysp7DcBlock4InitEf
 7604              	.LVL445:
 746:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 7605              		.loc 20 746 5 is_stmt 1 view .LVU2088
 746:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 7606              		.loc 20 746 13 is_stmt 0 view .LVU2089
 7607 03f0 9248     		ldr	r0, .L433+12
 7608 03f2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7609              	.LVL446:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 262


 7610 03f6 F0EE407A 		vmov.f32	s15, s0
 7611              	.LVL447:
 7612              	.LBB1659:
 7613              	.LBI1659:
  42:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7614              		.loc 8 42 10 is_stmt 1 view .LVU2090
 7615              	.LBB1660:
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7616              		.loc 8 44 9 view .LVU2091
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7617              		.loc 8 44 20 is_stmt 0 view .LVU2092
 7618 03fa 934F     		ldr	r7, .L433+24
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7619              		.loc 8 46 20 view .LVU2093
 7620 03fc 9FED930A 		vldr.32	s0, .L433+28
 7621              	.LVL448:
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7622              		.loc 8 45 27 view .LVU2094
 7623 0400 88EEA77A 		vdiv.f32	s14, s17, s15
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7624              		.loc 8 49 34 view .LVU2095
 7625 0404 3846     		mov	r0, r7
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 7626              		.loc 8 47 20 view .LVU2096
 7627 0406 7C60     		str	r4, [r7, #4]	@ float
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7628              		.loc 8 44 20 view .LVU2097
 7629 0408 C7ED037A 		vstr.32	s15, [r7, #12]
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7630              		.loc 8 45 9 is_stmt 1 view .LVU2098
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 7631              		.loc 8 48 20 is_stmt 0 view .LVU2099
 7632 040c 87ED058A 		vstr.32	s16, [r7, #20]
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7633              		.loc 8 46 20 view .LVU2100
 7634 0410 87ED020A 		vstr.32	s0, [r7, #8]
 7635 0414 8E4C     		ldr	r4, .L433+32
 7636 0416 8F4D     		ldr	r5, .L433+36
 7637 0418 8F4E     		ldr	r6, .L433+40
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7638              		.loc 8 45 20 view .LVU2101
 7639 041a 87ED047A 		vstr.32	s14, [r7, #16]
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7640              		.loc 8 46 9 is_stmt 1 view .LVU2102
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 7641              		.loc 8 47 9 view .LVU2103
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 7642              		.loc 8 48 9 view .LVU2104
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7643              		.loc 8 49 9 view .LVU2105
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7644              		.loc 8 49 34 is_stmt 0 view .LVU2106
 7645 041e FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 7646              	.LVL449:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7647              		.loc 8 52 20 view .LVU2107
 7648 0422 40F20113 		movw	r3, #257
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 263


  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7649              		.loc 8 49 34 view .LVU2108
 7650 0426 F0EE407A 		vmov.f32	s15, s0
 7651              	.LBE1660:
 7652              	.LBE1659:
 7653              	.LBB1663:
 7654              	.LBB1664:
 7655              		.loc 8 61 34 view .LVU2109
 7656 042a 3846     		mov	r0, r7
 7657              	.LBE1664:
 7658              	.LBE1663:
 7659              	.LBB1668:
 7660              	.LBB1669:
  62:../DaisySP/Source/Synthesis/oscillator.h ****     }
  63:../DaisySP/Source/Synthesis/oscillator.h **** 
  64:../DaisySP/Source/Synthesis/oscillator.h **** 
  65:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  66:../DaisySP/Source/Synthesis/oscillator.h ****     */
  67:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:../DaisySP/Source/Synthesis/oscillator.h ****     */
  70:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  71:../DaisySP/Source/Synthesis/oscillator.h ****     {
  72:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 7661              		.loc 8 72 19 view .LVU2110
 7662 042c 87F80080 		strb	r8, [r7]
 7663              	.LBE1669:
 7664              	.LBE1668:
 7665              	.LBB1671:
 7666              	.LBB1661:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7667              		.loc 8 52 20 view .LVU2111
 7668 0430 BB84     		strh	r3, [r7, #36]	@ movhi
 7669              	.LBE1661:
 7670              	.LBE1671:
 7671              	.LBB1672:
 7672              	.LBB1665:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7673              		.loc 8 61 34 view .LVU2112
 7674 0432 B0EE680A 		vmov.f32	s0, s17
 7675              	.LBE1665:
 7676              	.LBE1672:
 7677              	.LBB1673:
 7678              	.LBB1662:
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7679              		.loc 8 49 20 view .LVU2113
 7680 0436 C7ED067A 		vstr.32	s15, [r7, #24]
  50:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
 7681              		.loc 8 50 9 is_stmt 1 view .LVU2114
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
 7682              		.loc 8 51 9 view .LVU2115
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7683              		.loc 8 52 9 view .LVU2116
 7684              	.LVL450:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7685              		.loc 8 52 9 is_stmt 0 view .LVU2117
 7686              	.LBE1662:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 264


 7687              	.LBE1673:
 747:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 7688              		.loc 20 747 5 is_stmt 1 view .LVU2118
 7689              	.LBB1674:
 7690              	.LBI1668:
  70:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7691              		.loc 8 70 17 view .LVU2119
 7692              	.LBB1670:
 7693              		.loc 8 72 9 view .LVU2120
 7694              		.loc 8 72 9 is_stmt 0 view .LVU2121
 7695              	.LBE1670:
 7696              	.LBE1674:
 748:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 7697              		.loc 20 748 5 is_stmt 1 view .LVU2122
 7698              	.LBB1675:
 7699              	.LBI1663:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7700              		.loc 8 58 17 view .LVU2123
 7701              	.LBB1666:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 7702              		.loc 8 60 9 view .LVU2124
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7703              		.loc 8 61 9 view .LVU2125
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 7704              		.loc 8 60 20 is_stmt 0 view .LVU2126
 7705 043a C7ED028A 		vstr.32	s17, [r7, #8]
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7706              		.loc 8 61 34 view .LVU2127
 7707 043e FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 7708              	.LVL451:
 7709 0442 F0EE407A 		vmov.f32	s15, s0
 7710              	.LBE1666:
 7711              	.LBE1675:
 751:Veno-Echo.cpp **** 
 7712              		.loc 20 751 19 view .LVU2128
 7713 0446 854A     		ldr	r2, .L433+44
 7714 0448 44F62061 		movw	r1, #20000
 7715 044c B7EE040A 		vmov.f32	s0, #1.25e+0
 7716 0450 8348     		ldr	r0, .L433+48
 7717              	.LBB1676:
 7718              	.LBB1677:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7719              		.loc 8 67 46 view .LVU2129
 7720 0452 C7ED018A 		vstr.32	s17, [r7, #4]
 7721              	.LBE1677:
 7722              	.LBE1676:
 7723              	.LBB1679:
 7724              	.LBB1667:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7725              		.loc 8 61 20 view .LVU2130
 7726 0456 C7ED067A 		vstr.32	s15, [r7, #24]
 7727              	.LVL452:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7728              		.loc 8 61 20 view .LVU2131
 7729              	.LBE1667:
 7730              	.LBE1679:
 749:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 265


 7731              		.loc 20 749 5 is_stmt 1 view .LVU2132
 7732              	.LBB1680:
 7733              	.LBI1676:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7734              		.loc 8 67 17 view .LVU2133
 7735              	.LBB1678:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7736              		.loc 8 67 41 view .LVU2134
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7737              		.loc 8 67 41 is_stmt 0 view .LVU2135
 7738              	.LBE1678:
 7739              	.LBE1680:
 751:Veno-Echo.cpp **** 
 7740              		.loc 20 751 5 is_stmt 1 view .LVU2136
 751:Veno-Echo.cpp **** 
 7741              		.loc 20 751 19 is_stmt 0 view .LVU2137
 7742 045a FFF7FEFF 		bl	_ZN8Taptempo4initEmmf
 7743              	.LVL453:
 755:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7744              		.loc 20 755 5 is_stmt 1 view .LVU2138
 755:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7745              		.loc 20 755 23 is_stmt 0 view .LVU2139
 7746 045e 1820     		movs	r0, #24
 766:Veno-Echo.cpp **** 
 7747              		.loc 20 766 17 view .LVU2140
 7748 0460 1CAF     		add	r7, sp, #112
 755:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7749              		.loc 20 755 23 view .LVU2141
 7750 0462 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7751              	.LVL454:
 7752 0466 0346     		mov	r3, r0	@ movhi
 7753 0468 7448     		ldr	r0, .L433+12
 7754 046a ADF84030 		strh	r3, [sp, #64]	@ movhi
 7755 046e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7756              	.LVL455:
 7757 0472 1099     		ldr	r1, [sp, #64]
 7758 0474 7B48     		ldr	r0, .L433+52
 7759 0476 FFF7FEFF 		bl	_ZN8TempoLED4initE12dsy_gpio_pinf
 7760              	.LVL456:
 756:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7761              		.loc 20 756 5 is_stmt 1 view .LVU2142
 756:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7762              		.loc 20 756 27 is_stmt 0 view .LVU2143
 7763 047a 7948     		ldr	r0, .L433+48
 7764 047c FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 7765              	.LVL457:
 7766 0480 7848     		ldr	r0, .L433+52
 7767 0482 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 7768              	.LVL458:
 757:Veno-Echo.cpp **** 
 7769              		.loc 20 757 5 is_stmt 1 view .LVU2144
 757:Veno-Echo.cpp **** 
 7770              		.loc 20 757 29 is_stmt 0 view .LVU2145
 7771 0486 7748     		ldr	r0, .L433+52
 7772 0488 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 7773              	.LVL459:
 761:Veno-Echo.cpp ****     //ApplySettings(defaultAltControls);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 266


 7774              		.loc 20 761 5 is_stmt 1 view .LVU2146
 761:Veno-Echo.cpp ****     //ApplySettings(defaultAltControls);
 7775              		.loc 20 761 41 is_stmt 0 view .LVU2147
 7776 048c 1CA8     		add	r0, sp, #112
 7777 048e FFF7FEFF 		bl	_Z12LoadSettingsv
 7778              	.LVL460:
 765:Veno-Echo.cpp ****     AltControls = SavedSettings;
 7779              		.loc 20 765 5 is_stmt 1 view .LVU2148
 765:Veno-Echo.cpp ****     AltControls = SavedSettings;
 7780              		.loc 20 765 18 is_stmt 0 view .LVU2149
 7781 0492 1CA8     		add	r0, sp, #112
 7782 0494 FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 7783              	.LVL461:
 766:Veno-Echo.cpp **** 
 7784              		.loc 20 766 5 is_stmt 1 view .LVU2150
 766:Veno-Echo.cpp **** 
 7785              		.loc 20 766 17 is_stmt 0 view .LVU2151
 7786 0498 DFF8D4C1 		ldr	ip, .L433+64
 7787 049c 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 7788 049e ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 7789 04a2 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 7790 04a4 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 7791 04a8 97E80700 		ldm	r7, {r0, r1, r2}
 7792 04ac 8CE80700 		stm	ip, {r0, r1, r2}
 771:Veno-Echo.cpp **** 
 7793              		.loc 20 771 5 is_stmt 1 view .LVU2152
 773:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 7794              		.loc 20 773 5 view .LVU2153
 773:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 7795              		.loc 20 773 28 is_stmt 0 view .LVU2154
 7796 04b0 0F20     		movs	r0, #15
 7797 04b2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7798              	.LVL462:
 7799 04b6 0346     		mov	r3, r0	@ movhi
 7800 04b8 32A8     		add	r0, sp, #200
 7801 04ba ADF84430 		strh	r3, [sp, #68]	@ movhi
 7802 04be 1199     		ldr	r1, [sp, #68]
 7803 04c0 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7804              	.LVL463:
 774:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 7805              		.loc 20 774 5 is_stmt 1 view .LVU2155
 774:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 7806              		.loc 20 774 28 is_stmt 0 view .LVU2156
 7807 04c4 1020     		movs	r0, #16
 7808 04c6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7809              	.LVL464:
 7810 04ca 0346     		mov	r3, r0	@ movhi
 7811 04cc 0DF1D900 		add	r0, sp, #217
 7812 04d0 ADF84830 		strh	r3, [sp, #72]	@ movhi
 7813 04d4 1299     		ldr	r1, [sp, #72]
 7814 04d6 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7815              	.LVL465:
 775:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 7816              		.loc 20 775 5 is_stmt 1 view .LVU2157
 775:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 7817              		.loc 20 775 28 is_stmt 0 view .LVU2158
 7818 04da 1120     		movs	r0, #17
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 267


 7819 04dc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7820              	.LVL466:
 7821 04e0 0346     		mov	r3, r0	@ movhi
 7822 04e2 0DF1EA00 		add	r0, sp, #234
 7823 04e6 ADF84C30 		strh	r3, [sp, #76]	@ movhi
 7824 04ea 1399     		ldr	r1, [sp, #76]
 7825 04ec FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7826              	.LVL467:
 776:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 7827              		.loc 20 776 5 is_stmt 1 view .LVU2159
 776:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 7828              		.loc 20 776 28 is_stmt 0 view .LVU2160
 7829 04f0 1220     		movs	r0, #18
 7830 04f2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7831              	.LVL468:
 7832 04f6 0346     		mov	r3, r0	@ movhi
 7833 04f8 0DF1FB00 		add	r0, sp, #251
 7834 04fc ADF85030 		strh	r3, [sp, #80]	@ movhi
 7835 0500 1499     		ldr	r1, [sp, #80]
 7836 0502 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7837              	.LVL469:
 777:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 7838              		.loc 20 777 5 is_stmt 1 view .LVU2161
 777:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 7839              		.loc 20 777 28 is_stmt 0 view .LVU2162
 7840 0506 1320     		movs	r0, #19
 7841 0508 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7842              	.LVL470:
 7843 050c 0346     		mov	r3, r0	@ movhi
 7844 050e 43A8     		add	r0, sp, #268
 7845 0510 ADF85430 		strh	r3, [sp, #84]	@ movhi
 7846 0514 1599     		ldr	r1, [sp, #84]
 7847 0516 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7848              	.LVL471:
 778:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 7849              		.loc 20 778 5 is_stmt 1 view .LVU2163
 778:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 7850              		.loc 20 778 28 is_stmt 0 view .LVU2164
 7851 051a 1420     		movs	r0, #20
 7852 051c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7853              	.LVL472:
 7854 0520 0346     		mov	r3, r0	@ movhi
 7855 0522 0DF21D10 		addw	r0, sp, #285
 7856 0526 ADF85830 		strh	r3, [sp, #88]	@ movhi
 7857 052a 1699     		ldr	r1, [sp, #88]
 7858 052c FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7859              	.LVL473:
 780:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 7860              		.loc 20 780 5 is_stmt 1 view .LVU2165
 780:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 7861              		.loc 20 780 28 is_stmt 0 view .LVU2166
 7862 0530 1620     		movs	r0, #22
 7863 0532 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7864              	.LVL474:
 7865 0536 0346     		mov	r3, r0	@ movhi
 7866 0538 0DF59770 		add	r0, sp, #302
 7867 053c ADF85C30 		strh	r3, [sp, #92]	@ movhi
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 268


 7868 0540 1799     		ldr	r1, [sp, #92]
 7869 0542 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7870              	.LVL475:
 781:Veno-Echo.cpp **** 
 7871              		.loc 20 781 5 is_stmt 1 view .LVU2167
 781:Veno-Echo.cpp **** 
 7872              		.loc 20 781 25 is_stmt 0 view .LVU2168
 7873 0546 1920     		movs	r0, #25
 7874 0548 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7875              	.LVL476:
 7876 054c 0346     		mov	r3, r0	@ movhi
 7877 054e 0E20     		movs	r0, #14
 7878 0550 ADF86030 		strh	r3, [sp, #96]	@ movhi
 7879 0554 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7880              	.LVL477:
 7881 0558 0346     		mov	r3, r0	@ movhi
 7882 055a 0D20     		movs	r0, #13
 7883 055c ADF86430 		strh	r3, [sp, #100]	@ movhi
 7884 0560 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7885              	.LVL478:
 7886 0564 0346     		mov	r3, r0	@ movhi
 7887 0566 0C20     		movs	r0, #12
 7888 0568 ADF86830 		strh	r3, [sp, #104]	@ movhi
 7889 056c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7890              	.LVL479:
 7891 0570 BDF86810 		ldrh	r1, [sp, #104]
 7892 0574 0822     		movs	r2, #8
 7893 0576 199B     		ldr	r3, [sp, #100]
 7894 0578 ADF80010 		strh	r1, [sp]	@ movhi
 7895 057c ADF80400 		strh	r0, [sp, #4]	@ movhi
 7896 0580 1899     		ldr	r1, [sp, #96]
 7897 0582 ADF86C00 		strh	r0, [sp, #108]	@ movhi
 7898 0586 0DF23F10 		addw	r0, sp, #319
 7899 058a FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
 7900              	.LVL480:
 784:Veno-Echo.cpp ****     hw.adc.Start();
 7901              		.loc 20 784 5 is_stmt 1 view .LVU2169
 784:Veno-Echo.cpp ****     hw.adc.Start();
 7902              		.loc 20 784 16 is_stmt 0 view .LVU2170
 7903 058e 32A9     		add	r1, sp, #200
 7904 0590 0623     		movs	r3, #6
 7905 0592 0822     		movs	r2, #8
 7906 0594 3448     		ldr	r0, .L433+56
 7907 0596 FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 7908              	.LVL481:
 785:Veno-Echo.cpp **** 
 7909              		.loc 20 785 5 is_stmt 1 view .LVU2171
 785:Veno-Echo.cpp **** 
 7910              		.loc 20 785 17 is_stmt 0 view .LVU2172
 7911 059a 3348     		ldr	r0, .L433+56
 7912 059c FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 7913              	.LVL482:
 788:Veno-Echo.cpp ****     // start audio callback
 7914              		.loc 20 788 5 is_stmt 1 view .LVU2173
 788:Veno-Echo.cpp ****     // start audio callback
 7915              		.loc 20 788 25 is_stmt 0 view .LVU2174
 7916 05a0 4146     		mov	r1, r8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 269


 7917 05a2 2648     		ldr	r0, .L433+12
 7918 05a4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 7919              	.LVL483:
 790:Veno-Echo.cpp **** 
 7920              		.loc 20 790 5 is_stmt 1 view .LVU2175
 790:Veno-Echo.cpp **** 
 7921              		.loc 20 790 18 is_stmt 0 view .LVU2176
 7922 05a8 3049     		ldr	r1, .L433+60
 7923 05aa 2448     		ldr	r0, .L433+12
 7924 05ac FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
 7925              	.LVL484:
 7926              	.L421:
 794:Veno-Echo.cpp ****      {  
 7927              		.loc 20 794 6 is_stmt 1 view .LVU2177
 7928              	.LBB1681:
 797:Veno-Echo.cpp ****         //static bool SaveWaitFlag{};
 7929              		.loc 20 797 9 view .LVU2178
 800:Veno-Echo.cpp ****         {
 7930              		.loc 20 800 9 view .LVU2179
 7931              	.LBB1682:
 7932              	.LBB1683:
 7933              	.LBI1683:
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) volatile noexcept
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator bool() const noexcept
 7934              		.loc 23 87 5 view .LVU2180
 7935              	.LBE1683:
 7936              	.LBE1682:
 7937              	.LBE1681:
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.load(); }
 7938              		.loc 23 88 7 view .LVU2181
 7939              	.LBB1714:
 7940              	.LBB1711:
 7941              	.LBB1689:
 7942              	.LBB1684:
 7943              	.LBI1684:
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i,
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    memory_order __m = memory_order_seq_cst) volatile noexcept
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE __int_type
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       load(memory_order __m = memory_order_seq_cst) const noexcept
 7944              		.loc 22 413 7 view .LVU2182
 7945              		.loc 22 413 7 is_stmt 0 view .LVU2183
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 270


 7946              	.LBE1684:
 7947              	.LBE1689:
 802:Veno-Echo.cpp ****             saveState = WAITING;    //set flag - start waiting
 7948              		.loc 20 802 13 is_stmt 1 view .LVU2184
 7949              	.LBB1690:
 7950              	.LBI1690:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 7951              		.loc 23 80 5 view .LVU2185
 7952              	.LBE1690:
 7953              	.LBE1711:
 7954              	.LBE1714:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 7955              		.loc 23 81 7 view .LVU2186
 7956              	.LBB1715:
 7957              	.LBB1712:
 7958              	.LBB1699:
 7959              	.LBB1691:
 7960              	.LBI1691:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 7961              		.loc 22 288 7 view .LVU2187
 7962              	.LBB1692:
 7963              	.LBI1692:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 7964              		.loc 22 390 7 view .LVU2188
 7965              	.LBE1692:
 7966              	.LBE1691:
 7967              	.LBE1699:
 7968              	.LBB1700:
 809:Veno-Echo.cpp ****            {
 7969              		.loc 20 809 12 view .LVU2189
 7970              	.LBE1700:
 7971              	.LBB1705:
 7972              	.LBB1687:
 7973              	.LBB1685:
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_release);
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_load_n(&_M_i, int(__m));
 7974              		.loc 22 419 24 is_stmt 0 view .LVU2190
 7975 05b0 BFF35B8F 		dmb	ish
 7976 05b4 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 7977              	.LBE1685:
 7978              	.LBE1687:
 7979              	.LBE1705:
 7980              	.LBB1706:
 7981              	.LBB1697:
 7982              	.LBB1695:
 7983              	.LBB1693:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 7984              		.loc 22 397 18 view .LVU2191
 7985 05b6 0021     		movs	r1, #0
 7986              	.LBE1693:
 7987              	.LBE1695:
 7988              	.LBE1697:
 7989              	.LBE1706:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 271


 803:Veno-Echo.cpp ****             saveTimer = System::GetNow();   //reset timer
 7990              		.loc 20 803 23 view .LVU2192
 7991 05b8 0122     		movs	r2, #1
 7992              	.LBB1707:
 7993              	.LBB1688:
 7994              	.LBB1686:
 7995              		.loc 22 419 24 view .LVU2193
 7996 05ba BFF35B8F 		dmb	ish
 7997              	.LBE1686:
 7998              	.LBE1688:
 7999              	.LBE1707:
 800:Veno-Echo.cpp ****         {
 8000              		.loc 20 800 9 view .LVU2194
 8001 05be 4BB1     		cbz	r3, .L422
 8002              	.LBB1708:
 8003              	.LBB1698:
 8004              	.LBB1696:
 8005              	.LBB1694:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8006              		.loc 22 397 18 view .LVU2195
 8007 05c0 BFF35B8F 		dmb	ish
 8008 05c4 2170     		strb	r1, [r4]
 8009 05c6 BFF35B8F 		dmb	ish
 8010              	.LVL485:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8011              		.loc 22 397 18 view .LVU2196
 8012              	.LBE1694:
 8013              	.LBE1696:
 8014              	.LBE1698:
 8015              	.LBE1708:
 803:Veno-Echo.cpp ****             saveTimer = System::GetNow();   //reset timer
 8016              		.loc 20 803 13 is_stmt 1 view .LVU2197
 803:Veno-Echo.cpp ****             saveTimer = System::GetNow();   //reset timer
 8017              		.loc 20 803 23 is_stmt 0 view .LVU2198
 8018 05ca 2A70     		strb	r2, [r5]
 804:Veno-Echo.cpp ****         }
 8019              		.loc 20 804 13 is_stmt 1 view .LVU2199
 804:Veno-Echo.cpp ****         }
 8020              		.loc 20 804 39 is_stmt 0 view .LVU2200
 8021 05cc FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8022              	.LVL486:
 804:Veno-Echo.cpp ****         }
 8023              		.loc 20 804 23 view .LVU2201
 8024 05d0 3060     		str	r0, [r6]
 8025 05d2 EDE7     		b	.L421
 8026              	.LVL487:
 8027              	.L422:
 8028              	.LBB1709:
 8029              	.LBB1701:
 809:Veno-Echo.cpp ****            {
 8030              		.loc 20 809 25 view .LVU2202
 8031 05d4 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 809:Veno-Echo.cpp ****            {
 8032              		.loc 20 809 12 view .LVU2203
 8033 05d6 012B     		cmp	r3, #1
 8034 05d8 0BD0     		beq	.L429
 8035              	.L424:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 272


 8036              	.LBE1701:
 825:Veno-Echo.cpp ****            {
 8037              		.loc 20 825 12 is_stmt 1 view .LVU2204
 8038 05da 022B     		cmp	r3, #2
 8039 05dc E8D1     		bne	.L421
 827:Veno-Echo.cpp ****             {
 8040              		.loc 20 827 13 view .LVU2205
 827:Veno-Echo.cpp ****             {
 8041              		.loc 20 827 30 is_stmt 0 view .LVU2206
 8042 05de FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8043              	.LVL488:
 829:Veno-Echo.cpp ****             }
 8044              		.loc 20 829 21 is_stmt 1 view .LVU2207
 827:Veno-Echo.cpp ****             {
 8045              		.loc 20 827 33 is_stmt 0 view .LVU2208
 8046 05e2 3368     		ldr	r3, [r6]
 829:Veno-Echo.cpp ****             }
 8047              		.loc 20 829 31 view .LVU2209
 8048 05e4 0022     		movs	r2, #0
 827:Veno-Echo.cpp ****             {
 8049              		.loc 20 827 33 view .LVU2210
 8050 05e6 C01A     		subs	r0, r0, r3
 827:Veno-Echo.cpp ****             {
 8051              		.loc 20 827 13 view .LVU2211
 8052 05e8 B0F5966F 		cmp	r0, #1200
 8053 05ec E0D9     		bls	.L421
 829:Veno-Echo.cpp ****             }
 8054              		.loc 20 829 31 view .LVU2212
 8055 05ee 2A70     		strb	r2, [r5]
 8056 05f0 DEE7     		b	.L421
 8057              	.L429:
 8058              	.LBE1709:
 8059              	.LBE1712:
 8060              	.LBE1715:
 811:Veno-Echo.cpp ****                 {
 8061              		.loc 20 811 16 is_stmt 1 view .LVU2213
 8062              	.LBB1716:
 8063              	.LBB1713:
 8064              	.LBB1710:
 8065              	.LBB1704:
 8066              	.LBB1702:
 811:Veno-Echo.cpp ****                 {
 8067              		.loc 20 811 33 is_stmt 0 view .LVU2214
 8068 05f2 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8069              	.LVL489:
 811:Veno-Echo.cpp ****                 {
 8070              		.loc 20 811 36 view .LVU2215
 8071 05f6 3368     		ldr	r3, [r6]
 8072 05f8 C01A     		subs	r0, r0, r3
 811:Veno-Echo.cpp ****                 {
 8073              		.loc 20 811 16 view .LVU2216
 8074 05fa B0F57A7F 		cmp	r0, #1000
 8075 05fe 01D8     		bhi	.L425
 8076              	.L428:
 8077 0600 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 8078 0602 EAE7     		b	.L424
 8079              	.L425:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 273


 8080              	.LBB1703:
 813:Veno-Echo.cpp ****                     
 8081              		.loc 20 813 21 is_stmt 1 view .LVU2217
 815:Veno-Echo.cpp ****                     if (SaveSettings(ToSave) == DSY_MEMORY_OK)  //save settings
 8082              		.loc 20 815 30 is_stmt 0 view .LVU2218
 8083 0604 DFF868C0 		ldr	ip, .L433+64
 8084 0608 27AF     		add	r7, sp, #156
 813:Veno-Echo.cpp ****                     
 8085              		.loc 20 813 31 view .LVU2219
 8086 060a 4FF0020E 		mov	lr, #2
 815:Veno-Echo.cpp ****                     if (SaveSettings(ToSave) == DSY_MEMORY_OK)  //save settings
 8087              		.loc 20 815 30 view .LVU2220
 8088 060e BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 8089 0612 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 8090 0614 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 8091 0618 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 8092 061a 9CE80700 		ldm	ip, {r0, r1, r2}
 8093 061e 87E80700 		stm	r7, {r0, r1, r2}
 816:Veno-Echo.cpp ****                     {
 8094              		.loc 20 816 37 view .LVU2221
 8095 0622 27A8     		add	r0, sp, #156
 813:Veno-Echo.cpp ****                     
 8096              		.loc 20 813 31 view .LVU2222
 8097 0624 85F800E0 		strb	lr, [r5]
 815:Veno-Echo.cpp ****                     if (SaveSettings(ToSave) == DSY_MEMORY_OK)  //save settings
 8098              		.loc 20 815 21 is_stmt 1 view .LVU2223
 816:Veno-Echo.cpp ****                     {
 8099              		.loc 20 816 21 view .LVU2224
 816:Veno-Echo.cpp ****                     {
 8100              		.loc 20 816 37 is_stmt 0 view .LVU2225
 8101 0628 FFF7FEFF 		bl	_Z12SaveSettingsRK8Settings
 8102              	.LVL490:
 8103 062c E8E7     		b	.L428
 8104              	.L434:
 8105 062e 00BF     		.align	2
 8106              	.L433:
 8107 0630 00000000 		.word	.LANCHOR38
 8108 0634 00004843 		.word	1128792064
 8109 0638 3333333F 		.word	1060320051
 8110 063c 00000000 		.word	.LANCHOR4
 8111 0640 00000000 		.word	.LANCHOR108
 8112 0644 00000000 		.word	.LANCHOR109
 8113 0648 00000000 		.word	.LANCHOR76
 8114 064c 0000C842 		.word	1120403456
 8115 0650 00000000 		.word	.LANCHOR16
 8116 0654 00000000 		.word	.LANCHOR110
 8117 0658 00000000 		.word	.LANCHOR111
 8118 065c 808D5B00 		.word	6000000
 8119 0660 00000000 		.word	.LANCHOR26
 8120 0664 00000000 		.word	.LANCHOR89
 8121 0668 18000000 		.word	.LANCHOR4+24
 8122 066c 00000000 		.word	_ZL13AudioCallbackPfS_j
 8123 0670 00000000 		.word	.LANCHOR15
 8124              	.LBE1703:
 8125              	.LBE1702:
 8126              	.LBE1704:
 8127              	.LBE1710:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 274


 8128              	.LBE1713:
 8129              	.LBE1716:
 8130              		.cfi_endproc
 8131              	.LFE4311:
 8133              		.section	.text._Z13TurnOnAllLEDsv,"ax",%progbits
 8134              		.align	1
 8135              		.p2align 2,,3
 8136              		.global	_Z13TurnOnAllLEDsv
 8137              		.syntax unified
 8138              		.thumb
 8139              		.thumb_func
 8140              		.fpu fpv5-d16
 8142              	_Z13TurnOnAllLEDsv:
 8143              	.LFB4334:
1959:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 8144              		.loc 20 1959 1 is_stmt 1 view -0
 8145              		.cfi_startproc
 8146              		@ args = 0, pretend = 0, frame = 0
 8147              		@ frame_needed = 0, uses_anonymous_args = 0
1960:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 8148              		.loc 20 1960 5 view .LVU2227
1959:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 8149              		.loc 20 1959 1 is_stmt 0 view .LVU2228
 8150 0000 08B5     		push	{r3, lr}
 8151              		.cfi_def_cfa_offset 8
 8152              		.cfi_offset 3, -8
 8153              		.cfi_offset 14, -4
1960:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 8154              		.loc 20 1960 26 view .LVU2229
 8155 0002 B7EE000A 		vmov.f32	s0, #1.0e+0
 8156 0006 1148     		ldr	r0, .L437
 8157 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8158              	.LVL491:
1961:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 8159              		.loc 20 1961 5 is_stmt 1 view .LVU2230
1961:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 8160              		.loc 20 1961 28 is_stmt 0 view .LVU2231
 8161 000c B7EE000A 		vmov.f32	s0, #1.0e+0
 8162 0010 0F48     		ldr	r0, .L437+4
 8163 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8164              	.LVL492:
1962:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 8165              		.loc 20 1962 5 is_stmt 1 view .LVU2232
1962:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 8166              		.loc 20 1962 28 is_stmt 0 view .LVU2233
 8167 0016 B7EE000A 		vmov.f32	s0, #1.0e+0
 8168 001a 0E48     		ldr	r0, .L437+8
 8169 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8170              	.LVL493:
1963:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 8171              		.loc 20 1963 5 is_stmt 1 view .LVU2234
1963:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 8172              		.loc 20 1963 21 is_stmt 0 view .LVU2235
 8173 0020 B7EE000A 		vmov.f32	s0, #1.0e+0
 8174 0024 0C48     		ldr	r0, .L437+12
 8175 0026 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8176              	.LVL494:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 275


1964:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 8177              		.loc 20 1964 5 is_stmt 1 view .LVU2236
1964:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 8178              		.loc 20 1964 21 is_stmt 0 view .LVU2237
 8179 002a B7EE000A 		vmov.f32	s0, #1.0e+0
 8180 002e 0B48     		ldr	r0, .L437+16
 8181 0030 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8182              	.LVL495:
1965:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 8183              		.loc 20 1965 5 is_stmt 1 view .LVU2238
1965:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 8184              		.loc 20 1965 19 is_stmt 0 view .LVU2239
 8185 0034 B7EE000A 		vmov.f32	s0, #1.0e+0
 8186 0038 0948     		ldr	r0, .L437+20
 8187 003a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8188              	.LVL496:
1966:Veno-Echo.cpp **** }
 8189              		.loc 20 1966 5 is_stmt 1 view .LVU2240
1966:Veno-Echo.cpp **** }
 8190              		.loc 20 1966 19 is_stmt 0 view .LVU2241
 8191 003e B7EE000A 		vmov.f32	s0, #1.0e+0
 8192 0042 0848     		ldr	r0, .L437+24
1967:Veno-Echo.cpp **** 
 8193              		.loc 20 1967 1 view .LVU2242
 8194 0044 BDE80840 		pop	{r3, lr}
 8195              		.cfi_restore 14
 8196              		.cfi_restore 3
 8197              		.cfi_def_cfa_offset 0
1966:Veno-Echo.cpp **** }
 8198              		.loc 20 1966 19 view .LVU2243
 8199 0048 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 8200              	.LVL497:
 8201              	.L438:
 8202              		.align	2
 8203              	.L437:
 8204 004c 00000000 		.word	.LANCHOR89
 8205 0050 04000000 		.word	.LANCHOR0+4
 8206 0054 04000000 		.word	.LANCHOR1+4
 8207 0058 00000000 		.word	.LANCHOR94
 8208 005c 00000000 		.word	.LANCHOR95
 8209 0060 00000000 		.word	.LANCHOR96
 8210 0064 00000000 		.word	.LANCHOR97
 8211              		.cfi_endproc
 8212              	.LFE4334:
 8214              		.section	.text._Z12ResetAllLEDsv,"ax",%progbits
 8215              		.align	1
 8216              		.p2align 2,,3
 8217              		.global	_Z12ResetAllLEDsv
 8218              		.syntax unified
 8219              		.thumb
 8220              		.thumb_func
 8221              		.fpu fpv5-d16
 8223              	_Z12ResetAllLEDsv:
 8224              	.LFB4335:
1970:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 8225              		.loc 20 1970 1 is_stmt 1 view -0
 8226              		.cfi_startproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 276


 8227              		@ args = 0, pretend = 0, frame = 0
 8228              		@ frame_needed = 0, uses_anonymous_args = 0
1971:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 8229              		.loc 20 1971 5 view .LVU2245
1970:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 8230              		.loc 20 1970 1 is_stmt 0 view .LVU2246
 8231 0000 08B5     		push	{r3, lr}
 8232              		.cfi_def_cfa_offset 8
 8233              		.cfi_offset 3, -8
 8234              		.cfi_offset 14, -4
1971:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 8235              		.loc 20 1971 26 view .LVU2247
 8236 0002 9FED1E0A 		vldr.32	s0, .L446
 8237 0006 1E48     		ldr	r0, .L446+4
 8238 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8239              	.LVL498:
1972:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 8240              		.loc 20 1972 5 is_stmt 1 view .LVU2248
1972:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 8241              		.loc 20 1972 28 is_stmt 0 view .LVU2249
 8242 000c 9FED1B0A 		vldr.32	s0, .L446
 8243 0010 1C48     		ldr	r0, .L446+8
 8244 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8245              	.LVL499:
1973:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 8246              		.loc 20 1973 5 is_stmt 1 view .LVU2250
1973:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 8247              		.loc 20 1973 28 is_stmt 0 view .LVU2251
 8248 0016 1C48     		ldr	r0, .L446+12
 8249 0018 9FED180A 		vldr.32	s0, .L446
 8250 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8251              	.LVL500:
1974:Veno-Echo.cpp ****     {
 8252              		.loc 20 1974 5 is_stmt 1 view .LVU2252
1974:Veno-Echo.cpp ****     {
 8253              		.loc 20 1974 26 is_stmt 0 view .LVU2253
 8254 0020 1A48     		ldr	r0, .L446+16
 8255 0022 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8256              	.LVL501:
1974:Veno-Echo.cpp ****     {
 8257              		.loc 20 1974 5 view .LVU2254
 8258 0026 C8B9     		cbnz	r0, .L440
1976:Veno-Echo.cpp ****     }
 8259              		.loc 20 1976 9 is_stmt 1 view .LVU2255
1976:Veno-Echo.cpp ****     }
 8260              		.loc 20 1976 25 is_stmt 0 view .LVU2256
 8261 0028 1848     		ldr	r0, .L446+16
 8262 002a 9FED140A 		vldr.32	s0, .L446
 8263 002e FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8264              	.LVL502:
1983:Veno-Echo.cpp ****     {
 8265              		.loc 20 1983 5 is_stmt 1 view .LVU2257
1983:Veno-Echo.cpp ****     {
 8266              		.loc 20 1983 26 is_stmt 0 view .LVU2258
 8267 0032 1748     		ldr	r0, .L446+20
 8268 0034 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8269              	.LVL503:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 277


1983:Veno-Echo.cpp ****     {
 8270              		.loc 20 1983 5 view .LVU2259
 8271 0038 D0B9     		cbnz	r0, .L442
 8272              	.L445:
1985:Veno-Echo.cpp ****     }
 8273              		.loc 20 1985 9 is_stmt 1 view .LVU2260
1985:Veno-Echo.cpp ****     }
 8274              		.loc 20 1985 25 is_stmt 0 view .LVU2261
 8275 003a 9FED100A 		vldr.32	s0, .L446
 8276 003e 1448     		ldr	r0, .L446+20
 8277 0040 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8278              	.LVL504:
 8279              	.L443:
1992:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 8280              		.loc 20 1992 5 is_stmt 1 view .LVU2262
1992:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 8281              		.loc 20 1992 19 is_stmt 0 view .LVU2263
 8282 0044 9FED0D0A 		vldr.32	s0, .L446
 8283 0048 1248     		ldr	r0, .L446+24
 8284 004a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8285              	.LVL505:
1993:Veno-Echo.cpp **** }
 8286              		.loc 20 1993 5 is_stmt 1 view .LVU2264
1993:Veno-Echo.cpp **** }
 8287              		.loc 20 1993 19 is_stmt 0 view .LVU2265
 8288 004e 9FED0B0A 		vldr.32	s0, .L446
 8289 0052 1148     		ldr	r0, .L446+28
1994:Veno-Echo.cpp **** 
 8290              		.loc 20 1994 1 view .LVU2266
 8291 0054 BDE80840 		pop	{r3, lr}
 8292              		.cfi_remember_state
 8293              		.cfi_restore 14
 8294              		.cfi_restore 3
 8295              		.cfi_def_cfa_offset 0
1993:Veno-Echo.cpp **** }
 8296              		.loc 20 1993 19 view .LVU2267
 8297 0058 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 8298              	.LVL506:
 8299              	.L440:
 8300              		.cfi_restore_state
1980:Veno-Echo.cpp ****     }
 8301              		.loc 20 1980 8 is_stmt 1 view .LVU2268
1980:Veno-Echo.cpp ****     }
 8302              		.loc 20 1980 24 is_stmt 0 view .LVU2269
 8303 005c 0B48     		ldr	r0, .L446+16
 8304 005e B7EE000A 		vmov.f32	s0, #1.0e+0
 8305 0062 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8306              	.LVL507:
1983:Veno-Echo.cpp ****     {
 8307              		.loc 20 1983 5 is_stmt 1 view .LVU2270
1983:Veno-Echo.cpp ****     {
 8308              		.loc 20 1983 26 is_stmt 0 view .LVU2271
 8309 0066 0A48     		ldr	r0, .L446+20
 8310 0068 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8311              	.LVL508:
1983:Veno-Echo.cpp ****     {
 8312              		.loc 20 1983 5 view .LVU2272
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 278


 8313 006c 0028     		cmp	r0, #0
 8314 006e E4D0     		beq	.L445
 8315              	.L442:
1989:Veno-Echo.cpp ****     }
 8316              		.loc 20 1989 9 is_stmt 1 view .LVU2273
1989:Veno-Echo.cpp ****     }
 8317              		.loc 20 1989 25 is_stmt 0 view .LVU2274
 8318 0070 B7EE000A 		vmov.f32	s0, #1.0e+0
 8319 0074 0648     		ldr	r0, .L446+20
 8320 0076 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8321              	.LVL509:
 8322 007a E3E7     		b	.L443
 8323              	.L447:
 8324              		.align	2
 8325              	.L446:
 8326 007c 00000000 		.word	0
 8327 0080 00000000 		.word	.LANCHOR89
 8328 0084 04000000 		.word	.LANCHOR0+4
 8329 0088 04000000 		.word	.LANCHOR1+4
 8330 008c 00000000 		.word	.LANCHOR94
 8331 0090 00000000 		.word	.LANCHOR95
 8332 0094 00000000 		.word	.LANCHOR96
 8333 0098 00000000 		.word	.LANCHOR97
 8334              		.cfi_endproc
 8335              	.LFE4335:
 8337              		.section	.text._Z14Update_Buttonsv,"ax",%progbits
 8338              		.align	1
 8339              		.p2align 2,,3
 8340              		.global	_Z14Update_Buttonsv
 8341              		.syntax unified
 8342              		.thumb
 8343              		.thumb_func
 8344              		.fpu fpv5-d16
 8346              	_Z14Update_Buttonsv:
 8347              	.LFB4329:
1638:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 8348              		.loc 20 1638 1 is_stmt 1 view -0
 8349              		.cfi_startproc
 8350              		@ args = 0, pretend = 0, frame = 0
 8351              		@ frame_needed = 0, uses_anonymous_args = 0
1639:Veno-Echo.cpp ****     static uint32_t resetTime{};
 8352              		.loc 20 1639 5 view .LVU2276
1640:Veno-Echo.cpp ****     static int buttonstate{};
 8353              		.loc 20 1640 5 view .LVU2277
1641:Veno-Echo.cpp **** 
 8354              		.loc 20 1641 5 view .LVU2278
1643:Veno-Echo.cpp ****     Rev_R_sw.update();
 8355              		.loc 20 1643 5 view .LVU2279
1638:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 8356              		.loc 20 1638 1 is_stmt 0 view .LVU2280
 8357 0000 70B5     		push	{r4, r5, r6, lr}
 8358              		.cfi_def_cfa_offset 16
 8359              		.cfi_offset 4, -16
 8360              		.cfi_offset 5, -12
 8361              		.cfi_offset 6, -8
 8362              		.cfi_offset 14, -4
1643:Veno-Echo.cpp ****     Rev_R_sw.update();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 279


 8363              		.loc 20 1643 20 view .LVU2281
 8364 0002 9948     		ldr	r0, .L503
 8365 0004 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8366              	.LVL510:
1644:Veno-Echo.cpp ****     LPF_sw.update();
 8367              		.loc 20 1644 5 is_stmt 1 view .LVU2282
1644:Veno-Echo.cpp ****     LPF_sw.update();
 8368              		.loc 20 1644 20 is_stmt 0 view .LVU2283
 8369 0008 9848     		ldr	r0, .L503+4
 8370 000a FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8371              	.LVL511:
1645:Veno-Echo.cpp ****     HPF_sw.update();
 8372              		.loc 20 1645 5 is_stmt 1 view .LVU2284
1645:Veno-Echo.cpp ****     HPF_sw.update();
 8373              		.loc 20 1645 18 is_stmt 0 view .LVU2285
 8374 000e 9848     		ldr	r0, .L503+8
 8375 0010 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8376              	.LVL512:
1646:Veno-Echo.cpp ****     Tap_Button.update();
 8377              		.loc 20 1646 5 is_stmt 1 view .LVU2286
1649:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8378              		.loc 20 1649 26 is_stmt 0 view .LVU2287
 8379 0014 974C     		ldr	r4, .L503+12
1646:Veno-Echo.cpp ****     Tap_Button.update();
 8380              		.loc 20 1646 18 view .LVU2288
 8381 0016 9848     		ldr	r0, .L503+16
 8382 0018 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8383              	.LVL513:
1647:Veno-Echo.cpp **** 
 8384              		.loc 20 1647 5 is_stmt 1 view .LVU2289
1647:Veno-Echo.cpp **** 
 8385              		.loc 20 1647 22 is_stmt 0 view .LVU2290
 8386 001c 9748     		ldr	r0, .L503+20
 8387 001e FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8388              	.LVL514:
1649:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8389              		.loc 20 1649 5 is_stmt 1 view .LVU2291
1649:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8390              		.loc 20 1649 26 is_stmt 0 view .LVU2292
 8391 0022 2046     		mov	r0, r4
 8392 0024 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8393              	.LVL515:
1650:Veno-Echo.cpp ****     //TapButton.Debounce();
 8394              		.loc 20 1650 5 is_stmt 1 view .LVU2293
1650:Veno-Echo.cpp ****     //TapButton.Debounce();
 8395              		.loc 20 1650 26 is_stmt 0 view .LVU2294
 8396 0028 9548     		ldr	r0, .L503+24
 8397 002a FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8398              	.LVL516:
1652:Veno-Echo.cpp ****     ClockIn.Debounce();
 8399              		.loc 20 1652 5 is_stmt 1 view .LVU2295
1652:Veno-Echo.cpp ****     ClockIn.Debounce();
 8400              		.loc 20 1652 18 is_stmt 0 view .LVU2296
 8401 002e 9548     		ldr	r0, .L503+28
 8402 0030 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8403              	.LVL517:
1653:Veno-Echo.cpp ****     //gate inputs
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 280


 8404              		.loc 20 1653 5 is_stmt 1 view .LVU2297
1653:Veno-Echo.cpp ****     //gate inputs
 8405              		.loc 20 1653 21 is_stmt 0 view .LVU2298
 8406 0034 9448     		ldr	r0, .L503+32
 8407 0036 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8408              	.LVL518:
1655:Veno-Echo.cpp ****     {
 8409              		.loc 20 1655 5 is_stmt 1 view .LVU2299
 8410              		.loc 1 69 38 view .LVU2300
1655:Veno-Echo.cpp ****     {
 8411              		.loc 20 1655 5 is_stmt 0 view .LVU2301
 8412 003a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 8413 003c 7F2B     		cmp	r3, #127
 8414 003e 00F0DC80 		beq	.L495
 8415              	.L449:
1669:Veno-Echo.cpp ****     {
 8416              		.loc 20 1669 5 is_stmt 1 view .LVU2302
 8417              	.LVL519:
 8418              		.loc 1 69 38 view .LVU2303
1669:Veno-Echo.cpp ****     {
 8419              		.loc 20 1669 32 is_stmt 0 view .LVU2304
 8420 0042 8F4B     		ldr	r3, .L503+24
1669:Veno-Echo.cpp ****     {
 8421              		.loc 20 1669 5 view .LVU2305
 8422 0044 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8423 0046 7F2B     		cmp	r3, #127
 8424 0048 00F0BE80 		beq	.L496
 8425              	.L451:
1685:Veno-Echo.cpp ****     {
 8426              		.loc 20 1685 5 is_stmt 1 view .LVU2306
1685:Veno-Echo.cpp ****     {
 8427              		.loc 20 1685 28 is_stmt 0 view .LVU2307
 8428 004c 8648     		ldr	r0, .L503
1687:Veno-Echo.cpp ****         if (buttonstate == 3)
 8429              		.loc 20 1687 21 view .LVU2308
 8430 004e 8F4C     		ldr	r4, .L503+36
1685:Veno-Echo.cpp ****     {
 8431              		.loc 20 1685 28 view .LVU2309
 8432 0050 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8433              	.LVL520:
1685:Veno-Echo.cpp ****     {
 8434              		.loc 20 1685 5 view .LVU2310
 8435 0054 D0B1     		cbz	r0, .L453
1687:Veno-Echo.cpp ****         if (buttonstate == 3)
 8436              		.loc 20 1687 9 is_stmt 1 view .LVU2311
1687:Veno-Echo.cpp ****         if (buttonstate == 3)
 8437              		.loc 20 1687 21 is_stmt 0 view .LVU2312
 8438 0056 2368     		ldr	r3, [r4]
 8439 0058 0133     		adds	r3, r3, #1
1688:Veno-Echo.cpp ****         {
 8440              		.loc 20 1688 9 view .LVU2313
 8441 005a 032B     		cmp	r3, #3
1687:Veno-Echo.cpp ****         if (buttonstate == 3)
 8442              		.loc 20 1687 21 view .LVU2314
 8443 005c 2360     		str	r3, [r4]
1688:Veno-Echo.cpp ****         {
 8444              		.loc 20 1688 9 is_stmt 1 view .LVU2315
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 281


 8445 005e 00F0E580 		beq	.L497
 8446              	.L454:
1692:Veno-Echo.cpp ****         {
 8447              		.loc 20 1692 9 view .LVU2316
1692:Veno-Echo.cpp ****         {
 8448              		.loc 20 1692 29 is_stmt 0 view .LVU2317
 8449 0062 8148     		ldr	r0, .L503
 8450 0064 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8451              	.LVL521:
1698:Veno-Echo.cpp ****         }
 8452              		.loc 20 1698 31 view .LVU2318
 8453 0068 F7EE007A 		vmov.f32	s15, #1.0e+0
 8454 006c 9FED887A 		vldr.32	s14, .L503+40
 8455 0070 0028     		cmp	r0, #0
 8456 0072 8849     		ldr	r1, .L503+44
 8457              	.LBB1717:
 8458              	.LBB1718:
 8459              	.LBB1719:
 8460              	.LBB1720:
 8461              	.LBB1721:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8462              		.loc 22 397 18 view .LVU2319
 8463 0074 4FF00102 		mov	r2, #1
 8464 0078 874B     		ldr	r3, .L503+48
 8465              	.LBE1721:
 8466              	.LBE1720:
 8467              	.LBE1719:
 8468              	.LBE1718:
 8469              	.LBE1717:
1698:Veno-Echo.cpp ****         }
 8470              		.loc 20 1698 31 view .LVU2320
 8471 007a 47FE277A 		vseleq.f32	s15, s14, s15
 8472 007e C1ED097A 		vstr.32	s15, [r1, #36]
1700:Veno-Echo.cpp ****     }
 8473              		.loc 20 1700 9 is_stmt 1 view .LVU2321
 8474              	.LVL522:
 8475              	.LBB1726:
 8476              	.LBI1717:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8477              		.loc 23 80 5 view .LVU2322
 8478              	.LBB1725:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8479              		.loc 23 81 7 view .LVU2323
 8480              	.LBB1724:
 8481              	.LBI1719:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8482              		.loc 22 288 7 view .LVU2324
 8483              	.LBB1723:
 8484              	.LBI1720:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8485              		.loc 22 390 7 view .LVU2325
 8486              	.LBB1722:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8487              		.loc 22 397 18 is_stmt 0 view .LVU2326
 8488 0082 BFF35B8F 		dmb	ish
 8489 0086 1A70     		strb	r2, [r3]
 8490 0088 BFF35B8F 		dmb	ish
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 282


 8491              	.LVL523:
 8492              	.L453:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8493              		.loc 22 397 18 view .LVU2327
 8494              	.LBE1722:
 8495              	.LBE1723:
 8496              	.LBE1724:
 8497              	.LBE1725:
 8498              	.LBE1726:
1703:Veno-Echo.cpp ****     {
 8499              		.loc 20 1703 5 is_stmt 1 view .LVU2328
1703:Veno-Echo.cpp ****     {
 8500              		.loc 20 1703 29 is_stmt 0 view .LVU2329
 8501 008c 7648     		ldr	r0, .L503
 8502 008e FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8503              	.LVL524:
1703:Veno-Echo.cpp ****     {
 8504              		.loc 20 1703 5 view .LVU2330
 8505 0092 10B1     		cbz	r0, .L456
1705:Veno-Echo.cpp ****     }
 8506              		.loc 20 1705 9 is_stmt 1 view .LVU2331
1705:Veno-Echo.cpp ****     }
 8507              		.loc 20 1705 21 is_stmt 0 view .LVU2332
 8508 0094 2368     		ldr	r3, [r4]
 8509 0096 013B     		subs	r3, r3, #1
 8510 0098 2360     		str	r3, [r4]
 8511              	.L456:
1708:Veno-Echo.cpp ****     {
 8512              		.loc 20 1708 5 is_stmt 1 view .LVU2333
1708:Veno-Echo.cpp ****     {
 8513              		.loc 20 1708 28 is_stmt 0 view .LVU2334
 8514 009a 7448     		ldr	r0, .L503+4
 8515 009c FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8516              	.LVL525:
1708:Veno-Echo.cpp ****     {
 8517              		.loc 20 1708 5 view .LVU2335
 8518 00a0 D0B1     		cbz	r0, .L457
1710:Veno-Echo.cpp ****         if (buttonstate == 3)
 8519              		.loc 20 1710 9 is_stmt 1 view .LVU2336
1710:Veno-Echo.cpp ****         if (buttonstate == 3)
 8520              		.loc 20 1710 21 is_stmt 0 view .LVU2337
 8521 00a2 2368     		ldr	r3, [r4]
 8522 00a4 0133     		adds	r3, r3, #1
1711:Veno-Echo.cpp ****         {
 8523              		.loc 20 1711 9 view .LVU2338
 8524 00a6 032B     		cmp	r3, #3
1710:Veno-Echo.cpp ****         if (buttonstate == 3)
 8525              		.loc 20 1710 21 view .LVU2339
 8526 00a8 2360     		str	r3, [r4]
1711:Veno-Echo.cpp ****         {
 8527              		.loc 20 1711 9 is_stmt 1 view .LVU2340
 8528 00aa 00F0C480 		beq	.L498
 8529              	.L458:
1715:Veno-Echo.cpp ****         {
 8530              		.loc 20 1715 9 view .LVU2341
1715:Veno-Echo.cpp ****         {
 8531              		.loc 20 1715 29 is_stmt 0 view .LVU2342
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 283


 8532 00ae 6F48     		ldr	r0, .L503+4
 8533 00b0 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8534              	.LVL526:
1721:Veno-Echo.cpp ****         }
 8535              		.loc 20 1721 31 view .LVU2343
 8536 00b4 F7EE007A 		vmov.f32	s15, #1.0e+0
 8537 00b8 9FED757A 		vldr.32	s14, .L503+40
 8538 00bc 0028     		cmp	r0, #0
 8539 00be 7549     		ldr	r1, .L503+44
 8540              	.LBB1727:
 8541              	.LBB1728:
 8542              	.LBB1729:
 8543              	.LBB1730:
 8544              	.LBB1731:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8545              		.loc 22 397 18 view .LVU2344
 8546 00c0 4FF00102 		mov	r2, #1
 8547 00c4 744B     		ldr	r3, .L503+48
 8548              	.LBE1731:
 8549              	.LBE1730:
 8550              	.LBE1729:
 8551              	.LBE1728:
 8552              	.LBE1727:
1721:Veno-Echo.cpp ****         }
 8553              		.loc 20 1721 31 view .LVU2345
 8554 00c6 47FE277A 		vseleq.f32	s15, s14, s15
 8555 00ca C1ED0A7A 		vstr.32	s15, [r1, #40]
1723:Veno-Echo.cpp ****     }
 8556              		.loc 20 1723 9 is_stmt 1 view .LVU2346
 8557              	.LVL527:
 8558              	.LBB1736:
 8559              	.LBI1727:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8560              		.loc 23 80 5 view .LVU2347
 8561              	.LBB1735:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8562              		.loc 23 81 7 view .LVU2348
 8563              	.LBB1734:
 8564              	.LBI1729:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8565              		.loc 22 288 7 view .LVU2349
 8566              	.LBB1733:
 8567              	.LBI1730:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8568              		.loc 22 390 7 view .LVU2350
 8569              	.LBB1732:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8570              		.loc 22 397 18 is_stmt 0 view .LVU2351
 8571 00ce BFF35B8F 		dmb	ish
 8572 00d2 1A70     		strb	r2, [r3]
 8573 00d4 BFF35B8F 		dmb	ish
 8574              	.LVL528:
 8575              	.L457:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8576              		.loc 22 397 18 view .LVU2352
 8577              	.LBE1732:
 8578              	.LBE1733:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 284


 8579              	.LBE1734:
 8580              	.LBE1735:
 8581              	.LBE1736:
1726:Veno-Echo.cpp ****     {
 8582              		.loc 20 1726 5 is_stmt 1 view .LVU2353
1726:Veno-Echo.cpp ****     {
 8583              		.loc 20 1726 29 is_stmt 0 view .LVU2354
 8584 00d8 6448     		ldr	r0, .L503+4
 8585 00da FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8586              	.LVL529:
1726:Veno-Echo.cpp ****     {
 8587              		.loc 20 1726 5 view .LVU2355
 8588 00de 10B1     		cbz	r0, .L460
1728:Veno-Echo.cpp ****     }
 8589              		.loc 20 1728 9 is_stmt 1 view .LVU2356
1728:Veno-Echo.cpp ****     }
 8590              		.loc 20 1728 21 is_stmt 0 view .LVU2357
 8591 00e0 2368     		ldr	r3, [r4]
 8592 00e2 013B     		subs	r3, r3, #1
 8593 00e4 2360     		str	r3, [r4]
 8594              	.L460:
1731:Veno-Echo.cpp ****     {
 8595              		.loc 20 1731 5 is_stmt 1 view .LVU2358
1731:Veno-Echo.cpp ****     {
 8596              		.loc 20 1731 30 is_stmt 0 view .LVU2359
 8597 00e6 6548     		ldr	r0, .L503+20
 8598 00e8 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8599              	.LVL530:
1731:Veno-Echo.cpp ****     {
 8600              		.loc 20 1731 5 view .LVU2360
 8601 00ec 0028     		cmp	r0, #0
 8602 00ee 55D1     		bne	.L499
 8603              	.L462:
1752:Veno-Echo.cpp ****     {
 8604              		.loc 20 1752 5 is_stmt 1 view .LVU2361
1752:Veno-Echo.cpp ****     {
 8605              		.loc 20 1752 31 is_stmt 0 view .LVU2362
 8606 00f0 6248     		ldr	r0, .L503+20
 8607 00f2 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8608              	.LVL531:
1752:Veno-Echo.cpp ****     {
 8609              		.loc 20 1752 5 view .LVU2363
 8610 00f6 38B1     		cbz	r0, .L465
1754:Veno-Echo.cpp ****         buttonstate -= 1;
 8611              		.loc 20 1754 9 is_stmt 1 view .LVU2364
1755:Veno-Echo.cpp ****         mute = false;
 8612              		.loc 20 1755 21 is_stmt 0 view .LVU2365
 8613 00f8 2368     		ldr	r3, [r4]
1754:Veno-Echo.cpp ****         buttonstate -= 1;
 8614              		.loc 20 1754 15 view .LVU2366
 8615 00fa 0022     		movs	r2, #0
 8616 00fc 6748     		ldr	r0, .L503+52
1755:Veno-Echo.cpp ****         mute = false;
 8617              		.loc 20 1755 21 view .LVU2367
 8618 00fe 013B     		subs	r3, r3, #1
1756:Veno-Echo.cpp ****     }
 8619              		.loc 20 1756 14 view .LVU2368
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 285


 8620 0100 6749     		ldr	r1, .L503+56
1754:Veno-Echo.cpp ****         buttonstate -= 1;
 8621              		.loc 20 1754 15 view .LVU2369
 8622 0102 0270     		strb	r2, [r0]
1755:Veno-Echo.cpp ****         mute = false;
 8623              		.loc 20 1755 9 is_stmt 1 view .LVU2370
1755:Veno-Echo.cpp ****         mute = false;
 8624              		.loc 20 1755 21 is_stmt 0 view .LVU2371
 8625 0104 2360     		str	r3, [r4]
1756:Veno-Echo.cpp ****     }
 8626              		.loc 20 1756 9 is_stmt 1 view .LVU2372
1756:Veno-Echo.cpp ****     }
 8627              		.loc 20 1756 14 is_stmt 0 view .LVU2373
 8628 0106 0A70     		strb	r2, [r1]
 8629              	.L465:
1759:Veno-Echo.cpp ****     {
 8630              		.loc 20 1759 5 is_stmt 1 view .LVU2374
1759:Veno-Echo.cpp ****     {
 8631              		.loc 20 1759 28 is_stmt 0 view .LVU2375
 8632 0108 5C48     		ldr	r0, .L503+20
 8633 010a FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8634              	.LVL532:
1759:Veno-Echo.cpp ****     {
 8635              		.loc 20 1759 5 view .LVU2376
 8636 010e 60B9     		cbnz	r0, .L500
 8637              	.L467:
1767:Veno-Echo.cpp ****     {
 8638              		.loc 20 1767 5 is_stmt 1 view .LVU2377
 8639 0110 2368     		ldr	r3, [r4]
 8640 0112 032B     		cmp	r3, #3
 8641 0114 16D0     		beq	.L501
 8642              	.L470:
1784:Veno-Echo.cpp **** }
 8643              		.loc 20 1784 5 view .LVU2378
 8644              	.LBB1737:
 8645              	.LBI1737:
  70:../libdaisy/src/hid/switch.h **** 
  71:../libdaisy/src/hid/switch.h ****     /** \return true if the button was just released */
  72:../libdaisy/src/hid/switch.h ****     inline bool FallingEdge() const { return state_ == 0x80; }
  73:../libdaisy/src/hid/switch.h **** 
  74:../libdaisy/src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  75:../libdaisy/src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 8646              		.loc 1 75 17 view .LVU2379
 8647              	.LVL533:
 8648              	.LBB1738:
 8649              		.loc 1 75 35 view .LVU2380
 8650              	.LBE1738:
 8651              	.LBE1737:
1784:Veno-Echo.cpp **** }
 8652              		.loc 20 1784 31 is_stmt 0 view .LVU2381
 8653 0116 5B4B     		ldr	r3, .L503+28
1784:Veno-Echo.cpp **** }
 8654              		.loc 20 1784 14 view .LVU2382
 8655 0118 624A     		ldr	r2, .L503+60
 8656              	.LBB1740:
 8657              	.LBB1739:
 8658              		.loc 1 75 52 view .LVU2383
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 286


 8659 011a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8660 011c A3F1FF03 		sub	r3, #255
 8661 0120 B3FA83F3 		clz	r3, r3
 8662 0124 5B09     		lsrs	r3, r3, #5
 8663 0126 1370     		strb	r3, [r2]
 8664              	.LBE1739:
 8665              	.LBE1740:
1785:Veno-Echo.cpp **** 
 8666              		.loc 20 1785 1 view .LVU2384
 8667 0128 70BD     		pop	{r4, r5, r6, pc}
 8668              	.LVL534:
 8669              	.L500:
1761:Veno-Echo.cpp ****         {
 8670              		.loc 20 1761 9 is_stmt 1 view .LVU2385
1761:Veno-Echo.cpp ****         {
 8671              		.loc 20 1761 29 is_stmt 0 view .LVU2386
 8672 012a FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8673              	.LVL535:
1761:Veno-Echo.cpp ****         {
 8674              		.loc 20 1761 32 view .LVU2387
 8675 012e 5E4B     		ldr	r3, .L503+64
 8676 0130 1B68     		ldr	r3, [r3]
 8677 0132 C01A     		subs	r0, r0, r3
1761:Veno-Echo.cpp ****         {
 8678              		.loc 20 1761 9 view .LVU2388
 8679 0134 3228     		cmp	r0, #50
 8680 0136 EBD9     		bls	.L467
1763:Veno-Echo.cpp ****         } 
 8681              		.loc 20 1763 13 is_stmt 1 view .LVU2389
1763:Veno-Echo.cpp ****         } 
 8682              		.loc 20 1763 19 is_stmt 0 view .LVU2390
 8683 0138 584B     		ldr	r3, .L503+52
 8684 013a 0122     		movs	r2, #1
 8685 013c 1A70     		strb	r2, [r3]
1767:Veno-Echo.cpp ****     {
 8686              		.loc 20 1767 5 is_stmt 1 view .LVU2391
 8687 013e 2368     		ldr	r3, [r4]
 8688 0140 032B     		cmp	r3, #3
 8689 0142 E8D1     		bne	.L470
 8690              	.L501:
1770:Veno-Echo.cpp ****             {
 8691              		.loc 20 1770 13 view .LVU2392
1770:Veno-Echo.cpp ****             {
 8692              		.loc 20 1770 36 is_stmt 0 view .LVU2393
 8693 0144 594E     		ldr	r6, .L503+68
1770:Veno-Echo.cpp ****             {
 8694              		.loc 20 1770 33 view .LVU2394
 8695 0146 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8696              	.LVL536:
1770:Veno-Echo.cpp ****             {
 8697              		.loc 20 1770 13 view .LVU2395
 8698 014a 40F6B833 		movw	r3, #3000
1770:Veno-Echo.cpp ****             {
 8699              		.loc 20 1770 36 view .LVU2396
 8700 014e 3268     		ldr	r2, [r6]
 8701 0150 801A     		subs	r0, r0, r2
1770:Veno-Echo.cpp ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 287


 8702              		.loc 20 1770 13 view .LVU2397
 8703 0152 9842     		cmp	r0, r3
 8704 0154 DFD9     		bls	.L470
1772:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 8705              		.loc 20 1772 17 is_stmt 1 view .LVU2398
1772:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 8706              		.loc 20 1772 32 is_stmt 0 view .LVU2399
 8707 0156 4448     		ldr	r0, .L503
 8708 0158 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8709              	.LVL537:
1773:Veno-Echo.cpp ****                 ResetAllLEDs();
 8710              		.loc 20 1773 17 is_stmt 1 view .LVU2400
1773:Veno-Echo.cpp ****                 ResetAllLEDs();
 8711              		.loc 20 1773 32 is_stmt 0 view .LVU2401
 8712 015c 4348     		ldr	r0, .L503+4
 8713 015e FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8714              	.LVL538:
1774:Veno-Echo.cpp ****                 //don't let reset or shift update
 8715              		.loc 20 1774 17 is_stmt 1 view .LVU2402
1778:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8716              		.loc 20 1778 29 is_stmt 0 view .LVU2403
 8717 0162 534D     		ldr	r5, .L503+72
1774:Veno-Echo.cpp ****                 //don't let reset or shift update
 8718              		.loc 20 1774 29 view .LVU2404
 8719 0164 FFF7FEFF 		bl	_Z12ResetAllLEDsv
 8720              	.LVL539:
1776:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8721              		.loc 20 1776 17 is_stmt 1 view .LVU2405
1776:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8722              		.loc 20 1776 23 is_stmt 0 view .LVU2406
 8723 0168 4C4B     		ldr	r3, .L503+52
 8724 016a 0022     		movs	r2, #0
1777:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8725              		.loc 20 1777 30 view .LVU2407
 8726 016c 5048     		ldr	r0, .L503+72
1778:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8727              		.loc 20 1778 29 view .LVU2408
 8728 016e 494C     		ldr	r4, .L503+44
1776:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8729              		.loc 20 1776 23 view .LVU2409
 8730 0170 1A70     		strb	r2, [r3]
1777:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8731              		.loc 20 1777 17 is_stmt 1 view .LVU2410
1777:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8732              		.loc 20 1777 30 is_stmt 0 view .LVU2411
 8733 0172 FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 8734              	.LVL540:
1778:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8735              		.loc 20 1778 17 is_stmt 1 view .LVU2412
1778:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8736              		.loc 20 1778 29 is_stmt 0 view .LVU2413
 8737 0176 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8738 0178 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8739 017a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8740 017c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8741 017e 95E80700 		ldm	r5, {r0, r1, r2}
 8742 0182 84E80700 		stm	r4, {r0, r1, r2}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 288


1779:Veno-Echo.cpp ****                 save_flag = true;
 8743              		.loc 20 1779 17 is_stmt 1 view .LVU2414
1779:Veno-Echo.cpp ****                 save_flag = true;
 8744              		.loc 20 1779 43 is_stmt 0 view .LVU2415
 8745 0186 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8746              	.LVL541:
 8747              	.LBB1741:
 8748              	.LBB1742:
 8749              	.LBB1743:
 8750              	.LBB1744:
 8751              	.LBB1745:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8752              		.loc 22 397 18 view .LVU2416
 8753 018a 434B     		ldr	r3, .L503+48
 8754 018c 0122     		movs	r2, #1
 8755              	.LBE1745:
 8756              	.LBE1744:
 8757              	.LBE1743:
 8758              	.LBE1742:
 8759              	.LBE1741:
1779:Veno-Echo.cpp ****                 save_flag = true;
 8760              		.loc 20 1779 27 view .LVU2417
 8761 018e 3060     		str	r0, [r6]
1780:Veno-Echo.cpp ****             }
 8762              		.loc 20 1780 17 is_stmt 1 view .LVU2418
 8763              	.LVL542:
 8764              	.LBB1750:
 8765              	.LBI1741:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8766              		.loc 23 80 5 view .LVU2419
 8767              	.LBB1749:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8768              		.loc 23 81 7 view .LVU2420
 8769              	.LBB1748:
 8770              	.LBI1743:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8771              		.loc 22 288 7 view .LVU2421
 8772              	.LBB1747:
 8773              	.LBI1744:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8774              		.loc 22 390 7 view .LVU2422
 8775              	.LBB1746:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8776              		.loc 22 397 18 is_stmt 0 view .LVU2423
 8777 0190 BFF35B8F 		dmb	ish
 8778 0194 1A70     		strb	r2, [r3]
 8779 0196 BFF35B8F 		dmb	ish
 8780              	.LVL543:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8781              		.loc 22 397 18 view .LVU2424
 8782              	.LBE1746:
 8783              	.LBE1747:
 8784              	.LBE1748:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8785              		.loc 23 81 35 view .LVU2425
 8786 019a BCE7     		b	.L470
 8787              	.LVL544:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 289


 8788              	.L499:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8789              		.loc 23 81 35 view .LVU2426
 8790              	.LBE1749:
 8791              	.LBE1750:
1733:Veno-Echo.cpp ****         {
 8792              		.loc 20 1733 9 is_stmt 1 view .LVU2427
1733:Veno-Echo.cpp ****         {
 8793              		.loc 20 1733 25 is_stmt 0 view .LVU2428
 8794 019c 4548     		ldr	r0, .L503+76
 8795 019e FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 8796              	.LVL545:
1733:Veno-Echo.cpp ****         {
 8797              		.loc 20 1733 9 view .LVU2429
 8798 01a2 0028     		cmp	r0, #0
 8799 01a4 4CD1     		bne	.L502
 8800              	.L463:
1739:Veno-Echo.cpp ****         
 8801              		.loc 20 1739 9 is_stmt 1 view .LVU2430
1739:Veno-Echo.cpp ****         
 8802              		.loc 20 1739 33 is_stmt 0 view .LVU2431
 8803 01a6 4448     		ldr	r0, .L503+80
 8804 01a8 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 8805              	.LVL546:
1742:Veno-Echo.cpp ****         buttonstate += 1;
 8806              		.loc 20 1742 9 is_stmt 1 view .LVU2432
1742:Veno-Echo.cpp ****         buttonstate += 1;
 8807              		.loc 20 1742 35 is_stmt 0 view .LVU2433
 8808 01ac FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8809              	.LVL547:
1743:Veno-Echo.cpp ****         
 8810              		.loc 20 1743 21 view .LVU2434
 8811 01b0 2368     		ldr	r3, [r4]
1742:Veno-Echo.cpp ****         buttonstate += 1;
 8812              		.loc 20 1742 19 view .LVU2435
 8813 01b2 3D4A     		ldr	r2, .L503+64
1743:Veno-Echo.cpp ****         
 8814              		.loc 20 1743 21 view .LVU2436
 8815 01b4 0133     		adds	r3, r3, #1
1742:Veno-Echo.cpp ****         buttonstate += 1;
 8816              		.loc 20 1742 19 view .LVU2437
 8817 01b6 1060     		str	r0, [r2]
1743:Veno-Echo.cpp ****         
 8818              		.loc 20 1743 9 is_stmt 1 view .LVU2438
1745:Veno-Echo.cpp ****         {
 8819              		.loc 20 1745 9 is_stmt 0 view .LVU2439
 8820 01b8 032B     		cmp	r3, #3
1743:Veno-Echo.cpp ****         
 8821              		.loc 20 1743 21 view .LVU2440
 8822 01ba 2360     		str	r3, [r4]
1745:Veno-Echo.cpp ****         {
 8823              		.loc 20 1745 9 is_stmt 1 view .LVU2441
 8824 01bc 98D1     		bne	.L462
1747:Veno-Echo.cpp ****         }
 8825              		.loc 20 1747 13 view .LVU2442
1747:Veno-Echo.cpp ****         }
 8826              		.loc 20 1747 39 is_stmt 0 view .LVU2443
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 290


 8827 01be FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8828              	.LVL548:
1747:Veno-Echo.cpp ****         }
 8829              		.loc 20 1747 23 view .LVU2444
 8830 01c2 3A4B     		ldr	r3, .L503+68
 8831 01c4 1860     		str	r0, [r3]
 8832 01c6 93E7     		b	.L462
 8833              	.L496:
1671:Veno-Echo.cpp ****         if(Rev_R_sw.getState())
 8834              		.loc 20 1671 9 is_stmt 1 view .LVU2445
1671:Veno-Echo.cpp ****         if(Rev_R_sw.getState())
 8835              		.loc 20 1671 24 is_stmt 0 view .LVU2446
 8836 01c8 2848     		ldr	r0, .L503+4
 8837 01ca FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8838              	.LVL549:
1672:Veno-Echo.cpp ****         {
 8839              		.loc 20 1672 9 is_stmt 1 view .LVU2447
1672:Veno-Echo.cpp ****         {
 8840              		.loc 20 1672 29 is_stmt 0 view .LVU2448
 8841 01ce 2748     		ldr	r0, .L503+4
 8842 01d0 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8843              	.LVL550:
1678:Veno-Echo.cpp ****         }
 8844              		.loc 20 1678 31 view .LVU2449
 8845 01d4 F7EE007A 		vmov.f32	s15, #1.0e+0
 8846 01d8 9FED2D7A 		vldr.32	s14, .L503+40
 8847 01dc 0028     		cmp	r0, #0
 8848 01de 2D49     		ldr	r1, .L503+44
 8849              	.LBB1751:
 8850              	.LBB1752:
 8851              	.LBB1753:
 8852              	.LBB1754:
 8853              	.LBB1755:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8854              		.loc 22 397 18 view .LVU2450
 8855 01e0 4FF00102 		mov	r2, #1
 8856 01e4 2C4B     		ldr	r3, .L503+48
 8857              	.LBE1755:
 8858              	.LBE1754:
 8859              	.LBE1753:
 8860              	.LBE1752:
 8861              	.LBE1751:
1678:Veno-Echo.cpp ****         }
 8862              		.loc 20 1678 31 view .LVU2451
 8863 01e6 47FE277A 		vseleq.f32	s15, s14, s15
 8864 01ea C1ED0A7A 		vstr.32	s15, [r1, #40]
1680:Veno-Echo.cpp ****     }
 8865              		.loc 20 1680 9 is_stmt 1 view .LVU2452
 8866              	.LVL551:
 8867              	.LBB1760:
 8868              	.LBI1751:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8869              		.loc 23 80 5 view .LVU2453
 8870              	.LBB1759:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8871              		.loc 23 81 7 view .LVU2454
 8872              	.LBB1758:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 291


 8873              	.LBI1753:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8874              		.loc 22 288 7 view .LVU2455
 8875              	.LBB1757:
 8876              	.LBI1754:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8877              		.loc 22 390 7 view .LVU2456
 8878              	.LBB1756:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8879              		.loc 22 397 18 is_stmt 0 view .LVU2457
 8880 01ee BFF35B8F 		dmb	ish
 8881 01f2 1A70     		strb	r2, [r3]
 8882 01f4 BFF35B8F 		dmb	ish
 8883              	.LVL552:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8884              		.loc 22 397 18 view .LVU2458
 8885              	.LBE1756:
 8886              	.LBE1757:
 8887              	.LBE1758:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8888              		.loc 23 81 35 view .LVU2459
 8889 01f8 28E7     		b	.L451
 8890              	.LVL553:
 8891              	.L495:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8892              		.loc 23 81 35 view .LVU2460
 8893              	.LBE1759:
 8894              	.LBE1760:
1657:Veno-Echo.cpp ****         if(Rev_L_sw.getState())
 8895              		.loc 20 1657 9 is_stmt 1 view .LVU2461
1657:Veno-Echo.cpp ****         if(Rev_L_sw.getState())
 8896              		.loc 20 1657 24 is_stmt 0 view .LVU2462
 8897 01fa 1B48     		ldr	r0, .L503
 8898 01fc FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8899              	.LVL554:
1658:Veno-Echo.cpp ****         {
 8900              		.loc 20 1658 9 is_stmt 1 view .LVU2463
1658:Veno-Echo.cpp ****         {
 8901              		.loc 20 1658 29 is_stmt 0 view .LVU2464
 8902 0200 1948     		ldr	r0, .L503
 8903 0202 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8904              	.LVL555:
1664:Veno-Echo.cpp ****         }
 8905              		.loc 20 1664 31 view .LVU2465
 8906 0206 F7EE007A 		vmov.f32	s15, #1.0e+0
 8907 020a 9FED217A 		vldr.32	s14, .L503+40
 8908 020e 0028     		cmp	r0, #0
 8909 0210 2049     		ldr	r1, .L503+44
 8910              	.LBB1761:
 8911              	.LBB1762:
 8912              	.LBB1763:
 8913              	.LBB1764:
 8914              	.LBB1765:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8915              		.loc 22 397 18 view .LVU2466
 8916 0212 4FF00102 		mov	r2, #1
 8917 0216 204B     		ldr	r3, .L503+48
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 292


 8918              	.LBE1765:
 8919              	.LBE1764:
 8920              	.LBE1763:
 8921              	.LBE1762:
 8922              	.LBE1761:
1664:Veno-Echo.cpp ****         }
 8923              		.loc 20 1664 31 view .LVU2467
 8924 0218 47FE277A 		vseleq.f32	s15, s14, s15
 8925 021c C1ED097A 		vstr.32	s15, [r1, #36]
1666:Veno-Echo.cpp ****     }
 8926              		.loc 20 1666 9 is_stmt 1 view .LVU2468
 8927              	.LVL556:
 8928              	.LBB1770:
 8929              	.LBI1761:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8930              		.loc 23 80 5 view .LVU2469
 8931              	.LBB1769:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8932              		.loc 23 81 7 view .LVU2470
 8933              	.LBB1768:
 8934              	.LBI1763:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8935              		.loc 22 288 7 view .LVU2471
 8936              	.LBB1767:
 8937              	.LBI1764:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8938              		.loc 22 390 7 view .LVU2472
 8939              	.LBB1766:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8940              		.loc 22 397 18 is_stmt 0 view .LVU2473
 8941 0220 BFF35B8F 		dmb	ish
 8942 0224 1A70     		strb	r2, [r3]
 8943 0226 BFF35B8F 		dmb	ish
 8944              	.LVL557:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8945              		.loc 22 397 18 view .LVU2474
 8946              	.LBE1766:
 8947              	.LBE1767:
 8948              	.LBE1768:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8949              		.loc 23 81 35 view .LVU2475
 8950 022a 0AE7     		b	.L449
 8951              	.LVL558:
 8952              	.L497:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8953              		.loc 23 81 35 view .LVU2476
 8954              	.LBE1769:
 8955              	.LBE1770:
1690:Veno-Echo.cpp ****         }
 8956              		.loc 20 1690 13 is_stmt 1 view .LVU2477
1690:Veno-Echo.cpp ****         }
 8957              		.loc 20 1690 39 is_stmt 0 view .LVU2478
 8958 022c FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8959              	.LVL559:
1690:Veno-Echo.cpp ****         }
 8960              		.loc 20 1690 23 view .LVU2479
 8961 0230 1E4B     		ldr	r3, .L503+68
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 293


 8962 0232 1860     		str	r0, [r3]
 8963 0234 15E7     		b	.L454
 8964              	.L498:
1713:Veno-Echo.cpp ****         }
 8965              		.loc 20 1713 13 is_stmt 1 view .LVU2480
1713:Veno-Echo.cpp ****         }
 8966              		.loc 20 1713 39 is_stmt 0 view .LVU2481
 8967 0236 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8968              	.LVL560:
1713:Veno-Echo.cpp ****         }
 8969              		.loc 20 1713 23 view .LVU2482
 8970 023a 1C4B     		ldr	r3, .L503+68
 8971 023c 1860     		str	r0, [r3]
 8972 023e 36E7     		b	.L458
 8973              	.L502:
1735:Veno-Echo.cpp ****             AltControls.tapLength = BaseTempo.getTapLength();
 8974              		.loc 20 1735 13 is_stmt 1 view .LVU2483
1735:Veno-Echo.cpp ****             AltControls.tapLength = BaseTempo.getTapLength();
 8975              		.loc 20 1735 35 is_stmt 0 view .LVU2484
 8976 0240 1C48     		ldr	r0, .L503+76
 8977 0242 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 8978              	.LVL561:
 8979 0246 1C48     		ldr	r0, .L503+80
 8980 0248 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 8981              	.LVL562:
1736:Veno-Echo.cpp ****             save_flag = true;
 8982              		.loc 20 1736 13 is_stmt 1 view .LVU2485
1736:Veno-Echo.cpp ****             save_flag = true;
 8983              		.loc 20 1736 59 is_stmt 0 view .LVU2486
 8984 024c 1948     		ldr	r0, .L503+76
 8985 024e FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 8986              	.LVL563:
1736:Veno-Echo.cpp ****             save_flag = true;
 8987              		.loc 20 1736 35 view .LVU2487
 8988 0252 1049     		ldr	r1, .L503+44
 8989              	.LBB1771:
 8990              	.LBB1772:
 8991              	.LBB1773:
 8992              	.LBB1774:
 8993              	.LBB1775:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8994              		.loc 22 397 18 view .LVU2488
 8995 0254 0122     		movs	r2, #1
 8996 0256 104B     		ldr	r3, .L503+48
 8997              	.LBE1775:
 8998              	.LBE1774:
 8999              	.LBE1773:
 9000              	.LBE1772:
 9001              	.LBE1771:
1736:Veno-Echo.cpp ****             save_flag = true;
 9002              		.loc 20 1736 35 view .LVU2489
 9003 0258 81ED080A 		vstr.32	s0, [r1, #32]
1737:Veno-Echo.cpp ****         }
 9004              		.loc 20 1737 13 is_stmt 1 view .LVU2490
 9005              	.LVL564:
 9006              	.LBB1780:
 9007              	.LBI1771:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 294


  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 9008              		.loc 23 80 5 view .LVU2491
 9009              	.LBB1779:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 9010              		.loc 23 81 7 view .LVU2492
 9011              	.LBB1778:
 9012              	.LBI1773:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 9013              		.loc 22 288 7 view .LVU2493
 9014              	.LBB1777:
 9015              	.LBI1774:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 9016              		.loc 22 390 7 view .LVU2494
 9017              	.LBB1776:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 9018              		.loc 22 397 18 is_stmt 0 view .LVU2495
 9019 025c BFF35B8F 		dmb	ish
 9020 0260 1A70     		strb	r2, [r3]
 9021 0262 BFF35B8F 		dmb	ish
 9022              	.LVL565:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 9023              		.loc 22 397 18 view .LVU2496
 9024              	.LBE1776:
 9025              	.LBE1777:
 9026              	.LBE1778:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 9027              		.loc 23 81 35 view .LVU2497
 9028 0266 9EE7     		b	.L463
 9029              	.L504:
 9030              		.align	2
 9031              	.L503:
 9032 0268 00000000 		.word	.LANCHOR94
 9033 026c 00000000 		.word	.LANCHOR95
 9034 0270 00000000 		.word	.LANCHOR96
 9035 0274 00000000 		.word	.LANCHOR99
 9036 0278 00000000 		.word	.LANCHOR97
 9037 027c 00000000 		.word	.LANCHOR98
 9038 0280 00000000 		.word	.LANCHOR100
 9039 0284 00000000 		.word	.LANCHOR101
 9040 0288 00000000 		.word	.LANCHOR88
 9041 028c 00000000 		.word	.LANCHOR112
 9042 0290 00000000 		.word	0
 9043 0294 00000000 		.word	.LANCHOR15
 9044 0298 00000000 		.word	.LANCHOR16
 9045 029c 00000000 		.word	.LANCHOR7
 9046 02a0 00000000 		.word	.LANCHOR115
 9047 02a4 00000000 		.word	.LANCHOR12
 9048 02a8 00000000 		.word	.LANCHOR114
 9049 02ac 00000000 		.word	.LANCHOR113
 9050 02b0 00000000 		.word	.LANCHOR116
 9051 02b4 00000000 		.word	.LANCHOR26
 9052 02b8 00000000 		.word	.LANCHOR89
 9053              	.LBE1779:
 9054              	.LBE1780:
 9055              		.cfi_endproc
 9056              	.LFE4329:
 9058              		.section	.text._ZL13AudioCallbackPfS_j,"ax",%progbits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 295


 9059              		.align	1
 9060              		.p2align 2,,3
 9061              		.syntax unified
 9062              		.thumb
 9063              		.thumb_func
 9064              		.fpu fpv5-d16
 9066              	_ZL13AudioCallbackPfS_j:
 9067              	.LVL566:
 9068              	.LFB4309:
 247:Veno-Echo.cpp **** 
 9069              		.loc 20 247 1 is_stmt 1 view -0
 9070              		.cfi_startproc
 9071              		@ args = 0, pretend = 0, frame = 72
 9072              		@ frame_needed = 0, uses_anonymous_args = 0
 258:Veno-Echo.cpp **** 
 9073              		.loc 20 258 1 view .LVU2499
 276:Veno-Echo.cpp **** 
 9074              		.loc 20 276 1 view .LVU2500
 276:Veno-Echo.cpp **** 
 9075              		.loc 20 276 20 is_stmt 0 view .LVU2501
 9076 0000 DFF890C0 		ldr	ip, .L646+12
 276:Veno-Echo.cpp **** 
 9077              		.loc 20 276 25 view .LVU2502
 9078 0004 204B     		ldr	r3, .L646
 247:Veno-Echo.cpp **** 
 9079              		.loc 20 247 1 view .LVU2503
 9080 0006 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 9081              		.cfi_def_cfa_offset 36
 9082              		.cfi_offset 4, -36
 9083              		.cfi_offset 5, -32
 9084              		.cfi_offset 6, -28
 9085              		.cfi_offset 7, -24
 9086              		.cfi_offset 8, -20
 9087              		.cfi_offset 9, -16
 9088              		.cfi_offset 10, -12
 9089              		.cfi_offset 11, -8
 9090              		.cfi_offset 14, -4
 276:Veno-Echo.cpp **** 
 9091              		.loc 20 276 20 view .LVU2504
 9092 000a DCF80040 		ldr	r4, [ip]
 247:Veno-Echo.cpp **** 
 9093              		.loc 20 247 1 view .LVU2505
 9094 000e 1546     		mov	r5, r2
 9095 0010 0646     		mov	r6, r0
 9096 0012 0F46     		mov	r7, r1
 276:Veno-Echo.cpp **** 
 9097              		.loc 20 276 20 view .LVU2506
 9098 0014 0134     		adds	r4, r4, #1
 276:Veno-Echo.cpp **** 
 9099              		.loc 20 276 25 view .LVU2507
 9100 0016 83FB0432 		smull	r3, r2, r3, r4
 9101              	.LVL567:
 276:Veno-Echo.cpp **** 
 9102              		.loc 20 276 25 view .LVU2508
 9103 001a E317     		asrs	r3, r4, #31
 9104 001c 2244     		add	r2, r2, r4
 9105 001e C3EBE203 		rsb	r3, r3, r2, asr #3
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 296


 9106 0022 C3EB0313 		rsb	r3, r3, r3, lsl #4
 9107 0026 E31A     		subs	r3, r4, r3
 247:Veno-Echo.cpp **** 
 9108              		.loc 20 247 1 view .LVU2509
 9109 0028 2DED0E8B 		vpush.64	{d8, d9, d10, d11, d12, d13, d14}
 9110              		.cfi_def_cfa_offset 92
 9111              		.cfi_offset 80, -92
 9112              		.cfi_offset 81, -88
 9113              		.cfi_offset 82, -84
 9114              		.cfi_offset 83, -80
 9115              		.cfi_offset 84, -76
 9116              		.cfi_offset 85, -72
 9117              		.cfi_offset 86, -68
 9118              		.cfi_offset 87, -64
 9119              		.cfi_offset 88, -60
 9120              		.cfi_offset 89, -56
 9121              		.cfi_offset 90, -52
 9122              		.cfi_offset 91, -48
 9123              		.cfi_offset 92, -44
 9124              		.cfi_offset 93, -40
 276:Veno-Echo.cpp **** 
 9125              		.loc 20 276 9 view .LVU2510
 9126 002c CCF80030 		str	r3, [ip]
 289:Veno-Echo.cpp ****         {
 9127              		.loc 20 289 9 is_stmt 1 view .LVU2511
 247:Veno-Echo.cpp **** 
 9128              		.loc 20 247 1 is_stmt 0 view .LVU2512
 9129 0030 93B0     		sub	sp, sp, #76
 9130              		.cfi_def_cfa_offset 168
 9131 0032 0E2B     		cmp	r3, #14
 9132 0034 17D8     		bhi	.L506
 9133 0036 DFE813F0 		tbh	[pc, r3, lsl #1]
 9134              	.L508:
 9135 003a 9C05     		.2byte	(.L522-.L508)/2
 9136 003c 0F00     		.2byte	(.L521-.L508)/2
 9137 003e A605     		.2byte	(.L520-.L508)/2
 9138 0040 AF05     		.2byte	(.L519-.L508)/2
 9139 0042 F105     		.2byte	(.L518-.L508)/2
 9140 0044 FA05     		.2byte	(.L517-.L508)/2
 9141 0046 0306     		.2byte	(.L516-.L508)/2
 9142 0048 0C06     		.2byte	(.L515-.L508)/2
 9143 004a 1506     		.2byte	(.L514-.L508)/2
 9144 004c 1E06     		.2byte	(.L513-.L508)/2
 9145 004e 2706     		.2byte	(.L512-.L508)/2
 9146 0050 3006     		.2byte	(.L511-.L508)/2
 9147 0052 3906     		.2byte	(.L510-.L508)/2
 9148 0054 4206     		.2byte	(.L509-.L508)/2
 9149 0056 9305     		.2byte	(.L507-.L508)/2
 9150              		.p2align 1
 9151              	.L521:
 298:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 9152              		.loc 20 298 13 is_stmt 1 view .LVU2513
 299:Veno-Echo.cpp ****             break;
 9153              		.loc 20 299 17 view .LVU2514
 9154              	.LBB1867:
 9155              	.LBI1867:
 844:Veno-Echo.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 297


 9156              		.loc 20 844 6 view .LVU2515
 9157              	.LBB1868:
 846:Veno-Echo.cpp **** }
 9158              		.loc 20 846 5 view .LVU2516
 846:Veno-Echo.cpp **** }
 9159              		.loc 20 846 36 is_stmt 0 view .LVU2517
 9160 0058 0021     		movs	r1, #0
 9161              	.LVL568:
 846:Veno-Echo.cpp **** }
 9162              		.loc 20 846 36 view .LVU2518
 9163 005a 0C48     		ldr	r0, .L646+4
 9164              	.LVL569:
 846:Veno-Echo.cpp **** }
 9165              		.loc 20 846 36 view .LVU2519
 9166 005c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 9167              	.LVL570:
 846:Veno-Echo.cpp **** }
 9168              		.loc 20 846 19 view .LVU2520
 9169 0060 0B4B     		ldr	r3, .L646+8
 9170 0062 83ED000A 		vstr.32	s0, [r3]
 9171              	.L506:
 9172              	.LVL571:
 846:Veno-Echo.cpp **** }
 9173              		.loc 20 846 19 view .LVU2521
 9174              	.LBE1868:
 9175              	.LBE1867:
 9176              	.LBB1869:
 379:Veno-Echo.cpp ****     {   
 9177              		.loc 20 379 25 is_stmt 1 discriminator 1 view .LVU2522
 9178 0066 002D     		cmp	r5, #0
 9179 0068 00F05C85 		beq	.L505
 379:Veno-Echo.cpp ****     {   
 9180              		.loc 20 379 25 is_stmt 0 view .LVU2523
 9181 006c 0023     		movs	r3, #0
 9182 006e 013D     		subs	r5, r5, #1
 9183              	.LVL572:
 379:Veno-Echo.cpp ****     {   
 9184              		.loc 20 379 25 view .LVU2524
 9185 0070 DFF82480 		ldr	r8, .L646+16
 9186 0074 B346     		mov	fp, r6
 9187 0076 0293     		str	r3, [sp, #8]
 9188 0078 25F00103 		bic	r3, r5, #1
 9189 007c DFF81C90 		ldr	r9, .L646+20
 9190 0080 0097     		str	r7, [sp]
 9191 0082 0593     		str	r3, [sp, #20]
 9192 0084 62E1     		b	.L578
 9193              	.L647:
 9194 0086 00BF     		.align	2
 9195              	.L646:
 9196 0088 89888888 		.word	-2004318071
 9197 008c 18000000 		.word	.LANCHOR4+24
 9198 0090 00000000 		.word	.LANCHOR5
 9199 0094 00000000 		.word	.LANCHOR117
 9200 0098 00000000 		.word	.LANCHOR132
 9201 009c 00000000 		.word	.LANCHOR133
 9202              	.LVL573:
 9203              	.L645:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 298


 9204              	.LBB1870:
 9205              	.LBB1871:
 9206              	.LBB1872:
2001:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9207              		.loc 20 2001 10 is_stmt 1 view .LVU2525
 9208 00a0 B8EE007A 		vmov.f32	s14, #-2.0e+0
2002:Veno-Echo.cpp ****     else
 9209              		.loc 20 2002 19 is_stmt 0 view .LVU2526
 9210 00a4 F4EE477A 		vcmp.f32	s15, s14
 9211 00a8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9212 00ac 48BF     		it	mi
 9213 00ae F0EE477A 		vmovmi.f32	s15, s14
 9214              	.LVL574:
 9215              	.L544:
2006:Veno-Echo.cpp **** }
 9216              		.loc 20 2006 5 is_stmt 1 view .LVU2527
2006:Veno-Echo.cpp **** }
 9217              		.loc 20 2006 5 is_stmt 0 view .LVU2528
 9218              	.LBE1872:
 9219              	.LBE1871:
 9220              	.LBB1875:
 9221              	.LBB1876:
1999:Veno-Echo.cpp ****         returnval = limit;
 9222              		.loc 20 1999 5 view .LVU2529
 9223 00b2 B0EE007A 		vmov.f32	s14, #2.0e+0
 9224              	.LBE1876:
 9225              	.LBE1875:
 434:Veno-Echo.cpp **** 
 9226              		.loc 20 434 34 view .LVU2530
 9227 00b6 9DED090A 		vldr.32	s0, [sp, #36]
 433:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 9228              		.loc 20 433 23 view .LVU2531
 9229 00ba CDED087A 		vstr.32	s15, [sp, #32]
 434:Veno-Echo.cpp **** 
 9230              		.loc 20 434 9 is_stmt 1 view .LVU2532
 9231              	.LVL575:
 9232              	.LBB1880:
 9233              	.LBI1875:
1996:Veno-Echo.cpp **** {
 9234              		.loc 20 1996 7 view .LVU2533
 9235              	.LBB1877:
1998:Veno-Echo.cpp ****     if (input > limit)
 9236              		.loc 20 1998 5 view .LVU2534
1999:Veno-Echo.cpp ****         returnval = limit;
 9237              		.loc 20 1999 5 view .LVU2535
 9238 00be B4EEC70A 		vcmpe.f32	s0, s14
 9239 00c2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9240 00c6 00F36C84 		bgt	.L582
2001:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9241              		.loc 20 2001 10 view .LVU2536
 9242 00ca B8EE007A 		vmov.f32	s14, #-2.0e+0
 9243              	.LBE1877:
 9244              	.LBE1880:
 9245              	.LBB1881:
 436:Veno-Echo.cpp **** {
 9246              		.loc 20 436 1 is_stmt 0 view .LVU2537
 9247 00ce DC4B     		ldr	r3, .L648
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 299


 9248 00d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9249              	.LBE1881:
 9250              	.LBB1903:
 9251              	.LBB1878:
2002:Veno-Echo.cpp ****     else
 9252              		.loc 20 2002 19 view .LVU2538
 9253 00d2 B4EE470A 		vcmp.f32	s0, s14
 9254 00d6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9255 00da 48BF     		it	mi
 9256 00dc B0EE470A 		vmovmi.f32	s0, s14
 9257              	.LVL576:
2006:Veno-Echo.cpp **** }
 9258              		.loc 20 2006 5 is_stmt 1 view .LVU2539
2006:Veno-Echo.cpp **** }
 9259              		.loc 20 2006 5 is_stmt 0 view .LVU2540
 9260              	.LBE1878:
 9261              	.LBE1903:
 434:Veno-Echo.cpp **** 
 9262              		.loc 20 434 23 view .LVU2541
 9263 00e0 8DED090A 		vstr.32	s0, [sp, #36]
 436:Veno-Echo.cpp **** {
 9264              		.loc 20 436 1 is_stmt 1 view .LVU2542
 9265              	.LBB1904:
 9266 00e4 002B     		cmp	r3, #0
 9267 00e6 00F06584 		beq	.L642
 9268              	.L548:
 9269              	.LBE1904:
 480:Veno-Echo.cpp ****         static float RNegFB{};
 9270              		.loc 20 480 9 view .LVU2543
 481:Veno-Echo.cpp **** 
 9271              		.loc 20 481 9 view .LVU2544
 484:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9272              		.loc 20 484 9 view .LVU2545
 484:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9273              		.loc 20 484 22 is_stmt 0 view .LVU2546
 9274 00ea D64B     		ldr	r3, .L648+4
 9275              	.LBB1905:
 9276              	.LBB1906:
  53:envFollow.h   **** 
  54:envFollow.h   ****     float GetEnv(float sample)
  55:envFollow.h   ****     {
  56:envFollow.h   ****         //remove average DC offset:
  57:envFollow.h   ****         avg = (w * sample) + ((1-w) * avg);
 9277              		.loc 12 57 16 view .LVU2547
 9278 00ec D8ED042A 		vldr.32	s5, [r8, #16]
 9279              	.LBE1906:
 9280              	.LBE1905:
 484:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9281              		.loc 20 484 22 view .LVU2548
 9282 00f0 D3ED004A 		vldr.32	s9, [r3]
 9283 00f4 D44B     		ldr	r3, .L648+8
 9284              	.LBB1918:
 9285              	.LBB1907:
 9286              		.loc 12 57 37 view .LVU2549
 9287 00f6 98ED006A 		vldr.32	s12, [r8]
 9288              	.LBE1907:
 9289              	.LBE1918:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 300


 484:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9290              		.loc 20 484 22 view .LVU2550
 9291 00fa 93ED007A 		vldr.32	s14, [r3]
 487:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9292              		.loc 20 487 22 view .LVU2551
 9293 00fe D34B     		ldr	r3, .L648+12
 484:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9294              		.loc 20 484 9 view .LVU2552
 9295 0100 F4EEC74A 		vcmpe.f32	s9, s14
 9296              	.LBB1919:
 9297              	.LBB1920:
 9298              		.loc 12 57 16 view .LVU2553
 9299 0104 D9ED043A 		vldr.32	s7, [r9, #16]
  58:envFollow.h   ****         sample_noDC = sample - avg;
  59:envFollow.h   **** 
  60:envFollow.h   ****         //take absolute
  61:envFollow.h   ****         pos_sample = fabsf(sample_noDC);
  62:envFollow.h   ****         //return static_cast<int>(pos_sample);
  63:envFollow.h   **** 
  64:envFollow.h   ****         //remove ripple
  65:envFollow.h   ****         avg_env = (w_env * pos_sample) + ((1-w_env) * avg_env);
 9300              		.loc 12 65 20 view .LVU2554
 9301 0108 99ED054A 		vldr.32	s8, [r9, #20]
 9302              		.loc 12 65 53 view .LVU2555
 9303 010c 99ED032A 		vldr.32	s4, [r9, #12]
 9304              	.LBE1920:
 9305              	.LBE1919:
 484:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9306              		.loc 20 484 9 view .LVU2556
 9307 0110 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9308              	.LBB1929:
 9309              	.LBB1908:
 9310              		.loc 12 65 20 view .LVU2557
 9311 0114 98ED053A 		vldr.32	s6, [r8, #20]
 9312              		.loc 12 65 53 view .LVU2558
 9313 0118 98ED031A 		vldr.32	s2, [r8, #12]
 9314              	.LBE1908:
 9315              	.LBE1929:
 503:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9316              		.loc 20 503 13 view .LVU2559
 9317 011c DFEDCC1A 		vldr.32	s3, .L648+16
 9318 0120 58BF     		it	pl
 9319 0122 74EEC74A 		vsubpl.f32	s9, s9, s14
 487:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9320              		.loc 20 487 9 is_stmt 1 view .LVU2560
 487:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9321              		.loc 20 487 22 is_stmt 0 view .LVU2561
 9322 0126 93ED007A 		vldr.32	s14, [r3]
 9323 012a CA4B     		ldr	r3, .L648+20
 9324 012c D3ED006A 		vldr.32	s13, [r3]
 490:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 9325              		.loc 20 490 15 view .LVU2562
 9326 0130 67EEA44A 		vmul.f32	s9, s15, s9
 9327              	.LBB1930:
 9328              	.LBB1921:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9329              		.loc 12 57 37 view .LVU2563
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 301


 9330 0134 D9ED007A 		vldr.32	s15, [r9]
 9331              	.LBE1921:
 9332              	.LBE1930:
 487:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9333              		.loc 20 487 9 view .LVU2564
 9334 0138 B4EEE67A 		vcmpe.f32	s14, s13
 494:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9335              		.loc 20 494 36 view .LVU2565
 9336 013c C64B     		ldr	r3, .L648+24
 487:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9337              		.loc 20 487 9 view .LVU2566
 9338 013e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9339 0142 58BF     		it	pl
 9340 0144 37EE667A 		vsubpl.f32	s14, s14, s13
 490:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 9341              		.loc 20 490 9 is_stmt 1 view .LVU2567
 9342              	.LVL577:
 491:Veno-Echo.cpp **** 
 9343              		.loc 20 491 9 view .LVU2568
 494:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9344              		.loc 20 494 36 is_stmt 0 view .LVU2569
 9345 0148 F7EE006A 		vmov.f32	s13, #1.0e+0
 491:Veno-Echo.cpp **** 
 9346              		.loc 20 491 15 view .LVU2570
 9347 014c 20EE070A 		vmul.f32	s0, s0, s14
 9348              	.LVL578:
 494:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9349              		.loc 20 494 9 is_stmt 1 view .LVU2571
 9350              	.LBB1931:
 9351              	.LBB1909:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9352              		.loc 12 57 33 is_stmt 0 view .LVU2572
 9353 0150 36EEE25A 		vsub.f32	s10, s13, s5
 9354              	.LBE1909:
 9355              	.LBE1931:
 9356              	.LBB1932:
 9357              	.LBB1922:
 9358 0154 76EEE35A 		vsub.f32	s11, s13, s7
 9359              	.LBE1922:
 9360              	.LBE1932:
 9361              	.LBB1933:
 9362              	.LBB1910:
 9363              		.loc 12 65 45 view .LVU2573
 9364 0158 36EEC37A 		vsub.f32	s14, s13, s6
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9365              		.loc 12 57 37 view .LVU2574
 9366 015c 25EE065A 		vmul.f32	s10, s10, s12
 9367              	.LBE1910:
 9368              	.LBE1933:
 494:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9369              		.loc 20 494 36 view .LVU2575
 9370 0160 93ED006A 		vldr.32	s12, [r3]
 9371              	.LBB1934:
 9372              	.LBB1923:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9373              		.loc 12 57 37 view .LVU2576
 9374 0164 65EEA75A 		vmul.f32	s11, s11, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 302


 9375              		.loc 12 65 45 view .LVU2577
 9376 0168 76EEC47A 		vsub.f32	s15, s13, s8
 9377              	.LBE1923:
 9378              	.LBE1934:
 9379              	.LBB1935:
 9380              	.LBB1911:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9381              		.loc 12 57 28 view .LVU2578
 9382 016c A4EEA25A 		vfma.f32	s10, s9, s5
 9383              	.LBE1911:
 9384              	.LBE1935:
 9385              	.LBB1936:
 9386              	.LBB1924:
 9387 0170 E0EE235A 		vfma.f32	s11, s0, s7
 9388              		.loc 12 65 53 view .LVU2579
 9389 0174 67EE827A 		vmul.f32	s15, s15, s4
 9390              	.LBE1924:
 9391              	.LBE1936:
 9392              	.LBB1937:
 9393              	.LBB1912:
 9394 0178 27EE017A 		vmul.f32	s14, s14, s2
 9395              	.LBE1912:
 9396              	.LBE1937:
 494:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9397              		.loc 20 494 36 view .LVU2580
 9398 017c 76EEC66A 		vsub.f32	s13, s13, s12
 9399              	.LBB1938:
 9400              	.LBB1913:
  58:envFollow.h   **** 
 9401              		.loc 12 58 30 view .LVU2581
 9402 0180 34EEC52A 		vsub.f32	s4, s9, s10
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9403              		.loc 12 57 13 view .LVU2582
 9404 0184 88ED005A 		vstr.32	s10, [r8]
 9405              	.LBE1913:
 9406              	.LBE1938:
 9407              	.LBB1939:
 9408              	.LBB1925:
  58:envFollow.h   **** 
 9409              		.loc 12 58 30 view .LVU2583
 9410 0188 70EE652A 		vsub.f32	s5, s0, s11
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9411              		.loc 12 57 13 view .LVU2584
 9412 018c C9ED005A 		vstr.32	s11, [r9]
 9413              	.LBE1925:
 9414              	.LBE1939:
 494:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9415              		.loc 20 494 89 view .LVU2585
 9416 0190 66EE005A 		vmul.f32	s11, s12, s0
 9417              	.LBB1940:
 9418              	.LBB1914:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9419              		.loc 12 61 27 view .LVU2586
 9420 0194 F0EEC23A 		vabs.f32	s7, s4
  58:envFollow.h   **** 
 9421              		.loc 12 58 21 view .LVU2587
 9422 0198 88ED022A 		vstr.32	s4, [r8, #8]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 303


 9423              	.LBE1914:
 9424              	.LBE1940:
 9425              	.LBB1941:
 9426              	.LBB1926:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9427              		.loc 12 61 27 view .LVU2588
 9428 019c B0EEE25A 		vabs.f32	s10, s5
  58:envFollow.h   **** 
 9429              		.loc 12 58 21 view .LVU2589
 9430 01a0 C9ED022A 		vstr.32	s5, [r9, #8]
 9431              	.LBE1926:
 9432              	.LBE1941:
 495:Veno-Echo.cpp **** 
 9433              		.loc 20 495 89 view .LVU2590
 9434 01a4 26EE246A 		vmul.f32	s12, s12, s9
 9435              	.LBB1942:
 9436              	.LBB1915:
 9437              		.loc 12 65 40 view .LVU2591
 9438 01a8 A3EE837A 		vfma.f32	s14, s7, s6
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9439              		.loc 12 61 20 view .LVU2592
 9440 01ac C8ED013A 		vstr.32	s7, [r8, #4]
 9441              	.LBE1915:
 9442              	.LBE1942:
 9443              	.LBB1943:
 9444              	.LBB1927:
 9445              		.loc 12 65 40 view .LVU2593
 9446 01b0 E5EE047A 		vfma.f32	s15, s10, s8
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9447              		.loc 12 61 20 view .LVU2594
 9448 01b4 89ED015A 		vstr.32	s10, [r9, #4]
 9449              	.LBE1927:
 9450              	.LBE1943:
 494:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9451              		.loc 20 494 15 view .LVU2595
 9452 01b8 E6EEA45A 		vfma.f32	s11, s13, s9
 9453              	.LVL579:
 495:Veno-Echo.cpp **** 
 9454              		.loc 20 495 9 is_stmt 1 view .LVU2596
 495:Veno-Echo.cpp **** 
 9455              		.loc 20 495 15 is_stmt 0 view .LVU2597
 9456 01bc A6EE806A 		vfma.f32	s12, s13, s0
 9457              	.LVL580:
 499:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 9458              		.loc 20 499 9 is_stmt 1 view .LVU2598
 9459              	.LBB1944:
 9460              	.LBI1905:
  54:envFollow.h   ****     {
 9461              		.loc 12 54 11 view .LVU2599
 9462              	.LBB1916:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9463              		.loc 12 57 9 view .LVU2600
  58:envFollow.h   **** 
 9464              		.loc 12 58 9 view .LVU2601
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9465              		.loc 12 61 9 view .LVU2602
 9466              		.loc 12 65 9 view .LVU2603
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 304


 9467              	.LBE1916:
 9468              	.LBE1944:
 503:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9469              		.loc 20 503 13 is_stmt 0 view .LVU2604
 9470 01c0 B4EEE17A 		vcmpe.f32	s14, s3
 9471              	.LBB1945:
 9472              	.LBB1917:
 9473              		.loc 12 65 17 view .LVU2605
 9474 01c4 88ED037A 		vstr.32	s14, [r8, #12]
  66:envFollow.h   **** 
  67:envFollow.h   ****         return avg_env;
 9475              		.loc 12 67 9 is_stmt 1 view .LVU2606
 9476              	.LVL581:
 9477              		.loc 12 67 9 is_stmt 0 view .LVU2607
 9478              	.LBE1917:
 9479              	.LBE1945:
 500:Veno-Echo.cpp **** 
 9480              		.loc 20 500 9 is_stmt 1 view .LVU2608
 9481              	.LBB1946:
 9482              	.LBI1919:
  54:envFollow.h   ****     {
 9483              		.loc 12 54 11 view .LVU2609
 9484              	.LBB1928:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9485              		.loc 12 57 9 view .LVU2610
  58:envFollow.h   **** 
 9486              		.loc 12 58 9 view .LVU2611
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9487              		.loc 12 61 9 view .LVU2612
  65:envFollow.h   **** 
 9488              		.loc 12 65 9 view .LVU2613
  65:envFollow.h   **** 
 9489              		.loc 12 65 17 is_stmt 0 view .LVU2614
 9490 01c8 C9ED037A 		vstr.32	s15, [r9, #12]
 9491              		.loc 12 67 9 is_stmt 1 view .LVU2615
 9492              	.LVL582:
 9493              		.loc 12 67 9 is_stmt 0 view .LVU2616
 9494              	.LBE1928:
 9495              	.LBE1946:
 503:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9496              		.loc 20 503 13 is_stmt 1 view .LVU2617
 9497 01cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9498 01d0 C0F2E483 		blt	.L634
 504:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9499              		.loc 20 504 17 view .LVU2618
 504:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9500              		.loc 20 504 32 is_stmt 0 view .LVU2619
 9501 01d4 37EE617A 		vsub.f32	s14, s14, s3
 9502              	.LVL583:
 504:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9503              		.loc 20 504 47 view .LVU2620
 9504 01d8 F0EE086A 		vmov.f32	s13, #3.0e+0
 9505 01dc 27EE267A 		vmul.f32	s14, s14, s13
 9506              	.L554:
 508:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 9507              		.loc 20 508 13 view .LVU2621
 9508 01e0 DFED9B6A 		vldr.32	s13, .L648+16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 305


 9509 01e4 984B     		ldr	r3, .L648+8
 9510 01e6 F4EEE67A 		vcmpe.f32	s15, s13
 9511 01ea 83ED007A 		vstr.32	s14, [r3]
 508:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 9512              		.loc 20 508 13 is_stmt 1 view .LVU2622
 9513 01ee F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9514 01f2 C0F2D083 		blt	.L635
 509:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9515              		.loc 20 509 17 view .LVU2623
 509:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9516              		.loc 20 509 32 is_stmt 0 view .LVU2624
 9517 01f6 77EEE67A 		vsub.f32	s15, s15, s13
 9518              	.LVL584:
 509:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9519              		.loc 20 509 47 view .LVU2625
 9520 01fa B0EE087A 		vmov.f32	s14, #3.0e+0
 9521 01fe 67EE877A 		vmul.f32	s15, s15, s14
 9522              	.L556:
 9523 0202 944B     		ldr	r3, .L648+20
 513:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 9524              		.loc 20 513 15 view .LVU2626
 9525 0204 38EEA50A 		vadd.f32	s0, s17, s11
 9526              	.LVL585:
 514:Veno-Echo.cpp ****  
 9527              		.loc 20 514 15 view .LVU2627
 9528 0208 38EE068A 		vadd.f32	s16, s16, s12
 9529              	.LVL586:
 514:Veno-Echo.cpp ****  
 9530              		.loc 20 514 15 view .LVU2628
 9531 020c C3ED007A 		vstr.32	s15, [r3]
 513:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 9532              		.loc 20 513 9 is_stmt 1 view .LVU2629
 9533              	.LVL587:
 514:Veno-Echo.cpp ****  
 9534              		.loc 20 514 9 view .LVU2630
 517:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 9535              		.loc 20 517 9 view .LVU2631
 9536              	.LBB1947:
 9537              	.LBI1947:
1996:Veno-Echo.cpp **** {
 9538              		.loc 20 1996 7 view .LVU2632
 9539              	.LBB1948:
1998:Veno-Echo.cpp ****     if (input > limit)
 9540              		.loc 20 1998 5 view .LVU2633
1999:Veno-Echo.cpp ****         returnval = limit;
 9541              		.loc 20 1999 5 view .LVU2634
 9542 0210 F0EE007A 		vmov.f32	s15, #2.0e+0
 9543 0214 B4EEE70A 		vcmpe.f32	s0, s15
 9544 0218 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9545 021c 00F35D84 		bgt	.L588
2001:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9546              		.loc 20 2001 10 view .LVU2635
 9547 0220 F8EE007A 		vmov.f32	s15, #-2.0e+0
2002:Veno-Echo.cpp ****     else
 9548              		.loc 20 2002 19 is_stmt 0 view .LVU2636
 9549 0224 B4EE670A 		vcmp.f32	s0, s15
 9550 0228 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 306


 9551 022c 48BF     		it	mi
 9552 022e B0EE670A 		vmovmi.f32	s0, s15
 9553              	.LVL588:
 9554              	.L558:
2006:Veno-Echo.cpp **** }
 9555              		.loc 20 2006 5 is_stmt 1 view .LVU2637
2006:Veno-Echo.cpp **** }
 9556              		.loc 20 2006 5 is_stmt 0 view .LVU2638
 9557              	.LBE1948:
 9558              	.LBE1947:
 518:Veno-Echo.cpp **** 
 9559              		.loc 20 518 9 is_stmt 1 view .LVU2639
 9560              	.LBB1950:
 9561              	.LBI1950:
1996:Veno-Echo.cpp **** {
 9562              		.loc 20 1996 7 view .LVU2640
 9563              	.LBB1951:
1998:Veno-Echo.cpp ****     if (input > limit)
 9564              		.loc 20 1998 5 view .LVU2641
1999:Veno-Echo.cpp ****         returnval = limit;
 9565              		.loc 20 1999 5 view .LVU2642
 9566 0232 F0EE007A 		vmov.f32	s15, #2.0e+0
 9567 0236 B4EEE78A 		vcmpe.f32	s16, s15
 9568 023a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9569 023e 00F34884 		bgt	.L589
2001:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9570              		.loc 20 2001 10 view .LVU2643
 9571 0242 F8EE007A 		vmov.f32	s15, #-2.0e+0
2002:Veno-Echo.cpp ****     else
 9572              		.loc 20 2002 19 is_stmt 0 view .LVU2644
 9573 0246 B4EE678A 		vcmp.f32	s16, s15
 9574 024a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9575 024e 48BF     		it	mi
 9576 0250 B0EE678A 		vmovmi.f32	s16, s15
 9577              	.LVL589:
 9578              	.L560:
2006:Veno-Echo.cpp **** }
 9579              		.loc 20 2006 5 is_stmt 1 view .LVU2645
2006:Veno-Echo.cpp **** }
 9580              		.loc 20 2006 5 is_stmt 0 view .LVU2646
 9581              	.LBE1951:
 9582              	.LBE1950:
 520:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 9583              		.loc 20 520 9 is_stmt 1 view .LVU2647
 520:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 9584              		.loc 20 520 42 is_stmt 0 view .LVU2648
 9585 0254 8148     		ldr	r0, .L648+28
 9586 0256 FFF7FEFF 		bl	_ZN7daisysp7DcBlock7ProcessEf
 9587              	.LVL590:
 520:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 9588              		.loc 20 520 21 view .LVU2649
 9589 025a 11A9     		add	r1, sp, #68
 9590 025c 8048     		ldr	r0, .L648+32
 520:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 9591              		.loc 20 520 42 view .LVU2650
 9592 025e 8DED110A 		vstr.32	s0, [sp, #68]
 520:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 307


 9593              		.loc 20 520 21 view .LVU2651
 9594 0262 FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 9595              	.LVL591:
 521:Veno-Echo.cpp **** 
 9596              		.loc 20 521 9 is_stmt 1 view .LVU2652
 521:Veno-Echo.cpp **** 
 9597              		.loc 20 521 42 is_stmt 0 view .LVU2653
 9598 0266 7F48     		ldr	r0, .L648+36
 9599 0268 B0EE480A 		vmov.f32	s0, s16
 9600 026c FFF7FEFF 		bl	_ZN7daisysp7DcBlock7ProcessEf
 9601              	.LVL592:
 521:Veno-Echo.cpp **** 
 9602              		.loc 20 521 21 view .LVU2654
 9603 0270 11A9     		add	r1, sp, #68
 9604 0272 7D48     		ldr	r0, .L648+40
 521:Veno-Echo.cpp **** 
 9605              		.loc 20 521 42 view .LVU2655
 9606 0274 8DED110A 		vstr.32	s0, [sp, #68]
 521:Veno-Echo.cpp **** 
 9607              		.loc 20 521 21 view .LVU2656
 9608 0278 FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 9609              	.LVL593:
 524:Veno-Echo.cpp ****         float mixR;
 9610              		.loc 20 524 9 is_stmt 1 view .LVU2657
 525:Veno-Echo.cpp **** 
 9611              		.loc 20 525 9 view .LVU2658
 527:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 9612              		.loc 20 527 9 view .LVU2659
 527:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 9613              		.loc 20 527 53 is_stmt 0 view .LVU2660
 9614 027c 09AA     		add	r2, sp, #36
 9615 027e 08A9     		add	r1, sp, #32
 9616 0280 7A48     		ldr	r0, .L648+44
 9617 0282 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9618              	.LVL594:
 528:Veno-Echo.cpp **** 
 9619              		.loc 20 528 53 view .LVU2661
 9620 0286 08AA     		add	r2, sp, #32
 9621 0288 09A9     		add	r1, sp, #36
 9622 028a 7848     		ldr	r0, .L648+44
 527:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 9623              		.loc 20 527 81 view .LVU2662
 9624 028c 8DED0A0A 		vstr.32	s0, [sp, #40]
 528:Veno-Echo.cpp **** 
 9625              		.loc 20 528 9 is_stmt 1 view .LVU2663
 528:Veno-Echo.cpp **** 
 9626              		.loc 20 528 53 is_stmt 0 view .LVU2664
 9627 0290 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9628              	.LVL595:
 9629              	.LBB1953:
 9630              	.LBB1954:
1999:Veno-Echo.cpp ****         returnval = limit;
 9631              		.loc 20 1999 5 view .LVU2665
 9632 0294 B0EE007A 		vmov.f32	s14, #2.0e+0
 9633              	.LBE1954:
 9634              	.LBE1953:
 531:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 308


 9635              		.loc 20 531 38 view .LVU2666
 9636 0298 DDED0A7A 		vldr.32	s15, [sp, #40]
 531:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 9637              		.loc 20 531 9 is_stmt 1 view .LVU2667
 9638              	.LVL596:
 9639              	.LBB1957:
 9640              	.LBI1953:
1996:Veno-Echo.cpp **** {
 9641              		.loc 20 1996 7 view .LVU2668
 9642              	.LBB1955:
1998:Veno-Echo.cpp ****     if (input > limit)
 9643              		.loc 20 1998 5 view .LVU2669
1999:Veno-Echo.cpp ****         returnval = limit;
 9644              		.loc 20 1999 5 view .LVU2670
 9645 029c F4EEC77A 		vcmpe.f32	s15, s14
 9646 02a0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9647 02a4 00F31D84 		bgt	.L590
2001:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9648              		.loc 20 2001 10 view .LVU2671
 9649 02a8 B8EE007A 		vmov.f32	s14, #-2.0e+0
2002:Veno-Echo.cpp ****     else
 9650              		.loc 20 2002 19 is_stmt 0 view .LVU2672
 9651 02ac F4EE477A 		vcmp.f32	s15, s14
 9652 02b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9653 02b4 48BF     		it	mi
 9654 02b6 F0EE477A 		vmovmi.f32	s15, s14
 9655              	.LVL597:
 9656              	.L562:
2006:Veno-Echo.cpp **** }
 9657              		.loc 20 2006 5 is_stmt 1 view .LVU2673
2006:Veno-Echo.cpp **** }
 9658              		.loc 20 2006 5 is_stmt 0 view .LVU2674
 9659              	.LBE1955:
 9660              	.LBE1957:
 9661              	.LBB1958:
 9662              	.LBB1959:
1999:Veno-Echo.cpp ****         returnval = limit;
 9663              		.loc 20 1999 5 view .LVU2675
 9664 02ba B0EE007A 		vmov.f32	s14, #2.0e+0
 9665              	.LBE1959:
 9666              	.LBE1958:
 531:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 9667              		.loc 20 531 27 view .LVU2676
 9668 02be CDED0A7A 		vstr.32	s15, [sp, #40]
 532:Veno-Echo.cpp **** 
 9669              		.loc 20 532 9 is_stmt 1 view .LVU2677
 9670              	.LVL598:
 9671              	.LBB1963:
 9672              	.LBI1958:
1996:Veno-Echo.cpp **** {
 9673              		.loc 20 1996 7 view .LVU2678
 9674              	.LBB1960:
1998:Veno-Echo.cpp ****     if (input > limit)
 9675              		.loc 20 1998 5 view .LVU2679
1999:Veno-Echo.cpp ****         returnval = limit;
 9676              		.loc 20 1999 5 view .LVU2680
 9677 02c2 B4EEC70A 		vcmpe.f32	s0, s14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 309


 9678 02c6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9679 02ca 00F3CB82 		bgt	.L591
2001:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9680              		.loc 20 2001 10 view .LVU2681
 9681 02ce B8EE007A 		vmov.f32	s14, #-2.0e+0
 9682              	.LBE1960:
 9683              	.LBE1963:
 9684              	.LBB1964:
 534:Veno-Echo.cpp **** {
 9685              		.loc 20 534 1 is_stmt 0 view .LVU2682
 9686 02d2 5B4B     		ldr	r3, .L648
 9687 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9688              	.LBE1964:
 9689              	.LBB1987:
 9690              	.LBB1961:
2002:Veno-Echo.cpp ****     else
 9691              		.loc 20 2002 19 view .LVU2683
 9692 02d6 B4EE470A 		vcmp.f32	s0, s14
 9693 02da F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9694 02de 48BF     		it	mi
 9695 02e0 B0EE470A 		vmovmi.f32	s0, s14
 9696              	.LVL599:
2006:Veno-Echo.cpp **** }
 9697              		.loc 20 2006 5 is_stmt 1 view .LVU2684
2006:Veno-Echo.cpp **** }
 9698              		.loc 20 2006 5 is_stmt 0 view .LVU2685
 9699              	.LBE1961:
 9700              	.LBE1987:
 532:Veno-Echo.cpp **** 
 9701              		.loc 20 532 27 view .LVU2686
 9702 02e4 8DED0B0A 		vstr.32	s0, [sp, #44]
 534:Veno-Echo.cpp **** {
 9703              		.loc 20 534 1 is_stmt 1 view .LVU2687
 9704              	.LBB1988:
 9705 02e8 002B     		cmp	r3, #0
 9706 02ea 40F0C482 		bne	.L643
 9707              	.LVL600:
 9708              	.L566:
 534:Veno-Echo.cpp **** {
 9709              		.loc 20 534 1 is_stmt 0 view .LVU2688
 9710              	.LBE1988:
 575:Veno-Echo.cpp ****         {
 9711              		.loc 20 575 9 is_stmt 1 view .LVU2689
 575:Veno-Echo.cpp ****         {
 9712              		.loc 20 575 19 is_stmt 0 view .LVU2690
 9713 02ee 604B     		ldr	r3, .L648+48
 575:Veno-Echo.cpp ****         {
 9714              		.loc 20 575 9 view .LVU2691
 9715 02f0 F6EE006A 		vmov.f32	s13, #5.0e-1
 575:Veno-Echo.cpp ****         {
 9716              		.loc 20 575 19 view .LVU2692
 9717 02f4 93ED007A 		vldr.32	s14, [r3]
 575:Veno-Echo.cpp ****         {
 9718              		.loc 20 575 9 view .LVU2693
 9719 02f8 B4EEE67A 		vcmpe.f32	s14, s13
 9720 02fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9721 0300 40F18782 		bpl	.L636
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 310


 577:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9722              		.loc 20 577 13 is_stmt 1 view .LVU2694
 577:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9723              		.loc 20 577 34 is_stmt 0 view .LVU2695
 9724 0304 37EE077A 		vadd.f32	s14, s14, s14
 577:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9725              		.loc 20 577 18 view .LVU2696
 9726 0308 9BED006A 		vldr.32	s12, [fp]
 578:Veno-Echo.cpp ****         }
 9727              		.loc 20 578 18 view .LVU2697
 9728 030c DBED016A 		vldr.32	s13, [fp, #4]
 577:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9729              		.loc 20 577 18 view .LVU2698
 9730 0310 A7EE276A 		vfma.f32	s12, s14, s15
 578:Veno-Echo.cpp ****         }
 9731              		.loc 20 578 18 view .LVU2699
 9732 0314 E7EE006A 		vfma.f32	s13, s14, s0
 577:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 9733              		.loc 20 577 18 view .LVU2700
 9734 0318 F0EE467A 		vmov.f32	s15, s12
 9735              	.LVL601:
 578:Veno-Echo.cpp ****         }
 9736              		.loc 20 578 13 is_stmt 1 view .LVU2701
 578:Veno-Echo.cpp ****         }
 9737              		.loc 20 578 18 is_stmt 0 view .LVU2702
 9738 031c B0EE660A 		vmov.f32	s0, s13
 9739              	.LVL602:
 9740              	.L572:
 592:Veno-Echo.cpp ****         {
 9741              		.loc 20 592 9 is_stmt 1 view .LVU2703
 9742 0320 544B     		ldr	r3, .L648+52
 9743 0322 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9744 0324 002B     		cmp	r3, #0
 9745 0326 00F06E82 		beq	.L575
 594:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 9746              		.loc 20 594 13 view .LVU2704
 594:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 9747              		.loc 20 594 20 is_stmt 0 view .LVU2705
 9748 032a 0023     		movs	r3, #0
 9749 032c 009A     		ldr	r2, [sp]
 9750 032e 1360     		str	r3, [r2]	@ float
 595:Veno-Echo.cpp ****         }
 9751              		.loc 20 595 13 is_stmt 1 view .LVU2706
 595:Veno-Echo.cpp ****         }
 9752              		.loc 20 595 22 is_stmt 0 view .LVU2707
 9753 0330 5360     		str	r3, [r2, #4]	@ float
 9754              	.L576:
 9755              	.LBE1870:
 379:Veno-Echo.cpp ****     {   
 9756              		.loc 20 379 5 is_stmt 1 discriminator 2 view .LVU2708
 9757 0332 009B     		ldr	r3, [sp]
 9758 0334 0BF1080B 		add	fp, fp, #8
 379:Veno-Echo.cpp ****     {   
 9759              		.loc 20 379 35 is_stmt 0 discriminator 2 view .LVU2709
 9760 0338 029A     		ldr	r2, [sp, #8]
 379:Veno-Echo.cpp ****     {   
 9761              		.loc 20 379 25 discriminator 2 view .LVU2710
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 311


 9762 033a 0599     		ldr	r1, [sp, #20]
 9763 033c 0833     		adds	r3, r3, #8
 9764 033e 8A42     		cmp	r2, r1
 9765 0340 0093     		str	r3, [sp]
 379:Veno-Echo.cpp ****     {   
 9766              		.loc 20 379 35 discriminator 2 view .LVU2711
 9767 0342 02F10203 		add	r3, r2, #2
 9768              	.LVL603:
 379:Veno-Echo.cpp ****     {   
 9769              		.loc 20 379 25 is_stmt 1 discriminator 2 view .LVU2712
 9770 0346 00F0ED83 		beq	.L505
 9771 034a 0293     		str	r3, [sp, #8]
 9772              	.LVL604:
 9773              	.L578:
 9774              	.LBB2249:
 381:Veno-Echo.cpp ****         Update_Mod();
 9775              		.loc 20 381 9 view .LVU2713
 381:Veno-Echo.cpp ****         Update_Mod();
 9776              		.loc 20 381 20 is_stmt 0 view .LVU2714
 9777 034c FFF7FEFF 		bl	_Z11UpdateClockv
 9778              	.LVL605:
 382:Veno-Echo.cpp **** 
 9779              		.loc 20 382 9 is_stmt 1 view .LVU2715
 9780              	.LBB1989:
 9781              	.LBB1990:
 9782              	.LBB1991:
 9783              	.LBB1992:
  74:delayline_reverse.h **** 
  75:delayline_reverse.h ****     /** sets the delay time in samples
  76:delayline_reverse.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  77:delayline_reverse.h ****     */
  78:delayline_reverse.h ****     inline void SetDelay1(float delay)
  79:delayline_reverse.h ****     {
  80:delayline_reverse.h ****         int32_t int_delay = static_cast<int32_t>(delay);
  81:delayline_reverse.h ****         frac1_             = delay - static_cast<float>(int_delay);
  82:delayline_reverse.h ****         delay1_ = static_cast<size_t>(int_delay) < max_size ? int_delay
  83:delayline_reverse.h ****                                                            : max_size - 1;
  84:delayline_reverse.h ****     }
  85:delayline_reverse.h **** 
  86:delayline_reverse.h ****     /** writes the sample of type T to the delay line, and advances the write ptr
  87:delayline_reverse.h ****     */
  88:delayline_reverse.h ****     inline void Write(const T sample)
  89:delayline_reverse.h ****     {
  90:delayline_reverse.h ****         line_[write_ptr_] = sample;
  91:delayline_reverse.h ****         //advance write ptr in forward direction
  92:delayline_reverse.h ****         write_ptr_        = (write_ptr_ + 1 + max_size) % max_size; //increment forwards
  93:delayline_reverse.h ****         
  94:delayline_reverse.h ****         //increment head difference
  95:delayline_reverse.h ****         headDiff_        = (headDiff_ + 1 + delay1_) % delay1_;   
  96:delayline_reverse.h **** 
  97:delayline_reverse.h ****         //advance read ptrs in reverse direction
  98:delayline_reverse.h ****         read_ptr1_ = (read_ptr1_ - 1 + max_size) % max_size;
  99:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 100:delayline_reverse.h ****  
 101:delayline_reverse.h ****         if (headDiff_ > (delay1_ - fadetime - 1))  //start cross fade region
 102:delayline_reverse.h ****         {
 103:delayline_reverse.h ****             if(!fading_)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 312


 104:delayline_reverse.h ****             {
 105:delayline_reverse.h ****                 fading_ = true; //start fading
 106:delayline_reverse.h ****                 
 107:delayline_reverse.h ****                 if(!playinghead_) 
 108:delayline_reverse.h ****                 {
 109:delayline_reverse.h ****                     //jump ptr2 to fadetime beyond write position
 110:delayline_reverse.h ****                     read_ptr2_ = write_ptr_ - 1;
 111:delayline_reverse.h ****                 }
 112:delayline_reverse.h ****     
 113:delayline_reverse.h ****                 else
 114:delayline_reverse.h ****                 {
 115:delayline_reverse.h ****                     //jump ptr1 to fadetime beyond write position
 116:delayline_reverse.h ****                     read_ptr1_ = write_ptr_ - 1; 
 117:delayline_reverse.h ****                 }
 118:delayline_reverse.h ****             }
 119:delayline_reverse.h **** 
 120:delayline_reverse.h ****             else
 121:delayline_reverse.h ****             {
 122:delayline_reverse.h ****                 //continue fading
 123:delayline_reverse.h ****             }
 124:delayline_reverse.h ****         }
 125:delayline_reverse.h **** 
 126:delayline_reverse.h ****         if(fading_)
 127:delayline_reverse.h ****         {
 128:delayline_reverse.h ****             if(!playinghead_)   //head1 playing
 129:delayline_reverse.h ****             {
 130:delayline_reverse.h ****                 fadepos_ = fadepos_ + (1.0f / (fadetime) ); //increment up to 1.
 131:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 132:delayline_reverse.h ****                 {
 133:delayline_reverse.h ****                     fadepos_ = 1.0f;
 134:delayline_reverse.h ****                     fading_ = false;    //stop fading
 135:delayline_reverse.h ****                     playinghead_ = true;
 136:delayline_reverse.h ****                 }
 137:delayline_reverse.h ****             }
 138:delayline_reverse.h **** 
 139:delayline_reverse.h ****             else    //head2 playing
 140:delayline_reverse.h ****             {
 141:delayline_reverse.h ****                 fadepos_ = fadepos_ - (1.0f / (fadetime) ); //increment down to 0
 142:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 143:delayline_reverse.h ****                 {
 144:delayline_reverse.h ****                     fadepos_ = 0.0f;
 145:delayline_reverse.h ****                     fading_ = false;    //stop fading
 146:delayline_reverse.h ****                     playinghead_ = false;
 147:delayline_reverse.h ****                 }
 148:delayline_reverse.h ****             }
 149:delayline_reverse.h ****         }
 150:delayline_reverse.h ****         else    //not fading
 151:delayline_reverse.h ****         {
 152:delayline_reverse.h ****         }
 153:delayline_reverse.h **** 
 154:delayline_reverse.h ****         
 155:delayline_reverse.h ****     }
 156:delayline_reverse.h **** 
 157:delayline_reverse.h ****     /** returns the next sample of type T in the delay line, interpolated if necessary.
 158:delayline_reverse.h ****     */
 159:delayline_reverse.h ****     inline const T ReadRev() const
 160:delayline_reverse.h ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 313


 161:delayline_reverse.h ****         T a1 = line_[read_ptr1_];
 162:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 163:delayline_reverse.h **** 
 164:delayline_reverse.h ****         float read1 = a1;
 165:delayline_reverse.h ****         float read2 = a2;
 166:delayline_reverse.h **** 
 167:delayline_reverse.h ****         float scalar_1, scalar_2;
 168:delayline_reverse.h **** 
 169:delayline_reverse.h ****         //hann
 170:delayline_reverse.h ****         //scalar_1 = sinf(fadepos_ * ((float)M_PI * 0.5f));
 171:delayline_reverse.h ****         //scalar_2 = sinf((1.0f - fadepos_) * ((float)M_PI * 0.5f));
 172:delayline_reverse.h **** 
 173:delayline_reverse.h ****         //flattenned hann
 174:delayline_reverse.h ****         scalar_1 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*fadepos_)  +   (1.0f/16.0f)*s
 9784              		.loc 19 174 71 is_stmt 0 view .LVU2716
 9785 0350 DFF890A1 		ldr	r10, .L648+164
 9786              	.LBE1992:
 9787              	.LBE1991:
 9788              	.LBE1990:
 9789              	.LBE1989:
 382:Veno-Echo.cpp **** 
 9790              		.loc 20 382 19 view .LVU2717
 9791 0354 FFF7FEFF 		bl	_Z10Update_Modv
 9792              	.LVL606:
 385:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9793              		.loc 20 385 9 is_stmt 1 view .LVU2718
 385:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9794              		.loc 20 385 51 is_stmt 0 view .LVU2719
 9795 0358 4748     		ldr	r0, .L648+56
 9796 035a FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9797              	.LVL607:
 9798 035e 0146     		mov	r1, r0
 9799 0360 4648     		ldr	r0, .L648+60
 9800              	.LBB2044:
 9801              	.LBB2027:
 9802              	.LBB2010:
 9803              	.LBB1993:
 175:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9804              		.loc 19 175 77 view .LVU2720
 9805 0362 F7EE00AA 		vmov.f32	s21, #1.0e+0
 9806              	.LBE1993:
 9807              	.LBE2010:
 9808              	.LBE2027:
 9809              	.LBE2044:
 385:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9810              		.loc 20 385 51 view .LVU2721
 9811 0366 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9812              	.LVL608:
 386:Veno-Echo.cpp ****         
 9813              		.loc 20 386 51 view .LVU2722
 9814 036a 4548     		ldr	r0, .L648+64
 385:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9815              		.loc 20 385 51 view .LVU2723
 9816 036c F0EE40BA 		vmov.f32	s23, s0
 9817              	.LVL609:
 386:Veno-Echo.cpp ****         
 9818              		.loc 20 386 9 is_stmt 1 view .LVU2724
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 314


 386:Veno-Echo.cpp ****         
 9819              		.loc 20 386 51 is_stmt 0 view .LVU2725
 9820 0370 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9821              	.LVL610:
 386:Veno-Echo.cpp ****         
 9822              		.loc 20 386 51 view .LVU2726
 9823 0374 0146     		mov	r1, r0
 9824 0376 4348     		ldr	r0, .L648+68
 9825 0378 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9826              	.LVL611:
 388:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9827              		.loc 20 388 44 view .LVU2727
 9828 037c 4248     		ldr	r0, .L648+72
 386:Veno-Echo.cpp ****         
 9829              		.loc 20 386 51 view .LVU2728
 9830 037e B0EE409A 		vmov.f32	s18, s0
 9831              	.LVL612:
 388:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9832              		.loc 20 388 9 is_stmt 1 view .LVU2729
 388:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9833              		.loc 20 388 44 is_stmt 0 view .LVU2730
 9834 0382 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9835              	.LVL613:
 388:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9836              		.loc 20 388 44 view .LVU2731
 9837 0386 0146     		mov	r1, r0
 9838 0388 4048     		ldr	r0, .L648+76
 9839 038a FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9840              	.LVL614:
 389:Veno-Echo.cpp **** 
 9841              		.loc 20 389 44 view .LVU2732
 9842 038e 4048     		ldr	r0, .L648+80
 388:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9843              		.loc 20 388 44 view .LVU2733
 9844 0390 B0EE408A 		vmov.f32	s16, s0
 9845              	.LVL615:
 389:Veno-Echo.cpp **** 
 9846              		.loc 20 389 9 is_stmt 1 view .LVU2734
 389:Veno-Echo.cpp **** 
 9847              		.loc 20 389 44 is_stmt 0 view .LVU2735
 9848 0394 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9849              	.LVL616:
 389:Veno-Echo.cpp **** 
 9850              		.loc 20 389 44 view .LVU2736
 9851 0398 0146     		mov	r1, r0
 9852 039a 3E48     		ldr	r0, .L648+84
 9853 039c FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9854              	.LVL617:
 9855              	.LBB2045:
 9856              	.LBB2046:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9857              		.loc 10 60 42 view .LVU2737
 9858 03a0 3D48     		ldr	r0, .L648+88
 9859              	.LBE2046:
 9860              	.LBE2045:
 412:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9861              		.loc 20 412 49 view .LVU2738
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 315


 9862 03a2 3E4B     		ldr	r3, .L648+92
 389:Veno-Echo.cpp **** 
 9863              		.loc 20 389 44 view .LVU2739
 9864 03a4 F0EE407A 		vmov.f32	s15, s0
 9865              	.LVL618:
 392:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 9866              		.loc 20 392 9 is_stmt 1 view .LVU2740
 9867              	.LBB2048:
 9868              	.LBI2045:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9869              		.loc 10 60 17 view .LVU2741
 9870              	.LBB2047:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9871              		.loc 10 60 37 view .LVU2742
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9872              		.loc 10 60 42 is_stmt 0 view .LVU2743
 9873 03a8 C0ED00BA 		vstr.32	s23, [r0]
 9874              	.LVL619:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9875              		.loc 10 60 42 view .LVU2744
 9876              	.LBE2047:
 9877              	.LBE2048:
 393:Veno-Echo.cpp ****         
 9878              		.loc 20 393 9 is_stmt 1 view .LVU2745
 9879              	.LBB2049:
 9880              	.LBI2049:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9881              		.loc 10 60 17 view .LVU2746
 9882              	.LBB2050:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9883              		.loc 10 60 37 view .LVU2747
 9884              	.LBE2050:
 9885              	.LBE2049:
 9886              	.LBB2053:
 9887              	.LBB2028:
 9888              	.LBB2011:
 9889              	.LBB1994:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9890              		.loc 19 174 82 is_stmt 0 view .LVU2748
 9891 03ac F6EE028A 		vmov.f32	s17, #5.625e-1
 9892              	.LBE1994:
 9893              	.LBE2011:
 9894              	.LBE2028:
 9895              	.LBE2053:
 9896              	.LBB2054:
 9897              	.LBB2051:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9898              		.loc 10 60 42 view .LVU2749
 9899 03b0 3B48     		ldr	r0, .L648+96
 9900              	.LBE2051:
 9901              	.LBE2054:
 412:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9902              		.loc 20 412 49 view .LVU2750
 9903 03b2 1D68     		ldr	r5, [r3]
 9904              	.LBB2055:
 9905              	.LBB2052:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 316


 9906              		.loc 10 60 42 view .LVU2751
 9907 03b4 80ED009A 		vstr.32	s18, [r0]
 9908              	.LVL620:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9909              		.loc 10 60 42 view .LVU2752
 9910              	.LBE2052:
 9911              	.LBE2055:
 395:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 9912              		.loc 20 395 9 is_stmt 1 view .LVU2753
 9913              	.LBB2056:
 9914              	.LBI2056:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9915              		.loc 10 60 17 view .LVU2754
 9916              	.LBB2057:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9917              		.loc 10 60 37 view .LVU2755
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9918              		.loc 10 60 42 is_stmt 0 view .LVU2756
 9919 03b8 3A48     		ldr	r0, .L648+100
 9920              	.LBE2057:
 9921              	.LBE2056:
 9922              	.LBB2059:
 9923              	.LBB2029:
 9924              	.LBB2012:
 9925              	.LBB1995:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9926              		.loc 19 174 71 view .LVU2757
 9927 03ba 05EB0A03 		add	r3, r5, r10
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9928              		.loc 19 174 46 view .LVU2758
 9929 03be 9FED3AAA 		vldr.32	s20, .L648+104
 9930              	.LBE1995:
 9931              	.LBE2012:
 9932              	.LBE2029:
 9933              	.LBE2059:
 9934              	.LBB2060:
 9935              	.LBB2058:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9936              		.loc 10 60 42 view .LVU2759
 9937 03c2 80ED008A 		vstr.32	s16, [r0]
 9938              	.LVL621:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9939              		.loc 10 60 42 view .LVU2760
 9940              	.LBE2058:
 9941              	.LBE2060:
 396:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 9942              		.loc 20 396 9 is_stmt 1 view .LVU2761
 9943              	.LBB2061:
 9944              	.LBI2061:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9945              		.loc 10 60 17 view .LVU2762
 9946              	.LBB2062:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9947              		.loc 10 60 37 view .LVU2763
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9948              		.loc 10 60 42 is_stmt 0 view .LVU2764
 9949 03c6 3948     		ldr	r0, .L648+108
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 317


 9950              	.LBE2062:
 9951              	.LBE2061:
 9952              	.LBB2064:
 9953              	.LBB2030:
 9954              	.LBB2013:
 9955              	.LBB1996:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9956              		.loc 19 174 71 view .LVU2765
 9957 03c8 93ED00BA 		vldr.32	s22, [r3]
 9958              	.LBE1996:
 9959              	.LBE2013:
 9960              	.LBE2030:
 9961              	.LBE2064:
 9962              	.LBB2065:
 9963              	.LBB2063:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9964              		.loc 10 60 42 view .LVU2766
 9965 03cc 80ED008A 		vstr.32	s16, [r0]
 9966              	.LVL622:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9967              		.loc 10 60 42 view .LVU2767
 9968              	.LBE2063:
 9969              	.LBE2065:
 397:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 9970              		.loc 20 397 9 is_stmt 1 view .LVU2768
 9971              	.LBB2066:
 9972              	.LBI2066:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9973              		.loc 10 60 17 view .LVU2769
 9974              	.LBB2067:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9975              		.loc 10 60 37 view .LVU2770
 9976              	.LBE2067:
 9977              	.LBE2066:
 9978              	.LBB2070:
 9979              	.LBB2071:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9980              		.loc 10 60 42 is_stmt 0 view .LVU2771
 9981 03d0 3748     		ldr	r0, .L648+112
 9982              	.LBE2071:
 9983              	.LBE2070:
 9984              	.LBB2074:
 9985              	.LBB2031:
 9986              	.LBB2014:
 9987              	.LBB1997:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9988              		.loc 19 174 46 view .LVU2772
 9989 03d2 2BEE0A0A 		vmul.f32	s0, s22, s20
 9990              	.LVL623:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9991              		.loc 19 174 71 view .LVU2773
 9992 03d6 0493     		str	r3, [sp, #16]
 9993              		.loc 19 175 77 view .LVU2774
 9994 03d8 3AEECBCA 		vsub.f32	s24, s21, s22
 9995              	.LBE1997:
 9996              	.LBE2014:
 9997              	.LBE2031:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 318


 9998              	.LBE2074:
 9999              	.LBB2075:
 10000              	.LBB2072:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10001              		.loc 10 60 42 view .LVU2775
 10002 03dc 80ED008A 		vstr.32	s16, [r0]
 10003              	.LBE2072:
 10004              	.LBE2075:
 405:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 10005              		.loc 20 405 27 view .LVU2776
 10006 03e0 344B     		ldr	r3, .L648+116
 10007              	.LBB2076:
 10008              	.LBB2077:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10009              		.loc 10 60 42 view .LVU2777
 10010 03e2 3548     		ldr	r0, .L648+120
 10011              	.LBE2077:
 10012              	.LBE2076:
 405:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 10013              		.loc 20 405 27 view .LVU2778
 10014 03e4 1B68     		ldr	r3, [r3]	@ float
 10015              	.LBB2080:
 10016              	.LBB2078:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10017              		.loc 10 60 42 view .LVU2779
 10018 03e6 80ED008A 		vstr.32	s16, [r0]
 10019              	.LBE2078:
 10020              	.LBE2080:
 10021              	.LBB2081:
 10022              	.LBB2068:
 10023 03ea 3448     		ldr	r0, .L648+124
 10024              	.LBE2068:
 10025              	.LBE2081:
 10026              	.LBB2082:
 10027              	.LBB2032:
 10028              	.LBB2015:
 10029              	.LBB1998:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10030              		.loc 19 174 103 view .LVU2780
 10031 03ec DFED349A 		vldr.32	s19, .L648+128
 10032              	.LBE1998:
 10033              	.LBE2015:
 10034              	.LBE2032:
 10035              	.LBE2082:
 10036              	.LBB2083:
 10037              	.LBB2069:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10038              		.loc 10 60 42 view .LVU2781
 10039 03f0 C0ED007A 		vstr.32	s15, [r0]
 10040              	.LVL624:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10041              		.loc 10 60 42 view .LVU2782
 10042              	.LBE2069:
 10043              	.LBE2083:
 398:Veno-Echo.cpp **** 
 10044              		.loc 20 398 9 is_stmt 1 view .LVU2783
 10045              	.LBB2084:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 319


 10046              	.LBI2084:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10047              		.loc 10 60 17 view .LVU2784
 10048              	.LBB2085:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10049              		.loc 10 60 37 view .LVU2785
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10050              		.loc 10 60 42 is_stmt 0 view .LVU2786
 10051 03f4 3348     		ldr	r0, .L648+132
 10052              	.LBE2085:
 10053              	.LBE2084:
 10054              	.LBB2087:
 10055              	.LBB2033:
 10056              	.LBB2016:
 10057              	.LBB1999:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10058              		.loc 19 174 98 view .LVU2787
 10059 03f6 9FED349A 		vldr.32	s18, .L648+136
 10060              	.LVL625:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10061              		.loc 19 174 98 view .LVU2788
 10062              	.LBE1999:
 10063              	.LBE2016:
 10064              	.LBE2033:
 10065              	.LBE2087:
 10066              	.LBB2088:
 10067              	.LBB2086:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10068              		.loc 10 60 42 view .LVU2789
 10069 03fa C0ED007A 		vstr.32	s15, [r0]
 10070              	.LVL626:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10071              		.loc 10 60 42 view .LVU2790
 10072              	.LBE2086:
 10073              	.LBE2088:
 400:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 10074              		.loc 20 400 9 is_stmt 1 view .LVU2791
 10075              	.LBB2089:
 10076              	.LBI2070:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10077              		.loc 10 60 17 view .LVU2792
 10078              	.LBB2073:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10079              		.loc 10 60 37 view .LVU2793
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10080              		.loc 10 60 37 is_stmt 0 view .LVU2794
 10081              	.LBE2073:
 10082              	.LBE2089:
 401:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 10083              		.loc 20 401 9 is_stmt 1 view .LVU2795
 10084              	.LBB2090:
 10085              	.LBI2076:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10086              		.loc 10 60 17 view .LVU2796
 10087              	.LBB2079:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10088              		.loc 10 60 37 view .LVU2797
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 320


  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10089              		.loc 10 60 37 is_stmt 0 view .LVU2798
 10090              	.LBE2079:
 10091              	.LBE2090:
 402:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 10092              		.loc 20 402 9 is_stmt 1 view .LVU2799
 10093              	.LBB2091:
 10094              	.LBI2091:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10095              		.loc 10 60 17 view .LVU2800
 10096              	.LBB2092:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10097              		.loc 10 60 37 view .LVU2801
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10098              		.loc 10 60 42 is_stmt 0 view .LVU2802
 10099 03fe 3348     		ldr	r0, .L648+140
 10100              	.LBE2092:
 10101              	.LBE2091:
 10102              	.LBB2094:
 10103              	.LBB2034:
 10104              	.LBB2017:
 10105              	.LBB2000:
 162:delayline_reverse.h **** 
 10106              		.loc 19 162 23 view .LVU2803
 10107 0400 D5E90267 		ldrd	r6, r7, [r5, #8]
 10108              	.LBE2000:
 10109              	.LBE2017:
 10110              	.LBE2034:
 10111              	.LBE2094:
 10112              	.LBB2095:
 10113              	.LBB2093:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10114              		.loc 10 60 42 view .LVU2804
 10115 0404 C0ED007A 		vstr.32	s15, [r0]
 10116              	.LVL627:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10117              		.loc 10 60 42 view .LVU2805
 10118              	.LBE2093:
 10119              	.LBE2095:
 403:Veno-Echo.cpp **** 
 10120              		.loc 20 403 9 is_stmt 1 view .LVU2806
 10121              	.LBB2096:
 10122              	.LBI2096:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10123              		.loc 10 60 17 view .LVU2807
 10124              	.LBB2097:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10125              		.loc 10 60 37 view .LVU2808
 10126              	.LBE2097:
 10127              	.LBE2096:
 10128              	.LBB2100:
 10129              	.LBB2035:
 10130              	.LBB2018:
 10131              	.LBB2001:
 162:delayline_reverse.h **** 
 10132              		.loc 19 162 11 is_stmt 0 view .LVU2809
 10133 0408 05EB8702 		add	r2, r5, r7, lsl #2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 321


 10134              	.LBE2001:
 10135              	.LBE2018:
 10136              	.LBE2035:
 10137              	.LBE2100:
 10138              	.LBB2101:
 10139              	.LBB2098:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10140              		.loc 10 60 42 view .LVU2810
 10141 040c 3048     		ldr	r0, .L648+144
 10142              	.LBE2098:
 10143              	.LBE2101:
 10144              	.LBB2102:
 10145              	.LBB2036:
 10146              	.LBB2019:
 10147              	.LBB2002:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10148              		.loc 19 161 11 view .LVU2811
 10149 040e 05EB8601 		add	r1, r5, r6, lsl #2
 162:delayline_reverse.h **** 
 10150              		.loc 19 162 11 view .LVU2812
 10151 0412 D2ED06DA 		vldr.32	s27, [r2, #24]
 10152              	.LBE2002:
 10153              	.LBE2019:
 10154              	.LBE2036:
 10155              	.LBE2102:
 10156              	.LBB2103:
 10157              	.LBB2104:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10158              		.loc 10 60 42 view .LVU2813
 10159 0416 2F4A     		ldr	r2, .L648+148
 10160              	.LBE2104:
 10161              	.LBE2103:
 10162              	.LBB2106:
 10163              	.LBB2099:
 10164 0418 C0ED007A 		vstr.32	s15, [r0]
 10165              	.LVL628:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10166              		.loc 10 60 42 view .LVU2814
 10167              	.LBE2099:
 10168              	.LBE2106:
 405:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 10169              		.loc 20 405 9 is_stmt 1 view .LVU2815
 10170              	.LBB2107:
 10171              	.LBI2103:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10172              		.loc 10 60 17 view .LVU2816
 10173              	.LBB2105:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10174              		.loc 10 60 37 view .LVU2817
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10175              		.loc 10 60 42 is_stmt 0 view .LVU2818
 10176 041c 1360     		str	r3, [r2]	@ float
 10177              	.LVL629:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10178              		.loc 10 60 42 view .LVU2819
 10179              	.LBE2105:
 10180              	.LBE2107:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 322


 406:Veno-Echo.cpp **** 
 10181              		.loc 20 406 9 is_stmt 1 view .LVU2820
 10182              	.LBB2108:
 10183              	.LBI2108:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10184              		.loc 10 60 17 view .LVU2821
 10185              	.LBB2109:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10186              		.loc 10 60 37 view .LVU2822
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10187              		.loc 10 60 42 is_stmt 0 view .LVU2823
 10188 041e 2E4A     		ldr	r2, .L648+152
 10189              	.LBE2109:
 10190              	.LBE2108:
 10191              	.LBB2111:
 10192              	.LBB2037:
 10193              	.LBB2020:
 10194              	.LBB2003:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10195              		.loc 19 161 11 view .LVU2824
 10196 0420 91ED06EA 		vldr.32	s28, [r1, #24]
 10197              	.LBE2003:
 10198              	.LBE2020:
 10199              	.LBE2037:
 10200              	.LBE2111:
 10201              	.LBB2112:
 10202              	.LBB2110:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10203              		.loc 10 60 42 view .LVU2825
 10204 0424 1360     		str	r3, [r2]	@ float
 10205              	.LVL630:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10206              		.loc 10 60 42 view .LVU2826
 10207              	.LBE2110:
 10208              	.LBE2112:
 408:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 10209              		.loc 20 408 9 is_stmt 1 view .LVU2827
 10210              	.LBB2113:
 10211              	.LBI2113:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10212              		.loc 10 60 17 view .LVU2828
 10213              	.LBB2114:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10214              		.loc 10 60 37 view .LVU2829
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10215              		.loc 10 60 42 is_stmt 0 view .LVU2830
 10216 0426 2D4A     		ldr	r2, .L648+156
 10217 0428 1360     		str	r3, [r2]	@ float
 10218              	.LVL631:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10219              		.loc 10 60 42 view .LVU2831
 10220              	.LBE2114:
 10221              	.LBE2113:
 409:Veno-Echo.cpp **** 
 10222              		.loc 20 409 9 is_stmt 1 view .LVU2832
 10223              	.LBB2115:
 10224              	.LBI2115:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 323


  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10225              		.loc 10 60 17 view .LVU2833
 10226              	.LBB2116:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10227              		.loc 10 60 37 view .LVU2834
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10228              		.loc 10 60 42 is_stmt 0 view .LVU2835
 10229 042a 2D4A     		ldr	r2, .L648+160
 10230 042c 1360     		str	r3, [r2]	@ float
 10231              	.LVL632:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10232              		.loc 10 60 42 view .LVU2836
 10233              	.LBE2116:
 10234              	.LBE2115:
 412:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 10235              		.loc 20 412 9 is_stmt 1 view .LVU2837
 10236              	.LBB2117:
 10237              	.LBI1989:
  79:Veno-Echo.cpp ****     {
 10238              		.loc 20 79 11 view .LVU2838
 10239              	.LBB2038:
  82:Veno-Echo.cpp ****         return read;
 10240              		.loc 20 82 9 view .LVU2839
 10241              	.LBB2021:
 10242              	.LBI1991:
 159:delayline_reverse.h ****     {
 10243              		.loc 19 159 20 view .LVU2840
 10244              	.LBB2004:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10245              		.loc 19 174 46 is_stmt 0 view .LVU2841
 10246 042e FFF7FEFF 		bl	sinf
 10247              	.LVL633:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10248              		.loc 19 174 46 view .LVU2842
 10249 0432 F0EE40BA 		vmov.f32	s23, s0
 10250              	.LVL634:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10251              		.loc 19 174 103 view .LVU2843
 10252 0436 2BEE290A 		vmul.f32	s0, s22, s19
 10253 043a FFF7FEFF 		bl	sinf
 10254              	.LVL635:
 10255 043e 53E0     		b	.L649
 10256              	.L650:
 10257              		.align	2
 10258              	.L648:
 10259 0440 00000000 		.word	.LANCHOR83
 10260 0444 00000000 		.word	.LANCHOR32
 10261 0448 00000000 		.word	.LANCHOR130
 10262 044c 00000000 		.word	.LANCHOR44
 10263 0450 CDCCCC3E 		.word	1053609165
 10264 0454 00000000 		.word	.LANCHOR131
 10265 0458 00000000 		.word	.LANCHOR72
 10266 045c 00000000 		.word	.LANCHOR108
 10267 0460 00000000 		.word	.LANCHOR0
 10268 0464 00000000 		.word	.LANCHOR109
 10269 0468 00000000 		.word	.LANCHOR1
 10270 046c 00000000 		.word	.LANCHOR65
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 324


 10271 0470 00000000 		.word	.LANCHOR56
 10272 0474 00000000 		.word	.LANCHOR115
 10273 0478 00000000 		.word	.LANCHOR94
 10274 047c 00000000 		.word	.LANCHOR102
 10275 0480 00000000 		.word	.LANCHOR95
 10276 0484 00000000 		.word	.LANCHOR103
 10277 0488 00000000 		.word	.LANCHOR97
 10278 048c 00000000 		.word	.LANCHOR105
 10279 0490 00000000 		.word	.LANCHOR96
 10280 0494 00000000 		.word	.LANCHOR104
 10281 0498 00000000 		.word	.LANCHOR106
 10282 049c 00000000 		.word	.LANCHOR2
 10283 04a0 00000000 		.word	.LANCHOR107
 10284 04a4 00000000 		.word	.LANCHOR118
 10285 04a8 DB0FC93F 		.word	1070141403
 10286 04ac 00000000 		.word	.LANCHOR119
 10287 04b0 00000000 		.word	.LANCHOR122
 10288 04b4 00000000 		.word	.LANCHOR80
 10289 04b8 00000000 		.word	.LANCHOR123
 10290 04bc 00000000 		.word	.LANCHOR120
 10291 04c0 E4CB9640 		.word	1083624420
 10292 04c4 00000000 		.word	.LANCHOR121
 10293 04c8 0000803D 		.word	1031798784
 10294 04cc 00000000 		.word	.LANCHOR124
 10295 04d0 00000000 		.word	.LANCHOR125
 10296 04d4 00000000 		.word	.LANCHOR126
 10297 04d8 00000000 		.word	.LANCHOR127
 10298 04dc 00000000 		.word	.LANCHOR128
 10299 04e0 00000000 		.word	.LANCHOR129
 10300 04e4 209F2400 		.word	2400032
 10301              	.L649:
 10302 04e8 B0EE408A 		vmov.f32	s16, s0
 10303              	.LVL636:
 10304              		.loc 19 175 46 view .LVU2844
 10305 04ec 2CEE0A0A 		vmul.f32	s0, s24, s20
 10306 04f0 FFF7FEFF 		bl	sinf
 10307              	.LVL637:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10308              		.loc 19 174 98 view .LVU2845
 10309 04f4 28EE098A 		vmul.f32	s16, s16, s18
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10310              		.loc 19 174 82 view .LVU2846
 10311 04f8 ABEEA88A 		vfma.f32	s16, s23, s17
 10312              	.LVL638:
 10313              		.loc 19 175 46 view .LVU2847
 10314 04fc F0EE40BA 		vmov.f32	s23, s0
 10315              		.loc 19 175 112 view .LVU2848
 10316 0500 2CEE290A 		vmul.f32	s0, s24, s19
 10317 0504 FFF7FEFF 		bl	sinf
 10318              	.LVL639:
 10319              		.loc 19 175 107 view .LVU2849
 10320 0508 60EE097A 		vmul.f32	s15, s0, s18
 10321              	.LBE2004:
 10322              	.LBE2021:
 10323              	.LBE2038:
 10324              	.LBE2117:
 413:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 325


 10325              		.loc 20 413 49 view .LVU2850
 10326 050c C94B     		ldr	r3, .L651
 10327              	.LBB2118:
 10328              	.LBB2039:
 10329              	.LBB2022:
 10330              	.LBB2005:
 10331              		.loc 19 175 91 view .LVU2851
 10332 050e EBEEA87A 		vfma.f32	s15, s23, s17
 10333              	.LVL640:
 10334              		.loc 19 175 91 view .LVU2852
 10335              	.LBE2005:
 10336              	.LBE2022:
 10337              	.LBE2039:
 10338              	.LBE2118:
 413:Veno-Echo.cpp **** 
 10339              		.loc 20 413 49 view .LVU2853
 10340 0512 1C68     		ldr	r4, [r3]
 10341              	.LBB2119:
 10342              	.LBB2040:
 10343              	.LBB2023:
 10344              	.LBB2006:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10345              		.loc 19 174 9 view .LVU2854
 10346 0514 38EE088A 		vadd.f32	s16, s16, s16
 10347              	.LVL641:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10348              		.loc 19 174 9 view .LVU2855
 10349              	.LBE2006:
 10350              	.LBE2023:
 10351              	.LBE2040:
 10352              	.LBE2119:
 10353              	.LBB2120:
 10354              	.LBB2121:
 10355              	.LBB2122:
 10356              	.LBB2123:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10357              		.loc 19 174 71 view .LVU2856
 10358 0518 04EB0A01 		add	r1, r4, r10
 162:delayline_reverse.h **** 
 10359              		.loc 19 162 11 view .LVU2857
 10360 051c D4E90223 		ldrd	r2, r3, [r4, #8]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10361              		.loc 19 174 71 view .LVU2858
 10362 0520 91ED00CA 		vldr.32	s24, [r1]
 10363              	.LBE2123:
 10364              	.LBE2122:
 10365              	.LBE2121:
 10366              	.LBE2120:
 10367              	.LBB2154:
 10368              	.LBB2041:
 10369              	.LBB2024:
 10370              	.LBB2007:
 10371              		.loc 19 175 9 view .LVU2859
 10372 0524 77EEA77A 		vadd.f32	s15, s15, s15
 10373              	.LVL642:
 10374              		.loc 19 175 9 view .LVU2860
 10375              	.LBE2007:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 326


 10376              	.LBE2024:
 10377              	.LBE2041:
 10378              	.LBE2154:
 10379              	.LBB2155:
 10380              	.LBB2144:
 10381              	.LBB2134:
 10382              	.LBB2124:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10383              		.loc 19 161 11 view .LVU2861
 10384 0528 04EB8202 		add	r2, r4, r2, lsl #2
 162:delayline_reverse.h **** 
 10385              		.loc 19 162 11 view .LVU2862
 10386 052c 04EB8303 		add	r3, r4, r3, lsl #2
 10387              		.loc 19 175 77 view .LVU2863
 10388 0530 7AEECCAA 		vsub.f32	s21, s21, s24
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10389              		.loc 19 174 46 view .LVU2864
 10390 0534 2CEE0A0A 		vmul.f32	s0, s24, s20
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10391              		.loc 19 161 11 view .LVU2865
 10392 0538 92ED06DA 		vldr.32	s26, [r2, #24]
 10393              	.LBE2124:
 10394              	.LBE2134:
 10395              	.LBE2144:
 10396              	.LBE2155:
 10397              	.LBB2156:
 10398              	.LBB2042:
 10399              	.LBB2025:
 10400              	.LBB2008:
 176:delayline_reverse.h **** 
 177:delayline_reverse.h ****         return (read2 * scalar_1) + (read1 * scalar_2); 
 10401              		.loc 19 177 44 view .LVU2866
 10402 053c 67EE8E7A 		vmul.f32	s15, s15, s28
 10403              	.LVL643:
 10404              		.loc 19 177 44 view .LVU2867
 10405              	.LBE2008:
 10406              	.LBE2025:
 10407              	.LBE2042:
 10408              	.LBE2156:
 10409              	.LBB2157:
 10410              	.LBB2145:
 10411              	.LBB2135:
 10412              	.LBB2125:
 162:delayline_reverse.h **** 
 10413              		.loc 19 162 11 view .LVU2868
 10414 0540 D3ED06CA 		vldr.32	s25, [r3, #24]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10415              		.loc 19 174 71 view .LVU2869
 10416 0544 0391     		str	r1, [sp, #12]
 10417              	.LBE2125:
 10418              	.LBE2135:
 10419              	.LBE2145:
 10420              	.LBE2157:
 10421              	.LBB2158:
 10422              	.LBB2043:
 10423              	.LBB2026:
 10424              	.LBB2009:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 327


 10425              		.loc 19 177 54 view .LVU2870
 10426 0546 EDEE887A 		vfma.f32	s15, s27, s16
 10427              	.LVL644:
 10428              		.loc 19 177 54 view .LVU2871
 10429              	.LBE2009:
 10430              	.LBE2026:
  83:Veno-Echo.cpp ****     }
 10431              		.loc 20 83 9 is_stmt 1 view .LVU2872
  83:Veno-Echo.cpp ****     }
 10432              		.loc 20 83 9 is_stmt 0 view .LVU2873
 10433              	.LBE2043:
 10434              	.LBE2158:
 412:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 10435              		.loc 20 412 50 view .LVU2874
 10436 054a CDED067A 		vstr.32	s15, [sp, #24]
 413:Veno-Echo.cpp **** 
 10437              		.loc 20 413 9 is_stmt 1 view .LVU2875
 10438              	.LVL645:
 10439              	.LBB2159:
 10440              	.LBI2120:
  79:Veno-Echo.cpp ****     {
 10441              		.loc 20 79 11 view .LVU2876
 10442              	.LBB2146:
  82:Veno-Echo.cpp ****         return read;
 10443              		.loc 20 82 9 view .LVU2877
 10444              	.LBB2136:
 10445              	.LBI2122:
 159:delayline_reverse.h ****     {
 10446              		.loc 19 159 20 view .LVU2878
 10447              	.LBB2126:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10448              		.loc 19 174 46 is_stmt 0 view .LVU2879
 10449 054e FFF7FEFF 		bl	sinf
 10450              	.LVL646:
 10451 0552 F0EE40BA 		vmov.f32	s23, s0
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10452              		.loc 19 174 103 view .LVU2880
 10453 0556 2CEE290A 		vmul.f32	s0, s24, s19
 10454 055a FFF7FEFF 		bl	sinf
 10455              	.LVL647:
 10456 055e B0EE408A 		vmov.f32	s16, s0
 175:delayline_reverse.h **** 
 10457              		.loc 19 175 46 view .LVU2881
 10458 0562 2AEE8A0A 		vmul.f32	s0, s21, s20
 10459 0566 FFF7FEFF 		bl	sinf
 10460              	.LVL648:
 10461 056a F0EE407A 		vmov.f32	s15, s0
 175:delayline_reverse.h **** 
 10462              		.loc 19 175 112 view .LVU2882
 10463 056e 2AEEA90A 		vmul.f32	s0, s21, s19
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10464              		.loc 19 174 98 view .LVU2883
 10465 0572 28EE098A 		vmul.f32	s16, s16, s18
 175:delayline_reverse.h **** 
 10466              		.loc 19 175 46 view .LVU2884
 10467 0576 F0EE679A 		vmov.f32	s19, s15
 175:delayline_reverse.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 328


 10468              		.loc 19 175 112 view .LVU2885
 10469 057a FFF7FEFF 		bl	sinf
 10470              	.LVL649:
 10471              	.LBE2126:
 10472              	.LBE2136:
 10473              	.LBE2146:
 10474              	.LBE2159:
 10475              	.LBB2160:
 10476              	.LBB2161:
 10477              	.LBB2162:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10478              		.loc 19 98 38 view .LVU2886
 10479 057e AE48     		ldr	r0, .L651+4
 10480              	.LBE2162:
 10481              	.LBE2161:
 10482              	.LBE2160:
 10483              	.LBB2185:
 10484              	.LBB2147:
 10485              	.LBB2137:
 10486              	.LBB2127:
 175:delayline_reverse.h **** 
 10487              		.loc 19 175 107 view .LVU2887
 10488 0580 60EE097A 		vmul.f32	s15, s0, s18
 10489              	.LBE2127:
 10490              	.LBE2137:
 10491              	.LBE2147:
 10492              	.LBE2185:
 10493              	.LBB2186:
 10494              	.LBB2174:
 10495              	.LBB2163:
  92:delayline_reverse.h ****         
 10496              		.loc 19 92 57 view .LVU2888
 10497 0584 AD4B     		ldr	r3, .L651+8
 10498              	.LBE2163:
 10499              	.LBE2174:
 10500              	.LBE2186:
 10501              	.LBB2187:
 10502              	.LBB2148:
 10503              	.LBB2138:
 10504              	.LBB2128:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10505              		.loc 19 174 82 view .LVU2889
 10506 0586 ABEEA88A 		vfma.f32	s16, s23, s17
 10507              	.LVL650:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10508              		.loc 19 174 82 view .LVU2890
 10509              	.LBE2128:
 10510              	.LBE2138:
 10511              	.LBE2148:
 10512              	.LBE2187:
 10513              	.LBB2188:
 10514              	.LBB2175:
 10515              	.LBB2164:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10516              		.loc 19 98 38 view .LVU2891
 10517 058a 0644     		add	r6, r6, r0
  90:delayline_reverse.h ****         //advance write ptr in forward direction
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 329


 10518              		.loc 19 90 15 view .LVU2892
 10519 058c D5F804E0 		ldr	lr, [r5, #4]
 10520              	.LBE2164:
 10521              	.LBE2175:
 10522              	.LBE2188:
 10523              	.LBB2189:
 10524              	.LBB2149:
 10525              	.LBB2139:
 10526              	.LBB2129:
 175:delayline_reverse.h **** 
 10527              		.loc 19 175 91 view .LVU2893
 10528 0590 E9EEA87A 		vfma.f32	s15, s19, s17
 10529              	.LVL651:
 175:delayline_reverse.h **** 
 10530              		.loc 19 175 91 view .LVU2894
 10531              	.LBE2129:
 10532              	.LBE2139:
 10533              	.LBE2149:
 10534              	.LBE2189:
 10535              	.LBB2190:
 10536              	.LBB2176:
 10537              	.LBB2165:
  99:delayline_reverse.h ****  
 10538              		.loc 19 99 38 view .LVU2895
 10539 0594 3844     		add	r0, r0, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10540              		.loc 19 98 50 view .LVU2896
 10541 0596 A3FB06C1 		umull	ip, r1, r3, r6
  92:delayline_reverse.h ****         
 10542              		.loc 19 92 57 view .LVU2897
 10543 059a DFF8C4C2 		ldr	ip, .L651+44
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10544              		.loc 19 90 9 view .LVU2898
 10545 059e 05EB8E0A 		add	r10, r5, lr, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10546              		.loc 19 98 50 view .LVU2899
 10547 05a2 890C     		lsrs	r1, r1, #18
 10548              	.LBE2165:
 10549              	.LBE2176:
 10550              	.LBE2190:
 10551              	.LBB2191:
 10552              	.LBB2150:
 10553              	.LBB2140:
 10554              	.LBB2130:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10555              		.loc 19 174 9 view .LVU2900
 10556 05a4 38EE088A 		vadd.f32	s16, s16, s16
 10557              	.LVL652:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10558              		.loc 19 174 9 view .LVU2901
 10559              	.LBE2130:
 10560              	.LBE2140:
 10561              	.LBE2150:
 10562              	.LBE2191:
 10563              	.LBB2192:
 10564              	.LBB2177:
 10565              	.LBB2166:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 330


  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10566              		.loc 19 98 50 view .LVU2902
 10567 05a8 0CFB1161 		mls	r1, ip, r1, r6
  92:delayline_reverse.h ****         
 10568              		.loc 19 92 45 view .LVU2903
 10569 05ac A44E     		ldr	r6, .L651+12
 10570              	.LBE2166:
 10571              	.LBE2177:
 10572              	.LBE2192:
 10573              	.LBB2193:
 10574              	.LBB2151:
 10575              	.LBB2141:
 10576              	.LBB2131:
 175:delayline_reverse.h **** 
 10577              		.loc 19 175 9 view .LVU2904
 10578 05ae 37EEA70A 		vadd.f32	s0, s15, s15
 10579              	.LVL653:
 175:delayline_reverse.h **** 
 10580              		.loc 19 175 9 view .LVU2905
 10581              	.LBE2131:
 10582              	.LBE2141:
 10583              	.LBE2151:
 10584              	.LBE2193:
 416:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 10585              		.loc 20 416 26 view .LVU2906
 10586 05b2 DBED007A 		vldr.32	s15, [fp]
 10587              	.LBB2194:
 10588              	.LBB2178:
 10589              	.LBB2167:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10590              		.loc 19 98 50 view .LVU2907
 10591 05b6 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 10592              		.loc 19 92 45 view .LVU2908
 10593 05b8 7644     		add	r6, r6, lr
  99:delayline_reverse.h ****  
 10594              		.loc 19 99 50 view .LVU2909
 10595 05ba A3FB001E 		umull	r1, lr, r3, r0
  92:delayline_reverse.h ****         
 10596              		.loc 19 92 57 view .LVU2910
 10597 05be A3FB0613 		umull	r1, r3, r3, r6
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10598              		.loc 19 98 9 view .LVU2911
 10599 05c2 0199     		ldr	r1, [sp, #4]
  99:delayline_reverse.h ****  
 10600              		.loc 19 99 50 view .LVU2912
 10601 05c4 4FEA9E4E 		lsr	lr, lr, #18
 10602              	.LBE2167:
 10603              	.LBE2178:
 10604              	.LBE2194:
 10605              	.LBB2195:
 10606              	.LBB2152:
 10607              	.LBB2142:
 10608              	.LBB2132:
 10609              		.loc 19 177 44 view .LVU2913
 10610 05c8 20EE0D0A 		vmul.f32	s0, s0, s26
 10611              	.LVL654:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 331


 10612              		.loc 19 177 44 view .LVU2914
 10613              	.LBE2132:
 10614              	.LBE2142:
 10615              	.LBE2152:
 10616              	.LBE2195:
 10617              	.LBB2196:
 10618              	.LBB2179:
 10619              	.LBB2168:
  92:delayline_reverse.h ****         
 10620              		.loc 19 92 57 view .LVU2915
 10621 05cc 9B0C     		lsrs	r3, r3, #18
  99:delayline_reverse.h ****  
 10622              		.loc 19 99 50 view .LVU2916
 10623 05ce 0CFB1E00 		mls	r0, ip, lr, r0
 10624              	.LBE2168:
 10625              	.LBE2179:
 10626              	.LBE2196:
 10627              	.LBB2197:
 10628              	.LBB2153:
 10629              	.LBB2143:
 10630              	.LBB2133:
 10631              		.loc 19 177 54 view .LVU2917
 10632 05d2 ACEE880A 		vfma.f32	s0, s25, s16
 10633              	.LVL655:
 10634              		.loc 19 177 54 view .LVU2918
 10635              	.LBE2133:
 10636              	.LBE2143:
  83:Veno-Echo.cpp ****     }
 10637              		.loc 20 83 9 is_stmt 1 view .LVU2919
  83:Veno-Echo.cpp ****     }
 10638              		.loc 20 83 9 is_stmt 0 view .LVU2920
 10639              	.LBE2153:
 10640              	.LBE2197:
 10641              	.LBB2198:
 10642              	.LBB2180:
 10643              	.LBB2169:
  92:delayline_reverse.h ****         
 10644              		.loc 19 92 57 view .LVU2921
 10645 05d6 0CFB1363 		mls	r3, ip, r3, r6
  95:delayline_reverse.h **** 
 10646              		.loc 19 95 43 view .LVU2922
 10647 05da D5E90472 		ldrd	r7, r2, [r5, #16]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10648              		.loc 19 90 9 view .LVU2923
 10649 05de CAED067A 		vstr.32	s15, [r10, #24]
  95:delayline_reverse.h **** 
 10650              		.loc 19 95 43 view .LVU2924
 10651 05e2 3A44     		add	r2, r2, r7
 101:delayline_reverse.h ****         {
 10652              		.loc 19 101 36 view .LVU2925
 10653 05e4 DFF864A2 		ldr	r10, .L651+24
  95:delayline_reverse.h **** 
 10654              		.loc 19 95 43 view .LVU2926
 10655 05e8 0132     		adds	r2, r2, #1
 101:delayline_reverse.h ****         {
 10656              		.loc 19 101 36 view .LVU2927
 10657 05ea 55F80AE0 		ldr	lr, [r5, r10]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 332


 101:delayline_reverse.h ****         {
 10658              		.loc 19 101 45 view .LVU2928
 10659 05ee 07F1FF3A 		add	r10, r7, #-1
 10660              	.LBE2169:
 10661              	.LBE2180:
 10662              	.LBE2198:
 413:Veno-Echo.cpp **** 
 10663              		.loc 20 413 50 view .LVU2929
 10664 05f2 8DED070A 		vstr.32	s0, [sp, #28]
 416:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 10665              		.loc 20 416 9 is_stmt 1 view .LVU2930
 10666              	.LVL656:
 10667              	.LBB2199:
 10668              	.LBI2160:
  92:Veno-Echo.cpp ****     {
 10669              		.loc 20 92 10 view .LVU2931
  92:Veno-Echo.cpp ****     {
 10670              		.loc 20 92 10 is_stmt 0 view .LVU2932
 10671              	.LBE2199:
 10672              	.LBE2249:
 10673              	.LBE1869:
  94:Veno-Echo.cpp ****     }
 10674              		.loc 20 94 9 is_stmt 1 view .LVU2933
 10675              	.LBB2261:
 10676              	.LBB2250:
 10677              	.LBB2200:
 10678              	.LBB2181:
 10679              	.LBI2161:
  88:delayline_reverse.h ****     {
 10680              		.loc 19 88 17 view .LVU2934
 10681              	.LBB2170:
  99:delayline_reverse.h ****  
 10682              		.loc 19 99 9 is_stmt 0 view .LVU2935
 10683 05f6 C5E90210 		strd	r1, r0, [r5, #8]
  95:delayline_reverse.h **** 
 10684              		.loc 19 95 54 view .LVU2936
 10685 05fa B2FBF7F1 		udiv	r1, r2, r7
 101:delayline_reverse.h ****         {
 10686              		.loc 19 101 45 view .LVU2937
 10687 05fe AAEB0E0A 		sub	r10, r10, lr
  95:delayline_reverse.h **** 
 10688              		.loc 19 95 54 view .LVU2938
 10689 0602 07FB1122 		mls	r2, r7, r1, r2
  92:delayline_reverse.h ****         
 10690              		.loc 19 92 9 view .LVU2939
 10691 0606 6B60     		str	r3, [r5, #4]
 101:delayline_reverse.h ****         {
 10692              		.loc 19 101 9 view .LVU2940
 10693 0608 5245     		cmp	r2, r10
  95:delayline_reverse.h **** 
 10694              		.loc 19 95 9 view .LVU2941
 10695 060a 6A61     		str	r2, [r5, #20]
 101:delayline_reverse.h ****         {
 10696              		.loc 19 101 9 view .LVU2942
 10697 060c 40F2DA80 		bls	.L524
 103:delayline_reverse.h ****             {
 10698              		.loc 19 103 17 view .LVU2943
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 333


 10699 0610 8C49     		ldr	r1, .L651+16
 103:delayline_reverse.h ****             {
 10700              		.loc 19 103 13 view .LVU2944
 10701 0612 685C     		ldrb	r0, [r5, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 10702              		.loc 19 103 17 view .LVU2945
 10703 0614 6A18     		adds	r2, r5, r1
 103:delayline_reverse.h ****             {
 10704              		.loc 19 103 13 view .LVU2946
 10705 0616 0028     		cmp	r0, #0
 10706 0618 40F0DA80 		bne	.L639
 107:delayline_reverse.h ****                 {
 10707              		.loc 19 107 21 view .LVU2947
 10708 061c 8A48     		ldr	r0, .L651+20
 105:delayline_reverse.h ****                 
 10709              		.loc 19 105 17 view .LVU2948
 10710 061e 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 10711              		.loc 19 110 45 view .LVU2949
 10712 0620 013B     		subs	r3, r3, #1
 107:delayline_reverse.h ****                 {
 10713              		.loc 19 107 17 view .LVU2950
 10714 0622 2E5C     		ldrb	r6, [r5, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 10715              		.loc 19 107 21 view .LVU2951
 10716 0624 2844     		add	r0, r0, r5
 105:delayline_reverse.h ****                 
 10717              		.loc 19 105 17 view .LVU2952
 10718 0626 6F54     		strb	r7, [r5, r1]
 107:delayline_reverse.h ****                 {
 10719              		.loc 19 107 17 view .LVU2953
 10720 0628 002E     		cmp	r6, #0
 10721 062a 40F07782 		bne	.L526
 110:delayline_reverse.h ****                 }
 10722              		.loc 19 110 21 view .LVU2954
 10723 062e EB60     		str	r3, [r5, #12]
 10724              	.L527:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10725              		.loc 19 130 45 view .LVU2955
 10726 0630 07EE90EA 		vmov	s15, lr	@ int
 10727              	.LVL657:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10728              		.loc 19 130 45 view .LVU2956
 10729 0634 B7EE007A 		vmov.f32	s14, #1.0e+0
 10730 0638 F8EE676A 		vcvt.f32.u32	s13, s15
 10731 063c C7EE267A 		vdiv.f32	s15, s14, s13
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10732              		.loc 19 130 37 view .LVU2957
 10733 0640 37EE8BBA 		vadd.f32	s22, s15, s22
 131:delayline_reverse.h ****                 {
 10734              		.loc 19 131 17 view .LVU2958
 10735 0644 B4EEC7BA 		vcmpe.f32	s22, s14
 10736 0648 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10737 064c 40F3D780 		ble	.L640
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10738              		.loc 19 133 21 view .LVU2959
 10739 0650 049B     		ldr	r3, [sp, #16]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 334


 134:delayline_reverse.h ****                     playinghead_ = true;
 10740              		.loc 19 134 21 view .LVU2960
 10741 0652 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10742              		.loc 19 133 21 view .LVU2961
 10743 0654 83ED007A 		vstr.32	s14, [r3]
 135:delayline_reverse.h ****                 }
 10744              		.loc 19 135 21 view .LVU2962
 10745 0658 0123     		movs	r3, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 10746              		.loc 19 134 21 view .LVU2963
 10747 065a 1170     		strb	r1, [r2]
 135:delayline_reverse.h ****                 }
 10748              		.loc 19 135 21 view .LVU2964
 10749 065c 0370     		strb	r3, [r0]
 10750              	.LVL658:
 10751              	.L530:
 135:delayline_reverse.h ****                 }
 10752              		.loc 19 135 21 view .LVU2965
 10753              	.LBE2170:
 10754              	.LBE2181:
 10755              	.LBE2200:
 417:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 10756              		.loc 20 417 9 is_stmt 1 view .LVU2966
 10757              	.LBB2201:
 10758              	.LBB2202:
 10759              	.LBB2203:
  95:delayline_reverse.h **** 
 10760              		.loc 19 95 45 is_stmt 0 view .LVU2967
 10761 065e 2169     		ldr	r1, [r4, #16]
 10762 0660 0BF10403 		add	r3, fp, #4
  95:delayline_reverse.h **** 
 10763              		.loc 19 95 43 view .LVU2968
 10764 0664 6069     		ldr	r0, [r4, #20]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10765              		.loc 19 90 15 view .LVU2969
 10766 0666 6568     		ldr	r5, [r4, #4]
 10767 0668 08EE103A 		vmov	s16, r3	@ int
  95:delayline_reverse.h **** 
 10768              		.loc 19 95 43 view .LVU2970
 10769 066c 0844     		add	r0, r0, r1
  92:delayline_reverse.h ****         
 10770              		.loc 19 92 45 view .LVU2971
 10771 066e 744F     		ldr	r7, .L651+12
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10772              		.loc 19 90 9 view .LVU2972
 10773 0670 04EB850E 		add	lr, r4, r5, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10774              		.loc 19 98 38 view .LVU2973
 10775 0674 704B     		ldr	r3, .L651+4
  95:delayline_reverse.h **** 
 10776              		.loc 19 95 43 view .LVU2974
 10777 0676 421C     		adds	r2, r0, #1
  92:delayline_reverse.h ****         
 10778              		.loc 19 92 45 view .LVU2975
 10779 0678 2F44     		add	r7, r7, r5
 101:delayline_reverse.h ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 335


 10780              		.loc 19 101 45 view .LVU2976
 10781 067a 01F1FF3C 		add	ip, r1, #-1
 10782              	.LBE2203:
 10783              	.LBE2202:
 10784              	.LBE2201:
 417:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 10785              		.loc 20 417 26 view .LVU2977
 10786 067e DBED017A 		vldr.32	s15, [fp, #4]
 10787              	.LVL659:
 10788              	.LBB2214:
 10789              	.LBI2201:
  92:Veno-Echo.cpp ****     {
 10790              		.loc 20 92 10 is_stmt 1 view .LVU2978
  92:Veno-Echo.cpp ****     {
 10791              		.loc 20 92 10 is_stmt 0 view .LVU2979
 10792              	.LBE2214:
 10793              	.LBE2250:
 10794              	.LBE2261:
  94:Veno-Echo.cpp ****     }
 10795              		.loc 20 94 9 is_stmt 1 view .LVU2980
 10796              	.LBB2262:
 10797              	.LBB2251:
 10798              	.LBB2215:
 10799              	.LBB2209:
 10800              	.LBI2202:
  88:delayline_reverse.h ****     {
 10801              		.loc 19 88 17 view .LVU2981
 10802              	.LBB2204:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10803              		.loc 19 98 38 is_stmt 0 view .LVU2982
 10804 0682 D4E90205 		ldrd	r0, r5, [r4, #8]
 10805 0686 00EB030A 		add	r10, r0, r3
  99:delayline_reverse.h ****  
 10806              		.loc 19 99 38 view .LVU2983
 10807 068a 1D44     		add	r5, r5, r3
  92:delayline_reverse.h ****         
 10808              		.loc 19 92 57 view .LVU2984
 10809 068c 03F1E043 		add	r3, r3, #1879048192
  95:delayline_reverse.h **** 
 10810              		.loc 19 95 54 view .LVU2985
 10811 0690 B2FBF1F0 		udiv	r0, r2, r1
 10812 0694 01FB1020 		mls	r0, r1, r0, r2
 101:delayline_reverse.h ****         {
 10813              		.loc 19 101 36 view .LVU2986
 10814 0698 6C49     		ldr	r1, .L651+24
  92:delayline_reverse.h ****         
 10815              		.loc 19 92 57 view .LVU2987
 10816 069a A3F54013 		sub	r3, r3, #3145728
 101:delayline_reverse.h ****         {
 10817              		.loc 19 101 36 view .LVU2988
 10818 069e 6158     		ldr	r1, [r4, r1]
  92:delayline_reverse.h ****         
 10819              		.loc 19 92 57 view .LVU2989
 10820 06a0 A3F63A23 		subw	r3, r3, #2618
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10821              		.loc 19 90 9 view .LVU2990
 10822 06a4 CEED067A 		vstr.32	s15, [lr, #24]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 336


 101:delayline_reverse.h ****         {
 10823              		.loc 19 101 36 view .LVU2991
 10824 06a8 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 10825              		.loc 19 92 57 view .LVU2992
 10826 06aa A3FB0762 		umull	r6, r2, r3, r7
 10827 06ae DFF8B0E1 		ldr	lr, .L651+44
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10828              		.loc 19 98 50 view .LVU2993
 10829 06b2 A3FB0A61 		umull	r6, r1, r3, r10
  99:delayline_reverse.h ****  
 10830              		.loc 19 99 50 view .LVU2994
 10831 06b6 A3FB0563 		umull	r6, r3, r3, r5
 101:delayline_reverse.h ****         {
 10832              		.loc 19 101 45 view .LVU2995
 10833 06ba 019E     		ldr	r6, [sp, #4]
  92:delayline_reverse.h ****         
 10834              		.loc 19 92 57 view .LVU2996
 10835 06bc 920C     		lsrs	r2, r2, #18
  95:delayline_reverse.h **** 
 10836              		.loc 19 95 9 view .LVU2997
 10837 06be 6061     		str	r0, [r4, #20]
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10838              		.loc 19 98 50 view .LVU2998
 10839 06c0 890C     		lsrs	r1, r1, #18
 101:delayline_reverse.h ****         {
 10840              		.loc 19 101 45 view .LVU2999
 10841 06c2 ACEB060C 		sub	ip, ip, r6
  99:delayline_reverse.h ****  
 10842              		.loc 19 99 50 view .LVU3000
 10843 06c6 9B0C     		lsrs	r3, r3, #18
  92:delayline_reverse.h ****         
 10844              		.loc 19 92 57 view .LVU3001
 10845 06c8 0EFB1272 		mls	r2, lr, r2, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10846              		.loc 19 98 50 view .LVU3002
 10847 06cc 0EFB11A1 		mls	r1, lr, r1, r10
 101:delayline_reverse.h ****         {
 10848              		.loc 19 101 9 view .LVU3003
 10849 06d0 6045     		cmp	r0, ip
  99:delayline_reverse.h ****  
 10850              		.loc 19 99 50 view .LVU3004
 10851 06d2 0EFB1353 		mls	r3, lr, r3, r5
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10852              		.loc 19 98 9 view .LVU3005
 10853 06d6 C4E90121 		strd	r2, r1, [r4, #4]
  99:delayline_reverse.h ****  
 10854              		.loc 19 99 9 view .LVU3006
 10855 06da E360     		str	r3, [r4, #12]
 101:delayline_reverse.h ****         {
 10856              		.loc 19 101 9 view .LVU3007
 10857 06dc 51D9     		bls	.L534
 103:delayline_reverse.h ****             {
 10858              		.loc 19 103 17 view .LVU3008
 10859 06de 5949     		ldr	r1, .L651+16
 103:delayline_reverse.h ****             {
 10860              		.loc 19 103 13 view .LVU3009
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 337


 10861 06e0 605C     		ldrb	r0, [r4, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 10862              		.loc 19 103 17 view .LVU3010
 10863 06e2 6318     		adds	r3, r4, r1
 103:delayline_reverse.h ****             {
 10864              		.loc 19 103 13 view .LVU3011
 10865 06e4 0028     		cmp	r0, #0
 10866 06e6 51D1     		bne	.L641
 107:delayline_reverse.h ****                 {
 10867              		.loc 19 107 21 view .LVU3012
 10868 06e8 5748     		ldr	r0, .L651+20
 105:delayline_reverse.h ****                 
 10869              		.loc 19 105 17 view .LVU3013
 10870 06ea 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 10871              		.loc 19 110 45 view .LVU3014
 10872 06ec 013A     		subs	r2, r2, #1
 107:delayline_reverse.h ****                 {
 10873              		.loc 19 107 17 view .LVU3015
 10874 06ee 255C     		ldrb	r5, [r4, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 10875              		.loc 19 107 21 view .LVU3016
 10876 06f0 2044     		add	r0, r0, r4
 105:delayline_reverse.h ****                 
 10877              		.loc 19 105 17 view .LVU3017
 10878 06f2 6754     		strb	r7, [r4, r1]
 107:delayline_reverse.h ****                 {
 10879              		.loc 19 107 17 view .LVU3018
 10880 06f4 002D     		cmp	r5, #0
 10881 06f6 40F01382 		bne	.L536
 110:delayline_reverse.h ****                 }
 10882              		.loc 19 110 21 view .LVU3019
 10883 06fa E260     		str	r2, [r4, #12]
 10884              	.L537:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10885              		.loc 19 130 45 view .LVU3020
 10886 06fc DDED017A 		vldr.32	s15, [sp, #4]	@ int
 10887              	.LVL660:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10888              		.loc 19 130 45 view .LVU3021
 10889 0700 B7EE007A 		vmov.f32	s14, #1.0e+0
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10890              		.loc 19 130 37 view .LVU3022
 10891 0704 039A     		ldr	r2, [sp, #12]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10892              		.loc 19 130 45 view .LVU3023
 10893 0706 B8EE676A 		vcvt.f32.u32	s12, s15
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10894              		.loc 19 130 37 view .LVU3024
 10895 070a D2ED006A 		vldr.32	s13, [r2]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10896              		.loc 19 130 45 view .LVU3025
 10897 070e C7EE067A 		vdiv.f32	s15, s14, s12
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10898              		.loc 19 130 37 view .LVU3026
 10899 0712 77EEA67A 		vadd.f32	s15, s15, s13
 131:delayline_reverse.h ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 338


 10900              		.loc 19 131 17 view .LVU3027
 10901 0716 F4EEC77A 		vcmpe.f32	s15, s14
 10902 071a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10903 071e 40F31282 		ble	.L644
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10904              		.loc 19 133 21 view .LVU3028
 10905 0722 039A     		ldr	r2, [sp, #12]
 134:delayline_reverse.h ****                     playinghead_ = true;
 10906              		.loc 19 134 21 view .LVU3029
 10907 0724 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10908              		.loc 19 133 21 view .LVU3030
 10909 0726 82ED007A 		vstr.32	s14, [r2]
 135:delayline_reverse.h ****                 }
 10910              		.loc 19 135 21 view .LVU3031
 10911 072a 0122     		movs	r2, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 10912              		.loc 19 134 21 view .LVU3032
 10913 072c 1970     		strb	r1, [r3]
 135:delayline_reverse.h ****                 }
 10914              		.loc 19 135 21 view .LVU3033
 10915 072e 0270     		strb	r2, [r0]
 10916              	.LVL661:
 10917              	.L540:
 135:delayline_reverse.h ****                 }
 10918              		.loc 19 135 21 view .LVU3034
 10919              	.LBE2204:
 10920              	.LBE2209:
 10921              	.LBE2215:
 422:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 10922              		.loc 20 422 9 is_stmt 1 view .LVU3035
 422:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 10923              		.loc 20 422 56 is_stmt 0 view .LVU3036
 10924 0730 06AA     		add	r2, sp, #24
 10925 0732 5946     		mov	r1, fp
 10926 0734 4648     		ldr	r0, .L651+28
 10927 0736 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10928              	.LVL662:
 423:Veno-Echo.cpp **** 
 10929              		.loc 20 423 56 view .LVU3037
 10930 073a 18EE101A 		vmov	r1, s16	@ int
 10931 073e 07AA     		add	r2, sp, #28
 10932 0740 4448     		ldr	r0, .L651+32
 422:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 10933              		.loc 20 422 56 view .LVU3038
 10934 0742 F0EE408A 		vmov.f32	s17, s0
 10935              	.LVL663:
 423:Veno-Echo.cpp **** 
 10936              		.loc 20 423 9 is_stmt 1 view .LVU3039
 423:Veno-Echo.cpp **** 
 10937              		.loc 20 423 56 is_stmt 0 view .LVU3040
 10938 0746 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10939              	.LVL664:
 426:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10940              		.loc 20 426 46 view .LVU3041
 10941 074a 4348     		ldr	r0, .L651+36
 423:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 339


 10942              		.loc 20 423 56 view .LVU3042
 10943 074c B0EE408A 		vmov.f32	s16, s0
 10944              	.LVL665:
 426:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10945              		.loc 20 426 9 is_stmt 1 view .LVU3043
 426:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10946              		.loc 20 426 46 is_stmt 0 view .LVU3044
 10947 0750 FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 10948              	.LVL666:
 426:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10949              		.loc 20 426 46 view .LVU3045
 10950 0754 0346     		mov	r3, r0
 427:Veno-Echo.cpp **** 
 10951              		.loc 20 427 46 view .LVU3046
 10952 0756 4148     		ldr	r0, .L651+40
 426:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10953              		.loc 20 426 45 view .LVU3047
 10954 0758 1B68     		ldr	r3, [r3]	@ float
 426:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10955              		.loc 20 426 47 view .LVU3048
 10956 075a 0893     		str	r3, [sp, #32]	@ float
 427:Veno-Echo.cpp **** 
 10957              		.loc 20 427 9 is_stmt 1 view .LVU3049
 427:Veno-Echo.cpp **** 
 10958              		.loc 20 427 46 is_stmt 0 view .LVU3050
 10959 075c FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 10960              	.LVL667:
 427:Veno-Echo.cpp **** 
 10961              		.loc 20 427 45 view .LVU3051
 10962 0760 0368     		ldr	r3, [r0]	@ float
 427:Veno-Echo.cpp **** 
 10963              		.loc 20 427 47 view .LVU3052
 10964 0762 0993     		str	r3, [sp, #36]	@ float
 430:Veno-Echo.cpp **** 
 10965              		.loc 20 430 9 is_stmt 1 view .LVU3053
 430:Veno-Echo.cpp **** 
 10966              		.loc 20 430 28 is_stmt 0 view .LVU3054
 10967 0764 FFF7FEFF 		bl	_Z19Update_BaseTempoLEDv
 10968              	.LVL668:
 433:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 10969              		.loc 20 433 9 is_stmt 1 view .LVU3055
 10970              	.LBB2216:
 10971              	.LBB1873:
1999:Veno-Echo.cpp ****         returnval = limit;
 10972              		.loc 20 1999 5 is_stmt 0 view .LVU3056
 10973 0768 B0EE007A 		vmov.f32	s14, #2.0e+0
 10974              	.LBE1873:
 10975              	.LBE2216:
 433:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 10976              		.loc 20 433 34 view .LVU3057
 10977 076c DDED087A 		vldr.32	s15, [sp, #32]
 10978              	.LVL669:
 10979              	.LBB2217:
 10980              	.LBI1871:
1996:Veno-Echo.cpp **** {
 10981              		.loc 20 1996 7 is_stmt 1 view .LVU3058
 10982              	.LBB1874:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 340


1998:Veno-Echo.cpp ****     if (input > limit)
 10983              		.loc 20 1998 5 view .LVU3059
1999:Veno-Echo.cpp ****         returnval = limit;
 10984              		.loc 20 1999 5 view .LVU3060
 10985 0770 F4EEC77A 		vcmpe.f32	s15, s14
 10986 0774 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10987 0778 7FF792AC 		ble	.L645
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10988              		.loc 20 2000 19 is_stmt 0 view .LVU3061
 10989 077c F0EE477A 		vmov.f32	s15, s14
 10990              	.LVL670:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10991              		.loc 20 2000 19 view .LVU3062
 10992 0780 97E4     		b	.L544
 10993              	.LVL671:
 10994              	.L534:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10995              		.loc 20 2000 19 view .LVU3063
 10996              	.LBE1874:
 10997              	.LBE2217:
 10998              	.LBB2218:
 10999              	.LBB2210:
 11000              	.LBB2205:
 126:delayline_reverse.h ****         {
 11001              		.loc 19 126 12 view .LVU3064
 11002 0782 304B     		ldr	r3, .L651+16
 126:delayline_reverse.h ****         {
 11003              		.loc 19 126 9 view .LVU3065
 11004 0784 E25C     		ldrb	r2, [r4, r3]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 11005              		.loc 19 126 12 view .LVU3066
 11006 0786 2344     		add	r3, r3, r4
 126:delayline_reverse.h ****         {
 11007              		.loc 19 126 9 view .LVU3067
 11008 0788 002A     		cmp	r2, #0
 11009 078a D1D0     		beq	.L540
 11010              	.L641:
 126:delayline_reverse.h ****         {
 11011              		.loc 19 126 9 view .LVU3068
 11012 078c 2E4A     		ldr	r2, .L651+20
 11013 078e A018     		adds	r0, r4, r2
 11014 0790 A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 11015              		.loc 19 128 13 view .LVU3069
 11016 0792 002A     		cmp	r2, #0
 11017 0794 B2D0     		beq	.L537
 11018              	.L538:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11019              		.loc 19 141 45 view .LVU3070
 11020 0796 DDED017A 		vldr.32	s15, [sp, #4]	@ int
 11021              	.LVL672:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11022              		.loc 19 141 45 view .LVU3071
 11023 079a B7EE006A 		vmov.f32	s12, #1.0e+0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11024              		.loc 19 141 37 view .LVU3072
 11025 079e 0399     		ldr	r1, [sp, #12]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 341


 142:delayline_reverse.h ****                 {
 11026              		.loc 19 142 17 view .LVU3073
 11027 07a0 0022     		movs	r2, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11028              		.loc 19 141 45 view .LVU3074
 11029 07a2 F8EE676A 		vcvt.f32.u32	s13, s15
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11030              		.loc 19 141 37 view .LVU3075
 11031 07a6 D1ED007A 		vldr.32	s15, [r1]
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11032              		.loc 19 141 45 view .LVU3076
 11033 07aa 86EE267A 		vdiv.f32	s14, s12, s13
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11034              		.loc 19 141 37 view .LVU3077
 11035 07ae 77EEC77A 		vsub.f32	s15, s15, s14
 142:delayline_reverse.h ****                 {
 11036              		.loc 19 142 17 view .LVU3078
 11037 07b2 F5EEC07A 		vcmpe.f32	s15, #0
 11038 07b6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11039 07ba 00F1B881 		bmi	.L543
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11040              		.loc 19 141 17 view .LVU3079
 11041 07be C1ED007A 		vstr.32	s15, [r1]
 11042 07c2 B5E7     		b	.L540
 11043              	.LVL673:
 11044              	.L524:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11045              		.loc 19 141 17 view .LVU3080
 11046              	.LBE2205:
 11047              	.LBE2210:
 11048              	.LBE2218:
 11049              	.LBB2219:
 11050              	.LBB2182:
 11051              	.LBB2171:
 126:delayline_reverse.h ****         {
 11052              		.loc 19 126 12 view .LVU3081
 11053 07c4 1F4A     		ldr	r2, .L651+16
 126:delayline_reverse.h ****         {
 11054              		.loc 19 126 9 view .LVU3082
 11055 07c6 AB5C     		ldrb	r3, [r5, r2]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 11056              		.loc 19 126 12 view .LVU3083
 11057 07c8 2A44     		add	r2, r2, r5
 126:delayline_reverse.h ****         {
 11058              		.loc 19 126 9 view .LVU3084
 11059 07ca 002B     		cmp	r3, #0
 11060 07cc 3FF447AF 		beq	.L530
 11061              	.L639:
 126:delayline_reverse.h ****         {
 11062              		.loc 19 126 9 view .LVU3085
 11063 07d0 1D4B     		ldr	r3, .L651+20
 11064 07d2 E818     		adds	r0, r5, r3
 11065 07d4 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 11066              		.loc 19 128 13 view .LVU3086
 11067 07d6 002B     		cmp	r3, #0
 11068 07d8 3FF42AAF 		beq	.L527
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 342


 11069              	.L528:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11070              		.loc 19 141 45 view .LVU3087
 11071 07dc 07EE90EA 		vmov	s15, lr	@ int
 11072              	.LVL674:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11073              		.loc 19 141 45 view .LVU3088
 11074 07e0 F7EE006A 		vmov.f32	s13, #1.0e+0
 142:delayline_reverse.h ****                 {
 11075              		.loc 19 142 17 view .LVU3089
 11076 07e4 0023     		movs	r3, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11077              		.loc 19 141 45 view .LVU3090
 11078 07e6 B8EE677A 		vcvt.f32.u32	s14, s15
 11079 07ea C6EE877A 		vdiv.f32	s15, s13, s14
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11080              		.loc 19 141 37 view .LVU3091
 11081 07ee 3BEE67BA 		vsub.f32	s22, s22, s15
 142:delayline_reverse.h ****                 {
 11082              		.loc 19 142 17 view .LVU3092
 11083 07f2 B5EEC0BA 		vcmpe.f32	s22, #0
 11084 07f6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11085 07fa 00F19E81 		bmi	.L533
 11086              	.L640:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11087              		.loc 19 141 17 view .LVU3093
 11088 07fe 049B     		ldr	r3, [sp, #16]
 11089 0800 83ED00BA 		vstr.32	s22, [r3]
 11090 0804 2BE7     		b	.L530
 11091              	.LVL675:
 11092              	.L575:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11093              		.loc 19 141 17 view .LVU3094
 11094              	.LBE2171:
 11095              	.LBE2182:
 11096              	.LBE2219:
 599:Veno-Echo.cpp ****             out[i+1] = mixR;
 11097              		.loc 20 599 13 is_stmt 1 view .LVU3095
 599:Veno-Echo.cpp ****             out[i+1] = mixR;
 11098              		.loc 20 599 20 is_stmt 0 view .LVU3096
 11099 0806 009B     		ldr	r3, [sp]
 11100 0808 C3ED007A 		vstr.32	s15, [r3]
 600:Veno-Echo.cpp ****         }
 11101              		.loc 20 600 13 is_stmt 1 view .LVU3097
 600:Veno-Echo.cpp ****         }
 11102              		.loc 20 600 22 is_stmt 0 view .LVU3098
 11103 080c 83ED010A 		vstr.32	s0, [r3, #4]
 11104 0810 8FE5     		b	.L576
 11105              	.LVL676:
 11106              	.L636:
 580:Veno-Echo.cpp ****         {
 11107              		.loc 20 580 14 is_stmt 1 view .LVU3099
 11108 0812 40F36A81 		ble	.L637
 582:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11109              		.loc 20 582 13 view .LVU3100
 582:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11110              		.loc 20 582 24 is_stmt 0 view .LVU3101
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 343


 11111 0816 F7EE006A 		vmov.f32	s13, #1.0e+0
 582:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11112              		.loc 20 582 18 view .LVU3102
 11113 081a DBED005A 		vldr.32	s11, [fp]
 583:Veno-Echo.cpp ****         }
 11114              		.loc 20 583 18 view .LVU3103
 11115 081e 9BED016A 		vldr.32	s12, [fp, #4]
 582:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11116              		.loc 20 582 24 view .LVU3104
 11117 0822 36EEC77A 		vsub.f32	s14, s13, s14
 582:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11118              		.loc 20 582 33 view .LVU3105
 11119 0826 37EE077A 		vadd.f32	s14, s14, s14
 582:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 11120              		.loc 20 582 18 view .LVU3106
 11121 082a E7EE257A 		vfma.f32	s15, s14, s11
 11122              	.LVL677:
 583:Veno-Echo.cpp ****         }
 11123              		.loc 20 583 13 is_stmt 1 view .LVU3107
 583:Veno-Echo.cpp ****         }
 11124              		.loc 20 583 18 is_stmt 0 view .LVU3108
 11125 082e A7EE060A 		vfma.f32	s0, s14, s12
 11126              	.LVL678:
 583:Veno-Echo.cpp ****         }
 11127              		.loc 20 583 18 view .LVU3109
 11128 0832 75E5     		b	.L572
 11129              	.L652:
 11130              		.align	2
 11131              	.L651:
 11132 0834 00000000 		.word	.LANCHOR3
 11133 0838 BF270900 		.word	599999
 11134 083c 851DD96F 		.word	1876499845
 11135 0840 C1270900 		.word	600001
 11136 0844 249F2400 		.word	2400036
 11137 0848 1C9F2400 		.word	2400028
 11138 084c 189F2400 		.word	2400024
 11139 0850 00000000 		.word	.LANCHOR106
 11140 0854 00000000 		.word	.LANCHOR107
 11141 0858 00000000 		.word	.LANCHOR0
 11142 085c 00000000 		.word	.LANCHOR1
 11143 0860 C0270900 		.word	600000
 11144              	.LVL679:
 11145              	.L591:
 11146              	.LBB2220:
 534:Veno-Echo.cpp **** {
 11147              		.loc 20 534 1 view .LVU3110
 11148 0864 D14B     		ldr	r3, .L653
 11149              	.LBE2220:
 11150              	.LBB2221:
 11151              	.LBB1962:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11152              		.loc 20 2000 19 view .LVU3111
 11153 0866 B0EE470A 		vmov.f32	s0, s14
 11154              	.LVL680:
2006:Veno-Echo.cpp **** }
 11155              		.loc 20 2006 5 is_stmt 1 view .LVU3112
2006:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 344


 11156              		.loc 20 2006 5 is_stmt 0 view .LVU3113
 11157              	.LBE1962:
 11158              	.LBE2221:
 11159              	.LBB2222:
 534:Veno-Echo.cpp **** {
 11160              		.loc 20 534 1 view .LVU3114
 11161 086a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11162              	.LBE2222:
 532:Veno-Echo.cpp **** 
 11163              		.loc 20 532 27 view .LVU3115
 11164 086c 8DED0B0A 		vstr.32	s0, [sp, #44]
 534:Veno-Echo.cpp **** {
 11165              		.loc 20 534 1 is_stmt 1 view .LVU3116
 11166              	.LBB2223:
 11167 0870 002B     		cmp	r3, #0
 11168 0872 3FF43CAD 		beq	.L566
 11169              	.L643:
 11170              	.LBB1965:
 540:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11171              		.loc 20 540 9 view .LVU3117
 540:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11172              		.loc 20 540 27 is_stmt 0 view .LVU3118
 11173 0876 9FEDCE8A 		vldr.32	s16, .L653+4
 11174              	.LVL681:
 540:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11175              		.loc 20 540 27 view .LVU3119
 11176 087a CE4D     		ldr	r5, .L653+8
 11177 087c 27EE880A 		vmul.f32	s0, s15, s16
 541:Veno-Echo.cpp **** 
 11178              		.loc 20 541 27 view .LVU3120
 11179 0880 CD4C     		ldr	r4, .L653+12
 540:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11180              		.loc 20 540 27 view .LVU3121
 11181 0882 2846     		mov	r0, r5
 11182 0884 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11183              	.LVL682:
 541:Veno-Echo.cpp **** 
 11184              		.loc 20 541 9 is_stmt 1 view .LVU3122
 541:Veno-Echo.cpp **** 
 11185              		.loc 20 541 27 is_stmt 0 view .LVU3123
 11186 0888 9DED0B0A 		vldr.32	s0, [sp, #44]
 11187 088c 2046     		mov	r0, r4
 11188 088e 20EE080A 		vmul.f32	s0, s0, s16
 11189 0892 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11190              	.LVL683:
 544:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11191              		.loc 20 544 9 is_stmt 1 view .LVU3124
 544:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11192              		.loc 20 544 9 is_stmt 0 view .LVU3125
 11193              	.LBE1965:
 11194              	.LBE2223:
 11195              	.LBE2251:
 11196              	.LBE2262:
  23:../DaisySP/Source/Filters/svf.h ****     /** Initializes the filter
  24:../DaisySP/Source/Filters/svf.h ****         float sample_rate - sample rate of the audio engine being run, and the frequency that the P
  25:../DaisySP/Source/Filters/svf.h ****     */
  26:../DaisySP/Source/Filters/svf.h ****     void Init(float sample_rate);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 345


  27:../DaisySP/Source/Filters/svf.h **** 
  28:../DaisySP/Source/Filters/svf.h **** 
  29:../DaisySP/Source/Filters/svf.h ****     /** 
  30:../DaisySP/Source/Filters/svf.h ****         Process the input signal, updating all of the outputs.
  31:../DaisySP/Source/Filters/svf.h ****     */
  32:../DaisySP/Source/Filters/svf.h ****     void Process(float in);
  33:../DaisySP/Source/Filters/svf.h **** 
  34:../DaisySP/Source/Filters/svf.h **** 
  35:../DaisySP/Source/Filters/svf.h ****     /** sets the frequency of the cutoff frequency. 
  36:../DaisySP/Source/Filters/svf.h ****         f must be between 0.0 and sample_rate / 3
  37:../DaisySP/Source/Filters/svf.h ****     */
  38:../DaisySP/Source/Filters/svf.h ****     void SetFreq(float f);
  39:../DaisySP/Source/Filters/svf.h **** 
  40:../DaisySP/Source/Filters/svf.h ****     /** sets the resonance of the filter.
  41:../DaisySP/Source/Filters/svf.h ****         Must be between 0.0 and 1.0 to ensure stability.
  42:../DaisySP/Source/Filters/svf.h ****     */
  43:../DaisySP/Source/Filters/svf.h ****     void SetRes(float r);
  44:../DaisySP/Source/Filters/svf.h **** 
  45:../DaisySP/Source/Filters/svf.h ****     /** sets the drive of the filter 
  46:../DaisySP/Source/Filters/svf.h ****         affects the response of the resonance of the filter
  47:../DaisySP/Source/Filters/svf.h ****     */
  48:../DaisySP/Source/Filters/svf.h ****     void SetDrive(float d);
  49:../DaisySP/Source/Filters/svf.h ****     /** lowpass output
  50:../DaisySP/Source/Filters/svf.h ****         \return low pass output of the filter
  51:../DaisySP/Source/Filters/svf.h ****     */
  52:../DaisySP/Source/Filters/svf.h ****     inline float Low() { return out_low_; }
 11197              		.loc 9 52 26 is_stmt 1 view .LVU3126
 11198              	.LBB2263:
 11199              	.LBB2252:
 11200              	.LBB2224:
 11201              	.LBB1980:
 544:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11202              		.loc 20 544 50 is_stmt 0 view .LVU3127
 11203 0896 F2EE046A 		vmov.f32	s13, #1.0e+1
 11204 089a 95ED0C7A 		vldr.32	s14, [r5, #48]
 548:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11205              		.loc 20 548 59 view .LVU3128
 11206 089e 0AA9     		add	r1, sp, #40
 545:Veno-Echo.cpp ****         
 11207              		.loc 20 545 50 view .LVU3129
 11208 08a0 D4ED0C7A 		vldr.32	s15, [r4, #48]
 548:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11209              		.loc 20 548 59 view .LVU3130
 11210 08a4 0CAA     		add	r2, sp, #48
 544:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11211              		.loc 20 544 50 view .LVU3131
 11212 08a6 27EE267A 		vmul.f32	s14, s14, s13
 548:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11213              		.loc 20 548 59 view .LVU3132
 11214 08aa C448     		ldr	r0, .L653+16
 545:Veno-Echo.cpp ****         
 11215              		.loc 20 545 50 view .LVU3133
 11216 08ac 67EEA67A 		vmul.f32	s15, s15, s13
 544:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11217              		.loc 20 544 57 view .LVU3134
 11218 08b0 8DED0C7A 		vstr.32	s14, [sp, #48]
 545:Veno-Echo.cpp ****         
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 346


 11219              		.loc 20 545 9 is_stmt 1 view .LVU3135
 11220              	.LVL684:
 545:Veno-Echo.cpp ****         
 11221              		.loc 20 545 9 is_stmt 0 view .LVU3136
 11222              	.LBE1980:
 11223              	.LBE2224:
 11224              	.LBE2252:
 11225              	.LBE2263:
 11226              		.loc 9 52 26 is_stmt 1 view .LVU3137
 11227              	.LBB2264:
 11228              	.LBB2253:
 11229              	.LBB2225:
 11230              	.LBB1981:
 545:Veno-Echo.cpp ****         
 11231              		.loc 20 545 57 is_stmt 0 view .LVU3138
 11232 08b4 CDED0D7A 		vstr.32	s15, [sp, #52]
 548:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11233              		.loc 20 548 9 is_stmt 1 view .LVU3139
 548:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11234              		.loc 20 548 59 is_stmt 0 view .LVU3140
 11235 08b8 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11236              	.LVL685:
 549:Veno-Echo.cpp **** 
 11237              		.loc 20 549 59 view .LVU3141
 11238 08bc 0BA9     		add	r1, sp, #44
 11239 08be 0DAA     		add	r2, sp, #52
 11240 08c0 BF48     		ldr	r0, .L653+20
 548:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11241              		.loc 20 548 97 view .LVU3142
 11242 08c2 8DED0E0A 		vstr.32	s0, [sp, #56]
 549:Veno-Echo.cpp **** 
 11243              		.loc 20 549 9 is_stmt 1 view .LVU3143
 549:Veno-Echo.cpp **** 
 11244              		.loc 20 549 59 is_stmt 0 view .LVU3144
 11245 08c6 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11246              	.LVL686:
 11247              	.LBB1966:
 11248              	.LBB1967:
1999:Veno-Echo.cpp ****         returnval = limit;
 11249              		.loc 20 1999 5 view .LVU3145
 11250 08ca F0EE006A 		vmov.f32	s13, #2.0e+0
 11251              	.LBE1967:
 11252              	.LBE1966:
 552:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11253              		.loc 20 552 41 view .LVU3146
 11254 08ce 9DED0E7A 		vldr.32	s14, [sp, #56]
 549:Veno-Echo.cpp **** 
 11255              		.loc 20 549 59 view .LVU3147
 11256 08d2 F0EE407A 		vmov.f32	s15, s0
 552:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11257              		.loc 20 552 9 is_stmt 1 view .LVU3148
 11258              	.LVL687:
 11259              	.LBB1971:
 11260              	.LBI1966:
1996:Veno-Echo.cpp **** {
 11261              		.loc 20 1996 7 view .LVU3149
 11262              	.LBB1968:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 347


1998:Veno-Echo.cpp ****     if (input > limit)
 11263              		.loc 20 1998 5 view .LVU3150
1999:Veno-Echo.cpp ****         returnval = limit;
 11264              		.loc 20 1999 5 view .LVU3151
 11265 08d6 B4EEE67A 		vcmpe.f32	s14, s13
 11266 08da F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11267 08de 00F30D81 		bgt	.L592
2001:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11268              		.loc 20 2001 10 view .LVU3152
 11269 08e2 F8EE006A 		vmov.f32	s13, #-2.0e+0
 11270 08e6 B4EEE67A 		vcmpe.f32	s14, s13
 11271 08ea F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11272 08ee 00F12D81 		bmi	.L593
 11273 08f2 27EE080A 		vmul.f32	s0, s14, s16
 11274              	.LVL688:
 11275              	.L567:
2006:Veno-Echo.cpp **** }
 11276              		.loc 20 2006 5 view .LVU3153
2006:Veno-Echo.cpp **** }
 11277              		.loc 20 2006 5 is_stmt 0 view .LVU3154
 11278              	.LBE1968:
 11279              	.LBE1971:
 11280              	.LBB1972:
 11281              	.LBB1973:
1999:Veno-Echo.cpp ****         returnval = limit;
 11282              		.loc 20 1999 5 view .LVU3155
 11283 08f6 F0EE006A 		vmov.f32	s13, #2.0e+0
 11284              	.LBE1973:
 11285              	.LBE1972:
 552:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11286              		.loc 20 552 30 view .LVU3156
 11287 08fa 8DED0E7A 		vstr.32	s14, [sp, #56]
 553:Veno-Echo.cpp **** 
 11288              		.loc 20 553 9 is_stmt 1 view .LVU3157
 11289              	.LVL689:
 11290              	.LBB1976:
 11291              	.LBI1972:
1996:Veno-Echo.cpp **** {
 11292              		.loc 20 1996 7 view .LVU3158
 11293              	.LBB1974:
1998:Veno-Echo.cpp ****     if (input > limit)
 11294              		.loc 20 1998 5 view .LVU3159
1999:Veno-Echo.cpp ****         returnval = limit;
 11295              		.loc 20 1999 5 view .LVU3160
 11296 08fe F4EEE67A 		vcmpe.f32	s15, s13
 11297 0902 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11298 0906 00F30681 		bgt	.L594
2001:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11299              		.loc 20 2001 10 view .LVU3161
 11300 090a B8EE007A 		vmov.f32	s14, #-2.0e+0
2002:Veno-Echo.cpp ****     else
 11301              		.loc 20 2002 19 is_stmt 0 view .LVU3162
 11302 090e F4EE477A 		vcmp.f32	s15, s14
 11303 0912 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11304 0916 48BF     		it	mi
 11305 0918 F0EE477A 		vmovmi.f32	s15, s14
 11306              	.LVL690:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 348


 11307              	.L568:
2006:Veno-Echo.cpp **** }
 11308              		.loc 20 2006 5 is_stmt 1 view .LVU3163
2006:Veno-Echo.cpp **** }
 11309              		.loc 20 2006 5 is_stmt 0 view .LVU3164
 11310              	.LBE1974:
 11311              	.LBE1976:
 556:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11312              		.loc 20 556 27 view .LVU3165
 11313 091c A94D     		ldr	r5, .L653+24
 557:Veno-Echo.cpp **** 
 11314              		.loc 20 557 27 view .LVU3166
 11315 091e AA4C     		ldr	r4, .L653+28
 556:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11316              		.loc 20 556 27 view .LVU3167
 11317 0920 2846     		mov	r0, r5
 553:Veno-Echo.cpp **** 
 11318              		.loc 20 553 30 view .LVU3168
 11319 0922 CDED0F7A 		vstr.32	s15, [sp, #60]
 556:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11320              		.loc 20 556 9 is_stmt 1 view .LVU3169
 556:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11321              		.loc 20 556 27 is_stmt 0 view .LVU3170
 11322 0926 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11323              	.LVL691:
 557:Veno-Echo.cpp **** 
 11324              		.loc 20 557 9 is_stmt 1 view .LVU3171
 557:Veno-Echo.cpp **** 
 11325              		.loc 20 557 27 is_stmt 0 view .LVU3172
 11326 092a DFEDA17A 		vldr.32	s15, .L653+4
 11327 092e 9DED0F0A 		vldr.32	s0, [sp, #60]
 11328 0932 2046     		mov	r0, r4
 11329 0934 20EE270A 		vmul.f32	s0, s0, s15
 11330 0938 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11331              	.LVL692:
 559:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11332              		.loc 20 559 9 is_stmt 1 view .LVU3173
 559:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11333              		.loc 20 559 9 is_stmt 0 view .LVU3174
 11334              	.LBE1981:
 11335              	.LBE2225:
 11336              	.LBE2253:
 11337              	.LBE2264:
  53:../DaisySP/Source/Filters/svf.h ****     /** highpass output
  54:../DaisySP/Source/Filters/svf.h ****         \return high pass output of the filter
  55:../DaisySP/Source/Filters/svf.h ****     */
  56:../DaisySP/Source/Filters/svf.h ****     inline float High() { return out_high_; }
 11338              		.loc 9 56 27 is_stmt 1 view .LVU3175
 11339              	.LBB2265:
 11340              	.LBB2254:
 11341              	.LBB2226:
 11342              	.LBB1982:
 559:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11343              		.loc 20 559 51 is_stmt 0 view .LVU3176
 11344 093c F2EE046A 		vmov.f32	s13, #1.0e+1
 11345 0940 95ED0D7A 		vldr.32	s14, [r5, #52]
 562:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 349


 11346              		.loc 20 562 55 view .LVU3177
 11347 0944 0EA9     		add	r1, sp, #56
 560:Veno-Echo.cpp **** 
 11348              		.loc 20 560 51 view .LVU3178
 11349 0946 D4ED0D7A 		vldr.32	s15, [r4, #52]
 562:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11350              		.loc 20 562 55 view .LVU3179
 11351 094a 10AA     		add	r2, sp, #64
 559:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11352              		.loc 20 559 51 view .LVU3180
 11353 094c 27EE267A 		vmul.f32	s14, s14, s13
 562:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11354              		.loc 20 562 55 view .LVU3181
 11355 0950 9E48     		ldr	r0, .L653+32
 560:Veno-Echo.cpp **** 
 11356              		.loc 20 560 51 view .LVU3182
 11357 0952 67EEA67A 		vmul.f32	s15, s15, s13
 559:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11358              		.loc 20 559 58 view .LVU3183
 11359 0956 8DED107A 		vstr.32	s14, [sp, #64]
 560:Veno-Echo.cpp **** 
 11360              		.loc 20 560 9 is_stmt 1 view .LVU3184
 11361              	.LVL693:
 560:Veno-Echo.cpp **** 
 11362              		.loc 20 560 9 is_stmt 0 view .LVU3185
 11363              	.LBE1982:
 11364              	.LBE2226:
 11365              	.LBE2254:
 11366              	.LBE2265:
 11367              		.loc 9 56 27 is_stmt 1 view .LVU3186
 11368              	.LBB2266:
 11369              	.LBB2255:
 11370              	.LBB2227:
 11371              	.LBB1983:
 560:Veno-Echo.cpp **** 
 11372              		.loc 20 560 58 is_stmt 0 view .LVU3187
 11373 095a CDED117A 		vstr.32	s15, [sp, #68]
 562:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11374              		.loc 20 562 9 is_stmt 1 view .LVU3188
 562:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11375              		.loc 20 562 55 is_stmt 0 view .LVU3189
 11376 095e FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11377              	.LVL694:
 563:Veno-Echo.cpp **** 
 11378              		.loc 20 563 55 view .LVU3190
 11379 0962 0FA9     		add	r1, sp, #60
 11380 0964 11AA     		add	r2, sp, #68
 11381 0966 9A48     		ldr	r0, .L653+36
 562:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11382              		.loc 20 562 30 view .LVU3191
 11383 0968 8DED0E0A 		vstr.32	s0, [sp, #56]
 563:Veno-Echo.cpp **** 
 11384              		.loc 20 563 9 is_stmt 1 view .LVU3192
 563:Veno-Echo.cpp **** 
 11385              		.loc 20 563 55 is_stmt 0 view .LVU3193
 11386 096c FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11387              	.LVL695:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 350


 566:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11388              		.loc 20 566 53 view .LVU3194
 11389 0970 0EAA     		add	r2, sp, #56
 11390 0972 0AA9     		add	r1, sp, #40
 11391 0974 9748     		ldr	r0, .L653+40
 563:Veno-Echo.cpp **** 
 11392              		.loc 20 563 30 view .LVU3195
 11393 0976 8DED0F0A 		vstr.32	s0, [sp, #60]
 566:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11394              		.loc 20 566 9 is_stmt 1 view .LVU3196
 566:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11395              		.loc 20 566 53 is_stmt 0 view .LVU3197
 11396 097a FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11397              	.LVL696:
 567:Veno-Echo.cpp **** 
 11398              		.loc 20 567 53 view .LVU3198
 11399 097e 0FAA     		add	r2, sp, #60
 11400 0980 0BA9     		add	r1, sp, #44
 11401 0982 9548     		ldr	r0, .L653+44
 566:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11402              		.loc 20 566 27 view .LVU3199
 11403 0984 8DED0A0A 		vstr.32	s0, [sp, #40]
 567:Veno-Echo.cpp **** 
 11404              		.loc 20 567 9 is_stmt 1 view .LVU3200
 567:Veno-Echo.cpp **** 
 11405              		.loc 20 567 53 is_stmt 0 view .LVU3201
 11406 0988 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11407              	.LVL697:
 11408 098c DDED0A7A 		vldr.32	s15, [sp, #40]
 567:Veno-Echo.cpp **** 
 11409              		.loc 20 567 27 view .LVU3202
 11410 0990 8DED0B0A 		vstr.32	s0, [sp, #44]
 11411              	.LBE1983:
 11412 0994 ABE4     		b	.L566
 11413              	.LVL698:
 11414              	.L635:
 567:Veno-Echo.cpp **** 
 11415              		.loc 20 567 27 view .LVU3203
 11416              	.LBE2227:
 510:Veno-Echo.cpp **** 
 11417              		.loc 20 510 25 view .LVU3204
 11418 0996 DFED917A 		vldr.32	s15, .L653+48
 11419              	.LVL699:
 510:Veno-Echo.cpp **** 
 11420              		.loc 20 510 25 view .LVU3205
 11421 099a 32E4     		b	.L556
 11422              	.LVL700:
 11423              	.L634:
 506:Veno-Echo.cpp ****             
 11424              		.loc 20 506 25 view .LVU3206
 11425 099c 9FED8F7A 		vldr.32	s14, .L653+48
 11426              	.LVL701:
 506:Veno-Echo.cpp ****             
 11427              		.loc 20 506 25 view .LVU3207
 11428 09a0 1EE4     		b	.L554
 11429              	.LVL702:
 11430              	.L582:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 351


 11431              	.LBB2228:
 436:Veno-Echo.cpp **** {
 11432              		.loc 20 436 1 view .LVU3208
 11433 09a2 824B     		ldr	r3, .L653
 11434              	.LBE2228:
 11435              	.LBB2229:
 11436              	.LBB1879:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11437              		.loc 20 2000 19 view .LVU3209
 11438 09a4 B0EE470A 		vmov.f32	s0, s14
 11439              	.LVL703:
2006:Veno-Echo.cpp **** }
 11440              		.loc 20 2006 5 is_stmt 1 view .LVU3210
2006:Veno-Echo.cpp **** }
 11441              		.loc 20 2006 5 is_stmt 0 view .LVU3211
 11442              	.LBE1879:
 11443              	.LBE2229:
 11444              	.LBB2230:
 436:Veno-Echo.cpp **** {
 11445              		.loc 20 436 1 view .LVU3212
 11446 09a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11447              	.LBE2230:
 434:Veno-Echo.cpp **** 
 11448              		.loc 20 434 23 view .LVU3213
 11449 09aa 8DED090A 		vstr.32	s0, [sp, #36]
 436:Veno-Echo.cpp **** {
 11450              		.loc 20 436 1 is_stmt 1 view .LVU3214
 11451              	.LBB2231:
 11452 09ae 002B     		cmp	r3, #0
 11453 09b0 7FF49BAB 		bne	.L548
 11454              	.L642:
 11455              	.LBB1882:
 442:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 11456              		.loc 20 442 9 view .LVU3215
 442:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 11457              		.loc 20 442 22 is_stmt 0 view .LVU3216
 11458 09b4 9FED7E9A 		vldr.32	s18, .L653+4
 11459 09b8 894D     		ldr	r5, .L653+52
 11460 09ba 27EE890A 		vmul.f32	s0, s15, s18
 443:Veno-Echo.cpp **** 
 11461              		.loc 20 443 22 view .LVU3217
 11462 09be 894C     		ldr	r4, .L653+56
 442:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 11463              		.loc 20 442 22 view .LVU3218
 11464 09c0 2846     		mov	r0, r5
 11465 09c2 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11466              	.LVL704:
 443:Veno-Echo.cpp **** 
 11467              		.loc 20 443 9 is_stmt 1 view .LVU3219
 443:Veno-Echo.cpp **** 
 11468              		.loc 20 443 22 is_stmt 0 view .LVU3220
 11469 09c6 9DED090A 		vldr.32	s0, [sp, #36]
 11470 09ca 2046     		mov	r0, r4
 11471 09cc 20EE090A 		vmul.f32	s0, s0, s18
 11472 09d0 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11473              	.LVL705:
 446:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 352


 11474              		.loc 20 446 9 is_stmt 1 view .LVU3221
 446:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11475              		.loc 20 446 9 is_stmt 0 view .LVU3222
 11476              	.LBE1882:
 11477              	.LBE2231:
 11478              	.LBE2255:
 11479              	.LBE2266:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 11480              		.loc 9 52 26 is_stmt 1 view .LVU3223
 11481              	.LBB2267:
 11482              	.LBB2256:
 11483              	.LBB2232:
 11484              	.LBB1897:
 446:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11485              		.loc 20 446 40 is_stmt 0 view .LVU3224
 11486 09d4 F2EE046A 		vmov.f32	s13, #1.0e+1
 11487 09d8 95ED0C7A 		vldr.32	s14, [r5, #48]
 450:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11488              		.loc 20 450 49 view .LVU3225
 11489 09dc 0CAA     		add	r2, sp, #48
 447:Veno-Echo.cpp ****         
 11490              		.loc 20 447 40 view .LVU3226
 11491 09de D4ED0C7A 		vldr.32	s15, [r4, #48]
 450:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11492              		.loc 20 450 49 view .LVU3227
 11493 09e2 08A9     		add	r1, sp, #32
 446:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11494              		.loc 20 446 40 view .LVU3228
 11495 09e4 27EE267A 		vmul.f32	s14, s14, s13
 450:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11496              		.loc 20 450 49 view .LVU3229
 11497 09e8 7F48     		ldr	r0, .L653+60
 447:Veno-Echo.cpp ****         
 11498              		.loc 20 447 40 view .LVU3230
 11499 09ea 67EEA67A 		vmul.f32	s15, s15, s13
 446:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11500              		.loc 20 446 47 view .LVU3231
 11501 09ee 8DED0C7A 		vstr.32	s14, [sp, #48]
 447:Veno-Echo.cpp ****         
 11502              		.loc 20 447 9 is_stmt 1 view .LVU3232
 11503              	.LVL706:
 447:Veno-Echo.cpp ****         
 11504              		.loc 20 447 9 is_stmt 0 view .LVU3233
 11505              	.LBE1897:
 11506              	.LBE2232:
 11507              	.LBE2256:
 11508              	.LBE2267:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 11509              		.loc 9 52 26 is_stmt 1 view .LVU3234
 11510              	.LBB2268:
 11511              	.LBB2257:
 11512              	.LBB2233:
 11513              	.LBB1898:
 447:Veno-Echo.cpp ****         
 11514              		.loc 20 447 47 is_stmt 0 view .LVU3235
 11515 09f2 CDED0D7A 		vstr.32	s15, [sp, #52]
 450:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 353


 11516              		.loc 20 450 9 is_stmt 1 view .LVU3236
 450:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11517              		.loc 20 450 49 is_stmt 0 view .LVU3237
 11518 09f6 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11519              	.LVL707:
 451:Veno-Echo.cpp **** 
 11520              		.loc 20 451 49 view .LVU3238
 11521 09fa 0DAA     		add	r2, sp, #52
 11522 09fc 09A9     		add	r1, sp, #36
 11523 09fe 7B48     		ldr	r0, .L653+64
 450:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11524              		.loc 20 450 78 view .LVU3239
 11525 0a00 8DED0E0A 		vstr.32	s0, [sp, #56]
 451:Veno-Echo.cpp **** 
 11526              		.loc 20 451 9 is_stmt 1 view .LVU3240
 451:Veno-Echo.cpp **** 
 11527              		.loc 20 451 49 is_stmt 0 view .LVU3241
 11528 0a04 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11529              	.LVL708:
 11530              	.LBB1883:
 11531              	.LBB1884:
1999:Veno-Echo.cpp ****         returnval = limit;
 11532              		.loc 20 1999 5 view .LVU3242
 11533 0a08 F0EE006A 		vmov.f32	s13, #2.0e+0
 11534              	.LBE1884:
 11535              	.LBE1883:
 454:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 11536              		.loc 20 454 36 view .LVU3243
 11537 0a0c 9DED0E7A 		vldr.32	s14, [sp, #56]
 451:Veno-Echo.cpp **** 
 11538              		.loc 20 451 49 view .LVU3244
 11539 0a10 F0EE407A 		vmov.f32	s15, s0
 454:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 11540              		.loc 20 454 9 is_stmt 1 view .LVU3245
 11541              	.LVL709:
 11542              	.LBB1888:
 11543              	.LBI1883:
1996:Veno-Echo.cpp **** {
 11544              		.loc 20 1996 7 view .LVU3246
 11545              	.LBB1885:
1998:Veno-Echo.cpp ****     if (input > limit)
 11546              		.loc 20 1998 5 view .LVU3247
1999:Veno-Echo.cpp ****         returnval = limit;
 11547              		.loc 20 1999 5 view .LVU3248
 11548 0a14 B4EEE67A 		vcmpe.f32	s14, s13
 11549 0a18 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11550 0a1c 76DC     		bgt	.L583
2001:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11551              		.loc 20 2001 10 view .LVU3249
 11552 0a1e F8EE006A 		vmov.f32	s13, #-2.0e+0
 11553 0a22 B4EEE67A 		vcmpe.f32	s14, s13
 11554 0a26 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11555 0a2a 00F19480 		bmi	.L584
 11556 0a2e 27EE090A 		vmul.f32	s0, s14, s18
 11557              	.LVL710:
 11558              	.L549:
2006:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 354


 11559              		.loc 20 2006 5 view .LVU3250
2006:Veno-Echo.cpp **** }
 11560              		.loc 20 2006 5 is_stmt 0 view .LVU3251
 11561              	.LBE1885:
 11562              	.LBE1888:
 11563              	.LBB1889:
 11564              	.LBB1890:
1999:Veno-Echo.cpp ****         returnval = limit;
 11565              		.loc 20 1999 5 view .LVU3252
 11566 0a32 F0EE006A 		vmov.f32	s13, #2.0e+0
 11567              	.LBE1890:
 11568              	.LBE1889:
 454:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 11569              		.loc 20 454 25 view .LVU3253
 11570 0a36 8DED0E7A 		vstr.32	s14, [sp, #56]
 455:Veno-Echo.cpp **** 
 11571              		.loc 20 455 9 is_stmt 1 view .LVU3254
 11572              	.LVL711:
 11573              	.LBB1893:
 11574              	.LBI1889:
1996:Veno-Echo.cpp **** {
 11575              		.loc 20 1996 7 view .LVU3255
 11576              	.LBB1891:
1998:Veno-Echo.cpp ****     if (input > limit)
 11577              		.loc 20 1998 5 view .LVU3256
1999:Veno-Echo.cpp ****         returnval = limit;
 11578              		.loc 20 1999 5 view .LVU3257
 11579 0a3a F4EEE67A 		vcmpe.f32	s15, s13
 11580 0a3e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11581 0a42 60DC     		bgt	.L585
2001:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11582              		.loc 20 2001 10 view .LVU3258
 11583 0a44 B8EE007A 		vmov.f32	s14, #-2.0e+0
2002:Veno-Echo.cpp ****     else
 11584              		.loc 20 2002 19 is_stmt 0 view .LVU3259
 11585 0a48 F4EE477A 		vcmp.f32	s15, s14
 11586 0a4c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11587 0a50 48BF     		it	mi
 11588 0a52 F0EE477A 		vmovmi.f32	s15, s14
 11589              	.LVL712:
 11590              	.L550:
2006:Veno-Echo.cpp **** }
 11591              		.loc 20 2006 5 is_stmt 1 view .LVU3260
2006:Veno-Echo.cpp **** }
 11592              		.loc 20 2006 5 is_stmt 0 view .LVU3261
 11593              	.LBE1891:
 11594              	.LBE1893:
 458:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 11595              		.loc 20 458 22 view .LVU3262
 11596 0a56 664D     		ldr	r5, .L653+68
 459:Veno-Echo.cpp **** 
 11597              		.loc 20 459 22 view .LVU3263
 11598 0a58 664C     		ldr	r4, .L653+72
 458:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 11599              		.loc 20 458 22 view .LVU3264
 11600 0a5a 2846     		mov	r0, r5
 455:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 355


 11601              		.loc 20 455 25 view .LVU3265
 11602 0a5c CDED0F7A 		vstr.32	s15, [sp, #60]
 458:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 11603              		.loc 20 458 9 is_stmt 1 view .LVU3266
 458:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 11604              		.loc 20 458 22 is_stmt 0 view .LVU3267
 11605 0a60 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11606              	.LVL713:
 459:Veno-Echo.cpp **** 
 11607              		.loc 20 459 9 is_stmt 1 view .LVU3268
 459:Veno-Echo.cpp **** 
 11608              		.loc 20 459 22 is_stmt 0 view .LVU3269
 11609 0a64 DFED527A 		vldr.32	s15, .L653+4
 11610 0a68 9DED0F0A 		vldr.32	s0, [sp, #60]
 11611 0a6c 2046     		mov	r0, r4
 11612 0a6e 20EE270A 		vmul.f32	s0, s0, s15
 11613 0a72 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11614              	.LVL714:
 461:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11615              		.loc 20 461 9 is_stmt 1 view .LVU3270
 461:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11616              		.loc 20 461 9 is_stmt 0 view .LVU3271
 11617              	.LBE1898:
 11618              	.LBE2233:
 11619              	.LBE2257:
 11620              	.LBE2268:
 11621              		.loc 9 56 27 is_stmt 1 view .LVU3272
 11622              	.LBB2269:
 11623              	.LBB2258:
 11624              	.LBB2234:
 11625              	.LBB1899:
 461:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11626              		.loc 20 461 41 is_stmt 0 view .LVU3273
 11627 0a76 F2EE046A 		vmov.f32	s13, #1.0e+1
 11628 0a7a 95ED0D7A 		vldr.32	s14, [r5, #52]
 464:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11629              		.loc 20 464 45 view .LVU3274
 11630 0a7e 0EA9     		add	r1, sp, #56
 462:Veno-Echo.cpp **** 
 11631              		.loc 20 462 41 view .LVU3275
 11632 0a80 D4ED0D7A 		vldr.32	s15, [r4, #52]
 464:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11633              		.loc 20 464 45 view .LVU3276
 11634 0a84 10AA     		add	r2, sp, #64
 461:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11635              		.loc 20 461 41 view .LVU3277
 11636 0a86 27EE267A 		vmul.f32	s14, s14, s13
 464:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11637              		.loc 20 464 45 view .LVU3278
 11638 0a8a 5B48     		ldr	r0, .L653+76
 462:Veno-Echo.cpp **** 
 11639              		.loc 20 462 41 view .LVU3279
 11640 0a8c 67EEA67A 		vmul.f32	s15, s15, s13
 461:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11641              		.loc 20 461 48 view .LVU3280
 11642 0a90 8DED107A 		vstr.32	s14, [sp, #64]
 462:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 356


 11643              		.loc 20 462 9 is_stmt 1 view .LVU3281
 11644              	.LVL715:
 462:Veno-Echo.cpp **** 
 11645              		.loc 20 462 9 is_stmt 0 view .LVU3282
 11646              	.LBE1899:
 11647              	.LBE2234:
 11648              	.LBE2258:
 11649              	.LBE2269:
 11650              		.loc 9 56 27 is_stmt 1 view .LVU3283
 11651              	.LBB2270:
 11652              	.LBB2259:
 11653              	.LBB2235:
 11654              	.LBB1900:
 462:Veno-Echo.cpp **** 
 11655              		.loc 20 462 48 is_stmt 0 view .LVU3284
 11656 0a94 CDED117A 		vstr.32	s15, [sp, #68]
 464:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11657              		.loc 20 464 9 is_stmt 1 view .LVU3285
 464:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11658              		.loc 20 464 45 is_stmt 0 view .LVU3286
 11659 0a98 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11660              	.LVL716:
 465:Veno-Echo.cpp **** 
 11661              		.loc 20 465 45 view .LVU3287
 11662 0a9c 0FA9     		add	r1, sp, #60
 11663 0a9e 11AA     		add	r2, sp, #68
 11664 0aa0 5648     		ldr	r0, .L653+80
 464:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11665              		.loc 20 464 25 view .LVU3288
 11666 0aa2 8DED0E0A 		vstr.32	s0, [sp, #56]
 465:Veno-Echo.cpp **** 
 11667              		.loc 20 465 9 is_stmt 1 view .LVU3289
 465:Veno-Echo.cpp **** 
 11668              		.loc 20 465 45 is_stmt 0 view .LVU3290
 11669 0aa6 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11670              	.LVL717:
 469:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 11671              		.loc 20 469 44 view .LVU3291
 11672 0aaa 0EAA     		add	r2, sp, #56
 11673 0aac 08A9     		add	r1, sp, #32
 11674 0aae 5448     		ldr	r0, .L653+84
 465:Veno-Echo.cpp **** 
 11675              		.loc 20 465 25 view .LVU3292
 11676 0ab0 8DED0F0A 		vstr.32	s0, [sp, #60]
 469:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 11677              		.loc 20 469 9 is_stmt 1 view .LVU3293
 469:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 11678              		.loc 20 469 44 is_stmt 0 view .LVU3294
 11679 0ab4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11680              	.LVL718:
 470:Veno-Echo.cpp **** 
 11681              		.loc 20 470 44 view .LVU3295
 11682 0ab8 0FAA     		add	r2, sp, #60
 11683 0aba 09A9     		add	r1, sp, #36
 11684 0abc 5148     		ldr	r0, .L653+88
 469:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 11685              		.loc 20 469 23 view .LVU3296
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 357


 11686 0abe 8DED080A 		vstr.32	s0, [sp, #32]
 470:Veno-Echo.cpp **** 
 11687              		.loc 20 470 9 is_stmt 1 view .LVU3297
 470:Veno-Echo.cpp **** 
 11688              		.loc 20 470 44 is_stmt 0 view .LVU3298
 11689 0ac2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11690              	.LVL719:
 11691 0ac6 DDED087A 		vldr.32	s15, [sp, #32]
 470:Veno-Echo.cpp **** 
 11692              		.loc 20 470 23 view .LVU3299
 11693 0aca 8DED090A 		vstr.32	s0, [sp, #36]
 11694              	.LBE1900:
 11695 0ace FFF70CBB 		b	.L548
 11696              	.LVL720:
 11697              	.L589:
 470:Veno-Echo.cpp **** 
 11698              		.loc 20 470 23 view .LVU3300
 11699              	.LBE2235:
 11700              	.LBB2236:
 11701              	.LBB1952:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11702              		.loc 20 2000 19 view .LVU3301
 11703 0ad2 B0EE678A 		vmov.f32	s16, s15
 11704              	.LVL721:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11705              		.loc 20 2000 19 view .LVU3302
 11706 0ad6 FFF7BDBB 		b	.L560
 11707              	.LVL722:
 11708              	.L588:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11709              		.loc 20 2000 19 view .LVU3303
 11710              	.LBE1952:
 11711              	.LBE2236:
 11712              	.LBB2237:
 11713              	.LBB1949:
 11714 0ada B0EE670A 		vmov.f32	s0, s15
 11715              	.LVL723:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11716              		.loc 20 2000 19 view .LVU3304
 11717 0ade FFF7A8BB 		b	.L558
 11718              	.LVL724:
 11719              	.L590:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11720              		.loc 20 2000 19 view .LVU3305
 11721              	.LBE1949:
 11722              	.LBE2237:
 11723              	.LBB2238:
 11724              	.LBB1956:
 11725 0ae2 F0EE477A 		vmov.f32	s15, s14
 11726              	.LVL725:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11727              		.loc 20 2000 19 view .LVU3306
 11728 0ae6 FFF7E8BB 		b	.L562
 11729              	.LVL726:
 11730              	.L637:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11731              		.loc 20 2000 19 view .LVU3307
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 358


 11732              	.LBE1956:
 11733              	.LBE2238:
 587:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 11734              		.loc 20 587 13 is_stmt 1 view .LVU3308
 587:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 11735              		.loc 20 587 18 is_stmt 0 view .LVU3309
 11736 0aea DBED006A 		vldr.32	s13, [fp]
 588:Veno-Echo.cpp ****         }
 11737              		.loc 20 588 18 view .LVU3310
 11738 0aee 9BED017A 		vldr.32	s14, [fp, #4]
 587:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 11739              		.loc 20 587 18 view .LVU3311
 11740 0af2 77EEA67A 		vadd.f32	s15, s15, s13
 11741              	.LVL727:
 588:Veno-Echo.cpp ****         }
 11742              		.loc 20 588 13 is_stmt 1 view .LVU3312
 588:Veno-Echo.cpp ****         }
 11743              		.loc 20 588 18 is_stmt 0 view .LVU3313
 11744 0af6 30EE070A 		vadd.f32	s0, s0, s14
 11745              	.LVL728:
 588:Veno-Echo.cpp ****         }
 11746              		.loc 20 588 18 view .LVU3314
 11747 0afa 11E4     		b	.L572
 11748              	.LVL729:
 11749              	.L592:
 11750              	.LBB2239:
 11751              	.LBB1984:
 11752              	.LBB1977:
 11753              	.LBB1969:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11754              		.loc 20 2000 19 view .LVU3315
 11755 0afc B0EE667A 		vmov.f32	s14, s13
 11756              	.LVL730:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11757              		.loc 20 2000 19 view .LVU3316
 11758 0b00 9FED410A 		vldr.32	s0, .L653+92
 11759 0b04 F7E6     		b	.L567
 11760              	.LVL731:
 11761              	.L585:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11762              		.loc 20 2000 19 view .LVU3317
 11763              	.LBE1969:
 11764              	.LBE1977:
 11765              	.LBE1984:
 11766              	.LBE2239:
 11767              	.LBB2240:
 11768              	.LBB1901:
 11769              	.LBB1894:
 11770              	.LBB1892:
 11771 0b06 F0EE667A 		vmov.f32	s15, s13
 11772              	.LVL732:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11773              		.loc 20 2000 19 view .LVU3318
 11774 0b0a A4E7     		b	.L550
 11775              	.LVL733:
 11776              	.L583:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 359


 11777              		.loc 20 2000 19 view .LVU3319
 11778              	.LBE1892:
 11779              	.LBE1894:
 11780              	.LBB1895:
 11781              	.LBB1886:
 11782 0b0c B0EE667A 		vmov.f32	s14, s13
 11783              	.LVL734:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11784              		.loc 20 2000 19 view .LVU3320
 11785 0b10 9FED3D0A 		vldr.32	s0, .L653+92
 11786 0b14 8DE7     		b	.L549
 11787              	.LVL735:
 11788              	.L594:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11789              		.loc 20 2000 19 view .LVU3321
 11790              	.LBE1886:
 11791              	.LBE1895:
 11792              	.LBE1901:
 11793              	.LBE2240:
 11794              	.LBB2241:
 11795              	.LBB1985:
 11796              	.LBB1978:
 11797              	.LBB1975:
 11798 0b16 F0EE667A 		vmov.f32	s15, s13
 11799              	.LVL736:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11800              		.loc 20 2000 19 view .LVU3322
 11801 0b1a FFE6     		b	.L568
 11802              	.LVL737:
 11803              	.L526:
2000:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11804              		.loc 20 2000 19 view .LVU3323
 11805              	.LBE1975:
 11806              	.LBE1978:
 11807              	.LBE1985:
 11808              	.LBE2241:
 11809              	.LBB2242:
 11810              	.LBB2183:
 11811              	.LBB2172:
 116:delayline_reverse.h ****                 }
 11812              		.loc 19 116 21 view .LVU3324
 11813 0b1c AB60     		str	r3, [r5, #8]
 11814 0b1e 5DE6     		b	.L528
 11815              	.LVL738:
 11816              	.L536:
 116:delayline_reverse.h ****                 }
 11817              		.loc 19 116 21 view .LVU3325
 11818              	.LBE2172:
 11819              	.LBE2183:
 11820              	.LBE2242:
 11821              	.LBB2243:
 11822              	.LBB2211:
 11823              	.LBB2206:
 11824 0b20 A260     		str	r2, [r4, #8]
 11825 0b22 38E6     		b	.L538
 11826              	.LVL739:
 11827              	.L505:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 360


 116:delayline_reverse.h ****                 }
 11828              		.loc 19 116 21 view .LVU3326
 11829              	.LBE2206:
 11830              	.LBE2211:
 11831              	.LBE2243:
 11832              	.LBE2259:
 11833              	.LBE2270:
 608:Veno-Echo.cpp **** 
 11834              		.loc 20 608 1 view .LVU3327
 11835 0b24 13B0     		add	sp, sp, #76
 11836              		.cfi_remember_state
 11837              		.cfi_def_cfa_offset 92
 11838              		@ sp needed
 11839 0b26 BDEC0E8B 		vldm	sp!, {d8-d14}
 11840              		.cfi_restore 92
 11841              		.cfi_restore 93
 11842              		.cfi_restore 90
 11843              		.cfi_restore 91
 11844              		.cfi_restore 88
 11845              		.cfi_restore 89
 11846              		.cfi_restore 86
 11847              		.cfi_restore 87
 11848              		.cfi_restore 84
 11849              		.cfi_restore 85
 11850              		.cfi_restore 82
 11851              		.cfi_restore 83
 11852              		.cfi_restore 80
 11853              		.cfi_restore 81
 11854              		.cfi_def_cfa_offset 36
 11855 0b2a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 11856              	.LVL740:
 11857              	.L543:
 11858              		.cfi_restore_state
 11859              	.LBB2271:
 11860              	.LBB2260:
 11861              	.LBB2244:
 11862              	.LBB2212:
 11863              	.LBB2207:
 145:delayline_reverse.h ****                     playinghead_ = false;
 11864              		.loc 19 145 21 view .LVU3328
 11865 0b2e 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11866              		.loc 19 144 21 view .LVU3329
 11867 0b30 039C     		ldr	r4, [sp, #12]
 11868              	.LVL741:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11869              		.loc 19 144 21 view .LVU3330
 11870 0b32 2260     		str	r2, [r4]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 11871              		.loc 19 145 21 view .LVU3331
 11872 0b34 1970     		strb	r1, [r3]
 146:delayline_reverse.h ****                 }
 11873              		.loc 19 146 21 view .LVU3332
 11874 0b36 0170     		strb	r1, [r0]
 11875 0b38 FAE5     		b	.L540
 11876              	.LVL742:
 11877              	.L533:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 361


 146:delayline_reverse.h ****                 }
 11878              		.loc 19 146 21 view .LVU3333
 11879              	.LBE2207:
 11880              	.LBE2212:
 11881              	.LBE2244:
 11882              	.LBB2245:
 11883              	.LBB2184:
 11884              	.LBB2173:
 145:delayline_reverse.h ****                     playinghead_ = false;
 11885              		.loc 19 145 21 view .LVU3334
 11886 0b3a 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11887              		.loc 19 144 21 view .LVU3335
 11888 0b3c 049D     		ldr	r5, [sp, #16]
 11889              	.LVL743:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11890              		.loc 19 144 21 view .LVU3336
 11891 0b3e 2B60     		str	r3, [r5]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 11892              		.loc 19 145 21 view .LVU3337
 11893 0b40 1170     		strb	r1, [r2]
 146:delayline_reverse.h ****                 }
 11894              		.loc 19 146 21 view .LVU3338
 11895 0b42 0170     		strb	r1, [r0]
 11896 0b44 8BE5     		b	.L530
 11897              	.LVL744:
 11898              	.L644:
 146:delayline_reverse.h ****                 }
 11899              		.loc 19 146 21 view .LVU3339
 11900              	.LBE2173:
 11901              	.LBE2184:
 11902              	.LBE2245:
 11903              	.LBB2246:
 11904              	.LBB2213:
 11905              	.LBB2208:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 11906              		.loc 19 130 17 view .LVU3340
 11907 0b46 C2ED007A 		vstr.32	s15, [r2]
 11908 0b4a F1E5     		b	.L540
 11909              	.LVL745:
 11910              	.L593:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 11911              		.loc 19 130 17 view .LVU3341
 11912              	.LBE2208:
 11913              	.LBE2213:
 11914              	.LBE2246:
 11915              	.LBB2247:
 11916              	.LBB1986:
 11917              	.LBB1979:
 11918              	.LBB1970:
2002:Veno-Echo.cpp ****     else
 11919              		.loc 20 2002 19 view .LVU3342
 11920 0b4c B0EE667A 		vmov.f32	s14, s13
 11921              	.LVL746:
2002:Veno-Echo.cpp ****     else
 11922              		.loc 20 2002 19 view .LVU3343
 11923 0b50 9FED2E0A 		vldr.32	s0, .L653+96
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 362


 11924 0b54 CFE6     		b	.L567
 11925              	.LVL747:
 11926              	.L584:
2002:Veno-Echo.cpp ****     else
 11927              		.loc 20 2002 19 view .LVU3344
 11928              	.LBE1970:
 11929              	.LBE1979:
 11930              	.LBE1986:
 11931              	.LBE2247:
 11932              	.LBB2248:
 11933              	.LBB1902:
 11934              	.LBB1896:
 11935              	.LBB1887:
 11936 0b56 B0EE667A 		vmov.f32	s14, s13
 11937              	.LVL748:
2002:Veno-Echo.cpp ****     else
 11938              		.loc 20 2002 19 view .LVU3345
 11939 0b5a 9FED2C0A 		vldr.32	s0, .L653+96
 11940 0b5e 68E7     		b	.L549
 11941              	.LVL749:
 11942              	.L507:
2002:Veno-Echo.cpp ****     else
 11943              		.loc 20 2002 19 view .LVU3346
 11944              	.LBE1887:
 11945              	.LBE1896:
 11946              	.LBE1902:
 11947              	.LBE2248:
 11948              	.LBE2260:
 11949              	.LBE2271:
 371:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 11950              		.loc 20 371 13 is_stmt 1 view .LVU3347
 372:Veno-Echo.cpp ****                 {
 11951              		.loc 20 372 17 view .LVU3348
 372:Veno-Echo.cpp ****                 {
 11952              		.loc 20 372 30 is_stmt 0 view .LVU3349
 11953 0b60 2B4B     		ldr	r3, .L653+100
 372:Veno-Echo.cpp ****                 {
 11954              		.loc 20 372 17 view .LVU3350
 11955 0b62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11956 0b64 022B     		cmp	r3, #2
 11957 0b66 3FF47EAA 		beq	.L506
 374:Veno-Echo.cpp ****                 }
 11958              		.loc 20 374 21 is_stmt 1 view .LVU3351
 374:Veno-Echo.cpp ****                 }
 11959              		.loc 20 374 39 is_stmt 0 view .LVU3352
 11960 0b6a FFF7FEFF 		bl	_Z18Update_filterXfadev
 11961              	.LVL750:
 374:Veno-Echo.cpp ****                 }
 11962              		.loc 20 374 39 view .LVU3353
 11963 0b6e FFF77ABA 		b	.L506
 11964              	.LVL751:
 11965              	.L522:
 291:Veno-Echo.cpp ****                 Update_Buttons();
 11966              		.loc 20 291 13 is_stmt 1 view .LVU3354
 292:Veno-Echo.cpp ****                 GetModCV();
 11967              		.loc 20 292 17 view .LVU3355
 292:Veno-Echo.cpp ****                 GetModCV();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 363


 11968              		.loc 20 292 31 is_stmt 0 view .LVU3356
 11969 0b72 FFF7FEFF 		bl	_Z14Update_Buttonsv
 11970              	.LVL752:
 293:Veno-Echo.cpp ****                 Update_DelayBaseTempo();
 11971              		.loc 20 293 17 is_stmt 1 view .LVU3357
 293:Veno-Echo.cpp ****                 Update_DelayBaseTempo();
 11972              		.loc 20 293 25 is_stmt 0 view .LVU3358
 11973 0b76 FFF7FEFF 		bl	_Z8GetModCVv
 11974              	.LVL753:
 294:Veno-Echo.cpp ****                 Update_DelayTempoLEDs();
 11975              		.loc 20 294 17 is_stmt 1 view .LVU3359
 294:Veno-Echo.cpp ****                 Update_DelayTempoLEDs();
 11976              		.loc 20 294 38 is_stmt 0 view .LVU3360
 11977 0b7a FFF7FEFF 		bl	_Z21Update_DelayBaseTempov
 11978              	.LVL754:
 295:Veno-Echo.cpp ****             break;
 11979              		.loc 20 295 17 is_stmt 1 view .LVU3361
 295:Veno-Echo.cpp ****             break;
 11980              		.loc 20 295 38 is_stmt 0 view .LVU3362
 11981 0b7e FFF7FEFF 		bl	_Z21Update_DelayTempoLEDsv
 11982              	.LVL755:
 296:Veno-Echo.cpp **** 
 11983              		.loc 20 296 13 is_stmt 1 view .LVU3363
 11984 0b82 FFF770BA 		b	.L506
 11985              	.LVL756:
 11986              	.L520:
 302:Veno-Echo.cpp ****                 if(saveState != SAVING)
 11987              		.loc 20 302 13 view .LVU3364
 303:Veno-Echo.cpp ****                 {
 11988              		.loc 20 303 17 view .LVU3365
 303:Veno-Echo.cpp ****                 {
 11989              		.loc 20 303 30 is_stmt 0 view .LVU3366
 11990 0b86 224B     		ldr	r3, .L653+100
 303:Veno-Echo.cpp ****                 {
 11991              		.loc 20 303 17 view .LVU3367
 11992 0b88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11993 0b8a 022B     		cmp	r3, #2
 11994 0b8c 3FF46BAA 		beq	.L506
 305:Veno-Echo.cpp ****                 }
 11995              		.loc 20 305 21 is_stmt 1 view .LVU3368
 305:Veno-Echo.cpp ****                 }
 11996              		.loc 20 305 38 is_stmt 0 view .LVU3369
 11997 0b90 FFF7FEFF 		bl	_Z17Update_DelayTimeLv
 11998              	.LVL757:
 305:Veno-Echo.cpp ****                 }
 11999              		.loc 20 305 38 view .LVU3370
 12000 0b94 FFF767BA 		b	.L506
 12001              	.LVL758:
 12002              	.L519:
 309:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 12003              		.loc 20 309 13 is_stmt 1 view .LVU3371
 310:Veno-Echo.cpp ****             break;
 12004              		.loc 20 310 17 view .LVU3372
 12005              	.LBB2272:
 12006              	.LBI2272:
 943:Veno-Echo.cpp **** {
 12007              		.loc 20 943 6 view .LVU3373
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 364


 12008              	.LBB2273:
 945:Veno-Echo.cpp **** }
 12009              		.loc 20 945 5 view .LVU3374
 945:Veno-Echo.cpp **** }
 12010              		.loc 20 945 36 is_stmt 0 view .LVU3375
 12011 0b98 0121     		movs	r1, #1
 12012              	.LVL759:
 945:Veno-Echo.cpp **** }
 12013              		.loc 20 945 36 view .LVU3376
 12014 0b9a 1E48     		ldr	r0, .L653+104
 12015              	.LVL760:
 945:Veno-Echo.cpp **** }
 12016              		.loc 20 945 36 view .LVU3377
 12017 0b9c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12018              	.LVL761:
 945:Veno-Echo.cpp **** }
 12019              		.loc 20 945 19 view .LVU3378
 12020 0ba0 1D4B     		ldr	r3, .L653+108
 12021 0ba2 83ED000A 		vstr.32	s0, [r3]
 946:Veno-Echo.cpp **** 
 12022              		.loc 20 946 1 view .LVU3379
 12023 0ba6 FFF75EBA 		b	.L506
 12024              	.L654:
 12025 0baa 00BF     		.align	2
 12026              	.L653:
 12027 0bac 00000000 		.word	.LANCHOR83
 12028 0bb0 CDCCCC3D 		.word	1036831949
 12029 0bb4 00000000 		.word	.LANCHOR49
 12030 0bb8 00000000 		.word	.LANCHOR50
 12031 0bbc 00000000 		.word	.LANCHOR124
 12032 0bc0 00000000 		.word	.LANCHOR125
 12033 0bc4 00000000 		.word	.LANCHOR37
 12034 0bc8 00000000 		.word	.LANCHOR38
 12035 0bcc 00000000 		.word	.LANCHOR122
 12036 0bd0 00000000 		.word	.LANCHOR123
 12037 0bd4 00000000 		.word	.LANCHOR128
 12038 0bd8 00000000 		.word	.LANCHOR129
 12039 0bdc 00000000 		.word	0
 12040 0be0 00000000 		.word	.LANCHOR47
 12041 0be4 00000000 		.word	.LANCHOR48
 12042 0be8 00000000 		.word	.LANCHOR120
 12043 0bec 00000000 		.word	.LANCHOR121
 12044 0bf0 00000000 		.word	.LANCHOR35
 12045 0bf4 00000000 		.word	.LANCHOR36
 12046 0bf8 00000000 		.word	.LANCHOR118
 12047 0bfc 00000000 		.word	.LANCHOR119
 12048 0c00 00000000 		.word	.LANCHOR126
 12049 0c04 00000000 		.word	.LANCHOR127
 12050 0c08 CDCC4C3E 		.word	1045220557
 12051 0c0c CDCC4CBE 		.word	3192704205
 12052 0c10 00000000 		.word	.LANCHOR110
 12053 0c14 18000000 		.word	.LANCHOR4+24
 12054 0c18 00000000 		.word	.LANCHOR17
 12055              	.LVL762:
 12056              	.L518:
 946:Veno-Echo.cpp **** 
 12057              		.loc 20 946 1 view .LVU3380
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 365


 12058              	.LBE2273:
 12059              	.LBE2272:
 313:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12060              		.loc 20 313 13 is_stmt 1 view .LVU3381
 314:Veno-Echo.cpp ****                 {
 12061              		.loc 20 314 17 view .LVU3382
 314:Veno-Echo.cpp ****                 {
 12062              		.loc 20 314 30 is_stmt 0 view .LVU3383
 12063 0c1c 2C4B     		ldr	r3, .L655
 314:Veno-Echo.cpp ****                 {
 12064              		.loc 20 314 17 view .LVU3384
 12065 0c1e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12066 0c20 022B     		cmp	r3, #2
 12067 0c22 3FF420AA 		beq	.L506
 316:Veno-Echo.cpp ****                 }
 12068              		.loc 20 316 21 is_stmt 1 view .LVU3385
 316:Veno-Echo.cpp ****                 }
 12069              		.loc 20 316 38 is_stmt 0 view .LVU3386
 12070 0c26 FFF7FEFF 		bl	_Z17Update_DelayTimeRv
 12071              	.LVL763:
 316:Veno-Echo.cpp ****                 }
 12072              		.loc 20 316 38 view .LVU3387
 12073 0c2a FFF71CBA 		b	.L506
 12074              	.LVL764:
 12075              	.L517:
 320:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 12076              		.loc 20 320 13 is_stmt 1 view .LVU3388
 321:Veno-Echo.cpp ****             break;
 12077              		.loc 20 321 17 view .LVU3389
 12078              	.LBB2274:
 12079              	.LBI2274:
1042:Veno-Echo.cpp **** {
 12080              		.loc 20 1042 6 view .LVU3390
 12081              	.LBB2275:
1044:Veno-Echo.cpp **** }
 12082              		.loc 20 1044 5 view .LVU3391
1044:Veno-Echo.cpp **** }
 12083              		.loc 20 1044 35 is_stmt 0 view .LVU3392
 12084 0c2e 0221     		movs	r1, #2
 12085              	.LVL765:
1044:Veno-Echo.cpp **** }
 12086              		.loc 20 1044 35 view .LVU3393
 12087 0c30 2848     		ldr	r0, .L655+4
 12088              	.LVL766:
1044:Veno-Echo.cpp **** }
 12089              		.loc 20 1044 35 view .LVU3394
 12090 0c32 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12091              	.LVL767:
1044:Veno-Echo.cpp **** }
 12092              		.loc 20 1044 18 view .LVU3395
 12093 0c36 284B     		ldr	r3, .L655+8
 12094 0c38 83ED000A 		vstr.32	s0, [r3]
1045:Veno-Echo.cpp **** void Update_feedbackL()
 12095              		.loc 20 1045 1 view .LVU3396
 12096 0c3c FFF713BA 		b	.L506
 12097              	.LVL768:
 12098              	.L516:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 366


1045:Veno-Echo.cpp **** void Update_feedbackL()
 12099              		.loc 20 1045 1 view .LVU3397
 12100              	.LBE2275:
 12101              	.LBE2274:
 324:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12102              		.loc 20 324 13 is_stmt 1 view .LVU3398
 325:Veno-Echo.cpp ****                 {
 12103              		.loc 20 325 17 view .LVU3399
 325:Veno-Echo.cpp ****                 {
 12104              		.loc 20 325 30 is_stmt 0 view .LVU3400
 12105 0c40 234B     		ldr	r3, .L655
 325:Veno-Echo.cpp ****                 {
 12106              		.loc 20 325 17 view .LVU3401
 12107 0c42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12108 0c44 022B     		cmp	r3, #2
 12109 0c46 3FF40EAA 		beq	.L506
 327:Veno-Echo.cpp ****                 }
 12110              		.loc 20 327 21 is_stmt 1 view .LVU3402
 327:Veno-Echo.cpp ****                 }
 12111              		.loc 20 327 37 is_stmt 0 view .LVU3403
 12112 0c4a FFF7FEFF 		bl	_Z16Update_feedbackLv
 12113              	.LVL769:
 327:Veno-Echo.cpp ****                 }
 12114              		.loc 20 327 37 view .LVU3404
 12115 0c4e FFF70ABA 		b	.L506
 12116              	.LVL770:
 12117              	.L515:
 331:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 12118              		.loc 20 331 13 is_stmt 1 view .LVU3405
 332:Veno-Echo.cpp ****             break;
 12119              		.loc 20 332 17 view .LVU3406
 12120              	.LBB2276:
 12121              	.LBI2276:
1131:Veno-Echo.cpp **** {
 12122              		.loc 20 1131 6 view .LVU3407
 12123              	.LBB2277:
1133:Veno-Echo.cpp **** }
 12124              		.loc 20 1133 5 view .LVU3408
1133:Veno-Echo.cpp **** }
 12125              		.loc 20 1133 35 is_stmt 0 view .LVU3409
 12126 0c52 0321     		movs	r1, #3
 12127              	.LVL771:
1133:Veno-Echo.cpp **** }
 12128              		.loc 20 1133 35 view .LVU3410
 12129 0c54 1F48     		ldr	r0, .L655+4
 12130              	.LVL772:
1133:Veno-Echo.cpp **** }
 12131              		.loc 20 1133 35 view .LVU3411
 12132 0c56 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12133              	.LVL773:
1133:Veno-Echo.cpp **** }
 12134              		.loc 20 1133 18 view .LVU3412
 12135 0c5a 204B     		ldr	r3, .L655+12
 12136 0c5c 83ED000A 		vstr.32	s0, [r3]
1134:Veno-Echo.cpp **** 
 12137              		.loc 20 1134 1 view .LVU3413
 12138 0c60 FFF701BA 		b	.L506
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 367


 12139              	.LVL774:
 12140              	.L514:
1134:Veno-Echo.cpp **** 
 12141              		.loc 20 1134 1 view .LVU3414
 12142              	.LBE2277:
 12143              	.LBE2276:
 335:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12144              		.loc 20 335 13 is_stmt 1 view .LVU3415
 336:Veno-Echo.cpp ****                 {
 12145              		.loc 20 336 17 view .LVU3416
 336:Veno-Echo.cpp ****                 {
 12146              		.loc 20 336 30 is_stmt 0 view .LVU3417
 12147 0c64 1A4B     		ldr	r3, .L655
 336:Veno-Echo.cpp ****                 {
 12148              		.loc 20 336 17 view .LVU3418
 12149 0c66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12150 0c68 022B     		cmp	r3, #2
 12151 0c6a 3FF4FCA9 		beq	.L506
 338:Veno-Echo.cpp ****                 }
 12152              		.loc 20 338 21 is_stmt 1 view .LVU3419
 338:Veno-Echo.cpp ****                 }
 12153              		.loc 20 338 37 is_stmt 0 view .LVU3420
 12154 0c6e FFF7FEFF 		bl	_Z16Update_feedbackRv
 12155              	.LVL775:
 338:Veno-Echo.cpp ****                 }
 12156              		.loc 20 338 37 view .LVU3421
 12157 0c72 FFF7F8B9 		b	.L506
 12158              	.LVL776:
 12159              	.L513:
 342:Veno-Echo.cpp ****                 Update_drywet_CV();
 12160              		.loc 20 342 13 is_stmt 1 view .LVU3422
 343:Veno-Echo.cpp ****             break;
 12161              		.loc 20 343 17 view .LVU3423
 12162              	.LBB2278:
 12163              	.LBI2278:
1222:Veno-Echo.cpp **** {
 12164              		.loc 20 1222 6 view .LVU3424
 12165              	.LBB2279:
1224:Veno-Echo.cpp **** }
 12166              		.loc 20 1224 5 view .LVU3425
1224:Veno-Echo.cpp **** }
 12167              		.loc 20 1224 32 is_stmt 0 view .LVU3426
 12168 0c76 0421     		movs	r1, #4
 12169              	.LVL777:
1224:Veno-Echo.cpp **** }
 12170              		.loc 20 1224 32 view .LVU3427
 12171 0c78 1648     		ldr	r0, .L655+4
 12172              	.LVL778:
1224:Veno-Echo.cpp **** }
 12173              		.loc 20 1224 32 view .LVU3428
 12174 0c7a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12175              	.LVL779:
1224:Veno-Echo.cpp **** }
 12176              		.loc 20 1224 15 view .LVU3429
 12177 0c7e 184B     		ldr	r3, .L655+16
 12178 0c80 83ED000A 		vstr.32	s0, [r3]
1225:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 368


 12179              		.loc 20 1225 1 view .LVU3430
 12180 0c84 FFF7EFB9 		b	.L506
 12181              	.LVL780:
 12182              	.L512:
1225:Veno-Echo.cpp **** 
 12183              		.loc 20 1225 1 view .LVU3431
 12184              	.LBE2279:
 12185              	.LBE2278:
 346:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12186              		.loc 20 346 13 is_stmt 1 view .LVU3432
 347:Veno-Echo.cpp ****                 {
 12187              		.loc 20 347 17 view .LVU3433
 347:Veno-Echo.cpp ****                 {
 12188              		.loc 20 347 30 is_stmt 0 view .LVU3434
 12189 0c88 114B     		ldr	r3, .L655
 347:Veno-Echo.cpp ****                 {
 12190              		.loc 20 347 17 view .LVU3435
 12191 0c8a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12192 0c8c 022B     		cmp	r3, #2
 12193 0c8e 3FF4EAA9 		beq	.L506
 349:Veno-Echo.cpp ****                 }
 12194              		.loc 20 349 21 is_stmt 1 view .LVU3436
 349:Veno-Echo.cpp ****                 }
 12195              		.loc 20 349 34 is_stmt 0 view .LVU3437
 12196 0c92 FFF7FEFF 		bl	_Z13Update_drywetv
 12197              	.LVL781:
 349:Veno-Echo.cpp ****                 }
 12198              		.loc 20 349 34 view .LVU3438
 12199 0c96 FFF7E6B9 		b	.L506
 12200              	.LVL782:
 12201              	.L511:
 353:Veno-Echo.cpp ****                 Update_width_CV();
 12202              		.loc 20 353 13 is_stmt 1 view .LVU3439
 354:Veno-Echo.cpp ****             break;
 12203              		.loc 20 354 17 view .LVU3440
 12204              	.LBB2280:
 12205              	.LBI2280:
1337:Veno-Echo.cpp **** {
 12206              		.loc 20 1337 6 view .LVU3441
 12207              	.LBB2281:
1339:Veno-Echo.cpp **** }
 12208              		.loc 20 1339 5 view .LVU3442
1339:Veno-Echo.cpp **** }
 12209              		.loc 20 1339 30 is_stmt 0 view .LVU3443
 12210 0c9a 0521     		movs	r1, #5
 12211              	.LVL783:
1339:Veno-Echo.cpp **** }
 12212              		.loc 20 1339 30 view .LVU3444
 12213 0c9c 0D48     		ldr	r0, .L655+4
 12214              	.LVL784:
1339:Veno-Echo.cpp **** }
 12215              		.loc 20 1339 30 view .LVU3445
 12216 0c9e FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12217              	.LVL785:
1339:Veno-Echo.cpp **** }
 12218              		.loc 20 1339 13 view .LVU3446
 12219 0ca2 104B     		ldr	r3, .L655+20
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 369


 12220 0ca4 83ED000A 		vstr.32	s0, [r3]
1340:Veno-Echo.cpp **** 
 12221              		.loc 20 1340 1 view .LVU3447
 12222 0ca8 FFF7DDB9 		b	.L506
 12223              	.LVL786:
 12224              	.L510:
1340:Veno-Echo.cpp **** 
 12225              		.loc 20 1340 1 view .LVU3448
 12226              	.LBE2281:
 12227              	.LBE2280:
 357:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12228              		.loc 20 357 13 is_stmt 1 view .LVU3449
 358:Veno-Echo.cpp ****                 {
 12229              		.loc 20 358 17 view .LVU3450
 358:Veno-Echo.cpp ****                 {
 12230              		.loc 20 358 30 is_stmt 0 view .LVU3451
 12231 0cac 084B     		ldr	r3, .L655
 358:Veno-Echo.cpp ****                 {
 12232              		.loc 20 358 17 view .LVU3452
 12233 0cae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12234 0cb0 022B     		cmp	r3, #2
 12235 0cb2 3FF4D8A9 		beq	.L506
 360:Veno-Echo.cpp ****                 }
 12236              		.loc 20 360 21 is_stmt 1 view .LVU3453
 360:Veno-Echo.cpp ****                 }
 12237              		.loc 20 360 33 is_stmt 0 view .LVU3454
 12238 0cb6 FFF7FEFF 		bl	_Z12Update_widthv
 12239              	.LVL787:
 360:Veno-Echo.cpp ****                 }
 12240              		.loc 20 360 33 view .LVU3455
 12241 0cba FFF7D4B9 		b	.L506
 12242              	.LVL788:
 12243              	.L509:
 364:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12244              		.loc 20 364 13 is_stmt 1 view .LVU3456
 365:Veno-Echo.cpp ****                 {
 12245              		.loc 20 365 17 view .LVU3457
 365:Veno-Echo.cpp ****                 {
 12246              		.loc 20 365 30 is_stmt 0 view .LVU3458
 12247 0cbe 044B     		ldr	r3, .L655
 365:Veno-Echo.cpp ****                 {
 12248              		.loc 20 365 17 view .LVU3459
 12249 0cc0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12250 0cc2 022B     		cmp	r3, #2
 12251 0cc4 3FF4CFA9 		beq	.L506
 367:Veno-Echo.cpp ****                 }
 12252              		.loc 20 367 21 is_stmt 1 view .LVU3460
 367:Veno-Echo.cpp ****                 }
 12253              		.loc 20 367 41 is_stmt 0 view .LVU3461
 12254 0cc8 FFF7FEFF 		bl	_Z20Update_crossfeedbackv
 12255              	.LVL789:
 367:Veno-Echo.cpp ****                 }
 12256              		.loc 20 367 41 view .LVU3462
 12257 0ccc FFF7CBB9 		b	.L506
 12258              	.L656:
 12259              		.align	2
 12260              	.L655:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 370


 12261 0cd0 00000000 		.word	.LANCHOR110
 12262 0cd4 18000000 		.word	.LANCHOR4+24
 12263 0cd8 00000000 		.word	.LANCHOR27
 12264 0cdc 00000000 		.word	.LANCHOR39
 12265 0ce0 00000000 		.word	.LANCHOR51
 12266 0ce4 00000000 		.word	.LANCHOR59
 12267              		.cfi_endproc
 12268              	.LFE4309:
 12270              		.section	.text._Z9HardLimitff,"ax",%progbits
 12271              		.align	1
 12272              		.p2align 2,,3
 12273              		.global	_Z9HardLimitff
 12274              		.syntax unified
 12275              		.thumb
 12276              		.thumb_func
 12277              		.fpu fpv5-d16
 12279              	_Z9HardLimitff:
 12280              	.LVL790:
 12281              	.LFB4336:
1997:Veno-Echo.cpp ****     float returnval{};
 12282              		.loc 20 1997 1 is_stmt 1 view -0
 12283              		.cfi_startproc
 12284              		@ args = 0, pretend = 0, frame = 0
 12285              		@ frame_needed = 0, uses_anonymous_args = 0
 12286              		@ link register save eliminated.
1998:Veno-Echo.cpp ****     if (input > limit)
 12287              		.loc 20 1998 5 view .LVU3464
1999:Veno-Echo.cpp ****         returnval = limit;
 12288              		.loc 20 1999 5 view .LVU3465
 12289 0000 B4EEE00A 		vcmpe.f32	s0, s1
 12290 0004 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12291 0008 07DC     		bgt	.L658
2001:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 12292              		.loc 20 2001 10 view .LVU3466
2001:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 12293              		.loc 20 2001 28 is_stmt 0 view .LVU3467
 12294 000a F1EE600A 		vneg.f32	s1, s1
 12295              	.LVL791:
2001:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 12296              		.loc 20 2001 10 view .LVU3468
 12297 000e F4EEC00A 		vcmpe.f32	s1, s0
 12298 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
2004:Veno-Echo.cpp **** 
 12299              		.loc 20 2004 19 view .LVU3469
 12300 0016 70FE800A 		vselgt.f32	s1, s1, s0
 12301              	.L658:
 12302              	.LVL792:
2006:Veno-Echo.cpp **** }
 12303              		.loc 20 2006 5 is_stmt 1 view .LVU3470
2007:Veno-Echo.cpp **** 
 12304              		.loc 20 2007 1 is_stmt 0 view .LVU3471
 12305 001a B0EE600A 		vmov.f32	s0, s1
 12306              	.LVL793:
2007:Veno-Echo.cpp **** 
 12307              		.loc 20 2007 1 view .LVU3472
 12308 001e 7047     		bx	lr
 12309              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 371


 12310              	.LFE4336:
 12312              		.section	.text._Z10PotCVComboff,"ax",%progbits
 12313              		.align	1
 12314              		.p2align 2,,3
 12315              		.global	_Z10PotCVComboff
 12316              		.syntax unified
 12317              		.thumb
 12318              		.thumb_func
 12319              		.fpu fpv5-d16
 12321              	_Z10PotCVComboff:
 12322              	.LVL794:
 12323              	.LFB4337:
2010:Veno-Echo.cpp ****     float output{};
 12324              		.loc 20 2010 1 is_stmt 1 view -0
 12325              		.cfi_startproc
 12326              		@ args = 0, pretend = 0, frame = 0
 12327              		@ frame_needed = 0, uses_anonymous_args = 0
 12328              		@ link register save eliminated.
2011:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 12329              		.loc 20 2011 5 view .LVU3474
2012:Veno-Echo.cpp **** 
 12330              		.loc 20 2012 5 view .LVU3475
2012:Veno-Echo.cpp **** 
 12331              		.loc 20 2012 39 is_stmt 0 view .LVU3476
 12332 0000 F7EE007A 		vmov.f32	s15, #1.0e+0
2012:Veno-Echo.cpp **** 
 12333              		.loc 20 2012 49 view .LVU3477
 12334 0004 F6EE006A 		vmov.f32	s13, #5.0e-1
2012:Veno-Echo.cpp **** 
 12335              		.loc 20 2012 12 view .LVU3478
 12336 0008 B0EE007A 		vmov.f32	s14, #2.0e+0
2012:Veno-Echo.cpp **** 
 12337              		.loc 20 2012 39 view .LVU3479
 12338 000c 77EEE00A 		vsub.f32	s1, s15, s1
 12339              	.LVL795:
2012:Veno-Echo.cpp **** 
 12340              		.loc 20 2012 49 view .LVU3480
 12341 0010 70EEE60A 		vsub.f32	s1, s1, s13
2012:Veno-Echo.cpp **** 
 12342              		.loc 20 2012 12 view .LVU3481
 12343 0014 A0EE870A 		vfma.f32	s0, s1, s14
 12344              	.LVL796:
2014:Veno-Echo.cpp ****     {
 12345              		.loc 20 2014 5 is_stmt 1 view .LVU3482
 12346 0018 B5EEC00A 		vcmpe.f32	s0, #0
 12347 001c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12348 0020 06D4     		bmi	.L664
2019:Veno-Echo.cpp ****     {
 12349              		.loc 20 2019 5 view .LVU3483
2021:Veno-Echo.cpp ****     }
 12350              		.loc 20 2021 16 is_stmt 0 view .LVU3484
 12351 0022 B4EE670A 		vcmp.f32	s0, s15
 12352 0026 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12353 002a 37FE800A 		vselgt.f32	s0, s15, s0
 12354              	.LVL797:
2021:Veno-Echo.cpp ****     }
 12355              		.loc 20 2021 16 view .LVU3485
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 372


 12356 002e 7047     		bx	lr
 12357              	.LVL798:
 12358              	.L664:
2016:Veno-Echo.cpp ****     }
 12359              		.loc 20 2016 16 view .LVU3486
 12360 0030 9FED010A 		vldr.32	s0, .L666
 12361              	.LVL799:
2024:Veno-Echo.cpp **** }
 12362              		.loc 20 2024 5 is_stmt 1 view .LVU3487
2025:Veno-Echo.cpp **** 
 12363              		.loc 20 2025 1 is_stmt 0 view .LVU3488
 12364 0034 7047     		bx	lr
 12365              	.L667:
 12366 0036 00BF     		.align	2
 12367              	.L666:
 12368 0038 00000000 		.word	0
 12369              		.cfi_endproc
 12370              	.LFE4337:
 12372              		.section	.text._Z16checkPickupStateffbb,"ax",%progbits
 12373              		.align	1
 12374              		.p2align 2,,3
 12375              		.global	_Z16checkPickupStateffbb
 12376              		.syntax unified
 12377              		.thumb
 12378              		.thumb_func
 12379              		.fpu fpv5-d16
 12381              	_Z16checkPickupStateffbb:
 12382              	.LVL800:
 12383              	.LFB4338:
2029:Veno-Echo.cpp ****     bool retval{};
 12384              		.loc 20 2029 1 is_stmt 1 view -0
 12385              		.cfi_startproc
 12386              		@ args = 0, pretend = 0, frame = 0
 12387              		@ frame_needed = 0, uses_anonymous_args = 0
 12388              		@ link register save eliminated.
2030:Veno-Echo.cpp ****     
 12389              		.loc 20 2030 5 view .LVU3490
2032:Veno-Echo.cpp ****     {
 12390              		.loc 20 2032 5 view .LVU3491
 12391 0000 69B1     		cbz	r1, .L669
2034:Veno-Echo.cpp ****         {
 12392              		.loc 20 2034 9 view .LVU3492
 12393              	.LVL801:
 12394              	.LBB2282:
 12395              	.LBI2282:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 12396              		.loc 21 75 3 view .LVU3493
 12397              	.LBB2283:
 12398              		.loc 21 76 5 view .LVU3494
 12399              		.loc 21 76 5 is_stmt 0 view .LVU3495
 12400              	.LBE2283:
 12401              	.LBE2282:
2034:Veno-Echo.cpp ****         {
 12402              		.loc 20 2034 15 view .LVU3496
 12403 0002 70EE600A 		vsub.f32	s1, s0, s1
 12404              	.LVL802:
2034:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 373


 12405              		.loc 20 2034 9 view .LVU3497
 12406 0006 DFED0D7A 		vldr.32	s15, .L672
 12407              	.LBB2285:
 12408              	.LBB2284:
 12409              		.loc 21 76 31 view .LVU3498
 12410 000a B0EEE00A 		vabs.f32	s0, s1
 12411              	.LVL803:
 12412              		.loc 21 76 31 view .LVU3499
 12413              	.LBE2284:
 12414              	.LBE2285:
2034:Veno-Echo.cpp ****         {
 12415              		.loc 20 2034 9 view .LVU3500
 12416 000e B4EEE70A 		vcmpe.f32	s0, s15
 12417 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12418 0016 D4BF     		ite	le
 12419 0018 0120     		movle	r0, #1
 12420              	.LVL804:
2034:Veno-Echo.cpp ****         {
 12421              		.loc 20 2034 9 view .LVU3501
 12422 001a 0020     		movgt	r0, #0
 12423 001c 7047     		bx	lr
 12424              	.LVL805:
 12425              	.L669:
2046:Veno-Echo.cpp ****     {
 12426              		.loc 20 2046 5 is_stmt 1 view .LVU3502
 12427 001e 60B9     		cbnz	r0, .L670
2048:Veno-Echo.cpp ****         {
 12428              		.loc 20 2048 9 view .LVU3503
 12429              	.LVL806:
 12430              	.LBB2286:
 12431              	.LBI2286:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 12432              		.loc 21 75 3 view .LVU3504
 12433              	.LBB2287:
 12434              		.loc 21 76 5 view .LVU3505
 12435              		.loc 21 76 5 is_stmt 0 view .LVU3506
 12436              	.LBE2287:
 12437              	.LBE2286:
2048:Veno-Echo.cpp ****         {
 12438              		.loc 20 2048 15 view .LVU3507
 12439 0020 30EE600A 		vsub.f32	s0, s0, s1
 12440              	.LVL807:
2048:Veno-Echo.cpp ****         {
 12441              		.loc 20 2048 9 view .LVU3508
 12442 0024 DFED057A 		vldr.32	s15, .L672
 12443              	.LBB2289:
 12444              	.LBB2288:
 12445              		.loc 21 76 31 view .LVU3509
 12446 0028 B0EEC00A 		vabs.f32	s0, s0
 12447              	.LBE2288:
 12448              	.LBE2289:
2048:Veno-Echo.cpp ****         {
 12449              		.loc 20 2048 9 view .LVU3510
 12450 002c B4EEE70A 		vcmpe.f32	s0, s15
 12451 0030 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12452 0034 CCBF     		ite	gt
 12453 0036 0120     		movgt	r0, #1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 374


 12454              	.LVL808:
2048:Veno-Echo.cpp ****         {
 12455              		.loc 20 2048 9 view .LVU3511
 12456 0038 0020     		movle	r0, #0
 12457              	.L670:
 12458              	.LVL809:
2065:Veno-Echo.cpp **** 
 12459              		.loc 20 2065 5 is_stmt 1 view .LVU3512
2067:Veno-Echo.cpp **** 
 12460              		.loc 20 2067 1 is_stmt 0 view .LVU3513
 12461 003a 7047     		bx	lr
 12462              	.L673:
 12463              		.align	2
 12464              	.L672:
 12465 003c 0AD7A33B 		.word	1000593162
 12466              		.cfi_endproc
 12467              	.LFE4338:
 12469              		.section	.text._Z20checkPickupState_altff11pickupStateb,"ax",%progbits
 12470              		.align	1
 12471              		.p2align 2,,3
 12472              		.global	_Z20checkPickupState_altff11pickupStateb
 12473              		.syntax unified
 12474              		.thumb
 12475              		.thumb_func
 12476              		.fpu fpv5-d16
 12478              	_Z20checkPickupState_altff11pickupStateb:
 12479              	.LVL810:
 12480              	.LFB4339:
2071:Veno-Echo.cpp ****     pickupState retval{};
 12481              		.loc 20 2071 1 is_stmt 1 view -0
 12482              		.cfi_startproc
 12483              		@ args = 0, pretend = 0, frame = 0
 12484              		@ frame_needed = 0, uses_anonymous_args = 0
 12485              		@ link register save eliminated.
2072:Veno-Echo.cpp **** 
 12486              		.loc 20 2072 5 view .LVU3515
2074:Veno-Echo.cpp ****     {
 12487              		.loc 20 2074 5 view .LVU3516
 12488 0000 A1B1     		cbz	r1, .L675
2076:Veno-Echo.cpp ****         {
 12489              		.loc 20 2076 9 view .LVU3517
2076:Veno-Echo.cpp ****         {
 12490              		.loc 20 2076 31 is_stmt 0 view .LVU3518
 12491 0002 DFED1A7A 		vldr.32	s15, .L692
 12492 0006 30EEE77A 		vsub.f32	s14, s1, s15
2076:Veno-Echo.cpp ****         {
 12493              		.loc 20 2076 9 view .LVU3519
 12494 000a B4EEC07A 		vcmpe.f32	s14, s0
 12495 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12496 0012 01DD     		ble	.L690
 12497 0014 0020     		movs	r0, #0
 12498              	.LVL811:
2076:Veno-Echo.cpp ****         {
 12499              		.loc 20 2076 9 view .LVU3520
 12500 0016 7047     		bx	lr
 12501              	.LVL812:
 12502              	.L690:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 375


2081:Veno-Echo.cpp ****         {
 12503              		.loc 20 2081 14 is_stmt 1 view .LVU3521
2081:Veno-Echo.cpp ****         {
 12504              		.loc 20 2081 36 is_stmt 0 view .LVU3522
 12505 0018 70EEA70A 		vadd.f32	s1, s1, s15
 12506              	.LVL813:
2081:Veno-Echo.cpp ****         {
 12507              		.loc 20 2081 14 view .LVU3523
 12508 001c F4EEC00A 		vcmpe.f32	s1, s0
 12509 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
2088:Veno-Echo.cpp ****         }
 12510              		.loc 20 2088 20 view .LVU3524
 12511 0024 4CBF     		ite	mi
 12512 0026 0120     		movmi	r0, #1
 12513              	.LVL814:
2088:Veno-Echo.cpp ****         }
 12514              		.loc 20 2088 20 view .LVU3525
 12515 0028 0220     		movpl	r0, #2
 12516 002a 7047     		bx	lr
 12517              	.LVL815:
 12518              	.L675:
2094:Veno-Echo.cpp ****         {
 12519              		.loc 20 2094 9 is_stmt 1 view .LVU3526
 12520 002c 0128     		cmp	r0, #1
 12521 002e 04D0     		beq	.L678
 12522 0030 0228     		cmp	r0, #2
 12523 0032 01D0     		beq	.L676
 12524 0034 68B1     		cbz	r0, .L691
 12525 0036 0846     		mov	r0, r1
 12526              	.LVL816:
 12527              	.L676:
2115:Veno-Echo.cpp **** }
 12528              		.loc 20 2115 5 view .LVU3527
2116:Veno-Echo.cpp **** 
 12529              		.loc 20 2116 1 is_stmt 0 view .LVU3528
 12530 0038 7047     		bx	lr
 12531              	.LVL817:
 12532              	.L678:
2103:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
 12533              		.loc 20 2103 13 is_stmt 1 view .LVU3529
2104:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12534              		.loc 20 2104 13 view .LVU3530
2104:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12535              		.loc 20 2104 35 is_stmt 0 view .LVU3531
 12536 003a DFED0C7A 		vldr.32	s15, .L692
 12537 003e 70EEA70A 		vadd.f32	s1, s1, s15
 12538              	.LVL818:
2104:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12539              		.loc 20 2104 13 view .LVU3532
 12540 0042 F4EEC00A 		vcmpe.f32	s1, s0
 12541 0046 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12542 004a CCBF     		ite	gt
 12543 004c 0220     		movgt	r0, #2
 12544              	.LVL819:
2104:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12545              		.loc 20 2104 13 view .LVU3533
 12546 004e 0120     		movle	r0, #1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 376


 12547 0050 7047     		bx	lr
 12548              	.LVL820:
 12549              	.L691:
2096:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
 12550              		.loc 20 2096 13 is_stmt 1 view .LVU3534
2097:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12551              		.loc 20 2097 13 view .LVU3535
2097:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12552              		.loc 20 2097 35 is_stmt 0 view .LVU3536
 12553 0052 DFED067A 		vldr.32	s15, .L692
 12554 0056 70EEE70A 		vsub.f32	s1, s1, s15
 12555              	.LVL821:
2097:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12556              		.loc 20 2097 13 view .LVU3537
 12557 005a F4EEC00A 		vcmpe.f32	s1, s0
 12558 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12559 0062 4CBF     		ite	mi
 12560 0064 0220     		movmi	r0, #2
 12561              	.LVL822:
2097:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12562              		.loc 20 2097 13 view .LVU3538
 12563 0066 0020     		movpl	r0, #0
 12564 0068 7047     		bx	lr
 12565              	.L693:
 12566 006a 00BF     		.align	2
 12567              	.L692:
 12568 006c 0AD7A33B 		.word	1000593162
 12569              		.cfi_endproc
 12570              	.LFE4339:
 12572              		.section	.text._Z11GetTapRatio9TapRatios,"ax",%progbits
 12573              		.align	1
 12574              		.p2align 2,,3
 12575              		.global	_Z11GetTapRatio9TapRatios
 12576              		.syntax unified
 12577              		.thumb
 12578              		.thumb_func
 12579              		.fpu fpv5-d16
 12581              	_Z11GetTapRatio9TapRatios:
 12582              	.LVL823:
 12583              	.LFB4340:
2119:Veno-Echo.cpp **** double retVal{};
 12584              		.loc 20 2119 1 is_stmt 1 view -0
 12585              		.cfi_startproc
 12586              		@ args = 0, pretend = 0, frame = 0
 12587              		@ frame_needed = 0, uses_anonymous_args = 0
 12588              		@ link register save eliminated.
2120:Veno-Echo.cpp ****     switch(ratio)
 12589              		.loc 20 2120 1 view .LVU3540
2121:Veno-Echo.cpp ****     {
 12590              		.loc 20 2121 5 view .LVU3541
 12591 0000 0138     		subs	r0, r0, #1
 12592              	.LVL824:
2121:Veno-Echo.cpp ****     {
 12593              		.loc 20 2121 5 is_stmt 0 view .LVU3542
 12594 0002 C0B2     		uxtb	r0, r0
 12595 0004 0228     		cmp	r0, #2
 12596 0006 05D8     		bhi	.L696
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 377


 12597 0008 044B     		ldr	r3, .L697
 12598 000a 03EBC000 		add	r0, r3, r0, lsl #3
 12599 000e 90ED000B 		vldr.64	d0, [r0]
 12600 0012 7047     		bx	lr
 12601              	.L696:
2119:Veno-Echo.cpp **** double retVal{};
 12602              		.loc 20 2119 1 view .LVU3543
 12603 0014 B7EE000B 		vmov.f64	d0, #1.0e+0
 12604              	.LVL825:
 12605              		.loc 20 2144 1 is_stmt 1 view .LVU3544
2145:Veno-Echo.cpp **** }
 12606              		.loc 20 2145 1 is_stmt 0 view .LVU3545
 12607 0018 7047     		bx	lr
 12608              	.L698:
 12609 001a 00BF     		.align	2
 12610              	.L697:
 12611 001c 00000000 		.word	.LANCHOR25
 12612              		.cfi_endproc
 12613              	.LFE4340:
 12615              		.section	.text.startup._GLOBAL__sub_I_delMemsL,"ax",%progbits
 12616              		.align	1
 12617              		.p2align 2,,3
 12618              		.syntax unified
 12619              		.thumb
 12620              		.thumb_func
 12621              		.fpu fpv5-d16
 12623              	_GLOBAL__sub_I_delMemsL:
 12624              	.LFB4919:
 12625              		.loc 20 2145 1 is_stmt 1 view -0
 12626              		.cfi_startproc
 12627              		@ args = 0, pretend = 0, frame = 0
 12628              		@ frame_needed = 0, uses_anonymous_args = 0
 12629              	.LBB2446:
 12630              	.LBI2446:
 12631              		.loc 20 2145 1 view .LVU3547
 12632              	.LVL826:
 12633              	.LBB2447:
 12634              	.LBB2448:
 12635              	.LBI2448:
  21:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 12636              		.loc 2 21 5 view .LVU3548
 12637              	.LBB2449:
 12638              	.LBB2450:
 12639              	.LBI2450:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12640              		.loc 6 36 5 view .LVU3549
 12641              	.LBE2450:
 12642              	.LBE2449:
 12643              	.LBE2448:
 12644              	.LBE2447:
 12645              	.LBE2446:
 12646              		.loc 20 2145 1 is_stmt 0 view .LVU3550
 12647 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 12648              		.cfi_def_cfa_offset 24
 12649              		.cfi_offset 4, -24
 12650              		.cfi_offset 5, -20
 12651              		.cfi_offset 6, -16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 378


 12652              		.cfi_offset 7, -12
 12653              		.cfi_offset 8, -8
 12654              		.cfi_offset 14, -4
 12655              	.LBB2569:
 12656              	.LBB2565:
 12657              	.LBB2465:
 12658              	.LBB2463:
 12659              	.LBB2455:
 12660              	.LBB2451:
 12661              	.LBB2452:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12662              		.loc 6 36 35 view .LVU3551
 12663 0004 9748     		ldr	r0, .L701
 12664 0006 0026     		movs	r6, #0
 12665              	.LBE2452:
 12666              	.LBE2451:
 12667              	.LBE2455:
 12668              	.LBE2463:
 12669              	.LBE2465:
 12670              		.file 26 "Veno-Echo.h"
   1:Veno-Echo.h   **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.h   **** // 
   3:Veno-Echo.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.h   **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.h   **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.h   **** // 
  10:Veno-Echo.h   **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.h   **** // all copies or substantial portions of the Software.
  12:Veno-Echo.h   **** // 
  13:Veno-Echo.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.h   **** // THE SOFTWARE.
  20:Veno-Echo.h   **** // 
  21:Veno-Echo.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.h   **** 
  23:Veno-Echo.h   **** #ifndef VENO_ECHO_H
  24:Veno-Echo.h   **** #define VENO_ECHO_H
  25:Veno-Echo.h   **** 
  26:Veno-Echo.h   **** //defines for HW pins:
  27:Veno-Echo.h   **** 
  28:Veno-Echo.h   **** 
  29:Veno-Echo.h   **** 
  30:Veno-Echo.h   **** #include "daisy_seed.h"
  31:Veno-Echo.h   **** using namespace daisy;
  32:Veno-Echo.h   **** 
  33:Veno-Echo.h   **** static DaisySeed hw;
 12671              		.loc 26 33 18 view .LVU3552
 12672 0008 974C     		ldr	r4, .L701+4
  40:Veno-Echo.cpp **** static Svf LPF_R;
 12673              		.loc 20 40 12 view .LVU3553
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 379


 12674 000a 984D     		ldr	r5, .L701+8
 12675              		.loc 26 33 18 view .LVU3554
 12676 000c 2246     		mov	r2, r4
 12677 000e 9849     		ldr	r1, .L701+12
 12678              	.LBB2466:
 12679              	.LBB2464:
 12680              	.LBB2456:
 12681              	.LBB2454:
 12682              	.LBB2453:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12683              		.loc 6 36 35 view .LVU3555
 12684 0010 4661     		str	r6, [r0, #20]
 12685              	.LVL827:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12686              		.loc 6 36 35 view .LVU3556
 12687              	.LBE2453:
 12688              	.LBE2454:
 12689              	.LBE2456:
 12690              	.LBB2457:
 12691              	.LBI2457:
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 12692              		.loc 5 84 5 is_stmt 1 view .LVU3557
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 12693              		.loc 5 84 5 is_stmt 0 view .LVU3558
 12694              	.LBE2457:
 12695              	.LBB2458:
 12696              	.LBI2458:
 12697              		.file 27 "../libdaisy/src/per/dac.h"
   1:../libdaisy/src/per/dac.h **** #pragma once
   2:../libdaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../libdaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../libdaisy/src/per/dac.h **** 
   5:../libdaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../libdaisy/src/per/dac.h **** 
   7:../libdaisy/src/per/dac.h **** namespace daisy
   8:../libdaisy/src/per/dac.h **** {
   9:../libdaisy/src/per/dac.h **** /** DAC handle for Built-in DAC Peripheral 
  10:../libdaisy/src/per/dac.h ****  ** 
  11:../libdaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  12:../libdaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  13:../libdaisy/src/per/dac.h ****  **
  14:../libdaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal periphearls is also not supported.
  15:../libdaisy/src/per/dac.h ****  **
  16:../libdaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  17:../libdaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  18:../libdaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  19:../libdaisy/src/per/dac.h ****  ***/
  20:../libdaisy/src/per/dac.h **** class DacHandle
  21:../libdaisy/src/per/dac.h **** {
  22:../libdaisy/src/per/dac.h ****   public:
  23:../libdaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  24:../libdaisy/src/per/dac.h ****     enum class Result
  25:../libdaisy/src/per/dac.h ****     {
  26:../libdaisy/src/per/dac.h ****         OK,
  27:../libdaisy/src/per/dac.h ****         ERR,
  28:../libdaisy/src/per/dac.h ****     };
  29:../libdaisy/src/per/dac.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 380


  30:../libdaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  31:../libdaisy/src/per/dac.h ****     enum class Channel
  32:../libdaisy/src/per/dac.h ****     {
  33:../libdaisy/src/per/dac.h ****         ONE,
  34:../libdaisy/src/per/dac.h ****         TWO,
  35:../libdaisy/src/per/dac.h ****         BOTH,
  36:../libdaisy/src/per/dac.h ****     };
  37:../libdaisy/src/per/dac.h **** 
  38:../libdaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  39:../libdaisy/src/per/dac.h ****      **
  40:../libdaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  41:../libdaisy/src/per/dac.h ****      **
  42:../libdaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  43:../libdaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  44:../libdaisy/src/per/dac.h ****      ***/
  45:../libdaisy/src/per/dac.h ****     enum class Mode
  46:../libdaisy/src/per/dac.h ****     {
  47:../libdaisy/src/per/dac.h ****         POLLING,
  48:../libdaisy/src/per/dac.h ****         DMA,
  49:../libdaisy/src/per/dac.h ****     };
  50:../libdaisy/src/per/dac.h **** 
  51:../libdaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  52:../libdaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  53:../libdaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  54:../libdaisy/src/per/dac.h ****      ***/
  55:../libdaisy/src/per/dac.h ****     enum class BitDepth
  56:../libdaisy/src/per/dac.h ****     {
  57:../libdaisy/src/per/dac.h ****         BITS_8,
  58:../libdaisy/src/per/dac.h ****         BITS_12
  59:../libdaisy/src/per/dac.h ****     };
  60:../libdaisy/src/per/dac.h **** 
  61:../libdaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  62:../libdaisy/src/per/dac.h ****     enum class BufferState
  63:../libdaisy/src/per/dac.h ****     {
  64:../libdaisy/src/per/dac.h ****         ENABLED,
  65:../libdaisy/src/per/dac.h ****         DISABLED,
  66:../libdaisy/src/per/dac.h ****     };
  67:../libdaisy/src/per/dac.h **** 
  68:../libdaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  69:../libdaisy/src/per/dac.h ****     struct Config
  70:../libdaisy/src/per/dac.h ****     {
  71:../libdaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  72:../libdaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  73:../libdaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  74:../libdaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  75:../libdaisy/src/per/dac.h ****         uint32_t target_samplerate;
  76:../libdaisy/src/per/dac.h **** 
  77:../libdaisy/src/per/dac.h ****         Channel     chn;
  78:../libdaisy/src/per/dac.h ****         Mode        mode;
  79:../libdaisy/src/per/dac.h ****         BitDepth    bitdepth;
  80:../libdaisy/src/per/dac.h ****         BufferState buff_state;
  81:../libdaisy/src/per/dac.h ****     };
  82:../libdaisy/src/per/dac.h **** 
  83:../libdaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 12698              		.loc 27 83 5 is_stmt 1 view .LVU3559
 12699              	.LBB2459:
 12700              	.LBB2460:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 381


 12701              		.loc 27 83 33 is_stmt 0 view .LVU3560
 12702 0012 0662     		str	r6, [r0, #32]
 12703              	.LVL828:
 12704              		.loc 27 83 33 view .LVU3561
 12705              	.LBE2460:
 12706              	.LBE2459:
 12707              	.LBE2458:
 12708              	.LBB2461:
 12709              	.LBI2461:
  40:../libdaisy/src/hid/usb.h **** 
 12710              		.loc 4 40 5 is_stmt 1 view .LVU3562
  40:../libdaisy/src/hid/usb.h **** 
 12711              		.loc 4 40 5 is_stmt 0 view .LVU3563
 12712              	.LBE2461:
 12713              	.LBB2462:
 12714              	.LBI2462:
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 12715              		.loc 3 56 5 is_stmt 1 view .LVU3564
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 12716              		.loc 3 56 5 is_stmt 0 view .LVU3565
 12717              	.LBE2462:
 12718              	.LBE2464:
 12719              	.LBE2466:
 12720              		.loc 26 33 18 view .LVU3566
 12721 0014 FFF7FEFF 		bl	__aeabi_atexit
 12722              	.LVL829:
 12723              	.LBB2467:
 12724              	.LBI2467:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12725              		.loc 9 21 5 is_stmt 1 view .LVU3567
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12726              		.loc 9 21 5 is_stmt 0 view .LVU3568
 12727              	.LBE2467:
  40:Veno-Echo.cpp **** static Svf LPF_R;
 12728              		.loc 20 40 12 view .LVU3569
 12729 0018 2246     		mov	r2, r4
 12730 001a 2946     		mov	r1, r5
 12731 001c 9548     		ldr	r0, .L701+16
 12732 001e FFF7FEFF 		bl	__aeabi_atexit
 12733              	.LVL830:
 12734              	.LBB2468:
 12735              	.LBI2468:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12736              		.loc 9 21 5 is_stmt 1 view .LVU3570
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12737              		.loc 9 21 5 is_stmt 0 view .LVU3571
 12738              	.LBE2468:
  41:Veno-Echo.cpp **** static Svf HPF_L;
 12739              		.loc 20 41 12 view .LVU3572
 12740 0022 2246     		mov	r2, r4
 12741 0024 2946     		mov	r1, r5
 12742 0026 9448     		ldr	r0, .L701+20
 12743 0028 FFF7FEFF 		bl	__aeabi_atexit
 12744              	.LVL831:
 12745              	.LBB2469:
 12746              	.LBI2469:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 382


 12747              		.loc 9 21 5 is_stmt 1 view .LVU3573
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12748              		.loc 9 21 5 is_stmt 0 view .LVU3574
 12749              	.LBE2469:
  42:Veno-Echo.cpp **** static Svf HPF_R;
 12750              		.loc 20 42 12 view .LVU3575
 12751 002c 2246     		mov	r2, r4
 12752 002e 2946     		mov	r1, r5
 12753 0030 9248     		ldr	r0, .L701+24
 12754 0032 FFF7FEFF 		bl	__aeabi_atexit
 12755              	.LVL832:
 12756              	.LBB2470:
 12757              	.LBI2470:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12758              		.loc 9 21 5 is_stmt 1 view .LVU3576
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12759              		.loc 9 21 5 is_stmt 0 view .LVU3577
 12760              	.LBE2470:
  43:Veno-Echo.cpp **** 
 12761              		.loc 20 43 12 view .LVU3578
 12762 0036 2246     		mov	r2, r4
 12763 0038 2946     		mov	r1, r5
 12764 003a 9148     		ldr	r0, .L701+28
 12765 003c FFF7FEFF 		bl	__aeabi_atexit
 12766              	.LVL833:
 12767              	.LBB2471:
 12768              	.LBI2471:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12769              		.loc 9 21 5 is_stmt 1 view .LVU3579
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12770              		.loc 9 21 5 is_stmt 0 view .LVU3580
 12771              	.LBE2471:
  45:Veno-Echo.cpp **** static Svf LPF_R_post;
 12772              		.loc 20 45 12 view .LVU3581
 12773 0040 2246     		mov	r2, r4
 12774 0042 2946     		mov	r1, r5
 12775 0044 8F48     		ldr	r0, .L701+32
 12776 0046 FFF7FEFF 		bl	__aeabi_atexit
 12777              	.LVL834:
 12778              	.LBB2472:
 12779              	.LBI2472:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12780              		.loc 9 21 5 is_stmt 1 view .LVU3582
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12781              		.loc 9 21 5 is_stmt 0 view .LVU3583
 12782              	.LBE2472:
  46:Veno-Echo.cpp **** static Svf HPF_L_post;
 12783              		.loc 20 46 12 view .LVU3584
 12784 004a 2246     		mov	r2, r4
 12785 004c 2946     		mov	r1, r5
 12786 004e 8E48     		ldr	r0, .L701+36
 12787 0050 FFF7FEFF 		bl	__aeabi_atexit
 12788              	.LVL835:
 12789              	.LBB2473:
 12790              	.LBI2473:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12791              		.loc 9 21 5 is_stmt 1 view .LVU3585
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 383


  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12792              		.loc 9 21 5 is_stmt 0 view .LVU3586
 12793              	.LBE2473:
  47:Veno-Echo.cpp **** static Svf HPF_R_post;
 12794              		.loc 20 47 12 view .LVU3587
 12795 0054 2246     		mov	r2, r4
 12796 0056 2946     		mov	r1, r5
 12797 0058 8C48     		ldr	r0, .L701+40
 12798 005a FFF7FEFF 		bl	__aeabi_atexit
 12799              	.LVL836:
 12800              	.LBB2474:
 12801              	.LBI2474:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12802              		.loc 9 21 5 is_stmt 1 view .LVU3588
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12803              		.loc 9 21 5 is_stmt 0 view .LVU3589
 12804              	.LBE2474:
  48:Veno-Echo.cpp **** 
 12805              		.loc 20 48 12 view .LVU3590
 12806 005e 2246     		mov	r2, r4
 12807 0060 2946     		mov	r1, r5
 12808 0062 8B48     		ldr	r0, .L701+44
 12809 0064 FFF7FEFF 		bl	__aeabi_atexit
 12810              	.LVL837:
 12811              	.LBB2475:
 12812              	.LBI2475:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12813              		.loc 8 15 5 is_stmt 1 view .LVU3591
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12814              		.loc 8 15 5 is_stmt 0 view .LVU3592
 12815              	.LBE2475:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 12816              		.loc 20 50 19 view .LVU3593
 12817 0068 2246     		mov	r2, r4
 12818 006a 8A49     		ldr	r1, .L701+48
 12819              	.LBB2476:
 12820              	.LBB2477:
 12821              	.LBB2478:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12822              		.loc 12 45 13 view .LVU3594
 12823 006c 0025     		movs	r5, #0
 12824              	.LBE2478:
 12825              	.LBE2477:
 12826              	.LBE2476:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 12827              		.loc 20 50 19 view .LVU3595
 12828 006e 8A48     		ldr	r0, .L701+52
 12829 0070 FFF7FEFF 		bl	__aeabi_atexit
 12830              	.LVL838:
 12831              	.LBB2483:
 12832              	.LBI2476:
  43:envFollow.h   ****     {
 12833              		.loc 12 43 5 is_stmt 1 view .LVU3596
 12834              	.LBB2481:
 12835              	.LBB2479:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12836              		.loc 12 45 9 view .LVU3597
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 384


  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12837              		.loc 12 48 11 is_stmt 0 view .LVU3598
 12838 0074 894F     		ldr	r7, .L701+56
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12839              		.loc 12 45 13 view .LVU3599
 12840 0076 8A48     		ldr	r0, .L701+60
 12841              	.LBE2479:
 12842              	.LBE2481:
 12843              	.LBE2483:
  51:Veno-Echo.cpp **** 
 12844              		.loc 20 51 18 view .LVU3600
 12845 0078 2246     		mov	r2, r4
 12846 007a 8A49     		ldr	r1, .L701+64
 12847              	.LBB2484:
 12848              	.LBB2482:
 12849              	.LBB2480:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12850              		.loc 12 45 13 view .LVU3601
 12851 007c 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12852              		.loc 12 46 9 is_stmt 1 view .LVU3602
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12853              		.loc 12 46 20 is_stmt 0 view .LVU3603
 12854 007e 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12855              		.loc 12 47 9 is_stmt 1 view .LVU3604
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12856              		.loc 12 47 17 is_stmt 0 view .LVU3605
 12857 0080 C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12858              		.loc 12 48 9 is_stmt 1 view .LVU3606
  50:envFollow.h   ****     }  
 12859              		.loc 12 50 21 is_stmt 0 view .LVU3607
 12860 0082 8560     		str	r5, [r0, #8]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12861              		.loc 12 48 11 view .LVU3608
 12862 0084 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12863              		.loc 12 49 9 is_stmt 1 view .LVU3609
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12864              		.loc 12 49 15 is_stmt 0 view .LVU3610
 12865 0086 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 12866              		.loc 12 50 9 is_stmt 1 view .LVU3611
 12867              	.LVL839:
  50:envFollow.h   ****     }  
 12868              		.loc 12 50 9 is_stmt 0 view .LVU3612
 12869              	.LBE2480:
 12870              	.LBE2482:
 12871              	.LBE2484:
  51:Veno-Echo.cpp **** 
 12872              		.loc 20 51 18 view .LVU3613
 12873 0088 FFF7FEFF 		bl	__aeabi_atexit
 12874              	.LVL840:
 12875              	.LBB2485:
 12876              	.LBI2485:
  43:envFollow.h   ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 385


 12877              		.loc 12 43 5 is_stmt 1 view .LVU3614
 12878              	.LBB2486:
 12879              	.LBB2487:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12880              		.loc 12 45 9 view .LVU3615
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12881              		.loc 12 45 13 is_stmt 0 view .LVU3616
 12882 008c 8648     		ldr	r0, .L701+68
 12883              	.LBE2487:
 12884              	.LBE2486:
 12885              	.LBE2485:
  53:Veno-Echo.cpp **** 
 12886              		.loc 20 53 16 view .LVU3617
 12887 008e DFF8E082 		ldr	r8, .L701+268
  51:Veno-Echo.cpp **** 
 12888              		.loc 20 51 27 view .LVU3618
 12889 0092 2246     		mov	r2, r4
 12890 0094 8349     		ldr	r1, .L701+64
 12891              	.LBB2490:
 12892              	.LBB2489:
 12893              	.LBB2488:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12894              		.loc 12 45 13 view .LVU3619
 12895 0096 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12896              		.loc 12 46 9 is_stmt 1 view .LVU3620
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12897              		.loc 12 46 20 is_stmt 0 view .LVU3621
 12898 0098 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12899              		.loc 12 47 9 is_stmt 1 view .LVU3622
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12900              		.loc 12 47 17 is_stmt 0 view .LVU3623
 12901 009a C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12902              		.loc 12 48 9 is_stmt 1 view .LVU3624
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12903              		.loc 12 48 11 is_stmt 0 view .LVU3625
 12904 009c 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12905              		.loc 12 49 9 is_stmt 1 view .LVU3626
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12906              		.loc 12 49 15 is_stmt 0 view .LVU3627
 12907 009e 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 12908              		.loc 12 50 9 is_stmt 1 view .LVU3628
  50:envFollow.h   ****     }  
 12909              		.loc 12 50 21 is_stmt 0 view .LVU3629
 12910 00a0 8560     		str	r5, [r0, #8]	@ float
 12911              	.LVL841:
  50:envFollow.h   ****     }  
 12912              		.loc 12 50 21 view .LVU3630
 12913              	.LBE2488:
 12914              	.LBE2489:
 12915              	.LBE2490:
  51:Veno-Echo.cpp **** 
 12916              		.loc 20 51 27 view .LVU3631
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 386


 12917 00a2 FFF7FEFF 		bl	__aeabi_atexit
 12918              	.LVL842:
 12919              	.LBB2491:
 12920              	.LBI2491:
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 12921              		.loc 11 14 5 is_stmt 1 view .LVU3632
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 12922              		.loc 11 14 5 is_stmt 0 view .LVU3633
 12923              	.LBE2491:
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 12924              		.loc 20 56 76 view .LVU3634
 12925 00a6 814F     		ldr	r7, .L701+72
  53:Veno-Echo.cpp **** 
 12926              		.loc 20 53 16 view .LVU3635
 12927 00a8 2246     		mov	r2, r4
 12928 00aa 4146     		mov	r1, r8
 12929 00ac 8048     		ldr	r0, .L701+76
 12930 00ae FFF7FEFF 		bl	__aeabi_atexit
 12931              	.LVL843:
 12932              	.LBB2492:
 12933              	.LBI2492:
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 12934              		.loc 11 14 5 is_stmt 1 view .LVU3636
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 12935              		.loc 11 14 5 is_stmt 0 view .LVU3637
 12936              	.LBE2492:
  53:Veno-Echo.cpp **** 
 12937              		.loc 20 53 29 view .LVU3638
 12938 00b2 2246     		mov	r2, r4
 12939 00b4 4146     		mov	r1, r8
 12940 00b6 7F48     		ldr	r0, .L701+80
 12941 00b8 FFF7FEFF 		bl	__aeabi_atexit
 12942              	.LVL844:
 12943              	.LBB2493:
 12944              	.LBI2493:
  48:delayline_multitap.h ****     {
 12945              		.loc 18 48 5 is_stmt 1 view .LVU3639
  48:delayline_multitap.h ****     {
 12946              		.loc 18 48 5 is_stmt 0 view .LVU3640
 12947              	.LBE2493:
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 12948              		.loc 20 59 80 view .LVU3641
 12949 00bc 7E4D     		ldr	r5, .L701+84
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 12950              		.loc 20 56 76 view .LVU3642
 12951 00be 2246     		mov	r2, r4
 12952 00c0 3946     		mov	r1, r7
 12953 00c2 7E48     		ldr	r0, .L701+88
 12954 00c4 FFF7FEFF 		bl	__aeabi_atexit
 12955              	.LVL845:
 12956              	.LBB2494:
 12957              	.LBI2494:
  48:delayline_multitap.h ****     {
 12958              		.loc 18 48 5 is_stmt 1 view .LVU3643
  48:delayline_multitap.h ****     {
 12959              		.loc 18 48 5 is_stmt 0 view .LVU3644
 12960              	.LBE2494:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 387


  57:Veno-Echo.cpp **** 
 12961              		.loc 20 57 76 view .LVU3645
 12962 00c8 2246     		mov	r2, r4
 12963 00ca 3946     		mov	r1, r7
 12964 00cc 7C48     		ldr	r0, .L701+92
 12965 00ce FFF7FEFF 		bl	__aeabi_atexit
 12966              	.LVL846:
 12967              	.LBB2495:
 12968              	.LBI2495:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12969              		.loc 19 38 5 is_stmt 1 view .LVU3646
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12970              		.loc 19 38 5 is_stmt 0 view .LVU3647
 12971              	.LBE2495:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 12972              		.loc 20 98 12 view .LVU3648
 12973 00d2 7C4F     		ldr	r7, .L701+96
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 12974              		.loc 20 59 80 view .LVU3649
 12975 00d4 2246     		mov	r2, r4
 12976 00d6 2946     		mov	r1, r5
 12977 00d8 7B48     		ldr	r0, .L701+100
 12978 00da FFF7FEFF 		bl	__aeabi_atexit
 12979              	.LVL847:
 12980              	.LBB2496:
 12981              	.LBI2496:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12982              		.loc 19 38 5 is_stmt 1 view .LVU3650
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12983              		.loc 19 38 5 is_stmt 0 view .LVU3651
 12984              	.LBE2496:
  60:Veno-Echo.cpp **** 
 12985              		.loc 20 60 80 view .LVU3652
 12986 00de 2246     		mov	r2, r4
 12987 00e0 2946     		mov	r1, r5
 12988 00e2 7A48     		ldr	r0, .L701+104
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12989              		.loc 20 102 11 view .LVU3653
 12990 00e4 7A4D     		ldr	r5, .L701+108
  60:Veno-Echo.cpp **** 
 12991              		.loc 20 60 80 view .LVU3654
 12992 00e6 FFF7FEFF 		bl	__aeabi_atexit
 12993              	.LVL848:
 12994              	.LBB2497:
 12995              	.LBI2497:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12996              		.loc 17 49 1 is_stmt 1 view .LVU3655
 12997              	.LBB2498:
 12998              	.LBB2499:
 12999              	.LBI2499:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 13000              		.loc 14 47 1 view .LVU3656
 13001              	.LBB2500:
 13002              	.LBB2501:
 13003              	.LBI2501:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13004              		.loc 16 24 5 view .LVU3657
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 388


  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13005              		.loc 16 24 5 is_stmt 0 view .LVU3658
 13006              	.LBE2501:
 13007              	.LBB2502:
 13008              	.LBI2502:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 13009              		.loc 15 15 5 is_stmt 1 view .LVU3659
  15:oscillator_p.h ****     ~Oscillator_p() {}
 13010              		.loc 15 15 5 is_stmt 0 view .LVU3660
 13011              	.LBE2502:
 13012              	.LBE2500:
 13013              	.LBE2499:
 13014              	.LBE2498:
 13015              	.LBE2497:
 13016              	.LBE2565:
 13017              	.LBE2569:
  49:DelayMulti.h  **** ~DelayMulti() {}
 13018              		.loc 17 49 14 is_stmt 1 view .LVU3661
  49:DelayMulti.h  **** ~DelayMulti() {}
 13019              		.loc 17 49 14 view .LVU3662
 13020              	.LBB2570:
 13021              	.LBB2566:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 13022              		.loc 20 98 12 is_stmt 0 view .LVU3663
 13023 00ea 2246     		mov	r2, r4
 13024 00ec 3946     		mov	r1, r7
 13025 00ee 7948     		ldr	r0, .L701+112
 13026 00f0 FFF7FEFF 		bl	__aeabi_atexit
 13027              	.LVL849:
 13028              	.LBB2503:
 13029              	.LBI2503:
  49:DelayMulti.h  **** ~DelayMulti() {}
 13030              		.loc 17 49 1 is_stmt 1 view .LVU3664
 13031              	.LBB2504:
 13032              	.LBB2505:
 13033              	.LBI2505:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 13034              		.loc 14 47 1 view .LVU3665
 13035              	.LBB2506:
 13036              	.LBB2507:
 13037              	.LBI2507:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13038              		.loc 16 24 5 view .LVU3666
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13039              		.loc 16 24 5 is_stmt 0 view .LVU3667
 13040              	.LBE2507:
 13041              	.LBB2508:
 13042              	.LBI2508:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 13043              		.loc 15 15 5 is_stmt 1 view .LVU3668
  15:oscillator_p.h ****     ~Oscillator_p() {}
 13044              		.loc 15 15 5 is_stmt 0 view .LVU3669
 13045              	.LBE2508:
 13046              	.LBE2506:
 13047              	.LBE2505:
 13048              	.LBE2504:
 13049              	.LBE2503:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 389


 13050              	.LBE2566:
 13051              	.LBE2570:
  49:DelayMulti.h  **** ~DelayMulti() {}
 13052              		.loc 17 49 14 is_stmt 1 view .LVU3670
  49:DelayMulti.h  **** ~DelayMulti() {}
 13053              		.loc 17 49 14 view .LVU3671
 13054              	.LBB2571:
 13055              	.LBB2567:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 13056              		.loc 20 98 19 is_stmt 0 view .LVU3672
 13057 00f4 2246     		mov	r2, r4
 13058 00f6 3946     		mov	r1, r7
 13059 00f8 7748     		ldr	r0, .L701+116
 13060 00fa FFF7FEFF 		bl	__aeabi_atexit
 13061              	.LVL850:
 13062              	.LBB2509:
 13063              	.LBI2509:
  78:LEDs.h        ****     ~ButtonLED() {}
 13064              		.loc 14 78 5 is_stmt 1 view .LVU3673
 13065              	.LBB2510:
 13066              	.LBB2511:
 13067              	.LBI2511:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13068              		.loc 1 40 5 view .LVU3674
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13069              		.loc 1 40 5 is_stmt 0 view .LVU3675
 13070              	.LBE2511:
 13071              	.LBB2512:
 13072              	.LBI2512:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13073              		.loc 16 24 5 is_stmt 1 view .LVU3676
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13074              		.loc 16 24 5 is_stmt 0 view .LVU3677
 13075              	.LBE2512:
 13076              	.LBE2510:
 13077              	.LBE2509:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13078              		.loc 20 102 11 view .LVU3678
 13079 00fe 2246     		mov	r2, r4
 13080 0100 2946     		mov	r1, r5
 13081 0102 7648     		ldr	r0, .L701+120
 13082 0104 FFF7FEFF 		bl	__aeabi_atexit
 13083              	.LVL851:
 13084              	.LBB2513:
 13085              	.LBI2513:
  78:LEDs.h        ****     ~ButtonLED() {}
 13086              		.loc 14 78 5 is_stmt 1 view .LVU3679
 13087              	.LBB2514:
 13088              	.LBB2515:
 13089              	.LBI2515:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13090              		.loc 1 40 5 view .LVU3680
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13091              		.loc 1 40 5 is_stmt 0 view .LVU3681
 13092              	.LBE2515:
 13093              	.LBB2516:
 13094              	.LBI2516:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 390


  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13095              		.loc 16 24 5 is_stmt 1 view .LVU3682
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13096              		.loc 16 24 5 is_stmt 0 view .LVU3683
 13097              	.LBE2516:
 13098              	.LBE2514:
 13099              	.LBE2513:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13100              		.loc 20 102 18 view .LVU3684
 13101 0108 2246     		mov	r2, r4
 13102 010a 2946     		mov	r1, r5
 13103 010c 7448     		ldr	r0, .L701+124
 13104 010e FFF7FEFF 		bl	__aeabi_atexit
 13105              	.LVL852:
 13106              	.LBB2517:
 13107              	.LBI2517:
  78:LEDs.h        ****     ~ButtonLED() {}
 13108              		.loc 14 78 5 is_stmt 1 view .LVU3685
 13109              	.LBB2518:
 13110              	.LBB2519:
 13111              	.LBI2519:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13112              		.loc 1 40 5 view .LVU3686
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13113              		.loc 1 40 5 is_stmt 0 view .LVU3687
 13114              	.LBE2519:
 13115              	.LBB2520:
 13116              	.LBI2520:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13117              		.loc 16 24 5 is_stmt 1 view .LVU3688
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13118              		.loc 16 24 5 is_stmt 0 view .LVU3689
 13119              	.LBE2520:
 13120              	.LBE2518:
 13121              	.LBE2517:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13122              		.loc 20 102 25 view .LVU3690
 13123 0112 2246     		mov	r2, r4
 13124 0114 2946     		mov	r1, r5
 13125 0116 7348     		ldr	r0, .L701+128
 13126 0118 FFF7FEFF 		bl	__aeabi_atexit
 13127              	.LVL853:
 13128              	.LBB2521:
 13129              	.LBI2521:
  78:LEDs.h        ****     ~ButtonLED() {}
 13130              		.loc 14 78 5 is_stmt 1 view .LVU3691
 13131              	.LBB2522:
 13132              	.LBB2523:
 13133              	.LBI2523:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13134              		.loc 1 40 5 view .LVU3692
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13135              		.loc 1 40 5 is_stmt 0 view .LVU3693
 13136              	.LBE2523:
 13137              	.LBB2524:
 13138              	.LBI2524:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 391


 13139              		.loc 16 24 5 is_stmt 1 view .LVU3694
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13140              		.loc 16 24 5 is_stmt 0 view .LVU3695
 13141              	.LBE2524:
 13142              	.LBE2522:
 13143              	.LBE2521:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13144              		.loc 20 102 34 view .LVU3696
 13145 011c 2246     		mov	r2, r4
 13146 011e 2946     		mov	r1, r5
 13147 0120 7148     		ldr	r0, .L701+132
 13148 0122 FFF7FEFF 		bl	__aeabi_atexit
 13149              	.LVL854:
 13150              	.LBB2525:
 13151              	.LBI2525:
  78:LEDs.h        ****     ~ButtonLED() {}
 13152              		.loc 14 78 5 is_stmt 1 view .LVU3697
 13153              	.LBB2526:
 13154              	.LBB2527:
 13155              	.LBI2527:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13156              		.loc 1 40 5 view .LVU3698
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13157              		.loc 1 40 5 is_stmt 0 view .LVU3699
 13158              	.LBE2527:
 13159              	.LBB2528:
 13160              	.LBI2528:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13161              		.loc 16 24 5 is_stmt 1 view .LVU3700
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13162              		.loc 16 24 5 is_stmt 0 view .LVU3701
 13163              	.LBE2528:
 13164              	.LBE2526:
 13165              	.LBE2525:
 149:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 13166              		.loc 20 149 13 view .LVU3702
 13167 0126 714F     		ldr	r7, .L701+136
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13168              		.loc 20 102 44 view .LVU3703
 13169 0128 2246     		mov	r2, r4
 13170 012a 2946     		mov	r1, r5
 13171 012c 7048     		ldr	r0, .L701+140
 13172 012e FFF7FEFF 		bl	__aeabi_atexit
 13173              	.LVL855:
 13174              	.LBB2529:
 13175              	.LBI2529:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 13176              		.loc 14 47 1 is_stmt 1 view .LVU3704
 13177              	.LBB2530:
 13178              	.LBB2531:
 13179              	.LBI2531:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13180              		.loc 16 24 5 view .LVU3705
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 13181              		.loc 16 24 5 is_stmt 0 view .LVU3706
 13182              	.LBE2531:
 13183              	.LBB2532:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 392


 13184              	.LBI2532:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 13185              		.loc 15 15 5 is_stmt 1 view .LVU3707
  15:oscillator_p.h ****     ~Oscillator_p() {}
 13186              		.loc 15 15 5 is_stmt 0 view .LVU3708
 13187              	.LBE2532:
 13188              	.LBE2530:
 13189              	.LBE2529:
 103:Veno-Echo.cpp **** 
 13190              		.loc 20 103 10 view .LVU3709
 13191 0132 2246     		mov	r2, r4
 13192 0134 6F49     		ldr	r1, .L701+144
 13193 0136 7048     		ldr	r0, .L701+148
 13194 0138 FFF7FEFF 		bl	__aeabi_atexit
 13195              	.LVL856:
 13196              	.LBB2533:
 13197              	.LBI2533:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13198              		.loc 7 38 5 is_stmt 1 view .LVU3710
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13199              		.loc 7 38 5 is_stmt 0 view .LVU3711
 13200              	.LBE2533:
 149:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 13201              		.loc 20 149 13 view .LVU3712
 13202 013c 2246     		mov	r2, r4
 13203 013e 3946     		mov	r1, r7
 13204 0140 6E48     		ldr	r0, .L701+152
 13205 0142 FFF7FEFF 		bl	__aeabi_atexit
 13206              	.LVL857:
 13207              	.LBB2534:
 13208              	.LBI2534:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13209              		.loc 7 38 5 is_stmt 1 view .LVU3713
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13210              		.loc 7 38 5 is_stmt 0 view .LVU3714
 13211              	.LBE2534:
 150:Veno-Echo.cpp **** 
 13212              		.loc 20 150 13 view .LVU3715
 13213 0146 2246     		mov	r2, r4
 13214 0148 3946     		mov	r1, r7
 13215 014a 6D48     		ldr	r0, .L701+156
 155:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 13216              		.loc 20 155 18 view .LVU3716
 13217 014c 6D4D     		ldr	r5, .L701+160
 150:Veno-Echo.cpp **** 
 13218              		.loc 20 150 13 view .LVU3717
 13219 014e FFF7FEFF 		bl	__aeabi_atexit
 13220              	.LVL858:
 13221              	.LBB2535:
 13222              	.LBI2535:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13223              		.loc 7 38 5 is_stmt 1 view .LVU3718
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13224              		.loc 7 38 5 is_stmt 0 view .LVU3719
 13225              	.LBE2535:
 152:Veno-Echo.cpp **** static Adsr HPF_Env;
 13226              		.loc 20 152 13 view .LVU3720
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 393


 13227 0152 2246     		mov	r2, r4
 13228 0154 3946     		mov	r1, r7
 13229 0156 6C48     		ldr	r0, .L701+164
 13230 0158 FFF7FEFF 		bl	__aeabi_atexit
 13231              	.LVL859:
 13232              	.LBB2536:
 13233              	.LBI2536:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13234              		.loc 7 38 5 is_stmt 1 view .LVU3721
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13235              		.loc 7 38 5 is_stmt 0 view .LVU3722
 13236              	.LBE2536:
 153:Veno-Echo.cpp **** 
 13237              		.loc 20 153 13 view .LVU3723
 13238 015c 2246     		mov	r2, r4
 13239 015e 3946     		mov	r1, r7
 13240 0160 6A48     		ldr	r0, .L701+168
 13241 0162 FFF7FEFF 		bl	__aeabi_atexit
 13242              	.LVL860:
 13243              	.LBB2537:
 13244              	.LBI2537:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13245              		.loc 10 36 5 is_stmt 1 view .LVU3724
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13246              		.loc 10 36 5 is_stmt 0 view .LVU3725
 13247              	.LBE2537:
 155:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 13248              		.loc 20 155 18 view .LVU3726
 13249 0166 2246     		mov	r2, r4
 13250 0168 2946     		mov	r1, r5
 13251 016a 6948     		ldr	r0, .L701+172
 13252 016c FFF7FEFF 		bl	__aeabi_atexit
 13253              	.LVL861:
 13254              	.LBB2538:
 13255              	.LBI2538:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13256              		.loc 10 36 5 is_stmt 1 view .LVU3727
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13257              		.loc 10 36 5 is_stmt 0 view .LVU3728
 13258              	.LBE2538:
 156:Veno-Echo.cpp **** 
 13259              		.loc 20 156 18 view .LVU3729
 13260 0170 2246     		mov	r2, r4
 13261 0172 2946     		mov	r1, r5
 13262 0174 6748     		ldr	r0, .L701+176
 13263 0176 FFF7FEFF 		bl	__aeabi_atexit
 13264              	.LVL862:
 13265              	.LBB2539:
 13266              	.LBI2539:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13267              		.loc 10 36 5 is_stmt 1 view .LVU3730
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13268              		.loc 10 36 5 is_stmt 0 view .LVU3731
 13269              	.LBE2539:
 158:Veno-Echo.cpp **** 
 13270              		.loc 20 158 18 view .LVU3732
 13271 017a 2246     		mov	r2, r4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 394


 13272 017c 2946     		mov	r1, r5
 13273 017e 6648     		ldr	r0, .L701+180
 13274 0180 FFF7FEFF 		bl	__aeabi_atexit
 13275              	.LVL863:
 13276              	.LBB2540:
 13277              	.LBI2540:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13278              		.loc 10 36 5 is_stmt 1 view .LVU3733
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13279              		.loc 10 36 5 is_stmt 0 view .LVU3734
 13280              	.LBE2540:
 161:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 13281              		.loc 20 161 18 view .LVU3735
 13282 0184 2246     		mov	r2, r4
 13283 0186 2946     		mov	r1, r5
 13284 0188 6448     		ldr	r0, .L701+184
 13285 018a FFF7FEFF 		bl	__aeabi_atexit
 13286              	.LVL864:
 13287              	.LBB2541:
 13288              	.LBI2541:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13289              		.loc 10 36 5 is_stmt 1 view .LVU3736
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13290              		.loc 10 36 5 is_stmt 0 view .LVU3737
 13291              	.LBE2541:
 162:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 13292              		.loc 20 162 18 view .LVU3738
 13293 018e 2246     		mov	r2, r4
 13294 0190 2946     		mov	r1, r5
 13295 0192 6348     		ldr	r0, .L701+188
 13296 0194 FFF7FEFF 		bl	__aeabi_atexit
 13297              	.LVL865:
 13298              	.LBB2542:
 13299              	.LBI2542:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13300              		.loc 10 36 5 is_stmt 1 view .LVU3739
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13301              		.loc 10 36 5 is_stmt 0 view .LVU3740
 13302              	.LBE2542:
 163:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 13303              		.loc 20 163 18 view .LVU3741
 13304 0198 2246     		mov	r2, r4
 13305 019a 2946     		mov	r1, r5
 13306 019c 6148     		ldr	r0, .L701+192
 13307 019e FFF7FEFF 		bl	__aeabi_atexit
 13308              	.LVL866:
 13309              	.LBB2543:
 13310              	.LBI2543:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13311              		.loc 10 36 5 is_stmt 1 view .LVU3742
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13312              		.loc 10 36 5 is_stmt 0 view .LVU3743
 13313              	.LBE2543:
 164:Veno-Echo.cpp **** 
 13314              		.loc 20 164 18 view .LVU3744
 13315 01a2 2246     		mov	r2, r4
 13316 01a4 2946     		mov	r1, r5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 395


 13317 01a6 6048     		ldr	r0, .L701+196
 13318 01a8 FFF7FEFF 		bl	__aeabi_atexit
 13319              	.LVL867:
 13320              	.LBB2544:
 13321              	.LBI2544:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13322              		.loc 10 36 5 is_stmt 1 view .LVU3745
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13323              		.loc 10 36 5 is_stmt 0 view .LVU3746
 13324              	.LBE2544:
 167:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 13325              		.loc 20 167 18 view .LVU3747
 13326 01ac 2246     		mov	r2, r4
 13327 01ae 2946     		mov	r1, r5
 13328 01b0 5E48     		ldr	r0, .L701+200
 13329 01b2 FFF7FEFF 		bl	__aeabi_atexit
 13330              	.LVL868:
 13331              	.LBB2545:
 13332              	.LBI2545:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13333              		.loc 10 36 5 is_stmt 1 view .LVU3748
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13334              		.loc 10 36 5 is_stmt 0 view .LVU3749
 13335              	.LBE2545:
 168:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 13336              		.loc 20 168 18 view .LVU3750
 13337 01b6 2246     		mov	r2, r4
 13338 01b8 2946     		mov	r1, r5
 13339 01ba 5D48     		ldr	r0, .L701+204
 13340 01bc FFF7FEFF 		bl	__aeabi_atexit
 13341              	.LVL869:
 13342              	.LBB2546:
 13343              	.LBI2546:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13344              		.loc 10 36 5 is_stmt 1 view .LVU3751
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13345              		.loc 10 36 5 is_stmt 0 view .LVU3752
 13346              	.LBE2546:
 169:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 13347              		.loc 20 169 18 view .LVU3753
 13348 01c0 2246     		mov	r2, r4
 13349 01c2 2946     		mov	r1, r5
 13350 01c4 5B48     		ldr	r0, .L701+208
 13351 01c6 FFF7FEFF 		bl	__aeabi_atexit
 13352              	.LVL870:
 13353              	.LBB2547:
 13354              	.LBI2547:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13355              		.loc 10 36 5 is_stmt 1 view .LVU3754
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13356              		.loc 10 36 5 is_stmt 0 view .LVU3755
 13357              	.LBE2547:
 170:Veno-Echo.cpp **** 
 13358              		.loc 20 170 18 view .LVU3756
 13359 01ca 2246     		mov	r2, r4
 13360 01cc 2946     		mov	r1, r5
 13361 01ce 5A48     		ldr	r0, .L701+212
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 396


 13362 01d0 FFF7FEFF 		bl	__aeabi_atexit
 13363              	.LVL871:
 13364              	.LBB2548:
 13365              	.LBI2548:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13366              		.loc 10 36 5 is_stmt 1 view .LVU3757
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13367              		.loc 10 36 5 is_stmt 0 view .LVU3758
 13368              	.LBE2548:
 173:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 13369              		.loc 20 173 18 view .LVU3759
 13370 01d4 2246     		mov	r2, r4
 13371 01d6 2946     		mov	r1, r5
 13372 01d8 5848     		ldr	r0, .L701+216
 13373 01da FFF7FEFF 		bl	__aeabi_atexit
 13374              	.LVL872:
 13375              	.LBB2549:
 13376              	.LBI2549:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13377              		.loc 10 36 5 is_stmt 1 view .LVU3760
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13378              		.loc 10 36 5 is_stmt 0 view .LVU3761
 13379              	.LBE2549:
 174:Veno-Echo.cpp **** 
 13380              		.loc 20 174 18 view .LVU3762
 13381 01de 2246     		mov	r2, r4
 13382 01e0 2946     		mov	r1, r5
 13383 01e2 5748     		ldr	r0, .L701+220
 13384 01e4 FFF7FEFF 		bl	__aeabi_atexit
 13385              	.LVL873:
 13386              	.LBB2550:
 13387              	.LBI2550:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13388              		.loc 10 36 5 is_stmt 1 view .LVU3763
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13389              		.loc 10 36 5 is_stmt 0 view .LVU3764
 13390              	.LBE2550:
 180:Veno-Echo.cpp **** Switch ReverseGateR;
 13391              		.loc 20 180 8 view .LVU3765
 13392 01e8 564F     		ldr	r7, .L701+224
 176:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 13393              		.loc 20 176 18 view .LVU3766
 13394 01ea 2246     		mov	r2, r4
 13395 01ec 2946     		mov	r1, r5
 13396 01ee 5648     		ldr	r0, .L701+228
 13397 01f0 FFF7FEFF 		bl	__aeabi_atexit
 13398              	.LVL874:
 13399              	.LBB2551:
 13400              	.LBI2551:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13401              		.loc 10 36 5 is_stmt 1 view .LVU3767
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13402              		.loc 10 36 5 is_stmt 0 view .LVU3768
 13403              	.LBE2551:
 177:Veno-Echo.cpp **** 
 13404              		.loc 20 177 18 view .LVU3769
 13405 01f4 2246     		mov	r2, r4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 397


 13406 01f6 2946     		mov	r1, r5
 13407 01f8 5448     		ldr	r0, .L701+232
 13408 01fa FFF7FEFF 		bl	__aeabi_atexit
 13409              	.LVL875:
 13410              	.LBB2552:
 13411              	.LBI2552:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13412              		.loc 1 40 5 is_stmt 1 view .LVU3770
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13413              		.loc 1 40 5 is_stmt 0 view .LVU3771
 13414              	.LBE2552:
 180:Veno-Echo.cpp **** Switch ReverseGateR;
 13415              		.loc 20 180 8 view .LVU3772
 13416 01fe 2246     		mov	r2, r4
 13417 0200 3946     		mov	r1, r7
 13418 0202 5348     		ldr	r0, .L701+236
 13419 0204 FFF7FEFF 		bl	__aeabi_atexit
 13420              	.LVL876:
 13421              	.LBB2553:
 13422              	.LBI2553:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13423              		.loc 1 40 5 is_stmt 1 view .LVU3773
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13424              		.loc 1 40 5 is_stmt 0 view .LVU3774
 13425              	.LBE2553:
 181:Veno-Echo.cpp **** 
 13426              		.loc 20 181 8 view .LVU3775
 13427 0208 2246     		mov	r2, r4
 13428 020a 3946     		mov	r1, r7
 13429 020c 5148     		ldr	r0, .L701+240
 13430 020e FFF7FEFF 		bl	__aeabi_atexit
 13431              	.LVL877:
 13432              	.LBB2554:
 13433              	.LBI2554:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13434              		.loc 1 40 5 is_stmt 1 view .LVU3776
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13435              		.loc 1 40 5 is_stmt 0 view .LVU3777
 13436              	.LBE2554:
 184:Veno-Echo.cpp **** Switch ClockIn;
 13437              		.loc 20 184 8 view .LVU3778
 13438 0212 2246     		mov	r2, r4
 13439 0214 3946     		mov	r1, r7
 13440 0216 5048     		ldr	r0, .L701+244
 13441 0218 FFF7FEFF 		bl	__aeabi_atexit
 13442              	.LVL878:
 13443              	.LBB2555:
 13444              	.LBI2555:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13445              		.loc 1 40 5 is_stmt 1 view .LVU3779
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 13446              		.loc 1 40 5 is_stmt 0 view .LVU3780
 13447              	.LBE2555:
 185:Veno-Echo.cpp **** 
 13448              		.loc 20 185 8 view .LVU3781
 13449 021c 2246     		mov	r2, r4
 13450 021e 3946     		mov	r1, r7
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 398


 13451 0220 4E48     		ldr	r0, .L701+248
 13452 0222 FFF7FEFF 		bl	__aeabi_atexit
 13453              	.LVL879:
 13454              	.LBB2556:
 13455              	.LBI2556:
  44:taptempo.h    ****     {
 13456              		.loc 13 44 5 is_stmt 1 view .LVU3782
 13457              	.LBB2557:
 13458              	.LBB2558:
  46:taptempo.h    ****         tap_tolerance_ = 1.25f;
 13459              		.loc 13 46 9 view .LVU3783
  54:taptempo.h    ****         clockLength_ = 0;
 13460              		.loc 13 54 19 is_stmt 0 view .LVU3784
 13461 0226 4FF07E55 		mov	r5, #1065353216
  46:taptempo.h    ****         tap_tolerance_ = 1.25f;
 13462              		.loc 13 46 18 view .LVU3785
 13463 022a 4D48     		ldr	r0, .L701+252
  57:taptempo.h    ****     }
 13464              		.loc 13 57 22 view .LVU3786
 13465 022c 42F21073 		movw	r3, #10000
  47:taptempo.h    ****         maxtap_ = 2000000;
 13466              		.loc 13 47 24 view .LVU3787
 13467 0230 4C49     		ldr	r1, .L701+256
 13468              	.LBE2558:
 13469              	.LBE2557:
 13470              	.LBE2556:
 188:Veno-Echo.cpp **** 
 13471              		.loc 20 188 10 view .LVU3788
 13472 0232 2246     		mov	r2, r4
 13473              	.LBB2563:
 13474              	.LBB2561:
 13475              	.LBB2559:
  48:taptempo.h    ****         mintap_ = 80000;
 13476              		.loc 13 48 17 view .LVU3789
 13477 0234 DFF83CE1 		ldr	lr, .L701+272
  51:taptempo.h    ****         lastTime_ = 0;
 13478              		.loc 13 51 16 view .LVU3790
 13479 0238 4B4F     		ldr	r7, .L701+260
  49:taptempo.h    ****         lastTapLength_ = 0;
 13480              		.loc 13 49 17 view .LVU3791
 13481 023a DFF83CC1 		ldr	ip, .L701+276
  46:taptempo.h    ****         tap_tolerance_ = 1.25f;
 13482              		.loc 13 46 18 view .LVU3792
 13483 023e 80F82460 		strb	r6, [r0, #36]
  47:taptempo.h    ****         maxtap_ = 2000000;
 13484              		.loc 13 47 9 is_stmt 1 view .LVU3793
  53:taptempo.h    ****         tapRatio_ = 1.0f;
 13485              		.loc 13 53 22 is_stmt 0 view .LVU3794
 13486 0242 8660     		str	r6, [r0, #8]
  47:taptempo.h    ****         maxtap_ = 2000000;
 13487              		.loc 13 47 24 view .LVU3795
 13488 0244 8162     		str	r1, [r0, #40]	@ float
  48:taptempo.h    ****         mintap_ = 80000;
 13489              		.loc 13 48 9 is_stmt 1 view .LVU3796
  51:taptempo.h    ****         lastTime_ = 0;
 13490              		.loc 13 51 16 is_stmt 0 view .LVU3797
 13491 0246 C762     		str	r7, [r0, #44]	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 399


  54:taptempo.h    ****         clockLength_ = 0;
 13492              		.loc 13 54 19 view .LVU3798
 13493 0248 0563     		str	r5, [r0, #48]	@ float
 13494              	.LBE2559:
 13495              	.LBE2561:
 13496              	.LBE2563:
 188:Veno-Echo.cpp **** 
 13497              		.loc 20 188 10 view .LVU3799
 13498 024a 4849     		ldr	r1, .L701+264
 13499              	.LBB2564:
 13500              	.LBB2562:
 13501              	.LBB2560:
  57:taptempo.h    ****     }
 13502              		.loc 13 57 22 view .LVU3800
 13503 024c 0362     		str	r3, [r0, #32]
  52:taptempo.h    ****         currentTime_ = 0;
 13504              		.loc 13 52 19 view .LVU3801
 13505 024e C0E90366 		strd	r6, r6, [r0, #12]
  56:taptempo.h    ****         clockThresh_ = 10000; //Us change
 13506              		.loc 13 56 26 view .LVU3802
 13507 0252 C0E90666 		strd	r6, r6, [r0, #24]
  49:taptempo.h    ****         lastTapLength_ = 0;
 13508              		.loc 13 49 17 view .LVU3803
 13509 0256 C0E900CE 		strd	ip, lr, [r0]
  50:taptempo.h    ****         tempo_ = 500000.0f;
 13510              		.loc 13 50 9 is_stmt 1 view .LVU3804
  51:taptempo.h    ****         lastTime_ = 0;
 13511              		.loc 13 51 9 view .LVU3805
  52:taptempo.h    ****         currentTime_ = 0;
 13512              		.loc 13 52 9 view .LVU3806
  53:taptempo.h    ****         tapRatio_ = 1.0f;
 13513              		.loc 13 53 9 view .LVU3807
  54:taptempo.h    ****         clockLength_ = 0;
 13514              		.loc 13 54 9 view .LVU3808
  55:taptempo.h    ****         lastClockLength_ = 0;
 13515              		.loc 13 55 9 view .LVU3809
  56:taptempo.h    ****         clockThresh_ = 10000; //Us change
 13516              		.loc 13 56 9 view .LVU3810
  57:taptempo.h    ****     }
 13517              		.loc 13 57 9 view .LVU3811
 13518              	.LVL880:
  57:taptempo.h    ****     }
 13519              		.loc 13 57 9 is_stmt 0 view .LVU3812
 13520              	.LBE2560:
 13521              	.LBE2562:
 13522              	.LBE2564:
 13523              	.LBE2567:
 13524              	.LBE2571:
 13525              		.loc 20 2145 1 view .LVU3813
 13526 025a BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 13527              		.cfi_restore 14
 13528              		.cfi_restore 8
 13529              		.cfi_restore 7
 13530              		.cfi_restore 6
 13531              		.cfi_restore 5
 13532              		.cfi_restore 4
 13533              		.cfi_def_cfa_offset 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 400


 13534              	.LBB2572:
 13535              	.LBB2568:
 188:Veno-Echo.cpp **** 
 13536              		.loc 20 188 10 view .LVU3814
 13537 025e FFF7FEBF 		b	__aeabi_atexit
 13538              	.LVL881:
 13539              	.L702:
 13540 0262 00BF     		.align	2
 13541              	.L701:
 13542 0264 00000000 		.word	.LANCHOR4
 13543 0268 00000000 		.word	__dso_handle
 13544 026c 00000000 		.word	_ZN7daisysp3SvfD1Ev
 13545 0270 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 13546 0274 00000000 		.word	.LANCHOR47
 13547 0278 00000000 		.word	.LANCHOR48
 13548 027c 00000000 		.word	.LANCHOR35
 13549 0280 00000000 		.word	.LANCHOR36
 13550 0284 00000000 		.word	.LANCHOR49
 13551 0288 00000000 		.word	.LANCHOR50
 13552 028c 00000000 		.word	.LANCHOR37
 13553 0290 00000000 		.word	.LANCHOR38
 13554 0294 00000000 		.word	_ZN7daisysp10OscillatorD1Ev
 13555 0298 00000000 		.word	.LANCHOR76
 13556 029c 17B7D138 		.word	953267991
 13557 02a0 00000000 		.word	.LANCHOR132
 13558 02a4 00000000 		.word	_ZN7daisysp9EnvFollowD1Ev
 13559 02a8 00000000 		.word	.LANCHOR133
 13560 02ac 00000000 		.word	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 13561 02b0 00000000 		.word	.LANCHOR108
 13562 02b4 00000000 		.word	.LANCHOR109
 13563 02b8 00000000 		.word	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 13564 02bc 00000000 		.word	delMemsL
 13565 02c0 00000000 		.word	delMemsR
 13566 02c4 00000000 		.word	_ZN10DelayMultiD1Ev
 13567 02c8 00000000 		.word	delMemsL_REV
 13568 02cc 00000000 		.word	delMemsR_REV
 13569 02d0 00000000 		.word	_ZN9ButtonLEDD1Ev
 13570 02d4 00000000 		.word	.LANCHOR0
 13571 02d8 00000000 		.word	.LANCHOR1
 13572 02dc 00000000 		.word	.LANCHOR96
 13573 02e0 00000000 		.word	.LANCHOR97
 13574 02e4 00000000 		.word	.LANCHOR94
 13575 02e8 00000000 		.word	.LANCHOR95
 13576 02ec 00000000 		.word	_ZN7daisysp4AdsrD1Ev
 13577 02f0 00000000 		.word	.LANCHOR98
 13578 02f4 00000000 		.word	_ZN8TempoLEDD1Ev
 13579 02f8 00000000 		.word	.LANCHOR89
 13580 02fc 00000000 		.word	.LANCHOR102
 13581 0300 00000000 		.word	.LANCHOR103
 13582 0304 00000000 		.word	_ZN7daisysp9CrossFadeD1Ev
 13583 0308 00000000 		.word	.LANCHOR104
 13584 030c 00000000 		.word	.LANCHOR105
 13585 0310 00000000 		.word	.LANCHOR106
 13586 0314 00000000 		.word	.LANCHOR107
 13587 0318 00000000 		.word	.LANCHOR65
 13588 031c 00000000 		.word	.LANCHOR120
 13589 0320 00000000 		.word	.LANCHOR121
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 401


 13590 0324 00000000 		.word	.LANCHOR118
 13591 0328 00000000 		.word	.LANCHOR119
 13592 032c 00000000 		.word	.LANCHOR124
 13593 0330 00000000 		.word	.LANCHOR125
 13594 0334 00000000 		.word	.LANCHOR122
 13595 0338 00000000 		.word	.LANCHOR123
 13596 033c 00000000 		.word	.LANCHOR126
 13597 0340 00000000 		.word	.LANCHOR127
 13598 0344 00000000 		.word	_ZN5daisy6SwitchD1Ev
 13599 0348 00000000 		.word	.LANCHOR128
 13600 034c 00000000 		.word	.LANCHOR129
 13601 0350 00000000 		.word	.LANCHOR99
 13602 0354 00000000 		.word	.LANCHOR100
 13603 0358 00000000 		.word	.LANCHOR101
 13604 035c 00000000 		.word	.LANCHOR88
 13605 0360 00000000 		.word	.LANCHOR26
 13606 0364 0000A03F 		.word	1067450368
 13607 0368 0024F448 		.word	1223959552
 13608 036c 00000000 		.word	_ZN8TaptempoD1Ev
 13609 0370 00000000 		.word	_ZN7daisysp7DcBlockD1Ev
 13610 0374 80841E00 		.word	2000000
 13611 0378 80380100 		.word	80000
 13612              	.LBE2568:
 13613              	.LBE2572:
 13614              		.cfi_endproc
 13615              	.LFE4919:
 13617              		.section	.init_array,"aw",%init_array
 13618              		.align	2
 13619 0000 00000000 		.word	_GLOBAL__sub_I_delMemsL(target1)
 13620              		.global	AltControls
 13621              		.global	BaseTempo
 13622              		.global	ClockIn
 13623              		.global	Sync
 13624              		.global	ReverseGateR
 13625              		.global	ReverseGateL
 13626              		.global	PHASE_DEBUG
 13627              		.global	DELAYR_DEBUG
 13628              		.global	DELAYL_DEBUG
 13629              		.global	saveState
 13630              		.global	save_flag
 13631              		.global	PostFilters
 13632              		.global	ClockInFlag
 13633              		.global	mute
 13634              		.global	shift
 13635              		.global	syncMode
 13636              		.global	modulation_CV_Raw
 13637              		.global	ModDepth
 13638              		.global	filterXfade
 13639              		.global	width_CV
 13640              		.global	width
 13641              		.global	drywet_CV
 13642              		.global	drywet
 13643              		.global	crossfeedback_CV
 13644              		.global	crossfeedback
 13645              		.global	feedbackR_CV
 13646              		.global	feedbackR
 13647              		.global	feedbackL_CV
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 402


 13648              		.global	feedbackL
 13649              		.global	delayTimeR_CV
 13650              		.global	delayTimeL_CV
 13651              		.global	tempoLED_BASE
 13652              		.global	Tap_Button
 13653              		.global	Rev_R_sw
 13654              		.global	Rev_L_sw
 13655              		.global	HPF_sw
 13656              		.global	LPF_sw
 13657              		.global	delaysR_REV
 13658              		.global	delaysL_REV
 13659              		.global	delayR
 13660              		.global	delayL
 13661              		.global	delMemsR_REV
 13662              		.global	delMemsL_REV
 13663              		.global	delMemsR
 13664              		.global	delMemsL
 13665              		.section	.bss.AltControls,"aw",%nobits
 13666              		.align	2
 13667              		.set	.LANCHOR15,. + 0
 13670              	AltControls:
 13671 0000 00000000 		.space	44
 13671      00000000 
 13671      00000000 
 13671      00000000 
 13671      00000000 
 13672              		.section	.bss.BaseTempo,"aw",%nobits
 13673              		.align	2
 13674              		.set	.LANCHOR26,. + 0
 13677              	BaseTempo:
 13678 0000 00000000 		.space	52
 13678      00000000 
 13678      00000000 
 13678      00000000 
 13678      00000000 
 13679              		.section	.bss.ClockIn,"aw",%nobits
 13680              		.align	2
 13681              		.set	.LANCHOR88,. + 0
 13684              	ClockIn:
 13685 0000 00000000 		.space	16
 13685      00000000 
 13685      00000000 
 13685      00000000 
 13686              		.section	.bss.ClockInFlag,"aw",%nobits
 13689              	ClockInFlag:
 13690 0000 00       		.space	1
 13691              		.section	.bss.DELAYL_DEBUG,"aw",%nobits
 13692              		.align	2
 13693              		.set	.LANCHOR90,. + 0
 13696              	DELAYL_DEBUG:
 13697 0000 00000000 		.space	4
 13698              		.section	.bss.DELAYR_DEBUG,"aw",%nobits
 13699              		.align	2
 13700              		.set	.LANCHOR91,. + 0
 13703              	DELAYR_DEBUG:
 13704 0000 00000000 		.space	4
 13705              		.section	.bss.HPF_sw,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 403


 13706              		.align	2
 13707              		.set	.LANCHOR97,. + 0
 13710              	HPF_sw:
 13711 0000 00000000 		.space	52
 13711      00000000 
 13711      00000000 
 13711      00000000 
 13711      00000000 
 13712              		.section	.bss.LPF_sw,"aw",%nobits
 13713              		.align	2
 13714              		.set	.LANCHOR96,. + 0
 13717              	LPF_sw:
 13718 0000 00000000 		.space	52
 13718      00000000 
 13718      00000000 
 13718      00000000 
 13718      00000000 
 13719              		.section	.bss.ModDepth,"aw",%nobits
 13720              		.align	2
 13721              		.set	.LANCHOR68,. + 0
 13724              	ModDepth:
 13725 0000 00000000 		.space	4
 13726              		.section	.bss.PHASE_DEBUG,"aw",%nobits
 13727              		.align	2
 13728              		.set	.LANCHOR93,. + 0
 13731              	PHASE_DEBUG:
 13732 0000 00000000 		.space	4
 13733              		.section	.bss.PostFilters,"aw",%nobits
 13734              		.set	.LANCHOR83,. + 0
 13737              	PostFilters:
 13738 0000 00       		.space	1
 13739              		.section	.bss.Rev_L_sw,"aw",%nobits
 13740              		.align	2
 13741              		.set	.LANCHOR94,. + 0
 13744              	Rev_L_sw:
 13745 0000 00000000 		.space	52
 13745      00000000 
 13745      00000000 
 13745      00000000 
 13745      00000000 
 13746              		.section	.bss.Rev_R_sw,"aw",%nobits
 13747              		.align	2
 13748              		.set	.LANCHOR95,. + 0
 13751              	Rev_R_sw:
 13752 0000 00000000 		.space	52
 13752      00000000 
 13752      00000000 
 13752      00000000 
 13752      00000000 
 13753              		.section	.bss.ReverseGateL,"aw",%nobits
 13754              		.align	2
 13755              		.set	.LANCHOR99,. + 0
 13758              	ReverseGateL:
 13759 0000 00000000 		.space	16
 13759      00000000 
 13759      00000000 
 13759      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 404


 13760              		.section	.bss.ReverseGateR,"aw",%nobits
 13761              		.align	2
 13762              		.set	.LANCHOR100,. + 0
 13765              	ReverseGateR:
 13766 0000 00000000 		.space	16
 13766      00000000 
 13766      00000000 
 13766      00000000 
 13767              		.section	.bss.Sync,"aw",%nobits
 13768              		.align	2
 13769              		.set	.LANCHOR101,. + 0
 13772              	Sync:
 13773 0000 00000000 		.space	16
 13773      00000000 
 13773      00000000 
 13773      00000000 
 13774              		.section	.bss.Tap_Button,"aw",%nobits
 13775              		.align	2
 13776              		.set	.LANCHOR98,. + 0
 13779              	Tap_Button:
 13780 0000 00000000 		.space	52
 13780      00000000 
 13780      00000000 
 13780      00000000 
 13780      00000000 
 13781              		.section	.bss._ZL10FwdRevLEnv,"aw",%nobits
 13782              		.align	2
 13783              		.set	.LANCHOR102,. + 0
 13786              	_ZL10FwdRevLEnv:
 13787 0000 00000000 		.space	56
 13787      00000000 
 13787      00000000 
 13787      00000000 
 13787      00000000 
 13788              		.section	.bss._ZL10FwdRevREnv,"aw",%nobits
 13789              		.align	2
 13790              		.set	.LANCHOR103,. + 0
 13793              	_ZL10FwdRevREnv:
 13794 0000 00000000 		.space	56
 13794      00000000 
 13794      00000000 
 13794      00000000 
 13794      00000000 
 13795              		.section	.bss._ZL10HPF_LXfade,"aw",%nobits
 13796              		.align	2
 13797              		.set	.LANCHOR118,. + 0
 13800              	_ZL10HPF_LXfade:
 13801 0000 00000000 		.space	8
 13801      00000000 
 13802              		.section	.bss._ZL10HPF_L_post,"aw",%nobits
 13803              		.align	2
 13804              		.set	.LANCHOR37,. + 0
 13807              	_ZL10HPF_L_post:
 13808 0000 00000000 		.space	76
 13808      00000000 
 13808      00000000 
 13808      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 405


 13808      00000000 
 13809              		.section	.bss._ZL10HPF_RXfade,"aw",%nobits
 13810              		.align	2
 13811              		.set	.LANCHOR119,. + 0
 13814              	_ZL10HPF_RXfade:
 13815 0000 00000000 		.space	8
 13815      00000000 
 13816              		.section	.bss._ZL10HPF_R_post,"aw",%nobits
 13817              		.align	2
 13818              		.set	.LANCHOR38,. + 0
 13821              	_ZL10HPF_R_post:
 13822 0000 00000000 		.space	76
 13822      00000000 
 13822      00000000 
 13822      00000000 
 13822      00000000 
 13823              		.section	.bss._ZL10LPF_LXfade,"aw",%nobits
 13824              		.align	2
 13825              		.set	.LANCHOR120,. + 0
 13828              	_ZL10LPF_LXfade:
 13829 0000 00000000 		.space	8
 13829      00000000 
 13830              		.section	.bss._ZL10LPF_L_post,"aw",%nobits
 13831              		.align	2
 13832              		.set	.LANCHOR49,. + 0
 13835              	_ZL10LPF_L_post:
 13836 0000 00000000 		.space	76
 13836      00000000 
 13836      00000000 
 13836      00000000 
 13836      00000000 
 13837              		.section	.bss._ZL10LPF_RXfade,"aw",%nobits
 13838              		.align	2
 13839              		.set	.LANCHOR121,. + 0
 13842              	_ZL10LPF_RXfade:
 13843 0000 00000000 		.space	8
 13843      00000000 
 13844              		.section	.bss._ZL10LPF_R_post,"aw",%nobits
 13845              		.align	2
 13846              		.set	.LANCHOR50,. + 0
 13849              	_ZL10LPF_R_post:
 13850 0000 00000000 		.space	76
 13850      00000000 
 13850      00000000 
 13850      00000000 
 13850      00000000 
 13851              		.section	.bss._ZL10WidthXfade,"aw",%nobits
 13852              		.align	2
 13853              		.set	.LANCHOR65,. + 0
 13856              	_ZL10WidthXfade:
 13857 0000 00000000 		.space	8
 13857      00000000 
 13858              		.section	.bss._ZL11DcBlock_LFB,"aw",%nobits
 13859              		.align	2
 13860              		.set	.LANCHOR108,. + 0
 13863              	_ZL11DcBlock_LFB:
 13864 0000 00000000 		.space	12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 406


 13864      00000000 
 13864      00000000 
 13865              		.section	.bss._ZL11DcBlock_RFB,"aw",%nobits
 13866              		.align	2
 13867              		.set	.LANCHOR109,. + 0
 13870              	_ZL11DcBlock_RFB:
 13871 0000 00000000 		.space	12
 13871      00000000 
 13871      00000000 
 13872              		.section	.bss._ZL11FilterMix_L,"aw",%nobits
 13873              		.align	2
 13874              		.set	.LANCHOR126,. + 0
 13877              	_ZL11FilterMix_L:
 13878 0000 00000000 		.space	8
 13878      00000000 
 13879              		.section	.bss._ZL11FilterMix_R,"aw",%nobits
 13880              		.align	2
 13881              		.set	.LANCHOR127,. + 0
 13884              	_ZL11FilterMix_R:
 13885 0000 00000000 		.space	8
 13885      00000000 
 13886              		.section	.bss._ZL12FwdRevLXfade,"aw",%nobits
 13887              		.align	2
 13888              		.set	.LANCHOR106,. + 0
 13891              	_ZL12FwdRevLXfade:
 13892 0000 00000000 		.space	8
 13892      00000000 
 13893              		.section	.bss._ZL12FwdRevRXfade,"aw",%nobits
 13894              		.align	2
 13895              		.set	.LANCHOR107,. + 0
 13898              	_ZL12FwdRevRXfade:
 13899 0000 00000000 		.space	8
 13899      00000000 
 13900              		.section	.bss._ZL15HPF_LXfade_post,"aw",%nobits
 13901              		.align	2
 13902              		.set	.LANCHOR122,. + 0
 13905              	_ZL15HPF_LXfade_post:
 13906 0000 00000000 		.space	8
 13906      00000000 
 13907              		.section	.bss._ZL15HPF_RXfade_post,"aw",%nobits
 13908              		.align	2
 13909              		.set	.LANCHOR123,. + 0
 13912              	_ZL15HPF_RXfade_post:
 13913 0000 00000000 		.space	8
 13913      00000000 
 13914              		.section	.bss._ZL15LPF_LXfade_post,"aw",%nobits
 13915              		.align	2
 13916              		.set	.LANCHOR124,. + 0
 13919              	_ZL15LPF_LXfade_post:
 13920 0000 00000000 		.space	8
 13920      00000000 
 13921              		.section	.bss._ZL15LPF_RXfade_post,"aw",%nobits
 13922              		.align	2
 13923              		.set	.LANCHOR125,. + 0
 13926              	_ZL15LPF_RXfade_post:
 13927 0000 00000000 		.space	8
 13927      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 407


 13928              		.section	.bss._ZL16FilterMix_L_post,"aw",%nobits
 13929              		.align	2
 13930              		.set	.LANCHOR128,. + 0
 13933              	_ZL16FilterMix_L_post:
 13934 0000 00000000 		.space	8
 13934      00000000 
 13935              		.section	.bss._ZL16FilterMix_R_post,"aw",%nobits
 13936              		.align	2
 13937              		.set	.LANCHOR129,. + 0
 13940              	_ZL16FilterMix_R_post:
 13941 0000 00000000 		.space	8
 13941      00000000 
 13942              		.section	.bss._ZL2hw,"aw",%nobits
 13943              		.align	2
 13944              		.set	.LANCHOR4,. + 0
 13947              	_ZL2hw:
 13948 0000 00000000 		.space	60
 13948      00000000 
 13948      00000000 
 13948      00000000 
 13948      00000000 
 13949              		.section	.bss._ZL3lfo,"aw",%nobits
 13950              		.align	2
 13951              		.set	.LANCHOR76,. + 0
 13954              	_ZL3lfo:
 13955 0000 00000000 		.space	40
 13955      00000000 
 13955      00000000 
 13955      00000000 
 13955      00000000 
 13956              		.section	.bss._ZL5HPF_L,"aw",%nobits
 13957              		.align	2
 13958              		.set	.LANCHOR35,. + 0
 13961              	_ZL5HPF_L:
 13962 0000 00000000 		.space	76
 13962      00000000 
 13962      00000000 
 13962      00000000 
 13962      00000000 
 13963              		.section	.bss._ZL5HPF_R,"aw",%nobits
 13964              		.align	2
 13965              		.set	.LANCHOR36,. + 0
 13968              	_ZL5HPF_R:
 13969 0000 00000000 		.space	76
 13969      00000000 
 13969      00000000 
 13969      00000000 
 13969      00000000 
 13970              		.section	.bss._ZL5LPF_L,"aw",%nobits
 13971              		.align	2
 13972              		.set	.LANCHOR47,. + 0
 13975              	_ZL5LPF_L:
 13976 0000 00000000 		.space	76
 13976      00000000 
 13976      00000000 
 13976      00000000 
 13976      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 408


 13977              		.section	.bss._ZL5LPF_R,"aw",%nobits
 13978              		.align	2
 13979              		.set	.LANCHOR48,. + 0
 13982              	_ZL5LPF_R:
 13983 0000 00000000 		.space	76
 13983      00000000 
 13983      00000000 
 13983      00000000 
 13983      00000000 
 13984              		.section	.bss._ZL7HPF_Env,"aw",%nobits
 13985              		.align	2
 13986              		.set	.LANCHOR105,. + 0
 13989              	_ZL7HPF_Env:
 13990 0000 00000000 		.space	56
 13990      00000000 
 13990      00000000 
 13990      00000000 
 13990      00000000 
 13991              		.section	.bss._ZL7LPF_Env,"aw",%nobits
 13992              		.align	2
 13993              		.set	.LANCHOR104,. + 0
 13996              	_ZL7LPF_Env:
 13997 0000 00000000 		.space	56
 13997      00000000 
 13997      00000000 
 13997      00000000 
 13997      00000000 
 13998              		.section	.bss._ZL7LeftEnv,"aw",%nobits
 13999              		.align	2
 14000              		.set	.LANCHOR132,. + 0
 14003              	_ZL7LeftEnv:
 14004 0000 00000000 		.space	24
 14004      00000000 
 14004      00000000 
 14004      00000000 
 14004      00000000 
 14005              		.section	.bss._ZL8RightEnv,"aw",%nobits
 14006              		.align	2
 14007              		.set	.LANCHOR133,. + 0
 14010              	_ZL8RightEnv:
 14011 0000 00000000 		.space	24
 14011      00000000 
 14011      00000000 
 14011      00000000 
 14011      00000000 
 14012              		.section	.bss._ZZ10Update_ModvE13modulation_CV,"aw",%nobits
 14013              		.align	2
 14014              		.set	.LANCHOR86,. + 0
 14017              	_ZZ10Update_ModvE13modulation_CV:
 14018 0000 00000000 		.space	4
 14019              		.section	.bss._ZZ10Update_ModvE17ModDepth_Filtered,"aw",%nobits
 14020              		.align	2
 14021              		.set	.LANCHOR87,. + 0
 14024              	_ZZ10Update_ModvE17ModDepth_Filtered:
 14025 0000 00000000 		.space	4
 14026              		.section	.bss._ZZ12Update_widthvE10width_Last,"aw",%nobits
 14027              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 409


 14028              		.set	.LANCHOR63,. + 0
 14031              	_ZZ12Update_widthvE10width_Last:
 14032 0000 00000000 		.space	4
 14033              		.section	.bss._ZZ12Update_widthvE12ModDepth_new,"aw",%nobits
 14034              		.align	2
 14035              		.set	.LANCHOR67,. + 0
 14038              	_ZZ12Update_widthvE12ModDepth_new:
 14039 0000 00000000 		.space	4
 14040              		.section	.bss._ZZ12Update_widthvE12width_pickup,"aw",%nobits
 14041              		.set	.LANCHOR61,. + 0
 14044              	_ZZ12Update_widthvE12width_pickup:
 14045 0000 00       		.space	1
 14046              		.section	.bss._ZZ12Update_widthvE15ModDepth_pickup,"aw",%nobits
 14047              		.set	.LANCHOR66,. + 0
 14050              	_ZZ12Update_widthvE15ModDepth_pickup:
 14051 0000 00       		.space	1
 14052              		.section	.bss._ZZ12Update_widthvE9lastShift,"aw",%nobits
 14053              		.set	.LANCHOR60,. + 0
 14056              	_ZZ12Update_widthvE9lastShift:
 14057 0000 00       		.space	1
 14058              		.section	.bss._ZZ12Update_widthvE9width_new,"aw",%nobits
 14059              		.align	2
 14060              		.set	.LANCHOR62,. + 0
 14063              	_ZZ12Update_widthvE9width_new:
 14064 0000 00000000 		.space	4
 14065              		.section	.bss._ZZ13Update_drywetvE10Res_pickup,"aw",%nobits
 14066              		.set	.LANCHOR57,. + 0
 14069              	_ZZ13Update_drywetvE10Res_pickup:
 14070 0000 00       		.space	1
 14071              		.section	.bss._ZZ13Update_drywetvE10drywet_new,"aw",%nobits
 14072              		.align	2
 14073              		.set	.LANCHOR54,. + 0
 14076              	_ZZ13Update_drywetvE10drywet_new:
 14077 0000 00000000 		.space	4
 14078              		.section	.bss._ZZ13Update_drywetvE11drywet_Last,"aw",%nobits
 14079              		.align	2
 14080              		.set	.LANCHOR55,. + 0
 14083              	_ZZ13Update_drywetvE11drywet_Last:
 14084 0000 00000000 		.space	4
 14085              		.section	.bss._ZZ13Update_drywetvE13drywet_pickup,"aw",%nobits
 14086              		.set	.LANCHOR53,. + 0
 14089              	_ZZ13Update_drywetvE13drywet_pickup:
 14090 0000 00       		.space	1
 14091              		.section	.bss._ZZ13Update_drywetvE7Res_new,"aw",%nobits
 14092              		.align	2
 14093              		.set	.LANCHOR58,. + 0
 14096              	_ZZ13Update_drywetvE7Res_new:
 14097 0000 00000000 		.space	4
 14098              		.section	.bss._ZZ13Update_drywetvE9lastShift,"aw",%nobits
 14099              		.set	.LANCHOR52,. + 0
 14102              	_ZZ13Update_drywetvE9lastShift:
 14103 0000 00       		.space	1
 14104              		.section	.bss._ZZ14Update_ButtonsvE11buttonstate,"aw",%nobits
 14105              		.align	2
 14106              		.set	.LANCHOR112,. + 0
 14109              	_ZZ14Update_ButtonsvE11buttonstate:
 14110 0000 00000000 		.space	4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 410


 14111              		.section	.bss._ZZ14Update_ButtonsvE9resetTime,"aw",%nobits
 14112              		.align	2
 14113              		.set	.LANCHOR113,. + 0
 14116              	_ZZ14Update_ButtonsvE9resetTime:
 14117 0000 00000000 		.space	4
 14118              		.section	.bss._ZZ14Update_ButtonsvE9shiftTime,"aw",%nobits
 14119              		.align	2
 14120              		.set	.LANCHOR114,. + 0
 14123              	_ZZ14Update_ButtonsvE9shiftTime:
 14124 0000 00000000 		.space	4
 14125              		.section	.bss._ZZ16Update_feedbackLvE12HPCutoff_new,"aw",%nobits
 14126              		.align	2
 14127              		.set	.LANCHOR34,. + 0
 14130              	_ZZ16Update_feedbackLvE12HPCutoff_new:
 14131 0000 00000000 		.space	4
 14132              		.section	.bss._ZZ16Update_feedbackLvE13feedbackL_new,"aw",%nobits
 14133              		.align	2
 14134              		.set	.LANCHOR30,. + 0
 14137              	_ZZ16Update_feedbackLvE13feedbackL_new:
 14138 0000 00000000 		.space	4
 14139              		.section	.bss._ZZ16Update_feedbackLvE14feedbackL_Last,"aw",%nobits
 14140              		.align	2
 14141              		.set	.LANCHOR31,. + 0
 14144              	_ZZ16Update_feedbackLvE14feedbackL_Last:
 14145 0000 00000000 		.space	4
 14146              		.section	.bss._ZZ16Update_feedbackLvE15HPCutoff_pickup,"aw",%nobits
 14147              		.set	.LANCHOR33,. + 0
 14150              	_ZZ16Update_feedbackLvE15HPCutoff_pickup:
 14151 0000 00       		.space	1
 14152              		.section	.bss._ZZ16Update_feedbackLvE16feedbackL_pickup,"aw",%nobits
 14153              		.set	.LANCHOR29,. + 0
 14156              	_ZZ16Update_feedbackLvE16feedbackL_pickup:
 14157 0000 00       		.space	1
 14158              		.section	.bss._ZZ16Update_feedbackLvE9lastShift,"aw",%nobits
 14159              		.set	.LANCHOR28,. + 0
 14162              	_ZZ16Update_feedbackLvE9lastShift:
 14163 0000 00       		.space	1
 14164              		.section	.bss._ZZ16Update_feedbackRvE12LPCutoff_new,"aw",%nobits
 14165              		.align	2
 14166              		.set	.LANCHOR46,. + 0
 14169              	_ZZ16Update_feedbackRvE12LPCutoff_new:
 14170 0000 00000000 		.space	4
 14171              		.section	.bss._ZZ16Update_feedbackRvE13feedbackR_new,"aw",%nobits
 14172              		.align	2
 14173              		.set	.LANCHOR43,. + 0
 14176              	_ZZ16Update_feedbackRvE13feedbackR_new:
 14177 0000 00000000 		.space	4
 14178              		.section	.bss._ZZ16Update_feedbackRvE14feedbackR_Last,"aw",%nobits
 14179              		.align	2
 14180              		.set	.LANCHOR42,. + 0
 14183              	_ZZ16Update_feedbackRvE14feedbackR_Last:
 14184 0000 00000000 		.space	4
 14185              		.section	.bss._ZZ16Update_feedbackRvE15LPCutoff_pickup,"aw",%nobits
 14186              		.set	.LANCHOR45,. + 0
 14189              	_ZZ16Update_feedbackRvE15LPCutoff_pickup:
 14190 0000 00       		.space	1
 14191              		.section	.bss._ZZ16Update_feedbackRvE16feedbackR_pickup,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 411


 14192              		.set	.LANCHOR41,. + 0
 14195              	_ZZ16Update_feedbackRvE16feedbackR_pickup:
 14196 0000 00       		.space	1
 14197              		.section	.bss._ZZ16Update_feedbackRvE9lastShift,"aw",%nobits
 14198              		.set	.LANCHOR40,. + 0
 14201              	_ZZ16Update_feedbackRvE9lastShift:
 14202 0000 00       		.space	1
 14203              		.section	.bss._ZZ17Update_DelayTimeLvE14delayTimeL_new,"aw",%nobits
 14204              		.align	2
 14205              		.set	.LANCHOR10,. + 0
 14208              	_ZZ17Update_DelayTimeLvE14delayTimeL_new:
 14209 0000 00000000 		.space	4
 14210              		.section	.bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last,"aw",%nobits
 14211              		.align	2
 14212              		.set	.LANCHOR11,. + 0
 14215              	_ZZ17Update_DelayTimeLvE15delayTimeL_Last:
 14216 0000 00000000 		.space	4
 14217              		.section	.bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new,"aw",%nobits
 14218              		.align	2
 14219              		.set	.LANCHOR14,. + 0
 14222              	_ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:
 14223 0000 00000000 		.space	4
 14224              		.section	.bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup,"aw",%nobits
 14225              		.set	.LANCHOR9,. + 0
 14228              	_ZZ17Update_DelayTimeLvE17delayTimeL_pickup:
 14229 0000 00       		.space	1
 14230              		.section	.bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup,"aw",%nobits
 14231              		.set	.LANCHOR13,. + 0
 14234              	_ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:
 14235 0000 00       		.space	1
 14236              		.section	.bss._ZZ17Update_DelayTimeLvE8counterL,"aw",%nobits
 14237              		.align	2
 14238              		.set	.LANCHOR6,. + 0
 14241              	_ZZ17Update_DelayTimeLvE8counterL:
 14242 0000 00000000 		.space	4
 14243              		.section	.bss._ZZ17Update_DelayTimeLvE9lastShift,"aw",%nobits
 14244              		.set	.LANCHOR8,. + 0
 14247              	_ZZ17Update_DelayTimeLvE9lastShift:
 14248 0000 00       		.space	1
 14249              		.section	.bss._ZZ17Update_DelayTimeRvE12tapRatio_new,"aw",%nobits
 14250              		.align	2
 14251              		.set	.LANCHOR24,. + 0
 14254              	_ZZ17Update_DelayTimeRvE12tapRatio_new:
 14255 0000 00000000 		.space	4
 14256              		.section	.bss._ZZ17Update_DelayTimeRvE14delayTimeR_new,"aw",%nobits
 14257              		.align	2
 14258              		.set	.LANCHOR21,. + 0
 14261              	_ZZ17Update_DelayTimeRvE14delayTimeR_new:
 14262 0000 00000000 		.space	4
 14263              		.section	.bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last,"aw",%nobits
 14264              		.align	2
 14265              		.set	.LANCHOR22,. + 0
 14268              	_ZZ17Update_DelayTimeRvE15delayTimeR_Last:
 14269 0000 00000000 		.space	4
 14270              		.section	.bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup,"aw",%nobits
 14271              		.set	.LANCHOR23,. + 0
 14274              	_ZZ17Update_DelayTimeRvE15tapRatio_pickup:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 412


 14275 0000 00       		.space	1
 14276              		.section	.bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup,"aw",%nobits
 14277              		.set	.LANCHOR20,. + 0
 14280              	_ZZ17Update_DelayTimeRvE17delayTimeR_pickup:
 14281 0000 00       		.space	1
 14282              		.section	.bss._ZZ17Update_DelayTimeRvE8counterR,"aw",%nobits
 14283              		.align	2
 14284              		.set	.LANCHOR18,. + 0
 14287              	_ZZ17Update_DelayTimeRvE8counterR:
 14288 0000 00000000 		.space	4
 14289              		.section	.bss._ZZ17Update_DelayTimeRvE9lastShift,"aw",%nobits
 14290              		.set	.LANCHOR19,. + 0
 14293              	_ZZ17Update_DelayTimeRvE9lastShift:
 14294 0000 00       		.space	1
 14295              		.section	.bss._ZZ18Update_filterXfadevE15PostFilters_new,"aw",%nobits
 14296              		.align	2
 14297              		.set	.LANCHOR82,. + 0
 14300              	_ZZ18Update_filterXfadevE15PostFilters_new:
 14301 0000 00000000 		.space	4
 14302              		.section	.bss._ZZ18Update_filterXfadevE15filterXfade_new,"aw",%nobits
 14303              		.align	2
 14304              		.set	.LANCHOR79,. + 0
 14307              	_ZZ18Update_filterXfadevE15filterXfade_new:
 14308 0000 00000000 		.space	4
 14309              		.section	.bss._ZZ18Update_filterXfadevE16filterXfade_last,"aw",%nobits
 14310              		.align	2
 14311              		.set	.LANCHOR84,. + 0
 14314              	_ZZ18Update_filterXfadevE16filterXfade_last:
 14315 0000 00000000 		.space	4
 14316              		.section	.bss._ZZ18Update_filterXfadevE18PostFilters_pickup,"aw",%nobits
 14317              		.set	.LANCHOR81,. + 0
 14320              	_ZZ18Update_filterXfadevE18PostFilters_pickup:
 14321 0000 00       		.space	1
 14322              		.section	.bss._ZZ18Update_filterXfadevE18filterXfade_pickup,"aw",%nobits
 14323              		.set	.LANCHOR78,. + 0
 14326              	_ZZ18Update_filterXfadevE18filterXfade_pickup:
 14327 0000 00       		.space	1
 14328              		.section	.bss._ZZ18Update_filterXfadevE9lastShift,"aw",%nobits
 14329              		.set	.LANCHOR77,. + 0
 14332              	_ZZ18Update_filterXfadevE9lastShift:
 14333 0000 00       		.space	1
 14334              		.section	.bss._ZZ19Update_BaseTempoLEDvE12phaseCounter,"aw",%nobits
 14335              		.align	2
 14336              		.set	.LANCHOR92,. + 0
 14339              	_ZZ19Update_BaseTempoLEDvE12phaseCounter:
 14340 0000 00000000 		.space	4
 14341              		.section	.bss._ZZ20Update_crossfeedbackvE11modRate_new,"aw",%nobits
 14342              		.align	2
 14343              		.set	.LANCHOR74,. + 0
 14346              	_ZZ20Update_crossfeedbackvE11modRate_new:
 14347 0000 00000000 		.space	4
 14348              		.section	.bss._ZZ20Update_crossfeedbackvE14modRate_pickup,"aw",%nobits
 14349              		.set	.LANCHOR73,. + 0
 14352              	_ZZ20Update_crossfeedbackvE14modRate_pickup:
 14353 0000 00       		.space	1
 14354              		.section	.bss._ZZ20Update_crossfeedbackvE17crossfeedback_new,"aw",%nobits
 14355              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 413


 14356              		.set	.LANCHOR71,. + 0
 14359              	_ZZ20Update_crossfeedbackvE17crossfeedback_new:
 14360 0000 00000000 		.space	4
 14361              		.section	.bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last,"aw",%nobits
 14362              		.align	2
 14363              		.set	.LANCHOR75,. + 0
 14366              	_ZZ20Update_crossfeedbackvE18crossfeedback_Last:
 14367 0000 00000000 		.space	4
 14368              		.section	.bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup,"aw",%nobits
 14369              		.set	.LANCHOR70,. + 0
 14372              	_ZZ20Update_crossfeedbackvE20crossfeedback_pickup:
 14373 0000 00       		.space	1
 14374              		.section	.bss._ZZ20Update_crossfeedbackvE9lastShift,"aw",%nobits
 14375              		.set	.LANCHOR69,. + 0
 14378              	_ZZ20Update_crossfeedbackvE9lastShift:
 14379 0000 00       		.space	1
 14380              		.section	.bss._ZZ4mainE9saveTimer,"aw",%nobits
 14381              		.align	2
 14382              		.set	.LANCHOR111,. + 0
 14385              	_ZZ4mainE9saveTimer:
 14386 0000 00000000 		.space	4
 14387              		.section	.bss._ZZL13AudioCallbackPfS_jE6LNegFB,"aw",%nobits
 14388              		.align	2
 14389              		.set	.LANCHOR130,. + 0
 14392              	_ZZL13AudioCallbackPfS_jE6LNegFB:
 14393 0000 00000000 		.space	4
 14394              		.section	.bss._ZZL13AudioCallbackPfS_jE6RNegFB,"aw",%nobits
 14395              		.align	2
 14396              		.set	.LANCHOR131,. + 0
 14399              	_ZZL13AudioCallbackPfS_jE6RNegFB:
 14400 0000 00000000 		.space	4
 14401              		.section	.bss._ZZL13AudioCallbackPfS_jE7Counter,"aw",%nobits
 14402              		.align	2
 14403              		.set	.LANCHOR117,. + 0
 14406              	_ZZL13AudioCallbackPfS_jE7Counter:
 14407 0000 00000000 		.space	4
 14408              		.section	.bss.crossfeedback,"aw",%nobits
 14409              		.align	2
 14410              		.set	.LANCHOR72,. + 0
 14413              	crossfeedback:
 14414 0000 00000000 		.space	4
 14415              		.section	.bss.crossfeedback_CV,"aw",%nobits
 14416              		.align	2
 14419              	crossfeedback_CV:
 14420 0000 00000000 		.space	4
 14421              		.section	.bss.delayL,"aw",%nobits
 14422              		.align	2
 14423              		.set	.LANCHOR0,. + 0
 14426              	delayL:
 14427 0000 00000000 		.space	296
 14427      00000000 
 14427      00000000 
 14427      00000000 
 14427      00000000 
 14428              		.section	.bss.delayR,"aw",%nobits
 14429              		.align	2
 14430              		.set	.LANCHOR1,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 414


 14433              	delayR:
 14434 0000 00000000 		.space	296
 14434      00000000 
 14434      00000000 
 14434      00000000 
 14434      00000000 
 14435              		.section	.bss.delayTimeL_CV,"aw",%nobits
 14436              		.align	2
 14437              		.set	.LANCHOR5,. + 0
 14440              	delayTimeL_CV:
 14441 0000 00000000 		.space	4
 14442              		.section	.bss.delayTimeR_CV,"aw",%nobits
 14443              		.align	2
 14444              		.set	.LANCHOR17,. + 0
 14447              	delayTimeR_CV:
 14448 0000 00000000 		.space	4
 14449              		.section	.bss.delaysL_REV,"aw",%nobits
 14450              		.align	2
 14451              		.set	.LANCHOR2,. + 0
 14454              	delaysL_REV:
 14455 0000 00000000 		.space	8
 14455      00000000 
 14456              		.section	.bss.delaysR_REV,"aw",%nobits
 14457              		.align	2
 14458              		.set	.LANCHOR3,. + 0
 14461              	delaysR_REV:
 14462 0000 00000000 		.space	8
 14462      00000000 
 14463              		.section	.bss.drywet_CV,"aw",%nobits
 14464              		.align	2
 14465              		.set	.LANCHOR51,. + 0
 14468              	drywet_CV:
 14469 0000 00000000 		.space	4
 14470              		.section	.bss.feedbackL,"aw",%nobits
 14471              		.align	2
 14472              		.set	.LANCHOR32,. + 0
 14475              	feedbackL:
 14476 0000 00000000 		.space	4
 14477              		.section	.bss.feedbackL_CV,"aw",%nobits
 14478              		.align	2
 14479              		.set	.LANCHOR27,. + 0
 14482              	feedbackL_CV:
 14483 0000 00000000 		.space	4
 14484              		.section	.bss.feedbackR,"aw",%nobits
 14485              		.align	2
 14486              		.set	.LANCHOR44,. + 0
 14489              	feedbackR:
 14490 0000 00000000 		.space	4
 14491              		.section	.bss.feedbackR_CV,"aw",%nobits
 14492              		.align	2
 14493              		.set	.LANCHOR39,. + 0
 14496              	feedbackR_CV:
 14497 0000 00000000 		.space	4
 14498              		.section	.bss.filterXfade,"aw",%nobits
 14499              		.align	2
 14500              		.set	.LANCHOR80,. + 0
 14503              	filterXfade:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 415


 14504 0000 00000000 		.space	4
 14505              		.section	.bss.modulation_CV_Raw,"aw",%nobits
 14506              		.align	2
 14507              		.set	.LANCHOR85,. + 0
 14510              	modulation_CV_Raw:
 14511 0000 00000000 		.space	4
 14512              		.section	.bss.mute,"aw",%nobits
 14513              		.set	.LANCHOR115,. + 0
 14516              	mute:
 14517 0000 00       		.space	1
 14518              		.section	.bss.saveState,"aw",%nobits
 14519              		.set	.LANCHOR110,. + 0
 14522              	saveState:
 14523 0000 00       		.space	1
 14524              		.section	.bss.save_flag,"aw",%nobits
 14525              		.align	2
 14526              		.set	.LANCHOR16,. + 0
 14529              	save_flag:
 14530 0000 00       		.space	1
 14531              		.section	.bss.shift,"aw",%nobits
 14532              		.set	.LANCHOR7,. + 0
 14535              	shift:
 14536 0000 00       		.space	1
 14537              		.section	.bss.syncMode,"aw",%nobits
 14538              		.set	.LANCHOR12,. + 0
 14541              	syncMode:
 14542 0000 00       		.space	1
 14543              		.section	.bss.tempoLED_BASE,"aw",%nobits
 14544              		.align	2
 14545              		.set	.LANCHOR89,. + 0
 14548              	tempoLED_BASE:
 14549 0000 00000000 		.space	72
 14549      00000000 
 14549      00000000 
 14549      00000000 
 14549      00000000 
 14550              		.section	.bss.width_CV,"aw",%nobits
 14551              		.align	2
 14552              		.set	.LANCHOR59,. + 0
 14555              	width_CV:
 14556 0000 00000000 		.space	4
 14557              		.section	.data.drywet,"aw"
 14558              		.align	2
 14559              		.set	.LANCHOR56,. + 0
 14562              	drywet:
 14563 0000 0000003F 		.word	1056964608
 14564              		.section	.data.width,"aw"
 14565              		.align	2
 14566              		.set	.LANCHOR64,. + 0
 14569              	width:
 14570 0000 0000803F 		.word	1065353216
 14571              		.section	.rodata.CSWTCH.368,"a"
 14572              		.align	3
 14573              		.set	.LANCHOR25,. + 0
 14576              	CSWTCH.368:
 14577 0000 00000000 		.word	0
 14578 0004 0000F83F 		.word	1073217536
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 416


 14579 0008 00000000 		.word	0
 14580 000c 00000040 		.word	1073741824
 14581 0010 00000000 		.word	0
 14582 0014 00000840 		.word	1074266112
 14583              		.section	.rodata._ZL18defaultAltControls,"a"
 14584              		.align	2
 14585              		.set	.LANCHOR116,. + 0
 14588              	_ZL18defaultAltControls:
 14589 0000 00650148 		.word	1208050944
 14590 0004 0000803F 		.word	1065353216
 14591 0008 00000000 		.word	0
 14592 000c 9A99A140 		.word	1084332442
 14593 0010 00004843 		.word	1128792064
 14594 0014 00803B46 		.word	1178304512
 14595 0018 00000000 		.word	0
 14596 001c 00000000 		.word	0
 14597 0020 0024F448 		.word	1223959552
 14598 0024 00000000 		.word	0
 14599 0028 00000000 		.word	0
 14600              		.section	.sdram_bss,"aw"
 14601              		.align	2
 14604              	delMemsR_REV:
 14605 0000 00000000 		.space	2400040
 14605      00000000 
 14605      00000000 
 14605      00000000 
 14605      00000000 
 14608              	delMemsL_REV:
 14609 249f28 00000000 		.space	2400040
 14609      00000000 
 14609      00000000 
 14609      00000000 
 14609      00000000 
 14612              	delMemsR:
 14613 493e50 00000000 		.space	6912136
 14613      00000000 
 14613      00000000 
 14613      00000000 
 14613      00000000 
 14616              	delMemsL:
 14617 b2b6d8 00000000 		.space	6912136
 14617      00000000 
 14617      00000000 
 14617      00000000 
 14617      00000000 
 14618              		.text
 14619              	.Letext0:
 14620              		.file 28 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_d
 14621              		.file 29 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdin
 14622              		.file 30 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdint.h"
 14623              		.file 31 "../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 14624              		.file 32 "../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 14625              		.file 33 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 14626              		.file 34 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14627              		.file 35 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14628              		.file 36 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14629              		.file 37 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 417


 14630              		.file 38 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14631              		.file 39 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14632              		.file 40 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14633              		.file 41 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14634              		.file 42 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14635              		.file 43 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14636              		.file 44 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14637              		.file 45 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14638              		.file 46 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14639              		.file 47 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14640              		.file 48 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14641              		.file 49 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14642              		.file 50 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14643              		.file 51 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14644              		.file 52 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14645              		.file 53 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14646              		.file 54 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14647              		.file 55 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock.h
 14648              		.file 56 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_types
 14649              		.file 57 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reent.
 14650              		.file 58 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
 14651              		.file 59 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdlib.h"
 14652              		.file 60 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14653              		.file 61 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 14654              		.file 62 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 14655              		.file 63 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14656              		.file 64 "../libdaisy/src/daisy_core.h"
 14657              		.file 65 "../libdaisy/src/per/tim.h"
 14658              		.file 66 "../libdaisy/src/per/sai.h"
 14659              		.file 67 "../libdaisy/src/util/wav_format.h"
 14660              		.file 68 "../libdaisy/src/per/qspi.h"
 14661              		.file 69 "../libdaisy/src/per/gpio.h"
 14662              		.file 70 "../libdaisy/src/dev/sdram.h"
 14663              		.file 71 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 14664              		.file 72 "<built-in>"
 14665              		.file 73 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdio.h"
 14666              		.file 74 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/unistd
 14667              		.file 75 "../libdaisy/src/util/oled_fonts.h"
 14668              		.file 76 "../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 14669              		.file 77 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 14670              		.file 78 "../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 14671              		.file 79 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 14672              		.file 80 "../libdaisy/src/util/sd_diskio.h"
 14673              		.file 81 "../libdaisy/src/sys/fatfs.h"
 14674              		.file 82 "../DaisySP/Source/Control/adenv.h"
 14675              		.file 83 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/wchar.h"
 14676              		.file 84 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/locale.h"
 14677              		.file 85 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/ctype.h"
 14678              		.file 86 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/errno.
 14679              		.file 87 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/string.h"
 14680              		.file 88 "QSPI_Settings.h"
 14681              		.file 89 "scale.h"
 14682              		.file 90 "constants.h"
 14683              		.file 91 "../libdaisy/src/dev/sr_595.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 418


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Veno-Echo.cpp
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:17     .text._ZN5daisy6SwitchD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:43     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:92     .text._ZN7daisysp4AdsrD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:100    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:100    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:117    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:125    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:125    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:142    .text._ZN7daisysp3SvfD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:150    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:150    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:167    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:175    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:175    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:192    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:200    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 _ZN7daisysp7DcBlockD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:200    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 _ZN7daisysp7DcBlockD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:217    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:242    .text._ZN8TaptempoD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:267    .text._ZN8TempoLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:304    .text._ZN9ButtonLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:312    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:312    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:338    .text._ZN10DelayMultiD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:346    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:346    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:377    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:385    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:385    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:402    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:410    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:410    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:427    .text._Z10InitDelaysf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:435    .text._Z10InitDelaysf:0000000000000000 _Z10InitDelaysf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:987    .text._Z10InitDelaysf:0000000000000178 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14616  .sdram_bss:0000000000b2b6d8 delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14612  .sdram_bss:0000000000493e50 delMemsR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14608  .sdram_bss:0000000000249f28 delMemsL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14604  .sdram_bss:0000000000000000 delMemsR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:1012   .text._Z20Update_DelayTimeL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:1020   .text._Z20Update_DelayTimeL_CVv:0000000000000000 _Z20Update_DelayTimeL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:1045   .text._Z20Update_DelayTimeL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:1051   .text._Z17Update_DelayTimeLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:1059   .text._Z17Update_DelayTimeLv:0000000000000000 _Z17Update_DelayTimeLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:1636   .text._Z17Update_DelayTimeLv:00000000000001e0 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 419


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:1666   .text._Z20Update_DelayTimeR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:1674   .text._Z20Update_DelayTimeR_CVv:0000000000000000 _Z20Update_DelayTimeR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:1699   .text._Z20Update_DelayTimeR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:1705   .text._Z17Update_DelayTimeRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:1713   .text._Z17Update_DelayTimeRv:0000000000000000 _Z17Update_DelayTimeRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:2202   .text._Z17Update_DelayTimeRv:00000000000001ac $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:2229   .text._Z19Update_feedbackL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:2237   .text._Z19Update_feedbackL_CVv:0000000000000000 _Z19Update_feedbackL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:2262   .text._Z19Update_feedbackL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:2268   .text._Z16Update_feedbackLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:2276   .text._Z16Update_feedbackLv:0000000000000000 _Z16Update_feedbackLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:2731   .text._Z16Update_feedbackLv:000000000000019c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:2760   .text._Z19Update_feedbackR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:2768   .text._Z19Update_feedbackR_CVv:0000000000000000 _Z19Update_feedbackR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:2793   .text._Z19Update_feedbackR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:2799   .text._Z16Update_feedbackRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:2807   .text._Z16Update_feedbackRv:0000000000000000 _Z16Update_feedbackRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:3266   .text._Z16Update_feedbackRv:00000000000001a8 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:3295   .text._Z16Update_drywet_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:3303   .text._Z16Update_drywet_CVv:0000000000000000 _Z16Update_drywet_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:3328   .text._Z16Update_drywet_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:3334   .text._Z13Update_drywetv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:3342   .text._Z13Update_drywetv:0000000000000000 _Z13Update_drywetv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:3851   .text._Z13Update_drywetv:00000000000001f8 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:3888   .text._Z15Update_width_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:3896   .text._Z15Update_width_CVv:0000000000000000 _Z15Update_width_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:3921   .text._Z15Update_width_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:3927   .text._Z12Update_widthv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:3935   .text._Z12Update_widthv:0000000000000000 _Z12Update_widthv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:4408   .text._Z12Update_widthv:0000000000000190 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:4434   .text._Z20Update_crossfeedbackv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:4442   .text._Z20Update_crossfeedbackv:0000000000000000 _Z20Update_crossfeedbackv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:4803   .text._Z20Update_crossfeedbackv:000000000000011c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:4823   .text._Z18Update_filterXfadev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:4831   .text._Z18Update_filterXfadev:0000000000000000 _Z18Update_filterXfadev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:5168   .text._Z18Update_filterXfadev:0000000000000120 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:5191   .text._Z8GetModCVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:5199   .text._Z8GetModCVv:0000000000000000 _Z8GetModCVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:5229   .text._Z8GetModCVv:0000000000000020 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:5237   .text._Z10Update_Modv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:5245   .text._Z10Update_Modv:0000000000000000 _Z10Update_Modv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:5402   .text._Z10Update_Modv:0000000000000058 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:5414   .text._Z11UpdateClockv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:5422   .text._Z11UpdateClockv:0000000000000000 _Z11UpdateClockv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:5528   .text._Z11UpdateClockv:0000000000000044 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:5537   .text._Z21Update_DelayBaseTempov:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:5545   .text._Z21Update_DelayBaseTempov:0000000000000000 _Z21Update_DelayBaseTempov
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:5597   .text._Z21Update_DelayBaseTempov:000000000000001c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:5604   .text._Z21Update_DelayTempoLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:5612   .text._Z21Update_DelayTempoLEDsv:0000000000000000 _Z21Update_DelayTempoLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:5665   .text._Z21Update_DelayTempoLEDsv:0000000000000034 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:5674   .text._Z19Update_BaseTempoLEDv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:5682   .text._Z19Update_BaseTempoLEDv:0000000000000000 _Z19Update_BaseTempoLEDv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:5804   .text._Z19Update_BaseTempoLEDv:0000000000000064 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:5815   .text._Z13ApplySettingsRK8Settings:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:5823   .text._Z13ApplySettingsRK8Settings:0000000000000000 _Z13ApplySettingsRK8Settings
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:6525   .text._Z13ApplySettingsRK8Settings:000000000000036c $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 420


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:6566   .text._Z13ApplySettingsRK8Settings:0000000000000404 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:6645   .text._Z13ApplySettingsRK8Settings:0000000000000450 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:6659   .text.startup.main:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:6667   .text.startup.main:0000000000000000 main
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:7538   .text.startup.main:0000000000000340 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:7568   .text.startup.main:00000000000003b4 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:8107   .text.startup.main:0000000000000630 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:9066   .text._ZL13AudioCallbackPfS_j:0000000000000000 _ZL13AudioCallbackPfS_j
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:8134   .text._Z13TurnOnAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:8142   .text._Z13TurnOnAllLEDsv:0000000000000000 _Z13TurnOnAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:8204   .text._Z13TurnOnAllLEDsv:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:8215   .text._Z12ResetAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:8223   .text._Z12ResetAllLEDsv:0000000000000000 _Z12ResetAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:8326   .text._Z12ResetAllLEDsv:000000000000007c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:8338   .text._Z14Update_Buttonsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:8346   .text._Z14Update_Buttonsv:0000000000000000 _Z14Update_Buttonsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:9032   .text._Z14Update_Buttonsv:0000000000000268 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:9059   .text._ZL13AudioCallbackPfS_j:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:9135   .text._ZL13AudioCallbackPfS_j:000000000000003a $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:9150   .text._ZL13AudioCallbackPfS_j:0000000000000058 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:9196   .text._ZL13AudioCallbackPfS_j:0000000000000088 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:9208   .text._ZL13AudioCallbackPfS_j:00000000000000a0 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:10259  .text._ZL13AudioCallbackPfS_j:0000000000000440 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:10302  .text._ZL13AudioCallbackPfS_j:00000000000004e8 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:11132  .text._ZL13AudioCallbackPfS_j:0000000000000834 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:11148  .text._ZL13AudioCallbackPfS_j:0000000000000864 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:12027  .text._ZL13AudioCallbackPfS_j:0000000000000bac $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:12063  .text._ZL13AudioCallbackPfS_j:0000000000000c1c $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:12261  .text._ZL13AudioCallbackPfS_j:0000000000000cd0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:12271  .text._Z9HardLimitff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:12279  .text._Z9HardLimitff:0000000000000000 _Z9HardLimitff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:12313  .text._Z10PotCVComboff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:12321  .text._Z10PotCVComboff:0000000000000000 _Z10PotCVComboff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:12368  .text._Z10PotCVComboff:0000000000000038 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:12373  .text._Z16checkPickupStateffbb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:12381  .text._Z16checkPickupStateffbb:0000000000000000 _Z16checkPickupStateffbb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:12465  .text._Z16checkPickupStateffbb:000000000000003c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:12470  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:12478  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 _Z20checkPickupState_altff11pickupStateb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:12568  .text._Z20checkPickupState_altff11pickupStateb:000000000000006c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:12573  .text._Z11GetTapRatio9TapRatios:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:12581  .text._Z11GetTapRatio9TapRatios:0000000000000000 _Z11GetTapRatio9TapRatios
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:12611  .text._Z11GetTapRatio9TapRatios:000000000000001c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:12616  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:12623  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 _GLOBAL__sub_I_delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13542  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000264 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13618  .init_array:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13670  .bss.AltControls:0000000000000000 AltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13677  .bss.BaseTempo:0000000000000000 BaseTempo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13684  .bss.ClockIn:0000000000000000 ClockIn
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13772  .bss.Sync:0000000000000000 Sync
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13765  .bss.ReverseGateR:0000000000000000 ReverseGateR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13758  .bss.ReverseGateL:0000000000000000 ReverseGateL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13731  .bss.PHASE_DEBUG:0000000000000000 PHASE_DEBUG
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13703  .bss.DELAYR_DEBUG:0000000000000000 DELAYR_DEBUG
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13696  .bss.DELAYL_DEBUG:0000000000000000 DELAYL_DEBUG
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14522  .bss.saveState:0000000000000000 saveState
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 421


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14529  .bss.save_flag:0000000000000000 save_flag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13737  .bss.PostFilters:0000000000000000 PostFilters
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13689  .bss.ClockInFlag:0000000000000000 ClockInFlag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14516  .bss.mute:0000000000000000 mute
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14535  .bss.shift:0000000000000000 shift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14541  .bss.syncMode:0000000000000000 syncMode
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14510  .bss.modulation_CV_Raw:0000000000000000 modulation_CV_Raw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13724  .bss.ModDepth:0000000000000000 ModDepth
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14503  .bss.filterXfade:0000000000000000 filterXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14555  .bss.width_CV:0000000000000000 width_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14569  .data.width:0000000000000000 width
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14468  .bss.drywet_CV:0000000000000000 drywet_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14562  .data.drywet:0000000000000000 drywet
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14419  .bss.crossfeedback_CV:0000000000000000 crossfeedback_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14413  .bss.crossfeedback:0000000000000000 crossfeedback
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14496  .bss.feedbackR_CV:0000000000000000 feedbackR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14489  .bss.feedbackR:0000000000000000 feedbackR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14482  .bss.feedbackL_CV:0000000000000000 feedbackL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14475  .bss.feedbackL:0000000000000000 feedbackL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14447  .bss.delayTimeR_CV:0000000000000000 delayTimeR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14440  .bss.delayTimeL_CV:0000000000000000 delayTimeL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14548  .bss.tempoLED_BASE:0000000000000000 tempoLED_BASE
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13779  .bss.Tap_Button:0000000000000000 Tap_Button
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13751  .bss.Rev_R_sw:0000000000000000 Rev_R_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13744  .bss.Rev_L_sw:0000000000000000 Rev_L_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13710  .bss.HPF_sw:0000000000000000 HPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13717  .bss.LPF_sw:0000000000000000 LPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14461  .bss.delaysR_REV:0000000000000000 delaysR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14454  .bss.delaysL_REV:0000000000000000 delaysL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14433  .bss.delayR:0000000000000000 delayR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14426  .bss.delayL:0000000000000000 delayL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13666  .bss.AltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13673  .bss.BaseTempo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13680  .bss.ClockIn:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13690  .bss.ClockInFlag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13692  .bss.DELAYL_DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13699  .bss.DELAYR_DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13706  .bss.HPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13713  .bss.LPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13720  .bss.ModDepth:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13727  .bss.PHASE_DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13738  .bss.PostFilters:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13740  .bss.Rev_L_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13747  .bss.Rev_R_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13754  .bss.ReverseGateL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13761  .bss.ReverseGateR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13768  .bss.Sync:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13775  .bss.Tap_Button:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13782  .bss._ZL10FwdRevLEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13786  .bss._ZL10FwdRevLEnv:0000000000000000 _ZL10FwdRevLEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13789  .bss._ZL10FwdRevREnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13793  .bss._ZL10FwdRevREnv:0000000000000000 _ZL10FwdRevREnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13796  .bss._ZL10HPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13800  .bss._ZL10HPF_LXfade:0000000000000000 _ZL10HPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13803  .bss._ZL10HPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13807  .bss._ZL10HPF_L_post:0000000000000000 _ZL10HPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13810  .bss._ZL10HPF_RXfade:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 422


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13814  .bss._ZL10HPF_RXfade:0000000000000000 _ZL10HPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13817  .bss._ZL10HPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13821  .bss._ZL10HPF_R_post:0000000000000000 _ZL10HPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13824  .bss._ZL10LPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13828  .bss._ZL10LPF_LXfade:0000000000000000 _ZL10LPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13831  .bss._ZL10LPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13835  .bss._ZL10LPF_L_post:0000000000000000 _ZL10LPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13838  .bss._ZL10LPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13842  .bss._ZL10LPF_RXfade:0000000000000000 _ZL10LPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13845  .bss._ZL10LPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13849  .bss._ZL10LPF_R_post:0000000000000000 _ZL10LPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13852  .bss._ZL10WidthXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13856  .bss._ZL10WidthXfade:0000000000000000 _ZL10WidthXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13859  .bss._ZL11DcBlock_LFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13863  .bss._ZL11DcBlock_LFB:0000000000000000 _ZL11DcBlock_LFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13866  .bss._ZL11DcBlock_RFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13870  .bss._ZL11DcBlock_RFB:0000000000000000 _ZL11DcBlock_RFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13873  .bss._ZL11FilterMix_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13877  .bss._ZL11FilterMix_L:0000000000000000 _ZL11FilterMix_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13880  .bss._ZL11FilterMix_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13884  .bss._ZL11FilterMix_R:0000000000000000 _ZL11FilterMix_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13887  .bss._ZL12FwdRevLXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13891  .bss._ZL12FwdRevLXfade:0000000000000000 _ZL12FwdRevLXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13894  .bss._ZL12FwdRevRXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13898  .bss._ZL12FwdRevRXfade:0000000000000000 _ZL12FwdRevRXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13901  .bss._ZL15HPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13905  .bss._ZL15HPF_LXfade_post:0000000000000000 _ZL15HPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13908  .bss._ZL15HPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13912  .bss._ZL15HPF_RXfade_post:0000000000000000 _ZL15HPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13915  .bss._ZL15LPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13919  .bss._ZL15LPF_LXfade_post:0000000000000000 _ZL15LPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13922  .bss._ZL15LPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13926  .bss._ZL15LPF_RXfade_post:0000000000000000 _ZL15LPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13929  .bss._ZL16FilterMix_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13933  .bss._ZL16FilterMix_L_post:0000000000000000 _ZL16FilterMix_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13936  .bss._ZL16FilterMix_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13940  .bss._ZL16FilterMix_R_post:0000000000000000 _ZL16FilterMix_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13943  .bss._ZL2hw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13947  .bss._ZL2hw:0000000000000000 _ZL2hw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13950  .bss._ZL3lfo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13954  .bss._ZL3lfo:0000000000000000 _ZL3lfo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13957  .bss._ZL5HPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13961  .bss._ZL5HPF_L:0000000000000000 _ZL5HPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13964  .bss._ZL5HPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13968  .bss._ZL5HPF_R:0000000000000000 _ZL5HPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13971  .bss._ZL5LPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13975  .bss._ZL5LPF_L:0000000000000000 _ZL5LPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13978  .bss._ZL5LPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13982  .bss._ZL5LPF_R:0000000000000000 _ZL5LPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13985  .bss._ZL7HPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13989  .bss._ZL7HPF_Env:0000000000000000 _ZL7HPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13992  .bss._ZL7LPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13996  .bss._ZL7LPF_Env:0000000000000000 _ZL7LPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:13999  .bss._ZL7LeftEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14003  .bss._ZL7LeftEnv:0000000000000000 _ZL7LeftEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14006  .bss._ZL8RightEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14010  .bss._ZL8RightEnv:0000000000000000 _ZL8RightEnv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 423


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14013  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14017  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 _ZZ10Update_ModvE13modulation_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14020  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14024  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 _ZZ10Update_ModvE17ModDepth_Filtered
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14027  .bss._ZZ12Update_widthvE10width_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14031  .bss._ZZ12Update_widthvE10width_Last:0000000000000000 _ZZ12Update_widthvE10width_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14034  .bss._ZZ12Update_widthvE12ModDepth_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14038  .bss._ZZ12Update_widthvE12ModDepth_new:0000000000000000 _ZZ12Update_widthvE12ModDepth_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14044  .bss._ZZ12Update_widthvE12width_pickup:0000000000000000 _ZZ12Update_widthvE12width_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14045  .bss._ZZ12Update_widthvE12width_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14050  .bss._ZZ12Update_widthvE15ModDepth_pickup:0000000000000000 _ZZ12Update_widthvE15ModDepth_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14051  .bss._ZZ12Update_widthvE15ModDepth_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14056  .bss._ZZ12Update_widthvE9lastShift:0000000000000000 _ZZ12Update_widthvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14057  .bss._ZZ12Update_widthvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14059  .bss._ZZ12Update_widthvE9width_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14063  .bss._ZZ12Update_widthvE9width_new:0000000000000000 _ZZ12Update_widthvE9width_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14069  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 _ZZ13Update_drywetvE10Res_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14070  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14072  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14076  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 _ZZ13Update_drywetvE10drywet_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14079  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14083  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 _ZZ13Update_drywetvE11drywet_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14089  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 _ZZ13Update_drywetvE13drywet_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14090  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14092  .bss._ZZ13Update_drywetvE7Res_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14096  .bss._ZZ13Update_drywetvE7Res_new:0000000000000000 _ZZ13Update_drywetvE7Res_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14102  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 _ZZ13Update_drywetvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14103  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14105  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14109  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 _ZZ14Update_ButtonsvE11buttonstate
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14112  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14116  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 _ZZ14Update_ButtonsvE9resetTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14119  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14123  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 _ZZ14Update_ButtonsvE9shiftTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14126  .bss._ZZ16Update_feedbackLvE12HPCutoff_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14130  .bss._ZZ16Update_feedbackLvE12HPCutoff_new:0000000000000000 _ZZ16Update_feedbackLvE12HPCutoff_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14133  .bss._ZZ16Update_feedbackLvE13feedbackL_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14137  .bss._ZZ16Update_feedbackLvE13feedbackL_new:0000000000000000 _ZZ16Update_feedbackLvE13feedbackL_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14140  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14144  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 _ZZ16Update_feedbackLvE14feedbackL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14150  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackLvE15HPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14151  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14156  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 _ZZ16Update_feedbackLvE16feedbackL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14157  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14162  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 _ZZ16Update_feedbackLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14163  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14165  .bss._ZZ16Update_feedbackRvE12LPCutoff_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14169  .bss._ZZ16Update_feedbackRvE12LPCutoff_new:0000000000000000 _ZZ16Update_feedbackRvE12LPCutoff_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14172  .bss._ZZ16Update_feedbackRvE13feedbackR_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14176  .bss._ZZ16Update_feedbackRvE13feedbackR_new:0000000000000000 _ZZ16Update_feedbackRvE13feedbackR_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14179  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14183  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 _ZZ16Update_feedbackRvE14feedbackR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14189  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackRvE15LPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14190  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14195  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 _ZZ16Update_feedbackRvE16feedbackR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14196  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14201  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 _ZZ16Update_feedbackRvE9lastShift
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 424


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14202  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14204  .bss._ZZ17Update_DelayTimeLvE14delayTimeL_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14208  .bss._ZZ17Update_DelayTimeLvE14delayTimeL_new:0000000000000000 _ZZ17Update_DelayTimeLvE14delayTimeL_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14211  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14215  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 _ZZ17Update_DelayTimeLvE15delayTimeL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14218  .bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14222  .bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:0000000000000000 _ZZ17Update_DelayTimeLvE17Rev_DelayTime_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14228  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE17delayTimeL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14229  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14234  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14235  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14237  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14241  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 _ZZ17Update_DelayTimeLvE8counterL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14247  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14248  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14250  .bss._ZZ17Update_DelayTimeRvE12tapRatio_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14254  .bss._ZZ17Update_DelayTimeRvE12tapRatio_new:0000000000000000 _ZZ17Update_DelayTimeRvE12tapRatio_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14257  .bss._ZZ17Update_DelayTimeRvE14delayTimeR_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14261  .bss._ZZ17Update_DelayTimeRvE14delayTimeR_new:0000000000000000 _ZZ17Update_DelayTimeRvE14delayTimeR_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14264  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14268  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 _ZZ17Update_DelayTimeRvE15delayTimeR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14274  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE15tapRatio_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14275  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14280  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE17delayTimeR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14281  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14283  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14287  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 _ZZ17Update_DelayTimeRvE8counterR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14293  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeRvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14294  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14296  .bss._ZZ18Update_filterXfadevE15PostFilters_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14300  .bss._ZZ18Update_filterXfadevE15PostFilters_new:0000000000000000 _ZZ18Update_filterXfadevE15PostFilters_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14303  .bss._ZZ18Update_filterXfadevE15filterXfade_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14307  .bss._ZZ18Update_filterXfadevE15filterXfade_new:0000000000000000 _ZZ18Update_filterXfadevE15filterXfade_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14310  .bss._ZZ18Update_filterXfadevE16filterXfade_last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14314  .bss._ZZ18Update_filterXfadevE16filterXfade_last:0000000000000000 _ZZ18Update_filterXfadevE16filterXfade_last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14320  .bss._ZZ18Update_filterXfadevE18PostFilters_pickup:0000000000000000 _ZZ18Update_filterXfadevE18PostFilters_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14321  .bss._ZZ18Update_filterXfadevE18PostFilters_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14326  .bss._ZZ18Update_filterXfadevE18filterXfade_pickup:0000000000000000 _ZZ18Update_filterXfadevE18filterXfade_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14327  .bss._ZZ18Update_filterXfadevE18filterXfade_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14332  .bss._ZZ18Update_filterXfadevE9lastShift:0000000000000000 _ZZ18Update_filterXfadevE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14333  .bss._ZZ18Update_filterXfadevE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14335  .bss._ZZ19Update_BaseTempoLEDvE12phaseCounter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14339  .bss._ZZ19Update_BaseTempoLEDvE12phaseCounter:0000000000000000 _ZZ19Update_BaseTempoLEDvE12phaseCounter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14342  .bss._ZZ20Update_crossfeedbackvE11modRate_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14346  .bss._ZZ20Update_crossfeedbackvE11modRate_new:0000000000000000 _ZZ20Update_crossfeedbackvE11modRate_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14352  .bss._ZZ20Update_crossfeedbackvE14modRate_pickup:0000000000000000 _ZZ20Update_crossfeedbackvE14modRate_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14353  .bss._ZZ20Update_crossfeedbackvE14modRate_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14355  .bss._ZZ20Update_crossfeedbackvE17crossfeedback_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14359  .bss._ZZ20Update_crossfeedbackvE17crossfeedback_new:0000000000000000 _ZZ20Update_crossfeedbackvE17crossfeedback_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14362  .bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14366  .bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last:0000000000000000 _ZZ20Update_crossfeedbackvE18crossfeedback_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14372  .bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup:0000000000000000 _ZZ20Update_crossfeedbackvE20crossfeedback_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14373  .bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14378  .bss._ZZ20Update_crossfeedbackvE9lastShift:0000000000000000 _ZZ20Update_crossfeedbackvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14379  .bss._ZZ20Update_crossfeedbackvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14381  .bss._ZZ4mainE9saveTimer:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14385  .bss._ZZ4mainE9saveTimer:0000000000000000 _ZZ4mainE9saveTimer
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 425


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14388  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14392  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6LNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14395  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14399  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6RNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14402  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14406  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 _ZZL13AudioCallbackPfS_jE7Counter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14409  .bss.crossfeedback:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14416  .bss.crossfeedback_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14422  .bss.delayL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14429  .bss.delayR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14436  .bss.delayTimeL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14443  .bss.delayTimeR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14450  .bss.delaysL_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14457  .bss.delaysR_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14464  .bss.drywet_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14471  .bss.feedbackL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14478  .bss.feedbackL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14485  .bss.feedbackR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14492  .bss.feedbackR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14499  .bss.filterXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14506  .bss.modulation_CV_Raw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14517  .bss.mute:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14523  .bss.saveState:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14525  .bss.save_flag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14536  .bss.shift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14542  .bss.syncMode:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14544  .bss.tempoLED_BASE:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14551  .bss.width_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14558  .data.drywet:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14565  .data.width:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14572  .rodata.CSWTCH.368:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14576  .rodata.CSWTCH.368:0000000000000000 CSWTCH.368
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14584  .rodata._ZL18defaultAltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14588  .rodata._ZL18defaultAltControls:0000000000000000 _ZL18defaultAltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s:14601  .sdram_bss:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy6SwitchD5Ev
                           .group:0000000000000000 _ZN5daisy9DaisySeedD5Ev
                           .group:0000000000000000 _ZN7daisysp4AdsrD5Ev
                           .group:0000000000000000 _ZN7daisysp10OscillatorD5Ev
                           .group:0000000000000000 _ZN7daisysp3SvfD5Ev
                           .group:0000000000000000 _ZN7daisysp9CrossFadeD5Ev
                           .group:0000000000000000 _ZN7daisysp7DcBlockD5Ev
                           .group:0000000000000000 _ZN7daisysp9EnvFollowD5Ev
                           .group:0000000000000000 _ZN8TaptempoD5Ev
                           .group:0000000000000000 _ZN8TempoLEDD5Ev
                           .group:0000000000000000 _ZN9ButtonLEDD5Ev
                           .group:0000000000000000 _ZN10DelayMultiD5Ev
                           .group:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED5Ev
                           .group:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED5Ev

UNDEFINED SYMBOLS
_ZN5daisy9DaisySeed6GetPinEh
_ZN10DelayMulti4initE12dsy_gpio_pinf
_ZNK5daisy9AdcHandle8GetFloatEh
_ZNK5daisy9AdcHandle11GetMuxFloatEhh
_ZN10DelayMulti12SetDelayTimeEfb
_Z5scalefff9CurveType
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccejAL8Y.s 			page 426


_ZN8Taptempo11setTapRatioEf
_ZN7daisysp3Svf7SetFreqEf
_ZN7daisysp3Svf6SetResEf
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN7daisysp10Oscillator7ProcessEv
_ZN5daisy6Switch8DebounceEv
_ZN8Taptempo3tapEv
_ZN8Taptempo10getTapFreqEv
_ZN8TempoLED8setTempoEf
_ZN8Taptempo12getTapLengthEv
_ZN8Taptempo14getDelayLengthEv
_ZN10DelayMulti14updateTempoLEDEb
_ZN10DelayMulti12GetDelayTimeEv
_ZN8TempoLED6updateEv
_ZN8TempoLED5isEOCEv
_ZN8Taptempo12setTapLengthEf
_ZN9ButtonLED6turnONEv
_ZN9ButtonLED7turnOFFEv
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN7daisysp4Adsr4InitEf
_ZN7daisysp3Svf4InitEf
_ZN7daisysp3Svf8SetDriveEf
_ZN7daisysp7DcBlock4InitEf
_ZN8Taptempo4initEmmf
_ZN8TempoLED4initE12dsy_gpio_pinf
_ZN8TempoLED10resetPhaseEv
_Z12LoadSettingsv
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
_ZN5daisy6System6GetNowEv
_Z12SaveSettingsRK8Settings
_ZN8TempoLED7LED_setEf
_ZN9ButtonLED7LED_setEf
_ZN9ButtonLED8getStateEv
_ZN9ButtonLED6updateEv
_ZN9ButtonLED10RisingEdgeEv
_ZN9ButtonLED11FallingEdgeEv
_ZN9ButtonLED6toggleEv
_ZN7daisysp7DcBlock7ProcessEf
_ZN10DelayMulti5WriteERKf
_ZN7daisysp9CrossFade7ProcessERfS1_
_ZN7daisysp4Adsr7ProcessEb
sinf
_ZN10DelayMulti9GetOutputEv
_ZN7daisysp3Svf7ProcessEf
__aeabi_atexit
__dso_handle
