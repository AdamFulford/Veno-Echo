ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Veno-Echo.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy6SwitchD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy6SwitchD2Ev:
  27              	.LVL0:
  28              	.LFB1523:
  29              		.file 1 "../libdaisy/src/hid/switch.h"
   1:../libdaisy/src/hid/switch.h **** #pragma once
   2:../libdaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../libdaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../libdaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../libdaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../libdaisy/src/hid/switch.h **** 
   7:../libdaisy/src/hid/switch.h **** namespace daisy
   8:../libdaisy/src/hid/switch.h **** {
   9:../libdaisy/src/hid/switch.h **** /** 
  10:../libdaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  11:../libdaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  12:../libdaisy/src/hid/switch.h ****     @author Stephen Hensley
  13:../libdaisy/src/hid/switch.h ****     @date December 2019
  14:../libdaisy/src/hid/switch.h ****     @ingroup controls
  15:../libdaisy/src/hid/switch.h **** */
  16:../libdaisy/src/hid/switch.h **** class Switch
  17:../libdaisy/src/hid/switch.h **** {
  18:../libdaisy/src/hid/switch.h ****   public:
  19:../libdaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  20:../libdaisy/src/hid/switch.h ****     enum Type
  21:../libdaisy/src/hid/switch.h ****     {
  22:../libdaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  23:../libdaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  24:../libdaisy/src/hid/switch.h ****     };
  25:../libdaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  26:../libdaisy/src/hid/switch.h ****     enum Polarity
  27:../libdaisy/src/hid/switch.h ****     {
  28:../libdaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  29:../libdaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 2


  30:../libdaisy/src/hid/switch.h ****     };
  31:../libdaisy/src/hid/switch.h **** 
  32:../libdaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  33:../libdaisy/src/hid/switch.h ****     enum Pull
  34:../libdaisy/src/hid/switch.h ****     {
  35:../libdaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  36:../libdaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  37:../libdaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  38:../libdaisy/src/hid/switch.h ****     };
  39:../libdaisy/src/hid/switch.h **** 
  40:../libdaisy/src/hid/switch.h ****     Switch() {}
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
  30              		.loc 1 41 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 41 16 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE1523:
  40              		.weak	_ZN5daisy6SwitchD1Ev
  41              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
  42 0002 00BF     		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN5daisy9DaisySeedD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN5daisy9DaisySeedD2Ev:
  52              	.LVL1:
  53              	.LFB1703:
  54              		.file 2 "../libdaisy/src/daisy_seed.h"
   1:../libdaisy/src/daisy_seed.h **** #pragma once
   2:../libdaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../libdaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../libdaisy/src/daisy_seed.h **** 
   5:../libdaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../libdaisy/src/daisy_seed.h **** 
   7:../libdaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../libdaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../libdaisy/src/daisy_seed.h **** 
  10:../libdaisy/src/daisy_seed.h **** namespace daisy
  11:../libdaisy/src/daisy_seed.h **** {
  12:../libdaisy/src/daisy_seed.h **** /**
  13:../libdaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../libdaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../libdaisy/src/daisy_seed.h **** 
  16:../libdaisy/src/daisy_seed.h ****    @ingroup boards
  17:../libdaisy/src/daisy_seed.h **** */
  18:../libdaisy/src/daisy_seed.h **** class DaisySeed
  19:../libdaisy/src/daisy_seed.h **** {
  20:../libdaisy/src/daisy_seed.h ****   public:
  21:../libdaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 3


  55              		.loc 2 22 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LBB735:
  61              	.LBI735:
  62              		.file 3 "../libdaisy/src/sys/system.h"
   1:../libdaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../libdaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../libdaisy/src/sys/system.h **** 
   4:../libdaisy/src/sys/system.h **** #include <cstdint>
   5:../libdaisy/src/sys/system.h **** #include "per/tim.h"
   6:../libdaisy/src/sys/system.h **** 
   7:../libdaisy/src/sys/system.h **** namespace daisy
   8:../libdaisy/src/sys/system.h **** {
   9:../libdaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  10:../libdaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  11:../libdaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  12:../libdaisy/src/sys/system.h ****  **
  13:../libdaisy/src/sys/system.h ****  ** @author shensley
  14:../libdaisy/src/sys/system.h ****  ** @addtogroup system
  15:../libdaisy/src/sys/system.h ****  */
  16:../libdaisy/src/sys/system.h **** class System
  17:../libdaisy/src/sys/system.h **** {
  18:../libdaisy/src/sys/system.h ****   public:
  19:../libdaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  20:../libdaisy/src/sys/system.h ****     struct Config
  21:../libdaisy/src/sys/system.h ****     {
  22:../libdaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  23:../libdaisy/src/sys/system.h ****         enum class SysClkFreq
  24:../libdaisy/src/sys/system.h ****         {
  25:../libdaisy/src/sys/system.h ****             FREQ_400MHZ,
  26:../libdaisy/src/sys/system.h ****             FREQ_480MHZ,
  27:../libdaisy/src/sys/system.h ****         };
  28:../libdaisy/src/sys/system.h **** 
  29:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  30:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  31:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  32:../libdaisy/src/sys/system.h ****          ** */
  33:../libdaisy/src/sys/system.h ****         void Defaults()
  34:../libdaisy/src/sys/system.h ****         {
  35:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_400MHZ;
  36:../libdaisy/src/sys/system.h ****             use_dcache = true;
  37:../libdaisy/src/sys/system.h ****             use_icache = true;
  38:../libdaisy/src/sys/system.h ****         }
  39:../libdaisy/src/sys/system.h **** 
  40:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  41:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  42:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  43:../libdaisy/src/sys/system.h ****          ** */
  44:../libdaisy/src/sys/system.h ****         void Boost()
  45:../libdaisy/src/sys/system.h ****         {
  46:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_480MHZ;
  47:../libdaisy/src/sys/system.h ****             use_dcache = true;
  48:../libdaisy/src/sys/system.h ****             use_icache = true;
  49:../libdaisy/src/sys/system.h ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 4


  50:../libdaisy/src/sys/system.h **** 
  51:../libdaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  52:../libdaisy/src/sys/system.h ****         bool       use_dcache;
  53:../libdaisy/src/sys/system.h ****         bool       use_icache;
  54:../libdaisy/src/sys/system.h ****     };
  55:../libdaisy/src/sys/system.h **** 
  56:../libdaisy/src/sys/system.h ****     System() {}
  57:../libdaisy/src/sys/system.h ****     ~System() {}
  63              		.loc 3 57 5 view .LVU3
  64              		.loc 3 57 5 is_stmt 0 view .LVU4
  65              	.LBE735:
  66              	.LBB736:
  67              	.LBI736:
  68              		.file 4 "../libdaisy/src/hid/usb.h"
   1:../libdaisy/src/hid/usb.h **** #pragma once
   2:../libdaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../libdaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../libdaisy/src/hid/usb.h **** #include <stdint.h>
   5:../libdaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../libdaisy/src/hid/usb.h **** 
   7:../libdaisy/src/hid/usb.h **** namespace daisy
   8:../libdaisy/src/hid/usb.h **** /** @addtogroup externals
   9:../libdaisy/src/hid/usb.h ****     @{
  10:../libdaisy/src/hid/usb.h **** */
  11:../libdaisy/src/hid/usb.h **** 
  12:../libdaisy/src/hid/usb.h **** {
  13:../libdaisy/src/hid/usb.h **** /** 
  14:../libdaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../libdaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../libdaisy/src/hid/usb.h ****     @date December 2019
  17:../libdaisy/src/hid/usb.h **** */
  18:../libdaisy/src/hid/usb.h **** class UsbHandle
  19:../libdaisy/src/hid/usb.h **** {
  20:../libdaisy/src/hid/usb.h ****   public:
  21:../libdaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../libdaisy/src/hid/usb.h ****     enum class Result
  23:../libdaisy/src/hid/usb.h ****     {
  24:../libdaisy/src/hid/usb.h ****         OK,
  25:../libdaisy/src/hid/usb.h ****         ERR,
  26:../libdaisy/src/hid/usb.h ****     };
  27:../libdaisy/src/hid/usb.h **** 
  28:../libdaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../libdaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../libdaisy/src/hid/usb.h ****     {
  31:../libdaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../libdaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../libdaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../libdaisy/src/hid/usb.h ****     };
  35:../libdaisy/src/hid/usb.h **** 
  36:../libdaisy/src/hid/usb.h **** 
  37:../libdaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../libdaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../libdaisy/src/hid/usb.h **** 
  40:../libdaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../libdaisy/src/hid/usb.h **** 
  42:../libdaisy/src/hid/usb.h ****     ~UsbHandle() {}
  69              		.loc 4 42 5 is_stmt 1 view .LVU5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 5


  70              		.loc 4 42 5 is_stmt 0 view .LVU6
  71              	.LBE736:
  72              	.LBB737:
  73              	.LBI737:
  74              		.file 5 "../libdaisy/src/per/adc.h"
   1:../libdaisy/src/per/adc.h **** #pragma once
   2:../libdaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../libdaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../libdaisy/src/per/adc.h **** #include <stdint.h>
   5:../libdaisy/src/per/adc.h **** #include <stdlib.h>
   6:../libdaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../libdaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../libdaisy/src/per/adc.h **** 
   9:../libdaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 14 /**< Maximum number of ADC channels */
  10:../libdaisy/src/per/adc.h **** 
  11:../libdaisy/src/per/adc.h **** namespace daisy
  12:../libdaisy/src/per/adc.h **** {
  13:../libdaisy/src/per/adc.h **** /** @addtogroup analog_digital_conversion
  14:../libdaisy/src/per/adc.h ****     @{
  15:../libdaisy/src/per/adc.h **** */
  16:../libdaisy/src/per/adc.h **** 
  17:../libdaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../libdaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../libdaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../libdaisy/src/per/adc.h **** */
  21:../libdaisy/src/per/adc.h **** 
  22:../libdaisy/src/per/adc.h **** /** Configuration Structure for a given channel */
  23:../libdaisy/src/per/adc.h **** struct AdcChannelConfig
  24:../libdaisy/src/per/adc.h **** {
  25:../libdaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  26:../libdaisy/src/per/adc.h ****     enum MuxPin
  27:../libdaisy/src/per/adc.h ****     {
  28:../libdaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  29:../libdaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  30:../libdaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  31:../libdaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  32:../libdaisy/src/per/adc.h ****     };
  33:../libdaisy/src/per/adc.h **** 
  34:../libdaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  35:../libdaisy/src/per/adc.h ****     \param pin Pin to init.
  36:../libdaisy/src/per/adc.h ****      */
  37:../libdaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  38:../libdaisy/src/per/adc.h **** 
  39:../libdaisy/src/per/adc.h ****     /** 
  40:../libdaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  41:../libdaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  42:../libdaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  43:../libdaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  44:../libdaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  45:../libdaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  46:../libdaisy/src/per/adc.h ****     \param mux_0 First mux pin
  47:../libdaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  48:../libdaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  49:../libdaisy/src/per/adc.h ****     \param adc_pin &
  50:../libdaisy/src/per/adc.h ****     */
  51:../libdaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  52:../libdaisy/src/per/adc.h ****                  size_t       mux_channels,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 6


  53:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  54:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  55:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  56:../libdaisy/src/per/adc.h **** 
  57:../libdaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  58:../libdaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  59:../libdaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  60:../libdaisy/src/per/adc.h **** };
  61:../libdaisy/src/per/adc.h **** 
  62:../libdaisy/src/per/adc.h **** /**
  63:../libdaisy/src/per/adc.h ****    Handler for analog to digital conversion
  64:../libdaisy/src/per/adc.h **** */
  65:../libdaisy/src/per/adc.h **** class AdcHandle
  66:../libdaisy/src/per/adc.h **** {
  67:../libdaisy/src/per/adc.h ****   public:
  68:../libdaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  69:../libdaisy/src/per/adc.h ****     enum OverSampling
  70:../libdaisy/src/per/adc.h ****     {
  71:../libdaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  72:../libdaisy/src/per/adc.h ****         OVS_4,    /**< & */
  73:../libdaisy/src/per/adc.h ****         OVS_8,    /**< & */
  74:../libdaisy/src/per/adc.h ****         OVS_16,   /**< & */
  75:../libdaisy/src/per/adc.h ****         OVS_32,   /**< & */
  76:../libdaisy/src/per/adc.h ****         OVS_64,   /**< & */
  77:../libdaisy/src/per/adc.h ****         OVS_128,  /**< & */
  78:../libdaisy/src/per/adc.h ****         OVS_256,  /**< & */
  79:../libdaisy/src/per/adc.h ****         OVS_512,  /**< & */
  80:../libdaisy/src/per/adc.h ****         OVS_1024, /**< & */
  81:../libdaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  82:../libdaisy/src/per/adc.h ****     };
  83:../libdaisy/src/per/adc.h **** 
  84:../libdaisy/src/per/adc.h ****     AdcHandle() {}
  85:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
  75              		.loc 5 85 5 is_stmt 1 view .LVU7
  76              		.loc 5 85 5 is_stmt 0 view .LVU8
  77              	.LBE737:
  78              	.LBB738:
  79              	.LBI738:
  80              		.file 6 "../libdaisy/src/hid/audio.h"
   1:../libdaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../libdaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../libdaisy/src/hid/audio.h **** 
   4:../libdaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../libdaisy/src/hid/audio.h **** 
   6:../libdaisy/src/hid/audio.h **** namespace daisy
   7:../libdaisy/src/hid/audio.h **** {
   8:../libdaisy/src/hid/audio.h **** class AudioHandle
   9:../libdaisy/src/hid/audio.h **** {
  10:../libdaisy/src/hid/audio.h ****   public:
  11:../libdaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  12:../libdaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  13:../libdaisy/src/hid/audio.h ****     struct Config
  14:../libdaisy/src/hid/audio.h ****     {
  15:../libdaisy/src/hid/audio.h ****         size_t                        blocksize;
  16:../libdaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  17:../libdaisy/src/hid/audio.h ****         float                         postgain;
  18:../libdaisy/src/hid/audio.h ****     };
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 7


  19:../libdaisy/src/hid/audio.h **** 
  20:../libdaisy/src/hid/audio.h ****     enum class Result
  21:../libdaisy/src/hid/audio.h ****     {
  22:../libdaisy/src/hid/audio.h ****         OK,
  23:../libdaisy/src/hid/audio.h ****         ERR,
  24:../libdaisy/src/hid/audio.h ****     };
  25:../libdaisy/src/hid/audio.h **** 
  26:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. Both arrays arranged by float[chn][sample] */
  27:../libdaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(float** in, float** out, size_t size);
  28:../libdaisy/src/hid/audio.h **** 
  29:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. 
  30:../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  31:../libdaisy/src/hid/audio.h ****      */
  32:../libdaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(float* in,
  33:../libdaisy/src/hid/audio.h ****                                               float* out,
  34:../libdaisy/src/hid/audio.h ****                                               size_t size);
  35:../libdaisy/src/hid/audio.h **** 
  36:../libdaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  37:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
  81              		.loc 6 37 5 is_stmt 1 view .LVU9
  82              		.loc 6 37 5 is_stmt 0 view .LVU10
  83              	.LBE738:
  84              		.loc 2 22 19 view .LVU11
  85 0000 7047     		bx	lr
  86              		.cfi_endproc
  87              	.LFE1703:
  89              		.weak	_ZN5daisy9DaisySeedD1Ev
  90              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  91 0002 00BF     		.section	.text._ZN7daisysp4AdsrD2Ev,"axG",%progbits,_ZN7daisysp4AdsrD5Ev,comdat
  92              		.align	1
  93              		.p2align 2,,3
  94              		.weak	_ZN7daisysp4AdsrD2Ev
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv5-d16
 100              	_ZN7daisysp4AdsrD2Ev:
 101              	.LVL2:
 102              	.LFB1726:
 103              		.file 7 "../DaisySP/Source/Control/adsr.h"
   1:../DaisySP/Source/Control/adsr.h **** #pragma once
   2:../DaisySP/Source/Control/adsr.h **** #ifndef DSY_ADSR_H
   3:../DaisySP/Source/Control/adsr.h **** #define DSY_ADSR_H
   4:../DaisySP/Source/Control/adsr.h **** 
   5:../DaisySP/Source/Control/adsr.h **** #include <stdint.h>
   6:../DaisySP/Source/Control/adsr.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Control/adsr.h **** 
   8:../DaisySP/Source/Control/adsr.h **** namespace daisysp
   9:../DaisySP/Source/Control/adsr.h **** {
  10:../DaisySP/Source/Control/adsr.h **** /** Distinct stages that the phase of the envelope can be located in.
  11:../DaisySP/Source/Control/adsr.h **** - IDLE   = located at phase location 0, and not currently running
  12:../DaisySP/Source/Control/adsr.h **** - ATTACK  = First segment of envelope where phase moves from 0 to 1
  13:../DaisySP/Source/Control/adsr.h **** - DECAY   = Second segment of envelope where phase moves from 1 to SUSTAIN value
  14:../DaisySP/Source/Control/adsr.h **** - SUSTAIN = Third segment of envelope, stays at SUSTAIN level until GATE is released
  15:../DaisySP/Source/Control/adsr.h **** - RELEASE =     Fourth segment of envelop where phase moves from SUSTAIN to 0
  16:../DaisySP/Source/Control/adsr.h **** - LAST    =  Last segment, aka release
  17:../DaisySP/Source/Control/adsr.h **** */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 8


  18:../DaisySP/Source/Control/adsr.h **** enum
  19:../DaisySP/Source/Control/adsr.h **** {
  20:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_IDLE,
  21:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_ATTACK,
  22:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_DECAY,
  23:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_SUSTAIN,
  24:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_RELEASE,
  25:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_LAST,
  26:../DaisySP/Source/Control/adsr.h **** };
  27:../DaisySP/Source/Control/adsr.h **** 
  28:../DaisySP/Source/Control/adsr.h **** 
  29:../DaisySP/Source/Control/adsr.h **** /** adsr envelope module
  30:../DaisySP/Source/Control/adsr.h **** 
  31:../DaisySP/Source/Control/adsr.h **** Original author(s) : Paul Batchelor
  32:../DaisySP/Source/Control/adsr.h **** 
  33:../DaisySP/Source/Control/adsr.h **** Ported from Soundpipe by Ben Sergentanis, May 2020
  34:../DaisySP/Source/Control/adsr.h **** */
  35:../DaisySP/Source/Control/adsr.h **** class Adsr
  36:../DaisySP/Source/Control/adsr.h **** {
  37:../DaisySP/Source/Control/adsr.h ****   public:
  38:../DaisySP/Source/Control/adsr.h ****     Adsr() {}
  39:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 104              		.loc 7 39 5 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109              		.loc 7 39 14 is_stmt 0 view .LVU13
 110 0000 7047     		bx	lr
 111              		.cfi_endproc
 112              	.LFE1726:
 114              		.weak	_ZN7daisysp4AdsrD1Ev
 115              		.thumb_set _ZN7daisysp4AdsrD1Ev,_ZN7daisysp4AdsrD2Ev
 116 0002 00BF     		.section	.text._ZN7daisysp10OscillatorD2Ev,"axG",%progbits,_ZN7daisysp10OscillatorD5Ev,comdat
 117              		.align	1
 118              		.p2align 2,,3
 119              		.weak	_ZN7daisysp10OscillatorD2Ev
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv5-d16
 125              	_ZN7daisysp10OscillatorD2Ev:
 126              	.LVL3:
 127              	.LFB3340:
 128              		.file 8 "../DaisySP/Source/Synthesis/oscillator.h"
   1:../DaisySP/Source/Synthesis/oscillator.h **** #pragma once
   2:../DaisySP/Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
   3:../DaisySP/Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
   4:../DaisySP/Source/Synthesis/oscillator.h **** #include <stdint.h>
   5:../DaisySP/Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
   6:../DaisySP/Source/Synthesis/oscillator.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Synthesis/oscillator.h **** 
   8:../DaisySP/Source/Synthesis/oscillator.h **** namespace daisysp
   9:../DaisySP/Source/Synthesis/oscillator.h **** {
  10:../DaisySP/Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:../DaisySP/Source/Synthesis/oscillator.h **** */
  12:../DaisySP/Source/Synthesis/oscillator.h **** class Oscillator
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 9


  13:../DaisySP/Source/Synthesis/oscillator.h **** {
  14:../DaisySP/Source/Synthesis/oscillator.h ****   public:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     Oscillator() {}
  16:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 129              		.loc 8 16 5 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134              		.loc 8 16 20 is_stmt 0 view .LVU15
 135 0000 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE3340:
 139              		.weak	_ZN7daisysp10OscillatorD1Ev
 140              		.thumb_set _ZN7daisysp10OscillatorD1Ev,_ZN7daisysp10OscillatorD2Ev
 141 0002 00BF     		.section	.text._ZN7daisysp3SvfD2Ev,"axG",%progbits,_ZN7daisysp3SvfD5Ev,comdat
 142              		.align	1
 143              		.p2align 2,,3
 144              		.weak	_ZN7daisysp3SvfD2Ev
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv5-d16
 150              	_ZN7daisysp3SvfD2Ev:
 151              	.LVL4:
 152              	.LFB3356:
 153              		.file 9 "../DaisySP/Source/Filters/svf.h"
   1:../DaisySP/Source/Filters/svf.h **** #pragma once
   2:../DaisySP/Source/Filters/svf.h **** #ifndef DSY_SVF_H
   3:../DaisySP/Source/Filters/svf.h **** #define DSY_SVF_H
   4:../DaisySP/Source/Filters/svf.h **** 
   5:../DaisySP/Source/Filters/svf.h **** namespace daisysp
   6:../DaisySP/Source/Filters/svf.h **** {
   7:../DaisySP/Source/Filters/svf.h **** /**      Double Sampled, Stable State Variable Filter
   8:../DaisySP/Source/Filters/svf.h **** 
   9:../DaisySP/Source/Filters/svf.h **** Credit to Andrew Simper from musicdsp.org
  10:../DaisySP/Source/Filters/svf.h **** 
  11:../DaisySP/Source/Filters/svf.h **** This is his "State Variable Filter (Double Sampled, Stable)"
  12:../DaisySP/Source/Filters/svf.h **** 
  13:../DaisySP/Source/Filters/svf.h **** Additional thanks to Laurent de Soras for stability limit, and 
  14:../DaisySP/Source/Filters/svf.h **** Stefan Diedrichsen for the correct notch output
  15:../DaisySP/Source/Filters/svf.h **** 
  16:../DaisySP/Source/Filters/svf.h **** Ported by: Stephen Hensley
  17:../DaisySP/Source/Filters/svf.h **** */
  18:../DaisySP/Source/Filters/svf.h **** class Svf
  19:../DaisySP/Source/Filters/svf.h **** {
  20:../DaisySP/Source/Filters/svf.h ****   public:
  21:../DaisySP/Source/Filters/svf.h ****     Svf() {}
  22:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 154              		.loc 9 22 5 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 159              		.loc 9 22 13 is_stmt 0 view .LVU17
 160 0000 7047     		bx	lr
 161              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 10


 162              	.LFE3356:
 164              		.weak	_ZN7daisysp3SvfD1Ev
 165              		.thumb_set _ZN7daisysp3SvfD1Ev,_ZN7daisysp3SvfD2Ev
 166 0002 00BF     		.section	.text._ZN7daisysp9CrossFadeD2Ev,"axG",%progbits,_ZN7daisysp9CrossFadeD5Ev,comdat
 167              		.align	1
 168              		.p2align 2,,3
 169              		.weak	_ZN7daisysp9CrossFadeD2Ev
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv5-d16
 175              	_ZN7daisysp9CrossFadeD2Ev:
 176              	.LVL5:
 177              	.LFB3461:
 178              		.file 10 "../DaisySP/Source/Dynamics/crossfade.h"
   1:../DaisySP/Source/Dynamics/crossfade.h **** #pragma once
   2:../DaisySP/Source/Dynamics/crossfade.h **** #ifndef DSY_CROSSFADE_H
   3:../DaisySP/Source/Dynamics/crossfade.h **** #define DSY_CROSSFADE_H
   4:../DaisySP/Source/Dynamics/crossfade.h **** #include <stdint.h>
   5:../DaisySP/Source/Dynamics/crossfade.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Dynamics/crossfade.h **** 
   7:../DaisySP/Source/Dynamics/crossfade.h **** namespace daisysp
   8:../DaisySP/Source/Dynamics/crossfade.h **** {
   9:../DaisySP/Source/Dynamics/crossfade.h **** /** Curve applied to the CrossFade
  10:../DaisySP/Source/Dynamics/crossfade.h **** - LIN = linear
  11:../DaisySP/Source/Dynamics/crossfade.h **** - CPOW = constant power
  12:../DaisySP/Source/Dynamics/crossfade.h **** - LOG = logarithmic
  13:../DaisySP/Source/Dynamics/crossfade.h **** - EXP  exponential
  14:../DaisySP/Source/Dynamics/crossfade.h **** - LAST = end of enum (used for array indexing)
  15:../DaisySP/Source/Dynamics/crossfade.h **** */
  16:../DaisySP/Source/Dynamics/crossfade.h **** enum
  17:../DaisySP/Source/Dynamics/crossfade.h **** {
  18:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LIN,
  19:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_CPOW,
  20:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LOG,
  21:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_EXP,
  22:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LAST,
  23:../DaisySP/Source/Dynamics/crossfade.h **** };
  24:../DaisySP/Source/Dynamics/crossfade.h **** 
  25:../DaisySP/Source/Dynamics/crossfade.h **** /** Performs a CrossFade between two signals
  26:../DaisySP/Source/Dynamics/crossfade.h **** 
  27:../DaisySP/Source/Dynamics/crossfade.h ****     Original author: Paul Batchelor
  28:../DaisySP/Source/Dynamics/crossfade.h **** 
  29:../DaisySP/Source/Dynamics/crossfade.h ****     Ported from Soundpipe by Andrew Ikenberry
  30:../DaisySP/Source/Dynamics/crossfade.h **** 
  31:../DaisySP/Source/Dynamics/crossfade.h ****     added curve option for constant power, etc.
  32:../DaisySP/Source/Dynamics/crossfade.h **** */
  33:../DaisySP/Source/Dynamics/crossfade.h **** class CrossFade
  34:../DaisySP/Source/Dynamics/crossfade.h **** {
  35:../DaisySP/Source/Dynamics/crossfade.h ****   public:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     CrossFade() {}
  37:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 179              		.loc 10 37 5 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 11


 184              		.loc 10 37 19 is_stmt 0 view .LVU19
 185 0000 7047     		bx	lr
 186              		.cfi_endproc
 187              	.LFE3461:
 189              		.weak	_ZN7daisysp9CrossFadeD1Ev
 190              		.thumb_set _ZN7daisysp9CrossFadeD1Ev,_ZN7daisysp9CrossFadeD2Ev
 191 0002 00BF     		.section	.text._ZN7daisysp7DcBlockD2Ev,"axG",%progbits,_ZN7daisysp7DcBlockD5Ev,comdat
 192              		.align	1
 193              		.p2align 2,,3
 194              		.weak	_ZN7daisysp7DcBlockD2Ev
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu fpv5-d16
 200              	_ZN7daisysp7DcBlockD2Ev:
 201              	.LVL6:
 202              	.LFB3753:
 203              		.file 11 "../DaisySP/Source/Utility/dcblock.h"
   1:../DaisySP/Source/Utility/dcblock.h **** 
   2:../DaisySP/Source/Utility/dcblock.h **** #pragma once
   3:../DaisySP/Source/Utility/dcblock.h **** #ifndef DSY_DCBLOCK_H
   4:../DaisySP/Source/Utility/dcblock.h **** #define DSY_DCBLOCK_H
   5:../DaisySP/Source/Utility/dcblock.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Utility/dcblock.h **** 
   7:../DaisySP/Source/Utility/dcblock.h **** namespace daisysp
   8:../DaisySP/Source/Utility/dcblock.h **** {
   9:../DaisySP/Source/Utility/dcblock.h **** /** Removes DC component of a signal
  10:../DaisySP/Source/Utility/dcblock.h ****     */
  11:../DaisySP/Source/Utility/dcblock.h **** class DcBlock
  12:../DaisySP/Source/Utility/dcblock.h **** {
  13:../DaisySP/Source/Utility/dcblock.h ****   public:
  14:../DaisySP/Source/Utility/dcblock.h ****     DcBlock(){};
  15:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 204              		.loc 11 15 5 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 209              		.loc 11 15 16 is_stmt 0 view .LVU21
 210 0000 7047     		bx	lr
 211              		.cfi_endproc
 212              	.LFE3753:
 214              		.weak	_ZN7daisysp7DcBlockD1Ev
 215              		.thumb_set _ZN7daisysp7DcBlockD1Ev,_ZN7daisysp7DcBlockD2Ev
 216 0002 00BF     		.section	.text._ZN7daisysp9EnvFollowD2Ev,"axG",%progbits,_ZN7daisysp9EnvFollowD5Ev,comdat
 217              		.align	1
 218              		.p2align 2,,3
 219              		.weak	_ZN7daisysp9EnvFollowD2Ev
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu fpv5-d16
 225              	_ZN7daisysp9EnvFollowD2Ev:
 226              	.LVL7:
 227              	.LFB3940:
 228              		.file 12 "envFollow.h"
   1:envFollow.h   **** // Copyright 2020 Adam Fulford
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 12


   2:envFollow.h   **** // 
   3:envFollow.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:envFollow.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:envFollow.h   **** // in the Software without restriction, including without limitation the rights
   6:envFollow.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:envFollow.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:envFollow.h   **** // furnished to do so, subject to the following conditions:
   9:envFollow.h   **** // 
  10:envFollow.h   **** // The above copyright notice and this permission notice shall be included in
  11:envFollow.h   **** // all copies or substantial portions of the Software.
  12:envFollow.h   **** // 
  13:envFollow.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:envFollow.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:envFollow.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:envFollow.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:envFollow.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:envFollow.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:envFollow.h   **** // THE SOFTWARE.
  20:envFollow.h   **** // 
  21:envFollow.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:envFollow.h   **** 
  23:envFollow.h   **** #ifndef ENV_FOLLOW_H
  24:envFollow.h   **** #define ENV_FOLLOW_H
  25:envFollow.h   **** #include <math.h>
  26:envFollow.h   **** 
  27:envFollow.h   **** namespace daisysp
  28:envFollow.h   **** {
  29:envFollow.h   **** 
  30:envFollow.h   **** class EnvFollow
  31:envFollow.h   **** {
  32:envFollow.h   ****     private:
  33:envFollow.h   ****     
  34:envFollow.h   ****     float avg;      //exp average of input
  35:envFollow.h   ****     float pos_sample;   //positive sample
  36:envFollow.h   ****     float sample_noDC;  //no DC sample
  37:envFollow.h   ****     float avg_env;  //average envelope
  38:envFollow.h   ****     float w;        //weighting
  39:envFollow.h   ****     float w_env;    //envelope weighting
  40:envFollow.h   **** 
  41:envFollow.h   ****     public:
  42:envFollow.h   **** 
  43:envFollow.h   ****     EnvFollow() //default constructor
  44:envFollow.h   ****     {
  45:envFollow.h   ****         avg = 0.0f;      //exp average of input
  46:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
  47:envFollow.h   ****         avg_env = 0.0f;  //average envelope
  48:envFollow.h   ****         w = 0.0001f;        //weighting
  49:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
  50:envFollow.h   ****         sample_noDC = 0.0f;
  51:envFollow.h   ****     }  
  52:envFollow.h   ****     ~EnvFollow() {}
 229              		.loc 12 52 5 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              		.loc 12 52 19 is_stmt 0 view .LVU23
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 13


 235 0000 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE3940:
 239              		.weak	_ZN7daisysp9EnvFollowD1Ev
 240              		.thumb_set _ZN7daisysp9EnvFollowD1Ev,_ZN7daisysp9EnvFollowD2Ev
 241 0002 00BF     		.section	.text._ZN8TaptempoD2Ev,"axG",%progbits,_ZN8TaptempoD5Ev,comdat
 242              		.align	1
 243              		.p2align 2,,3
 244              		.weak	_ZN8TaptempoD2Ev
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu fpv5-d16
 250              	_ZN8TaptempoD2Ev:
 251              	.LVL8:
 252              	.LFB3947:
 253              		.file 13 "taptempo.h"
   1:taptempo.h    **** // Copyright 2020 Adam Fulford
   2:taptempo.h    **** // 
   3:taptempo.h    **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:taptempo.h    **** // of this software and associated documentation files (the "Software"), to deal
   5:taptempo.h    **** // in the Software without restriction, including without limitation the rights
   6:taptempo.h    **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:taptempo.h    **** // copies of the Software, and to permit persons to whom the Software is
   8:taptempo.h    **** // furnished to do so, subject to the following conditions:
   9:taptempo.h    **** // 
  10:taptempo.h    **** // The above copyright notice and this permission notice shall be included in
  11:taptempo.h    **** // all copies or substantial portions of the Software.
  12:taptempo.h    **** // 
  13:taptempo.h    **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:taptempo.h    **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:taptempo.h    **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:taptempo.h    **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:taptempo.h    **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:taptempo.h    **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:taptempo.h    **** // THE SOFTWARE.
  20:taptempo.h    **** // 
  21:taptempo.h    **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:taptempo.h    **** 
  23:taptempo.h    **** #ifndef TAP_TEMPO_H
  24:taptempo.h    **** #define TAP_TEMPO_H
  25:taptempo.h    **** 
  26:taptempo.h    **** #include "daisysp.h"
  27:taptempo.h    **** #include "daisy_seed.h"
  28:taptempo.h    **** 
  29:taptempo.h    **** using namespace daisy;
  30:taptempo.h    **** 
  31:taptempo.h    **** class Taptempo
  32:taptempo.h    **** {
  33:taptempo.h    ****     private:
  34:taptempo.h    ****         uint32_t mintap_,maxtap_;
  35:taptempo.h    ****         uint32_t currentTime_,lastTime_,lastTapLength_,tapLength_;
  36:taptempo.h    ****         bool tapflag_;
  37:taptempo.h    ****         float tap_tolerance_,tempo_,tapRatio_;
  38:taptempo.h    **** 
  39:taptempo.h    ****     public:
  40:taptempo.h    **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 14


  41:taptempo.h    ****     Taptempo()  //default constructor
  42:taptempo.h    ****     {
  43:taptempo.h    ****         tapflag_ = false;
  44:taptempo.h    ****         tap_tolerance_ = 1.25f;
  45:taptempo.h    ****         maxtap_ = 2000;
  46:taptempo.h    ****         mintap_ = 80;
  47:taptempo.h    ****         lastTapLength_ = 0;
  48:taptempo.h    ****         tempo_ = 500.0f;
  49:taptempo.h    ****         lastTime_ = 0;
  50:taptempo.h    ****         currentTime_ = 0;
  51:taptempo.h    ****         tapRatio_ = 1.0f;
  52:taptempo.h    **** 
  53:taptempo.h    ****     }
  54:taptempo.h    ****     ~Taptempo() {}
 254              		.loc 13 54 5 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259              		.loc 13 54 18 is_stmt 0 view .LVU25
 260 0000 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE3947:
 264              		.weak	_ZN8TaptempoD1Ev
 265              		.thumb_set _ZN8TaptempoD1Ev,_ZN8TaptempoD2Ev
 266 0002 00BF     		.section	.text._ZN8TempoLEDD2Ev,"axG",%progbits,_ZN8TempoLEDD5Ev,comdat
 267              		.align	1
 268              		.p2align 2,,3
 269              		.weak	_ZN8TempoLEDD2Ev
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv5-d16
 275              	_ZN8TempoLEDD2Ev:
 276              	.LVL9:
 277              	.LFB3953:
 278              		.file 14 "LEDs.h"
   1:LEDs.h        **** #ifndef LEDS_H
   2:LEDs.h        **** #define LEDS_H
   3:LEDs.h        **** 
   4:LEDs.h        **** // Copyright 2020 Adam Fulford
   5:LEDs.h        **** // 
   6:LEDs.h        **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   7:LEDs.h        **** // of this software and associated documentation files (the "Software"), to deal
   8:LEDs.h        **** // in the Software without restriction, including without limitation the rights
   9:LEDs.h        **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  10:LEDs.h        **** // copies of the Software, and to permit persons to whom the Software is
  11:LEDs.h        **** // furnished to do so, subject to the following conditions:
  12:LEDs.h        **** // 
  13:LEDs.h        **** // The above copyright notice and this permission notice shall be included in
  14:LEDs.h        **** // all copies or substantial portions of the Software.
  15:LEDs.h        **** // 
  16:LEDs.h        **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  17:LEDs.h        **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  18:LEDs.h        **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  19:LEDs.h        **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  20:LEDs.h        **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 15


  21:LEDs.h        **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  22:LEDs.h        **** // THE SOFTWARE.
  23:LEDs.h        **** // 
  24:LEDs.h        **** // See http://creativecommons.org/licenses/MIT/ for more information.
  25:LEDs.h        **** 
  26:LEDs.h        **** #include "daisysp.h"
  27:LEDs.h        **** #include "daisy_seed.h"
  28:LEDs.h        **** 
  29:LEDs.h        **** using namespace daisysp;
  30:LEDs.h        **** using namespace daisy;
  31:LEDs.h        **** 
  32:LEDs.h        **** class TempoLED
  33:LEDs.h        **** {
  34:LEDs.h        **** 
  35:LEDs.h        **** Led led;
  36:LEDs.h        **** Oscillator blink;
  37:LEDs.h        **** 
  38:LEDs.h        **** public:
  39:LEDs.h        **** 
  40:LEDs.h        **** TempoLED(){}
  41:LEDs.h        **** ~TempoLED(){}   //destructor
 279              		.loc 14 41 1 is_stmt 1 view -0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284              	.LBB739:
 285              	.LBI739:
 286              		.loc 8 16 5 view .LVU27
 287              		.loc 8 16 5 is_stmt 0 view .LVU28
 288              	.LBE739:
 289              	.LBB740:
 290              	.LBI740:
 291              		.file 15 "../libdaisy/src/hid/led.h"
   1:../libdaisy/src/hid/led.h **** 
   2:../libdaisy/src/hid/led.h **** #pragma once
   3:../libdaisy/src/hid/led.h **** #ifndef DSY_LED_H
   4:../libdaisy/src/hid/led.h **** #define DSY_LED_H
   5:../libdaisy/src/hid/led.h **** #include "daisy_core.h"
   6:../libdaisy/src/hid/led.h **** #include "per/gpio.h"
   7:../libdaisy/src/hid/led.h **** 
   8:../libdaisy/src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../libdaisy/src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../libdaisy/src/hid/led.h **** */
  11:../libdaisy/src/hid/led.h **** 
  12:../libdaisy/src/hid/led.h **** namespace daisy
  13:../libdaisy/src/hid/led.h **** {
  14:../libdaisy/src/hid/led.h **** /**
  15:../libdaisy/src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../libdaisy/src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../libdaisy/src/hid/led.h ****     @author shensley
  18:../libdaisy/src/hid/led.h ****     @date March 2020
  19:../libdaisy/src/hid/led.h ****     @ingroup feedback
  20:../libdaisy/src/hid/led.h **** */
  21:../libdaisy/src/hid/led.h **** class Led
  22:../libdaisy/src/hid/led.h **** {
  23:../libdaisy/src/hid/led.h ****   public:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 16


  24:../libdaisy/src/hid/led.h ****     Led() {}
  25:../libdaisy/src/hid/led.h ****     ~Led() {}
 292              		.loc 15 25 5 is_stmt 1 view .LVU29
 293              		.loc 15 25 5 is_stmt 0 view .LVU30
 294              	.LBE740:
 295              		.loc 14 41 13 view .LVU31
 296 0000 7047     		bx	lr
 297              		.cfi_endproc
 298              	.LFE3953:
 300              		.weak	_ZN8TempoLEDD1Ev
 301              		.thumb_set _ZN8TempoLEDD1Ev,_ZN8TempoLEDD2Ev
 302 0002 00BF     		.section	.text._ZN9ButtonLEDD2Ev,"axG",%progbits,_ZN9ButtonLEDD5Ev,comdat
 303              		.align	1
 304              		.p2align 2,,3
 305              		.weak	_ZN9ButtonLEDD2Ev
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 309              		.fpu fpv5-d16
 311              	_ZN9ButtonLEDD2Ev:
 312              	.LVL10:
 313              	.LFB3959:
  42:LEDs.h        **** 
  43:LEDs.h        **** void init(dsy_gpio_pin ledpin, float samplerate);  //led pin number
  44:LEDs.h        **** 
  45:LEDs.h        **** void setTempo(float tempo);
  46:LEDs.h        **** 
  47:LEDs.h        **** void resetPhase();
  48:LEDs.h        **** 
  49:LEDs.h        **** void update();
  50:LEDs.h        **** 
  51:LEDs.h        **** void LED_set(float brightness);
  52:LEDs.h        **** 
  53:LEDs.h        **** bool isEOC();
  54:LEDs.h        **** 
  55:LEDs.h        **** };
  56:LEDs.h        **** 
  57:LEDs.h        **** class ButtonLED    //button with status LED
  58:LEDs.h        **** {
  59:LEDs.h        ****     public:
  60:LEDs.h        ****     ButtonLED() {}
  61:LEDs.h        ****     ~ButtonLED() {}
 314              		.loc 14 61 5 is_stmt 1 view -0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318              		@ link register save eliminated.
 319              	.LBB741:
 320              	.LBI741:
 321              		.loc 15 25 5 view .LVU33
 322              		.loc 15 25 5 is_stmt 0 view .LVU34
 323              	.LBE741:
 324              	.LBB742:
 325              	.LBI742:
 326              		.loc 1 41 5 is_stmt 1 view .LVU35
 327              		.loc 1 41 5 is_stmt 0 view .LVU36
 328              	.LBE742:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 17


 329              		.loc 14 61 19 view .LVU37
 330 0000 7047     		bx	lr
 331              		.cfi_endproc
 332              	.LFE3959:
 334              		.weak	_ZN9ButtonLEDD1Ev
 335              		.thumb_set _ZN9ButtonLEDD1Ev,_ZN9ButtonLEDD2Ev
 336 0002 00BF     		.section	.text._ZN10DelayMultiD2Ev,"axG",%progbits,_ZN10DelayMultiD5Ev,comdat
 337              		.align	1
 338              		.p2align 2,,3
 339              		.weak	_ZN10DelayMultiD2Ev
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 343              		.fpu fpv5-d16
 345              	_ZN10DelayMultiD2Ev:
 346              	.LVL11:
 347              	.LFB3965:
 348              		.file 16 "DelayMulti.h"
   1:DelayMulti.h  **** // Copyright 2020 Adam Fulford
   2:DelayMulti.h  **** // 
   3:DelayMulti.h  **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:DelayMulti.h  **** // of this software and associated documentation files (the "Software"), to deal
   5:DelayMulti.h  **** // in the Software without restriction, including without limitation the rights
   6:DelayMulti.h  **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:DelayMulti.h  **** // copies of the Software, and to permit persons to whom the Software is
   8:DelayMulti.h  **** // furnished to do so, subject to the following conditions:
   9:DelayMulti.h  **** // 
  10:DelayMulti.h  **** // The above copyright notice and this permission notice shall be included in
  11:DelayMulti.h  **** // all copies or substantial portions of the Software.
  12:DelayMulti.h  **** // 
  13:DelayMulti.h  **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:DelayMulti.h  **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:DelayMulti.h  **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:DelayMulti.h  **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:DelayMulti.h  **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:DelayMulti.h  **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:DelayMulti.h  **** // THE SOFTWARE.
  20:DelayMulti.h  **** // 
  21:DelayMulti.h  **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:DelayMulti.h  **** 
  23:DelayMulti.h  **** #ifndef DELAYMULTI_H
  24:DelayMulti.h  **** #define DELAYMULTI_H
  25:DelayMulti.h  **** 
  26:DelayMulti.h  **** #include "daisysp.h"
  27:DelayMulti.h  **** #include "daisy_seed.h"
  28:DelayMulti.h  **** #include "delayline_multitap.h" //modified delayline
  29:DelayMulti.h  **** #include "constants.h"
  30:DelayMulti.h  **** #include "LEDs.h"
  31:DelayMulti.h  **** #include "scale.h"
  32:DelayMulti.h  **** 
  33:DelayMulti.h  **** using namespace daisysp;
  34:DelayMulti.h  **** using namespace daisy;
  35:DelayMulti.h  **** 
  36:DelayMulti.h  **** constexpr size_t numHeads{1};
  37:DelayMulti.h  **** //constexpr size_t numHeadsSets{2};
  38:DelayMulti.h  **** constexpr size_t totalNumHeads{2};
  39:DelayMulti.h  **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 18


  40:DelayMulti.h  **** constexpr float delaytime_threshold{50};   //in samples
  41:DelayMulti.h  **** constexpr uint32_t timethresh{25}; //length of wait before triggering xfade (used to be 75)
  42:DelayMulti.h  **** 
  43:DelayMulti.h  **** class DelayMulti
  44:DelayMulti.h  **** {
  45:DelayMulti.h  **** public:
  46:DelayMulti.h  **** DelayLineMultiTap <float, static_cast<size_t>(48000 * 36.0f)>  *del; //36 second buffer
  47:DelayMulti.h  **** //tempoLED
  48:DelayMulti.h  **** TempoLED tempoled;
  49:DelayMulti.h  **** DelayMulti() {}
  50:DelayMulti.h  **** ~DelayMulti() {}
 349              		.loc 16 50 1 is_stmt 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 354              	.LBB743:
 355              	.LBI743:
  41:LEDs.h        **** 
 356              		.loc 14 41 1 view .LVU39
 357              	.LBB744:
 358              	.LBI744:
 359              		.loc 8 16 5 view .LVU40
 360              		.loc 8 16 5 is_stmt 0 view .LVU41
 361              	.LBE744:
 362              	.LBB745:
 363              	.LBI745:
 364              		.loc 15 25 5 is_stmt 1 view .LVU42
 365              		.loc 15 25 5 is_stmt 0 view .LVU43
 366              	.LBE745:
 367              	.LBE743:
 368              		.loc 16 50 16 view .LVU44
 369 0000 7047     		bx	lr
 370              		.cfi_endproc
 371              	.LFE3965:
 373              		.weak	_ZN10DelayMultiD1Ev
 374              		.thumb_set _ZN10DelayMultiD1Ev,_ZN10DelayMultiD2Ev
 375 0002 00BF     		.section	.text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev,"axG",%progbits,_ZN7daisysp17DelayL
 376              		.align	1
 377              		.p2align 2,,3
 378              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 382              		.fpu fpv5-d16
 384              	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:
 385              	.LVL12:
 386              	.LFB4890:
 387              		.file 17 "delayline_multitap.h"
   1:delayline_multitap.h **** // Copyright 2020 Adam Fulford
   2:delayline_multitap.h **** // 
   3:delayline_multitap.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_multitap.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_multitap.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_multitap.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_multitap.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_multitap.h **** // furnished to do so, subject to the following conditions:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 19


   9:delayline_multitap.h **** // 
  10:delayline_multitap.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_multitap.h **** // all copies or substantial portions of the Software.
  12:delayline_multitap.h **** // 
  13:delayline_multitap.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_multitap.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_multitap.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_multitap.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_multitap.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_multitap.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_multitap.h **** // THE SOFTWARE.
  20:delayline_multitap.h **** // 
  21:delayline_multitap.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_multitap.h **** 
  23:delayline_multitap.h **** #pragma once
  24:delayline_multitap.h **** #ifndef DSY_DELAY_MULTITAP_H
  25:delayline_multitap.h **** #define DSY_DELAY_MULTITAP_H
  26:delayline_multitap.h **** #include <stdlib.h>
  27:delayline_multitap.h **** #include <stdint.h>
  28:delayline_multitap.h **** #include <array>
  29:delayline_multitap.h **** namespace daisysp
  30:delayline_multitap.h **** {
  31:delayline_multitap.h **** /** Mulitap Delay line.
  32:delayline_multitap.h **** 
  33:delayline_multitap.h **** DelayLine<float, SAMPLE_RATE> del;
  34:delayline_multitap.h **** 
  35:delayline_multitap.h **** By: Adam Fulford
  36:delayline_multitap.h **** */
  37:delayline_multitap.h **** template <typename T, size_t max_size>
  38:delayline_multitap.h **** class DelayLineMultiTap
  39:delayline_multitap.h **** {
  40:delayline_multitap.h **** private:
  41:delayline_multitap.h ****     size_t write_ptr_;
  42:delayline_multitap.h ****     std::array<size_t, 16> delay_;    //array to hold delay times for upto 16 read heads.
  43:delayline_multitap.h ****     std::array<float, 16> frac_;
  44:delayline_multitap.h ****     T      line_[max_size];
  45:delayline_multitap.h ****     size_t num_heads_;
  46:delayline_multitap.h **** 
  47:delayline_multitap.h ****   public:
  48:delayline_multitap.h ****     DelayLineMultiTap() 
  49:delayline_multitap.h ****     {
  50:delayline_multitap.h ****        // num_heads_ = 16; //Why can't I do this in the default constructor?! Compiles but does not
  51:delayline_multitap.h ****     }
  52:delayline_multitap.h ****     ~DelayLineMultiTap() {}
 388              		.loc 17 52 5 is_stmt 1 view -0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 0, uses_anonymous_args = 0
 392              		@ link register save eliminated.
 393              		.loc 17 52 27 is_stmt 0 view .LVU46
 394 0000 7047     		bx	lr
 395              		.cfi_endproc
 396              	.LFE4890:
 398              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 399              		.thumb_set _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev,_ZN7daisysp17DelayLineMultiTapIfLj17280
 400 0002 00BF     		.section	.text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev,"axG",%progbits,_ZN7daisysp16DelayLin
 401              		.align	1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 20


 402              		.p2align 2,,3
 403              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 407              		.fpu fpv5-d16
 409              	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:
 410              	.LVL13:
 411              	.LFB4893:
 412              		.file 18 "delayline_reverse.h"
   1:delayline_reverse.h **** // Copyright 2020 Adam Fulford
   2:delayline_reverse.h **** // 
   3:delayline_reverse.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_reverse.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_reverse.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_reverse.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_reverse.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_reverse.h **** // furnished to do so, subject to the following conditions:
   9:delayline_reverse.h **** // 
  10:delayline_reverse.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_reverse.h **** // all copies or substantial portions of the Software.
  12:delayline_reverse.h **** // 
  13:delayline_reverse.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_reverse.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_reverse.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_reverse.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_reverse.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_reverse.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_reverse.h **** // THE SOFTWARE.
  20:delayline_reverse.h **** // 
  21:delayline_reverse.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_reverse.h **** 
  23:delayline_reverse.h **** #pragma once
  24:delayline_reverse.h **** #ifndef DSY_DELAY_REVERSE_H
  25:delayline_reverse.h **** #define DSY_DELAY_REVERSE_H
  26:delayline_reverse.h **** #include <stdlib.h>
  27:delayline_reverse.h **** #include <stdint.h>
  28:delayline_reverse.h **** #include <math.h>
  29:delayline_reverse.h **** namespace daisysp
  30:delayline_reverse.h **** {
  31:delayline_reverse.h **** /** Reverse Delay line
  32:delayline_reverse.h **** By: Adam Fulford
  33:delayline_reverse.h **** */
  34:delayline_reverse.h **** template <typename T, size_t max_size>
  35:delayline_reverse.h **** class DelayLineReverse
  36:delayline_reverse.h **** {
  37:delayline_reverse.h ****   public:
  38:delayline_reverse.h ****     DelayLineReverse() {}
  39:delayline_reverse.h ****     ~DelayLineReverse() {}
 413              		.loc 18 39 5 is_stmt 1 view -0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417              		@ link register save eliminated.
 418              		.loc 18 39 26 is_stmt 0 view .LVU48
 419 0000 7047     		bx	lr
 420              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 21


 421              	.LFE4893:
 423              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 424              		.thumb_set _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev,_ZN7daisysp16DelayLineReverseIfLj600000EE
 425 0002 00BF     		.section	.text._Z10InitDelaysf,"ax",%progbits
 426              		.align	1
 427              		.p2align 2,,3
 428              		.global	_Z10InitDelaysf
 429              		.syntax unified
 430              		.thumb
 431              		.thumb_func
 432              		.fpu fpv5-d16
 434              	_Z10InitDelaysf:
 435              	.LVL14:
 436              	.LFB4289:
 437              		.file 19 "Veno-Echo.cpp"
   1:Veno-Echo.cpp **** // Copyright 2020 Adam Fulford
   2:Veno-Echo.cpp **** // 
   3:Veno-Echo.cpp **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.cpp **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.cpp **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.cpp **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.cpp **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.cpp **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.cpp **** // 
  10:Veno-Echo.cpp **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.cpp **** // all copies or substantial portions of the Software.
  12:Veno-Echo.cpp **** // 
  13:Veno-Echo.cpp **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.cpp **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.cpp **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.cpp **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.cpp **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.cpp **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.cpp **** // THE SOFTWARE.
  20:Veno-Echo.cpp **** // 
  21:Veno-Echo.cpp **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.cpp **** 
  23:Veno-Echo.cpp **** #include "Veno-Echo.h"
  24:Veno-Echo.cpp **** #include "QSPI_Settings.h"
  25:Veno-Echo.cpp **** #include "daisysp.h"
  26:Veno-Echo.cpp **** #include "delayline_multitap.h" //modified delayline
  27:Veno-Echo.cpp **** #include "delayline_reverse.h"  //reverse delayline
  28:Veno-Echo.cpp **** #include "envFollow.h"
  29:Veno-Echo.cpp **** #include "scale.h"
  30:Veno-Echo.cpp **** #include "constants.h"
  31:Veno-Echo.cpp **** #include "taptempo.h"
  32:Veno-Echo.cpp **** #include "LEDs.h"
  33:Veno-Echo.cpp **** #include "DelayMulti.h"
  34:Veno-Echo.cpp **** #include <math.h>
  35:Veno-Echo.cpp **** #include <string.h>
  36:Veno-Echo.cpp **** #include <atomic>
  37:Veno-Echo.cpp **** 
  38:Veno-Echo.cpp **** using namespace daisysp;
  39:Veno-Echo.cpp **** 
  40:Veno-Echo.cpp **** static Svf LPF_L;
  41:Veno-Echo.cpp **** static Svf LPF_R;
  42:Veno-Echo.cpp **** static Svf HPF_L;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 22


  43:Veno-Echo.cpp **** static Svf HPF_R;
  44:Veno-Echo.cpp **** 
  45:Veno-Echo.cpp **** static Svf LPF_L_post;
  46:Veno-Echo.cpp **** static Svf LPF_R_post;
  47:Veno-Echo.cpp **** static Svf HPF_L_post;
  48:Veno-Echo.cpp **** static Svf HPF_R_post;
  49:Veno-Echo.cpp **** 
  50:Veno-Echo.cpp **** static Oscillator lfo;
  51:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
  52:Veno-Echo.cpp **** 
  53:Veno-Echo.cpp **** static DcBlock DcBlock_LFB, DcBlock_RFB; //DC blocks
  54:Veno-Echo.cpp **** 
  55:Veno-Echo.cpp **** // Declare a DelayLine of MAX_DELAY number of floats.
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsL;
  57:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
  58:Veno-Echo.cpp **** 
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsL_REV; //10 s
  60:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
  61:Veno-Echo.cpp **** 
  62:Veno-Echo.cpp **** struct DelayRev
  63:Veno-Echo.cpp **** {
  64:Veno-Echo.cpp ****     DelayLineReverse <float, static_cast<size_t>(maxRevDelay*2.5f)>  *del;
  65:Veno-Echo.cpp ****     float currentDelay_;
  66:Veno-Echo.cpp ****     //float delayTarget;
  67:Veno-Echo.cpp **** 
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
  69:Veno-Echo.cpp ****     {
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
  71:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
  72:Veno-Echo.cpp ****         {
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
  75:Veno-Echo.cpp ****             //del -> Reset();
  76:Veno-Echo.cpp ****         }
  77:Veno-Echo.cpp ****     }
  78:Veno-Echo.cpp **** 
  79:Veno-Echo.cpp ****     float Read()
  80:Veno-Echo.cpp ****     {
  81:Veno-Echo.cpp ****         //read from head1
  82:Veno-Echo.cpp ****         float read = del -> ReadRev();
  83:Veno-Echo.cpp ****         return read;
  84:Veno-Echo.cpp ****     }
  85:Veno-Echo.cpp **** 
  86:Veno-Echo.cpp ****     float FwdFbk()
  87:Veno-Echo.cpp ****     {
  88:Veno-Echo.cpp ****         float read = del -> ReadFwd();
  89:Veno-Echo.cpp ****         return read;
  90:Veno-Echo.cpp ****     }
  91:Veno-Echo.cpp **** 
  92:Veno-Echo.cpp ****     void Write(float in)    //sort out feedback in audiocallback
  93:Veno-Echo.cpp ****     {
  94:Veno-Echo.cpp ****         del -> Write(in);
  95:Veno-Echo.cpp ****     }
  96:Veno-Echo.cpp **** };
  97:Veno-Echo.cpp **** 
  98:Veno-Echo.cpp **** DelayMulti delayL,delayR;
  99:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 23


 100:Veno-Echo.cpp **** 
 101:Veno-Echo.cpp **** //LED objects:
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 103:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 104:Veno-Echo.cpp **** 
 105:Veno-Echo.cpp **** 
 106:Veno-Echo.cpp **** float delayTimeL_CV;
 107:Veno-Echo.cpp **** float delayTimeR_CV;
 108:Veno-Echo.cpp **** 
 109:Veno-Echo.cpp **** float feedbackL{};
 110:Veno-Echo.cpp **** float feedbackL_CV{};
 111:Veno-Echo.cpp **** 
 112:Veno-Echo.cpp **** float feedbackR{};
 113:Veno-Echo.cpp **** float feedbackR_CV{};
 114:Veno-Echo.cpp **** 
 115:Veno-Echo.cpp **** float crossfeedback{};
 116:Veno-Echo.cpp **** float crossfeedback_CV{};
 117:Veno-Echo.cpp **** 
 118:Veno-Echo.cpp **** float drywet{0.5};
 119:Veno-Echo.cpp **** float drywet_CV{};
 120:Veno-Echo.cpp **** 
 121:Veno-Echo.cpp **** float width{1.0};
 122:Veno-Echo.cpp **** float width_CV{};
 123:Veno-Echo.cpp **** 
 124:Veno-Echo.cpp **** float filterXfade{};
 125:Veno-Echo.cpp **** 
 126:Veno-Echo.cpp **** TempoDivs div_L{};
 127:Veno-Echo.cpp **** TempoDivs div_R{};
 128:Veno-Echo.cpp **** 
 129:Veno-Echo.cpp **** float ModDepth{0.0f};   //100.0 is a lot!
 130:Veno-Echo.cpp **** 
 131:Veno-Echo.cpp **** //float modulation_CV{};
 132:Veno-Echo.cpp **** float modulation_CV_Raw{};
 133:Veno-Echo.cpp **** 
 134:Veno-Echo.cpp **** bool syncMode{false};
 135:Veno-Echo.cpp **** bool shift{false};  //global variable for secondary shift functions
 136:Veno-Echo.cpp **** bool mute{};
 137:Veno-Echo.cpp **** 
 138:Veno-Echo.cpp **** bool ClockInFlag{false};
 139:Veno-Echo.cpp **** 
 140:Veno-Echo.cpp **** bool PostFilters{false};
 141:Veno-Echo.cpp **** 
 142:Veno-Echo.cpp **** bool delayL_flag{true};
 143:Veno-Echo.cpp **** bool delayR_flag{true};
 144:Veno-Echo.cpp **** 
 145:Veno-Echo.cpp **** std::atomic<bool> save_flag{};
 146:Veno-Echo.cpp **** 
 147:Veno-Echo.cpp **** static Adsr FwdRevLEnv;
 148:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 149:Veno-Echo.cpp **** 
 150:Veno-Echo.cpp **** static Adsr LPF_Env;
 151:Veno-Echo.cpp **** static Adsr HPF_Env;
 152:Veno-Echo.cpp **** 
 153:Veno-Echo.cpp **** static CrossFade FwdRevLXfade;  //crossfades for reverse delay into fwd delay
 154:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 155:Veno-Echo.cpp **** 
 156:Veno-Echo.cpp **** static CrossFade WidthXfade;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 24


 157:Veno-Echo.cpp **** 
 158:Veno-Echo.cpp **** //crossfades for switching in and out of filters
 159:Veno-Echo.cpp **** static CrossFade LPF_LXfade;
 160:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 161:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 162:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 163:Veno-Echo.cpp **** 
 164:Veno-Echo.cpp **** //crossfades for switching in and out of post filters
 165:Veno-Echo.cpp **** static CrossFade LPF_LXfade_post;
 166:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 167:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 168:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 169:Veno-Echo.cpp **** 
 170:Veno-Echo.cpp **** //cross fades for manual filter crossfading
 171:Veno-Echo.cpp **** static CrossFade FilterMix_L;
 172:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 173:Veno-Echo.cpp **** 
 174:Veno-Echo.cpp **** static CrossFade FilterMix_L_post;
 175:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 176:Veno-Echo.cpp **** 
 177:Veno-Echo.cpp **** //Gate inputs
 178:Veno-Echo.cpp **** Switch ReverseGateL;
 179:Veno-Echo.cpp **** Switch ReverseGateR;
 180:Veno-Echo.cpp **** 
 181:Veno-Echo.cpp **** //Switch TapButton;
 182:Veno-Echo.cpp **** Switch Sync;
 183:Veno-Echo.cpp **** Switch ClockIn;
 184:Veno-Echo.cpp **** 
 185:Veno-Echo.cpp **** //Tap tempo
 186:Veno-Echo.cpp **** Taptempo BaseTempo; 
 187:Veno-Echo.cpp **** 
 188:Veno-Echo.cpp **** 
 189:Veno-Echo.cpp **** 
 190:Veno-Echo.cpp **** Settings AltControls;
 191:Veno-Echo.cpp **** 
 192:Veno-Echo.cpp **** //default alt control values
 193:Veno-Echo.cpp **** constexpr Settings defaultAltControls
 194:Veno-Echo.cpp **** {
 195:Veno-Echo.cpp ****     (minRevDelay + maxRevDelay) / 2.0f, //RevLength
 196:Veno-Echo.cpp ****     1.0f,   //tapRatio
 197:Veno-Echo.cpp ****     0.0f,   //ModDepth
 198:Veno-Echo.cpp ****     (maxModRate + minModRate) / 2.0f,   //ModFreq
 199:Veno-Echo.cpp ****     defaultHPCut,   //HP_Cutoff
 200:Veno-Echo.cpp ****     defaultLPCut,   //LP_Cutoff
 201:Veno-Echo.cpp ****     default_Res,     //Filter Resonance
 202:Veno-Echo.cpp ****     0.0f
 203:Veno-Echo.cpp **** };
 204:Veno-Echo.cpp **** 
 205:Veno-Echo.cpp **** void Update_DelayTimeL_CV();
 206:Veno-Echo.cpp **** void Update_DelayTimeL();
 207:Veno-Echo.cpp **** 
 208:Veno-Echo.cpp **** void Update_DelayTimeR_CV();
 209:Veno-Echo.cpp **** void Update_DelayTimeR();
 210:Veno-Echo.cpp **** 
 211:Veno-Echo.cpp **** void Update_feedbackL_CV();
 212:Veno-Echo.cpp **** void Update_feedbackL();
 213:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 25


 214:Veno-Echo.cpp **** void Update_feedbackR_CV();
 215:Veno-Echo.cpp **** void Update_feedbackR();
 216:Veno-Echo.cpp **** 
 217:Veno-Echo.cpp **** void Update_drywet_CV();
 218:Veno-Echo.cpp **** void Update_drywet();
 219:Veno-Echo.cpp **** 
 220:Veno-Echo.cpp **** void Update_width_CV();
 221:Veno-Echo.cpp **** void Update_width();
 222:Veno-Echo.cpp **** 
 223:Veno-Echo.cpp **** void Update_crossfeedback();
 224:Veno-Echo.cpp **** void Update_filterXfade();
 225:Veno-Echo.cpp **** 
 226:Veno-Echo.cpp **** void Update_Buttons();
 227:Veno-Echo.cpp **** void Update_BaseTempoLED();
 228:Veno-Echo.cpp **** void Update_Mod();
 229:Veno-Echo.cpp **** void GetModCV();
 230:Veno-Echo.cpp **** float SetTempoDiv(float input, TempoDivs *div);
 231:Veno-Echo.cpp **** void UpdateClock();
 232:Veno-Echo.cpp **** float GetTapRatio(TapRatios ratio);
 233:Veno-Echo.cpp **** void ApplySettings(const Settings &setting);
 234:Veno-Echo.cpp **** void TurnOnAllLEDs();
 235:Veno-Echo.cpp **** void ResetAllLEDs();
 236:Veno-Echo.cpp **** float HardLimit(float input, float limit);
 237:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val);
 238:Veno-Echo.cpp **** 
 239:Veno-Echo.cpp **** static void AudioCallback(float *in, float *out, size_t size)
 240:Veno-Echo.cpp **** {
 241:Veno-Echo.cpp **** 
 242:Veno-Echo.cpp **** /*
 243:Veno-Echo.cpp **** static uint32_t funcLength{};
 244:Veno-Echo.cpp **** static uint32_t lastFuncTime{};
 245:Veno-Echo.cpp **** static uint32_t maxFuncLength{};
 246:Veno-Echo.cpp **** static uint32_t minFuncLength{500000000};
 247:Veno-Echo.cpp **** static uint32_t aveFuncLength{};
 248:Veno-Echo.cpp **** 
 249:Veno-Echo.cpp **** */
 250:Veno-Echo.cpp **** 
 251:Veno-Echo.cpp **** static int Counter{};
 252:Veno-Echo.cpp **** 
 253:Veno-Echo.cpp **** /*
 254:Veno-Echo.cpp ****     funcLength = System::GetUs() - lastFuncTime;
 255:Veno-Echo.cpp **** 
 256:Veno-Echo.cpp ****     aveFuncLength = (funcLength + 1023 * aveFuncLength) >> 10;
 257:Veno-Echo.cpp ****     if (funcLength > maxFuncLength)
 258:Veno-Echo.cpp ****     {
 259:Veno-Echo.cpp ****         maxFuncLength = funcLength;
 260:Veno-Echo.cpp ****     }
 261:Veno-Echo.cpp **** 
 262:Veno-Echo.cpp ****     if (funcLength < minFuncLength)
 263:Veno-Echo.cpp ****     {
 264:Veno-Echo.cpp ****         minFuncLength = funcLength;
 265:Veno-Echo.cpp ****     }
 266:Veno-Echo.cpp **** 
 267:Veno-Echo.cpp **** */
 268:Veno-Echo.cpp **** 
 269:Veno-Echo.cpp **** Counter = (Counter + 1) % 15;
 270:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 26


 271:Veno-Echo.cpp **** if(!save_flag)  //don't check ADCs if saving!
 272:Veno-Echo.cpp **** {
 273:Veno-Echo.cpp ****     /*
 274:Veno-Echo.cpp ****         //each call generate random dither length between 0 and 14
 275:Veno-Echo.cpp ****         uint16_t randomDither{uint16_t (rand() % 5)};
 276:Veno-Echo.cpp ****         //init timeofCall as current time
 277:Veno-Echo.cpp ****         uint32_t timeofCall{System::GetUs()};
 278:Veno-Echo.cpp **** 
 279:Veno-Echo.cpp ****         //wait for random Dither time
 280:Veno-Echo.cpp ****         while( (System::GetUs() - timeofCall ) < randomDither)
 281:Veno-Echo.cpp ****         {}
 282:Veno-Echo.cpp ****     */
 283:Veno-Echo.cpp **** 
 284:Veno-Echo.cpp ****         switch (Counter)
 285:Veno-Echo.cpp ****         {
 286:Veno-Echo.cpp ****             case 0:
 287:Veno-Echo.cpp ****                 Update_Buttons();
 288:Veno-Echo.cpp ****                 GetModCV();
 289:Veno-Echo.cpp ****             break;
 290:Veno-Echo.cpp **** 
 291:Veno-Echo.cpp ****             case 1:
 292:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 293:Veno-Echo.cpp ****             break;
 294:Veno-Echo.cpp **** 
 295:Veno-Echo.cpp ****             case 2:
 296:Veno-Echo.cpp ****                 Update_DelayTimeL();
 297:Veno-Echo.cpp ****             break;
 298:Veno-Echo.cpp **** 
 299:Veno-Echo.cpp ****             case 3:
 300:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 301:Veno-Echo.cpp ****             break;
 302:Veno-Echo.cpp **** 
 303:Veno-Echo.cpp ****             case 4:
 304:Veno-Echo.cpp ****                 Update_DelayTimeR();
 305:Veno-Echo.cpp ****             break;
 306:Veno-Echo.cpp **** 
 307:Veno-Echo.cpp ****             case 5:
 308:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 309:Veno-Echo.cpp ****             break;
 310:Veno-Echo.cpp **** 
 311:Veno-Echo.cpp ****             case 6:
 312:Veno-Echo.cpp ****                 Update_feedbackL();
 313:Veno-Echo.cpp ****             break;
 314:Veno-Echo.cpp **** 
 315:Veno-Echo.cpp ****             case 7:
 316:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 317:Veno-Echo.cpp ****             break;
 318:Veno-Echo.cpp **** 
 319:Veno-Echo.cpp ****             case 8:
 320:Veno-Echo.cpp ****                 Update_feedbackR();
 321:Veno-Echo.cpp ****             break;
 322:Veno-Echo.cpp **** 
 323:Veno-Echo.cpp ****             case 9:
 324:Veno-Echo.cpp ****                 Update_drywet_CV();
 325:Veno-Echo.cpp ****             break;
 326:Veno-Echo.cpp **** 
 327:Veno-Echo.cpp ****             case 10:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 27


 328:Veno-Echo.cpp ****                 Update_drywet();
 329:Veno-Echo.cpp ****             break;
 330:Veno-Echo.cpp **** 
 331:Veno-Echo.cpp ****             case 11:
 332:Veno-Echo.cpp ****                 Update_width_CV();
 333:Veno-Echo.cpp ****             break;
 334:Veno-Echo.cpp **** 
 335:Veno-Echo.cpp ****             case 12:
 336:Veno-Echo.cpp ****                 Update_width();
 337:Veno-Echo.cpp ****             break;
 338:Veno-Echo.cpp **** 
 339:Veno-Echo.cpp ****             case 13:
 340:Veno-Echo.cpp ****                 Update_crossfeedback();
 341:Veno-Echo.cpp ****             break;
 342:Veno-Echo.cpp **** 
 343:Veno-Echo.cpp ****             case 14:
 344:Veno-Echo.cpp ****                 Update_filterXfade();
 345:Veno-Echo.cpp ****             break;
 346:Veno-Echo.cpp ****         }
 347:Veno-Echo.cpp **** }
 348:Veno-Echo.cpp **** 
 349:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
 350:Veno-Echo.cpp ****     {   
 351:Veno-Echo.cpp ****         UpdateClock(); 
 352:Veno-Echo.cpp ****         Update_Mod();
 353:Veno-Echo.cpp ****         //get xfade positions from envelopes:
 354:Veno-Echo.cpp ****         float FwdRevLXFadepos = FwdRevLEnv.Process(Rev_L_sw.getState());
 355:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 356:Veno-Echo.cpp ****         
 357:Veno-Echo.cpp ****         float HPFXFadepos = HPF_Env.Process(HPF_sw.getState());
 358:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 359:Veno-Echo.cpp **** 
 360:Veno-Echo.cpp ****         //set xfade positions      
 361:Veno-Echo.cpp ****         FwdRevLXfade.SetPos(FwdRevLXFadepos);
 362:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 363:Veno-Echo.cpp ****         
 364:Veno-Echo.cpp ****         HPF_LXfade.SetPos(HPFXFadepos);
 365:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 366:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 367:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 368:Veno-Echo.cpp **** 
 369:Veno-Echo.cpp ****         HPF_LXfade_post.SetPos(HPFXFadepos);
 370:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 371:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 372:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 373:Veno-Echo.cpp **** 
 374:Veno-Echo.cpp ****         FilterMix_L.SetPos(filterXfade);
 375:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 376:Veno-Echo.cpp **** 
 377:Veno-Echo.cpp ****         FilterMix_L_post.SetPos(filterXfade);
 378:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 379:Veno-Echo.cpp **** 
 380:Veno-Echo.cpp ****         //filter controls, read from reverse delay lines:
 381:Veno-Echo.cpp ****         float delayRevSignalL = delaysL_REV.Read();
 382:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 383:Veno-Echo.cpp **** 
 384:Veno-Echo.cpp ****         //write input to reverse delay (no feedback)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 28


 385:Veno-Echo.cpp ****         delaysL_REV.Write(in[i]);
 386:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 387:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 388:Veno-Echo.cpp ****         //delaysR_REV.Write(Input_R);
 389:Veno-Echo.cpp **** 
 390:Veno-Echo.cpp ****         //process Xfade between reverse and direct input
 391:Veno-Echo.cpp ****         float FwdRevSignalLXFade = FwdRevLXfade.Process(in[i],delayRevSignalL);
 392:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 393:Veno-Echo.cpp **** 
 394:Veno-Echo.cpp ****         //Get combined output from all delay heads
 395:Veno-Echo.cpp ****         float delaySignal_L{delayL.GetOutput()};   
 396:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 397:Veno-Echo.cpp ****         //Update Base Tempo LED
 398:Veno-Echo.cpp ****         Update_BaseTempoLED();
 399:Veno-Echo.cpp **** 
 400:Veno-Echo.cpp ****         //hard limit
 401:Veno-Echo.cpp ****         delaySignal_L = HardLimit(delaySignal_L,AudioLimit);
 402:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 403:Veno-Echo.cpp **** 
 404:Veno-Echo.cpp **** if(!PostFilters)
 405:Veno-Echo.cpp **** {
 406:Veno-Echo.cpp **** //****************************************************************************************
 407:Veno-Echo.cpp ****         //pre filters
 408:Veno-Echo.cpp ****         //process LPF
 409:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 410:Veno-Echo.cpp ****         LPF_L.Process(delaySignal_L * 0.1f);
 411:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 412:Veno-Echo.cpp **** 
 413:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 414:Veno-Echo.cpp ****         float LPF_L_signal{LPF_L.Low() * 10.0f};
 415:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 416:Veno-Echo.cpp ****         
 417:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 418:Veno-Echo.cpp ****         float filteredDelay_L{LPF_LXfade.Process(delaySignal_L, LPF_L_signal)};
 419:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 420:Veno-Echo.cpp **** 
 421:Veno-Echo.cpp ****         //hard limit
 422:Veno-Echo.cpp ****         filteredDelay_L = HardLimit(filteredDelay_L,AudioLimit);
 423:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 424:Veno-Echo.cpp **** 
 425:Veno-Echo.cpp ****         //process HPF
 426:Veno-Echo.cpp ****         HPF_L.Process(filteredDelay_L * 0.1f);
 427:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 428:Veno-Echo.cpp **** 
 429:Veno-Echo.cpp ****         float HPF_L_signal{HPF_L.High() * 10.0f};
 430:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 431:Veno-Echo.cpp **** 
 432:Veno-Echo.cpp ****         filteredDelay_L = HPF_LXfade.Process(filteredDelay_L, HPF_L_signal);
 433:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 434:Veno-Echo.cpp **** 
 435:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 436:Veno-Echo.cpp **** 
 437:Veno-Echo.cpp ****         delaySignal_L = FilterMix_L.Process(delaySignal_L,filteredDelay_L);
 438:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 439:Veno-Echo.cpp **** 
 440:Veno-Echo.cpp **** //****************************************************************************************
 441:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 29


 442:Veno-Echo.cpp **** 
 443:Veno-Echo.cpp **** else
 444:Veno-Echo.cpp **** {
 445:Veno-Echo.cpp ****     /* code */
 446:Veno-Echo.cpp **** }
 447:Veno-Echo.cpp **** 
 448:Veno-Echo.cpp ****         static float LNegFB{};  //static so value can be used for next sample
 449:Veno-Echo.cpp ****         static float RNegFB{};
 450:Veno-Echo.cpp **** 
 451:Veno-Echo.cpp ****         //ensure we never get inverse feedback
 452:Veno-Echo.cpp ****         if(feedbackL < LNegFB) 
 453:Veno-Echo.cpp ****             LNegFB = 0.0f;
 454:Veno-Echo.cpp ****         
 455:Veno-Echo.cpp ****         if(feedbackR < RNegFB)
 456:Veno-Echo.cpp ****             RNegFB = 0.0f;
 457:Veno-Echo.cpp **** 
 458:Veno-Echo.cpp ****         float feedbackSignalL{ (feedbackL - LNegFB) * delaySignal_L };
 459:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 460:Veno-Echo.cpp **** 
 461:Veno-Echo.cpp ****         //crossfeedback:
 462:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 463:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 464:Veno-Echo.cpp **** 
 465:Veno-Echo.cpp **** 
 466:Veno-Echo.cpp ****         //get envelopes for feedback signals
 467:Veno-Echo.cpp ****         float EnvL{LeftEnv.GetEnv(feedbackSignalL)};  
 468:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 469:Veno-Echo.cpp **** 
 470:Veno-Echo.cpp ****             //if envelope of feedback signal exceeds threshold calculate negative FB factor
 471:Veno-Echo.cpp ****             if (EnvL >= NegFBOffset)
 472:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 473:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 474:Veno-Echo.cpp ****             else LNegFB = 0.0;
 475:Veno-Echo.cpp ****             
 476:Veno-Echo.cpp ****             if (EnvR >= NegFBOffset)
 477:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 478:Veno-Echo.cpp ****             else RNegFB = 0.0;
 479:Veno-Echo.cpp **** 
 480:Veno-Echo.cpp ****         //write to fwd delay lines, including a DC block and hard limit
 481:Veno-Echo.cpp ****         float combinedL{feedbackSignalLR + FwdRevSignalLXFade};
 482:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 483:Veno-Echo.cpp ****  
 484:Veno-Echo.cpp ****         //hard limit
 485:Veno-Echo.cpp ****         combinedL = HardLimit(combinedL,AudioLimit);
 486:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 487:Veno-Echo.cpp **** 
 488:Veno-Echo.cpp ****         delayL.Write( DcBlock_LFB.Process(combinedL ) );
 489:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 490:Veno-Echo.cpp **** 
 491:Veno-Echo.cpp ****         // floats for wet dry mix
 492:Veno-Echo.cpp ****         float mixL;
 493:Veno-Echo.cpp ****         float mixR;
 494:Veno-Echo.cpp **** 
 495:Veno-Echo.cpp ****         float delaySignal_L_SUM = WidthXfade.Process(delaySignal_L,delaySignal_R);    //mix to mono
 496:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 497:Veno-Echo.cpp **** 
 498:Veno-Echo.cpp ****         //hard limit
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 30


 499:Veno-Echo.cpp ****         delaySignal_L_SUM = HardLimit(delaySignal_L_SUM,AudioLimit);
 500:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 501:Veno-Echo.cpp **** 
 502:Veno-Echo.cpp **** if(PostFilters)
 503:Veno-Echo.cpp **** {
 504:Veno-Echo.cpp ****     //****************************************************************************************
 505:Veno-Echo.cpp ****         //post filters
 506:Veno-Echo.cpp ****         //process LPF
 507:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 508:Veno-Echo.cpp ****         LPF_L_post.Process(delaySignal_L_SUM * 0.1f);
 509:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 510:Veno-Echo.cpp **** 
 511:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 512:Veno-Echo.cpp ****         float LPF_L_signal_post{LPF_L_post.Low() * 10.0f};
 513:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 514:Veno-Echo.cpp ****         
 515:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 516:Veno-Echo.cpp ****         float filteredDelay_L_post{LPF_LXfade_post.Process(delaySignal_L_SUM, LPF_L_signal_post)};
 517:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 518:Veno-Echo.cpp **** 
 519:Veno-Echo.cpp ****         //hard limit
 520:Veno-Echo.cpp ****         filteredDelay_L_post = HardLimit(filteredDelay_L_post,AudioLimit);
 521:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 522:Veno-Echo.cpp **** 
 523:Veno-Echo.cpp ****         //process HPF
 524:Veno-Echo.cpp ****         HPF_L_post.Process(filteredDelay_L_post * 0.1f);
 525:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 526:Veno-Echo.cpp **** 
 527:Veno-Echo.cpp ****         float HPF_L_signal_post{HPF_L_post.High() * 10.0f};
 528:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 529:Veno-Echo.cpp **** 
 530:Veno-Echo.cpp ****         filteredDelay_L_post = HPF_LXfade_post.Process(filteredDelay_L_post, HPF_L_signal_post);
 531:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 532:Veno-Echo.cpp **** 
 533:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 534:Veno-Echo.cpp ****         delaySignal_L_SUM = FilterMix_L_post.Process(delaySignal_L_SUM,filteredDelay_L_post);
 535:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 536:Veno-Echo.cpp **** 
 537:Veno-Echo.cpp ****     //****************************************************************************************
 538:Veno-Echo.cpp **** }
 539:Veno-Echo.cpp **** else
 540:Veno-Echo.cpp **** {
 541:Veno-Echo.cpp ****     /* code */
 542:Veno-Echo.cpp **** }
 543:Veno-Echo.cpp ****         if(drywet < 0.5f)
 544:Veno-Echo.cpp ****         {
 545:Veno-Echo.cpp ****             mixL = in[i] + (2.0f * drywet * delaySignal_L_SUM);
 546:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 547:Veno-Echo.cpp ****         }
 548:Veno-Echo.cpp ****         else if(drywet > 0.5f)
 549:Veno-Echo.cpp ****         {
 550:Veno-Echo.cpp ****             mixL = ((1 - drywet)* 2.0f * in[i]) + delaySignal_L_SUM;
 551:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 552:Veno-Echo.cpp ****         }
 553:Veno-Echo.cpp ****         else
 554:Veno-Echo.cpp ****         {
 555:Veno-Echo.cpp ****             mixL = in[i] + delaySignal_L_SUM;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 31


 556:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 557:Veno-Echo.cpp ****         }
 558:Veno-Echo.cpp **** 
 559:Veno-Echo.cpp ****         //send mixes to outputs
 560:Veno-Echo.cpp ****         if(mute)
 561:Veno-Echo.cpp ****         {
 562:Veno-Echo.cpp ****             out[i] = 0.0f;
 563:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 564:Veno-Echo.cpp ****         }
 565:Veno-Echo.cpp ****         else
 566:Veno-Echo.cpp ****         {
 567:Veno-Echo.cpp ****             out[i] = mixL;
 568:Veno-Echo.cpp ****             out[i+1] = mixR;
 569:Veno-Echo.cpp ****         }
 570:Veno-Echo.cpp **** 
 571:Veno-Echo.cpp ****         //write to DAC for debug
 572:Veno-Echo.cpp ****        // dsy_dac_write(DSY_DAC_CHN1, static_cast<int>( EnvL * 4095.0f));
 573:Veno-Echo.cpp **** 
 574:Veno-Echo.cpp ****     }
 575:Veno-Echo.cpp **** 
 576:Veno-Echo.cpp **** }
 577:Veno-Echo.cpp **** 
 578:Veno-Echo.cpp **** void InitDelays(float samplerate)
 579:Veno-Echo.cpp **** {
 438              		.loc 19 579 1 is_stmt 1 view -0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 16
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 580:Veno-Echo.cpp **** 
 581:Veno-Echo.cpp ****     //Init fwd delays
 582:Veno-Echo.cpp ****     delMemsL.Init(2);    //2 heads
 442              		.loc 19 582 5 view .LVU50
 443              	.LBB746:
 444              	.LBI746:
  53:delayline_multitap.h ****     
  54:delayline_multitap.h ****     /** initializes the delay line by clearing the values within, and setting delay head times to 0
  55:delayline_multitap.h ****     */
  56:delayline_multitap.h ****     void Init( size_t num_heads) 
 445              		.loc 17 56 10 view .LVU51
 446              	.LBB747:
 447              	.LBB748:
  57:delayline_multitap.h ****     {
  58:delayline_multitap.h ****         for(size_t i = 0; i < max_size; i++)
 448              		.loc 17 58 29 view .LVU52
 449 0000 624B     		ldr	r3, .L36
 450 0002 6349     		ldr	r1, .L36+4
 451              	.LBE748:
 452              	.LBE747:
 453              	.LBE746:
 579:Veno-Echo.cpp **** 
 454              		.loc 19 579 1 is_stmt 0 view .LVU53
 455 0004 F0B5     		push	{r4, r5, r6, r7, lr}
 456              		.cfi_def_cfa_offset 20
 457              		.cfi_offset 4, -20
 458              		.cfi_offset 5, -16
 459              		.cfi_offset 6, -12
 460              		.cfi_offset 7, -8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 32


 461              		.cfi_offset 14, -4
 462 0006 A3F18405 		sub	r5, r3, #132
 463 000a 85B0     		sub	sp, sp, #20
 464              		.cfi_def_cfa_offset 40
 465 000c 2846     		mov	r0, r5
 466              	.LVL15:
 467              	.L17:
 468              	.LBB753:
 469              	.LBB752:
 470              	.LBB749:
  59:delayline_multitap.h ****         {
  60:delayline_multitap.h ****             line_[i] = T(0);
 471              		.loc 17 60 13 view .LVU54
 472 000e 0022     		movs	r2, #0
 473 0010 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 474              		.loc 17 58 9 is_stmt 1 view .LVU55
  58:delayline_multitap.h ****         {
 475              		.loc 17 58 29 view .LVU56
 476 0014 8B42     		cmp	r3, r1
 477 0016 FAD1     		bne	.L17
 478              	.LBE749:
  61:delayline_multitap.h ****         }
  62:delayline_multitap.h **** 
  63:delayline_multitap.h ****         write_ptr_ = 0;
 479              		.loc 17 63 9 is_stmt 0 view .LVU57
 480 0018 0022     		movs	r2, #0
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 481              		.loc 17 64 9 view .LVU58
 482 001a 5E4C     		ldr	r4, .L36+8
 483 001c 0226     		movs	r6, #2
 484              	.LBB750:
  65:delayline_multitap.h **** 
  66:delayline_multitap.h ****         for (size_t i{ 0 }; i < num_heads_; ++i)
 485              		.loc 17 66 21 view .LVU59
 486 001e 1346     		mov	r3, r2
 487              	.LBE750:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 488              		.loc 17 63 9 view .LVU60
 489 0020 2A60     		str	r2, [r5]
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 490              		.loc 17 64 9 view .LVU61
 491 0022 2E51     		str	r6, [r5, r4]
 492              	.LVL16:
 493              	.LBB751:
 494              		.loc 17 66 31 is_stmt 1 view .LVU62
 495              	.L18:
  67:delayline_multitap.h ****         {
  68:delayline_multitap.h ****             delay_[i] = 0;  //set all delay heads to 0 (no delay)
 496              		.loc 17 68 13 is_stmt 0 view .LVU63
 497 0024 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 498              		.loc 17 66 9 view .LVU64
 499 0026 0133     		adds	r3, r3, #1
 500              	.LVL17:
  69:delayline_multitap.h ****             frac_[i] = 0;
 501              		.loc 17 69 13 view .LVU65
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 33


 502 0028 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 503              		.loc 17 68 13 view .LVU66
 504 002a 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 505              		.loc 17 66 31 view .LVU67
 506 002e 0A68     		ldr	r2, [r1]
 507              		.loc 17 69 13 view .LVU68
 508 0030 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 509              		.loc 17 66 9 is_stmt 1 view .LVU69
 510              	.LVL18:
  66:delayline_multitap.h ****         {
 511              		.loc 17 66 31 view .LVU70
 512 0032 9A42     		cmp	r2, r3
 513 0034 F6D8     		bhi	.L18
 514 0036 584B     		ldr	r3, .L36+12
 515              	.LVL19:
  66:delayline_multitap.h ****         {
 516              		.loc 17 66 31 is_stmt 0 view .LVU71
 517 0038 5849     		ldr	r1, .L36+16
 518 003a A3F18406 		sub	r6, r3, #132
 519 003e 3046     		mov	r0, r6
 520              	.LVL20:
 521              	.L19:
  66:delayline_multitap.h ****         {
 522              		.loc 17 66 31 view .LVU72
 523              	.LBE751:
 524              	.LBE752:
 525              	.LBE753:
 526              	.LBB754:
 527              	.LBB755:
 528              	.LBB756:
  60:delayline_multitap.h ****         }
 529              		.loc 17 60 13 view .LVU73
 530 0040 0022     		movs	r2, #0
 531 0042 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 532              		.loc 17 58 9 is_stmt 1 view .LVU74
  58:delayline_multitap.h ****         {
 533              		.loc 17 58 29 view .LVU75
 534 0046 8B42     		cmp	r3, r1
 535 0048 FAD1     		bne	.L19
 536              	.LBE756:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 537              		.loc 17 63 9 is_stmt 0 view .LVU76
 538 004a 0022     		movs	r2, #0
  64:delayline_multitap.h **** 
 539              		.loc 17 64 9 view .LVU77
 540 004c 514C     		ldr	r4, .L36+8
 541 004e 0227     		movs	r7, #2
 542              	.LBB757:
  66:delayline_multitap.h ****         {
 543              		.loc 17 66 21 view .LVU78
 544 0050 1346     		mov	r3, r2
 545              	.LBE757:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 34


 546              		.loc 17 63 9 view .LVU79
 547 0052 3260     		str	r2, [r6]
  64:delayline_multitap.h **** 
 548              		.loc 17 64 9 view .LVU80
 549 0054 3751     		str	r7, [r6, r4]
 550              	.LVL21:
 551              	.LBB758:
  66:delayline_multitap.h ****         {
 552              		.loc 17 66 31 is_stmt 1 view .LVU81
 553              	.L20:
  68:delayline_multitap.h ****             frac_[i] = 0;
 554              		.loc 17 68 13 is_stmt 0 view .LVU82
 555 0056 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 556              		.loc 17 66 9 view .LVU83
 557 0058 0133     		adds	r3, r3, #1
 558              	.LVL22:
 559              		.loc 17 69 13 view .LVU84
 560 005a 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 561              		.loc 17 68 13 view .LVU85
 562 005c 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 563              		.loc 17 66 31 view .LVU86
 564 0060 0A68     		ldr	r2, [r1]
 565              		.loc 17 69 13 view .LVU87
 566 0062 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 567              		.loc 17 66 9 is_stmt 1 view .LVU88
 568              	.LVL23:
  66:delayline_multitap.h ****         {
 569              		.loc 17 66 31 view .LVU89
 570 0064 9A42     		cmp	r2, r3
 571 0066 F6D8     		bhi	.L20
 572              	.LVL24:
  66:delayline_multitap.h ****         {
 573              		.loc 17 66 31 is_stmt 0 view .LVU90
 574              	.LBE758:
 575              	.LBE755:
 576              	.LBE754:
 583:Veno-Echo.cpp ****     delMemsR.Init(2);    //2 heads
 584:Veno-Echo.cpp **** 
 585:Veno-Echo.cpp ****     //point del classes at SDRAM buffers
 586:Veno-Echo.cpp ****     delayL.del = &delMemsL; 
 577              		.loc 19 586 5 is_stmt 1 view .LVU91
 587:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 578              		.loc 19 587 16 is_stmt 0 view .LVU92
 579 0068 4D4C     		ldr	r4, .L36+20
 588:Veno-Echo.cpp **** 
 589:Veno-Echo.cpp ****     delayL.init(hw.GetPin(8),samplerate);
 580              		.loc 19 589 16 view .LVU93
 581 006a 0820     		movs	r0, #8
 586:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 582              		.loc 19 586 16 view .LVU94
 583 006c 4D4F     		ldr	r7, .L36+24
 584 006e 8DED010A 		vstr.32	s0, [sp, #4]	@ int
 585 0072 3D60     		str	r5, [r7]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 35


 587:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 586              		.loc 19 587 5 is_stmt 1 view .LVU95
 587              	.LBB759:
 588              	.LBB760:
 589              	.LBB761:
  40:delayline_reverse.h ****     /** initializes the delay line by clearing the values within, and setting delay to min time.
  41:delayline_reverse.h ****     */
  42:delayline_reverse.h ****     void Init() 
  43:delayline_reverse.h ****     { 
  44:delayline_reverse.h ****         Reset(); 
  45:delayline_reverse.h ****     }
  46:delayline_reverse.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
  47:delayline_reverse.h ****     */
  48:delayline_reverse.h ****     void Reset()
  49:delayline_reverse.h ****     {
  50:delayline_reverse.h **** 
  51:delayline_reverse.h ****         delay1_  = 25000; //min Reverse delay time
 590              		.loc 18 51 9 is_stmt 0 view .LVU96
 591 0074 46F2A815 		movw	r5, #25000
 592              	.LBE761:
 593              	.LBE760:
 594              	.LBE759:
 587:Veno-Echo.cpp **** 
 595              		.loc 19 587 16 view .LVU97
 596 0078 2660     		str	r6, [r4]
 597              		.loc 19 589 5 is_stmt 1 view .LVU98
 598              		.loc 19 589 16 is_stmt 0 view .LVU99
 599 007a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 600              	.LVL25:
 601              		.loc 19 589 16 view .LVU100
 602 007e 0346     		mov	r3, r0	@ movhi
 603 0080 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 604 0084 3846     		mov	r0, r7
 605 0086 ADF80830 		strh	r3, [sp, #8]	@ movhi
 606 008a 0299     		ldr	r1, [sp, #8]
 607 008c FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 608              	.LVL26:
 590:Veno-Echo.cpp ****     delayR.init(hw.GetPin(9),samplerate);
 609              		.loc 19 590 5 is_stmt 1 view .LVU101
 610              		.loc 19 590 16 is_stmt 0 view .LVU102
 611 0090 0920     		movs	r0, #9
 612 0092 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 613              	.LVL27:
 614 0096 0346     		mov	r3, r0	@ movhi
 615 0098 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 616 009c 2046     		mov	r0, r4
 617 009e ADF80C30 		strh	r3, [sp, #12]	@ movhi
 618 00a2 0399     		ldr	r1, [sp, #12]
 619 00a4 FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 620              	.LVL28:
 591:Veno-Echo.cpp **** 
 592:Veno-Echo.cpp ****     delayL.SetDelayTime(500.0f);
 621              		.loc 19 592 5 is_stmt 1 view .LVU103
 622              		.loc 19 592 24 is_stmt 0 view .LVU104
 623 00a8 9FED3F0A 		vldr.32	s0, .L36+28
 624 00ac 3846     		mov	r0, r7
 625 00ae FFF7FEFF 		bl	_ZN10DelayMulti12SetDelayTimeEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 36


 626              	.LVL29:
 593:Veno-Echo.cpp ****     delayR.SetDelayTime(500.0f);
 627              		.loc 19 593 5 is_stmt 1 view .LVU105
 628              		.loc 19 593 24 is_stmt 0 view .LVU106
 629 00b2 2046     		mov	r0, r4
 630              	.LBB773:
 631              	.LBB768:
 632              	.LBB763:
 633              		.loc 18 51 9 view .LVU107
 634 00b4 3D4C     		ldr	r4, .L36+32
 635              	.LBE763:
 636              	.LBE768:
 637              	.LBE773:
 638              		.loc 19 593 24 view .LVU108
 639 00b6 9FED3C0A 		vldr.32	s0, .L36+28
 640 00ba FFF7FEFF 		bl	_ZN10DelayMulti12SetDelayTimeEf
 641              	.LVL30:
 594:Veno-Echo.cpp **** 
 595:Veno-Echo.cpp ****     //Init rev delays
 596:Veno-Echo.cpp ****     delMemsL_REV.Init();
 642              		.loc 19 596 5 is_stmt 1 view .LVU109
 643              	.LBB774:
 644              	.LBI759:
  42:delayline_reverse.h ****     { 
 645              		.loc 18 42 10 view .LVU110
 646              	.LBB769:
 647              	.LBI760:
  48:delayline_reverse.h ****     {
 648              		.loc 18 48 10 view .LVU111
 649              	.LBB764:
  52:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 650              		.loc 18 52 9 is_stmt 0 view .LVU112
 651 00be 3C4A     		ldr	r2, .L36+36
 652 00c0 45F6C050 		movw	r0, #24000
 653 00c4 04F11803 		add	r3, r4, #24
 654 00c8 3A49     		ldr	r1, .L36+40
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 655              		.loc 18 51 9 view .LVU113
 656 00ca 2561     		str	r5, [r4, #16]
 657              		.loc 18 52 9 view .LVU114
 658 00cc A050     		str	r0, [r4, r2]
 659              	.LVL31:
 660              	.LBB762:
  53:delayline_reverse.h ****         
  54:delayline_reverse.h ****         for(size_t i = 0; i < max_size; i++)
 661              		.loc 18 54 29 is_stmt 1 view .LVU115
 662              	.L21:
  55:delayline_reverse.h ****         {
  56:delayline_reverse.h ****             line_[i] = T(0);
 663              		.loc 18 56 13 is_stmt 0 view .LVU116
 664 00ce 0022     		movs	r2, #0
 665 00d0 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 666              		.loc 18 54 9 is_stmt 1 view .LVU117
  54:delayline_reverse.h ****         {
 667              		.loc 18 54 29 view .LVU118
 668 00d4 8B42     		cmp	r3, r1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 37


 669 00d6 FAD1     		bne	.L21
 670              	.LBE762:
 671              	.LBE764:
 672              	.LBE769:
 673              	.LBE774:
 674              	.LBB775:
 675              	.LBB776:
 676              	.LBB777:
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 677              		.loc 18 51 9 is_stmt 0 view .LVU119
 678 00d8 3748     		ldr	r0, .L36+44
 679 00da 46F2A811 		movw	r1, #25000
  52:delayline_reverse.h ****         
 680              		.loc 18 52 9 view .LVU120
 681 00de 344D     		ldr	r5, .L36+36
 682 00e0 45F6C056 		movw	r6, #24000
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 683              		.loc 18 51 9 view .LVU121
 684 00e4 0161     		str	r1, [r0, #16]
 685              	.LBE777:
 686              	.LBE776:
 687              	.LBE775:
 688              	.LBB800:
 689              	.LBB770:
 690              	.LBB765:
  57:delayline_reverse.h ****         }
  58:delayline_reverse.h ****         write_ptr_ = 0;
 691              		.loc 18 58 9 view .LVU122
 692 00e6 0021     		movs	r1, #0
 693              	.LBE765:
 694              	.LBE770:
 695              	.LBE800:
 696              	.LBB801:
 697              	.LBB790:
 698              	.LBB780:
  52:delayline_reverse.h ****         
 699              		.loc 18 52 9 view .LVU123
 700 00e8 4651     		str	r6, [r0, r5]
 701              	.LBE780:
 702              	.LBE790:
 703              	.LBE801:
 704              	.LBB802:
 705              	.LBB771:
 706              	.LBB766:
  59:delayline_reverse.h ****         read_ptr1_ = 0;
  60:delayline_reverse.h ****         read_ptr2_ = 0;
  61:delayline_reverse.h ****         headDiff_ = 0;
  62:delayline_reverse.h ****         playinghead_ = false;
 707              		.loc 18 62 9 view .LVU124
 708 00ea 0435     		adds	r5, r5, #4
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
  64:delayline_reverse.h ****         fading_ = false;
 709              		.loc 18 64 9 view .LVU125
 710 00ec 334E     		ldr	r6, .L36+48
 711 00ee 00F11803 		add	r3, r0, #24
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 712              		.loc 18 62 9 view .LVU126
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 38


 713 00f2 6155     		strb	r1, [r4, r5]
  60:delayline_reverse.h ****         headDiff_ = 0;
 714              		.loc 18 60 9 view .LVU127
 715 00f4 E160     		str	r1, [r4, #12]
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
 716              		.loc 18 63 9 view .LVU128
 717 00f6 324D     		ldr	r5, .L36+52
  61:delayline_reverse.h ****         playinghead_ = false;
 718              		.loc 18 61 9 view .LVU129
 719 00f8 6161     		str	r1, [r4, #20]
 720              		.loc 18 64 9 view .LVU130
 721 00fa A155     		strb	r1, [r4, r6]
 722              	.LVL32:
 723              		.loc 18 64 9 view .LVU131
 724              	.LBE766:
 725              	.LBE771:
 726              	.LBE802:
 597:Veno-Echo.cpp ****     delMemsR_REV.Init();
 727              		.loc 19 597 5 is_stmt 1 view .LVU132
 728              	.LBB803:
 729              	.LBI775:
  42:delayline_reverse.h ****     { 
 730              		.loc 18 42 10 view .LVU133
 731              	.LBB791:
 732              	.LBI776:
  48:delayline_reverse.h ****     {
 733              		.loc 18 48 10 view .LVU134
 734              	.LBB781:
 735              	.LBB778:
  54:delayline_reverse.h ****         {
 736              		.loc 18 54 29 view .LVU135
 737              	.LBE778:
 738              	.LBE781:
 739              	.LBE791:
 740              	.LBE803:
 741              	.LBB804:
 742              	.LBB772:
 743              	.LBB767:
  63:delayline_reverse.h ****         fading_ = false;
 744              		.loc 18 63 9 is_stmt 0 view .LVU136
 745 00fc 2A60     		str	r2, [r5]	@ float
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 746              		.loc 18 59 9 view .LVU137
 747 00fe C4E90111 		strd	r1, r1, [r4, #4]
 748 0102 3049     		ldr	r1, .L36+56
 749              	.LVL33:
 750              	.L22:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 751              		.loc 18 59 9 view .LVU138
 752              	.LBE767:
 753              	.LBE772:
 754              	.LBE804:
 755              	.LBB805:
 756              	.LBB792:
 757              	.LBB782:
 758              	.LBB779:
  56:delayline_reverse.h ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 39


 759              		.loc 18 56 13 view .LVU139
 760 0104 0022     		movs	r2, #0
 761 0106 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 762              		.loc 18 54 9 is_stmt 1 view .LVU140
  54:delayline_reverse.h ****         {
 763              		.loc 18 54 29 view .LVU141
 764 010a 8B42     		cmp	r3, r1
 765 010c FAD1     		bne	.L22
 766              	.LBE779:
 767              	.LBE782:
 768              	.LBE792:
 769              	.LBE805:
 598:Veno-Echo.cpp **** 
 599:Veno-Echo.cpp ****     //point struct at SDRAM buffers
 600:Veno-Echo.cpp ****     delaysL_REV.del = &delMemsL_REV; 
 770              		.loc 19 600 21 is_stmt 0 view .LVU142
 771 010e 2E49     		ldr	r1, .L36+60
 772              	.LBB806:
 773              	.LBB793:
 774              	.LBB783:
  58:delayline_reverse.h ****         read_ptr1_ = 0;
 775              		.loc 18 58 9 view .LVU143
 776 0110 0023     		movs	r3, #0
 777              	.LBE783:
 778              	.LBE793:
 779              	.LBE806:
 780              	.LBB807:
 781              	.LBB808:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 782              		.loc 19 70 15 view .LVU144
 783 0112 DFED2E6A 		vldr.32	s13, .L36+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 784              		.loc 19 70 28 view .LVU145
 785 0116 D1ED017A 		vldr.32	s15, [r1, #4]
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 786              		.loc 19 70 53 view .LVU146
 787 011a 9FED2D6A 		vldr.32	s12, .L36+68
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 788              		.loc 19 70 15 view .LVU147
 789 011e 36EEE77A 		vsub.f32	s14, s13, s15
 790              	.LBE808:
 791              	.LBE807:
 792              	.LBB822:
 793              	.LBB794:
 794              	.LBB784:
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 795              		.loc 18 62 9 view .LVU148
 796 0122 2C4D     		ldr	r5, .L36+72
 797              	.LBE784:
 798              	.LBE794:
 799              	.LBE822:
 800              	.LBB823:
 801              	.LBB817:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 802              		.loc 19 70 53 view .LVU149
 803 0124 67EE867A 		vmul.f32	s15, s15, s12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 40


 804              	.LBE817:
 805              	.LBE823:
 806              	.LBB824:
 807              	.LBB795:
 808              	.LBB785:
 809              		.loc 18 64 9 view .LVU150
 810 0128 244E     		ldr	r6, .L36+48
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 811              		.loc 18 62 9 view .LVU151
 812 012a 4355     		strb	r3, [r0, r5]
 813              	.LBE785:
 814              	.LBE795:
 815              	.LBE824:
 816              	.LBB825:
 817              	.LBB818:
 818              	.LBB809:
 819              	.LBB810:
 820              		.file 20 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Copyright (C) 2016-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** /** @file include/bits/std_abs.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include_next <stdlib.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 41


  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** # include_next <math.h>
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef abs
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** extern "C++"
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   using ::abs;
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long long
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(double __x)
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabs(__x); }
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(float __x)
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 821              		.loc 20 76 31 view .LVU152
 822 012c B0EEC77A 		vabs.f32	s14, s14
 823              	.LBE810:
 824              	.LBE809:
 825              	.LBE818:
 826              	.LBE825:
 827              	.LBB826:
 828              	.LBB796:
 829              	.LBB786:
  63:delayline_reverse.h ****         fading_ = false;
 830              		.loc 18 63 9 view .LVU153
 831 0130 294D     		ldr	r5, .L36+76
  60:delayline_reverse.h ****         headDiff_ = 0;
 832              		.loc 18 60 9 view .LVU154
 833 0132 C360     		str	r3, [r0, #12]
  61:delayline_reverse.h ****         playinghead_ = false;
 834              		.loc 18 61 9 view .LVU155
 835 0134 4361     		str	r3, [r0, #20]
 836              	.LBE786:
 837              	.LBE796:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 42


 838              	.LBE826:
 839              	.LBB827:
 840              	.LBB819:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 841              		.loc 19 70 9 view .LVU156
 842 0136 B4EEE77A 		vcmpe.f32	s14, s15
 843              	.LBE819:
 844              	.LBE827:
 845              	.LBB828:
 846              	.LBB797:
 847              	.LBB787:
 848              		.loc 18 64 9 view .LVU157
 849 013a 8355     		strb	r3, [r0, r6]
 850              	.LVL34:
 851              		.loc 18 64 9 view .LVU158
 852              	.LBE787:
 853              	.LBE797:
 854              	.LBE828:
 855              		.loc 19 600 5 is_stmt 1 view .LVU159
 601:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 856              		.loc 19 601 5 view .LVU160
 600:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 857              		.loc 19 600 21 is_stmt 0 view .LVU161
 858 013c 0C60     		str	r4, [r1]
 859              	.LBB829:
 860              	.LBB798:
 861              	.LBB788:
  63:delayline_reverse.h ****         fading_ = false;
 862              		.loc 18 63 9 view .LVU162
 863 013e 2A60     		str	r2, [r5]	@ float
 864              	.LBE788:
 865              	.LBE798:
 866              	.LBE829:
 867              	.LBB830:
 868              	.LBB820:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 869              		.loc 19 70 9 view .LVU163
 870 0140 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 871              	.LBE820:
 872              	.LBE830:
 873              	.LBB831:
 874              	.LBB799:
 875              	.LBB789:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 876              		.loc 18 59 9 view .LVU164
 877 0144 C0E90133 		strd	r3, r3, [r0, #4]
 878              	.LBE789:
 879              	.LBE799:
 880              	.LBE831:
 881              		.loc 19 601 21 view .LVU165
 882 0148 244B     		ldr	r3, .L36+80
 883 014a 1860     		str	r0, [r3]
 602:Veno-Echo.cpp **** 
 603:Veno-Echo.cpp ****     //Reverse Delay Length. Setup as static value for now. Will make this a shift function
 604:Veno-Echo.cpp ****     delaysL_REV.SetDelayTime(maxRevDelay / 3.f);
 884              		.loc 19 604 5 is_stmt 1 view .LVU166
 885              	.LVL35:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 43


 886              	.LBB832:
 887              	.LBI807:
  68:Veno-Echo.cpp ****     {
 888              		.loc 19 68 10 view .LVU167
 889              	.LBB821:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 890              		.loc 19 70 9 view .LVU168
 891              	.LBB812:
 892              	.LBI809:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 893              		.loc 20 75 3 view .LVU169
 894              	.LBB811:
 895              		.loc 20 76 5 view .LVU170
 896              		.loc 20 76 5 is_stmt 0 view .LVU171
 897              	.LBE811:
 898              	.LBE812:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 899              		.loc 19 70 9 view .LVU172
 900 014c 04DD     		ble	.L23
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 901              		.loc 19 73 13 is_stmt 1 view .LVU173
 902              	.LBB813:
 903              	.LBB814:
  65:delayline_reverse.h ****     }
  66:delayline_reverse.h **** 
  67:delayline_reverse.h ****     /** sets the delay time in samples
  68:delayline_reverse.h ****     */
  69:delayline_reverse.h ****     inline void SetDelay1(size_t delay)
  70:delayline_reverse.h ****     {
  71:delayline_reverse.h ****         frac1_  = 0.0f;
  72:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 904              		.loc 18 72 9 is_stmt 0 view .LVU174
 905 014e 244D     		ldr	r5, .L36+84
 906              	.LBE814:
 907              	.LBE813:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 908              		.loc 19 73 27 view .LVU175
 909 0150 C1ED016A 		vstr.32	s13, [r1, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 910              		.loc 19 74 13 is_stmt 1 view .LVU176
 911              	.LVL36:
 912              	.LBB816:
 913              	.LBI813:
  69:delayline_reverse.h ****     {
 914              		.loc 18 69 17 view .LVU177
 915              	.LBB815:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 916              		.loc 18 71 9 is_stmt 0 view .LVU178
 917 0154 2260     		str	r2, [r4]	@ float
 918              		.loc 18 72 9 view .LVU179
 919 0156 2561     		str	r5, [r4, #16]
 920              	.LVL37:
 921              	.L23:
 922              		.loc 18 72 9 view .LVU180
 923              	.LBE815:
 924              	.LBE816:
 925              	.LBE821:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 44


 926              	.LBE832:
 605:Veno-Echo.cpp ****     delaysR_REV.SetDelayTime(maxRevDelay / 3.f);   //default maxRevDelay / 3.0f
 927              		.loc 19 605 5 is_stmt 1 view .LVU181
 928              	.LBB833:
 929              	.LBI833:
  68:Veno-Echo.cpp ****     {
 930              		.loc 19 68 10 view .LVU182
 931              	.LBB834:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 932              		.loc 19 70 9 view .LVU183
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 933              		.loc 19 70 28 is_stmt 0 view .LVU184
 934 0158 D3ED017A 		vldr.32	s15, [r3, #4]
 935              	.LVL38:
 936              	.LBB835:
 937              	.LBI835:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 938              		.loc 20 75 3 is_stmt 1 view .LVU185
 939              	.LBB836:
 940              		.loc 20 76 5 view .LVU186
 941              		.loc 20 76 5 is_stmt 0 view .LVU187
 942              	.LBE836:
 943              	.LBE835:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 944              		.loc 19 70 15 view .LVU188
 945 015c DFED1B6A 		vldr.32	s13, .L36+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 946              		.loc 19 70 53 view .LVU189
 947 0160 9FED1B6A 		vldr.32	s12, .L36+68
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 948              		.loc 19 70 15 view .LVU190
 949 0164 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 950              		.loc 19 70 53 view .LVU191
 951 0168 67EE867A 		vmul.f32	s15, s15, s12
 952              	.LBB838:
 953              	.LBB837:
 954              		.loc 20 76 31 view .LVU192
 955 016c B0EEC77A 		vabs.f32	s14, s14
 956              	.LBE837:
 957              	.LBE838:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 958              		.loc 19 70 9 view .LVU193
 959 0170 B4EEE77A 		vcmpe.f32	s14, s15
 960 0174 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 961 0178 05DD     		ble	.L16
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 962              		.loc 19 73 13 is_stmt 1 view .LVU194
 963              	.LBB839:
 964              	.LBB840:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 965              		.loc 18 71 9 is_stmt 0 view .LVU195
 966 017a 0021     		movs	r1, #0
 967              		.loc 18 72 9 view .LVU196
 968 017c 184A     		ldr	r2, .L36+84
 969              	.LBE840:
 970              	.LBE839:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 45


  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 971              		.loc 19 73 27 view .LVU197
 972 017e C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 973              		.loc 19 74 13 is_stmt 1 view .LVU198
 974              	.LVL39:
 975              	.LBB842:
 976              	.LBI839:
  69:delayline_reverse.h ****     {
 977              		.loc 18 69 17 view .LVU199
 978              	.LBB841:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 979              		.loc 18 71 9 is_stmt 0 view .LVU200
 980 0182 0160     		str	r1, [r0]	@ float
 981              		.loc 18 72 9 view .LVU201
 982 0184 0261     		str	r2, [r0, #16]
 983              	.LVL40:
 984              	.L16:
 985              		.loc 18 72 9 view .LVU202
 986              	.LBE841:
 987              	.LBE842:
 988              	.LBE834:
 989              	.LBE833:
 606:Veno-Echo.cpp **** 
 607:Veno-Echo.cpp **** }
 990              		.loc 19 607 1 view .LVU203
 991 0186 05B0     		add	sp, sp, #20
 992              		.cfi_def_cfa_offset 20
 993              		@ sp needed
 994 0188 F0BD     		pop	{r4, r5, r6, r7, pc}
 995              	.L37:
 996 018a 00BF     		.align	2
 997              	.L36:
 998 018c 84000000 		.word	delMemsL+132
 999 0190 84786900 		.word	delMemsL+6912132
 1000 0194 84786900 		.word	6912132
 1001 0198 84000000 		.word	delMemsR+132
 1002 019c 84786900 		.word	delMemsR+6912132
 1003 01a0 00000000 		.word	.LANCHOR1
 1004 01a4 00000000 		.word	.LANCHOR0
 1005 01a8 0000FA43 		.word	1140457472
 1006 01ac 00000000 		.word	delMemsL_REV
 1007 01b0 189F2400 		.word	2400024
 1008 01b4 189F2400 		.word	delMemsL_REV+2400024
 1009 01b8 00000000 		.word	delMemsR_REV
 1010 01bc 249F2400 		.word	2400036
 1011 01c0 209F2400 		.word	delMemsL_REV+2400032
 1012 01c4 189F2400 		.word	delMemsR_REV+2400024
 1013 01c8 00000000 		.word	.LANCHOR2
 1014 01cc 00409C47 		.word	1201422336
 1015 01d0 0AD7A33B 		.word	1000593162
 1016 01d4 1C9F2400 		.word	2400028
 1017 01d8 209F2400 		.word	delMemsR_REV+2400032
 1018 01dc 00000000 		.word	.LANCHOR3
 1019 01e0 80380100 		.word	80000
 1020              		.cfi_endproc
 1021              	.LFE4289:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 46


 1023              		.section	.text._Z20Update_DelayTimeL_CVv,"ax",%progbits
 1024              		.align	1
 1025              		.p2align 2,,3
 1026              		.global	_Z20Update_DelayTimeL_CVv
 1027              		.syntax unified
 1028              		.thumb
 1029              		.thumb_func
 1030              		.fpu fpv5-d16
 1032              	_Z20Update_DelayTimeL_CVv:
 1033              	.LFB4291:
 608:Veno-Echo.cpp **** 
 609:Veno-Echo.cpp **** int main(void)
 610:Veno-Echo.cpp **** {
 611:Veno-Echo.cpp ****     // initialize hardware.
 612:Veno-Echo.cpp ****     hw.Configure();
 613:Veno-Echo.cpp ****     hw.Init();
 614:Veno-Echo.cpp ****     
 615:Veno-Echo.cpp ****     //Buttons or switches with status LEDs
 616:Veno-Echo.cpp **** 
 617:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / 12.f);    
 618:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 619:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 620:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 621:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 622:Veno-Echo.cpp **** 
 623:Veno-Echo.cpp ****     //Gates
 624:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 625:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 626:Veno-Echo.cpp **** 
 627:Veno-Echo.cpp ****     //TapButton.Init(hw.GetPin(4), hw.AudioSampleRate() / 48.f);
 628:Veno-Echo.cpp ****     Sync.Init(hw.GetPin(23), hw.AudioSampleRate() / 48.f);
 629:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 630:Veno-Echo.cpp ****     
 631:Veno-Echo.cpp ****     FwdRevLEnv.Init(hw.AudioSampleRate());
 632:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 633:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 634:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 635:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 636:Veno-Echo.cpp **** 
 637:Veno-Echo.cpp ****     FwdRevREnv.Init(hw.AudioSampleRate());
 638:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 639:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 640:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 641:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 642:Veno-Echo.cpp **** 
 643:Veno-Echo.cpp ****     LPF_Env.Init(hw.AudioSampleRate());
 644:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 645:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 646:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 647:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 648:Veno-Echo.cpp **** 
 649:Veno-Echo.cpp ****     HPF_Env.Init(hw.AudioSampleRate());
 650:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 651:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 652:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 653:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 654:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 47


 655:Veno-Echo.cpp ****     // set params for CrossFade objects
 656:Veno-Echo.cpp ****     FwdRevLXfade.Init();
 657:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 658:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 659:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 660:Veno-Echo.cpp **** 
 661:Veno-Echo.cpp ****     WidthXfade.Init();
 662:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 663:Veno-Echo.cpp **** 
 664:Veno-Echo.cpp ****     InitDelays(hw.AudioSampleRate());
 665:Veno-Echo.cpp **** 
 666:Veno-Echo.cpp ****     //setup L and R Low Pass filters
 667:Veno-Echo.cpp ****     LPF_L.Init(hw.AudioSampleRate());
 668:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 669:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 670:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 671:Veno-Echo.cpp **** 
 672:Veno-Echo.cpp ****     LPF_R.Init(hw.AudioSampleRate());
 673:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 674:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 675:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 676:Veno-Echo.cpp **** 
 677:Veno-Echo.cpp ****     //setup L and R High Pass filters
 678:Veno-Echo.cpp ****     HPF_L.Init(hw.AudioSampleRate());
 679:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 680:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 681:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 682:Veno-Echo.cpp **** 
 683:Veno-Echo.cpp ****     HPF_R.Init(hw.AudioSampleRate());
 684:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 685:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 686:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 687:Veno-Echo.cpp **** 
 688:Veno-Echo.cpp ****     //post filters
 689:Veno-Echo.cpp ****     LPF_L_post.Init(hw.AudioSampleRate());
 690:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 691:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 692:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 693:Veno-Echo.cpp **** 
 694:Veno-Echo.cpp ****     LPF_R_post.Init(hw.AudioSampleRate());
 695:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 696:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 697:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 698:Veno-Echo.cpp **** 
 699:Veno-Echo.cpp ****     //setup L and R High Pass filters
 700:Veno-Echo.cpp ****     HPF_L_post.Init(hw.AudioSampleRate());
 701:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 702:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 703:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 704:Veno-Echo.cpp **** 
 705:Veno-Echo.cpp ****     HPF_R_post.Init(hw.AudioSampleRate());
 706:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 707:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 708:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 709:Veno-Echo.cpp **** 
 710:Veno-Echo.cpp ****     DcBlock_LFB.Init(hw.AudioSampleRate());
 711:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 48


 712:Veno-Echo.cpp **** 
 713:Veno-Echo.cpp ****     //LFO for modulation of fwd delay time
 714:Veno-Echo.cpp ****     lfo.Init(hw.AudioSampleRate());
 715:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 716:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 717:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 718:Veno-Echo.cpp **** 
 719:Veno-Echo.cpp **** 
 720:Veno-Echo.cpp ****     //timers: used to limit time between updates to delay time parameters
 721:Veno-Echo.cpp ****     //dsy_tim_init(); //start timer
 722:Veno-Echo.cpp ****     //dsy_tim_start();
 723:Veno-Echo.cpp **** 
 724:Veno-Echo.cpp ****     BaseTempo.init(80,6000,1.25f);  //max 6 second tap
 725:Veno-Echo.cpp **** 
 726:Veno-Echo.cpp ****     //setup tempo indicators
 727:Veno-Echo.cpp ****     //tempoLED_BASE.init(hw.GetPin(14),hw.AudioSampleRate());
 728:Veno-Echo.cpp ****     tempoLED_BASE.init(hw.GetPin(24),hw.AudioSampleRate());
 729:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 730:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 731:Veno-Echo.cpp **** 
 732:Veno-Echo.cpp ****     //load settings from flash
 733:Veno-Echo.cpp **** 
 734:Veno-Echo.cpp ****     //Settings SavedSettings{LoadSettings()};
 735:Veno-Echo.cpp ****     ApplySettings(defaultAltControls);
 736:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 737:Veno-Echo.cpp **** 
 738:Veno-Echo.cpp ****     //initialize DAC
 739:Veno-Echo.cpp ****     //dsy_dac_init(&hw.dac_handle, DSY_DAC_CHN_BOTH);
 740:Veno-Echo.cpp ****     //dsy_dac_write(DSY_DAC_CHN1, 0);
 741:Veno-Echo.cpp ****     //dsy_dac_write(DSY_DAC_CHN2, 0);
 742:Veno-Echo.cpp **** 
 743:Veno-Echo.cpp ****     //ADC
 744:Veno-Echo.cpp ****     AdcChannelConfig adcConfig[8];
 745:Veno-Echo.cpp **** 
 746:Veno-Echo.cpp ****     adcConfig[0].InitSingle(hw.GetPin(15));
 747:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 748:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 749:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 750:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 751:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 752:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 753:Veno-Echo.cpp ****     adcConfig[6].InitSingle(hw.GetPin(22));
 754:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 755:Veno-Echo.cpp **** 
 756:Veno-Echo.cpp **** 
 757:Veno-Echo.cpp ****     hw.adc.Init(adcConfig, 8,daisy::AdcHandle::OVS_128);
 758:Veno-Echo.cpp ****     hw.adc.Start();
 759:Veno-Echo.cpp **** 
 760:Veno-Echo.cpp ****     hw.SetAudioBlockSize(1);     //set blocksize.
 761:Veno-Echo.cpp ****     // start audio callback
 762:Veno-Echo.cpp ****     hw.StartAudio(AudioCallback);
 763:Veno-Echo.cpp **** 
 764:Veno-Echo.cpp ****     
 765:Veno-Echo.cpp **** 
 766:Veno-Echo.cpp ****      for(;;)
 767:Veno-Echo.cpp ****      {
 768:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 49


 769:Veno-Echo.cpp **** /*
 770:Veno-Echo.cpp ****         if(save_flag)
 771:Veno-Echo.cpp ****         {
 772:Veno-Echo.cpp **** 
 773:Veno-Echo.cpp ****             if (SaveSettings(AltControls) == DSY_MEMORY_OK)
 774:Veno-Echo.cpp ****             {
 775:Veno-Echo.cpp ****                 //reset flag
 776:Veno-Echo.cpp ****                 //System::Delay(1000);
 777:Veno-Echo.cpp ****                 save_flag = false;
 778:Veno-Echo.cpp ****             }
 779:Veno-Echo.cpp ****         }
 780:Veno-Echo.cpp **** 
 781:Veno-Echo.cpp **** */
 782:Veno-Echo.cpp ****      }
 783:Veno-Echo.cpp **** 
 784:Veno-Echo.cpp **** }
 785:Veno-Echo.cpp **** 
 786:Veno-Echo.cpp **** void Update_DelayTimeL_CV()
 787:Veno-Echo.cpp **** {
 1034              		.loc 19 787 1 is_stmt 1 view -0
 1035              		.cfi_startproc
 1036              		@ args = 0, pretend = 0, frame = 0
 1037              		@ frame_needed = 0, uses_anonymous_args = 0
 788:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1038              		.loc 19 788 5 view .LVU205
 787:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1039              		.loc 19 787 1 is_stmt 0 view .LVU206
 1040 0000 08B5     		push	{r3, lr}
 1041              		.cfi_def_cfa_offset 8
 1042              		.cfi_offset 3, -8
 1043              		.cfi_offset 14, -4
 1044              		.loc 19 788 36 view .LVU207
 1045 0002 0021     		movs	r1, #0
 1046 0004 0348     		ldr	r0, .L40
 1047 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1048              	.LVL41:
 1049              		.loc 19 788 19 view .LVU208
 1050 000a 034B     		ldr	r3, .L40+4
 1051 000c 83ED000A 		vstr.32	s0, [r3]
 789:Veno-Echo.cpp **** }
 1052              		.loc 19 789 1 view .LVU209
 1053 0010 08BD     		pop	{r3, pc}
 1054              	.L41:
 1055 0012 00BF     		.align	2
 1056              	.L40:
 1057 0014 18000000 		.word	.LANCHOR4+24
 1058 0018 00000000 		.word	.LANCHOR5
 1059              		.cfi_endproc
 1060              	.LFE4291:
 1062              		.section	.text._Z20Update_DelayTimeR_CVv,"ax",%progbits
 1063              		.align	1
 1064              		.p2align 2,,3
 1065              		.global	_Z20Update_DelayTimeR_CVv
 1066              		.syntax unified
 1067              		.thumb
 1068              		.thumb_func
 1069              		.fpu fpv5-d16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 50


 1071              	_Z20Update_DelayTimeR_CVv:
 1072              	.LFB4293:
 790:Veno-Echo.cpp **** 
 791:Veno-Echo.cpp **** //samples ADC's and updates parameters. 
 792:Veno-Echo.cpp **** //Delay time controls only update if thresholds for delta and time since last change are exceeded.
 793:Veno-Echo.cpp **** void Update_DelayTimeL()
 794:Veno-Echo.cpp **** {
 795:Veno-Echo.cpp ****     static int counterL{};
 796:Veno-Echo.cpp ****     float delayTimeL_Pot{};
 797:Veno-Echo.cpp ****     static float delayTimeL_Pot_Last{};
 798:Veno-Echo.cpp **** 
 799:Veno-Echo.cpp ****     //update pot values
 800:Veno-Echo.cpp ****     delayTimeL_Pot = hw.adc.GetMuxFloat(7,2);
 801:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 802:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 803:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 804:Veno-Echo.cpp **** 
 805:Veno-Echo.cpp **** if (!shift)
 806:Veno-Echo.cpp **** {
 807:Veno-Echo.cpp **** //update last value if shift not held
 808:Veno-Echo.cpp **** delayTimeL_Pot_Last = delayTimeL_Pot;
 809:Veno-Echo.cpp **** //calculate combined CV and pot delay time
 810:Veno-Echo.cpp **** float DelayTimeL{PotCVCombo(delayTimeL_Pot,delayTimeL_CV)};
 811:Veno-Echo.cpp **** 
 812:Veno-Echo.cpp ****     if (!syncMode)
 813:Veno-Echo.cpp ****     {
 814:Veno-Echo.cpp ****         if (counterL == 0)
 815:Veno-Echo.cpp ****         {
 816:Veno-Echo.cpp ****             
 817:Veno-Echo.cpp ****             delayL.SetDelayTime_pot(1.0f - DelayTimeL,true);
 818:Veno-Echo.cpp ****         }
 819:Veno-Echo.cpp ****     }
 820:Veno-Echo.cpp ****     else    //syncmode
 821:Veno-Echo.cpp ****     {
 822:Veno-Echo.cpp **** 
 823:Veno-Echo.cpp ****         if (counterL == 0)
 824:Veno-Echo.cpp ****         {
 825:Veno-Echo.cpp ****             //float div_L_Input{DelayTimeL};
 826:Veno-Echo.cpp ****             if(delayL.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(DelayTimeL,&div_L
 827:Veno-Echo.cpp ****             {
 828:Veno-Echo.cpp ****                 delayL_flag = true;
 829:Veno-Echo.cpp ****             }
 830:Veno-Echo.cpp ****         }
 831:Veno-Echo.cpp ****     }
 832:Veno-Echo.cpp **** }   //not shift mode
 833:Veno-Echo.cpp **** 
 834:Veno-Echo.cpp **** else    //shift mode
 835:Veno-Echo.cpp **** {
 836:Veno-Echo.cpp ****     //check if pot has moved since shift mode turned on
 837:Veno-Echo.cpp ****     if(abs(delayTimeL_Pot_Last - delayTimeL_Pot) > altControlThresh)
 838:Veno-Echo.cpp ****     {
 839:Veno-Echo.cpp ****         float Rev_DelayTime{scale(delayTimeL_Pot,maxRevDelay,minRevDelay,EXPONENTIAL)};
 840:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(Rev_DelayTime);
 841:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(Rev_DelayTime); 
 842:Veno-Echo.cpp ****         //save setting:
 843:Veno-Echo.cpp ****         AltControls.RevLength = Rev_DelayTime;
 844:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 51


 845:Veno-Echo.cpp **** }
 846:Veno-Echo.cpp ****     
 847:Veno-Echo.cpp **** }
 848:Veno-Echo.cpp **** 
 849:Veno-Echo.cpp **** void Update_DelayTimeR_CV()
 850:Veno-Echo.cpp **** {
 1073              		.loc 19 850 1 is_stmt 1 view -0
 1074              		.cfi_startproc
 1075              		@ args = 0, pretend = 0, frame = 0
 1076              		@ frame_needed = 0, uses_anonymous_args = 0
 851:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1077              		.loc 19 851 5 view .LVU211
 850:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1078              		.loc 19 850 1 is_stmt 0 view .LVU212
 1079 0000 08B5     		push	{r3, lr}
 1080              		.cfi_def_cfa_offset 8
 1081              		.cfi_offset 3, -8
 1082              		.cfi_offset 14, -4
 1083              		.loc 19 851 36 view .LVU213
 1084 0002 0121     		movs	r1, #1
 1085 0004 0348     		ldr	r0, .L44
 1086 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1087              	.LVL42:
 1088              		.loc 19 851 19 view .LVU214
 1089 000a 034B     		ldr	r3, .L44+4
 1090 000c 83ED000A 		vstr.32	s0, [r3]
 852:Veno-Echo.cpp **** }
 1091              		.loc 19 852 1 view .LVU215
 1092 0010 08BD     		pop	{r3, pc}
 1093              	.L45:
 1094 0012 00BF     		.align	2
 1095              	.L44:
 1096 0014 18000000 		.word	.LANCHOR4+24
 1097 0018 00000000 		.word	.LANCHOR6
 1098              		.cfi_endproc
 1099              	.LFE4293:
 1101              		.section	.text._Z19Update_feedbackL_CVv,"ax",%progbits
 1102              		.align	1
 1103              		.p2align 2,,3
 1104              		.global	_Z19Update_feedbackL_CVv
 1105              		.syntax unified
 1106              		.thumb
 1107              		.thumb_func
 1108              		.fpu fpv5-d16
 1110              	_Z19Update_feedbackL_CVv:
 1111              	.LFB4295:
 853:Veno-Echo.cpp **** 
 854:Veno-Echo.cpp **** void Update_DelayTimeR()
 855:Veno-Echo.cpp **** {
 856:Veno-Echo.cpp ****     static int counterR{};
 857:Veno-Echo.cpp ****     float delayTimeR_Pot{};
 858:Veno-Echo.cpp ****     static float delayTimeR_Pot_Last{};
 859:Veno-Echo.cpp **** 
 860:Veno-Echo.cpp ****     //update pot values
 861:Veno-Echo.cpp ****     delayTimeR_Pot = hw.adc.GetMuxFloat(7,6);
 862:Veno-Echo.cpp **** 
 863:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 52


 864:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 865:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);    
 866:Veno-Echo.cpp **** 
 867:Veno-Echo.cpp **** if (!shift)
 868:Veno-Echo.cpp **** {
 869:Veno-Echo.cpp **** //update last value if shift not held
 870:Veno-Echo.cpp **** delayTimeR_Pot_Last = delayTimeR_Pot;
 871:Veno-Echo.cpp **** //calculate combined CV and pot delay time
 872:Veno-Echo.cpp **** float delayTimeR{PotCVCombo(delayTimeR_Pot,delayTimeR_CV)};
 873:Veno-Echo.cpp **** 
 874:Veno-Echo.cpp ****     if (!syncMode)
 875:Veno-Echo.cpp ****     {
 876:Veno-Echo.cpp ****         if (counterR == 0)
 877:Veno-Echo.cpp ****         {
 878:Veno-Echo.cpp **** 
 879:Veno-Echo.cpp ****             delayR.SetDelayTime_pot(1.0f - delayTimeR,true);
 880:Veno-Echo.cpp ****         }
 881:Veno-Echo.cpp **** 
 882:Veno-Echo.cpp ****     }
 883:Veno-Echo.cpp ****     else    //syncmode
 884:Veno-Echo.cpp ****     {
 885:Veno-Echo.cpp ****         if (counterR == 0)
 886:Veno-Echo.cpp ****         {
 887:Veno-Echo.cpp ****             //float div_R_Input{1.0f - delayTimeR}; //invert pot range
 888:Veno-Echo.cpp ****             if(delayR.SetDelayTime(BaseTempo.getTapLength() * 48.0f * SetTempoDiv(delayTimeR,&div_R
 889:Veno-Echo.cpp ****             {
 890:Veno-Echo.cpp ****                 delayR_flag = true;
 891:Veno-Echo.cpp ****             }
 892:Veno-Echo.cpp ****         }
 893:Veno-Echo.cpp ****     }
 894:Veno-Echo.cpp **** }   //not shift mode
 895:Veno-Echo.cpp **** 
 896:Veno-Echo.cpp **** else    //shift mode
 897:Veno-Echo.cpp **** {
 898:Veno-Echo.cpp ****     //check if pot has moved since shift mode turned on
 899:Veno-Echo.cpp ****     if(abs(delayTimeR_Pot_Last - delayTimeR_Pot) > altControlThresh)
 900:Veno-Echo.cpp ****     {
 901:Veno-Echo.cpp ****         float tapRatioInput{delayTimeR_Pot};
 902:Veno-Echo.cpp ****         TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>(MAX
 903:Veno-Echo.cpp ****         
 904:Veno-Echo.cpp ****         BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 905:Veno-Echo.cpp ****         //save setting:
 906:Veno-Echo.cpp ****         AltControls.tapRatio = GetTapRatio(tapRatio);
 907:Veno-Echo.cpp ****     }
 908:Veno-Echo.cpp **** }
 909:Veno-Echo.cpp ****     
 910:Veno-Echo.cpp **** }
 911:Veno-Echo.cpp **** void Update_feedbackL_CV()
 912:Veno-Echo.cpp **** {
 1112              		.loc 19 912 1 is_stmt 1 view -0
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 0
 1115              		@ frame_needed = 0, uses_anonymous_args = 0
 913:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 1116              		.loc 19 913 5 view .LVU217
 912:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 1117              		.loc 19 912 1 is_stmt 0 view .LVU218
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 53


 1118 0000 08B5     		push	{r3, lr}
 1119              		.cfi_def_cfa_offset 8
 1120              		.cfi_offset 3, -8
 1121              		.cfi_offset 14, -4
 1122              		.loc 19 913 35 view .LVU219
 1123 0002 0221     		movs	r1, #2
 1124 0004 0348     		ldr	r0, .L48
 1125 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1126              	.LVL43:
 1127              		.loc 19 913 18 view .LVU220
 1128 000a 034B     		ldr	r3, .L48+4
 1129 000c 83ED000A 		vstr.32	s0, [r3]
 914:Veno-Echo.cpp **** }
 1130              		.loc 19 914 1 view .LVU221
 1131 0010 08BD     		pop	{r3, pc}
 1132              	.L49:
 1133 0012 00BF     		.align	2
 1134              	.L48:
 1135 0014 18000000 		.word	.LANCHOR4+24
 1136 0018 00000000 		.word	.LANCHOR7
 1137              		.cfi_endproc
 1138              	.LFE4295:
 1140              		.section	.text._Z16Update_feedbackLv,"ax",%progbits
 1141              		.align	1
 1142              		.p2align 2,,3
 1143              		.global	_Z16Update_feedbackLv
 1144              		.syntax unified
 1145              		.thumb
 1146              		.thumb_func
 1147              		.fpu fpv5-d16
 1149              	_Z16Update_feedbackLv:
 1150              	.LFB4296:
 915:Veno-Echo.cpp **** void Update_feedbackL()
 916:Veno-Echo.cpp **** {
 1151              		.loc 19 916 1 is_stmt 1 view -0
 1152              		.cfi_startproc
 1153              		@ args = 0, pretend = 0, frame = 0
 1154              		@ frame_needed = 0, uses_anonymous_args = 0
 917:Veno-Echo.cpp ****     //get pot values:
 918:Veno-Echo.cpp ****     //float feedbackL_Pot{hw.adc.GetFloat(2)};
 919:Veno-Echo.cpp ****     float feedbackL_Pot{hw.adc.GetMuxFloat(7,1)};
 1155              		.loc 19 919 5 view .LVU223
 1156              		.loc 19 919 43 is_stmt 0 view .LVU224
 1157 0000 0122     		movs	r2, #1
 1158 0002 0721     		movs	r1, #7
 1159 0004 3448     		ldr	r0, .L60
 916:Veno-Echo.cpp ****     //get pot values:
 1160              		.loc 19 916 1 view .LVU225
 1161 0006 10B5     		push	{r4, lr}
 1162              		.cfi_def_cfa_offset 8
 1163              		.cfi_offset 4, -8
 1164              		.cfi_offset 14, -4
 1165              		.loc 19 919 43 view .LVU226
 1166 0008 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1167              	.LVL44:
 1168              	.LBB843:
 920:Veno-Echo.cpp ****     static float feedbackL_Pot_Last{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 54


 921:Veno-Echo.cpp **** 
 922:Veno-Echo.cpp ****     if (!shift) //default controls
 1169              		.loc 19 922 9 view .LVU227
 1170 000c 334B     		ldr	r3, .L60+4
 1171              	.LBE843:
 919:Veno-Echo.cpp ****     static float feedbackL_Pot_Last{};
 1172              		.loc 19 919 43 view .LVU228
 1173 000e F0EE407A 		vmov.f32	s15, s0
 1174              	.LVL45:
 920:Veno-Echo.cpp ****     static float feedbackL_Pot_Last{};
 1175              		.loc 19 920 5 is_stmt 1 view .LVU229
 1176              		.loc 19 922 5 view .LVU230
 1177              	.LBB861:
 1178 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1179 0014 7BBB     		cbnz	r3, .L51
 1180              	.LBB844:
 923:Veno-Echo.cpp ****     {   
 924:Veno-Echo.cpp ****         //update last values if shift off
 925:Veno-Echo.cpp ****         feedbackL_Pot_Last = feedbackL_Pot;
 1181              		.loc 19 925 9 view .LVU231
 926:Veno-Echo.cpp ****   
 927:Veno-Echo.cpp ****         float feedbackL_Target{scale(PotCVCombo(feedbackL_Pot,feedbackL_CV),0.0,maxFB,LINEAR)};  
 1182              		.loc 19 927 37 is_stmt 0 view .LVU232
 1183 0016 324A     		ldr	r2, .L60+8
 1184              	.LBB845:
 1185              	.LBB846:
 928:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 929:Veno-Echo.cpp ****     }
 930:Veno-Echo.cpp ****     else    //alternate controls
 931:Veno-Echo.cpp ****     {
 932:Veno-Echo.cpp ****         static float HPCutoff{};
 933:Veno-Echo.cpp ****         if (abs(feedbackL_Pot_Last - feedbackL_Pot) > altControlThresh)
 934:Veno-Echo.cpp ****         {
 935:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
 936:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 937:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 938:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 939:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 940:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 941:Veno-Echo.cpp ****         }
 942:Veno-Echo.cpp ****     }
 943:Veno-Echo.cpp **** }
 944:Veno-Echo.cpp **** 
 945:Veno-Echo.cpp **** void Update_feedbackR_CV()
 946:Veno-Echo.cpp **** {
 947:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 948:Veno-Echo.cpp **** }
 949:Veno-Echo.cpp **** 
 950:Veno-Echo.cpp **** void Update_feedbackR()
 951:Veno-Echo.cpp **** {
 952:Veno-Echo.cpp ****     float feedbackR_Pot{hw.adc.GetMuxFloat(7,4)};
 953:Veno-Echo.cpp ****     static float feedbackR_Pot_Last{};
 954:Veno-Echo.cpp **** 
 955:Veno-Echo.cpp ****     if (!shift) //default controls
 956:Veno-Echo.cpp ****     {   
 957:Veno-Echo.cpp ****         //update last values if shift off
 958:Veno-Echo.cpp ****         feedbackR_Pot_Last = feedbackR_Pot;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 55


 959:Veno-Echo.cpp **** 
 960:Veno-Echo.cpp ****         float feedbackR_Target{scale(PotCVCombo(feedbackR_Pot,feedbackR_CV),0.0,maxFB,LINEAR)};
 961:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 962:Veno-Echo.cpp ****     }
 963:Veno-Echo.cpp ****     else    //alternate controls
 964:Veno-Echo.cpp ****     {
 965:Veno-Echo.cpp ****         static float LPCutoff{};
 966:Veno-Echo.cpp ****         if (abs(feedbackR_Pot_Last - feedbackR_Pot) > altControlThresh)
 967:Veno-Echo.cpp ****         {
 968:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
 969:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 970:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 971:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 972:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 973:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 974:Veno-Echo.cpp ****         }
 975:Veno-Echo.cpp ****     }
 976:Veno-Echo.cpp **** }
 977:Veno-Echo.cpp **** 
 978:Veno-Echo.cpp **** void Update_drywet_CV()
 979:Veno-Echo.cpp **** {
 980:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 981:Veno-Echo.cpp **** }
 982:Veno-Echo.cpp **** 
 983:Veno-Echo.cpp **** void Update_drywet()
 984:Veno-Echo.cpp **** {
 985:Veno-Echo.cpp ****     //get pot values:
 986:Veno-Echo.cpp ****     //float drywet_Pot{hw.adc.GetFloat(4)};
 987:Veno-Echo.cpp ****     float drywet_Pot{hw.adc.GetMuxFloat(7,5)};
 988:Veno-Echo.cpp **** 
 989:Veno-Echo.cpp ****     static float drywet_Pot_Last{};
 990:Veno-Echo.cpp **** 
 991:Veno-Echo.cpp ****     if (!shift) //default controls
 992:Veno-Echo.cpp ****     {   
 993:Veno-Echo.cpp ****         //update last values if shift off
 994:Veno-Echo.cpp ****         drywet_Pot_Last = drywet_Pot;
 995:Veno-Echo.cpp **** 
 996:Veno-Echo.cpp ****         float drywetcombo{PotCVCombo(drywet_Pot,drywet_CV)};
 997:Veno-Echo.cpp **** 
 998:Veno-Echo.cpp ****         float drywetTarget{};
 999:Veno-Echo.cpp ****         if(drywetcombo >= 0.98)
1000:Veno-Echo.cpp ****         {
1001:Veno-Echo.cpp ****             drywetTarget = 1.0f;
1002:Veno-Echo.cpp ****         }
1003:Veno-Echo.cpp ****         else if(drywetcombo <= 0.02)
1004:Veno-Echo.cpp ****         {
1005:Veno-Echo.cpp ****             drywetTarget = 0.0f;
1006:Veno-Echo.cpp ****         }
1007:Veno-Echo.cpp ****         else
1008:Veno-Echo.cpp ****         {
1009:Veno-Echo.cpp ****             drywetTarget = scale(drywetcombo,0.0,1.0,EXPONENTIAL); 
1010:Veno-Echo.cpp ****         }
1011:Veno-Echo.cpp **** 
1012:Veno-Echo.cpp ****         //fonepole(drywet,drywetTarget,0.032f); 
1013:Veno-Echo.cpp ****         fonepole(drywet,drywetTarget,0.016f); 
1014:Veno-Echo.cpp ****     }
1015:Veno-Echo.cpp ****     else    //alternate controls
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 56


1016:Veno-Echo.cpp ****     {
1017:Veno-Echo.cpp ****         static float Res{};
1018:Veno-Echo.cpp ****         if (abs(drywet_Pot_Last - drywet_Pot) > altControlThresh)
1019:Veno-Echo.cpp ****         {
1020:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
1021:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
1022:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
1023:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
1024:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
1025:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
1026:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
1027:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
1028:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
1029:Veno-Echo.cpp ****             AltControls.Resonance = Res;
1030:Veno-Echo.cpp ****         }
1031:Veno-Echo.cpp ****     }
1032:Veno-Echo.cpp **** }
1033:Veno-Echo.cpp **** 
1034:Veno-Echo.cpp **** void Update_width_CV()
1035:Veno-Echo.cpp **** {
1036:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
1037:Veno-Echo.cpp **** }
1038:Veno-Echo.cpp **** 
1039:Veno-Echo.cpp **** void Update_width()
1040:Veno-Echo.cpp **** {
1041:Veno-Echo.cpp ****     //get pot values:
1042:Veno-Echo.cpp ****     float width_Pot{hw.adc.GetMuxFloat(7,7)};
1043:Veno-Echo.cpp **** 
1044:Veno-Echo.cpp ****     static float width_Pot_Last{};
1045:Veno-Echo.cpp **** 
1046:Veno-Echo.cpp ****     if (!shift) //default controls
1047:Veno-Echo.cpp ****     {   
1048:Veno-Echo.cpp ****         //update last values if shift off
1049:Veno-Echo.cpp ****         width_Pot_Last = width_Pot;
1050:Veno-Echo.cpp **** 
1051:Veno-Echo.cpp ****         float widthTarget{scale(PotCVCombo(width_Pot,width_CV),0.5f,0.0f,LINEAR)};
1052:Veno-Echo.cpp ****         fonepole(width,widthTarget,0.032f);
1053:Veno-Echo.cpp ****         WidthXfade.SetPos(width);
1054:Veno-Echo.cpp ****     }
1055:Veno-Echo.cpp ****     else    //alternate controls
1056:Veno-Echo.cpp ****     {
1057:Veno-Echo.cpp ****         if (abs(width_Pot - width_Pot_Last) > altControlThresh)
1058:Veno-Echo.cpp ****         {
1059:Veno-Echo.cpp ****             ModDepth = scale(width_Pot,minModDepth,maxModDepth,LINEAR); 
1060:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
1061:Veno-Echo.cpp ****         }
1062:Veno-Echo.cpp **** 
1063:Veno-Echo.cpp ****     }
1064:Veno-Echo.cpp **** }
1065:Veno-Echo.cpp **** 
1066:Veno-Echo.cpp **** void Update_crossfeedback()
1067:Veno-Echo.cpp **** {
1068:Veno-Echo.cpp ****     //get pot values:
1069:Veno-Echo.cpp ****     float crossfeedback_Pot{hw.adc.GetMuxFloat(7,0)};
1070:Veno-Echo.cpp **** 
1071:Veno-Echo.cpp ****     static float crossfeedback_Pot_Last{};
1072:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 57


1073:Veno-Echo.cpp ****     if (!shift) //default controls
1074:Veno-Echo.cpp ****     {   
1075:Veno-Echo.cpp ****         //update last values if shift off
1076:Veno-Echo.cpp ****         crossfeedback_Pot_Last = crossfeedback_Pot; 
1077:Veno-Echo.cpp **** 
1078:Veno-Echo.cpp ****         float crossfeedbackTarget{scale(crossfeedback_Pot,0.0,1.0,LINEAR)};
1079:Veno-Echo.cpp ****         fonepole(crossfeedback,crossfeedbackTarget,0.032f);
1080:Veno-Echo.cpp **** 
1081:Veno-Echo.cpp ****     }
1082:Veno-Echo.cpp ****     else    //alternate controls
1083:Veno-Echo.cpp ****     {
1084:Veno-Echo.cpp ****         static float modRate{};
1085:Veno-Echo.cpp ****         if (abs(crossfeedback_Pot_Last - crossfeedback_Pot) > altControlThresh)
1086:Veno-Echo.cpp ****         {
1087:Veno-Echo.cpp ****             modRate = scale(crossfeedback_Pot,minModRate,maxModRate,LINEAR);
1088:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
1089:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
1090:Veno-Echo.cpp ****         }
1091:Veno-Echo.cpp ****     }
1092:Veno-Echo.cpp **** }
1093:Veno-Echo.cpp **** 
1094:Veno-Echo.cpp **** void Update_filterXfade()
1095:Veno-Echo.cpp **** {
1096:Veno-Echo.cpp ****     //get pot values:
1097:Veno-Echo.cpp ****     float filterXfade_Pot{hw.adc.GetMuxFloat(7,3)};
1098:Veno-Echo.cpp **** 
1099:Veno-Echo.cpp ****     static float filterXfade_Pot_Last{};
1100:Veno-Echo.cpp **** 
1101:Veno-Echo.cpp ****     if (!shift) //default controls
1102:Veno-Echo.cpp ****     {   
1103:Veno-Echo.cpp ****         //update last values if shift off
1104:Veno-Echo.cpp ****         filterXfade_Pot_Last = filterXfade_Pot; 
1105:Veno-Echo.cpp **** 
1106:Veno-Echo.cpp ****         float filterXfadeTarget{scale(filterXfade_Pot,0.0,1.0,EXPONENTIAL)};
1107:Veno-Echo.cpp ****         fonepole(filterXfade,filterXfadeTarget,0.032f);
1108:Veno-Echo.cpp **** 
1109:Veno-Echo.cpp ****     }
1110:Veno-Echo.cpp ****     else    //alternate controls
1111:Veno-Echo.cpp ****     {
1112:Veno-Echo.cpp ****         //static float modRate{};
1113:Veno-Echo.cpp ****         if (abs(filterXfade_Pot_Last - filterXfade_Pot) > altControlThresh)
1114:Veno-Echo.cpp ****         {
1115:Veno-Echo.cpp **** 
1116:Veno-Echo.cpp ****             if(filterXfade_Pot < 0.45f)
1117:Veno-Echo.cpp ****             {
1118:Veno-Echo.cpp ****                 PostFilters = false;
1119:Veno-Echo.cpp ****             }
1120:Veno-Echo.cpp ****             else if(filterXfade_Pot > 0.55f)
1121:Veno-Echo.cpp ****             {
1122:Veno-Echo.cpp ****                 
1123:Veno-Echo.cpp ****                 PostFilters = true;
1124:Veno-Echo.cpp ****             }
1125:Veno-Echo.cpp ****             else
1126:Veno-Echo.cpp ****             {
1127:Veno-Echo.cpp ****               //do nothing
1128:Veno-Echo.cpp ****             }
1129:Veno-Echo.cpp ****             AltControls.FilterPrePost = filterXfade_Pot;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 58


1130:Veno-Echo.cpp ****         }
1131:Veno-Echo.cpp ****     }
1132:Veno-Echo.cpp **** }
1133:Veno-Echo.cpp **** 
1134:Veno-Echo.cpp **** void GetModCV()
1135:Veno-Echo.cpp **** {
1136:Veno-Echo.cpp ****     //get modulation CV input
1137:Veno-Echo.cpp ****     modulation_CV_Raw = scale(hw.adc.GetFloat(6),-1.0f * maxModAmp,maxModAmp,LINEAR);
1138:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
1139:Veno-Echo.cpp **** }
1140:Veno-Echo.cpp **** 
1141:Veno-Echo.cpp **** void Update_Mod()
1142:Veno-Echo.cpp **** {    
1143:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
1144:Veno-Echo.cpp ****     static float modulation_CV{};
1145:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
1146:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
1147:Veno-Echo.cpp ****     //calculate InternalMod
1148:Veno-Echo.cpp ****     float internalmod{lfo.Process() * ModDepth_Filtered};
1149:Veno-Echo.cpp ****     //apply modulation to delay lines
1150:Veno-Echo.cpp ****     delayL.SetModulation(modulation_CV + internalmod);
1151:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
1152:Veno-Echo.cpp **** }
1153:Veno-Echo.cpp **** 
1154:Veno-Echo.cpp **** void UpdateClock()
1155:Veno-Echo.cpp **** {
1156:Veno-Echo.cpp ****     static int divCounter{};
1157:Veno-Echo.cpp ****     ClockIn.Debounce();
1158:Veno-Echo.cpp **** 
1159:Veno-Echo.cpp ****     //if clock in pulse received
1160:Veno-Echo.cpp ****     if (ClockIn.RisingEdge())    
1161:Veno-Echo.cpp ****     {   
1162:Veno-Echo.cpp ****         divCounter = (divCounter + 1) % PPQN;
1163:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
1164:Veno-Echo.cpp ****         if(divCounter == 0)
1165:Veno-Echo.cpp ****         {
1166:Veno-Echo.cpp ****             if(BaseTempo.tap()) //if tempo changed
1167:Veno-Echo.cpp ****             {
1168:Veno-Echo.cpp ****                 tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1169:Veno-Echo.cpp ****                 if(syncMode)
1170:Veno-Echo.cpp ****                 {
1171:Veno-Echo.cpp ****                     if(div_L <= UNITY)
1172:Veno-Echo.cpp ****                     {
1173:Veno-Echo.cpp ****                         delayL.tempoled.resetPhase();
1174:Veno-Echo.cpp ****                     }
1175:Veno-Echo.cpp **** 
1176:Veno-Echo.cpp ****                     if(div_R <= UNITY)
1177:Veno-Echo.cpp ****                     {
1178:Veno-Echo.cpp ****                         delayR.tempoled.resetPhase();
1179:Veno-Echo.cpp ****                     }
1180:Veno-Echo.cpp ****                 }
1181:Veno-Echo.cpp ****             }
1182:Veno-Echo.cpp ****         }
1183:Veno-Echo.cpp ****     }
1184:Veno-Echo.cpp ****     
1185:Veno-Echo.cpp **** }
1186:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 59


1187:Veno-Echo.cpp **** void Update_Buttons()
1188:Veno-Echo.cpp **** {  
1189:Veno-Echo.cpp ****     static uint32_t shiftTime{};
1190:Veno-Echo.cpp ****     static uint32_t resetTime{};
1191:Veno-Echo.cpp ****     static int buttonstate{};
1192:Veno-Echo.cpp **** 
1193:Veno-Echo.cpp ****     Rev_L_sw.update();
1194:Veno-Echo.cpp ****     Rev_R_sw.update();
1195:Veno-Echo.cpp ****     LPF_sw.update();
1196:Veno-Echo.cpp ****     HPF_sw.update();
1197:Veno-Echo.cpp ****     Tap_Button.update();
1198:Veno-Echo.cpp **** 
1199:Veno-Echo.cpp ****     ReverseGateL.Debounce();
1200:Veno-Echo.cpp ****     ReverseGateR.Debounce();
1201:Veno-Echo.cpp ****     //TapButton.Debounce();
1202:Veno-Echo.cpp ****     Sync.Debounce();
1203:Veno-Echo.cpp ****     ClockIn.Debounce();
1204:Veno-Echo.cpp ****     //gate inputs
1205:Veno-Echo.cpp ****     if (ReverseGateL.RisingEdge())
1206:Veno-Echo.cpp ****     {
1207:Veno-Echo.cpp ****         Rev_L_sw.toggle();
1208:Veno-Echo.cpp ****         //resetTime = System::GetNow();
1209:Veno-Echo.cpp ****     }
1210:Veno-Echo.cpp **** 
1211:Veno-Echo.cpp ****     if (ReverseGateR.RisingEdge())
1212:Veno-Echo.cpp ****     {
1213:Veno-Echo.cpp ****         Rev_R_sw.toggle();
1214:Veno-Echo.cpp ****         //resetTime = System::GetNow();
1215:Veno-Echo.cpp ****     }
1216:Veno-Echo.cpp **** 
1217:Veno-Echo.cpp ****     //buttons
1218:Veno-Echo.cpp **** 
1219:Veno-Echo.cpp ****     if (Rev_L_sw.RisingEdge())
1220:Veno-Echo.cpp ****     {
1221:Veno-Echo.cpp ****         buttonstate += 1;
1222:Veno-Echo.cpp ****         if (buttonstate == 3)
1223:Veno-Echo.cpp ****         {
1224:Veno-Echo.cpp ****             resetTime = System::GetNow();
1225:Veno-Echo.cpp ****         }
1226:Veno-Echo.cpp ****     }
1227:Veno-Echo.cpp **** 
1228:Veno-Echo.cpp ****     if (Rev_L_sw.FallingEdge())
1229:Veno-Echo.cpp ****     {
1230:Veno-Echo.cpp ****         buttonstate -= 1;
1231:Veno-Echo.cpp ****     }
1232:Veno-Echo.cpp **** 
1233:Veno-Echo.cpp ****     if (Rev_R_sw.RisingEdge())
1234:Veno-Echo.cpp ****     {
1235:Veno-Echo.cpp ****         buttonstate += 1;
1236:Veno-Echo.cpp ****         if (buttonstate == 3)
1237:Veno-Echo.cpp ****         {
1238:Veno-Echo.cpp ****             resetTime = System::GetNow();
1239:Veno-Echo.cpp ****         }
1240:Veno-Echo.cpp ****     }
1241:Veno-Echo.cpp **** 
1242:Veno-Echo.cpp ****     if (Rev_R_sw.FallingEdge())
1243:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 60


1244:Veno-Echo.cpp ****         buttonstate -= 1;
1245:Veno-Echo.cpp ****     }
1246:Veno-Echo.cpp **** 
1247:Veno-Echo.cpp ****     if (Tap_Button.RisingEdge())    
1248:Veno-Echo.cpp ****     {
1249:Veno-Echo.cpp ****         if(BaseTempo.tap()) //if tempo changed
1250:Veno-Echo.cpp ****         {
1251:Veno-Echo.cpp ****             tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1252:Veno-Echo.cpp ****         }
1253:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
1254:Veno-Echo.cpp ****         
1255:Veno-Echo.cpp ****         if(syncMode)
1256:Veno-Echo.cpp ****         {
1257:Veno-Echo.cpp ****             delayL.tempoled.resetPhase();
1258:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
1259:Veno-Echo.cpp ****         }
1260:Veno-Echo.cpp **** 
1261:Veno-Echo.cpp ****         shiftTime = System::GetNow();   //reset shift timer
1262:Veno-Echo.cpp ****         buttonstate += 1;
1263:Veno-Echo.cpp ****         
1264:Veno-Echo.cpp ****         if (buttonstate == 3)
1265:Veno-Echo.cpp ****         {
1266:Veno-Echo.cpp ****             resetTime = System::GetNow();
1267:Veno-Echo.cpp ****         }
1268:Veno-Echo.cpp **** 
1269:Veno-Echo.cpp ****     }
1270:Veno-Echo.cpp **** 
1271:Veno-Echo.cpp ****     if (Tap_Button.FallingEdge())    //when button is let go shift is off
1272:Veno-Echo.cpp ****     {
1273:Veno-Echo.cpp ****         shift = false;
1274:Veno-Echo.cpp ****         buttonstate -= 1;
1275:Veno-Echo.cpp ****         mute = false;
1276:Veno-Echo.cpp ****     }
1277:Veno-Echo.cpp **** 
1278:Veno-Echo.cpp ****     if (Tap_Button.getState())
1279:Veno-Echo.cpp ****     {
1280:Veno-Echo.cpp ****         if ( (System::GetNow() - shiftTime) > shiftWait)
1281:Veno-Echo.cpp ****         {
1282:Veno-Echo.cpp ****             shift = true;   //turn on shift if button held for longer than shiftWait
1283:Veno-Echo.cpp ****         } 
1284:Veno-Echo.cpp ****     }
1285:Veno-Echo.cpp **** 
1286:Veno-Echo.cpp ****     if (buttonstate == 3) //all buttons held
1287:Veno-Echo.cpp ****     {
1288:Veno-Echo.cpp ****         /*
1289:Veno-Echo.cpp ****             if(!save_flag)
1290:Veno-Echo.cpp ****             {
1291:Veno-Echo.cpp ****                 save_flag = true; 
1292:Veno-Echo.cpp ****             }
1293:Veno-Echo.cpp ****         */
1294:Veno-Echo.cpp **** 
1295:Veno-Echo.cpp ****             if( ((System::GetNow() - resetTime) > resetWait) )
1296:Veno-Echo.cpp ****             {
1297:Veno-Echo.cpp ****                 Rev_L_sw.toggle();
1298:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
1299:Veno-Echo.cpp ****                 ResetAllLEDs();
1300:Veno-Echo.cpp ****                 //don't let reset or shift update
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 61


1301:Veno-Echo.cpp ****                 shift = false;
1302:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
1303:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
1304:Veno-Echo.cpp ****                 resetTime = System::GetNow();
1305:Veno-Echo.cpp ****             }
1306:Veno-Echo.cpp ****     } 
1307:Veno-Echo.cpp **** 
1308:Veno-Echo.cpp ****     syncMode = Sync.Pressed() ? true : false;
1309:Veno-Echo.cpp **** 
1310:Veno-Echo.cpp ****     if (Sync.RisingEdge())  //if switched to sync, reset phase of tempo LEDs
1311:Veno-Echo.cpp ****     {
1312:Veno-Echo.cpp ****         //tempoLED_BASE.resetPhase();
1313:Veno-Echo.cpp ****         //delayL.tempoled.resetPhase();
1314:Veno-Echo.cpp ****         //delayR.tempoled.resetPhase();
1315:Veno-Echo.cpp ****         delayL_flag = true;
1316:Veno-Echo.cpp ****         delayR_flag = true;
1317:Veno-Echo.cpp ****     }
1318:Veno-Echo.cpp **** 
1319:Veno-Echo.cpp **** }
1320:Veno-Echo.cpp **** 
1321:Veno-Echo.cpp **** void Update_BaseTempoLED()
1322:Veno-Echo.cpp **** {
1323:Veno-Echo.cpp ****     tempoLED_BASE.update();
1324:Veno-Echo.cpp **** 
1325:Veno-Echo.cpp ****     if(tempoLED_BASE.isEOC()) //if base tempo EOC 
1326:Veno-Echo.cpp ****     {
1327:Veno-Echo.cpp ****         if(delayL_flag) //if left delay time change flag set
1328:Veno-Echo.cpp ****         {
1329:Veno-Echo.cpp ****             delayL.tempoled.resetPhase();
1330:Veno-Echo.cpp ****             delayL_flag = false;
1331:Veno-Echo.cpp ****         }
1332:Veno-Echo.cpp **** 
1333:Veno-Echo.cpp ****         if(delayR_flag) //if right delay time change flag set
1334:Veno-Echo.cpp ****         {
1335:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
1336:Veno-Echo.cpp ****             delayR_flag = false;
1337:Veno-Echo.cpp ****         }
1338:Veno-Echo.cpp **** 
1339:Veno-Echo.cpp ****     }
1340:Veno-Echo.cpp **** }
1341:Veno-Echo.cpp **** 
1342:Veno-Echo.cpp **** //input a float (range 0 to 1) and address of TempoDivs to update
1343:Veno-Echo.cpp **** float SetTempoDiv(float input, TempoDivs *div)
1344:Veno-Echo.cpp **** {
1345:Veno-Echo.cpp **** 
1346:Veno-Echo.cpp ****     float retVal{};
1347:Veno-Echo.cpp **** 
1348:Veno-Echo.cpp ****     if (input < 0.0909f)
1349:Veno-Echo.cpp ****     {
1350:Veno-Echo.cpp ****         retVal = (1.0f / 6.0f);
1351:Veno-Echo.cpp ****         *div = DIV6;
1352:Veno-Echo.cpp ****     }
1353:Veno-Echo.cpp **** 
1354:Veno-Echo.cpp ****     else if (input < 0.1818f)
1355:Veno-Echo.cpp ****     {
1356:Veno-Echo.cpp ****        retVal = (1.0f / 5.0f);
1357:Veno-Echo.cpp ****        *div = DIV5;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 62


1358:Veno-Echo.cpp ****     }
1359:Veno-Echo.cpp **** 
1360:Veno-Echo.cpp ****     else if (input < 0.2727f)
1361:Veno-Echo.cpp ****     {
1362:Veno-Echo.cpp ****         retVal = (1.0f / 4.0f);
1363:Veno-Echo.cpp ****         *div = DIV4;
1364:Veno-Echo.cpp ****     }
1365:Veno-Echo.cpp **** 
1366:Veno-Echo.cpp ****     else if (input < 0.3636f)
1367:Veno-Echo.cpp ****     {
1368:Veno-Echo.cpp ****         retVal = (1.0f / 3.0f);
1369:Veno-Echo.cpp ****         *div = DIV3;
1370:Veno-Echo.cpp ****     }
1371:Veno-Echo.cpp **** 
1372:Veno-Echo.cpp ****     else if (input < 0.4545f)
1373:Veno-Echo.cpp ****     {
1374:Veno-Echo.cpp ****         retVal = (1.0f / 2.0f);
1375:Veno-Echo.cpp ****         *div = DIV2;
1376:Veno-Echo.cpp ****     }
1377:Veno-Echo.cpp **** 
1378:Veno-Echo.cpp ****     else if (input <  0.5455f)
1379:Veno-Echo.cpp ****     {
1380:Veno-Echo.cpp ****         retVal = (1.0f);
1381:Veno-Echo.cpp ****         *div = UNITY;
1382:Veno-Echo.cpp ****     }
1383:Veno-Echo.cpp **** 
1384:Veno-Echo.cpp ****     else if (input < 0.6364f)
1385:Veno-Echo.cpp ****     {
1386:Veno-Echo.cpp ****         retVal = 2.0f;
1387:Veno-Echo.cpp ****         *div = MULT2;
1388:Veno-Echo.cpp ****     }
1389:Veno-Echo.cpp **** 
1390:Veno-Echo.cpp ****     else if (input < 0.7273f)
1391:Veno-Echo.cpp ****     {
1392:Veno-Echo.cpp ****         retVal = 3.0f;
1393:Veno-Echo.cpp ****         *div = MULT3;
1394:Veno-Echo.cpp ****     }
1395:Veno-Echo.cpp **** 
1396:Veno-Echo.cpp ****     else if (input < 0.8182f)
1397:Veno-Echo.cpp ****     {
1398:Veno-Echo.cpp ****         retVal = 4.0f;
1399:Veno-Echo.cpp ****         *div = MULT4;
1400:Veno-Echo.cpp ****     }
1401:Veno-Echo.cpp ****     
1402:Veno-Echo.cpp ****     else if (input < 0.9091f)
1403:Veno-Echo.cpp ****     {
1404:Veno-Echo.cpp ****         retVal = 5.0f;
1405:Veno-Echo.cpp ****         *div = MULT5;
1406:Veno-Echo.cpp ****     }
1407:Veno-Echo.cpp **** 
1408:Veno-Echo.cpp ****     else if (input <= 1.0f)
1409:Veno-Echo.cpp ****     {
1410:Veno-Echo.cpp ****        retVal = 6.0f; 
1411:Veno-Echo.cpp ****        *div = MULT6;
1412:Veno-Echo.cpp ****     }
1413:Veno-Echo.cpp ****     else
1414:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 63


1415:Veno-Echo.cpp ****         retVal = 1.0f; 
1416:Veno-Echo.cpp ****        *div = UNITY;
1417:Veno-Echo.cpp ****     }
1418:Veno-Echo.cpp ****     
1419:Veno-Echo.cpp **** return retVal;
1420:Veno-Echo.cpp **** 
1421:Veno-Echo.cpp **** }
1422:Veno-Echo.cpp **** 
1423:Veno-Echo.cpp **** float GetTapRatio(TapRatios ratio)
1424:Veno-Echo.cpp **** {
1425:Veno-Echo.cpp ****     float retVal{};
1426:Veno-Echo.cpp ****     switch(ratio)
1427:Veno-Echo.cpp ****     {
1428:Veno-Echo.cpp ****         case QUARTER:
1429:Veno-Echo.cpp ****         retVal = 1.0f;
1430:Veno-Echo.cpp ****         break;
1431:Veno-Echo.cpp **** 
1432:Veno-Echo.cpp ****         case DOTTED_EIGHT:
1433:Veno-Echo.cpp ****         retVal = 3.0f/2.0f;
1434:Veno-Echo.cpp ****         break;
1435:Veno-Echo.cpp **** 
1436:Veno-Echo.cpp ****         case EIGHT:
1437:Veno-Echo.cpp ****         retVal = 2.0f;
1438:Veno-Echo.cpp ****         break;
1439:Veno-Echo.cpp **** 
1440:Veno-Echo.cpp ****         case TWELVE:
1441:Veno-Echo.cpp ****         retVal = 3.0f;
1442:Veno-Echo.cpp ****         break;
1443:Veno-Echo.cpp **** 
1444:Veno-Echo.cpp ****         default:
1445:Veno-Echo.cpp ****         retVal = 1.0f;
1446:Veno-Echo.cpp ****         break;
1447:Veno-Echo.cpp ****     }
1448:Veno-Echo.cpp **** 
1449:Veno-Echo.cpp **** return retVal;
1450:Veno-Echo.cpp **** }
1451:Veno-Echo.cpp **** 
1452:Veno-Echo.cpp **** void ApplySettings(const Settings &setting)
1453:Veno-Echo.cpp **** {
1454:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
1455:Veno-Echo.cpp ****     {
1456:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(setting.RevLength);
1457:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
1458:Veno-Echo.cpp ****     }
1459:Veno-Echo.cpp ****     else
1460:Veno-Echo.cpp ****     {
1461:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(defaultAltControls.RevLength);
1462:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
1463:Veno-Echo.cpp ****     }
1464:Veno-Echo.cpp **** 
1465:Veno-Echo.cpp ****     if((setting.tapRatio >= 1.0f) && (setting.tapRatio <= 3.0f ))
1466:Veno-Echo.cpp ****     {
1467:Veno-Echo.cpp ****         BaseTempo.setTapRatio(setting.tapRatio);
1468:Veno-Echo.cpp ****     }
1469:Veno-Echo.cpp ****     else
1470:Veno-Echo.cpp ****     {
1471:Veno-Echo.cpp ****         BaseTempo.setTapRatio(defaultAltControls.tapRatio);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 64


1472:Veno-Echo.cpp ****     }
1473:Veno-Echo.cpp **** 
1474:Veno-Echo.cpp ****     if((setting.ModDepth >= minModDepth) && (setting.ModDepth <= maxModDepth))
1475:Veno-Echo.cpp ****     {
1476:Veno-Echo.cpp ****         ModDepth = setting.ModDepth;
1477:Veno-Echo.cpp ****     }
1478:Veno-Echo.cpp ****     else
1479:Veno-Echo.cpp ****     {
1480:Veno-Echo.cpp ****         ModDepth = defaultAltControls.ModDepth;
1481:Veno-Echo.cpp ****     }
1482:Veno-Echo.cpp **** 
1483:Veno-Echo.cpp ****     if((setting.ModFreq >= minModRate) && (setting.ModFreq <= maxModRate))
1484:Veno-Echo.cpp ****     {
1485:Veno-Echo.cpp ****         lfo.SetFreq(setting.ModFreq);
1486:Veno-Echo.cpp ****     }
1487:Veno-Echo.cpp ****     else
1488:Veno-Echo.cpp ****     {
1489:Veno-Echo.cpp ****         lfo.SetFreq(defaultAltControls.ModFreq);
1490:Veno-Echo.cpp ****     }
1491:Veno-Echo.cpp **** 
1492:Veno-Echo.cpp ****     if((setting.LP_Cutoff >= minLPCut) && (setting.LP_Cutoff <= maxLPCut))
1493:Veno-Echo.cpp ****     {
1494:Veno-Echo.cpp ****         LPF_L.SetFreq(setting.LP_Cutoff);
1495:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
1496:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
1497:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
1498:Veno-Echo.cpp ****     }
1499:Veno-Echo.cpp ****     else
1500:Veno-Echo.cpp ****     {
1501:Veno-Echo.cpp ****         LPF_L.SetFreq(defaultAltControls.LP_Cutoff);
1502:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
1503:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
1504:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
1505:Veno-Echo.cpp ****     }
1506:Veno-Echo.cpp ****     
1507:Veno-Echo.cpp ****     if((setting.HP_Cutoff >= minHPCut) && (setting.HP_Cutoff <= maxHPCut))
1508:Veno-Echo.cpp ****     {
1509:Veno-Echo.cpp ****         HPF_L.SetFreq(setting.HP_Cutoff);
1510:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
1511:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
1512:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
1513:Veno-Echo.cpp ****     }
1514:Veno-Echo.cpp ****     else
1515:Veno-Echo.cpp ****     {
1516:Veno-Echo.cpp ****         HPF_L.SetFreq(defaultAltControls.HP_Cutoff);
1517:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
1518:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
1519:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
1520:Veno-Echo.cpp **** 
1521:Veno-Echo.cpp ****     }
1522:Veno-Echo.cpp **** 
1523:Veno-Echo.cpp ****     if((setting.Resonance >= minRes) && (setting.Resonance <= maxRes))
1524:Veno-Echo.cpp ****     {
1525:Veno-Echo.cpp ****         LPF_L.SetRes(setting.Resonance);
1526:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
1527:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
1528:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 65


1529:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
1530:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
1531:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
1532:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
1533:Veno-Echo.cpp ****     }
1534:Veno-Echo.cpp **** 
1535:Veno-Echo.cpp ****     else
1536:Veno-Echo.cpp ****     {
1537:Veno-Echo.cpp ****         LPF_L_post.SetRes(defaultAltControls.Resonance);
1538:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
1539:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
1540:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
1541:Veno-Echo.cpp ****     }
1542:Veno-Echo.cpp **** 
1543:Veno-Echo.cpp ****     if(setting.FilterPrePost < 0.45f)
1544:Veno-Echo.cpp ****     {
1545:Veno-Echo.cpp ****         PostFilters = false;
1546:Veno-Echo.cpp ****     }
1547:Veno-Echo.cpp ****         else if(setting.FilterPrePost > 0.55f)
1548:Veno-Echo.cpp ****     {
1549:Veno-Echo.cpp ****         PostFilters = true;
1550:Veno-Echo.cpp ****     }
1551:Veno-Echo.cpp ****     else
1552:Veno-Echo.cpp ****     {
1553:Veno-Echo.cpp ****         PostFilters = false;    //default to pre filter
1554:Veno-Echo.cpp ****     }
1555:Veno-Echo.cpp **** 
1556:Veno-Echo.cpp **** }
1557:Veno-Echo.cpp **** 
1558:Veno-Echo.cpp **** void TurnOnAllLEDs()
1559:Veno-Echo.cpp **** {
1560:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
1561:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
1562:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
1563:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
1564:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
1565:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
1566:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
1567:Veno-Echo.cpp **** }
1568:Veno-Echo.cpp **** 
1569:Veno-Echo.cpp **** void ResetAllLEDs()
1570:Veno-Echo.cpp **** {
1571:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
1572:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
1573:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
1574:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
1575:Veno-Echo.cpp ****     {
1576:Veno-Echo.cpp ****         Rev_L_sw.LED_set(0.0f);
1577:Veno-Echo.cpp ****     }
1578:Veno-Echo.cpp ****     else
1579:Veno-Echo.cpp ****     {
1580:Veno-Echo.cpp ****        Rev_L_sw.LED_set(1.0f);
1581:Veno-Echo.cpp ****     }
1582:Veno-Echo.cpp **** 
1583:Veno-Echo.cpp ****     if(!Rev_R_sw.getState())
1584:Veno-Echo.cpp ****     {
1585:Veno-Echo.cpp ****         Rev_R_sw.LED_set(0.0f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 66


1586:Veno-Echo.cpp ****     }
1587:Veno-Echo.cpp ****     else
1588:Veno-Echo.cpp ****     {
1589:Veno-Echo.cpp ****         Rev_R_sw.LED_set(1.0f);
1590:Veno-Echo.cpp ****     }
1591:Veno-Echo.cpp ****     
1592:Veno-Echo.cpp ****     LPF_sw.LED_set(0.0f);
1593:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
1594:Veno-Echo.cpp **** }
1595:Veno-Echo.cpp **** 
1596:Veno-Echo.cpp **** float HardLimit(float input, float limit)
1597:Veno-Echo.cpp **** {
1598:Veno-Echo.cpp ****     float returnval{};
1599:Veno-Echo.cpp ****     if (input > limit)
1600:Veno-Echo.cpp ****         returnval = limit;
1601:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
1602:Veno-Echo.cpp ****         returnval = limit * -1.0f;
1603:Veno-Echo.cpp ****     else
1604:Veno-Echo.cpp ****         returnval = input;
1605:Veno-Echo.cpp **** 
1606:Veno-Echo.cpp ****     return returnval;   
1607:Veno-Echo.cpp **** }
1608:Veno-Echo.cpp **** 
1609:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
1610:Veno-Echo.cpp **** {
1611:Veno-Echo.cpp ****     float output{};
1612:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1186              		.loc 19 1612 39 view .LVU233
 1187 0018 F7EE006A 		vmov.f32	s13, #1.0e+0
 1188              		.loc 19 1612 49 view .LVU234
 1189 001c F6EE005A 		vmov.f32	s11, #5.0e-1
 1190              	.LBE846:
 1191              	.LBE845:
 925:Veno-Echo.cpp ****   
 1192              		.loc 19 925 28 view .LVU235
 1193 0020 304B     		ldr	r3, .L60+12
 1194              	.LBB850:
 1195              	.LBB847:
 1196              		.loc 19 1612 39 view .LVU236
 1197 0022 92ED007A 		vldr.32	s14, [r2]
 1198              		.loc 19 1612 12 view .LVU237
 1199 0026 B0EE006A 		vmov.f32	s12, #2.0e+0
 1200              	.LBE847:
 1201              	.LBE850:
 925:Veno-Echo.cpp ****   
 1202              		.loc 19 925 28 view .LVU238
 1203 002a 83ED000A 		vstr.32	s0, [r3]
 927:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 1204              		.loc 19 927 9 is_stmt 1 view .LVU239
 1205              	.LVL46:
 1206              	.LBB851:
 1207              	.LBI845:
1609:Veno-Echo.cpp **** {
 1208              		.loc 19 1609 7 view .LVU240
 1209              	.LBB848:
1611:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1210              		.loc 19 1611 5 view .LVU241
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 67


 1211              		.loc 19 1612 5 view .LVU242
 1212              		.loc 19 1612 39 is_stmt 0 view .LVU243
 1213 002e 36EEC77A 		vsub.f32	s14, s13, s14
 1214              	.LVL47:
 1215              		.loc 19 1612 49 view .LVU244
 1216 0032 37EE657A 		vsub.f32	s14, s14, s11
 1217              		.loc 19 1612 12 view .LVU245
 1218 0036 E7EE067A 		vfma.f32	s15, s14, s12
 1219              	.LVL48:
1613:Veno-Echo.cpp **** 
1614:Veno-Echo.cpp ****     if(output < 0.0f)
 1220              		.loc 19 1614 5 is_stmt 1 view .LVU246
 1221 003a F5EEC07A 		vcmpe.f32	s15, #0
 1222 003e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1223 0042 46D4     		bmi	.L56
1615:Veno-Echo.cpp ****     {
1616:Veno-Echo.cpp ****         output = 0.0f;
1617:Veno-Echo.cpp ****     }
1618:Veno-Echo.cpp **** 
1619:Veno-Echo.cpp ****     if(output > 1.0f)
 1224              		.loc 19 1619 5 view .LVU247
1620:Veno-Echo.cpp ****     {
1621:Veno-Echo.cpp ****         output = 1.0f;
 1225              		.loc 19 1621 16 is_stmt 0 view .LVU248
 1226 0044 F4EE667A 		vcmp.f32	s15, s13
 1227 0048 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1228 004c 36FEA70A 		vselgt.f32	s0, s13, s15
 1229              	.LVL49:
 1230              	.L52:
1622:Veno-Echo.cpp ****     }
1623:Veno-Echo.cpp **** 
1624:Veno-Echo.cpp ****     return output;
 1231              		.loc 19 1624 5 is_stmt 1 view .LVU249
 1232              		.loc 19 1624 5 is_stmt 0 view .LVU250
 1233              	.LBE848:
 1234              	.LBE851:
 927:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 1235              		.loc 19 927 37 view .LVU251
 1236 0050 B7EE041A 		vmov.f32	s2, #1.25e+0
 1237 0054 0020     		movs	r0, #0
 1238 0056 DFED240A 		vldr.32	s1, .L60+16
 1239 005a FFF7FEFF 		bl	_Z5scalefff9CurveType
 1240              	.LVL50:
 928:Veno-Echo.cpp ****     }
 1241              		.loc 19 928 9 is_stmt 1 view .LVU252
 1242              	.LBB852:
 1243              	.LBI852:
 1244              		.file 21 "../DaisySP/Source/Utility/dsp.h"
   1:../DaisySP/Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../DaisySP/Source/Utility/dsp.h **** */
   3:../DaisySP/Source/Utility/dsp.h **** #pragma once
   4:../DaisySP/Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
   5:../DaisySP/Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../DaisySP/Source/Utility/dsp.h **** #include <cassert>
   7:../DaisySP/Source/Utility/dsp.h **** #include <cstdint>
   8:../DaisySP/Source/Utility/dsp.h **** #include <random>
   9:../DaisySP/Source/Utility/dsp.h **** #include <cmath>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 68


  10:../DaisySP/Source/Utility/dsp.h **** 
  11:../DaisySP/Source/Utility/dsp.h **** /** PIs
  12:../DaisySP/Source/Utility/dsp.h **** */
  13:../DaisySP/Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../DaisySP/Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../DaisySP/Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../DaisySP/Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../DaisySP/Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  18:../DaisySP/Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../DaisySP/Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../DaisySP/Source/Utility/dsp.h **** 
  21:../DaisySP/Source/Utility/dsp.h **** namespace daisysp
  22:../DaisySP/Source/Utility/dsp.h **** {
  23:../DaisySP/Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../DaisySP/Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../DaisySP/Source/Utility/dsp.h **** 
  26:../DaisySP/Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../DaisySP/Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../DaisySP/Source/Utility/dsp.h **** 
  29:../DaisySP/Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../DaisySP/Source/Utility/dsp.h **** c/o stephen mccaul
  31:../DaisySP/Source/Utility/dsp.h **** */
  32:../DaisySP/Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../DaisySP/Source/Utility/dsp.h **** {
  34:../DaisySP/Source/Utility/dsp.h ****     float r;
  35:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  36:../DaisySP/Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../DaisySP/Source/Utility/dsp.h **** #else
  38:../DaisySP/Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  40:../DaisySP/Source/Utility/dsp.h ****     return r;
  41:../DaisySP/Source/Utility/dsp.h **** }
  42:../DaisySP/Source/Utility/dsp.h **** 
  43:../DaisySP/Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../DaisySP/Source/Utility/dsp.h **** {
  45:../DaisySP/Source/Utility/dsp.h ****     float r;
  46:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  47:../DaisySP/Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  48:../DaisySP/Source/Utility/dsp.h **** #else
  49:../DaisySP/Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  50:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  51:../DaisySP/Source/Utility/dsp.h ****     return r;
  52:../DaisySP/Source/Utility/dsp.h **** }
  53:../DaisySP/Source/Utility/dsp.h **** 
  54:../DaisySP/Source/Utility/dsp.h **** /** quick fp clamp
  55:../DaisySP/Source/Utility/dsp.h **** */
  56:../DaisySP/Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../DaisySP/Source/Utility/dsp.h **** {
  58:../DaisySP/Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../DaisySP/Source/Utility/dsp.h **** }
  60:../DaisySP/Source/Utility/dsp.h **** 
  61:../DaisySP/Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  62:../DaisySP/Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../DaisySP/Source/Utility/dsp.h **** These are approximations
  64:../DaisySP/Source/Utility/dsp.h **** */
  65:../DaisySP/Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../DaisySP/Source/Utility/dsp.h **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 69


  67:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  68:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  70:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../DaisySP/Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  74:../DaisySP/Source/Utility/dsp.h ****     return f;
  75:../DaisySP/Source/Utility/dsp.h **** }
  76:../DaisySP/Source/Utility/dsp.h **** 
  77:../DaisySP/Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  78:../DaisySP/Source/Utility/dsp.h **** {
  79:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  80:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  82:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../DaisySP/Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  86:../DaisySP/Source/Utility/dsp.h ****     return f;
  87:../DaisySP/Source/Utility/dsp.h **** }
  88:../DaisySP/Source/Utility/dsp.h **** 
  89:../DaisySP/Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../DaisySP/Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../DaisySP/Source/Utility/dsp.h **** */
  92:../DaisySP/Source/Utility/dsp.h **** inline float pow10f(float f)
  93:../DaisySP/Source/Utility/dsp.h **** {
  94:../DaisySP/Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../DaisySP/Source/Utility/dsp.h **** }
  96:../DaisySP/Source/Utility/dsp.h **** 
  97:../DaisySP/Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../DaisySP/Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../DaisySP/Source/Utility/dsp.h **** */
 100:../DaisySP/Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../DaisySP/Source/Utility/dsp.h **** {
 102:../DaisySP/Source/Utility/dsp.h ****     float frac;
 103:../DaisySP/Source/Utility/dsp.h ****     int   exp;
 104:../DaisySP/Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../DaisySP/Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 107:../DaisySP/Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 109:../DaisySP/Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 111:../DaisySP/Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../DaisySP/Source/Utility/dsp.h ****     f += exp;
 113:../DaisySP/Source/Utility/dsp.h ****     return (f);
 114:../DaisySP/Source/Utility/dsp.h **** }
 115:../DaisySP/Source/Utility/dsp.h **** 
 116:../DaisySP/Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../DaisySP/Source/Utility/dsp.h **** {
 118:../DaisySP/Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 119:../DaisySP/Source/Utility/dsp.h **** }
 120:../DaisySP/Source/Utility/dsp.h **** 
 121:../DaisySP/Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../DaisySP/Source/Utility/dsp.h **** */
 123:../DaisySP/Source/Utility/dsp.h **** inline float mtof(float m)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 70


 124:../DaisySP/Source/Utility/dsp.h **** {
 125:../DaisySP/Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 126:../DaisySP/Source/Utility/dsp.h **** }
 127:../DaisySP/Source/Utility/dsp.h **** 
 128:../DaisySP/Source/Utility/dsp.h **** 
 129:../DaisySP/Source/Utility/dsp.h **** /** one pole lpf
 130:../DaisySP/Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 131:../DaisySP/Source/Utility/dsp.h **** calls to properly filter the signal
 132:../DaisySP/Source/Utility/dsp.h **** coeff can be calculated:
 133:../DaisySP/Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 134:../DaisySP/Source/Utility/dsp.h **** */
 135:../DaisySP/Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 1245              		.loc 21 135 13 view .LVU253
 1246              	.LBB853:
 136:../DaisySP/Source/Utility/dsp.h **** {
 137:../DaisySP/Source/Utility/dsp.h ****     out += coeff * (in - out);
 1247              		.loc 21 137 5 view .LVU254
 1248              		.loc 21 137 9 is_stmt 0 view .LVU255
 1249 005e 234B     		ldr	r3, .L60+20
 1250 0060 9FED237A 		vldr.32	s14, .L60+24
 1251 0064 D3ED007A 		vldr.32	s15, [r3]
 1252              		.loc 21 137 24 view .LVU256
 1253 0068 30EE670A 		vsub.f32	s0, s0, s15
 1254              	.LVL51:
 1255              		.loc 21 137 9 view .LVU257
 1256 006c E0EE077A 		vfma.f32	s15, s0, s14
 1257 0070 C3ED007A 		vstr.32	s15, [r3]
 1258              	.LVL52:
 1259              	.L50:
 1260              		.loc 21 137 9 view .LVU258
 1261              	.LBE853:
 1262              	.LBE852:
 1263              	.LBE844:
 1264              	.LBE861:
 943:Veno-Echo.cpp **** 
 1265              		.loc 19 943 1 view .LVU259
 1266 0074 10BD     		pop	{r4, pc}
 1267              	.LVL53:
 1268              	.L51:
 1269              	.LBB862:
 1270              	.LBB855:
 932:Veno-Echo.cpp ****         if (abs(feedbackL_Pot_Last - feedbackL_Pot) > altControlThresh)
 1271              		.loc 19 932 9 is_stmt 1 view .LVU260
 933:Veno-Echo.cpp ****         {
 1272              		.loc 19 933 9 view .LVU261
 1273              	.LBB856:
 1274              	.LBI856:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1275              		.loc 20 75 3 view .LVU262
 1276              	.LBB857:
 1277              		.loc 20 76 5 view .LVU263
 1278              		.loc 20 76 5 is_stmt 0 view .LVU264
 1279              	.LBE857:
 1280              	.LBE856:
 933:Veno-Echo.cpp ****         {
 1281              		.loc 19 933 16 view .LVU265
 1282 0076 1B4B     		ldr	r3, .L60+12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 71


 933:Veno-Echo.cpp ****         {
 1283              		.loc 19 933 9 view .LVU266
 1284 0078 DFED1E6A 		vldr.32	s13, .L60+28
 933:Veno-Echo.cpp ****         {
 1285              		.loc 19 933 16 view .LVU267
 1286 007c 93ED007A 		vldr.32	s14, [r3]
 1287 0080 77EE407A 		vsub.f32	s15, s14, s0
 1288              	.LBB859:
 1289              	.LBB858:
 1290              		.loc 20 76 31 view .LVU268
 1291 0084 F0EEE77A 		vabs.f32	s15, s15
 1292              	.LBE858:
 1293              	.LBE859:
 933:Veno-Echo.cpp ****         {
 1294              		.loc 19 933 9 view .LVU269
 1295 0088 F4EEE67A 		vcmpe.f32	s15, s13
 1296 008c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1297 0090 F0DD     		ble	.L50
 935:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 1298              		.loc 19 935 13 is_stmt 1 view .LVU270
 935:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 1299              		.loc 19 935 29 is_stmt 0 view .LVU271
 1300 0092 9FED191A 		vldr.32	s2, .L60+32
 1301 0096 0120     		movs	r0, #1
 1302 0098 DFED180A 		vldr.32	s1, .L60+36
 935:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 1303              		.loc 19 935 22 view .LVU272
 1304 009c 184C     		ldr	r4, .L60+40
 935:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 1305              		.loc 19 935 29 view .LVU273
 1306 009e FFF7FEFF 		bl	_Z5scalefff9CurveType
 1307              	.LVL54:
 936:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 1308              		.loc 19 936 26 view .LVU274
 1309 00a2 1848     		ldr	r0, .L60+44
 935:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 1310              		.loc 19 935 22 view .LVU275
 1311 00a4 84ED000A 		vstr.32	s0, [r4]
 936:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 1312              		.loc 19 936 13 is_stmt 1 view .LVU276
 936:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 1313              		.loc 19 936 26 is_stmt 0 view .LVU277
 1314 00a8 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1315              	.LVL55:
 937:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 1316              		.loc 19 937 13 is_stmt 1 view .LVU278
 937:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 1317              		.loc 19 937 26 is_stmt 0 view .LVU279
 1318 00ac 94ED000A 		vldr.32	s0, [r4]
 1319 00b0 1548     		ldr	r0, .L60+48
 1320 00b2 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1321              	.LVL56:
 938:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 1322              		.loc 19 938 13 is_stmt 1 view .LVU280
 938:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 1323              		.loc 19 938 31 is_stmt 0 view .LVU281
 1324 00b6 94ED000A 		vldr.32	s0, [r4]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 72


 1325 00ba 1448     		ldr	r0, .L60+52
 1326 00bc FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1327              	.LVL57:
 939:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 1328              		.loc 19 939 13 is_stmt 1 view .LVU282
 939:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 1329              		.loc 19 939 31 is_stmt 0 view .LVU283
 1330 00c0 94ED000A 		vldr.32	s0, [r4]
 1331 00c4 1248     		ldr	r0, .L60+56
 1332 00c6 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1333              	.LVL58:
 940:Veno-Echo.cpp ****         }
 1334              		.loc 19 940 13 is_stmt 1 view .LVU284
 940:Veno-Echo.cpp ****         }
 1335              		.loc 19 940 35 is_stmt 0 view .LVU285
 1336 00ca 2268     		ldr	r2, [r4]	@ float
 1337 00cc 114B     		ldr	r3, .L60+60
 1338 00ce 1A61     		str	r2, [r3, #16]	@ float
 1339              	.LBE855:
 1340              	.LBE862:
 943:Veno-Echo.cpp **** 
 1341              		.loc 19 943 1 view .LVU286
 1342 00d0 10BD     		pop	{r4, pc}
 1343              	.LVL59:
 1344              	.L56:
 1345              	.LBB863:
 1346              	.LBB860:
 1347              	.LBB854:
 1348              	.LBB849:
1616:Veno-Echo.cpp ****     }
 1349              		.loc 19 1616 16 view .LVU287
 1350 00d2 9FED050A 		vldr.32	s0, .L60+16
 1351              	.LVL60:
1616:Veno-Echo.cpp ****     }
 1352              		.loc 19 1616 16 view .LVU288
 1353 00d6 BBE7     		b	.L52
 1354              	.L61:
 1355              		.align	2
 1356              	.L60:
 1357 00d8 18000000 		.word	.LANCHOR4+24
 1358 00dc 00000000 		.word	.LANCHOR8
 1359 00e0 00000000 		.word	.LANCHOR7
 1360 00e4 00000000 		.word	.LANCHOR9
 1361 00e8 00000000 		.word	0
 1362 00ec 00000000 		.word	.LANCHOR10
 1363 00f0 6F12033D 		.word	1023611503
 1364 00f4 0AD7A33B 		.word	1000593162
 1365 00f8 00004844 		.word	1145569280
 1366 00fc 0000C842 		.word	1120403456
 1367 0100 00000000 		.word	.LANCHOR11
 1368 0104 00000000 		.word	.LANCHOR12
 1369 0108 00000000 		.word	.LANCHOR13
 1370 010c 00000000 		.word	.LANCHOR14
 1371 0110 00000000 		.word	.LANCHOR15
 1372 0114 00000000 		.word	.LANCHOR16
 1373              	.LBE849:
 1374              	.LBE854:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 73


 1375              	.LBE860:
 1376              	.LBE863:
 1377              		.cfi_endproc
 1378              	.LFE4296:
 1380              		.section	.text._Z19Update_feedbackR_CVv,"ax",%progbits
 1381              		.align	1
 1382              		.p2align 2,,3
 1383              		.global	_Z19Update_feedbackR_CVv
 1384              		.syntax unified
 1385              		.thumb
 1386              		.thumb_func
 1387              		.fpu fpv5-d16
 1389              	_Z19Update_feedbackR_CVv:
 1390              	.LFB4297:
 946:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 1391              		.loc 19 946 1 is_stmt 1 view -0
 1392              		.cfi_startproc
 1393              		@ args = 0, pretend = 0, frame = 0
 1394              		@ frame_needed = 0, uses_anonymous_args = 0
 947:Veno-Echo.cpp **** }
 1395              		.loc 19 947 5 view .LVU290
 946:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 1396              		.loc 19 946 1 is_stmt 0 view .LVU291
 1397 0000 08B5     		push	{r3, lr}
 1398              		.cfi_def_cfa_offset 8
 1399              		.cfi_offset 3, -8
 1400              		.cfi_offset 14, -4
 947:Veno-Echo.cpp **** }
 1401              		.loc 19 947 35 view .LVU292
 1402 0002 0321     		movs	r1, #3
 1403 0004 0348     		ldr	r0, .L64
 1404 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1405              	.LVL61:
 947:Veno-Echo.cpp **** }
 1406              		.loc 19 947 18 view .LVU293
 1407 000a 034B     		ldr	r3, .L64+4
 1408 000c 83ED000A 		vstr.32	s0, [r3]
 948:Veno-Echo.cpp **** 
 1409              		.loc 19 948 1 view .LVU294
 1410 0010 08BD     		pop	{r3, pc}
 1411              	.L65:
 1412 0012 00BF     		.align	2
 1413              	.L64:
 1414 0014 18000000 		.word	.LANCHOR4+24
 1415 0018 00000000 		.word	.LANCHOR17
 1416              		.cfi_endproc
 1417              	.LFE4297:
 1419              		.section	.text._Z16Update_feedbackRv,"ax",%progbits
 1420              		.align	1
 1421              		.p2align 2,,3
 1422              		.global	_Z16Update_feedbackRv
 1423              		.syntax unified
 1424              		.thumb
 1425              		.thumb_func
 1426              		.fpu fpv5-d16
 1428              	_Z16Update_feedbackRv:
 1429              	.LFB4298:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 74


 951:Veno-Echo.cpp ****     float feedbackR_Pot{hw.adc.GetMuxFloat(7,4)};
 1430              		.loc 19 951 1 is_stmt 1 view -0
 1431              		.cfi_startproc
 1432              		@ args = 0, pretend = 0, frame = 0
 1433              		@ frame_needed = 0, uses_anonymous_args = 0
 952:Veno-Echo.cpp ****     static float feedbackR_Pot_Last{};
 1434              		.loc 19 952 5 view .LVU296
 952:Veno-Echo.cpp ****     static float feedbackR_Pot_Last{};
 1435              		.loc 19 952 43 is_stmt 0 view .LVU297
 1436 0000 0422     		movs	r2, #4
 1437 0002 0721     		movs	r1, #7
 1438 0004 3448     		ldr	r0, .L76
 951:Veno-Echo.cpp ****     float feedbackR_Pot{hw.adc.GetMuxFloat(7,4)};
 1439              		.loc 19 951 1 view .LVU298
 1440 0006 10B5     		push	{r4, lr}
 1441              		.cfi_def_cfa_offset 8
 1442              		.cfi_offset 4, -8
 1443              		.cfi_offset 14, -4
 952:Veno-Echo.cpp ****     static float feedbackR_Pot_Last{};
 1444              		.loc 19 952 43 view .LVU299
 1445 0008 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1446              	.LVL62:
 1447              	.LBB864:
 955:Veno-Echo.cpp ****     {   
 1448              		.loc 19 955 9 view .LVU300
 1449 000c 334B     		ldr	r3, .L76+4
 1450              	.LBE864:
 952:Veno-Echo.cpp ****     static float feedbackR_Pot_Last{};
 1451              		.loc 19 952 43 view .LVU301
 1452 000e F0EE407A 		vmov.f32	s15, s0
 1453              	.LVL63:
 953:Veno-Echo.cpp **** 
 1454              		.loc 19 953 5 is_stmt 1 view .LVU302
 955:Veno-Echo.cpp ****     {   
 1455              		.loc 19 955 5 view .LVU303
 1456              	.LBB882:
 1457 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1458 0014 7BBB     		cbnz	r3, .L67
 1459              	.LBB865:
 958:Veno-Echo.cpp **** 
 1460              		.loc 19 958 9 view .LVU304
 960:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 1461              		.loc 19 960 37 is_stmt 0 view .LVU305
 1462 0016 324A     		ldr	r2, .L76+8
 1463              	.LBB866:
 1464              	.LBB867:
1612:Veno-Echo.cpp **** 
 1465              		.loc 19 1612 39 view .LVU306
 1466 0018 F7EE006A 		vmov.f32	s13, #1.0e+0
1612:Veno-Echo.cpp **** 
 1467              		.loc 19 1612 49 view .LVU307
 1468 001c F6EE005A 		vmov.f32	s11, #5.0e-1
 1469              	.LBE867:
 1470              	.LBE866:
 958:Veno-Echo.cpp **** 
 1471              		.loc 19 958 28 view .LVU308
 1472 0020 304B     		ldr	r3, .L76+12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 75


 1473              	.LBB871:
 1474              	.LBB868:
1612:Veno-Echo.cpp **** 
 1475              		.loc 19 1612 39 view .LVU309
 1476 0022 92ED007A 		vldr.32	s14, [r2]
1612:Veno-Echo.cpp **** 
 1477              		.loc 19 1612 12 view .LVU310
 1478 0026 B0EE006A 		vmov.f32	s12, #2.0e+0
 1479              	.LBE868:
 1480              	.LBE871:
 958:Veno-Echo.cpp **** 
 1481              		.loc 19 958 28 view .LVU311
 1482 002a 83ED000A 		vstr.32	s0, [r3]
 960:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 1483              		.loc 19 960 9 is_stmt 1 view .LVU312
 1484              	.LVL64:
 1485              	.LBB872:
 1486              	.LBI866:
1609:Veno-Echo.cpp **** {
 1487              		.loc 19 1609 7 view .LVU313
 1488              	.LBB869:
1611:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1489              		.loc 19 1611 5 view .LVU314
1612:Veno-Echo.cpp **** 
 1490              		.loc 19 1612 5 view .LVU315
1612:Veno-Echo.cpp **** 
 1491              		.loc 19 1612 39 is_stmt 0 view .LVU316
 1492 002e 36EEC77A 		vsub.f32	s14, s13, s14
 1493              	.LVL65:
1612:Veno-Echo.cpp **** 
 1494              		.loc 19 1612 49 view .LVU317
 1495 0032 37EE657A 		vsub.f32	s14, s14, s11
1612:Veno-Echo.cpp **** 
 1496              		.loc 19 1612 12 view .LVU318
 1497 0036 E7EE067A 		vfma.f32	s15, s14, s12
 1498              	.LVL66:
1614:Veno-Echo.cpp ****     {
 1499              		.loc 19 1614 5 is_stmt 1 view .LVU319
 1500 003a F5EEC07A 		vcmpe.f32	s15, #0
 1501 003e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1502 0042 46D4     		bmi	.L72
1619:Veno-Echo.cpp ****     {
 1503              		.loc 19 1619 5 view .LVU320
1621:Veno-Echo.cpp ****     }
 1504              		.loc 19 1621 16 is_stmt 0 view .LVU321
 1505 0044 F4EE667A 		vcmp.f32	s15, s13
 1506 0048 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1507 004c 36FEA70A 		vselgt.f32	s0, s13, s15
 1508              	.LVL67:
 1509              	.L68:
 1510              		.loc 19 1624 5 is_stmt 1 view .LVU322
 1511              		.loc 19 1624 5 is_stmt 0 view .LVU323
 1512              	.LBE869:
 1513              	.LBE872:
 960:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 1514              		.loc 19 960 37 view .LVU324
 1515 0050 B7EE041A 		vmov.f32	s2, #1.25e+0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 76


 1516 0054 0020     		movs	r0, #0
 1517 0056 DFED240A 		vldr.32	s1, .L76+16
 1518 005a FFF7FEFF 		bl	_Z5scalefff9CurveType
 1519              	.LVL68:
 961:Veno-Echo.cpp ****     }
 1520              		.loc 19 961 9 is_stmt 1 view .LVU325
 1521              	.LBB873:
 1522              	.LBI873:
 135:../DaisySP/Source/Utility/dsp.h **** {
 1523              		.loc 21 135 13 view .LVU326
 1524              	.LBB874:
 1525              		.loc 21 137 5 view .LVU327
 1526              		.loc 21 137 9 is_stmt 0 view .LVU328
 1527 005e 234B     		ldr	r3, .L76+20
 1528 0060 9FED237A 		vldr.32	s14, .L76+24
 1529 0064 D3ED007A 		vldr.32	s15, [r3]
 1530              		.loc 21 137 24 view .LVU329
 1531 0068 30EE670A 		vsub.f32	s0, s0, s15
 1532              	.LVL69:
 1533              		.loc 21 137 9 view .LVU330
 1534 006c E0EE077A 		vfma.f32	s15, s0, s14
 1535 0070 C3ED007A 		vstr.32	s15, [r3]
 1536              	.LVL70:
 1537              	.L66:
 1538              		.loc 21 137 9 view .LVU331
 1539              	.LBE874:
 1540              	.LBE873:
 1541              	.LBE865:
 1542              	.LBE882:
 976:Veno-Echo.cpp **** 
 1543              		.loc 19 976 1 view .LVU332
 1544 0074 10BD     		pop	{r4, pc}
 1545              	.LVL71:
 1546              	.L67:
 1547              	.LBB883:
 1548              	.LBB876:
 965:Veno-Echo.cpp ****         if (abs(feedbackR_Pot_Last - feedbackR_Pot) > altControlThresh)
 1549              		.loc 19 965 9 is_stmt 1 view .LVU333
 966:Veno-Echo.cpp ****         {
 1550              		.loc 19 966 9 view .LVU334
 1551              	.LBB877:
 1552              	.LBI877:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1553              		.loc 20 75 3 view .LVU335
 1554              	.LBB878:
 1555              		.loc 20 76 5 view .LVU336
 1556              		.loc 20 76 5 is_stmt 0 view .LVU337
 1557              	.LBE878:
 1558              	.LBE877:
 966:Veno-Echo.cpp ****         {
 1559              		.loc 19 966 16 view .LVU338
 1560 0076 1B4B     		ldr	r3, .L76+12
 966:Veno-Echo.cpp ****         {
 1561              		.loc 19 966 9 view .LVU339
 1562 0078 DFED1E6A 		vldr.32	s13, .L76+28
 966:Veno-Echo.cpp ****         {
 1563              		.loc 19 966 16 view .LVU340
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 77


 1564 007c 93ED007A 		vldr.32	s14, [r3]
 1565 0080 77EE407A 		vsub.f32	s15, s14, s0
 1566              	.LBB880:
 1567              	.LBB879:
 1568              		.loc 20 76 31 view .LVU341
 1569 0084 F0EEE77A 		vabs.f32	s15, s15
 1570              	.LBE879:
 1571              	.LBE880:
 966:Veno-Echo.cpp ****         {
 1572              		.loc 19 966 9 view .LVU342
 1573 0088 F4EEE67A 		vcmpe.f32	s15, s13
 1574 008c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1575 0090 F0DD     		ble	.L66
 968:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 1576              		.loc 19 968 13 is_stmt 1 view .LVU343
 968:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 1577              		.loc 19 968 29 is_stmt 0 view .LVU344
 1578 0092 9FED191A 		vldr.32	s2, .L76+32
 1579 0096 0120     		movs	r0, #1
 1580 0098 DFED180A 		vldr.32	s1, .L76+36
 968:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 1581              		.loc 19 968 22 view .LVU345
 1582 009c 184C     		ldr	r4, .L76+40
 968:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 1583              		.loc 19 968 29 view .LVU346
 1584 009e FFF7FEFF 		bl	_Z5scalefff9CurveType
 1585              	.LVL72:
 969:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 1586              		.loc 19 969 26 view .LVU347
 1587 00a2 1848     		ldr	r0, .L76+44
 968:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 1588              		.loc 19 968 22 view .LVU348
 1589 00a4 84ED000A 		vstr.32	s0, [r4]
 969:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 1590              		.loc 19 969 13 is_stmt 1 view .LVU349
 969:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 1591              		.loc 19 969 26 is_stmt 0 view .LVU350
 1592 00a8 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1593              	.LVL73:
 970:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 1594              		.loc 19 970 13 is_stmt 1 view .LVU351
 970:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 1595              		.loc 19 970 26 is_stmt 0 view .LVU352
 1596 00ac 94ED000A 		vldr.32	s0, [r4]
 1597 00b0 1548     		ldr	r0, .L76+48
 1598 00b2 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1599              	.LVL74:
 971:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 1600              		.loc 19 971 13 is_stmt 1 view .LVU353
 971:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 1601              		.loc 19 971 31 is_stmt 0 view .LVU354
 1602 00b6 94ED000A 		vldr.32	s0, [r4]
 1603 00ba 1448     		ldr	r0, .L76+52
 1604 00bc FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1605              	.LVL75:
 972:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 1606              		.loc 19 972 13 is_stmt 1 view .LVU355
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 78


 972:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 1607              		.loc 19 972 31 is_stmt 0 view .LVU356
 1608 00c0 94ED000A 		vldr.32	s0, [r4]
 1609 00c4 1248     		ldr	r0, .L76+56
 1610 00c6 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 1611              	.LVL76:
 973:Veno-Echo.cpp ****         }
 1612              		.loc 19 973 13 is_stmt 1 view .LVU357
 973:Veno-Echo.cpp ****         }
 1613              		.loc 19 973 35 is_stmt 0 view .LVU358
 1614 00ca 2268     		ldr	r2, [r4]	@ float
 1615 00cc 114B     		ldr	r3, .L76+60
 1616 00ce 5A61     		str	r2, [r3, #20]	@ float
 1617              	.LBE876:
 1618              	.LBE883:
 976:Veno-Echo.cpp **** 
 1619              		.loc 19 976 1 view .LVU359
 1620 00d0 10BD     		pop	{r4, pc}
 1621              	.LVL77:
 1622              	.L72:
 1623              	.LBB884:
 1624              	.LBB881:
 1625              	.LBB875:
 1626              	.LBB870:
1616:Veno-Echo.cpp ****     }
 1627              		.loc 19 1616 16 view .LVU360
 1628 00d2 9FED050A 		vldr.32	s0, .L76+16
 1629              	.LVL78:
1616:Veno-Echo.cpp ****     }
 1630              		.loc 19 1616 16 view .LVU361
 1631 00d6 BBE7     		b	.L68
 1632              	.L77:
 1633              		.align	2
 1634              	.L76:
 1635 00d8 18000000 		.word	.LANCHOR4+24
 1636 00dc 00000000 		.word	.LANCHOR8
 1637 00e0 00000000 		.word	.LANCHOR17
 1638 00e4 00000000 		.word	.LANCHOR18
 1639 00e8 00000000 		.word	0
 1640 00ec 00000000 		.word	.LANCHOR19
 1641 00f0 6F12033D 		.word	1023611503
 1642 00f4 0AD7A33B 		.word	1000593162
 1643 00f8 00803B46 		.word	1178304512
 1644 00fc 0080BB44 		.word	1153138688
 1645 0100 00000000 		.word	.LANCHOR20
 1646 0104 00000000 		.word	.LANCHOR21
 1647 0108 00000000 		.word	.LANCHOR22
 1648 010c 00000000 		.word	.LANCHOR23
 1649 0110 00000000 		.word	.LANCHOR24
 1650 0114 00000000 		.word	.LANCHOR16
 1651              	.LBE870:
 1652              	.LBE875:
 1653              	.LBE881:
 1654              	.LBE884:
 1655              		.cfi_endproc
 1656              	.LFE4298:
 1658              		.section	.text._Z16Update_drywet_CVv,"ax",%progbits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 79


 1659              		.align	1
 1660              		.p2align 2,,3
 1661              		.global	_Z16Update_drywet_CVv
 1662              		.syntax unified
 1663              		.thumb
 1664              		.thumb_func
 1665              		.fpu fpv5-d16
 1667              	_Z16Update_drywet_CVv:
 1668              	.LFB4299:
 979:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 1669              		.loc 19 979 1 is_stmt 1 view -0
 1670              		.cfi_startproc
 1671              		@ args = 0, pretend = 0, frame = 0
 1672              		@ frame_needed = 0, uses_anonymous_args = 0
 980:Veno-Echo.cpp **** }
 1673              		.loc 19 980 5 view .LVU363
 979:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 1674              		.loc 19 979 1 is_stmt 0 view .LVU364
 1675 0000 08B5     		push	{r3, lr}
 1676              		.cfi_def_cfa_offset 8
 1677              		.cfi_offset 3, -8
 1678              		.cfi_offset 14, -4
 980:Veno-Echo.cpp **** }
 1679              		.loc 19 980 32 view .LVU365
 1680 0002 0421     		movs	r1, #4
 1681 0004 0348     		ldr	r0, .L80
 1682 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1683              	.LVL79:
 980:Veno-Echo.cpp **** }
 1684              		.loc 19 980 15 view .LVU366
 1685 000a 034B     		ldr	r3, .L80+4
 1686 000c 83ED000A 		vstr.32	s0, [r3]
 981:Veno-Echo.cpp **** 
 1687              		.loc 19 981 1 view .LVU367
 1688 0010 08BD     		pop	{r3, pc}
 1689              	.L81:
 1690 0012 00BF     		.align	2
 1691              	.L80:
 1692 0014 18000000 		.word	.LANCHOR4+24
 1693 0018 00000000 		.word	.LANCHOR25
 1694              		.cfi_endproc
 1695              	.LFE4299:
 1697              		.section	.text._Z13Update_drywetv,"ax",%progbits
 1698              		.align	1
 1699              		.p2align 2,,3
 1700              		.global	_Z13Update_drywetv
 1701              		.syntax unified
 1702              		.thumb
 1703              		.thumb_func
 1704              		.fpu fpv5-d16
 1706              	_Z13Update_drywetv:
 1707              	.LFB4300:
 984:Veno-Echo.cpp ****     //get pot values:
 1708              		.loc 19 984 1 is_stmt 1 view -0
 1709              		.cfi_startproc
 1710              		@ args = 0, pretend = 0, frame = 0
 1711              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 80


 987:Veno-Echo.cpp **** 
 1712              		.loc 19 987 5 view .LVU369
 987:Veno-Echo.cpp **** 
 1713              		.loc 19 987 40 is_stmt 0 view .LVU370
 1714 0000 0522     		movs	r2, #5
 1715 0002 0721     		movs	r1, #7
 1716 0004 4C48     		ldr	r0, .L94+16
 984:Veno-Echo.cpp ****     //get pot values:
 1717              		.loc 19 984 1 view .LVU371
 1718 0006 10B5     		push	{r4, lr}
 1719              		.cfi_def_cfa_offset 8
 1720              		.cfi_offset 4, -8
 1721              		.cfi_offset 14, -4
 987:Veno-Echo.cpp **** 
 1722              		.loc 19 987 40 view .LVU372
 1723 0008 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1724              	.LVL80:
 1725              	.LBB885:
 991:Veno-Echo.cpp ****     {   
 1726              		.loc 19 991 9 view .LVU373
 1727 000c 4B4B     		ldr	r3, .L94+20
 1728              	.LBE885:
 987:Veno-Echo.cpp **** 
 1729              		.loc 19 987 40 view .LVU374
 1730 000e F0EE407A 		vmov.f32	s15, s0
 1731              	.LVL81:
 989:Veno-Echo.cpp **** 
 1732              		.loc 19 989 5 is_stmt 1 view .LVU375
 991:Veno-Echo.cpp ****     {   
 1733              		.loc 19 991 5 view .LVU376
 1734              	.LBB903:
 1735 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1736 0014 3BBB     		cbnz	r3, .L83
 1737              	.LBB886:
 994:Veno-Echo.cpp **** 
 1738              		.loc 19 994 9 view .LVU377
 996:Veno-Echo.cpp **** 
 1739              		.loc 19 996 37 is_stmt 0 view .LVU378
 1740 0016 4A4A     		ldr	r2, .L94+24
 1741              	.LBB887:
 1742              	.LBB888:
1612:Veno-Echo.cpp **** 
 1743              		.loc 19 1612 39 view .LVU379
 1744 0018 B7EE001A 		vmov.f32	s2, #1.0e+0
1612:Veno-Echo.cpp **** 
 1745              		.loc 19 1612 49 view .LVU380
 1746 001c B6EE006A 		vmov.f32	s12, #5.0e-1
 1747              	.LBE888:
 1748              	.LBE887:
 994:Veno-Echo.cpp **** 
 1749              		.loc 19 994 25 view .LVU381
 1750 0020 484B     		ldr	r3, .L94+28
 1751              	.LBB892:
 1752              	.LBB889:
1612:Veno-Echo.cpp **** 
 1753              		.loc 19 1612 39 view .LVU382
 1754 0022 92ED007A 		vldr.32	s14, [r2]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 81


1612:Veno-Echo.cpp **** 
 1755              		.loc 19 1612 12 view .LVU383
 1756 0026 F0EE006A 		vmov.f32	s13, #2.0e+0
 1757              	.LBE889:
 1758              	.LBE892:
 994:Veno-Echo.cpp **** 
 1759              		.loc 19 994 25 view .LVU384
 1760 002a 83ED000A 		vstr.32	s0, [r3]
 996:Veno-Echo.cpp **** 
 1761              		.loc 19 996 9 is_stmt 1 view .LVU385
 1762              	.LVL82:
 1763              	.LBB893:
 1764              	.LBI887:
1609:Veno-Echo.cpp **** {
 1765              		.loc 19 1609 7 view .LVU386
 1766              	.LBB890:
1611:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1767              		.loc 19 1611 5 view .LVU387
1612:Veno-Echo.cpp **** 
 1768              		.loc 19 1612 5 view .LVU388
1612:Veno-Echo.cpp **** 
 1769              		.loc 19 1612 39 is_stmt 0 view .LVU389
 1770 002e 31EE477A 		vsub.f32	s14, s2, s14
 1771              	.LVL83:
1612:Veno-Echo.cpp **** 
 1772              		.loc 19 1612 49 view .LVU390
 1773 0032 37EE467A 		vsub.f32	s14, s14, s12
1612:Veno-Echo.cpp **** 
 1774              		.loc 19 1612 12 view .LVU391
 1775 0036 E7EE267A 		vfma.f32	s15, s14, s13
 1776              	.LVL84:
1614:Veno-Echo.cpp ****     {
 1777              		.loc 19 1614 5 is_stmt 1 view .LVU392
 1778 003a F5EEC07A 		vcmpe.f32	s15, #0
 1779 003e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1780 0042 52D4     		bmi	.L90
1619:Veno-Echo.cpp ****     {
 1781              		.loc 19 1619 5 view .LVU393
 1782 0044 F4EEC17A 		vcmpe.f32	s15, s2
 1783 0048 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1784 004c 50DD     		ble	.L93
 1785              	.LVL85:
 1786              	.L84:
1619:Veno-Echo.cpp ****     {
 1787              		.loc 19 1619 5 is_stmt 0 view .LVU394
 1788              	.LBE890:
 1789              	.LBE893:
1013:Veno-Echo.cpp ****     }
 1790              		.loc 19 1013 9 is_stmt 1 view .LVU395
 1791              	.LBB894:
 1792              	.LBI894:
 135:../DaisySP/Source/Utility/dsp.h **** {
 1793              		.loc 21 135 13 view .LVU396
 1794              	.LBB895:
 1795              		.loc 21 137 5 view .LVU397
 1796              		.loc 21 137 9 is_stmt 0 view .LVU398
 1797 004e 3E4B     		ldr	r3, .L94+32
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 82


 1798 0050 9FED3E7A 		vldr.32	s14, .L94+36
 1799 0054 D3ED007A 		vldr.32	s15, [r3]
 1800              		.loc 21 137 24 view .LVU399
 1801 0058 31EE671A 		vsub.f32	s2, s2, s15
 1802              	.LVL86:
 1803              		.loc 21 137 9 view .LVU400
 1804 005c E1EE077A 		vfma.f32	s15, s2, s14
 1805 0060 C3ED007A 		vstr.32	s15, [r3]
 1806              	.LVL87:
 1807              	.L82:
 1808              		.loc 21 137 9 view .LVU401
 1809              	.LBE895:
 1810              	.LBE894:
 1811              	.LBE886:
 1812              	.LBE903:
1032:Veno-Echo.cpp **** 
 1813              		.loc 19 1032 1 view .LVU402
 1814 0064 10BD     		pop	{r4, pc}
 1815              	.LVL88:
 1816              	.L83:
 1817              	.LBB904:
 1818              	.LBB897:
1017:Veno-Echo.cpp ****         if (abs(drywet_Pot_Last - drywet_Pot) > altControlThresh)
 1819              		.loc 19 1017 9 is_stmt 1 view .LVU403
1018:Veno-Echo.cpp ****         {
 1820              		.loc 19 1018 9 view .LVU404
 1821              	.LBB898:
 1822              	.LBI898:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1823              		.loc 20 75 3 view .LVU405
 1824              	.LBB899:
 1825              		.loc 20 76 5 view .LVU406
 1826              		.loc 20 76 5 is_stmt 0 view .LVU407
 1827              	.LBE899:
 1828              	.LBE898:
1018:Veno-Echo.cpp ****         {
 1829              		.loc 19 1018 16 view .LVU408
 1830 0066 374B     		ldr	r3, .L94+28
1018:Veno-Echo.cpp ****         {
 1831              		.loc 19 1018 9 view .LVU409
 1832 0068 DFED396A 		vldr.32	s13, .L94+40
1018:Veno-Echo.cpp ****         {
 1833              		.loc 19 1018 16 view .LVU410
 1834 006c 93ED007A 		vldr.32	s14, [r3]
 1835 0070 77EE407A 		vsub.f32	s15, s14, s0
 1836              	.LBB901:
 1837              	.LBB900:
 1838              		.loc 20 76 31 view .LVU411
 1839 0074 F0EEE77A 		vabs.f32	s15, s15
 1840              	.LBE900:
 1841              	.LBE901:
1018:Veno-Echo.cpp ****         {
 1842              		.loc 19 1018 9 view .LVU412
 1843 0078 F4EEE67A 		vcmpe.f32	s15, s13
 1844 007c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1845 0080 F0DD     		ble	.L82
1020:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 83


 1846              		.loc 19 1020 13 is_stmt 1 view .LVU413
1020:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 1847              		.loc 19 1020 24 is_stmt 0 view .LVU414
 1848 0082 B6EE001A 		vmov.f32	s2, #5.0e-1
 1849 0086 DFED330A 		vldr.32	s1, .L94+44
1020:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 1850              		.loc 19 1020 17 view .LVU415
 1851 008a 334C     		ldr	r4, .L94+48
1020:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 1852              		.loc 19 1020 24 view .LVU416
 1853 008c 0020     		movs	r0, #0
 1854 008e FFF7FEFF 		bl	_Z5scalefff9CurveType
 1855              	.LVL89:
1021:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 1856              		.loc 19 1021 25 view .LVU417
 1857 0092 3248     		ldr	r0, .L94+52
1020:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 1858              		.loc 19 1020 17 view .LVU418
 1859 0094 84ED000A 		vstr.32	s0, [r4]
1021:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 1860              		.loc 19 1021 13 is_stmt 1 view .LVU419
1021:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 1861              		.loc 19 1021 25 is_stmt 0 view .LVU420
 1862 0098 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 1863              	.LVL90:
1022:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 1864              		.loc 19 1022 13 is_stmt 1 view .LVU421
1022:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 1865              		.loc 19 1022 25 is_stmt 0 view .LVU422
 1866 009c 94ED000A 		vldr.32	s0, [r4]
 1867 00a0 2F48     		ldr	r0, .L94+56
 1868 00a2 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 1869              	.LVL91:
1023:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 1870              		.loc 19 1023 13 is_stmt 1 view .LVU423
1023:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 1871              		.loc 19 1023 25 is_stmt 0 view .LVU424
 1872 00a6 94ED000A 		vldr.32	s0, [r4]
 1873 00aa 2E48     		ldr	r0, .L94+60
 1874 00ac FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 1875              	.LVL92:
1024:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 1876              		.loc 19 1024 13 is_stmt 1 view .LVU425
1024:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 1877              		.loc 19 1024 25 is_stmt 0 view .LVU426
 1878 00b0 94ED000A 		vldr.32	s0, [r4]
 1879 00b4 2C48     		ldr	r0, .L94+64
 1880 00b6 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 1881              	.LVL93:
1025:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 1882              		.loc 19 1025 13 is_stmt 1 view .LVU427
1025:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 1883              		.loc 19 1025 30 is_stmt 0 view .LVU428
 1884 00ba 94ED000A 		vldr.32	s0, [r4]
 1885 00be 2B48     		ldr	r0, .L94+68
 1886 00c0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 1887              	.LVL94:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 84


1026:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 1888              		.loc 19 1026 13 is_stmt 1 view .LVU429
1026:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 1889              		.loc 19 1026 30 is_stmt 0 view .LVU430
 1890 00c4 94ED000A 		vldr.32	s0, [r4]
 1891 00c8 2948     		ldr	r0, .L94+72
 1892 00ca FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 1893              	.LVL95:
1027:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 1894              		.loc 19 1027 13 is_stmt 1 view .LVU431
1027:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 1895              		.loc 19 1027 30 is_stmt 0 view .LVU432
 1896 00ce 94ED000A 		vldr.32	s0, [r4]
 1897 00d2 2848     		ldr	r0, .L94+76
 1898 00d4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 1899              	.LVL96:
1028:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 1900              		.loc 19 1028 13 is_stmt 1 view .LVU433
1028:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 1901              		.loc 19 1028 30 is_stmt 0 view .LVU434
 1902 00d8 94ED000A 		vldr.32	s0, [r4]
 1903 00dc 2648     		ldr	r0, .L94+80
 1904 00de FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 1905              	.LVL97:
1029:Veno-Echo.cpp ****         }
 1906              		.loc 19 1029 13 is_stmt 1 view .LVU435
1029:Veno-Echo.cpp ****         }
 1907              		.loc 19 1029 35 is_stmt 0 view .LVU436
 1908 00e2 2268     		ldr	r2, [r4]	@ float
 1909 00e4 254B     		ldr	r3, .L94+84
 1910 00e6 9A61     		str	r2, [r3, #24]	@ float
 1911              	.LBE897:
 1912              	.LBE904:
1032:Veno-Echo.cpp **** 
 1913              		.loc 19 1032 1 view .LVU437
 1914 00e8 10BD     		pop	{r4, pc}
 1915              	.LVL98:
 1916              	.L90:
 1917              	.LBB905:
 1918              	.LBB902:
1005:Veno-Echo.cpp ****         }
 1919              		.loc 19 1005 26 view .LVU438
 1920 00ea 9FED1A1A 		vldr.32	s2, .L94+44
 1921 00ee AEE7     		b	.L84
 1922              	.LVL99:
 1923              	.L93:
 1924              	.LBB896:
 1925              	.LBB891:
 1926              		.loc 19 1624 5 is_stmt 1 view .LVU439
 1927              		.loc 19 1624 5 is_stmt 0 view .LVU440
 1928              	.LBE891:
 1929              	.LBE896:
 998:Veno-Echo.cpp ****         if(drywetcombo >= 0.98)
 1930              		.loc 19 998 9 is_stmt 1 view .LVU441
 999:Veno-Echo.cpp ****         {
 1931              		.loc 19 999 9 view .LVU442
 999:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 85


 1932              		.loc 19 999 12 is_stmt 0 view .LVU443
 1933 00f0 B7EEE76A 		vcvt.f64.f32	d6, s15
 999:Veno-Echo.cpp ****         {
 1934              		.loc 19 999 9 view .LVU444
 1935 00f4 9FED0C5B 		vldr.64	d5, .L94
 1936 00f8 B4EEC56B 		vcmpe.f64	d6, d5
 1937 00fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1938 0100 A5DA     		bge	.L84
1003:Veno-Echo.cpp ****         {
 1939              		.loc 19 1003 14 is_stmt 1 view .LVU445
 1940 0102 9FED0B5B 		vldr.64	d5, .L94+8
 1941 0106 B4EEC56B 		vcmpe.f64	d6, d5
 1942 010a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1943 010e ECD9     		bls	.L90
1009:Veno-Echo.cpp ****         }
 1944              		.loc 19 1009 13 view .LVU446
1009:Veno-Echo.cpp ****         }
 1945              		.loc 19 1009 33 is_stmt 0 view .LVU447
 1946 0110 B0EE670A 		vmov.f32	s0, s15
 1947              	.LVL100:
1009:Veno-Echo.cpp ****         }
 1948              		.loc 19 1009 33 view .LVU448
 1949 0114 0120     		movs	r0, #1
 1950 0116 DFED0F0A 		vldr.32	s1, .L94+44
 1951 011a FFF7FEFF 		bl	_Z5scalefff9CurveType
 1952              	.LVL101:
1009:Veno-Echo.cpp ****         }
 1953              		.loc 19 1009 33 view .LVU449
 1954 011e B0EE401A 		vmov.f32	s2, s0
 1955              	.LVL102:
1009:Veno-Echo.cpp ****         }
 1956              		.loc 19 1009 33 view .LVU450
 1957 0122 94E7     		b	.L84
 1958              	.L95:
 1959 0124 AFF30080 		.align	3
 1960              	.L94:
 1961 0128 5C8FC2F5 		.word	4123168604
 1962 012c 285CEF3F 		.word	1072651304
 1963 0130 7B14AE47 		.word	1202590843
 1964 0134 E17A943F 		.word	1066695393
 1965 0138 18000000 		.word	.LANCHOR4+24
 1966 013c 00000000 		.word	.LANCHOR8
 1967 0140 00000000 		.word	.LANCHOR25
 1968 0144 00000000 		.word	.LANCHOR26
 1969 0148 00000000 		.word	.LANCHOR27
 1970 014c 6F12833C 		.word	1015222895
 1971 0150 0AD7A33B 		.word	1000593162
 1972 0154 00000000 		.word	0
 1973 0158 00000000 		.word	.LANCHOR28
 1974 015c 00000000 		.word	.LANCHOR21
 1975 0160 00000000 		.word	.LANCHOR22
 1976 0164 00000000 		.word	.LANCHOR12
 1977 0168 00000000 		.word	.LANCHOR13
 1978 016c 00000000 		.word	.LANCHOR23
 1979 0170 00000000 		.word	.LANCHOR24
 1980 0174 00000000 		.word	.LANCHOR14
 1981 0178 00000000 		.word	.LANCHOR15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 86


 1982 017c 00000000 		.word	.LANCHOR16
 1983              	.LBE902:
 1984              	.LBE905:
 1985              		.cfi_endproc
 1986              	.LFE4300:
 1988              		.section	.text._Z15Update_width_CVv,"ax",%progbits
 1989              		.align	1
 1990              		.p2align 2,,3
 1991              		.global	_Z15Update_width_CVv
 1992              		.syntax unified
 1993              		.thumb
 1994              		.thumb_func
 1995              		.fpu fpv5-d16
 1997              	_Z15Update_width_CVv:
 1998              	.LFB4301:
1035:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 1999              		.loc 19 1035 1 is_stmt 1 view -0
 2000              		.cfi_startproc
 2001              		@ args = 0, pretend = 0, frame = 0
 2002              		@ frame_needed = 0, uses_anonymous_args = 0
1036:Veno-Echo.cpp **** }
 2003              		.loc 19 1036 5 view .LVU452
1035:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 2004              		.loc 19 1035 1 is_stmt 0 view .LVU453
 2005 0000 08B5     		push	{r3, lr}
 2006              		.cfi_def_cfa_offset 8
 2007              		.cfi_offset 3, -8
 2008              		.cfi_offset 14, -4
1036:Veno-Echo.cpp **** }
 2009              		.loc 19 1036 30 view .LVU454
 2010 0002 0521     		movs	r1, #5
 2011 0004 0348     		ldr	r0, .L98
 2012 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2013              	.LVL103:
1036:Veno-Echo.cpp **** }
 2014              		.loc 19 1036 13 view .LVU455
 2015 000a 034B     		ldr	r3, .L98+4
 2016 000c 83ED000A 		vstr.32	s0, [r3]
1037:Veno-Echo.cpp **** 
 2017              		.loc 19 1037 1 view .LVU456
 2018 0010 08BD     		pop	{r3, pc}
 2019              	.L99:
 2020 0012 00BF     		.align	2
 2021              	.L98:
 2022 0014 18000000 		.word	.LANCHOR4+24
 2023 0018 00000000 		.word	.LANCHOR29
 2024              		.cfi_endproc
 2025              	.LFE4301:
 2027              		.section	.text._Z12Update_widthv,"ax",%progbits
 2028              		.align	1
 2029              		.p2align 2,,3
 2030              		.global	_Z12Update_widthv
 2031              		.syntax unified
 2032              		.thumb
 2033              		.thumb_func
 2034              		.fpu fpv5-d16
 2036              	_Z12Update_widthv:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 87


 2037              	.LFB4302:
1040:Veno-Echo.cpp ****     //get pot values:
 2038              		.loc 19 1040 1 is_stmt 1 view -0
 2039              		.cfi_startproc
 2040              		@ args = 0, pretend = 0, frame = 0
 2041              		@ frame_needed = 0, uses_anonymous_args = 0
1042:Veno-Echo.cpp **** 
 2042              		.loc 19 1042 5 view .LVU458
1042:Veno-Echo.cpp **** 
 2043              		.loc 19 1042 39 is_stmt 0 view .LVU459
 2044 0000 0722     		movs	r2, #7
 2045 0002 2E48     		ldr	r0, .L110
1040:Veno-Echo.cpp ****     //get pot values:
 2046              		.loc 19 1040 1 view .LVU460
 2047 0004 08B5     		push	{r3, lr}
 2048              		.cfi_def_cfa_offset 8
 2049              		.cfi_offset 3, -8
 2050              		.cfi_offset 14, -4
1042:Veno-Echo.cpp **** 
 2051              		.loc 19 1042 39 view .LVU461
 2052 0006 1146     		mov	r1, r2
 2053 0008 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2054              	.LVL104:
 2055              	.LBB906:
1046:Veno-Echo.cpp ****     {   
 2056              		.loc 19 1046 9 view .LVU462
 2057 000c 2C4B     		ldr	r3, .L110+4
 2058              	.LBE906:
1042:Veno-Echo.cpp **** 
 2059              		.loc 19 1042 39 view .LVU463
 2060 000e F0EE407A 		vmov.f32	s15, s0
 2061              	.LVL105:
1044:Veno-Echo.cpp **** 
 2062              		.loc 19 1044 5 is_stmt 1 view .LVU464
1046:Veno-Echo.cpp ****     {   
 2063              		.loc 19 1046 5 view .LVU465
 2064              	.LBB929:
 2065 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2066 0014 93BB     		cbnz	r3, .L101
 2067              	.LBB907:
1049:Veno-Echo.cpp **** 
 2068              		.loc 19 1049 9 view .LVU466
1051:Veno-Echo.cpp ****         fonepole(width,widthTarget,0.032f);
 2069              		.loc 19 1051 32 is_stmt 0 view .LVU467
 2070 0016 2B4A     		ldr	r2, .L110+8
 2071              	.LBB908:
 2072              	.LBB909:
1612:Veno-Echo.cpp **** 
 2073              		.loc 19 1612 39 view .LVU468
 2074 0018 F7EE006A 		vmov.f32	s13, #1.0e+0
1612:Veno-Echo.cpp **** 
 2075              		.loc 19 1612 49 view .LVU469
 2076 001c F6EE005A 		vmov.f32	s11, #5.0e-1
 2077              	.LBE909:
 2078              	.LBE908:
1049:Veno-Echo.cpp **** 
 2079              		.loc 19 1049 24 view .LVU470
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 88


 2080 0020 294B     		ldr	r3, .L110+12
 2081              	.LBB913:
 2082              	.LBB910:
1612:Veno-Echo.cpp **** 
 2083              		.loc 19 1612 39 view .LVU471
 2084 0022 92ED007A 		vldr.32	s14, [r2]
1612:Veno-Echo.cpp **** 
 2085              		.loc 19 1612 12 view .LVU472
 2086 0026 B0EE006A 		vmov.f32	s12, #2.0e+0
 2087              	.LBE910:
 2088              	.LBE913:
1049:Veno-Echo.cpp **** 
 2089              		.loc 19 1049 24 view .LVU473
 2090 002a 83ED000A 		vstr.32	s0, [r3]
1051:Veno-Echo.cpp ****         fonepole(width,widthTarget,0.032f);
 2091              		.loc 19 1051 9 is_stmt 1 view .LVU474
 2092              	.LVL106:
 2093              	.LBB914:
 2094              	.LBI908:
1609:Veno-Echo.cpp **** {
 2095              		.loc 19 1609 7 view .LVU475
 2096              	.LBB911:
1611:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2097              		.loc 19 1611 5 view .LVU476
1612:Veno-Echo.cpp **** 
 2098              		.loc 19 1612 5 view .LVU477
1612:Veno-Echo.cpp **** 
 2099              		.loc 19 1612 39 is_stmt 0 view .LVU478
 2100 002e 36EEC77A 		vsub.f32	s14, s13, s14
 2101              	.LVL107:
1612:Veno-Echo.cpp **** 
 2102              		.loc 19 1612 49 view .LVU479
 2103 0032 37EE657A 		vsub.f32	s14, s14, s11
1612:Veno-Echo.cpp **** 
 2104              		.loc 19 1612 12 view .LVU480
 2105 0036 E7EE067A 		vfma.f32	s15, s14, s12
 2106              	.LVL108:
1614:Veno-Echo.cpp ****     {
 2107              		.loc 19 1614 5 is_stmt 1 view .LVU481
 2108 003a F5EEC07A 		vcmpe.f32	s15, #0
 2109 003e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2110 0042 37D4     		bmi	.L106
1619:Veno-Echo.cpp ****     {
 2111              		.loc 19 1619 5 view .LVU482
1621:Veno-Echo.cpp ****     }
 2112              		.loc 19 1621 16 is_stmt 0 view .LVU483
 2113 0044 F4EE667A 		vcmp.f32	s15, s13
 2114 0048 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2115 004c 36FEA70A 		vselgt.f32	s0, s13, s15
 2116              	.LVL109:
 2117              	.L102:
 2118              		.loc 19 1624 5 is_stmt 1 view .LVU484
 2119              		.loc 19 1624 5 is_stmt 0 view .LVU485
 2120              	.LBE911:
 2121              	.LBE914:
1051:Veno-Echo.cpp ****         fonepole(width,widthTarget,0.032f);
 2122              		.loc 19 1051 32 view .LVU486
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 89


 2123 0050 F6EE000A 		vmov.f32	s1, #5.0e-1
 2124 0054 0020     		movs	r0, #0
 2125 0056 9FED1D1A 		vldr.32	s2, .L110+16
 2126 005a FFF7FEFF 		bl	_Z5scalefff9CurveType
 2127              	.LVL110:
1052:Veno-Echo.cpp ****         WidthXfade.SetPos(width);
 2128              		.loc 19 1052 9 is_stmt 1 view .LVU487
 2129              	.LBB915:
 2130              	.LBI915:
 135:../DaisySP/Source/Utility/dsp.h **** {
 2131              		.loc 21 135 13 view .LVU488
 2132              	.LBB916:
 2133              		.loc 21 137 5 view .LVU489
 2134              		.loc 21 137 9 is_stmt 0 view .LVU490
 2135 005e 1C4B     		ldr	r3, .L110+20
 2136 0060 9FED1C7A 		vldr.32	s14, .L110+24
 2137 0064 D3ED007A 		vldr.32	s15, [r3]
 2138              	.LBE916:
 2139              	.LBE915:
 2140              	.LBB918:
 2141              	.LBB919:
  38:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initializes CrossFade module
  39:../DaisySP/Source/Dynamics/crossfade.h ****         Defaults
  40:../DaisySP/Source/Dynamics/crossfade.h ****         - current position = .5
  41:../DaisySP/Source/Dynamics/crossfade.h ****         - curve = linear
  42:../DaisySP/Source/Dynamics/crossfade.h ****     */
  43:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init(int curve)
  44:../DaisySP/Source/Dynamics/crossfade.h ****     {
  45:../DaisySP/Source/Dynamics/crossfade.h ****         pos_   = 0.5f;
  46:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
  47:../DaisySP/Source/Dynamics/crossfade.h ****     }
  48:../DaisySP/Source/Dynamics/crossfade.h **** 
  49:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initialize with default linear curve 
  50:../DaisySP/Source/Dynamics/crossfade.h ****     */
  51:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init() { Init(CROSSFADE_LIN); }
  52:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
  53:../DaisySP/Source/Dynamics/crossfade.h ****     */
  54:../DaisySP/Source/Dynamics/crossfade.h ****     float Process(float &in1, float &in2);
  55:../DaisySP/Source/Dynamics/crossfade.h **** 
  56:../DaisySP/Source/Dynamics/crossfade.h **** 
  57:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets position of CrossFade between two input signals
  58:../DaisySP/Source/Dynamics/crossfade.h ****         Input range: 0 to 1
  59:../DaisySP/Source/Dynamics/crossfade.h ****     */
  60:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetPos(float pos) { pos_ = pos; }
 2142              		.loc 10 60 42 view .LVU491
 2143 0068 1B4A     		ldr	r2, .L110+28
 2144              	.LBE919:
 2145              	.LBE918:
 2146              	.LBB921:
 2147              	.LBB917:
 2148              		.loc 21 137 24 view .LVU492
 2149 006a 30EE670A 		vsub.f32	s0, s0, s15
 2150              	.LVL111:
 2151              		.loc 21 137 9 view .LVU493
 2152 006e E0EE077A 		vfma.f32	s15, s0, s14
 2153 0072 C3ED007A 		vstr.32	s15, [r3]
 2154              	.LVL112:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 90


 2155              		.loc 21 137 9 view .LVU494
 2156              	.LBE917:
 2157              	.LBE921:
1053:Veno-Echo.cpp ****     }
 2158              		.loc 19 1053 9 is_stmt 1 view .LVU495
 2159              	.LBB922:
 2160              	.LBI918:
 2161              		.loc 10 60 17 view .LVU496
 2162              	.LBB920:
 2163              		.loc 10 60 37 view .LVU497
 2164              		.loc 10 60 42 is_stmt 0 view .LVU498
 2165 0076 C2ED007A 		vstr.32	s15, [r2]
 2166              	.LVL113:
 2167              	.L100:
 2168              		.loc 10 60 42 view .LVU499
 2169              	.LBE920:
 2170              	.LBE922:
 2171              	.LBE907:
 2172              	.LBE929:
1064:Veno-Echo.cpp **** 
 2173              		.loc 19 1064 1 view .LVU500
 2174 007a 08BD     		pop	{r3, pc}
 2175              	.LVL114:
 2176              	.L101:
 2177              	.LBB930:
1057:Veno-Echo.cpp ****         {
 2178              		.loc 19 1057 9 is_stmt 1 view .LVU501
 2179              	.LBB924:
 2180              	.LBI924:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2181              		.loc 20 75 3 view .LVU502
 2182              	.LBB925:
 2183              		.loc 20 76 5 view .LVU503
 2184              		.loc 20 76 5 is_stmt 0 view .LVU504
 2185              	.LBE925:
 2186              	.LBE924:
1057:Veno-Echo.cpp ****         {
 2187              		.loc 19 1057 16 view .LVU505
 2188 007c 124B     		ldr	r3, .L110+12
1057:Veno-Echo.cpp ****         {
 2189              		.loc 19 1057 9 view .LVU506
 2190 007e 9FED177A 		vldr.32	s14, .L110+32
1057:Veno-Echo.cpp ****         {
 2191              		.loc 19 1057 16 view .LVU507
 2192 0082 D3ED006A 		vldr.32	s13, [r3]
 2193 0086 70EE667A 		vsub.f32	s15, s0, s13
 2194              	.LBB927:
 2195              	.LBB926:
 2196              		.loc 20 76 31 view .LVU508
 2197 008a F0EEE77A 		vabs.f32	s15, s15
 2198              	.LBE926:
 2199              	.LBE927:
1057:Veno-Echo.cpp ****         {
 2200              		.loc 19 1057 9 view .LVU509
 2201 008e F4EEC77A 		vcmpe.f32	s15, s14
 2202 0092 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2203 0096 F0DD     		ble	.L100
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 91


1059:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 2204              		.loc 19 1059 13 is_stmt 1 view .LVU510
1059:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 2205              		.loc 19 1059 29 is_stmt 0 view .LVU511
 2206 0098 0020     		movs	r0, #0
 2207 009a 9FED111A 		vldr.32	s2, .L110+36
 2208 009e DFED0B0A 		vldr.32	s1, .L110+16
 2209 00a2 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2210              	.LVL115:
1059:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 2211              		.loc 19 1059 22 view .LVU512
 2212 00a6 0F4A     		ldr	r2, .L110+40
1060:Veno-Echo.cpp ****         }
 2213              		.loc 19 1060 34 view .LVU513
 2214 00a8 0F4B     		ldr	r3, .L110+44
1059:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 2215              		.loc 19 1059 22 view .LVU514
 2216 00aa 82ED000A 		vstr.32	s0, [r2]
1060:Veno-Echo.cpp ****         }
 2217              		.loc 19 1060 13 is_stmt 1 view .LVU515
1060:Veno-Echo.cpp ****         }
 2218              		.loc 19 1060 34 is_stmt 0 view .LVU516
 2219 00ae 83ED020A 		vstr.32	s0, [r3, #8]
 2220              	.LBE930:
1064:Veno-Echo.cpp **** 
 2221              		.loc 19 1064 1 view .LVU517
 2222 00b2 08BD     		pop	{r3, pc}
 2223              	.LVL116:
 2224              	.L106:
 2225              	.LBB931:
 2226              	.LBB928:
 2227              	.LBB923:
 2228              	.LBB912:
1616:Veno-Echo.cpp ****     }
 2229              		.loc 19 1616 16 view .LVU518
 2230 00b4 9FED050A 		vldr.32	s0, .L110+16
 2231              	.LVL117:
1616:Veno-Echo.cpp ****     }
 2232              		.loc 19 1616 16 view .LVU519
 2233 00b8 CAE7     		b	.L102
 2234              	.L111:
 2235 00ba 00BF     		.align	2
 2236              	.L110:
 2237 00bc 18000000 		.word	.LANCHOR4+24
 2238 00c0 00000000 		.word	.LANCHOR8
 2239 00c4 00000000 		.word	.LANCHOR29
 2240 00c8 00000000 		.word	.LANCHOR30
 2241 00cc 00000000 		.word	0
 2242 00d0 00000000 		.word	.LANCHOR31
 2243 00d4 6F12033D 		.word	1023611503
 2244 00d8 00000000 		.word	.LANCHOR32
 2245 00dc 0AD7A33B 		.word	1000593162
 2246 00e0 0000FA43 		.word	1140457472
 2247 00e4 00000000 		.word	.LANCHOR33
 2248 00e8 00000000 		.word	.LANCHOR16
 2249              	.LBE912:
 2250              	.LBE923:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 92


 2251              	.LBE928:
 2252              	.LBE931:
 2253              		.cfi_endproc
 2254              	.LFE4302:
 2256              		.section	.text._Z20Update_crossfeedbackv,"ax",%progbits
 2257              		.align	1
 2258              		.p2align 2,,3
 2259              		.global	_Z20Update_crossfeedbackv
 2260              		.syntax unified
 2261              		.thumb
 2262              		.thumb_func
 2263              		.fpu fpv5-d16
 2265              	_Z20Update_crossfeedbackv:
 2266              	.LFB4303:
1067:Veno-Echo.cpp ****     //get pot values:
 2267              		.loc 19 1067 1 is_stmt 1 view -0
 2268              		.cfi_startproc
 2269              		@ args = 0, pretend = 0, frame = 0
 2270              		@ frame_needed = 0, uses_anonymous_args = 0
1069:Veno-Echo.cpp **** 
 2271              		.loc 19 1069 5 view .LVU521
1069:Veno-Echo.cpp **** 
 2272              		.loc 19 1069 47 is_stmt 0 view .LVU522
 2273 0000 2048     		ldr	r0, .L120
 2274 0002 0022     		movs	r2, #0
 2275 0004 0721     		movs	r1, #7
1067:Veno-Echo.cpp ****     //get pot values:
 2276              		.loc 19 1067 1 view .LVU523
 2277 0006 38B5     		push	{r3, r4, r5, lr}
 2278              		.cfi_def_cfa_offset 16
 2279              		.cfi_offset 3, -16
 2280              		.cfi_offset 4, -12
 2281              		.cfi_offset 5, -8
 2282              		.cfi_offset 14, -4
1069:Veno-Echo.cpp **** 
 2283              		.loc 19 1069 47 view .LVU524
 2284 0008 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2285              	.LVL118:
 2286              	.LBB932:
1073:Veno-Echo.cpp ****     {   
 2287              		.loc 19 1073 9 view .LVU525
 2288 000c 1E4B     		ldr	r3, .L120+4
 2289              	.LVL119:
1073:Veno-Echo.cpp ****     {   
 2290              		.loc 19 1073 9 view .LVU526
 2291              	.LBE932:
1071:Veno-Echo.cpp **** 
 2292              		.loc 19 1071 5 is_stmt 1 view .LVU527
1073:Veno-Echo.cpp ****     {   
 2293              		.loc 19 1073 5 view .LVU528
 2294              	.LBB951:
 2295 000e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2296              	.LBB933:
1076:Veno-Echo.cpp **** 
 2297              		.loc 19 1076 32 is_stmt 0 view .LVU529
 2298 0010 1E4B     		ldr	r3, .L120+8
 2299              	.LBE933:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 93


1073:Veno-Echo.cpp ****     {   
 2300              		.loc 19 1073 5 view .LVU530
 2301 0012 18B3     		cbz	r0, .L118
 2302              	.LBB936:
1084:Veno-Echo.cpp ****         if (abs(crossfeedback_Pot_Last - crossfeedback_Pot) > altControlThresh)
 2303              		.loc 19 1084 9 is_stmt 1 view .LVU531
1085:Veno-Echo.cpp ****         {
 2304              		.loc 19 1085 9 view .LVU532
 2305              	.LVL120:
 2306              	.LBB937:
 2307              	.LBI937:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2308              		.loc 20 75 3 view .LVU533
 2309              	.LBB938:
 2310              		.loc 20 76 5 view .LVU534
 2311              		.loc 20 76 5 is_stmt 0 view .LVU535
 2312              	.LBE938:
 2313              	.LBE937:
1085:Veno-Echo.cpp ****         {
 2314              		.loc 19 1085 16 view .LVU536
 2315 0014 93ED007A 		vldr.32	s14, [r3]
1085:Veno-Echo.cpp ****         {
 2316              		.loc 19 1085 9 view .LVU537
 2317 0018 DFED1D6A 		vldr.32	s13, .L120+12
1085:Veno-Echo.cpp ****         {
 2318              		.loc 19 1085 16 view .LVU538
 2319 001c 77EE407A 		vsub.f32	s15, s14, s0
 2320              	.LBB940:
 2321              	.LBB939:
 2322              		.loc 20 76 31 view .LVU539
 2323 0020 F0EEE77A 		vabs.f32	s15, s15
 2324              	.LBE939:
 2325              	.LBE940:
1085:Veno-Echo.cpp ****         {
 2326              		.loc 19 1085 9 view .LVU540
 2327 0024 F4EEE67A 		vcmpe.f32	s15, s13
 2328 0028 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2329 002c 00DC     		bgt	.L119
 2330              	.LBE936:
 2331              	.LBE951:
1092:Veno-Echo.cpp **** 
 2332              		.loc 19 1092 1 view .LVU541
 2333 002e 38BD     		pop	{r3, r4, r5, pc}
 2334              	.L119:
 2335              	.LBB952:
 2336              	.LBB949:
1087:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 2337              		.loc 19 1087 13 is_stmt 1 view .LVU542
 2338              	.LBB941:
 2339              	.LBB942:
  17:../DaisySP/Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:../DaisySP/Source/Synthesis/oscillator.h ****     */
  19:../DaisySP/Source/Synthesis/oscillator.h ****     enum
  20:../DaisySP/Source/Synthesis/oscillator.h ****     {
  21:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SIN,
  22:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_TRI,
  23:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SAW,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 94


  24:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  25:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  26:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  27:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  28:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  29:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_LAST,
  30:../DaisySP/Source/Synthesis/oscillator.h ****     };
  31:../DaisySP/Source/Synthesis/oscillator.h **** 
  32:../DaisySP/Source/Synthesis/oscillator.h **** 
  33:../DaisySP/Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  34:../DaisySP/Source/Synthesis/oscillator.h **** 
  35:../DaisySP/Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:../DaisySP/Source/Synthesis/oscillator.h **** 
  37:../DaisySP/Source/Synthesis/oscillator.h ****         Defaults:
  38:../DaisySP/Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
  39:../DaisySP/Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  40:../DaisySP/Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  41:../DaisySP/Source/Synthesis/oscillator.h ****     */
  42:../DaisySP/Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  43:../DaisySP/Source/Synthesis/oscillator.h ****     {
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
  45:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  46:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  47:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
  49:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
  52:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
  53:../DaisySP/Source/Synthesis/oscillator.h ****     }
  54:../DaisySP/Source/Synthesis/oscillator.h **** 
  55:../DaisySP/Source/Synthesis/oscillator.h **** 
  56:../DaisySP/Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:../DaisySP/Source/Synthesis/oscillator.h ****     */
  58:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
  59:../DaisySP/Source/Synthesis/oscillator.h ****     {
  60:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = f;
 2340              		.loc 8 60 20 is_stmt 0 view .LVU543
 2341 0030 184C     		ldr	r4, .L120+16
 2342              	.LBE942:
 2343              	.LBE941:
1087:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 2344              		.loc 19 1087 28 view .LVU544
 2345 0032 B2EE041A 		vmov.f32	s2, #1.0e+1
 2346 0036 0020     		movs	r0, #0
 2347 0038 DFED170A 		vldr.32	s1, .L120+20
1087:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 2348              		.loc 19 1087 21 view .LVU545
 2349 003c 174D     		ldr	r5, .L120+24
1087:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 2350              		.loc 19 1087 28 view .LVU546
 2351 003e FFF7FEFF 		bl	_Z5scalefff9CurveType
 2352              	.LVL121:
 2353              	.LBB946:
 2354              	.LBB943:
  61:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 2355              		.loc 8 61 34 view .LVU547
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 95


 2356 0042 2046     		mov	r0, r4
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 2357              		.loc 8 60 20 view .LVU548
 2358 0044 84ED020A 		vstr.32	s0, [r4, #8]
 2359              	.LBE943:
 2360              	.LBE946:
1087:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 2361              		.loc 19 1087 21 view .LVU549
 2362 0048 85ED000A 		vstr.32	s0, [r5]
1088:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
 2363              		.loc 19 1088 13 is_stmt 1 view .LVU550
 2364              	.LVL122:
 2365              	.LBB947:
 2366              	.LBI941:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 2367              		.loc 8 58 17 view .LVU551
 2368              	.LBB944:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 2369              		.loc 8 60 9 view .LVU552
 2370              		.loc 8 61 9 view .LVU553
 2371              		.loc 8 61 34 is_stmt 0 view .LVU554
 2372 004c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 2373              	.LVL123:
 2374              		.loc 8 61 34 view .LVU555
 2375              	.LBE944:
 2376              	.LBE947:
1089:Veno-Echo.cpp ****         }
 2377              		.loc 19 1089 33 view .LVU556
 2378 0050 2A68     		ldr	r2, [r5]	@ float
 2379 0052 134B     		ldr	r3, .L120+28
 2380              	.LBB948:
 2381              	.LBB945:
 2382              		.loc 8 61 20 view .LVU557
 2383 0054 84ED060A 		vstr.32	s0, [r4, #24]
 2384              	.LVL124:
 2385              		.loc 8 61 20 view .LVU558
 2386              	.LBE945:
 2387              	.LBE948:
1089:Veno-Echo.cpp ****         }
 2388              		.loc 19 1089 13 is_stmt 1 view .LVU559
1089:Veno-Echo.cpp ****         }
 2389              		.loc 19 1089 33 is_stmt 0 view .LVU560
 2390 0058 DA60     		str	r2, [r3, #12]	@ float
 2391              	.LBE949:
 2392              	.LBE952:
1092:Veno-Echo.cpp **** 
 2393              		.loc 19 1092 1 view .LVU561
 2394 005a 38BD     		pop	{r3, r4, r5, pc}
 2395              	.LVL125:
 2396              	.L118:
 2397              	.LBB953:
 2398              	.LBB950:
1076:Veno-Echo.cpp **** 
 2399              		.loc 19 1076 9 is_stmt 1 view .LVU562
1078:Veno-Echo.cpp ****         fonepole(crossfeedback,crossfeedbackTarget,0.032f);
 2400              		.loc 19 1078 40 is_stmt 0 view .LVU563
 2401 005c B7EE001A 		vmov.f32	s2, #1.0e+0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 96


 2402 0060 DFED100A 		vldr.32	s1, .L120+32
1076:Veno-Echo.cpp **** 
 2403              		.loc 19 1076 32 view .LVU564
 2404 0064 83ED000A 		vstr.32	s0, [r3]
1078:Veno-Echo.cpp ****         fonepole(crossfeedback,crossfeedbackTarget,0.032f);
 2405              		.loc 19 1078 9 is_stmt 1 view .LVU565
1078:Veno-Echo.cpp ****         fonepole(crossfeedback,crossfeedbackTarget,0.032f);
 2406              		.loc 19 1078 40 is_stmt 0 view .LVU566
 2407 0068 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2408              	.LVL126:
1079:Veno-Echo.cpp **** 
 2409              		.loc 19 1079 9 is_stmt 1 view .LVU567
 2410              	.LBB934:
 2411              	.LBI934:
 135:../DaisySP/Source/Utility/dsp.h **** {
 2412              		.loc 21 135 13 view .LVU568
 2413              	.LBB935:
 2414              		.loc 21 137 5 view .LVU569
 2415              		.loc 21 137 9 is_stmt 0 view .LVU570
 2416 006c 0E4B     		ldr	r3, .L120+36
 2417 006e 9FED0F7A 		vldr.32	s14, .L120+40
 2418 0072 D3ED007A 		vldr.32	s15, [r3]
 2419              		.loc 21 137 24 view .LVU571
 2420 0076 30EE670A 		vsub.f32	s0, s0, s15
 2421              	.LVL127:
 2422              		.loc 21 137 9 view .LVU572
 2423 007a E0EE077A 		vfma.f32	s15, s0, s14
 2424 007e C3ED007A 		vstr.32	s15, [r3]
 2425              	.LBE935:
 2426              	.LBE934:
 2427              	.LBE950:
 2428              	.LBE953:
1092:Veno-Echo.cpp **** 
 2429              		.loc 19 1092 1 view .LVU573
 2430 0082 38BD     		pop	{r3, r4, r5, pc}
 2431              	.L121:
 2432              		.align	2
 2433              	.L120:
 2434 0084 18000000 		.word	.LANCHOR4+24
 2435 0088 00000000 		.word	.LANCHOR8
 2436 008c 00000000 		.word	.LANCHOR34
 2437 0090 0AD7A33B 		.word	1000593162
 2438 0094 00000000 		.word	.LANCHOR37
 2439 0098 CDCCCC3D 		.word	1036831949
 2440 009c 00000000 		.word	.LANCHOR36
 2441 00a0 00000000 		.word	.LANCHOR16
 2442 00a4 00000000 		.word	0
 2443 00a8 00000000 		.word	.LANCHOR35
 2444 00ac 6F12033D 		.word	1023611503
 2445              		.cfi_endproc
 2446              	.LFE4303:
 2448              		.section	.text._Z18Update_filterXfadev,"ax",%progbits
 2449              		.align	1
 2450              		.p2align 2,,3
 2451              		.global	_Z18Update_filterXfadev
 2452              		.syntax unified
 2453              		.thumb
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 97


 2454              		.thumb_func
 2455              		.fpu fpv5-d16
 2457              	_Z18Update_filterXfadev:
 2458              	.LFB4304:
1095:Veno-Echo.cpp ****     //get pot values:
 2459              		.loc 19 1095 1 is_stmt 1 view -0
 2460              		.cfi_startproc
 2461              		@ args = 0, pretend = 0, frame = 0
 2462              		@ frame_needed = 0, uses_anonymous_args = 0
1097:Veno-Echo.cpp **** 
 2463              		.loc 19 1097 5 view .LVU575
1095:Veno-Echo.cpp ****     //get pot values:
 2464              		.loc 19 1095 1 is_stmt 0 view .LVU576
 2465 0000 08B5     		push	{r3, lr}
 2466              		.cfi_def_cfa_offset 8
 2467              		.cfi_offset 3, -8
 2468              		.cfi_offset 14, -4
1097:Veno-Echo.cpp **** 
 2469              		.loc 19 1097 45 view .LVU577
 2470 0002 0322     		movs	r2, #3
 2471 0004 0721     		movs	r1, #7
 2472 0006 2248     		ldr	r0, .L137
 2473 0008 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2474              	.LVL128:
 2475              	.LBB954:
1101:Veno-Echo.cpp ****     {   
 2476              		.loc 19 1101 9 view .LVU578
 2477 000c 214B     		ldr	r3, .L137+4
 2478              	.LBE954:
1097:Veno-Echo.cpp **** 
 2479              		.loc 19 1097 45 view .LVU579
 2480 000e F0EE407A 		vmov.f32	s15, s0
 2481              	.LVL129:
1099:Veno-Echo.cpp **** 
 2482              		.loc 19 1099 5 is_stmt 1 view .LVU580
1101:Veno-Echo.cpp ****     {   
 2483              		.loc 19 1101 5 view .LVU581
 2484              	.LBB962:
 2485 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2486 0014 13B3     		cbz	r3, .L135
1113:Veno-Echo.cpp ****         {
 2487              		.loc 19 1113 9 view .LVU582
 2488              	.LVL130:
 2489              	.LBB955:
 2490              	.LBI955:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2491              		.loc 20 75 3 view .LVU583
 2492              	.LBB956:
 2493              		.loc 20 76 5 view .LVU584
 2494              		.loc 20 76 5 is_stmt 0 view .LVU585
 2495              	.LBE956:
 2496              	.LBE955:
1113:Veno-Echo.cpp ****         {
 2497              		.loc 19 1113 16 view .LVU586
 2498 0016 204B     		ldr	r3, .L137+8
1113:Veno-Echo.cpp ****         {
 2499              		.loc 19 1113 9 view .LVU587
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 98


 2500 0018 DFED206A 		vldr.32	s13, .L137+12
1113:Veno-Echo.cpp ****         {
 2501              		.loc 19 1113 16 view .LVU588
 2502 001c 93ED007A 		vldr.32	s14, [r3]
 2503 0020 37EE407A 		vsub.f32	s14, s14, s0
 2504              	.LBB958:
 2505              	.LBB957:
 2506              		.loc 20 76 31 view .LVU589
 2507 0024 B0EEC77A 		vabs.f32	s14, s14
 2508              	.LBE957:
 2509              	.LBE958:
1113:Veno-Echo.cpp ****         {
 2510              		.loc 19 1113 9 view .LVU590
 2511 0028 B4EEE67A 		vcmpe.f32	s14, s13
 2512 002c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2513 0030 13DD     		ble	.L122
1116:Veno-Echo.cpp ****             {
 2514              		.loc 19 1116 13 is_stmt 1 view .LVU591
 2515 0032 9FED1B7A 		vldr.32	s14, .L137+16
 2516 0036 B4EEC70A 		vcmpe.f32	s0, s14
 2517 003a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2518 003e 23D4     		bmi	.L136
1120:Veno-Echo.cpp ****             {
 2519              		.loc 19 1120 18 view .LVU592
 2520 0040 9FED187A 		vldr.32	s14, .L137+20
 2521 0044 B4EEC70A 		vcmpe.f32	s0, s14
 2522 0048 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2523 004c 02DD     		ble	.L128
1123:Veno-Echo.cpp ****             }
 2524              		.loc 19 1123 17 view .LVU593
1123:Veno-Echo.cpp ****             }
 2525              		.loc 19 1123 29 is_stmt 0 view .LVU594
 2526 004e 164B     		ldr	r3, .L137+24
 2527 0050 0122     		movs	r2, #1
 2528 0052 1A70     		strb	r2, [r3]
 2529              	.L128:
1129:Veno-Echo.cpp ****         }
 2530              		.loc 19 1129 13 is_stmt 1 view .LVU595
1129:Veno-Echo.cpp ****         }
 2531              		.loc 19 1129 39 is_stmt 0 view .LVU596
 2532 0054 154B     		ldr	r3, .L137+28
 2533 0056 C3ED077A 		vstr.32	s15, [r3, #28]
 2534              	.L122:
1129:Veno-Echo.cpp ****         }
 2535              		.loc 19 1129 39 view .LVU597
 2536              	.LBE962:
1132:Veno-Echo.cpp **** 
 2537              		.loc 19 1132 1 view .LVU598
 2538 005a 08BD     		pop	{r3, pc}
 2539              	.L135:
 2540              	.LBB963:
 2541              	.LBB959:
1104:Veno-Echo.cpp **** 
 2542              		.loc 19 1104 9 is_stmt 1 view .LVU599
1104:Veno-Echo.cpp **** 
 2543              		.loc 19 1104 30 is_stmt 0 view .LVU600
 2544 005c 0E4B     		ldr	r3, .L137+8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 99


1106:Veno-Echo.cpp ****         fonepole(filterXfade,filterXfadeTarget,0.032f);
 2545              		.loc 19 1106 38 view .LVU601
 2546 005e B7EE001A 		vmov.f32	s2, #1.0e+0
 2547 0062 0120     		movs	r0, #1
 2548 0064 DFED120A 		vldr.32	s1, .L137+32
1104:Veno-Echo.cpp **** 
 2549              		.loc 19 1104 30 view .LVU602
 2550 0068 83ED000A 		vstr.32	s0, [r3]
1106:Veno-Echo.cpp ****         fonepole(filterXfade,filterXfadeTarget,0.032f);
 2551              		.loc 19 1106 9 is_stmt 1 view .LVU603
1106:Veno-Echo.cpp ****         fonepole(filterXfade,filterXfadeTarget,0.032f);
 2552              		.loc 19 1106 38 is_stmt 0 view .LVU604
 2553 006c FFF7FEFF 		bl	_Z5scalefff9CurveType
 2554              	.LVL131:
1107:Veno-Echo.cpp **** 
 2555              		.loc 19 1107 9 is_stmt 1 view .LVU605
 2556              	.LBB960:
 2557              	.LBI960:
 135:../DaisySP/Source/Utility/dsp.h **** {
 2558              		.loc 21 135 13 view .LVU606
 2559              	.LBB961:
 2560              		.loc 21 137 5 view .LVU607
 2561              		.loc 21 137 9 is_stmt 0 view .LVU608
 2562 0070 104B     		ldr	r3, .L137+36
 2563 0072 9FED117A 		vldr.32	s14, .L137+40
 2564 0076 D3ED007A 		vldr.32	s15, [r3]
 2565              		.loc 21 137 24 view .LVU609
 2566 007a 30EE670A 		vsub.f32	s0, s0, s15
 2567              	.LVL132:
 2568              		.loc 21 137 9 view .LVU610
 2569 007e E0EE077A 		vfma.f32	s15, s0, s14
 2570 0082 C3ED007A 		vstr.32	s15, [r3]
 2571              	.LBE961:
 2572              	.LBE960:
 2573              	.LBE959:
 2574              	.LBE963:
1132:Veno-Echo.cpp **** 
 2575              		.loc 19 1132 1 view .LVU611
 2576 0086 08BD     		pop	{r3, pc}
 2577              	.LVL133:
 2578              	.L136:
 2579              	.LBB964:
1118:Veno-Echo.cpp ****             }
 2580              		.loc 19 1118 17 is_stmt 1 view .LVU612
1118:Veno-Echo.cpp ****             }
 2581              		.loc 19 1118 29 is_stmt 0 view .LVU613
 2582 0088 074B     		ldr	r3, .L137+24
 2583 008a 0022     		movs	r2, #0
 2584 008c 1A70     		strb	r2, [r3]
 2585 008e E1E7     		b	.L128
 2586              	.L138:
 2587              		.align	2
 2588              	.L137:
 2589 0090 18000000 		.word	.LANCHOR4+24
 2590 0094 00000000 		.word	.LANCHOR8
 2591 0098 00000000 		.word	.LANCHOR38
 2592 009c 0AD7A33B 		.word	1000593162
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 100


 2593 00a0 6666E63E 		.word	1055286886
 2594 00a4 CDCC0C3F 		.word	1057803469
 2595 00a8 00000000 		.word	.LANCHOR40
 2596 00ac 00000000 		.word	.LANCHOR16
 2597 00b0 00000000 		.word	0
 2598 00b4 00000000 		.word	.LANCHOR39
 2599 00b8 6F12033D 		.word	1023611503
 2600              	.LBE964:
 2601              		.cfi_endproc
 2602              	.LFE4304:
 2604              		.section	.text._Z8GetModCVv,"ax",%progbits
 2605              		.align	1
 2606              		.p2align 2,,3
 2607              		.global	_Z8GetModCVv
 2608              		.syntax unified
 2609              		.thumb
 2610              		.thumb_func
 2611              		.fpu fpv5-d16
 2613              	_Z8GetModCVv:
 2614              	.LFB4305:
1135:Veno-Echo.cpp ****     //get modulation CV input
 2615              		.loc 19 1135 1 is_stmt 1 view -0
 2616              		.cfi_startproc
 2617              		@ args = 0, pretend = 0, frame = 0
 2618              		@ frame_needed = 0, uses_anonymous_args = 0
1137:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 2619              		.loc 19 1137 5 view .LVU615
1135:Veno-Echo.cpp ****     //get modulation CV input
 2620              		.loc 19 1135 1 is_stmt 0 view .LVU616
 2621 0000 08B5     		push	{r3, lr}
 2622              		.cfi_def_cfa_offset 8
 2623              		.cfi_offset 3, -8
 2624              		.cfi_offset 14, -4
1137:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 2625              		.loc 19 1137 30 view .LVU617
 2626 0002 0621     		movs	r1, #6
 2627 0004 0648     		ldr	r0, .L141
 2628 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2629              	.LVL134:
 2630 000a 0020     		movs	r0, #0
 2631 000c 9FED051A 		vldr.32	s2, .L141+4
 2632 0010 DFED050A 		vldr.32	s1, .L141+8
 2633 0014 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2634              	.LVL135:
1137:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 2635              		.loc 19 1137 23 view .LVU618
 2636 0018 044B     		ldr	r3, .L141+12
 2637 001a 83ED000A 		vstr.32	s0, [r3]
1139:Veno-Echo.cpp **** 
 2638              		.loc 19 1139 1 view .LVU619
 2639 001e 08BD     		pop	{r3, pc}
 2640              	.L142:
 2641              		.align	2
 2642              	.L141:
 2643 0020 18000000 		.word	.LANCHOR4+24
 2644 0024 00004843 		.word	1128792064
 2645 0028 000048C3 		.word	3276275712
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 101


 2646 002c 00000000 		.word	.LANCHOR41
 2647              		.cfi_endproc
 2648              	.LFE4305:
 2650              		.section	.text._Z10Update_Modv,"ax",%progbits
 2651              		.align	1
 2652              		.p2align 2,,3
 2653              		.global	_Z10Update_Modv
 2654              		.syntax unified
 2655              		.thumb
 2656              		.thumb_func
 2657              		.fpu fpv5-d16
 2659              	_Z10Update_Modv:
 2660              	.LFB4306:
1142:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 2661              		.loc 19 1142 1 is_stmt 1 view -0
 2662              		.cfi_startproc
 2663              		@ args = 0, pretend = 0, frame = 8
 2664              		@ frame_needed = 0, uses_anonymous_args = 0
1143:Veno-Echo.cpp ****     static float modulation_CV{};
 2665              		.loc 19 1143 5 view .LVU621
1144:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
 2666              		.loc 19 1144 5 view .LVU622
1145:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 2667              		.loc 19 1145 5 view .LVU623
 2668              	.LVL136:
 2669              	.LBB965:
 2670              	.LBI965:
 135:../DaisySP/Source/Utility/dsp.h **** {
 2671              		.loc 21 135 13 view .LVU624
 2672              	.LBB966:
 2673              		.loc 21 137 5 view .LVU625
 2674              	.LBE966:
 2675              	.LBE965:
1142:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 2676              		.loc 19 1142 1 is_stmt 0 view .LVU626
 2677 0000 30B5     		push	{r4, r5, lr}
 2678              		.cfi_def_cfa_offset 12
 2679              		.cfi_offset 4, -12
 2680              		.cfi_offset 5, -8
 2681              		.cfi_offset 14, -4
1145:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 2682              		.loc 19 1145 13 view .LVU627
 2683 0002 1E4A     		ldr	r2, .L145
 2684              	.LBB972:
 2685              	.LBB967:
 2686              		.loc 21 137 9 view .LVU628
 2687 0004 1E4C     		ldr	r4, .L145+4
 2688              	.LBE967:
 2689              	.LBE972:
1146:Veno-Echo.cpp ****     //calculate InternalMod
 2690              		.loc 19 1146 13 view .LVU629
 2691 0006 1F4B     		ldr	r3, .L145+8
 2692              	.LBB973:
 2693              	.LBB974:
 2694              		.loc 21 137 9 view .LVU630
 2695 0008 1F4D     		ldr	r5, .L145+12
 2696              	.LBE974:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 102


 2697              	.LBE973:
 2698              	.LBB979:
 2699              	.LBB968:
 2700 000a 94ED007A 		vldr.32	s14, [r4]
 2701              		.loc 21 137 24 view .LVU631
 2702 000e 92ED006A 		vldr.32	s12, [r2]
 2703              	.LBE968:
 2704              	.LBE979:
 2705              	.LBB980:
 2706              	.LBB975:
 2707              		.loc 21 137 9 view .LVU632
 2708 0012 D5ED007A 		vldr.32	s15, [r5]
 2709              		.loc 21 137 24 view .LVU633
 2710 0016 D3ED006A 		vldr.32	s13, [r3]
 2711              	.LBE975:
 2712              	.LBE980:
 2713              	.LBB981:
 2714              	.LBB969:
 2715 001a 36EE476A 		vsub.f32	s12, s12, s14
 2716              		.loc 21 137 9 view .LVU634
 2717 001e DFED1B5A 		vldr.32	s11, .L145+16
 2718              	.LBE969:
 2719              	.LBE981:
 2720              	.LBB982:
 2721              	.LBB976:
 2722              		.loc 21 137 24 view .LVU635
 2723 0022 76EEE76A 		vsub.f32	s13, s13, s15
 2724              	.LBE976:
 2725              	.LBE982:
1148:Veno-Echo.cpp ****     //apply modulation to delay lines
 2726              		.loc 19 1148 34 view .LVU636
 2727 0026 1A48     		ldr	r0, .L145+20
 2728              	.LBB983:
 2729              	.LBB970:
 2730              		.loc 21 137 9 view .LVU637
 2731 0028 A6EE257A 		vfma.f32	s14, s12, s11
 2732              	.LBE970:
 2733              	.LBE983:
 2734              	.LBB984:
 2735              	.LBB977:
 2736 002c E6EEA57A 		vfma.f32	s15, s13, s11
 2737              	.LBE977:
 2738              	.LBE984:
1142:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 2739              		.loc 19 1142 1 view .LVU638
 2740 0030 2DED028B 		vpush.64	{d8}
 2741              		.cfi_def_cfa_offset 20
 2742              		.cfi_offset 80, -20
 2743              		.cfi_offset 81, -16
 2744 0034 83B0     		sub	sp, sp, #12
 2745              		.cfi_def_cfa_offset 32
 2746              	.LBB985:
 2747              	.LBB971:
 2748              		.loc 21 137 9 view .LVU639
 2749 0036 84ED007A 		vstr.32	s14, [r4]
 2750              	.LVL137:
 2751              		.loc 21 137 9 view .LVU640
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 103


 2752              	.LBE971:
 2753              	.LBE985:
1146:Veno-Echo.cpp ****     //calculate InternalMod
 2754              		.loc 19 1146 5 is_stmt 1 view .LVU641
 2755              	.LBB986:
 2756              	.LBI973:
 135:../DaisySP/Source/Utility/dsp.h **** {
 2757              		.loc 21 135 13 view .LVU642
 2758              	.LBB978:
 2759              		.loc 21 137 5 view .LVU643
 2760              		.loc 21 137 9 is_stmt 0 view .LVU644
 2761 003a C5ED007A 		vstr.32	s15, [r5]
 2762              	.LVL138:
 2763              		.loc 21 137 9 view .LVU645
 2764              	.LBE978:
 2765              	.LBE986:
1148:Veno-Echo.cpp ****     //apply modulation to delay lines
 2766              		.loc 19 1148 5 is_stmt 1 view .LVU646
1148:Veno-Echo.cpp ****     //apply modulation to delay lines
 2767              		.loc 19 1148 34 is_stmt 0 view .LVU647
 2768 003e FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 2769              	.LVL139:
1148:Veno-Echo.cpp ****     //apply modulation to delay lines
 2770              		.loc 19 1148 37 view .LVU648
 2771 0042 D5ED008A 		vldr.32	s17, [r5]
1148:Veno-Echo.cpp ****     //apply modulation to delay lines
 2772              		.loc 19 1148 34 view .LVU649
 2773 0046 B0EE408A 		vmov.f32	s16, s0
 2774              	.LVL140:
1150:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 2775              		.loc 19 1150 5 is_stmt 1 view .LVU650
1150:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 2776              		.loc 19 1150 40 is_stmt 0 view .LVU651
 2777 004a D4ED007A 		vldr.32	s15, [r4]
1150:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 2778              		.loc 19 1150 25 view .LVU652
 2779 004e 01A9     		add	r1, sp, #4
 2780 0050 1048     		ldr	r0, .L145+24
1150:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 2781              		.loc 19 1150 40 view .LVU653
 2782 0052 E0EE287A 		vfma.f32	s15, s0, s17
 2783 0056 CDED017A 		vstr.32	s15, [sp, #4]
1150:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 2784              		.loc 19 1150 25 view .LVU654
 2785 005a FFF7FEFF 		bl	_ZN10DelayMulti13SetModulationERKf
 2786              	.LVL141:
1151:Veno-Echo.cpp **** }
 2787              		.loc 19 1151 5 is_stmt 1 view .LVU655
1151:Veno-Echo.cpp **** }
 2788              		.loc 19 1151 40 is_stmt 0 view .LVU656
 2789 005e D4ED007A 		vldr.32	s15, [r4]
1151:Veno-Echo.cpp **** }
 2790              		.loc 19 1151 25 view .LVU657
 2791 0062 01A9     		add	r1, sp, #4
 2792 0064 0C48     		ldr	r0, .L145+28
1151:Veno-Echo.cpp **** }
 2793              		.loc 19 1151 40 view .LVU658
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 104


 2794 0066 E8EE287A 		vfma.f32	s15, s16, s17
 2795 006a CDED017A 		vstr.32	s15, [sp, #4]
1151:Veno-Echo.cpp **** }
 2796              		.loc 19 1151 25 view .LVU659
 2797 006e FFF7FEFF 		bl	_ZN10DelayMulti13SetModulationERKf
 2798              	.LVL142:
1152:Veno-Echo.cpp **** 
 2799              		.loc 19 1152 1 view .LVU660
 2800 0072 03B0     		add	sp, sp, #12
 2801              		.cfi_def_cfa_offset 20
 2802              		@ sp needed
 2803 0074 BDEC028B 		vldm	sp!, {d8}
 2804              		.cfi_restore 80
 2805              		.cfi_restore 81
 2806              		.cfi_def_cfa_offset 12
 2807              	.LVL143:
1152:Veno-Echo.cpp **** 
 2808              		.loc 19 1152 1 view .LVU661
 2809 0078 30BD     		pop	{r4, r5, pc}
 2810              	.L146:
 2811 007a 00BF     		.align	2
 2812              	.L145:
 2813 007c 00000000 		.word	.LANCHOR41
 2814 0080 00000000 		.word	.LANCHOR42
 2815 0084 00000000 		.word	.LANCHOR33
 2816 0088 00000000 		.word	.LANCHOR43
 2817 008c 0AD7233C 		.word	1008981770
 2818 0090 00000000 		.word	.LANCHOR37
 2819 0094 00000000 		.word	.LANCHOR0
 2820 0098 00000000 		.word	.LANCHOR1
 2821              		.cfi_endproc
 2822              	.LFE4306:
 2824              		.section	.text._Z11UpdateClockv,"ax",%progbits
 2825              		.align	1
 2826              		.p2align 2,,3
 2827              		.global	_Z11UpdateClockv
 2828              		.syntax unified
 2829              		.thumb
 2830              		.thumb_func
 2831              		.fpu fpv5-d16
 2833              	_Z11UpdateClockv:
 2834              	.LFB4307:
1155:Veno-Echo.cpp ****     static int divCounter{};
 2835              		.loc 19 1155 1 is_stmt 1 view -0
 2836              		.cfi_startproc
 2837              		@ args = 0, pretend = 0, frame = 0
 2838              		@ frame_needed = 0, uses_anonymous_args = 0
1156:Veno-Echo.cpp ****     ClockIn.Debounce();
 2839              		.loc 19 1156 5 view .LVU663
1157:Veno-Echo.cpp **** 
 2840              		.loc 19 1157 5 view .LVU664
1155:Veno-Echo.cpp ****     static int divCounter{};
 2841              		.loc 19 1155 1 is_stmt 0 view .LVU665
 2842 0000 10B5     		push	{r4, lr}
 2843              		.cfi_def_cfa_offset 8
 2844              		.cfi_offset 4, -8
 2845              		.cfi_offset 14, -4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 105


1157:Veno-Echo.cpp **** 
 2846              		.loc 19 1157 21 view .LVU666
 2847 0002 184C     		ldr	r4, .L161
 2848 0004 2046     		mov	r0, r4
 2849 0006 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 2850              	.LVL144:
1160:Veno-Echo.cpp ****     {   
 2851              		.loc 19 1160 5 is_stmt 1 view .LVU667
  42:../libdaisy/src/hid/switch.h **** 
  43:../libdaisy/src/hid/switch.h ****     /** 
  44:../libdaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  45:../libdaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  46:../libdaisy/src/hid/switch.h ****     \param update_rate the rate at which the Debounce() function will be called. (used for timing).
  47:../libdaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  48:../libdaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  49:../libdaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  50:../libdaisy/src/hid/switch.h ****     */
  51:../libdaisy/src/hid/switch.h ****     void
  52:../libdaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  53:../libdaisy/src/hid/switch.h **** 
  54:../libdaisy/src/hid/switch.h ****     /**
  55:../libdaisy/src/hid/switch.h ****        Simplified Init.
  56:../libdaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  57:../libdaisy/src/hid/switch.h ****        \param update_rate the rate at which the Debounce() function will be called. (used for timin
  58:../libdaisy/src/hid/switch.h ****     */
  59:../libdaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate);
  60:../libdaisy/src/hid/switch.h **** 
  61:../libdaisy/src/hid/switch.h ****     /** 
  62:../libdaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  63:../libdaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  64:../libdaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  65:../libdaisy/src/hid/switch.h ****     */
  66:../libdaisy/src/hid/switch.h ****     void Debounce();
  67:../libdaisy/src/hid/switch.h **** 
  68:../libdaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  69:../libdaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return state_ == 0x7f; }
 2852              		.loc 1 69 38 view .LVU668
1160:Veno-Echo.cpp ****     {   
 2853              		.loc 19 1160 5 is_stmt 0 view .LVU669
 2854 000a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 2855 000c 7F2B     		cmp	r3, #127
 2856 000e 00D0     		beq	.L159
 2857              	.L147:
1185:Veno-Echo.cpp **** 
 2858              		.loc 19 1185 1 view .LVU670
 2859 0010 10BD     		pop	{r4, pc}
 2860              	.L159:
1162:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
 2861              		.loc 19 1162 9 is_stmt 1 view .LVU671
1162:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
 2862              		.loc 19 1162 20 is_stmt 0 view .LVU672
 2863 0012 0023     		movs	r3, #0
 2864 0014 144C     		ldr	r4, .L161+4
1163:Veno-Echo.cpp ****         if(divCounter == 0)
 2865              		.loc 19 1163 33 view .LVU673
 2866 0016 1548     		ldr	r0, .L161+8
1162:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 106


 2867              		.loc 19 1162 20 view .LVU674
 2868 0018 2360     		str	r3, [r4]
1163:Veno-Echo.cpp ****         if(divCounter == 0)
 2869              		.loc 19 1163 9 is_stmt 1 view .LVU675
1163:Veno-Echo.cpp ****         if(divCounter == 0)
 2870              		.loc 19 1163 33 is_stmt 0 view .LVU676
 2871 001a FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 2872              	.LVL145:
1164:Veno-Echo.cpp ****         {
 2873              		.loc 19 1164 9 is_stmt 1 view .LVU677
 2874 001e 2368     		ldr	r3, [r4]
 2875 0020 002B     		cmp	r3, #0
 2876 0022 F5D1     		bne	.L147
1166:Veno-Echo.cpp ****             {
 2877              		.loc 19 1166 13 view .LVU678
1166:Veno-Echo.cpp ****             {
 2878              		.loc 19 1166 29 is_stmt 0 view .LVU679
 2879 0024 1248     		ldr	r0, .L161+12
 2880 0026 FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 2881              	.LVL146:
1166:Veno-Echo.cpp ****             {
 2882              		.loc 19 1166 13 view .LVU680
 2883 002a 0028     		cmp	r0, #0
 2884 002c F0D0     		beq	.L147
1168:Veno-Echo.cpp ****                 if(syncMode)
 2885              		.loc 19 1168 17 is_stmt 1 view .LVU681
1168:Veno-Echo.cpp ****                 if(syncMode)
 2886              		.loc 19 1168 39 is_stmt 0 view .LVU682
 2887 002e 1048     		ldr	r0, .L161+12
 2888 0030 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 2889              	.LVL147:
 2890 0034 0D48     		ldr	r0, .L161+8
 2891 0036 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 2892              	.LVL148:
1169:Veno-Echo.cpp ****                 {
 2893              		.loc 19 1169 17 is_stmt 1 view .LVU683
 2894 003a 0E4B     		ldr	r3, .L161+16
 2895 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2896 003e 002B     		cmp	r3, #0
 2897 0040 E6D0     		beq	.L147
 2898              	.LBB991:
 2899              	.LBI991:
1154:Veno-Echo.cpp **** {
 2900              		.loc 19 1154 6 view .LVU684
 2901              	.LBB992:
1171:Veno-Echo.cpp ****                     {
 2902              		.loc 19 1171 21 view .LVU685
1171:Veno-Echo.cpp ****                     {
 2903              		.loc 19 1171 30 is_stmt 0 view .LVU686
 2904 0042 0D4B     		ldr	r3, .L161+20
1171:Veno-Echo.cpp ****                     {
 2905              		.loc 19 1171 21 view .LVU687
 2906 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2907 0046 052B     		cmp	r3, #5
 2908 0048 08D9     		bls	.L160
 2909              	.L151:
1176:Veno-Echo.cpp ****                     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 107


 2910              		.loc 19 1176 21 is_stmt 1 view .LVU688
1176:Veno-Echo.cpp ****                     {
 2911              		.loc 19 1176 30 is_stmt 0 view .LVU689
 2912 004a 0C4B     		ldr	r3, .L161+24
1176:Veno-Echo.cpp ****                     {
 2913              		.loc 19 1176 21 view .LVU690
 2914 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2915 004e 052B     		cmp	r3, #5
 2916 0050 DED8     		bhi	.L147
1178:Veno-Echo.cpp ****                     }
 2917              		.loc 19 1178 25 is_stmt 1 view .LVU691
1178:Veno-Echo.cpp ****                     }
 2918              		.loc 19 1178 51 is_stmt 0 view .LVU692
 2919 0052 0B48     		ldr	r0, .L161+28
 2920              	.LBE992:
 2921              	.LBE991:
1185:Veno-Echo.cpp **** 
 2922              		.loc 19 1185 1 view .LVU693
 2923 0054 BDE81040 		pop	{r4, lr}
 2924              		.cfi_remember_state
 2925              		.cfi_restore 14
 2926              		.cfi_restore 4
 2927              		.cfi_def_cfa_offset 0
 2928              	.LBB994:
 2929              	.LBB993:
1178:Veno-Echo.cpp ****                     }
 2930              		.loc 19 1178 51 view .LVU694
 2931 0058 FFF7FEBF 		b	_ZN8TempoLED10resetPhaseEv
 2932              	.LVL149:
 2933              	.L160:
 2934              		.cfi_restore_state
1173:Veno-Echo.cpp ****                     }
 2935              		.loc 19 1173 25 is_stmt 1 view .LVU695
1173:Veno-Echo.cpp ****                     }
 2936              		.loc 19 1173 51 is_stmt 0 view .LVU696
 2937 005c 0948     		ldr	r0, .L161+32
 2938 005e FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 2939              	.LVL150:
 2940 0062 F2E7     		b	.L151
 2941              	.L162:
 2942              		.align	2
 2943              	.L161:
 2944 0064 00000000 		.word	.LANCHOR44
 2945 0068 00000000 		.word	.LANCHOR45
 2946 006c 00000000 		.word	.LANCHOR46
 2947 0070 00000000 		.word	.LANCHOR47
 2948 0074 00000000 		.word	.LANCHOR48
 2949 0078 00000000 		.word	.LANCHOR49
 2950 007c 00000000 		.word	.LANCHOR50
 2951 0080 04000000 		.word	.LANCHOR1+4
 2952 0084 04000000 		.word	.LANCHOR0+4
 2953              	.LBE993:
 2954              	.LBE994:
 2955              		.cfi_endproc
 2956              	.LFE4307:
 2958              		.section	.text._Z19Update_BaseTempoLEDv,"ax",%progbits
 2959              		.align	1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 108


 2960              		.p2align 2,,3
 2961              		.global	_Z19Update_BaseTempoLEDv
 2962              		.syntax unified
 2963              		.thumb
 2964              		.thumb_func
 2965              		.fpu fpv5-d16
 2967              	_Z19Update_BaseTempoLEDv:
 2968              	.LFB4309:
1322:Veno-Echo.cpp ****     tempoLED_BASE.update();
 2969              		.loc 19 1322 1 is_stmt 1 view -0
 2970              		.cfi_startproc
 2971              		@ args = 0, pretend = 0, frame = 0
 2972              		@ frame_needed = 0, uses_anonymous_args = 0
1323:Veno-Echo.cpp **** 
 2973              		.loc 19 1323 5 view .LVU698
1323:Veno-Echo.cpp **** 
 2974              		.loc 19 1323 25 is_stmt 0 view .LVU699
 2975 0000 0F48     		ldr	r0, .L177
1322:Veno-Echo.cpp ****     tempoLED_BASE.update();
 2976              		.loc 19 1322 1 view .LVU700
 2977 0002 10B5     		push	{r4, lr}
 2978              		.cfi_def_cfa_offset 8
 2979              		.cfi_offset 4, -8
 2980              		.cfi_offset 14, -4
1323:Veno-Echo.cpp **** 
 2981              		.loc 19 1323 25 view .LVU701
 2982 0004 FFF7FEFF 		bl	_ZN8TempoLED6updateEv
 2983              	.LVL151:
1325:Veno-Echo.cpp ****     {
 2984              		.loc 19 1325 5 is_stmt 1 view .LVU702
1325:Veno-Echo.cpp ****     {
 2985              		.loc 19 1325 27 is_stmt 0 view .LVU703
 2986 0008 0D48     		ldr	r0, .L177
 2987 000a FFF7FEFF 		bl	_ZN8TempoLED5isEOCEv
 2988              	.LVL152:
1325:Veno-Echo.cpp ****     {
 2989              		.loc 19 1325 5 view .LVU704
 2990 000e 28B1     		cbz	r0, .L163
1327:Veno-Echo.cpp ****         {
 2991              		.loc 19 1327 9 is_stmt 1 view .LVU705
 2992 0010 0C4C     		ldr	r4, .L177+4
 2993 0012 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2994 0014 4BB9     		cbnz	r3, .L175
1333:Veno-Echo.cpp ****         {
 2995              		.loc 19 1333 9 view .LVU706
 2996 0016 0C4C     		ldr	r4, .L177+8
 2997 0018 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 2998 001a 03B9     		cbnz	r3, .L176
 2999              	.L163:
1340:Veno-Echo.cpp **** 
 3000              		.loc 19 1340 1 is_stmt 0 view .LVU707
 3001 001c 10BD     		pop	{r4, pc}
 3002              	.L176:
 3003              	.LBB997:
 3004              	.LBI997:
1321:Veno-Echo.cpp **** {
 3005              		.loc 19 1321 6 is_stmt 1 view .LVU708
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 109


 3006              	.LBB998:
1335:Veno-Echo.cpp ****             delayR_flag = false;
 3007              		.loc 19 1335 13 view .LVU709
1335:Veno-Echo.cpp ****             delayR_flag = false;
 3008              		.loc 19 1335 39 is_stmt 0 view .LVU710
 3009 001e 0B48     		ldr	r0, .L177+12
 3010 0020 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 3011              	.LVL153:
1336:Veno-Echo.cpp ****         }
 3012              		.loc 19 1336 13 is_stmt 1 view .LVU711
1336:Veno-Echo.cpp ****         }
 3013              		.loc 19 1336 25 is_stmt 0 view .LVU712
 3014 0024 0023     		movs	r3, #0
 3015 0026 2370     		strb	r3, [r4]
 3016              	.LBE998:
 3017              	.LBE997:
1340:Veno-Echo.cpp **** 
 3018              		.loc 19 1340 1 view .LVU713
 3019 0028 10BD     		pop	{r4, pc}
 3020              	.L175:
1329:Veno-Echo.cpp ****             delayL_flag = false;
 3021              		.loc 19 1329 13 is_stmt 1 view .LVU714
1329:Veno-Echo.cpp ****             delayL_flag = false;
 3022              		.loc 19 1329 39 is_stmt 0 view .LVU715
 3023 002a 0948     		ldr	r0, .L177+16
 3024 002c FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 3025              	.LVL154:
1330:Veno-Echo.cpp ****         }
 3026              		.loc 19 1330 13 is_stmt 1 view .LVU716
1330:Veno-Echo.cpp ****         }
 3027              		.loc 19 1330 25 is_stmt 0 view .LVU717
 3028 0030 0023     		movs	r3, #0
 3029 0032 2370     		strb	r3, [r4]
1333:Veno-Echo.cpp ****         {
 3030              		.loc 19 1333 9 is_stmt 1 view .LVU718
 3031 0034 044C     		ldr	r4, .L177+8
 3032 0036 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3033 0038 002B     		cmp	r3, #0
 3034 003a EFD0     		beq	.L163
 3035 003c EFE7     		b	.L176
 3036              	.L178:
 3037 003e 00BF     		.align	2
 3038              	.L177:
 3039 0040 00000000 		.word	.LANCHOR46
 3040 0044 00000000 		.word	.LANCHOR51
 3041 0048 00000000 		.word	.LANCHOR52
 3042 004c 04000000 		.word	.LANCHOR1+4
 3043 0050 04000000 		.word	.LANCHOR0+4
 3044              		.cfi_endproc
 3045              	.LFE4309:
 3047              		.section	.text._Z11SetTempoDivfP9TempoDivs,"ax",%progbits
 3048              		.align	1
 3049              		.p2align 2,,3
 3050              		.global	_Z11SetTempoDivfP9TempoDivs
 3051              		.syntax unified
 3052              		.thumb
 3053              		.thumb_func
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 110


 3054              		.fpu fpv5-d16
 3056              	_Z11SetTempoDivfP9TempoDivs:
 3057              	.LVL155:
 3058              	.LFB4310:
1344:Veno-Echo.cpp **** 
 3059              		.loc 19 1344 1 view -0
 3060              		.cfi_startproc
 3061              		@ args = 0, pretend = 0, frame = 0
 3062              		@ frame_needed = 0, uses_anonymous_args = 0
 3063              		@ link register save eliminated.
1346:Veno-Echo.cpp **** 
 3064              		.loc 19 1346 5 view .LVU720
1348:Veno-Echo.cpp ****     {
 3065              		.loc 19 1348 5 view .LVU721
 3066 0000 DFED417A 		vldr.32	s15, .L225
 3067 0004 B4EEE70A 		vcmpe.f32	s0, s15
 3068 0008 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3069 000c 04D5     		bpl	.L213
1350:Veno-Echo.cpp ****         *div = DIV6;
 3070              		.loc 19 1350 9 view .LVU722
 3071              	.LVL156:
1351:Veno-Echo.cpp ****     }
 3072              		.loc 19 1351 9 view .LVU723
1351:Veno-Echo.cpp ****     }
 3073              		.loc 19 1351 14 is_stmt 0 view .LVU724
 3074 000e 0023     		movs	r3, #0
1350:Veno-Echo.cpp ****         *div = DIV6;
 3075              		.loc 19 1350 16 view .LVU725
 3076 0010 9FED3E0A 		vldr.32	s0, .L225+4
 3077              	.LVL157:
1351:Veno-Echo.cpp ****     }
 3078              		.loc 19 1351 14 view .LVU726
 3079 0014 0370     		strb	r3, [r0]
 3080 0016 7047     		bx	lr
 3081              	.LVL158:
 3082              	.L213:
1354:Veno-Echo.cpp ****     {
 3083              		.loc 19 1354 10 is_stmt 1 view .LVU727
 3084 0018 DFED3D7A 		vldr.32	s15, .L225+8
 3085 001c B4EEE70A 		vcmpe.f32	s0, s15
 3086 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3087 0024 04D5     		bpl	.L214
1356:Veno-Echo.cpp ****        *div = DIV5;
 3088              		.loc 19 1356 8 view .LVU728
 3089              	.LVL159:
1357:Veno-Echo.cpp ****     }
 3090              		.loc 19 1357 8 view .LVU729
1357:Veno-Echo.cpp ****     }
 3091              		.loc 19 1357 13 is_stmt 0 view .LVU730
 3092 0026 0123     		movs	r3, #1
1356:Veno-Echo.cpp ****        *div = DIV5;
 3093              		.loc 19 1356 15 view .LVU731
 3094 0028 9FED3A0A 		vldr.32	s0, .L225+12
 3095              	.LVL160:
1357:Veno-Echo.cpp ****     }
 3096              		.loc 19 1357 13 view .LVU732
 3097 002c 0370     		strb	r3, [r0]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 111


 3098 002e 7047     		bx	lr
 3099              	.LVL161:
 3100              	.L214:
1360:Veno-Echo.cpp ****     {
 3101              		.loc 19 1360 10 is_stmt 1 view .LVU733
 3102 0030 DFED397A 		vldr.32	s15, .L225+16
 3103 0034 B4EEE70A 		vcmpe.f32	s0, s15
 3104 0038 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3105 003c 0BD4     		bmi	.L223
1366:Veno-Echo.cpp ****     {
 3106              		.loc 19 1366 10 view .LVU734
 3107 003e DFED377A 		vldr.32	s15, .L225+20
 3108 0042 B4EEE70A 		vcmpe.f32	s0, s15
 3109 0046 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3110 004a 09D5     		bpl	.L216
1368:Veno-Echo.cpp ****         *div = DIV3;
 3111              		.loc 19 1368 9 view .LVU735
 3112              	.LVL162:
1369:Veno-Echo.cpp ****     }
 3113              		.loc 19 1369 9 view .LVU736
1369:Veno-Echo.cpp ****     }
 3114              		.loc 19 1369 14 is_stmt 0 view .LVU737
 3115 004c 0323     		movs	r3, #3
1368:Veno-Echo.cpp ****         *div = DIV3;
 3116              		.loc 19 1368 16 view .LVU738
 3117 004e 9FED340A 		vldr.32	s0, .L225+24
 3118              	.LVL163:
1369:Veno-Echo.cpp ****     }
 3119              		.loc 19 1369 14 view .LVU739
 3120 0052 0370     		strb	r3, [r0]
 3121 0054 7047     		bx	lr
 3122              	.LVL164:
 3123              	.L223:
1362:Veno-Echo.cpp ****         *div = DIV4;
 3124              		.loc 19 1362 9 is_stmt 1 view .LVU740
1363:Veno-Echo.cpp ****     }
 3125              		.loc 19 1363 9 view .LVU741
1363:Veno-Echo.cpp ****     }
 3126              		.loc 19 1363 14 is_stmt 0 view .LVU742
 3127 0056 0223     		movs	r3, #2
1362:Veno-Echo.cpp ****         *div = DIV4;
 3128              		.loc 19 1362 16 view .LVU743
 3129 0058 B5EE000A 		vmov.f32	s0, #2.5e-1
 3130              	.LVL165:
1363:Veno-Echo.cpp ****     }
 3131              		.loc 19 1363 14 view .LVU744
 3132 005c 0370     		strb	r3, [r0]
 3133 005e 7047     		bx	lr
 3134              	.LVL166:
 3135              	.L216:
1372:Veno-Echo.cpp ****     {
 3136              		.loc 19 1372 10 is_stmt 1 view .LVU745
 3137 0060 DFED307A 		vldr.32	s15, .L225+28
 3138 0064 B4EEE70A 		vcmpe.f32	s0, s15
 3139 0068 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3140 006c 0BD4     		bmi	.L224
1378:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 112


 3141              		.loc 19 1378 10 view .LVU746
 3142 006e DFED2E7A 		vldr.32	s15, .L225+32
 3143 0072 B4EEE70A 		vcmpe.f32	s0, s15
 3144 0076 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3145 007a 09D5     		bpl	.L218
 3146              	.L201:
1380:Veno-Echo.cpp ****         *div = UNITY;
 3147              		.loc 19 1380 9 view .LVU747
 3148              	.LVL167:
1381:Veno-Echo.cpp ****     }
 3149              		.loc 19 1381 9 view .LVU748
1381:Veno-Echo.cpp ****     }
 3150              		.loc 19 1381 14 is_stmt 0 view .LVU749
 3151 007c 0523     		movs	r3, #5
1380:Veno-Echo.cpp ****         *div = UNITY;
 3152              		.loc 19 1380 16 view .LVU750
 3153 007e B7EE000A 		vmov.f32	s0, #1.0e+0
 3154              	.LVL168:
1381:Veno-Echo.cpp ****     }
 3155              		.loc 19 1381 14 view .LVU751
 3156 0082 0370     		strb	r3, [r0]
 3157 0084 7047     		bx	lr
 3158              	.LVL169:
 3159              	.L224:
1374:Veno-Echo.cpp ****         *div = DIV2;
 3160              		.loc 19 1374 9 is_stmt 1 view .LVU752
1375:Veno-Echo.cpp ****     }
 3161              		.loc 19 1375 9 view .LVU753
1375:Veno-Echo.cpp ****     }
 3162              		.loc 19 1375 14 is_stmt 0 view .LVU754
 3163 0086 0423     		movs	r3, #4
1374:Veno-Echo.cpp ****         *div = DIV2;
 3164              		.loc 19 1374 16 view .LVU755
 3165 0088 B6EE000A 		vmov.f32	s0, #5.0e-1
 3166              	.LVL170:
1375:Veno-Echo.cpp ****     }
 3167              		.loc 19 1375 14 view .LVU756
 3168 008c 0370     		strb	r3, [r0]
 3169 008e 7047     		bx	lr
 3170              	.LVL171:
 3171              	.L218:
1384:Veno-Echo.cpp ****     {
 3172              		.loc 19 1384 10 is_stmt 1 view .LVU757
 3173 0090 DFED267A 		vldr.32	s15, .L225+36
 3174 0094 B4EEE70A 		vcmpe.f32	s0, s15
 3175 0098 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3176 009c 04D5     		bpl	.L219
1386:Veno-Echo.cpp ****         *div = MULT2;
 3177              		.loc 19 1386 9 view .LVU758
 3178              	.LVL172:
1387:Veno-Echo.cpp ****     }
 3179              		.loc 19 1387 9 view .LVU759
1387:Veno-Echo.cpp ****     }
 3180              		.loc 19 1387 14 is_stmt 0 view .LVU760
 3181 009e 0623     		movs	r3, #6
1386:Veno-Echo.cpp ****         *div = MULT2;
 3182              		.loc 19 1386 16 view .LVU761
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 113


 3183 00a0 B0EE000A 		vmov.f32	s0, #2.0e+0
 3184              	.LVL173:
1387:Veno-Echo.cpp ****     }
 3185              		.loc 19 1387 14 view .LVU762
 3186 00a4 0370     		strb	r3, [r0]
 3187 00a6 7047     		bx	lr
 3188              	.LVL174:
 3189              	.L219:
1390:Veno-Echo.cpp ****     {
 3190              		.loc 19 1390 10 is_stmt 1 view .LVU763
 3191 00a8 DFED217A 		vldr.32	s15, .L225+40
 3192 00ac B4EEE70A 		vcmpe.f32	s0, s15
 3193 00b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3194 00b4 04D5     		bpl	.L220
1392:Veno-Echo.cpp ****         *div = MULT3;
 3195              		.loc 19 1392 9 view .LVU764
 3196              	.LVL175:
1393:Veno-Echo.cpp ****     }
 3197              		.loc 19 1393 9 view .LVU765
1393:Veno-Echo.cpp ****     }
 3198              		.loc 19 1393 14 is_stmt 0 view .LVU766
 3199 00b6 0723     		movs	r3, #7
1392:Veno-Echo.cpp ****         *div = MULT3;
 3200              		.loc 19 1392 16 view .LVU767
 3201 00b8 B0EE080A 		vmov.f32	s0, #3.0e+0
 3202              	.LVL176:
1393:Veno-Echo.cpp ****     }
 3203              		.loc 19 1393 14 view .LVU768
 3204 00bc 0370     		strb	r3, [r0]
 3205 00be 7047     		bx	lr
 3206              	.LVL177:
 3207              	.L220:
1396:Veno-Echo.cpp ****     {
 3208              		.loc 19 1396 10 is_stmt 1 view .LVU769
 3209 00c0 DFED1C7A 		vldr.32	s15, .L225+44
 3210 00c4 B4EEE70A 		vcmpe.f32	s0, s15
 3211 00c8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3212 00cc 04D5     		bpl	.L221
1398:Veno-Echo.cpp ****         *div = MULT4;
 3213              		.loc 19 1398 9 view .LVU770
 3214              	.LVL178:
1399:Veno-Echo.cpp ****     }
 3215              		.loc 19 1399 9 view .LVU771
1399:Veno-Echo.cpp ****     }
 3216              		.loc 19 1399 14 is_stmt 0 view .LVU772
 3217 00ce 0823     		movs	r3, #8
1398:Veno-Echo.cpp ****         *div = MULT4;
 3218              		.loc 19 1398 16 view .LVU773
 3219 00d0 B1EE000A 		vmov.f32	s0, #4.0e+0
 3220              	.LVL179:
1399:Veno-Echo.cpp ****     }
 3221              		.loc 19 1399 14 view .LVU774
 3222 00d4 0370     		strb	r3, [r0]
 3223 00d6 7047     		bx	lr
 3224              	.LVL180:
 3225              	.L221:
 3226              	.LBB1001:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 114


 3227              	.LBI1001:
1343:Veno-Echo.cpp **** {
 3228              		.loc 19 1343 7 is_stmt 1 view .LVU775
 3229              	.LBB1002:
1402:Veno-Echo.cpp ****     {
 3230              		.loc 19 1402 10 view .LVU776
 3231 00d8 DFED177A 		vldr.32	s15, .L225+48
 3232 00dc B4EEE70A 		vcmpe.f32	s0, s15
 3233 00e0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3234 00e4 04D5     		bpl	.L222
1404:Veno-Echo.cpp ****         *div = MULT5;
 3235              		.loc 19 1404 9 view .LVU777
 3236              	.LVL181:
1405:Veno-Echo.cpp ****     }
 3237              		.loc 19 1405 9 view .LVU778
1405:Veno-Echo.cpp ****     }
 3238              		.loc 19 1405 14 is_stmt 0 view .LVU779
 3239 00e6 0923     		movs	r3, #9
1404:Veno-Echo.cpp ****         *div = MULT5;
 3240              		.loc 19 1404 16 view .LVU780
 3241 00e8 B1EE040A 		vmov.f32	s0, #5.0e+0
 3242              	.LVL182:
1405:Veno-Echo.cpp ****     }
 3243              		.loc 19 1405 14 view .LVU781
 3244 00ec 0370     		strb	r3, [r0]
 3245 00ee 7047     		bx	lr
 3246              	.LVL183:
 3247              	.L222:
1408:Veno-Echo.cpp ****     {
 3248              		.loc 19 1408 10 is_stmt 1 view .LVU782
 3249 00f0 F7EE007A 		vmov.f32	s15, #1.0e+0
 3250 00f4 B4EEE70A 		vcmpe.f32	s0, s15
 3251 00f8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3252 00fc BED8     		bhi	.L201
1410:Veno-Echo.cpp ****        *div = MULT6;
 3253              		.loc 19 1410 8 view .LVU783
 3254              	.LVL184:
1411:Veno-Echo.cpp ****     }
 3255              		.loc 19 1411 8 view .LVU784
1411:Veno-Echo.cpp ****     }
 3256              		.loc 19 1411 13 is_stmt 0 view .LVU785
 3257 00fe 0A23     		movs	r3, #10
1410:Veno-Echo.cpp ****        *div = MULT6;
 3258              		.loc 19 1410 15 view .LVU786
 3259 0100 B1EE080A 		vmov.f32	s0, #6.0e+0
 3260              	.LVL185:
1410:Veno-Echo.cpp ****        *div = MULT6;
 3261              		.loc 19 1410 15 view .LVU787
 3262              	.LBE1002:
 3263              	.LBE1001:
1419:Veno-Echo.cpp **** 
 3264              		.loc 19 1419 1 is_stmt 1 view .LVU788
 3265              	.LBB1004:
 3266              	.LBB1003:
1411:Veno-Echo.cpp ****     }
 3267              		.loc 19 1411 13 is_stmt 0 view .LVU789
 3268 0104 0370     		strb	r3, [r0]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 115


 3269              	.LBE1003:
 3270              	.LBE1004:
1421:Veno-Echo.cpp **** 
 3271              		.loc 19 1421 1 view .LVU790
 3272 0106 7047     		bx	lr
 3273              	.L226:
 3274              		.align	2
 3275              	.L225:
 3276 0108 C729BA3D 		.word	1035610567
 3277 010c ABAA2A3E 		.word	1042983595
 3278 0110 C7293A3E 		.word	1043999175
 3279 0114 CDCC4C3E 		.word	1045220557
 3280 0118 569F8B3E 		.word	1049337686
 3281 011c C729BA3E 		.word	1052387783
 3282 0120 ABAAAA3E 		.word	1051372203
 3283 0124 39B4E83E 		.word	1055437881
 3284 0128 E3A50B3F 		.word	1057727971
 3285 012c 1CEB223F 		.word	1059253020
 3286 0130 55303A3F 		.word	1060778069
 3287 0134 8E75513F 		.word	1062303118
 3288 0138 C7BA683F 		.word	1063828167
 3289              		.cfi_endproc
 3290              	.LFE4310:
 3292              		.section	.text._Z17Update_DelayTimeRv,"ax",%progbits
 3293              		.align	1
 3294              		.p2align 2,,3
 3295              		.global	_Z17Update_DelayTimeRv
 3296              		.syntax unified
 3297              		.thumb
 3298              		.thumb_func
 3299              		.fpu fpv5-d16
 3301              	_Z17Update_DelayTimeRv:
 3302              	.LFB4294:
 855:Veno-Echo.cpp ****     static int counterR{};
 3303              		.loc 19 855 1 is_stmt 1 view -0
 3304              		.cfi_startproc
 3305              		@ args = 0, pretend = 0, frame = 0
 3306              		@ frame_needed = 0, uses_anonymous_args = 0
 856:Veno-Echo.cpp ****     float delayTimeR_Pot{};
 3307              		.loc 19 856 5 view .LVU792
 857:Veno-Echo.cpp ****     static float delayTimeR_Pot_Last{};
 3308              		.loc 19 857 5 view .LVU793
 3309              	.LVL186:
 858:Veno-Echo.cpp **** 
 3310              		.loc 19 858 5 view .LVU794
 861:Veno-Echo.cpp **** 
 3311              		.loc 19 861 5 view .LVU795
 855:Veno-Echo.cpp ****     static int counterR{};
 3312              		.loc 19 855 1 is_stmt 0 view .LVU796
 3313 0000 10B5     		push	{r4, lr}
 3314              		.cfi_def_cfa_offset 8
 3315              		.cfi_offset 4, -8
 3316              		.cfi_offset 14, -4
 861:Veno-Echo.cpp **** 
 3317              		.loc 19 861 40 view .LVU797
 3318 0002 0622     		movs	r2, #6
 3319 0004 0721     		movs	r1, #7
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 116


 3320 0006 4E48     		ldr	r0, .L247
 855:Veno-Echo.cpp ****     static int counterR{};
 3321              		.loc 19 855 1 view .LVU798
 3322 0008 2DED028B 		vpush.64	{d8}
 3323              		.cfi_def_cfa_offset 16
 3324              		.cfi_offset 80, -16
 3325              		.cfi_offset 81, -12
 861:Veno-Echo.cpp **** 
 3326              		.loc 19 861 40 view .LVU799
 3327 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3328              	.LVL187:
 865:Veno-Echo.cpp **** 
 3329              		.loc 19 865 26 view .LVU800
 3330 0010 4C48     		ldr	r0, .L247+4
 865:Veno-Echo.cpp **** 
 3331              		.loc 19 865 31 view .LVU801
 3332 0012 4D4B     		ldr	r3, .L247+8
 861:Veno-Echo.cpp **** 
 3333              		.loc 19 861 40 view .LVU802
 3334 0014 F0EE407A 		vmov.f32	s15, s0
 3335              	.LVL188:
 865:Veno-Echo.cpp **** 
 3336              		.loc 19 865 5 is_stmt 1 view .LVU803
 865:Veno-Echo.cpp **** 
 3337              		.loc 19 865 26 is_stmt 0 view .LVU804
 3338 0018 0268     		ldr	r2, [r0]
 3339              	.LBB1005:
 867:Veno-Echo.cpp **** {
 3340              		.loc 19 867 5 view .LVU805
 3341 001a 4C49     		ldr	r1, .L247+12
 3342              	.LBE1005:
 865:Veno-Echo.cpp **** 
 3343              		.loc 19 865 26 view .LVU806
 3344 001c 0132     		adds	r2, r2, #1
 3345              	.LBB1036:
 867:Veno-Echo.cpp **** {
 3346              		.loc 19 867 1 view .LVU807
 3347 001e 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 3348              	.LBE1036:
 865:Veno-Echo.cpp **** 
 3349              		.loc 19 865 31 view .LVU808
 3350 0020 83FB0231 		smull	r3, r1, r3, r2
 3351 0024 D317     		asrs	r3, r2, #31
 3352 0026 C3EB6113 		rsb	r3, r3, r1, asr #5
 3353 002a 03EB4303 		add	r3, r3, r3, lsl #1
 3354 002e A2EB8313 		sub	r3, r2, r3, lsl #6
 865:Veno-Echo.cpp **** 
 3355              		.loc 19 865 14 view .LVU809
 3356 0032 0360     		str	r3, [r0]
 867:Veno-Echo.cpp **** {
 3357              		.loc 19 867 1 is_stmt 1 view .LVU810
 3358              	.LBB1037:
 3359 0034 002C     		cmp	r4, #0
 3360 0036 45D1     		bne	.L228
 3361              	.LBB1006:
 870:Veno-Echo.cpp **** //calculate combined CV and pot delay time
 3362              		.loc 19 870 1 view .LVU811
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 117


 872:Veno-Echo.cpp **** 
 3363              		.loc 19 872 28 is_stmt 0 view .LVU812
 3364 0038 4549     		ldr	r1, .L247+16
 3365              	.LBB1007:
 3366              	.LBB1008:
1612:Veno-Echo.cpp **** 
 3367              		.loc 19 1612 39 view .LVU813
 3368 003a F7EE006A 		vmov.f32	s13, #1.0e+0
1612:Veno-Echo.cpp **** 
 3369              		.loc 19 1612 49 view .LVU814
 3370 003e F6EE005A 		vmov.f32	s11, #5.0e-1
 3371              	.LBE1008:
 3372              	.LBE1007:
 870:Veno-Echo.cpp **** //calculate combined CV and pot delay time
 3373              		.loc 19 870 21 view .LVU815
 3374 0042 444A     		ldr	r2, .L247+20
 3375              	.LBB1013:
 3376              	.LBB1009:
1612:Veno-Echo.cpp **** 
 3377              		.loc 19 1612 39 view .LVU816
 3378 0044 91ED007A 		vldr.32	s14, [r1]
1612:Veno-Echo.cpp **** 
 3379              		.loc 19 1612 12 view .LVU817
 3380 0048 B0EE006A 		vmov.f32	s12, #2.0e+0
 3381              	.LBE1009:
 3382              	.LBE1013:
 870:Veno-Echo.cpp **** //calculate combined CV and pot delay time
 3383              		.loc 19 870 21 view .LVU818
 3384 004c 82ED000A 		vstr.32	s0, [r2]
 872:Veno-Echo.cpp **** 
 3385              		.loc 19 872 1 is_stmt 1 view .LVU819
 3386              	.LVL189:
 3387              	.LBB1014:
 3388              	.LBI1007:
1609:Veno-Echo.cpp **** {
 3389              		.loc 19 1609 7 view .LVU820
 3390              	.LBB1010:
1611:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3391              		.loc 19 1611 5 view .LVU821
1612:Veno-Echo.cpp **** 
 3392              		.loc 19 1612 5 view .LVU822
1612:Veno-Echo.cpp **** 
 3393              		.loc 19 1612 39 is_stmt 0 view .LVU823
 3394 0050 36EEC77A 		vsub.f32	s14, s13, s14
 3395              	.LVL190:
1612:Veno-Echo.cpp **** 
 3396              		.loc 19 1612 49 view .LVU824
 3397 0054 37EE657A 		vsub.f32	s14, s14, s11
1612:Veno-Echo.cpp **** 
 3398              		.loc 19 1612 12 view .LVU825
 3399 0058 E7EE067A 		vfma.f32	s15, s14, s12
 3400              	.LVL191:
1614:Veno-Echo.cpp ****     {
 3401              		.loc 19 1614 5 is_stmt 1 view .LVU826
 3402 005c F5EEC07A 		vcmpe.f32	s15, #0
 3403 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3404 0064 0DD4     		bmi	.L237
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 118


1619:Veno-Echo.cpp ****     {
 3405              		.loc 19 1619 5 view .LVU827
1621:Veno-Echo.cpp ****     }
 3406              		.loc 19 1621 16 is_stmt 0 view .LVU828
 3407 0066 F4EE667A 		vcmp.f32	s15, s13
 3408              	.LBE1010:
 3409              	.LBE1014:
 874:Veno-Echo.cpp ****     {
 3410              		.loc 19 874 9 view .LVU829
 3411 006a 3B4A     		ldr	r2, .L247+24
 874:Veno-Echo.cpp ****     {
 3412              		.loc 19 874 5 view .LVU830
 3413 006c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3414              	.LBB1015:
 3415              	.LBB1011:
1621:Veno-Echo.cpp ****     }
 3416              		.loc 19 1621 16 view .LVU831
 3417 006e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3418 0072 36FEA78A 		vselgt.f32	s16, s13, s15
 3419              	.LVL192:
 3420              		.loc 19 1624 5 is_stmt 1 view .LVU832
 3421              		.loc 19 1624 5 is_stmt 0 view .LVU833
 3422              	.LBE1011:
 3423              	.LBE1015:
 874:Veno-Echo.cpp ****     {
 3424              		.loc 19 874 5 is_stmt 1 view .LVU834
 3425 0076 52B9     		cbnz	r2, .L231
 3426              	.L246:
 876:Veno-Echo.cpp ****         {
 3427              		.loc 19 876 9 view .LVU835
 3428 0078 002B     		cmp	r3, #0
 3429 007a 52D0     		beq	.L245
 3430              	.LVL193:
 3431              	.L227:
 876:Veno-Echo.cpp ****         {
 3432              		.loc 19 876 9 is_stmt 0 view .LVU836
 3433              	.LBE1006:
 3434              	.LBE1037:
 910:Veno-Echo.cpp **** void Update_feedbackL_CV()
 3435              		.loc 19 910 1 view .LVU837
 3436 007c BDEC028B 		vldm	sp!, {d8}
 3437              		.cfi_remember_state
 3438              		.cfi_restore 80
 3439              		.cfi_restore 81
 3440              		.cfi_def_cfa_offset 8
 3441 0080 10BD     		pop	{r4, pc}
 3442              	.LVL194:
 3443              	.L237:
 3444              		.cfi_restore_state
 3445              	.LBB1038:
 3446              	.LBB1017:
 874:Veno-Echo.cpp ****     {
 3447              		.loc 19 874 9 view .LVU838
 3448 0082 354A     		ldr	r2, .L247+24
 3449              	.LBB1016:
 3450              	.LBB1012:
1616:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 119


 3451              		.loc 19 1616 16 view .LVU839
 3452 0084 9FED358A 		vldr.32	s16, .L247+28
 3453              	.LVL195:
 3454              		.loc 19 1624 5 is_stmt 1 view .LVU840
 3455              		.loc 19 1624 5 is_stmt 0 view .LVU841
 3456              	.LBE1012:
 3457              	.LBE1016:
 874:Veno-Echo.cpp ****     {
 3458              		.loc 19 874 5 is_stmt 1 view .LVU842
 3459 0088 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3460 008a 002A     		cmp	r2, #0
 3461 008c F4D0     		beq	.L246
 3462              	.L231:
 885:Veno-Echo.cpp ****         {
 3463              		.loc 19 885 9 view .LVU843
 3464 008e 002B     		cmp	r3, #0
 3465 0090 F4D1     		bne	.L227
 888:Veno-Echo.cpp ****             {
 3466              		.loc 19 888 13 view .LVU844
 888:Veno-Echo.cpp ****             {
 3467              		.loc 19 888 58 is_stmt 0 view .LVU845
 3468 0092 3348     		ldr	r0, .L247+32
 3469 0094 FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 3470              	.LVL196:
 888:Veno-Echo.cpp ****             {
 3471              		.loc 19 888 82 view .LVU846
 3472 0098 3248     		ldr	r0, .L247+36
 888:Veno-Echo.cpp ****             {
 3473              		.loc 19 888 58 view .LVU847
 3474 009a B0EE407A 		vmov.f32	s14, s0
 888:Veno-Echo.cpp ****             {
 3475              		.loc 19 888 82 view .LVU848
 3476 009e B0EE480A 		vmov.f32	s0, s16
 3477 00a2 FFF7FEFF 		bl	_Z11SetTempoDivfP9TempoDivs
 3478              	.LVL197:
 888:Veno-Echo.cpp ****             {
 3479              		.loc 19 888 61 view .LVU849
 3480 00a6 DFED307A 		vldr.32	s15, .L247+40
 888:Veno-Echo.cpp ****             {
 3481              		.loc 19 888 35 view .LVU850
 3482 00aa 3048     		ldr	r0, .L247+44
 888:Veno-Echo.cpp ****             {
 3483              		.loc 19 888 61 view .LVU851
 3484 00ac 27EE277A 		vmul.f32	s14, s14, s15
 888:Veno-Echo.cpp ****             {
 3485              		.loc 19 888 35 view .LVU852
 3486 00b0 27EE000A 		vmul.f32	s0, s14, s0
 3487 00b4 FFF7FEFF 		bl	_ZN10DelayMulti12SetDelayTimeEf
 3488              	.LVL198:
 888:Veno-Echo.cpp ****             {
 3489              		.loc 19 888 13 view .LVU853
 3490 00b8 0028     		cmp	r0, #0
 3491 00ba DFD0     		beq	.L227
 890:Veno-Echo.cpp ****             }
 3492              		.loc 19 890 17 is_stmt 1 view .LVU854
 890:Veno-Echo.cpp ****             }
 3493              		.loc 19 890 29 is_stmt 0 view .LVU855
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 120


 3494 00bc 2C4B     		ldr	r3, .L247+48
 3495 00be 0122     		movs	r2, #1
 3496 00c0 1A70     		strb	r2, [r3]
 3497 00c2 DBE7     		b	.L227
 3498              	.LVL199:
 3499              	.L228:
 890:Veno-Echo.cpp ****             }
 3500              		.loc 19 890 29 view .LVU856
 3501              	.LBE1017:
 3502              	.LBE1038:
 899:Veno-Echo.cpp ****     {
 3503              		.loc 19 899 5 is_stmt 1 view .LVU857
 3504              	.LBB1039:
 3505              	.LBB1018:
 3506              	.LBB1019:
 3507              	.LBI1019:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3508              		.loc 20 75 3 view .LVU858
 3509              	.LBB1020:
 3510              		.loc 20 76 5 view .LVU859
 3511              		.loc 20 76 5 is_stmt 0 view .LVU860
 3512              	.LBE1020:
 3513              	.LBE1019:
 899:Veno-Echo.cpp ****     {
 3514              		.loc 19 899 11 view .LVU861
 3515 00c4 234B     		ldr	r3, .L247+20
 899:Veno-Echo.cpp ****     {
 3516              		.loc 19 899 5 view .LVU862
 3517 00c6 DFED2B6A 		vldr.32	s13, .L247+52
 899:Veno-Echo.cpp ****     {
 3518              		.loc 19 899 11 view .LVU863
 3519 00ca 93ED007A 		vldr.32	s14, [r3]
 3520 00ce 77EE407A 		vsub.f32	s15, s14, s0
 3521              	.LBB1022:
 3522              	.LBB1021:
 3523              		.loc 20 76 31 view .LVU864
 3524 00d2 F0EEE77A 		vabs.f32	s15, s15
 3525              	.LBE1021:
 3526              	.LBE1022:
 899:Veno-Echo.cpp ****     {
 3527              		.loc 19 899 5 view .LVU865
 3528 00d6 F4EEE67A 		vcmpe.f32	s15, s13
 3529 00da F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3530 00de CDDD     		ble	.L227
 3531              	.LBB1023:
 901:Veno-Echo.cpp ****         TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>(MAX
 3532              		.loc 19 901 9 is_stmt 1 view .LVU866
 902:Veno-Echo.cpp ****         
 3533              		.loc 19 902 9 view .LVU867
 902:Veno-Echo.cpp ****         
 3534              		.loc 19 902 57 is_stmt 0 view .LVU868
 3535 00e0 F0EE080A 		vmov.f32	s1, #3.0e+0
 3536 00e4 0020     		movs	r0, #0
 3537 00e6 9FED1D1A 		vldr.32	s2, .L247+28
 3538 00ea FFF7FEFF 		bl	_Z5scalefff9CurveType
 3539              	.LVL200:
 3540              	.LBB1024:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 121


 3541              	.LBI1024:
 3542              		.file 22 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // -*- C++ -*- C forwarding header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** /** @file include/cmath
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  as macros in C).
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  */
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // ISO C++ 14882: 26.5  C library
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #pragma GCC system_header
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/c++config.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/cpp_type_traits.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <ext/type_traits.h>
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include_next <math.h>
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/std_abs.h>
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_CMATH
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_CMATH 1
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef div
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acos
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asin
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 122


  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan2
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ceil
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cos
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cosh
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fabs
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef floor
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmod
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef frexp
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ldexp
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log10
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef modf
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef pow
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sin
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sinh
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sqrt
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tan
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tanh
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** extern "C++"
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acos;
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(float __x)
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosf(__x); }
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(long double __x)
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosl(__x); }
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acos(_Tp __x)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acos(__x); }
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asin;
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(float __x)
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinf(__x); }
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(long double __x)
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinl(__x); }
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 123


 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asin(_Tp __x)
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asin(__x); }
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan;
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(float __x)
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanf(__x); }
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(long double __x)
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanl(__x); }
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan(_Tp __x)
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atan(__x); }
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan2;
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(float __y, float __x)
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2f(__y, __x); }
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(long double __y, long double __x)
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2l(__y, __x); }
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan2(_Tp __y, _Up __x)
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return atan2(__type(__y), __type(__x));
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ceil;
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(float __x)
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceilf(__x); }
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(long double __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 124


 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceill(__x); }
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ceil(_Tp __x)
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ceil(__x); }
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cos;
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(float __x)
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosf(__x); }
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(long double __x)
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosl(__x); }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cos(_Tp __x)
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cos(__x); }
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cosh;
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(float __x)
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshf(__x); }
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(long double __x)
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshl(__x); }
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cosh(_Tp __x)
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cosh(__x); }
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(float __x)
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expf(__x); }
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(long double __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 125


 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expl(__x); }
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp(_Tp __x)
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp(__x); }
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fabs;
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(float __x)
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsf(__x); }
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(long double __x)
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsl(__x); }
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fabs(_Tp __x)
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_fabs(__x); }
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::floor;
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(float __x)
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorf(__x); }
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(long double __x)
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorl(__x); }
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     floor(_Tp __x)
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_floor(__x); }
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmod;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(float __x, float __y)
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodf(__x, __y); }
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(long double __x, long double __y)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 126


 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodl(__x, __y); }
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmod(_Tp __x, _Up __y)
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmod(__type(__x), __type(__y));
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::frexp;
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(float __x, int* __exp)
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(long double __x, int* __exp)
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     frexp(_Tp __x, int* __exp)
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_frexp(__x, __exp); }
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ldexp;
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(float __x, int __exp)
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(long double __x, int __exp)
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ldexp(_Tp __x, int __exp)
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log;
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(float __x)
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logf(__x); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 127


 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(long double __x)
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logl(__x); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log(_Tp __x)
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log(__x); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log10;
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(float __x)
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10f(__x); }
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(long double __x)
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10l(__x); }
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log10(_Tp __x)
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log10(__x); }
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::modf;
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(float __x, float* __iptr)
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modff(__x, __iptr); }
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(long double __x, long double* __iptr)
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::pow;
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, float __y)
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powf(__x, __y); }
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, long double __y)
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powl(__x, __y); }
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus < 201103L
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 550. What should the return type of pow(float,int) be?
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 128


 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline double
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(double __x, int __i)
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powi(__x, __i); }
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, int __n)
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powif(__x, __n); }
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, int __n)
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powil(__x, __n); }
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     pow(_Tp __x, _Up __y)
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return pow(__type(__x), __type(__y));
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sin;
 422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(float __x)
 426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinf(__x); }
 427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(long double __x)
 430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinl(__x); }
 431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sin(_Tp __x)
 438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sin(__x); }
 439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sinh;
 441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(float __x)
 445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhf(__x); }
 446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(long double __x)
 449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhl(__x); }
 450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 129


 455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sinh(_Tp __x)
 457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sinh(__x); }
 458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sqrt;
 460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(float __x)
 464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtf(__x); }
 465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(long double __x)
 468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtl(__x); }
 469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sqrt(_Tp __x)
 476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sqrt(__x); }
 477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tan;
 479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(float __x)
 483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanf(__x); }
 484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(long double __x)
 487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanl(__x); }
 488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tan(_Tp __x)
 495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tan(__x); }
 496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tanh;
 498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(float __x)
 502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhf(__x); }
 503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(long double __x)
 506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhl(__x); }
 507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 130


 512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tanh(_Tp __x)
 514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tanh(__x); }
 515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_USE_C99_MATH
 517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC
 518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // These are possible macros imported from C99-land.
 520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fpclassify
 521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isfinite
 522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isinf
 523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnan
 524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnormal
 525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef signbit
 526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreater
 527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreaterequal
 528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isless
 529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessequal
 530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessgreater
 531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isunordered
 532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(float __x)
 538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(double __x)
 543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(long double __x)
 548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               int>::__type
 556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __x)
 557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? FP_NORMAL : FP_ZERO; }
 558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(float __x)
 563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(double __x)
 567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 131


 569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(long double __x)
 571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __x)
 579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return true; }
 580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(float __x)
 585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISINF \
 588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isinf;
 590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(double __x)
 593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(long double __x)
 598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __x)
 606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(float __x)
 612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISNAN \
 615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isnan;
 617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(double __x)
 620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(long double __x)
 625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 132


 626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __x)
 633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(float __x)
 639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(double __x)
 643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(long double __x)
 647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __x)
 655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? true : false; }
 656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // Note: middle-end/36757 is fixed, __builtin_signbit is type-generic.
 660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(float __x)
 662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(double __x)
 666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(long double __x)
 670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __x)
 678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x < 0 ? true : false; }
 679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 133


 683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(float __x, float __y)
 684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(double __x, double __y)
 688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(long double __x, long double __y)
 692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __x, _Up __y)
 701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__x), __type(__y));
 704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(float __x, float __y)
 710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(double __x, double __y)
 714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(long double __x, long double __y)
 718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __x, _Up __y)
 727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__x), __type(__y));
 730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(float __x, float __y)
 736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(double __x, double __y)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 134


 740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(long double __x, long double __y)
 744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __x, _Up __y)
 753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__x), __type(__y));
 756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 758:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 759:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 760:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 761:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(float __x, float __y)
 762:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 763:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 764:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 765:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(double __x, double __y)
 766:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 767:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 768:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 769:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(long double __x, long double __y)
 770:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 771:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 772:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 773:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 774:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 775:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 776:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 777:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 778:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __x, _Up __y)
 779:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 780:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 781:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__x), __type(__y));
 782:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 783:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 784:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 785:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 786:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 787:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(float __x, float __y)
 788:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 789:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 790:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 791:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(double __x, double __y)
 792:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 793:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 794:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 795:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(long double __x, long double __y)
 796:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 135


 797:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 798:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 799:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 800:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 801:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 802:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 803:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 804:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __x, _Up __y)
 805:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 806:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 807:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__x), __type(__y));
 808:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 809:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 810:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 811:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 812:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 813:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(float __x, float __y)
 814:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 815:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 816:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 817:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(double __x, double __y)
 818:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 819:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 820:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 821:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(long double __x, long double __y)
 822:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 823:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 824:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 825:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 826:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 827:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 828:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 829:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 830:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __x, _Up __y)
 831:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 832:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 833:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__x), __type(__y));
 834:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 835:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 836:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 837:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 838:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 839:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 840:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 841:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 842:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __f)
 843:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 844:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 845:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 846:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				  FP_SUBNORMAL, FP_ZERO, __type(__f));
 847:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 848:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 849:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 850:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 851:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 852:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __f)
 853:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 136


 854:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 855:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isfinite(__type(__f));
 856:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 857:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 858:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 859:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 860:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 861:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __f)
 862:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 863:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 864:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isinf(__type(__f));
 865:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 866:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 867:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 868:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 869:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 870:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __f)
 871:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 872:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 873:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnan(__type(__f));
 874:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 875:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 876:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 877:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 878:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 879:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __f)
 880:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 881:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 882:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnormal(__type(__f));
 883:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 884:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 885:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 886:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 887:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 888:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __f)
 889:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 890:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 891:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_signbit(__type(__f));
 892:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 893:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 894:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 895:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 896:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 897:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __f1, _Tp __f2)
 898:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 899:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 900:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__f1), __type(__f2));
 901:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 902:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 903:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 904:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 905:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 906:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __f1, _Tp __f2)
 907:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 908:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 909:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__f1), __type(__f2));
 910:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 137


 911:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 912:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 913:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 914:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 915:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __f1, _Tp __f2)
 916:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 917:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 918:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__f1), __type(__f2));
 919:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 920:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 921:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 922:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 923:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 924:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __f1, _Tp __f2)
 925:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 926:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 927:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__f1), __type(__f2));
 928:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 929:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 930:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 931:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 932:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 933:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __f1, _Tp __f2)
 934:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 935:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 936:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__f1), __type(__f2));
 937:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 938:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 939:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 940:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 941:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 942:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __f1, _Tp __f2)
 943:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 944:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 945:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__f1), __type(__f2));
 946:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 947:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 948:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif // C++11
 949:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_FP_MACROS_DYNAMIC */
 950:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_MATH */
 951:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 952:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 953:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 954:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifdef _GLIBCXX_USE_C99_MATH_TR1
 955:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 956:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acosh
 957:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshf
 958:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshl
 959:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinh
 960:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhf
 961:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhl
 962:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanh
 963:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhf
 964:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhl
 965:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrt
 966:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtf
 967:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtl
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 138


 968:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysign
 969:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignf
 970:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignl
 971:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erf
 972:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erff
 973:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfl
 974:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfc
 975:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcf
 976:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcl
 977:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2
 978:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2f
 979:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2l
 980:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1
 981:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1f
 982:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1l
 983:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdim
 984:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdimf
 985:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdiml
 986:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fma
 987:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaf
 988:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmal
 989:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmax
 990:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxf
 991:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxl
 992:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmin
 993:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminf
 994:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminl
 995:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypot
 996:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotf
 997:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotl
 998:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogb
 999:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbf
1000:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbl
1001:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgamma
1002:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammaf
1003:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammal
1004:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1005:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrint
1006:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintf
1007:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintl
1008:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llround
1009:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundf
1010:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundl
1011:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1012:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1p
1013:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pf
1014:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pl
1015:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2
1016:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2f
1017:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2l
1018:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logb
1019:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbf
1020:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbl
1021:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrint
1022:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintf
1023:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintl
1024:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lround
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 139


1025:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundf
1026:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundl
1027:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nan
1028:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanf
1029:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanl
1030:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyint
1031:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintf
1032:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintl
1033:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafter
1034:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterf
1035:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterl
1036:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttoward
1037:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardf
1038:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardl
1039:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainder
1040:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderf
1041:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderl
1042:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquo
1043:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquof
1044:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquol
1045:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rint
1046:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintf
1047:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintl
1048:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef round
1049:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundf
1050:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundl
1051:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbln
1052:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnf
1053:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnl
1054:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbn
1055:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnf
1056:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnl
1057:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgamma
1058:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammaf
1059:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammal
1060:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef trunc
1061:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncf
1062:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncl
1063:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1064:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // types
1065:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::double_t;
1066:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::float_t;
1067:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1068:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // functions
1069:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acosh;
1070:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshf;
1071:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshl;
1072:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1073:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinh;
1074:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhf;
1075:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhl;
1076:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1077:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanh;
1078:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhf;
1079:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhl;
1080:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1081:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrt;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 140


1082:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtf;
1083:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtl;
1084:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1085:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysign;
1086:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignf;
1087:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignl;
1088:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1089:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erf;
1090:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erff;
1091:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfl;
1092:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1093:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfc;
1094:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcf;
1095:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcl;
1096:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1097:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2;
1098:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2f;
1099:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2l;
1100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1;
1102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1f;
1103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1l;
1104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdim;
1106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdimf;
1107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdiml;
1108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fma;
1110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaf;
1111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmal;
1112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmax;
1114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxf;
1115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxl;
1116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmin;
1118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminf;
1119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminl;
1120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypot;
1122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotf;
1123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotl;
1124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogb;
1126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbf;
1127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbl;
1128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgamma;
1130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammaf;
1131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammal;
1132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrint;
1135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintf;
1136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintl;
1137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llround;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 141


1139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundf;
1140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundl;
1141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1p;
1144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pf;
1145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pl;
1146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2;
1148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2f;
1149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2l;
1150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logb;
1152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbf;
1153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbl;
1154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrint;
1156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintf;
1157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintl;
1158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lround;
1160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundf;
1161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundl;
1162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nan;
1164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanf;
1165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanl;
1166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyint;
1168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintf;
1169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintl;
1170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafter;
1172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterf;
1173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterl;
1174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttoward;
1176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardf;
1177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardl;
1178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainder;
1180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderf;
1181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderl;
1182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquo;
1184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquof;
1185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquol;
1186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rint;
1188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintf;
1189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintl;
1190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::round;
1192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundf;
1193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundl;
1194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbln;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 142


1196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnf;
1197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnl;
1198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbn;
1200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnf;
1201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnl;
1202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgamma;
1204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammaf;
1205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammal;
1206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::trunc;
1208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncf;
1209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncl;
1210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   /// Additional overloads.
1212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(float __x)
1215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshf(__x); }
1216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(long double __x)
1219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshl(__x); }
1220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acosh(_Tp __x)
1227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acosh(__x); }
1228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(float __x)
1233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhf(__x); }
1234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(long double __x)
1237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhl(__x); }
1238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asinh(_Tp __x)
1245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asinh(__x); }
1246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(float __x)
1251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhf(__x); }
1252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 143


1253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(long double __x)
1255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhl(__x); }
1256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atanh(_Tp __x)
1263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atanh(__x); }
1264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(float __x)
1269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtf(__x); }
1270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(long double __x)
1273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtl(__x); }
1274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cbrt(_Tp __x)
1281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cbrt(__x); }
1282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(float __x, float __y)
1287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignf(__x, __y); }
1288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(long double __x, long double __y)
1291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignl(__x, __y); }
1292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     copysign(_Tp __x, _Up __y)
1298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return copysign(__type(__x), __type(__y));
1301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(float __x)
1307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erff(__x); }
1308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 144


1310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(long double __x)
1311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfl(__x); }
1312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erf(_Tp __x)
1319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erf(__x); }
1320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(float __x)
1325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcf(__x); }
1326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(long double __x)
1329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcl(__x); }
1330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erfc(_Tp __x)
1337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erfc(__x); }
1338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(float __x)
1343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2f(__x); }
1344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(long double __x)
1347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2l(__x); }
1348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp2(_Tp __x)
1355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp2(__x); }
1356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(float __x)
1361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1f(__x); }
1362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(long double __x)
1365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1l(__x); }
1366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 145


1367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     expm1(_Tp __x)
1373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_expm1(__x); }
1374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(float __x, float __y)
1379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdimf(__x, __y); }
1380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(long double __x, long double __y)
1383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdiml(__x, __y); }
1384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fdim(_Tp __x, _Up __y)
1390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fdim(__type(__x), __type(__y));
1393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(float __x, float __y, float __z)
1399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaf(__x, __y, __z); }
1400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(long double __x, long double __y, long double __z)
1403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmal(__x, __y, __z); }
1404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up, typename _Vp>
1408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type
1409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fma(_Tp __x, _Up __y, _Vp __z)
1410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type __type;
1412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fma(__type(__x), __type(__y), __type(__z));
1413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(float __x, float __y)
1419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxf(__x, __y); }
1420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(long double __x, long double __y)
1423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxl(__x, __y); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 146


1424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmax(_Tp __x, _Up __y)
1430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmax(__type(__x), __type(__y));
1433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(float __x, float __y)
1439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminf(__x, __y); }
1440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(long double __x, long double __y)
1443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminl(__x, __y); }
1444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmin(_Tp __x, _Up __y)
1450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmin(__type(__x), __type(__y));
1453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(float __x, float __y)
1459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotf(__x, __y); }
1460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(long double __x, long double __y)
1463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotl(__x, __y); }
1464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     hypot(_Tp __x, _Up __y)
1470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return hypot(__type(__x), __type(__y));
1473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(float __x)
1479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbf(__x); }
1480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 147


1481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(long double __x)
1483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbl(__x); }
1484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr
1489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     int>::__type
1491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ilogb(_Tp __x)
1492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ilogb(__x); }
1493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(float __x)
1498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammaf(__x); }
1499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(long double __x)
1502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammal(__x); }
1503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lgamma(_Tp __x)
1510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lgamma(__x); }
1511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(float __x)
1516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintf(__x); }
1517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(long double __x)
1520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintl(__x); }
1521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llrint(_Tp __x)
1528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llrint(__x); }
1529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(float __x)
1534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundf(__x); }
1535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(long double __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 148


1538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundl(__x); }
1539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llround(_Tp __x)
1546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llround(__x); }
1547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(float __x)
1552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pf(__x); }
1553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(long double __x)
1556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pl(__x); }
1557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log1p(_Tp __x)
1564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log1p(__x); }
1565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 568.
1569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(float __x)
1571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2f(__x); }
1572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(long double __x)
1575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2l(__x); }
1576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log2(_Tp __x)
1583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log2(__x); }
1584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(float __x)
1589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbf(__x); }
1590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(long double __x)
1593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbl(__x); }
1594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 149


1595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     logb(_Tp __x)
1601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_logb(__x); }
1602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(float __x)
1607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintf(__x); }
1608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(long double __x)
1611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintl(__x); }
1612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lrint(_Tp __x)
1619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lrint(__x); }
1620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(float __x)
1625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundf(__x); }
1626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(long double __x)
1629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundl(__x); }
1630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lround(_Tp __x)
1637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lround(__x); }
1638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(float __x)
1643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintf(__x); }
1644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(long double __x)
1647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintl(__x); }
1648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 150


1652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nearbyint(_Tp __x)
1655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nearbyint(__x); }
1656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(float __x, float __y)
1661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterf(__x, __y); }
1662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(long double __x, long double __y)
1665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterl(__x, __y); }
1666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nextafter(_Tp __x, _Up __y)
1672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return nextafter(__type(__x), __type(__y));
1675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(float __x, long double __y)
1681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardf(__x, __y); }
1682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(long double __x, long double __y)
1685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardl(__x, __y); }
1686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nexttoward(_Tp __x, long double __y)
1693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nexttoward(__x, __y); }
1694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(float __x, float __y)
1699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderf(__x, __y); }
1700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(long double __x, long double __y)
1703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderl(__x, __y); }
1704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 151


1709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remainder(_Tp __x, _Up __y)
1710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remainder(__type(__x), __type(__y));
1713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
1718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(float __x, float __y, int* __pquo)
1719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquof(__x, __y, __pquo); }
1720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
1722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(long double __x, long double __y, int* __pquo)
1723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquol(__x, __y, __pquo); }
1724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remquo(_Tp __x, _Up __y, int* __pquo)
1730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remquo(__type(__x), __type(__y), __pquo);
1733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(float __x)
1739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintf(__x); }
1740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(long double __x)
1743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintl(__x); }
1744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     rint(_Tp __x)
1751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_rint(__x); }
1752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   round(float __x)
 3543              		.loc 22 1756 3 is_stmt 1 view .LVU869
 3544              	.LBB1025:
1757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_roundf(__x); }
 3545              		.loc 22 1757 5 view .LVU870
 3546              		.loc 22 1757 28 is_stmt 0 view .LVU871
 3547 00ee B8FE400A 		vrinta.f32	s0, s0
 3548              	.LVL201:
 3549              		.loc 22 1757 28 view .LVU872
 3550              	.LBE1025:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 152


 3551              	.LBE1024:
 904:Veno-Echo.cpp ****         //save setting:
 3552              		.loc 19 904 9 is_stmt 1 view .LVU873
 3553              	.LBB1026:
 3554              	.LBI1026:
1423:Veno-Echo.cpp **** {
 3555              		.loc 19 1423 7 view .LVU874
 3556              	.LBB1027:
1425:Veno-Echo.cpp ****     switch(ratio)
 3557              		.loc 19 1425 5 view .LVU875
1426:Veno-Echo.cpp ****     {
 3558              		.loc 19 1426 5 view .LVU876
 3559              	.LBE1027:
 3560              	.LBE1026:
 902:Veno-Echo.cpp ****         
 3561              		.loc 19 902 126 is_stmt 0 view .LVU877
 3562 00f2 FCEEC07A 		vcvt.u32.f32	s15, s0
 3563 00f6 17EE903A 		vmov	r3, s15	@ int
 3564 00fa 013B     		subs	r3, r3, #1
 3565 00fc DBB2     		uxtb	r3, r3
 3566 00fe 022B     		cmp	r3, #2
 3567 0100 1BD8     		bhi	.L238
 3568 0102 1D4A     		ldr	r2, .L247+56
 3569 0104 02EB8303 		add	r3, r2, r3, lsl #2
 3570 0108 93ED008A 		vldr.32	s16, [r3]
 3571              	.L236:
 3572              	.LVL202:
 3573              	.LBB1029:
 3574              	.LBB1028:
1449:Veno-Echo.cpp **** }
 3575              		.loc 19 1449 1 is_stmt 1 view .LVU878
1449:Veno-Echo.cpp **** }
 3576              		.loc 19 1449 1 is_stmt 0 view .LVU879
 3577              	.LBE1028:
 3578              	.LBE1029:
 904:Veno-Echo.cpp ****         //save setting:
 3579              		.loc 19 904 30 view .LVU880
 3580 010c B0EE480A 		vmov.f32	s0, s16
 3581              	.LVL203:
 904:Veno-Echo.cpp ****         //save setting:
 3582              		.loc 19 904 30 view .LVU881
 3583 0110 1348     		ldr	r0, .L247+32
 3584 0112 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 3585              	.LVL204:
 906:Veno-Echo.cpp ****     }
 3586              		.loc 19 906 9 is_stmt 1 view .LVU882
 906:Veno-Echo.cpp ****     }
 3587              		.loc 19 906 9 is_stmt 0 view .LVU883
 3588              	.LBE1023:
 3589              	.LBE1018:
 3590              	.LBE1039:
1425:Veno-Echo.cpp ****     switch(ratio)
 3591              		.loc 19 1425 5 is_stmt 1 view .LVU884
1426:Veno-Echo.cpp ****     {
 3592              		.loc 19 1426 5 view .LVU885
1449:Veno-Echo.cpp **** }
 3593              		.loc 19 1449 1 view .LVU886
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 153


 3594              	.LBB1040:
 3595              	.LBB1032:
 3596              	.LBB1030:
 906:Veno-Echo.cpp ****     }
 3597              		.loc 19 906 30 is_stmt 0 view .LVU887
 3598 0116 194B     		ldr	r3, .L247+60
 3599 0118 83ED018A 		vstr.32	s16, [r3, #4]
 3600              	.LBE1030:
 3601              	.LBE1032:
 3602              	.LBE1040:
 910:Veno-Echo.cpp **** void Update_feedbackL_CV()
 3603              		.loc 19 910 1 view .LVU888
 3604 011c BDEC028B 		vldm	sp!, {d8}
 3605              		.cfi_remember_state
 3606              		.cfi_restore 80
 3607              		.cfi_restore 81
 3608              		.cfi_def_cfa_offset 8
 3609 0120 10BD     		pop	{r4, pc}
 3610              	.LVL205:
 3611              	.L245:
 3612              		.cfi_restore_state
 3613              	.LBB1041:
 3614              	.LBB1033:
 879:Veno-Echo.cpp ****         }
 3615              		.loc 19 879 13 is_stmt 1 view .LVU889
 879:Veno-Echo.cpp ****         }
 3616              		.loc 19 879 36 is_stmt 0 view .LVU890
 3617 0122 B7EE000A 		vmov.f32	s0, #1.0e+0
 3618              	.LVL206:
 879:Veno-Echo.cpp ****         }
 3619              		.loc 19 879 36 view .LVU891
 3620 0126 0121     		movs	r1, #1
 3621 0128 1048     		ldr	r0, .L247+44
 3622 012a 30EE480A 		vsub.f32	s0, s0, s16
 3623              	.LBE1033:
 3624              	.LBE1041:
 910:Veno-Echo.cpp **** void Update_feedbackL_CV()
 3625              		.loc 19 910 1 view .LVU892
 3626 012e BDEC028B 		vldm	sp!, {d8}
 3627              		.cfi_remember_state
 3628              		.cfi_restore 80
 3629              		.cfi_restore 81
 3630              		.cfi_def_cfa_offset 8
 3631              	.LVL207:
 910:Veno-Echo.cpp **** void Update_feedbackL_CV()
 3632              		.loc 19 910 1 view .LVU893
 3633 0132 BDE81040 		pop	{r4, lr}
 3634              		.cfi_restore 14
 3635              		.cfi_restore 4
 3636              		.cfi_def_cfa_offset 0
 3637              	.LBB1042:
 3638              	.LBB1034:
 879:Veno-Echo.cpp ****         }
 3639              		.loc 19 879 36 view .LVU894
 3640 0136 FFF7FEBF 		b	_ZN10DelayMulti16SetDelayTime_potEfb
 3641              	.LVL208:
 3642              	.L238:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 154


 3643              		.cfi_restore_state
 879:Veno-Echo.cpp ****         }
 3644              		.loc 19 879 36 view .LVU895
 3645              	.LBE1034:
 3646              	.LBB1035:
 3647              	.LBB1031:
 902:Veno-Echo.cpp ****         
 3648              		.loc 19 902 126 view .LVU896
 3649 013a B7EE008A 		vmov.f32	s16, #1.0e+0
 3650 013e E5E7     		b	.L236
 3651              	.L248:
 3652              		.align	2
 3653              	.L247:
 3654 0140 18000000 		.word	.LANCHOR4+24
 3655 0144 00000000 		.word	.LANCHOR53
 3656 0148 ABAAAA2A 		.word	715827883
 3657 014c 00000000 		.word	.LANCHOR8
 3658 0150 00000000 		.word	.LANCHOR6
 3659 0154 00000000 		.word	.LANCHOR54
 3660 0158 00000000 		.word	.LANCHOR48
 3661 015c 00000000 		.word	0
 3662 0160 00000000 		.word	.LANCHOR47
 3663 0164 00000000 		.word	.LANCHOR50
 3664 0168 00004042 		.word	1111490560
 3665 016c 00000000 		.word	.LANCHOR1
 3666 0170 00000000 		.word	.LANCHOR52
 3667 0174 0AD7A33B 		.word	1000593162
 3668 0178 00000000 		.word	.LANCHOR55
 3669 017c 00000000 		.word	.LANCHOR16
 3670              	.LBE1031:
 3671              	.LBE1035:
 3672              	.LBE1042:
 3673              		.cfi_endproc
 3674              	.LFE4294:
 3676              		.section	.text._Z17Update_DelayTimeLv,"ax",%progbits
 3677              		.align	1
 3678              		.p2align 2,,3
 3679              		.global	_Z17Update_DelayTimeLv
 3680              		.syntax unified
 3681              		.thumb
 3682              		.thumb_func
 3683              		.fpu fpv5-d16
 3685              	_Z17Update_DelayTimeLv:
 3686              	.LFB4292:
 794:Veno-Echo.cpp ****     static int counterL{};
 3687              		.loc 19 794 1 is_stmt 1 view -0
 3688              		.cfi_startproc
 3689              		@ args = 0, pretend = 0, frame = 0
 3690              		@ frame_needed = 0, uses_anonymous_args = 0
 795:Veno-Echo.cpp ****     float delayTimeL_Pot{};
 3691              		.loc 19 795 5 view .LVU898
 796:Veno-Echo.cpp ****     static float delayTimeL_Pot_Last{};
 3692              		.loc 19 796 5 view .LVU899
 3693              	.LVL209:
 797:Veno-Echo.cpp **** 
 3694              		.loc 19 797 5 view .LVU900
 800:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 155


 3695              		.loc 19 800 5 view .LVU901
 794:Veno-Echo.cpp ****     static int counterL{};
 3696              		.loc 19 794 1 is_stmt 0 view .LVU902
 3697 0000 10B5     		push	{r4, lr}
 3698              		.cfi_def_cfa_offset 8
 3699              		.cfi_offset 4, -8
 3700              		.cfi_offset 14, -4
 800:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 3701              		.loc 19 800 40 view .LVU903
 3702 0002 0222     		movs	r2, #2
 3703 0004 0721     		movs	r1, #7
 3704 0006 6048     		ldr	r0, .L273
 794:Veno-Echo.cpp ****     static int counterL{};
 3705              		.loc 19 794 1 view .LVU904
 3706 0008 2DED028B 		vpush.64	{d8}
 3707              		.cfi_def_cfa_offset 16
 3708              		.cfi_offset 80, -16
 3709              		.cfi_offset 81, -12
 800:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 3710              		.loc 19 800 40 view .LVU905
 3711 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3712              	.LVL210:
 803:Veno-Echo.cpp **** 
 3713              		.loc 19 803 26 view .LVU906
 3714 0010 5E48     		ldr	r0, .L273+4
 803:Veno-Echo.cpp **** 
 3715              		.loc 19 803 31 view .LVU907
 3716 0012 5F4B     		ldr	r3, .L273+8
 800:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 3717              		.loc 19 800 40 view .LVU908
 3718 0014 F0EE407A 		vmov.f32	s15, s0
 3719              	.LVL211:
 803:Veno-Echo.cpp **** 
 3720              		.loc 19 803 5 is_stmt 1 view .LVU909
 803:Veno-Echo.cpp **** 
 3721              		.loc 19 803 26 is_stmt 0 view .LVU910
 3722 0018 0268     		ldr	r2, [r0]
 3723              	.LBB1043:
 805:Veno-Echo.cpp **** {
 3724              		.loc 19 805 5 view .LVU911
 3725 001a 5E49     		ldr	r1, .L273+12
 3726              	.LBE1043:
 803:Veno-Echo.cpp **** 
 3727              		.loc 19 803 26 view .LVU912
 3728 001c 0132     		adds	r2, r2, #1
 3729              	.LBB1098:
 805:Veno-Echo.cpp **** {
 3730              		.loc 19 805 1 view .LVU913
 3731 001e 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 3732              	.LBE1098:
 803:Veno-Echo.cpp **** 
 3733              		.loc 19 803 31 view .LVU914
 3734 0020 83FB0231 		smull	r3, r1, r3, r2
 3735 0024 D317     		asrs	r3, r2, #31
 3736 0026 C3EB6113 		rsb	r3, r3, r1, asr #5
 3737 002a 03EB4303 		add	r3, r3, r3, lsl #1
 3738 002e A2EB8313 		sub	r3, r2, r3, lsl #6
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 156


 803:Veno-Echo.cpp **** 
 3739              		.loc 19 803 14 view .LVU915
 3740 0032 0360     		str	r3, [r0]
 805:Veno-Echo.cpp **** {
 3741              		.loc 19 805 1 is_stmt 1 view .LVU916
 3742              	.LBB1099:
 3743 0034 002C     		cmp	r4, #0
 3744 0036 45D1     		bne	.L250
 3745              	.LBB1044:
 808:Veno-Echo.cpp **** //calculate combined CV and pot delay time
 3746              		.loc 19 808 1 view .LVU917
 810:Veno-Echo.cpp **** 
 3747              		.loc 19 810 28 is_stmt 0 view .LVU918
 3748 0038 5749     		ldr	r1, .L273+16
 3749              	.LBB1045:
 3750              	.LBB1046:
1612:Veno-Echo.cpp **** 
 3751              		.loc 19 1612 39 view .LVU919
 3752 003a F7EE006A 		vmov.f32	s13, #1.0e+0
1612:Veno-Echo.cpp **** 
 3753              		.loc 19 1612 49 view .LVU920
 3754 003e F6EE005A 		vmov.f32	s11, #5.0e-1
 3755              	.LBE1046:
 3756              	.LBE1045:
 808:Veno-Echo.cpp **** //calculate combined CV and pot delay time
 3757              		.loc 19 808 21 view .LVU921
 3758 0042 564A     		ldr	r2, .L273+20
 3759              	.LBB1051:
 3760              	.LBB1047:
1612:Veno-Echo.cpp **** 
 3761              		.loc 19 1612 39 view .LVU922
 3762 0044 91ED007A 		vldr.32	s14, [r1]
1612:Veno-Echo.cpp **** 
 3763              		.loc 19 1612 12 view .LVU923
 3764 0048 B0EE006A 		vmov.f32	s12, #2.0e+0
 3765              	.LBE1047:
 3766              	.LBE1051:
 808:Veno-Echo.cpp **** //calculate combined CV and pot delay time
 3767              		.loc 19 808 21 view .LVU924
 3768 004c 82ED000A 		vstr.32	s0, [r2]
 810:Veno-Echo.cpp **** 
 3769              		.loc 19 810 1 is_stmt 1 view .LVU925
 3770              	.LVL212:
 3771              	.LBB1052:
 3772              	.LBI1045:
1609:Veno-Echo.cpp **** {
 3773              		.loc 19 1609 7 view .LVU926
 3774              	.LBB1048:
1611:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3775              		.loc 19 1611 5 view .LVU927
1612:Veno-Echo.cpp **** 
 3776              		.loc 19 1612 5 view .LVU928
1612:Veno-Echo.cpp **** 
 3777              		.loc 19 1612 39 is_stmt 0 view .LVU929
 3778 0050 36EEC77A 		vsub.f32	s14, s13, s14
 3779              	.LVL213:
1612:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 157


 3780              		.loc 19 1612 49 view .LVU930
 3781 0054 37EE657A 		vsub.f32	s14, s14, s11
1612:Veno-Echo.cpp **** 
 3782              		.loc 19 1612 12 view .LVU931
 3783 0058 E7EE067A 		vfma.f32	s15, s14, s12
 3784              	.LVL214:
1614:Veno-Echo.cpp ****     {
 3785              		.loc 19 1614 5 is_stmt 1 view .LVU932
 3786 005c F5EEC07A 		vcmpe.f32	s15, #0
 3787 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3788 0064 0DD4     		bmi	.L262
1619:Veno-Echo.cpp ****     {
 3789              		.loc 19 1619 5 view .LVU933
1621:Veno-Echo.cpp ****     }
 3790              		.loc 19 1621 16 is_stmt 0 view .LVU934
 3791 0066 F4EE667A 		vcmp.f32	s15, s13
 3792              	.LBE1048:
 3793              	.LBE1052:
 812:Veno-Echo.cpp ****     {
 3794              		.loc 19 812 9 view .LVU935
 3795 006a 4D4A     		ldr	r2, .L273+24
 812:Veno-Echo.cpp ****     {
 3796              		.loc 19 812 5 view .LVU936
 3797 006c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3798              	.LBB1053:
 3799              	.LBB1049:
1621:Veno-Echo.cpp ****     }
 3800              		.loc 19 1621 16 view .LVU937
 3801 006e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3802 0072 36FEA78A 		vselgt.f32	s16, s13, s15
 3803              	.LVL215:
 3804              		.loc 19 1624 5 is_stmt 1 view .LVU938
 3805              		.loc 19 1624 5 is_stmt 0 view .LVU939
 3806              	.LBE1049:
 3807              	.LBE1053:
 812:Veno-Echo.cpp ****     {
 3808              		.loc 19 812 5 is_stmt 1 view .LVU940
 3809 0076 52B9     		cbnz	r2, .L253
 3810              	.L272:
 814:Veno-Echo.cpp ****         {
 3811              		.loc 19 814 9 view .LVU941
 3812 0078 002B     		cmp	r3, #0
 3813 007a 78D0     		beq	.L271
 3814              	.LVL216:
 3815              	.L249:
 814:Veno-Echo.cpp ****         {
 3816              		.loc 19 814 9 is_stmt 0 view .LVU942
 3817              	.LBE1044:
 3818              	.LBE1099:
 847:Veno-Echo.cpp **** 
 3819              		.loc 19 847 1 view .LVU943
 3820 007c BDEC028B 		vldm	sp!, {d8}
 3821              		.cfi_remember_state
 3822              		.cfi_restore 80
 3823              		.cfi_restore 81
 3824              		.cfi_def_cfa_offset 8
 3825 0080 10BD     		pop	{r4, pc}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 158


 3826              	.LVL217:
 3827              	.L262:
 3828              		.cfi_restore_state
 3829              	.LBB1100:
 3830              	.LBB1055:
 812:Veno-Echo.cpp ****     {
 3831              		.loc 19 812 9 view .LVU944
 3832 0082 474A     		ldr	r2, .L273+24
 3833              	.LBB1054:
 3834              	.LBB1050:
1616:Veno-Echo.cpp ****     }
 3835              		.loc 19 1616 16 view .LVU945
 3836 0084 9FED478A 		vldr.32	s16, .L273+28
 3837              	.LVL218:
 3838              		.loc 19 1624 5 is_stmt 1 view .LVU946
 3839              		.loc 19 1624 5 is_stmt 0 view .LVU947
 3840              	.LBE1050:
 3841              	.LBE1054:
 812:Veno-Echo.cpp ****     {
 3842              		.loc 19 812 5 is_stmt 1 view .LVU948
 3843 0088 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3844 008a 002A     		cmp	r2, #0
 3845 008c F4D0     		beq	.L272
 3846              	.L253:
 823:Veno-Echo.cpp ****         {
 3847              		.loc 19 823 9 view .LVU949
 3848 008e 002B     		cmp	r3, #0
 3849 0090 F4D1     		bne	.L249
 826:Veno-Echo.cpp ****             {
 3850              		.loc 19 826 13 view .LVU950
 826:Veno-Echo.cpp ****             {
 3851              		.loc 19 826 58 is_stmt 0 view .LVU951
 3852 0092 4548     		ldr	r0, .L273+32
 3853 0094 FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 3854              	.LVL219:
 826:Veno-Echo.cpp ****             {
 3855              		.loc 19 826 82 view .LVU952
 3856 0098 4448     		ldr	r0, .L273+36
 826:Veno-Echo.cpp ****             {
 3857              		.loc 19 826 58 view .LVU953
 3858 009a B0EE407A 		vmov.f32	s14, s0
 826:Veno-Echo.cpp ****             {
 3859              		.loc 19 826 82 view .LVU954
 3860 009e B0EE480A 		vmov.f32	s0, s16
 3861 00a2 FFF7FEFF 		bl	_Z11SetTempoDivfP9TempoDivs
 3862              	.LVL220:
 826:Veno-Echo.cpp ****             {
 3863              		.loc 19 826 61 view .LVU955
 3864 00a6 DFED427A 		vldr.32	s15, .L273+40
 826:Veno-Echo.cpp ****             {
 3865              		.loc 19 826 35 view .LVU956
 3866 00aa 4248     		ldr	r0, .L273+44
 826:Veno-Echo.cpp ****             {
 3867              		.loc 19 826 61 view .LVU957
 3868 00ac 27EE277A 		vmul.f32	s14, s14, s15
 826:Veno-Echo.cpp ****             {
 3869              		.loc 19 826 35 view .LVU958
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 159


 3870 00b0 27EE000A 		vmul.f32	s0, s14, s0
 3871 00b4 FFF7FEFF 		bl	_ZN10DelayMulti12SetDelayTimeEf
 3872              	.LVL221:
 826:Veno-Echo.cpp ****             {
 3873              		.loc 19 826 13 view .LVU959
 3874 00b8 0028     		cmp	r0, #0
 3875 00ba DFD0     		beq	.L249
 828:Veno-Echo.cpp ****             }
 3876              		.loc 19 828 17 is_stmt 1 view .LVU960
 828:Veno-Echo.cpp ****             }
 3877              		.loc 19 828 29 is_stmt 0 view .LVU961
 3878 00bc 3E4B     		ldr	r3, .L273+48
 3879 00be 0122     		movs	r2, #1
 3880 00c0 1A70     		strb	r2, [r3]
 3881 00c2 DBE7     		b	.L249
 3882              	.LVL222:
 3883              	.L250:
 828:Veno-Echo.cpp ****             }
 3884              		.loc 19 828 29 view .LVU962
 3885              	.LBE1055:
 3886              	.LBE1100:
 837:Veno-Echo.cpp ****     {
 3887              		.loc 19 837 5 is_stmt 1 view .LVU963
 3888              	.LBB1101:
 3889              	.LBB1056:
 3890              	.LBB1057:
 3891              	.LBI1057:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3892              		.loc 20 75 3 view .LVU964
 3893              	.LBB1058:
 3894              		.loc 20 76 5 view .LVU965
 3895              		.loc 20 76 5 is_stmt 0 view .LVU966
 3896              	.LBE1058:
 3897              	.LBE1057:
 837:Veno-Echo.cpp ****     {
 3898              		.loc 19 837 11 view .LVU967
 3899 00c4 354B     		ldr	r3, .L273+20
 837:Veno-Echo.cpp ****     {
 3900              		.loc 19 837 5 view .LVU968
 3901 00c6 9FED3D8A 		vldr.32	s16, .L273+52
 837:Veno-Echo.cpp ****     {
 3902              		.loc 19 837 11 view .LVU969
 3903 00ca 93ED007A 		vldr.32	s14, [r3]
 3904 00ce 77EE407A 		vsub.f32	s15, s14, s0
 3905              	.LBB1060:
 3906              	.LBB1059:
 3907              		.loc 20 76 31 view .LVU970
 3908 00d2 F0EEE77A 		vabs.f32	s15, s15
 3909              	.LBE1059:
 3910              	.LBE1060:
 837:Veno-Echo.cpp ****     {
 3911              		.loc 19 837 5 view .LVU971
 3912 00d6 F4EEC87A 		vcmpe.f32	s15, s16
 3913 00da F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3914 00de CDDD     		ble	.L249
 3915              	.LBB1061:
 839:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(Rev_DelayTime);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 160


 3916              		.loc 19 839 9 is_stmt 1 view .LVU972
 839:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(Rev_DelayTime);
 3917              		.loc 19 839 34 is_stmt 0 view .LVU973
 3918 00e0 0120     		movs	r0, #1
 3919 00e2 9FED371A 		vldr.32	s2, .L273+56
 3920 00e6 DFED370A 		vldr.32	s1, .L273+60
 3921 00ea FFF7FEFF 		bl	_Z5scalefff9CurveType
 3922              	.LVL223:
 3923              	.LBB1062:
 3924              	.LBB1063:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 3925              		.loc 19 70 28 view .LVU974
 3926 00ee 364B     		ldr	r3, .L273+64
 3927              	.LVL224:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 3928              		.loc 19 70 28 view .LVU975
 3929              	.LBE1063:
 3930              	.LBE1062:
 840:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(Rev_DelayTime); 
 3931              		.loc 19 840 9 is_stmt 1 view .LVU976
 3932              	.LBB1077:
 3933              	.LBI1062:
  68:Veno-Echo.cpp ****     {
 3934              		.loc 19 68 10 view .LVU977
 3935              	.LBB1075:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 3936              		.loc 19 70 9 view .LVU978
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 3937              		.loc 19 70 28 is_stmt 0 view .LVU979
 3938 00f0 D3ED017A 		vldr.32	s15, [r3, #4]
 3939              	.LVL225:
 3940              	.LBB1064:
 3941              	.LBI1064:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3942              		.loc 20 75 3 is_stmt 1 view .LVU980
 3943              	.LBB1065:
 3944              		.loc 20 76 5 view .LVU981
 3945              		.loc 20 76 5 is_stmt 0 view .LVU982
 3946              	.LBE1065:
 3947              	.LBE1064:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 3948              		.loc 19 70 15 view .LVU983
 3949 00f4 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 3950              		.loc 19 70 53 view .LVU984
 3951 00f8 27EE888A 		vmul.f32	s16, s15, s16
 3952              	.LBB1067:
 3953              	.LBB1066:
 3954              		.loc 20 76 31 view .LVU985
 3955 00fc F0EEC77A 		vabs.f32	s15, s14
 3956              	.LBE1066:
 3957              	.LBE1067:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 3958              		.loc 19 70 9 view .LVU986
 3959 0100 F4EEC87A 		vcmpe.f32	s15, s16
 3960 0104 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3961 0108 0DDD     		ble	.L258
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 161


  74:Veno-Echo.cpp ****             //del -> Reset();
 3962              		.loc 19 74 29 view .LVU987
 3963 010a FCEEC07A 		vcvt.u32.f32	s15, s0
 3964              	.LBB1068:
 3965              	.LBB1069:
 3966              		.loc 18 72 9 view .LVU988
 3967 010e 2F4C     		ldr	r4, .L273+68
 3968              	.LBE1069:
 3969              	.LBE1068:
 3970              	.LBE1075:
 3971              	.LBE1077:
 840:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(Rev_DelayTime); 
 3972              		.loc 19 840 33 view .LVU989
 3973 0110 1968     		ldr	r1, [r3]
 3974              	.LBB1078:
 3975              	.LBB1076:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 3976              		.loc 19 73 13 is_stmt 1 view .LVU990
 3977              	.LBB1072:
 3978              	.LBB1070:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 3979              		.loc 18 71 9 is_stmt 0 view .LVU991
 3980 0112 0020     		movs	r0, #0
 3981              	.LBE1070:
 3982              	.LBE1072:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 3983              		.loc 19 73 27 view .LVU992
 3984 0114 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 3985              		.loc 19 74 13 is_stmt 1 view .LVU993
 3986              	.LVL226:
 3987              	.LBB1073:
 3988              	.LBI1068:
  69:delayline_reverse.h ****     {
 3989              		.loc 18 69 17 view .LVU994
  69:delayline_reverse.h ****     {
 3990              		.loc 18 69 17 is_stmt 0 view .LVU995
 3991              	.LBE1073:
  74:Veno-Echo.cpp ****             //del -> Reset();
 3992              		.loc 19 74 29 view .LVU996
 3993 0118 17EE902A 		vmov	r2, s15	@ int
 3994              	.LBB1074:
 3995              	.LBB1071:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 3996              		.loc 18 71 9 view .LVU997
 3997 011c 0860     		str	r0, [r1]	@ float
 3998              		.loc 18 72 9 view .LVU998
 3999 011e A242     		cmp	r2, r4
 4000 0120 28BF     		it	cs
 4001 0122 2246     		movcs	r2, r4
 4002 0124 0A61     		str	r2, [r1, #16]
 4003              	.LVL227:
 4004              	.L258:
 4005              		.loc 18 72 9 view .LVU999
 4006              	.LBE1071:
 4007              	.LBE1074:
 4008              	.LBE1076:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 162


 4009              	.LBE1078:
 841:Veno-Echo.cpp ****         //save setting:
 4010              		.loc 19 841 9 is_stmt 1 view .LVU1000
 4011              	.LBB1079:
 4012              	.LBI1079:
  68:Veno-Echo.cpp ****     {
 4013              		.loc 19 68 10 view .LVU1001
 4014              	.LBB1080:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4015              		.loc 19 70 9 view .LVU1002
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4016              		.loc 19 70 28 is_stmt 0 view .LVU1003
 4017 0126 2A4B     		ldr	r3, .L273+72
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4018              		.loc 19 70 53 view .LVU1004
 4019 0128 DFED246A 		vldr.32	s13, .L273+52
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4020              		.loc 19 70 28 view .LVU1005
 4021 012c D3ED017A 		vldr.32	s15, [r3, #4]
 4022              	.LVL228:
 4023              	.LBB1081:
 4024              	.LBI1081:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4025              		.loc 20 75 3 is_stmt 1 view .LVU1006
 4026              	.LBB1082:
 4027              		.loc 20 76 5 view .LVU1007
 4028              		.loc 20 76 5 is_stmt 0 view .LVU1008
 4029              	.LBE1082:
 4030              	.LBE1081:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4031              		.loc 19 70 15 view .LVU1009
 4032 0130 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4033              		.loc 19 70 53 view .LVU1010
 4034 0134 67EEA67A 		vmul.f32	s15, s15, s13
 4035              	.LBB1084:
 4036              	.LBB1083:
 4037              		.loc 20 76 31 view .LVU1011
 4038 0138 B0EEC77A 		vabs.f32	s14, s14
 4039              	.LBE1083:
 4040              	.LBE1084:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4041              		.loc 19 70 9 view .LVU1012
 4042 013c B4EEE77A 		vcmpe.f32	s14, s15
 4043 0140 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4044 0144 0DDD     		ble	.L260
  74:Veno-Echo.cpp ****             //del -> Reset();
 4045              		.loc 19 74 29 view .LVU1013
 4046 0146 FCEEC07A 		vcvt.u32.f32	s15, s0
 4047              	.LBB1085:
 4048              	.LBB1086:
 4049              		.loc 18 72 9 view .LVU1014
 4050 014a 204C     		ldr	r4, .L273+68
 4051              	.LBE1086:
 4052              	.LBE1085:
 4053              	.LBE1080:
 4054              	.LBE1079:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 163


 841:Veno-Echo.cpp ****         //save setting:
 4055              		.loc 19 841 33 view .LVU1015
 4056 014c 1968     		ldr	r1, [r3]
 4057              	.LBB1093:
 4058              	.LBB1092:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 4059              		.loc 19 73 13 is_stmt 1 view .LVU1016
 4060              	.LBB1089:
 4061              	.LBB1087:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 4062              		.loc 18 71 9 is_stmt 0 view .LVU1017
 4063 014e 0020     		movs	r0, #0
 4064              	.LBE1087:
 4065              	.LBE1089:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 4066              		.loc 19 73 27 view .LVU1018
 4067 0150 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 4068              		.loc 19 74 13 is_stmt 1 view .LVU1019
 4069              	.LVL229:
 4070              	.LBB1090:
 4071              	.LBI1085:
  69:delayline_reverse.h ****     {
 4072              		.loc 18 69 17 view .LVU1020
  69:delayline_reverse.h ****     {
 4073              		.loc 18 69 17 is_stmt 0 view .LVU1021
 4074              	.LBE1090:
  74:Veno-Echo.cpp ****             //del -> Reset();
 4075              		.loc 19 74 29 view .LVU1022
 4076 0154 17EE902A 		vmov	r2, s15	@ int
 4077              	.LBB1091:
 4078              	.LBB1088:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 4079              		.loc 18 71 9 view .LVU1023
 4080 0158 0860     		str	r0, [r1]	@ float
 4081              		.loc 18 72 9 view .LVU1024
 4082 015a A242     		cmp	r2, r4
 4083 015c 28BF     		it	cs
 4084 015e 2246     		movcs	r2, r4
 4085 0160 0A61     		str	r2, [r1, #16]
 4086              	.LVL230:
 4087              	.L260:
 4088              		.loc 18 72 9 view .LVU1025
 4089              	.LBE1088:
 4090              	.LBE1091:
 4091              	.LBE1092:
 4092              	.LBE1093:
 843:Veno-Echo.cpp ****     }
 4093              		.loc 19 843 9 is_stmt 1 view .LVU1026
 843:Veno-Echo.cpp ****     }
 4094              		.loc 19 843 31 is_stmt 0 view .LVU1027
 4095 0162 1C4B     		ldr	r3, .L273+76
 4096              	.LBE1061:
 4097              	.LBE1056:
 4098              	.LBE1101:
 847:Veno-Echo.cpp **** 
 4099              		.loc 19 847 1 view .LVU1028
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 164


 4100 0164 BDEC028B 		vldm	sp!, {d8}
 4101              		.cfi_remember_state
 4102              		.cfi_restore 80
 4103              		.cfi_restore 81
 4104              		.cfi_def_cfa_offset 8
 4105              	.LBB1102:
 4106              	.LBB1095:
 4107              	.LBB1094:
 843:Veno-Echo.cpp ****     }
 4108              		.loc 19 843 31 view .LVU1029
 4109 0168 83ED000A 		vstr.32	s0, [r3]
 4110              	.LBE1094:
 4111              	.LBE1095:
 4112              	.LBE1102:
 847:Veno-Echo.cpp **** 
 4113              		.loc 19 847 1 view .LVU1030
 4114 016c 10BD     		pop	{r4, pc}
 4115              	.LVL231:
 4116              	.L271:
 4117              		.cfi_restore_state
 4118              	.LBB1103:
 4119              	.LBB1096:
 817:Veno-Echo.cpp ****         }
 4120              		.loc 19 817 13 is_stmt 1 view .LVU1031
 817:Veno-Echo.cpp ****         }
 4121              		.loc 19 817 36 is_stmt 0 view .LVU1032
 4122 016e B7EE000A 		vmov.f32	s0, #1.0e+0
 4123              	.LVL232:
 817:Veno-Echo.cpp ****         }
 4124              		.loc 19 817 36 view .LVU1033
 4125 0172 0121     		movs	r1, #1
 4126 0174 0F48     		ldr	r0, .L273+44
 4127 0176 30EE480A 		vsub.f32	s0, s0, s16
 4128              	.LBE1096:
 4129              	.LBE1103:
 847:Veno-Echo.cpp **** 
 4130              		.loc 19 847 1 view .LVU1034
 4131 017a BDEC028B 		vldm	sp!, {d8}
 4132              		.cfi_restore 80
 4133              		.cfi_restore 81
 4134              		.cfi_def_cfa_offset 8
 4135              	.LVL233:
 847:Veno-Echo.cpp **** 
 4136              		.loc 19 847 1 view .LVU1035
 4137 017e BDE81040 		pop	{r4, lr}
 4138              		.cfi_restore 14
 4139              		.cfi_restore 4
 4140              		.cfi_def_cfa_offset 0
 4141              	.LBB1104:
 4142              	.LBB1097:
 817:Veno-Echo.cpp ****         }
 4143              		.loc 19 817 36 view .LVU1036
 4144 0182 FFF7FEBF 		b	_ZN10DelayMulti16SetDelayTime_potEfb
 4145              	.LVL234:
 4146              	.L274:
 817:Veno-Echo.cpp ****         }
 4147              		.loc 19 817 36 view .LVU1037
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 165


 4148 0186 00BF     		.align	2
 4149              	.L273:
 4150 0188 18000000 		.word	.LANCHOR4+24
 4151 018c 00000000 		.word	.LANCHOR56
 4152 0190 ABAAAA2A 		.word	715827883
 4153 0194 00000000 		.word	.LANCHOR8
 4154 0198 00000000 		.word	.LANCHOR5
 4155 019c 00000000 		.word	.LANCHOR57
 4156 01a0 00000000 		.word	.LANCHOR48
 4157 01a4 00000000 		.word	0
 4158 01a8 00000000 		.word	.LANCHOR47
 4159 01ac 00000000 		.word	.LANCHOR49
 4160 01b0 00004042 		.word	1111490560
 4161 01b4 00000000 		.word	.LANCHOR0
 4162 01b8 00000000 		.word	.LANCHOR51
 4163 01bc 0AD7A33B 		.word	1000593162
 4164 01c0 0050C346 		.word	1187205120
 4165 01c4 00606A48 		.word	1214930944
 4166 01c8 00000000 		.word	.LANCHOR2
 4167 01cc BF270900 		.word	599999
 4168 01d0 00000000 		.word	.LANCHOR3
 4169 01d4 00000000 		.word	.LANCHOR16
 4170              	.LBE1097:
 4171              	.LBE1104:
 4172              		.cfi_endproc
 4173              	.LFE4292:
 4175              		.section	.text._Z11GetTapRatio9TapRatios,"ax",%progbits
 4176              		.align	1
 4177              		.p2align 2,,3
 4178              		.global	_Z11GetTapRatio9TapRatios
 4179              		.syntax unified
 4180              		.thumb
 4181              		.thumb_func
 4182              		.fpu fpv5-d16
 4184              	_Z11GetTapRatio9TapRatios:
 4185              	.LVL235:
 4186              	.LFB4311:
1424:Veno-Echo.cpp ****     float retVal{};
 4187              		.loc 19 1424 1 is_stmt 1 view -0
 4188              		.cfi_startproc
 4189              		@ args = 0, pretend = 0, frame = 0
 4190              		@ frame_needed = 0, uses_anonymous_args = 0
 4191              		@ link register save eliminated.
1425:Veno-Echo.cpp ****     switch(ratio)
 4192              		.loc 19 1425 5 view .LVU1039
1426:Veno-Echo.cpp ****     {
 4193              		.loc 19 1426 5 view .LVU1040
 4194 0000 0138     		subs	r0, r0, #1
 4195              	.LVL236:
1426:Veno-Echo.cpp ****     {
 4196              		.loc 19 1426 5 is_stmt 0 view .LVU1041
 4197 0002 C0B2     		uxtb	r0, r0
 4198 0004 0228     		cmp	r0, #2
 4199 0006 05D8     		bhi	.L277
 4200 0008 044B     		ldr	r3, .L278
 4201 000a 03EB8000 		add	r0, r3, r0, lsl #2
 4202 000e 90ED000A 		vldr.32	s0, [r0]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 166


 4203 0012 7047     		bx	lr
 4204              	.L277:
1424:Veno-Echo.cpp ****     float retVal{};
 4205              		.loc 19 1424 1 view .LVU1042
 4206 0014 B7EE000A 		vmov.f32	s0, #1.0e+0
 4207              	.LVL237:
1449:Veno-Echo.cpp **** }
 4208              		.loc 19 1449 1 is_stmt 1 view .LVU1043
1450:Veno-Echo.cpp **** 
 4209              		.loc 19 1450 1 is_stmt 0 view .LVU1044
 4210 0018 7047     		bx	lr
 4211              	.L279:
 4212 001a 00BF     		.align	2
 4213              	.L278:
 4214 001c 00000000 		.word	.LANCHOR55
 4215              		.cfi_endproc
 4216              	.LFE4311:
 4218              		.section	.text._Z13ApplySettingsRK8Settings,"ax",%progbits
 4219              		.align	1
 4220              		.p2align 2,,3
 4221              		.global	_Z13ApplySettingsRK8Settings
 4222              		.syntax unified
 4223              		.thumb
 4224              		.thumb_func
 4225              		.fpu fpv5-d16
 4227              	_Z13ApplySettingsRK8Settings:
 4228              	.LVL238:
 4229              	.LFB4312:
1453:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 4230              		.loc 19 1453 1 is_stmt 1 view -0
 4231              		.cfi_startproc
 4232              		@ args = 0, pretend = 0, frame = 0
 4233              		@ frame_needed = 0, uses_anonymous_args = 0
1454:Veno-Echo.cpp ****     {
 4234              		.loc 19 1454 5 view .LVU1046
 4235 0000 9FEDCF7A 		vldr.32	s14, .L348
1454:Veno-Echo.cpp ****     {
 4236              		.loc 19 1454 17 is_stmt 0 view .LVU1047
 4237 0004 D0ED007A 		vldr.32	s15, [r0]
1454:Veno-Echo.cpp ****     {
 4238              		.loc 19 1454 5 view .LVU1048
 4239 0008 F4EEC77A 		vcmpe.f32	s15, s14
1453:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 4240              		.loc 19 1453 1 view .LVU1049
 4241 000c 38B5     		push	{r3, r4, r5, lr}
 4242              		.cfi_def_cfa_offset 16
 4243              		.cfi_offset 3, -16
 4244              		.cfi_offset 4, -12
 4245              		.cfi_offset 5, -8
 4246              		.cfi_offset 14, -4
1454:Veno-Echo.cpp ****     {
 4247              		.loc 19 1454 5 view .LVU1050
 4248 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1453:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 4249              		.loc 19 1453 1 view .LVU1051
 4250 0012 0446     		mov	r4, r0
 4251              	.LBB1105:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 167


 4252              	.LBB1106:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4253              		.loc 19 70 28 view .LVU1052
 4254 0014 CB4B     		ldr	r3, .L348+4
 4255              	.LBE1106:
 4256              	.LBE1105:
1454:Veno-Echo.cpp ****     {
 4257              		.loc 19 1454 5 view .LVU1053
 4258 0016 C0F2FD80 		blt	.L281
1454:Veno-Echo.cpp ****     {
 4259              		.loc 19 1454 43 discriminator 1 view .LVU1054
 4260 001a 9FEDCB7A 		vldr.32	s14, .L348+8
 4261 001e F4EEC77A 		vcmpe.f32	s15, s14
 4262 0022 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4263 0026 00F2F580 		bhi	.L281
1456:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 4264              		.loc 19 1456 9 is_stmt 1 view .LVU1055
 4265              	.LVL239:
 4266              	.LBB1120:
 4267              	.LBI1105:
  68:Veno-Echo.cpp ****     {
 4268              		.loc 19 68 10 view .LVU1056
 4269              	.LBB1118:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4270              		.loc 19 70 9 view .LVU1057
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4271              		.loc 19 70 28 is_stmt 0 view .LVU1058
 4272 002a 93ED017A 		vldr.32	s14, [r3, #4]
 4273              	.LVL240:
 4274              	.LBB1107:
 4275              	.LBI1107:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4276              		.loc 20 75 3 is_stmt 1 view .LVU1059
 4277              	.LBB1108:
 4278              		.loc 20 76 5 view .LVU1060
 4279              		.loc 20 76 5 is_stmt 0 view .LVU1061
 4280              	.LBE1108:
 4281              	.LBE1107:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4282              		.loc 19 70 53 view .LVU1062
 4283 002e 9FEDC76A 		vldr.32	s12, .L348+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4284              		.loc 19 70 15 view .LVU1063
 4285 0032 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4286              		.loc 19 70 53 view .LVU1064
 4287 0036 27EE067A 		vmul.f32	s14, s14, s12
 4288              	.LBB1110:
 4289              	.LBB1109:
 4290              		.loc 20 76 31 view .LVU1065
 4291 003a F0EEE66A 		vabs.f32	s13, s13
 4292              	.LBE1109:
 4293              	.LBE1110:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4294              		.loc 19 70 9 view .LVU1066
 4295 003e F4EEC76A 		vcmpe.f32	s13, s14
 4296 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 168


 4297 0046 0FDD     		ble	.L284
  74:Veno-Echo.cpp ****             //del -> Reset();
 4298              		.loc 19 74 29 view .LVU1067
 4299 0048 BCEEE77A 		vcvt.u32.f32	s14, s15
 4300              	.LBB1111:
 4301              	.LBB1112:
 4302              		.loc 18 72 9 view .LVU1068
 4303 004c C04D     		ldr	r5, .L348+16
 4304              	.LBE1112:
 4305              	.LBE1111:
 4306              	.LBE1118:
 4307              	.LBE1120:
1456:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 4308              		.loc 19 1456 33 view .LVU1069
 4309 004e 1968     		ldr	r1, [r3]
 4310              	.LBB1121:
 4311              	.LBB1119:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 4312              		.loc 19 73 13 is_stmt 1 view .LVU1070
 4313              	.LBB1115:
 4314              	.LBB1113:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 4315              		.loc 18 71 9 is_stmt 0 view .LVU1071
 4316 0050 0020     		movs	r0, #0
 4317              	.LVL241:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 4318              		.loc 18 71 9 view .LVU1072
 4319              	.LBE1113:
 4320              	.LBE1115:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 4321              		.loc 19 73 27 view .LVU1073
 4322 0052 C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 4323              		.loc 19 74 13 is_stmt 1 view .LVU1074
 4324              	.LVL242:
 4325              	.LBB1116:
 4326              	.LBI1111:
  69:delayline_reverse.h ****     {
 4327              		.loc 18 69 17 view .LVU1075
  69:delayline_reverse.h ****     {
 4328              		.loc 18 69 17 is_stmt 0 view .LVU1076
 4329              	.LBE1116:
  74:Veno-Echo.cpp ****             //del -> Reset();
 4330              		.loc 19 74 29 view .LVU1077
 4331 0056 17EE102A 		vmov	r2, s14	@ int
 4332              	.LBB1117:
 4333              	.LBB1114:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 4334              		.loc 18 71 9 view .LVU1078
 4335 005a 0860     		str	r0, [r1]	@ float
 4336 005c D4ED007A 		vldr.32	s15, [r4]
 4337              	.LVL243:
 4338              		.loc 18 72 9 view .LVU1079
 4339 0060 AA42     		cmp	r2, r5
 4340 0062 28BF     		it	cs
 4341 0064 2A46     		movcs	r2, r5
 4342 0066 0A61     		str	r2, [r1, #16]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 169


 4343              	.LVL244:
 4344              	.L284:
 4345              		.loc 18 72 9 view .LVU1080
 4346              	.LBE1114:
 4347              	.LBE1117:
 4348              	.LBE1119:
 4349              	.LBE1121:
1457:Veno-Echo.cpp ****     }
 4350              		.loc 19 1457 9 is_stmt 1 view .LVU1081
 4351              	.LBB1122:
 4352              	.LBI1122:
  68:Veno-Echo.cpp ****     {
 4353              		.loc 19 68 10 view .LVU1082
 4354              	.LBB1123:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4355              		.loc 19 70 9 view .LVU1083
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4356              		.loc 19 70 28 is_stmt 0 view .LVU1084
 4357 0068 BA4B     		ldr	r3, .L348+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4358              		.loc 19 70 53 view .LVU1085
 4359 006a 9FEDB86A 		vldr.32	s12, .L348+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4360              		.loc 19 70 28 view .LVU1086
 4361 006e 93ED017A 		vldr.32	s14, [r3, #4]
 4362              	.LVL245:
 4363              	.LBB1124:
 4364              	.LBI1124:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4365              		.loc 20 75 3 is_stmt 1 view .LVU1087
 4366              	.LBB1125:
 4367              		.loc 20 76 5 view .LVU1088
 4368              		.loc 20 76 5 is_stmt 0 view .LVU1089
 4369              	.LBE1125:
 4370              	.LBE1124:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4371              		.loc 19 70 15 view .LVU1090
 4372 0072 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4373              		.loc 19 70 53 view .LVU1091
 4374 0076 27EE067A 		vmul.f32	s14, s14, s12
 4375              	.LBB1127:
 4376              	.LBB1126:
 4377              		.loc 20 76 31 view .LVU1092
 4378 007a F0EEE66A 		vabs.f32	s13, s13
 4379              	.LBE1126:
 4380              	.LBE1127:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4381              		.loc 19 70 9 view .LVU1093
 4382 007e F4EEC76A 		vcmpe.f32	s13, s14
 4383 0082 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4384 0086 00F34B81 		bgt	.L344
 4385              	.LVL246:
 4386              	.L287:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4387              		.loc 19 70 9 view .LVU1094
 4388              	.LBE1123:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 170


 4389              	.LBE1122:
1465:Veno-Echo.cpp ****     {
 4390              		.loc 19 1465 5 is_stmt 1 view .LVU1095
 4391 008a F7EE007A 		vmov.f32	s15, #1.0e+0
1465:Veno-Echo.cpp ****     {
 4392              		.loc 19 1465 17 is_stmt 0 view .LVU1096
 4393 008e 94ED010A 		vldr.32	s0, [r4, #4]
1465:Veno-Echo.cpp ****     {
 4394              		.loc 19 1465 5 view .LVU1097
 4395 0092 B4EEE70A 		vcmpe.f32	s0, s15
 4396 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4397 009a 06DB     		blt	.L292
1465:Veno-Echo.cpp ****     {
 4398              		.loc 19 1465 35 discriminator 1 view .LVU1098
 4399 009c F0EE087A 		vmov.f32	s15, #3.0e+0
 4400 00a0 B4EEE70A 		vcmpe.f32	s0, s15
 4401 00a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4402 00a8 01D9     		bls	.L342
 4403              	.L292:
1471:Veno-Echo.cpp ****     }
 4404              		.loc 19 1471 9 is_stmt 1 view .LVU1099
1471:Veno-Echo.cpp ****     }
 4405              		.loc 19 1471 30 is_stmt 0 view .LVU1100
 4406 00aa B7EE000A 		vmov.f32	s0, #1.0e+0
 4407              	.L342:
 4408 00ae AA48     		ldr	r0, .L348+24
 4409 00b0 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 4410              	.LVL247:
1474:Veno-Echo.cpp ****     {
 4411              		.loc 19 1474 5 is_stmt 1 view .LVU1101
1474:Veno-Echo.cpp ****     {
 4412              		.loc 19 1474 17 is_stmt 0 view .LVU1102
 4413 00b4 D4ED027A 		vldr.32	s15, [r4, #8]
1474:Veno-Echo.cpp ****     {
 4414              		.loc 19 1474 5 view .LVU1103
 4415 00b8 F5EEC07A 		vcmpe.f32	s15, #0
 4416 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4417 00c0 C0F22B81 		blt	.L339
1474:Veno-Echo.cpp ****     {
 4418              		.loc 19 1474 42 discriminator 1 view .LVU1104
 4419 00c4 DFEDA56A 		vldr.32	s13, .L348+28
1480:Veno-Echo.cpp ****     }
 4420              		.loc 19 1480 18 discriminator 1 view .LVU1105
 4421 00c8 9FEDA57A 		vldr.32	s14, .L348+32
 4422 00cc F4EEE67A 		vcmpe.f32	s15, s13
 4423 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4424 00d4 88BF     		it	hi
 4425 00d6 F0EE477A 		vmovhi.f32	s15, s14
 4426              	.L296:
1483:Veno-Echo.cpp ****     {
 4427              		.loc 19 1483 17 view .LVU1106
 4428 00da 94ED030A 		vldr.32	s0, [r4, #12]
1483:Veno-Echo.cpp ****     {
 4429              		.loc 19 1483 5 view .LVU1107
 4430 00de 9FEDA17A 		vldr.32	s14, .L348+36
 4431 00e2 A14B     		ldr	r3, .L348+40
 4432 00e4 B4EEC70A 		vcmpe.f32	s0, s14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 171


 4433              	.LBB1138:
 4434              	.LBB1139:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4435              		.loc 8 60 20 view .LVU1108
 4436 00e8 A04D     		ldr	r5, .L348+44
 4437 00ea C3ED007A 		vstr.32	s15, [r3]
 4438              	.LBE1139:
 4439              	.LBE1138:
1483:Veno-Echo.cpp ****     {
 4440              		.loc 19 1483 5 is_stmt 1 view .LVU1109
 4441 00ee F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4442 00f2 06DB     		blt	.L299
1483:Veno-Echo.cpp ****     {
 4443              		.loc 19 1483 40 is_stmt 0 discriminator 1 view .LVU1110
 4444 00f4 F2EE047A 		vmov.f32	s15, #1.0e+1
 4445 00f8 B4EEE70A 		vcmpe.f32	s0, s15
 4446 00fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4447 0100 01D9     		bls	.L343
 4448              	.L299:
1489:Veno-Echo.cpp ****     }
 4449              		.loc 19 1489 9 is_stmt 1 view .LVU1111
 4450              	.LVL248:
 4451              	.LBB1140:
 4452              	.LBI1140:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 4453              		.loc 8 58 17 view .LVU1112
 4454              	.LBB1141:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4455              		.loc 8 60 9 view .LVU1113
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4456              		.loc 8 60 20 is_stmt 0 view .LVU1114
 4457 0102 9FED9B0A 		vldr.32	s0, .L348+48
 4458              	.LVL249:
 4459              	.L343:
 4460              		.loc 8 61 34 view .LVU1115
 4461 0106 2846     		mov	r0, r5
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4462              		.loc 8 60 20 view .LVU1116
 4463 0108 85ED020A 		vstr.32	s0, [r5, #8]
 4464              		.loc 8 61 9 is_stmt 1 view .LVU1117
 4465              		.loc 8 61 34 is_stmt 0 view .LVU1118
 4466 010c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 4467              	.LVL250:
 4468              	.LBE1141:
 4469              	.LBE1140:
1492:Veno-Echo.cpp ****     {
 4470              		.loc 19 1492 5 view .LVU1119
 4471 0110 DFED987A 		vldr.32	s15, .L348+52
 4472              	.LBB1143:
 4473              	.LBB1142:
 4474              		.loc 8 61 20 view .LVU1120
 4475 0114 85ED060A 		vstr.32	s0, [r5, #24]
 4476              	.LBE1142:
 4477              	.LBE1143:
1492:Veno-Echo.cpp ****     {
 4478              		.loc 19 1492 5 is_stmt 1 view .LVU1121
1492:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 172


 4479              		.loc 19 1492 17 is_stmt 0 view .LVU1122
 4480 0118 94ED050A 		vldr.32	s0, [r4, #20]
1492:Veno-Echo.cpp ****     {
 4481              		.loc 19 1492 5 view .LVU1123
 4482 011c B4EEE70A 		vcmpe.f32	s0, s15
 4483 0120 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4484 0124 07DB     		blt	.L303
1492:Veno-Echo.cpp ****     {
 4485              		.loc 19 1492 40 discriminator 1 view .LVU1124
 4486 0126 DFED947A 		vldr.32	s15, .L348+56
 4487 012a B4EEE70A 		vcmpe.f32	s0, s15
 4488 012e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4489 0132 40F2DF80 		bls	.L345
 4490              	.L303:
1501:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 4491              		.loc 19 1501 9 is_stmt 1 view .LVU1125
1501:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 4492              		.loc 19 1501 22 is_stmt 0 view .LVU1126
 4493 0136 9FED900A 		vldr.32	s0, .L348+56
 4494 013a 9048     		ldr	r0, .L348+60
 4495 013c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 4496              	.LVL251:
1502:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 4497              		.loc 19 1502 9 is_stmt 1 view .LVU1127
1502:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 4498              		.loc 19 1502 22 is_stmt 0 view .LVU1128
 4499 0140 9FED8D0A 		vldr.32	s0, .L348+56
 4500 0144 8E48     		ldr	r0, .L348+64
 4501 0146 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 4502              	.LVL252:
1503:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 4503              		.loc 19 1503 9 is_stmt 1 view .LVU1129
1503:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 4504              		.loc 19 1503 27 is_stmt 0 view .LVU1130
 4505 014a 9FED8B0A 		vldr.32	s0, .L348+56
 4506 014e 8D48     		ldr	r0, .L348+68
 4507 0150 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 4508              	.LVL253:
1504:Veno-Echo.cpp ****     }
 4509              		.loc 19 1504 9 is_stmt 1 view .LVU1131
1504:Veno-Echo.cpp ****     }
 4510              		.loc 19 1504 27 is_stmt 0 view .LVU1132
 4511 0154 9FED880A 		vldr.32	s0, .L348+56
 4512 0158 8B48     		ldr	r0, .L348+72
 4513 015a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 4514              	.LVL254:
 4515              	.L306:
1507:Veno-Echo.cpp ****     {
 4516              		.loc 19 1507 5 is_stmt 1 view .LVU1133
1507:Veno-Echo.cpp ****     {
 4517              		.loc 19 1507 17 is_stmt 0 view .LVU1134
 4518 015e 94ED040A 		vldr.32	s0, [r4, #16]
1507:Veno-Echo.cpp ****     {
 4519              		.loc 19 1507 5 view .LVU1135
 4520 0162 DFED8A7A 		vldr.32	s15, .L348+76
 4521 0166 B4EEE70A 		vcmpe.f32	s0, s15
 4522 016a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 173


 4523 016e 07DB     		blt	.L307
1507:Veno-Echo.cpp ****     {
 4524              		.loc 19 1507 40 discriminator 1 view .LVU1136
 4525 0170 DFED877A 		vldr.32	s15, .L348+80
 4526 0174 B4EEE70A 		vcmpe.f32	s0, s15
 4527 0178 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4528 017c 40F2A780 		bls	.L346
 4529              	.L307:
1516:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 4530              		.loc 19 1516 9 is_stmt 1 view .LVU1137
1516:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 4531              		.loc 19 1516 22 is_stmt 0 view .LVU1138
 4532 0180 9FED840A 		vldr.32	s0, .L348+84
 4533 0184 8448     		ldr	r0, .L348+88
 4534 0186 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 4535              	.LVL255:
1517:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 4536              		.loc 19 1517 9 is_stmt 1 view .LVU1139
1517:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 4537              		.loc 19 1517 22 is_stmt 0 view .LVU1140
 4538 018a 9FED820A 		vldr.32	s0, .L348+84
 4539 018e 8348     		ldr	r0, .L348+92
 4540 0190 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 4541              	.LVL256:
1518:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 4542              		.loc 19 1518 9 is_stmt 1 view .LVU1141
1518:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 4543              		.loc 19 1518 27 is_stmt 0 view .LVU1142
 4544 0194 9FED7F0A 		vldr.32	s0, .L348+84
 4545 0198 8148     		ldr	r0, .L348+96
 4546 019a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 4547              	.LVL257:
1519:Veno-Echo.cpp **** 
 4548              		.loc 19 1519 9 is_stmt 1 view .LVU1143
1519:Veno-Echo.cpp **** 
 4549              		.loc 19 1519 27 is_stmt 0 view .LVU1144
 4550 019e 9FED7D0A 		vldr.32	s0, .L348+84
 4551 01a2 8048     		ldr	r0, .L348+100
 4552 01a4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 4553              	.LVL258:
 4554              	.L310:
1523:Veno-Echo.cpp ****     {
 4555              		.loc 19 1523 5 is_stmt 1 view .LVU1145
1523:Veno-Echo.cpp ****     {
 4556              		.loc 19 1523 17 is_stmt 0 view .LVU1146
 4557 01a8 94ED060A 		vldr.32	s0, [r4, #24]
1523:Veno-Echo.cpp ****     {
 4558              		.loc 19 1523 5 view .LVU1147
 4559 01ac B5EEC00A 		vcmpe.f32	s0, #0
 4560 01b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4561 01b4 06DB     		blt	.L311
1523:Veno-Echo.cpp ****     {
 4562              		.loc 19 1523 38 discriminator 1 view .LVU1148
 4563 01b6 F6EE007A 		vmov.f32	s15, #5.0e-1
 4564 01ba B4EEE70A 		vcmpe.f32	s0, s15
 4565 01be F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4566 01c2 5DD9     		bls	.L347
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 174


 4567              	.L311:
1537:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 4568              		.loc 19 1537 9 is_stmt 1 view .LVU1149
1537:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 4569              		.loc 19 1537 26 is_stmt 0 view .LVU1150
 4570 01c4 9FED660A 		vldr.32	s0, .L348+32
 4571 01c8 6E48     		ldr	r0, .L348+68
 4572 01ca FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 4573              	.LVL259:
1538:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 4574              		.loc 19 1538 9 is_stmt 1 view .LVU1151
1538:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 4575              		.loc 19 1538 26 is_stmt 0 view .LVU1152
 4576 01ce 9FED640A 		vldr.32	s0, .L348+32
 4577 01d2 7348     		ldr	r0, .L348+96
 4578 01d4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 4579              	.LVL260:
1539:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 4580              		.loc 19 1539 9 is_stmt 1 view .LVU1153
1539:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 4581              		.loc 19 1539 26 is_stmt 0 view .LVU1154
 4582 01d8 9FED610A 		vldr.32	s0, .L348+32
 4583 01dc 6A48     		ldr	r0, .L348+72
 4584 01de FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 4585              	.LVL261:
1540:Veno-Echo.cpp ****     }
 4586              		.loc 19 1540 9 is_stmt 1 view .LVU1155
1540:Veno-Echo.cpp ****     }
 4587              		.loc 19 1540 26 is_stmt 0 view .LVU1156
 4588 01e2 9FED5F0A 		vldr.32	s0, .L348+32
 4589 01e6 6F48     		ldr	r0, .L348+100
 4590 01e8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 4591              	.LVL262:
 4592              	.L314:
1543:Veno-Echo.cpp ****     {
 4593              		.loc 19 1543 5 is_stmt 1 view .LVU1157
1543:Veno-Echo.cpp ****     {
 4594              		.loc 19 1543 16 is_stmt 0 view .LVU1158
 4595 01ec D4ED077A 		vldr.32	s15, [r4, #28]
1543:Veno-Echo.cpp ****     {
 4596              		.loc 19 1543 5 view .LVU1159
 4597 01f0 9FED6D7A 		vldr.32	s14, .L348+104
1549:Veno-Echo.cpp ****     }
 4598              		.loc 19 1549 21 view .LVU1160
 4599 01f4 6D4B     		ldr	r3, .L348+108
1543:Veno-Echo.cpp ****     {
 4600              		.loc 19 1543 5 view .LVU1161
 4601 01f6 F4EEC77A 		vcmpe.f32	s15, s14
 4602 01fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4603 01fe 3CD4     		bmi	.L318
1547:Veno-Echo.cpp ****     {
 4604              		.loc 19 1547 14 is_stmt 1 view .LVU1162
 4605 0200 9FED6B7A 		vldr.32	s14, .L348+112
 4606 0204 F4EEC77A 		vcmpe.f32	s15, s14
 4607 0208 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4608 020c 35DD     		ble	.L318
1549:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 175


 4609              		.loc 19 1549 9 view .LVU1163
1549:Veno-Echo.cpp ****     }
 4610              		.loc 19 1549 21 is_stmt 0 view .LVU1164
 4611 020e 0122     		movs	r2, #1
 4612 0210 1A70     		strb	r2, [r3]
1556:Veno-Echo.cpp **** 
 4613              		.loc 19 1556 1 view .LVU1165
 4614 0212 38BD     		pop	{r3, r4, r5, pc}
 4615              	.LVL263:
 4616              	.L281:
1461:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 4617              		.loc 19 1461 9 is_stmt 1 view .LVU1166
 4618              	.LBB1144:
 4619              	.LBI1144:
  68:Veno-Echo.cpp ****     {
 4620              		.loc 19 68 10 view .LVU1167
 4621              	.LBB1145:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4622              		.loc 19 70 9 view .LVU1168
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4623              		.loc 19 70 28 is_stmt 0 view .LVU1169
 4624 0214 D3ED017A 		vldr.32	s15, [r3, #4]
 4625              	.LVL264:
 4626              	.LBB1146:
 4627              	.LBI1146:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4628              		.loc 20 75 3 is_stmt 1 view .LVU1170
 4629              	.LBB1147:
 4630              		.loc 20 76 5 view .LVU1171
 4631              		.loc 20 76 5 is_stmt 0 view .LVU1172
 4632              	.LBE1147:
 4633              	.LBE1146:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4634              		.loc 19 70 15 view .LVU1173
 4635 0218 DFED666A 		vldr.32	s13, .L348+116
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4636              		.loc 19 70 53 view .LVU1174
 4637 021c 9FED4B6A 		vldr.32	s12, .L348+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4638              		.loc 19 70 15 view .LVU1175
 4639 0220 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4640              		.loc 19 70 53 view .LVU1176
 4641 0224 67EE867A 		vmul.f32	s15, s15, s12
 4642              	.LBB1149:
 4643              	.LBB1148:
 4644              		.loc 20 76 31 view .LVU1177
 4645 0228 B0EEC77A 		vabs.f32	s14, s14
 4646              	.LBE1148:
 4647              	.LBE1149:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4648              		.loc 19 70 9 view .LVU1178
 4649 022c B4EEE77A 		vcmpe.f32	s14, s15
 4650 0230 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4651 0234 06DD     		ble	.L288
 4652              	.LBE1145:
 4653              	.LBE1144:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 176


1461:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 4654              		.loc 19 1461 33 view .LVU1179
 4655 0236 1A68     		ldr	r2, [r3]
 4656              	.LBB1155:
 4657              	.LBB1154:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 4658              		.loc 19 73 13 is_stmt 1 view .LVU1180
 4659              	.LBB1150:
 4660              	.LBB1151:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 4661              		.loc 18 71 9 is_stmt 0 view .LVU1181
 4662 0238 0021     		movs	r1, #0
 4663              		.loc 18 72 9 view .LVU1182
 4664 023a 5F48     		ldr	r0, .L348+120
 4665              	.LVL265:
 4666              		.loc 18 72 9 view .LVU1183
 4667              	.LBE1151:
 4668              	.LBE1150:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 4669              		.loc 19 73 27 view .LVU1184
 4670 023c C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 4671              		.loc 19 74 13 is_stmt 1 view .LVU1185
 4672              	.LVL266:
 4673              	.LBB1153:
 4674              	.LBI1150:
  69:delayline_reverse.h ****     {
 4675              		.loc 18 69 17 view .LVU1186
 4676              	.LBB1152:
 4677              		.loc 18 72 9 is_stmt 0 view .LVU1187
 4678 0240 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 4679              		.loc 18 71 9 view .LVU1188
 4680 0242 1160     		str	r1, [r2]	@ float
 4681              	.LVL267:
 4682              	.L288:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 4683              		.loc 18 71 9 view .LVU1189
 4684              	.LBE1152:
 4685              	.LBE1153:
 4686              	.LBE1154:
 4687              	.LBE1155:
1462:Veno-Echo.cpp ****     }
 4688              		.loc 19 1462 9 is_stmt 1 view .LVU1190
 4689              	.LBB1156:
 4690              	.LBI1156:
  68:Veno-Echo.cpp ****     {
 4691              		.loc 19 68 10 view .LVU1191
 4692              	.LBB1157:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4693              		.loc 19 70 9 view .LVU1192
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4694              		.loc 19 70 28 is_stmt 0 view .LVU1193
 4695 0244 434B     		ldr	r3, .L348+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4696              		.loc 19 70 15 view .LVU1194
 4697 0246 DFED5B6A 		vldr.32	s13, .L348+116
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 177


  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4698              		.loc 19 70 28 view .LVU1195
 4699 024a D3ED017A 		vldr.32	s15, [r3, #4]
 4700              	.LVL268:
 4701              	.LBB1158:
 4702              	.LBI1158:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4703              		.loc 20 75 3 is_stmt 1 view .LVU1196
 4704              	.LBB1159:
 4705              		.loc 20 76 5 view .LVU1197
 4706              		.loc 20 76 5 is_stmt 0 view .LVU1198
 4707              	.LBE1159:
 4708              	.LBE1158:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4709              		.loc 19 70 53 view .LVU1199
 4710 024e 9FED3F6A 		vldr.32	s12, .L348+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4711              		.loc 19 70 15 view .LVU1200
 4712 0252 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4713              		.loc 19 70 53 view .LVU1201
 4714 0256 67EE867A 		vmul.f32	s15, s15, s12
 4715              	.LBB1161:
 4716              	.LBB1160:
 4717              		.loc 20 76 31 view .LVU1202
 4718 025a B0EEC77A 		vabs.f32	s14, s14
 4719              	.LBE1160:
 4720              	.LBE1161:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 4721              		.loc 19 70 9 view .LVU1203
 4722 025e B4EEE77A 		vcmpe.f32	s14, s15
 4723 0262 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4724 0266 7FF710AF 		ble	.L287
 4725              	.LBE1157:
 4726              	.LBE1156:
1462:Veno-Echo.cpp ****     }
 4727              		.loc 19 1462 33 view .LVU1204
 4728 026a 1A68     		ldr	r2, [r3]
 4729              	.LBB1167:
 4730              	.LBB1166:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 4731              		.loc 19 73 13 is_stmt 1 view .LVU1205
 4732              	.LBB1162:
 4733              	.LBB1163:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 4734              		.loc 18 71 9 is_stmt 0 view .LVU1206
 4735 026c 0021     		movs	r1, #0
 4736              		.loc 18 72 9 view .LVU1207
 4737 026e 5248     		ldr	r0, .L348+120
 4738              	.LBE1163:
 4739              	.LBE1162:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 4740              		.loc 19 73 27 view .LVU1208
 4741 0270 C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 4742              		.loc 19 74 13 is_stmt 1 view .LVU1209
 4743              	.LVL269:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 178


 4744              	.LBB1165:
 4745              	.LBI1162:
  69:delayline_reverse.h ****     {
 4746              		.loc 18 69 17 view .LVU1210
 4747              	.LBB1164:
 4748              		.loc 18 72 9 is_stmt 0 view .LVU1211
 4749 0274 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 4750              		.loc 18 71 9 view .LVU1212
 4751 0276 1160     		str	r1, [r2]	@ float
  73:delayline_reverse.h ****     }
 4752              		.loc 18 73 5 view .LVU1213
 4753 0278 07E7     		b	.L287
 4754              	.LVL270:
 4755              	.L318:
 4756              		.loc 18 73 5 view .LVU1214
 4757              	.LBE1164:
 4758              	.LBE1165:
 4759              	.LBE1166:
 4760              	.LBE1167:
1545:Veno-Echo.cpp ****     }
 4761              		.loc 19 1545 9 is_stmt 1 view .LVU1215
1545:Veno-Echo.cpp ****     }
 4762              		.loc 19 1545 21 is_stmt 0 view .LVU1216
 4763 027a 0022     		movs	r2, #0
 4764 027c 1A70     		strb	r2, [r3]
1556:Veno-Echo.cpp **** 
 4765              		.loc 19 1556 1 view .LVU1217
 4766 027e 38BD     		pop	{r3, r4, r5, pc}
 4767              	.LVL271:
 4768              	.L347:
1525:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 4769              		.loc 19 1525 9 is_stmt 1 view .LVU1218
1525:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 4770              		.loc 19 1525 21 is_stmt 0 view .LVU1219
 4771 0280 3E48     		ldr	r0, .L348+60
 4772 0282 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 4773              	.LVL272:
1526:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 4774              		.loc 19 1526 9 is_stmt 1 view .LVU1220
1526:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 4775              		.loc 19 1526 21 is_stmt 0 view .LVU1221
 4776 0286 94ED060A 		vldr.32	s0, [r4, #24]
 4777 028a 4348     		ldr	r0, .L348+88
 4778 028c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 4779              	.LVL273:
1527:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 4780              		.loc 19 1527 9 is_stmt 1 view .LVU1222
1527:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 4781              		.loc 19 1527 21 is_stmt 0 view .LVU1223
 4782 0290 94ED060A 		vldr.32	s0, [r4, #24]
 4783 0294 3A48     		ldr	r0, .L348+64
 4784 0296 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 4785              	.LVL274:
1528:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 4786              		.loc 19 1528 9 is_stmt 1 view .LVU1224
1528:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 179


 4787              		.loc 19 1528 21 is_stmt 0 view .LVU1225
 4788 029a 94ED060A 		vldr.32	s0, [r4, #24]
 4789 029e 3F48     		ldr	r0, .L348+92
 4790 02a0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 4791              	.LVL275:
1529:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 4792              		.loc 19 1529 9 is_stmt 1 view .LVU1226
1529:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 4793              		.loc 19 1529 26 is_stmt 0 view .LVU1227
 4794 02a4 94ED060A 		vldr.32	s0, [r4, #24]
 4795 02a8 3648     		ldr	r0, .L348+68
 4796 02aa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 4797              	.LVL276:
1530:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 4798              		.loc 19 1530 9 is_stmt 1 view .LVU1228
1530:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 4799              		.loc 19 1530 26 is_stmt 0 view .LVU1229
 4800 02ae 94ED060A 		vldr.32	s0, [r4, #24]
 4801 02b2 3B48     		ldr	r0, .L348+96
 4802 02b4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 4803              	.LVL277:
1531:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 4804              		.loc 19 1531 9 is_stmt 1 view .LVU1230
1531:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 4805              		.loc 19 1531 26 is_stmt 0 view .LVU1231
 4806 02b8 94ED060A 		vldr.32	s0, [r4, #24]
 4807 02bc 3248     		ldr	r0, .L348+72
 4808 02be FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 4809              	.LVL278:
1532:Veno-Echo.cpp ****     }
 4810              		.loc 19 1532 9 is_stmt 1 view .LVU1232
1532:Veno-Echo.cpp ****     }
 4811              		.loc 19 1532 26 is_stmt 0 view .LVU1233
 4812 02c2 94ED060A 		vldr.32	s0, [r4, #24]
 4813 02c6 3748     		ldr	r0, .L348+100
 4814 02c8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 4815              	.LVL279:
 4816 02cc 8EE7     		b	.L314
 4817              	.L346:
1509:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 4818              		.loc 19 1509 9 is_stmt 1 view .LVU1234
1509:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 4819              		.loc 19 1509 22 is_stmt 0 view .LVU1235
 4820 02ce 3248     		ldr	r0, .L348+88
 4821 02d0 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 4822              	.LVL280:
1510:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 4823              		.loc 19 1510 9 is_stmt 1 view .LVU1236
1510:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 4824              		.loc 19 1510 22 is_stmt 0 view .LVU1237
 4825 02d4 94ED040A 		vldr.32	s0, [r4, #16]
 4826 02d8 3048     		ldr	r0, .L348+92
 4827 02da FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 4828              	.LVL281:
1511:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 4829              		.loc 19 1511 9 is_stmt 1 view .LVU1238
1511:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 180


 4830              		.loc 19 1511 27 is_stmt 0 view .LVU1239
 4831 02de 94ED040A 		vldr.32	s0, [r4, #16]
 4832 02e2 2F48     		ldr	r0, .L348+96
 4833 02e4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 4834              	.LVL282:
1512:Veno-Echo.cpp ****     }
 4835              		.loc 19 1512 9 is_stmt 1 view .LVU1240
1512:Veno-Echo.cpp ****     }
 4836              		.loc 19 1512 27 is_stmt 0 view .LVU1241
 4837 02e8 94ED040A 		vldr.32	s0, [r4, #16]
 4838 02ec 2D48     		ldr	r0, .L348+100
 4839 02ee FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 4840              	.LVL283:
 4841 02f2 59E7     		b	.L310
 4842              	.L345:
1494:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 4843              		.loc 19 1494 9 is_stmt 1 view .LVU1242
1494:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 4844              		.loc 19 1494 22 is_stmt 0 view .LVU1243
 4845 02f4 2148     		ldr	r0, .L348+60
 4846 02f6 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 4847              	.LVL284:
1495:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 4848              		.loc 19 1495 9 is_stmt 1 view .LVU1244
1495:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 4849              		.loc 19 1495 22 is_stmt 0 view .LVU1245
 4850 02fa 94ED050A 		vldr.32	s0, [r4, #20]
 4851 02fe 2048     		ldr	r0, .L348+64
 4852 0300 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 4853              	.LVL285:
1496:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 4854              		.loc 19 1496 9 is_stmt 1 view .LVU1246
1496:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 4855              		.loc 19 1496 27 is_stmt 0 view .LVU1247
 4856 0304 94ED050A 		vldr.32	s0, [r4, #20]
 4857 0308 1E48     		ldr	r0, .L348+68
 4858 030a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 4859              	.LVL286:
1497:Veno-Echo.cpp ****     }
 4860              		.loc 19 1497 9 is_stmt 1 view .LVU1248
1497:Veno-Echo.cpp ****     }
 4861              		.loc 19 1497 27 is_stmt 0 view .LVU1249
 4862 030e 94ED050A 		vldr.32	s0, [r4, #20]
 4863 0312 1D48     		ldr	r0, .L348+72
 4864 0314 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 4865              	.LVL287:
 4866 0318 21E7     		b	.L306
 4867              	.L339:
1480:Veno-Echo.cpp ****     }
 4868              		.loc 19 1480 18 view .LVU1250
 4869 031a DFED117A 		vldr.32	s15, .L348+32
 4870 031e DCE6     		b	.L296
 4871              	.LVL288:
 4872              	.L344:
 4873              	.LBB1168:
 4874              	.LBB1136:
  74:Veno-Echo.cpp ****             //del -> Reset();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 181


 4875              		.loc 19 74 29 view .LVU1251
 4876 0320 BCEEE77A 		vcvt.u32.f32	s14, s15
 4877              	.LBB1128:
 4878              	.LBB1129:
  72:delayline_reverse.h ****     }
 4879              		.loc 18 72 9 view .LVU1252
 4880 0324 0A4D     		ldr	r5, .L348+16
 4881              	.LBE1129:
 4882              	.LBE1128:
 4883              	.LBE1136:
 4884              	.LBE1168:
1457:Veno-Echo.cpp ****     }
 4885              		.loc 19 1457 33 view .LVU1253
 4886 0326 1968     		ldr	r1, [r3]
 4887              	.LBB1169:
 4888              	.LBB1137:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 4889              		.loc 19 73 13 is_stmt 1 view .LVU1254
 4890              	.LBB1133:
 4891              	.LBB1130:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 4892              		.loc 18 71 9 is_stmt 0 view .LVU1255
 4893 0328 0020     		movs	r0, #0
 4894              	.LBE1130:
 4895              	.LBE1133:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 4896              		.loc 19 73 27 view .LVU1256
 4897 032a C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 4898              		.loc 19 74 29 view .LVU1257
 4899 032e 17EE102A 		vmov	r2, s14	@ int
 4900              	.LBB1134:
 4901              	.LBB1131:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 4902              		.loc 18 71 9 view .LVU1258
 4903 0332 0860     		str	r0, [r1]	@ float
 4904              	.LVL289:
  72:delayline_reverse.h ****     }
 4905              		.loc 18 72 9 view .LVU1259
 4906 0334 AA42     		cmp	r2, r5
 4907 0336 28BF     		it	cs
 4908 0338 2A46     		movcs	r2, r5
 4909              	.LBE1131:
 4910              	.LBE1134:
  74:Veno-Echo.cpp ****             //del -> Reset();
 4911              		.loc 19 74 13 is_stmt 1 view .LVU1260
 4912              	.LVL290:
 4913              	.LBB1135:
 4914              	.LBI1128:
  69:delayline_reverse.h ****     {
 4915              		.loc 18 69 17 view .LVU1261
 4916              	.LBB1132:
  72:delayline_reverse.h ****     }
 4917              		.loc 18 72 9 is_stmt 0 view .LVU1262
 4918 033a 0A61     		str	r2, [r1, #16]
 4919              		.loc 18 73 5 view .LVU1263
 4920 033c A5E6     		b	.L287
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 182


 4921              	.L349:
 4922 033e 00BF     		.align	2
 4923              	.L348:
 4924 0340 0050C346 		.word	1187205120
 4925 0344 00000000 		.word	.LANCHOR2
 4926 0348 00606A48 		.word	1214930944
 4927 034c 0AD7A33B 		.word	1000593162
 4928 0350 BF270900 		.word	599999
 4929 0354 00000000 		.word	.LANCHOR3
 4930 0358 00000000 		.word	.LANCHOR47
 4931 035c 0000FA43 		.word	1140457472
 4932 0360 00000000 		.word	0
 4933 0364 CDCCCC3D 		.word	1036831949
 4934 0368 00000000 		.word	.LANCHOR33
 4935 036c 00000000 		.word	.LANCHOR37
 4936 0370 9A99A140 		.word	1084332442
 4937 0374 0080BB44 		.word	1153138688
 4938 0378 00803B46 		.word	1178304512
 4939 037c 00000000 		.word	.LANCHOR21
 4940 0380 00000000 		.word	.LANCHOR22
 4941 0384 00000000 		.word	.LANCHOR23
 4942 0388 00000000 		.word	.LANCHOR24
 4943 038c 0000C842 		.word	1120403456
 4944 0390 00004844 		.word	1145569280
 4945 0394 00004843 		.word	1128792064
 4946 0398 00000000 		.word	.LANCHOR12
 4947 039c 00000000 		.word	.LANCHOR13
 4948 03a0 00000000 		.word	.LANCHOR14
 4949 03a4 00000000 		.word	.LANCHOR15
 4950 03a8 6666E63E 		.word	1055286886
 4951 03ac 00000000 		.word	.LANCHOR40
 4952 03b0 CDCC0C3F 		.word	1057803469
 4953 03b4 00650148 		.word	1208050944
 4954 03b8 94050200 		.word	132500
 4955              	.LBE1132:
 4956              	.LBE1135:
 4957              	.LBE1137:
 4958              	.LBE1169:
 4959              		.cfi_endproc
 4960              	.LFE4312:
 4962              		.section	.text.startup.main,"ax",%progbits
 4963              		.align	1
 4964              		.p2align 2,,3
 4965              		.global	main
 4966              		.syntax unified
 4967              		.thumb
 4968              		.thumb_func
 4969              		.fpu fpv5-d16
 4971              	main:
 4972              	.LFB4290:
 610:Veno-Echo.cpp ****     // initialize hardware.
 4973              		.loc 19 610 1 is_stmt 1 view -0
 4974              		.cfi_startproc
 4975              		@ Volatile: function does not return.
 4976              		@ args = 0, pretend = 0, frame = 240
 4977              		@ frame_needed = 0, uses_anonymous_args = 0
 612:Veno-Echo.cpp ****     hw.Init();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 183


 4978              		.loc 19 612 5 view .LVU1265
 610:Veno-Echo.cpp ****     // initialize hardware.
 4979              		.loc 19 610 1 is_stmt 0 view .LVU1266
 4980 0000 80B5     		push	{r7, lr}
 4981              		.cfi_def_cfa_offset 8
 4982              		.cfi_offset 7, -8
 4983              		.cfi_offset 14, -4
 612:Veno-Echo.cpp ****     hw.Init();
 4984              		.loc 19 612 17 view .LVU1267
 4985 0002 D148     		ldr	r0, .L353
 610:Veno-Echo.cpp ****     // initialize hardware.
 4986              		.loc 19 610 1 view .LVU1268
 4987 0004 BEB0     		sub	sp, sp, #248
 4988              		.cfi_def_cfa_offset 256
 612:Veno-Echo.cpp ****     hw.Init();
 4989              		.loc 19 612 17 view .LVU1269
 4990 0006 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 4991              	.LVL291:
 613:Veno-Echo.cpp ****     
 4992              		.loc 19 613 5 is_stmt 1 view .LVU1270
 613:Veno-Echo.cpp ****     
 4993              		.loc 19 613 12 is_stmt 0 view .LVU1271
 4994 000a 0021     		movs	r1, #0
 4995 000c CE48     		ldr	r0, .L353
 617:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 4996              		.loc 19 617 16 view .LVU1272
 4997 000e B2EE088A 		vmov.f32	s16, #1.2e+1
 613:Veno-Echo.cpp ****     
 4998              		.loc 19 613 12 view .LVU1273
 4999 0012 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 5000              	.LVL292:
 617:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5001              		.loc 19 617 5 is_stmt 1 view .LVU1274
 617:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5002              		.loc 19 617 16 is_stmt 0 view .LVU1275
 5003 0016 1D20     		movs	r0, #29
 5004 0018 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5005              	.LVL293:
 5006 001c 0346     		mov	r3, r0	@ movhi
 5007 001e 0620     		movs	r0, #6
 624:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 5008              		.loc 19 624 22 view .LVU1276
 5009 0020 0224     		movs	r4, #2
 617:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5010              		.loc 19 617 16 view .LVU1277
 5011 0022 ADF80830 		strh	r3, [sp, #8]	@ movhi
 5012 0026 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5013              	.LVL294:
 5014 002a 0346     		mov	r3, r0	@ movhi
 617:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5015              		.loc 19 617 80 view .LVU1278
 5016 002c C648     		ldr	r0, .L353
 624:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 5017              		.loc 19 624 22 view .LVU1279
 5018 002e 9FEDC79A 		vldr.32	s18, .L353+4
 5019              	.LBB1170:
 5020              	.LBB1171:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 184


  40:../DaisySP/Source/Control/adsr.h ****     /** Initializes the Adsr module.
  41:../DaisySP/Source/Control/adsr.h ****         \param sample_rate - The sample rate of the audio engine being run. 
  42:../DaisySP/Source/Control/adsr.h ****     */
  43:../DaisySP/Source/Control/adsr.h ****     void Init(float sample_rate);
  44:../DaisySP/Source/Control/adsr.h **** 
  45:../DaisySP/Source/Control/adsr.h **** 
  46:../DaisySP/Source/Control/adsr.h ****     /** Processes one sample through the filter and returns one sample.
  47:../DaisySP/Source/Control/adsr.h ****         \param gate - trigger the envelope, hold it to sustain 
  48:../DaisySP/Source/Control/adsr.h ****     */
  49:../DaisySP/Source/Control/adsr.h ****     float Process(bool gate);
  50:../DaisySP/Source/Control/adsr.h **** 
  51:../DaisySP/Source/Control/adsr.h ****     /** Sets time
  52:../DaisySP/Source/Control/adsr.h ****         Set time per segment in seconds
  53:../DaisySP/Source/Control/adsr.h ****     */
  54:../DaisySP/Source/Control/adsr.h ****     inline void SetTime(int seg, float time) { seg_time_[seg] = time; }
  55:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
  56:../DaisySP/Source/Control/adsr.h ****         \param sus_level - sets sustain level
  57:../DaisySP/Source/Control/adsr.h ****     */
  58:../DaisySP/Source/Control/adsr.h ****     inline void SetSustainLevel(float sus_level) { sus_ = sus_level; }
 5021              		.loc 7 58 57 view .LVU1280
 5022 0032 F7EE008A 		vmov.f32	s17, #1.0e+0
 5023              	.LBE1171:
 5024              	.LBE1170:
 617:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5025              		.loc 19 617 16 view .LVU1281
 5026 0036 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 617:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5027              		.loc 19 617 80 view .LVU1282
 5028 003a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5029              	.LVL295:
 617:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5030              		.loc 19 617 16 view .LVU1283
 5031 003e 0123     		movs	r3, #1
 5032 0040 80EE080A 		vdiv.f32	s0, s0, s16
 5033 0044 039A     		ldr	r2, [sp, #12]
 5034              	.LBB1174:
 5035              	.LBB1175:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5036              		.loc 7 54 63 view .LVU1284
 5037 0046 4FF07C55 		mov	r5, #1056964608
 5038              	.LBE1175:
 5039              	.LBE1174:
 617:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5040              		.loc 19 617 16 view .LVU1285
 5041 004a 0299     		ldr	r1, [sp, #8]
 5042              	.LBB1178:
 5043              	.LBB1179:
  61:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
  62:../DaisySP/Source/Dynamics/crossfade.h ****     Expected input: See [Curve Options](##curve-options)
  63:../DaisySP/Source/Dynamics/crossfade.h ****     */
  64:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetCurve(uint8_t curve) { curve_ = curve; }
 5044              		.loc 10 64 50 view .LVU1286
 5045 004c 1F46     		mov	r7, r3
 5046              	.LBE1179:
 5047              	.LBE1178:
 617:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 5048              		.loc 19 617 16 view .LVU1287
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 185


 5049 004e C048     		ldr	r0, .L353+8
 5050 0050 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 5051              	.LVL296:
 618:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 5052              		.loc 19 618 5 is_stmt 1 view .LVU1288
 618:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 5053              		.loc 19 618 16 is_stmt 0 view .LVU1289
 5054 0054 1E20     		movs	r0, #30
 5055 0056 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5056              	.LVL297:
 5057 005a 0346     		mov	r3, r0	@ movhi
 5058 005c 0720     		movs	r0, #7
 631:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 5059              		.loc 19 631 20 view .LVU1290
 5060 005e DFF85483 		ldr	r8, .L353+108
 618:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 5061              		.loc 19 618 16 view .LVU1291
 5062 0062 ADF81030 		strh	r3, [sp, #16]	@ movhi
 5063 0066 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5064              	.LVL298:
 5065 006a 0346     		mov	r3, r0	@ movhi
 618:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 5066              		.loc 19 618 80 view .LVU1292
 5067 006c B648     		ldr	r0, .L353
 5068              	.LBB1182:
 5069              	.LBB1183:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5070              		.loc 7 54 63 view .LVU1293
 5071 006e B94E     		ldr	r6, .L353+12
 5072              	.LBE1183:
 5073              	.LBE1182:
 618:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 5074              		.loc 19 618 16 view .LVU1294
 5075 0070 ADF81430 		strh	r3, [sp, #20]	@ movhi
 618:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 5076              		.loc 19 618 80 view .LVU1295
 5077 0074 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5078              	.LVL299:
 618:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 5079              		.loc 19 618 16 view .LVU1296
 5080 0078 059A     		ldr	r2, [sp, #20]
 5081 007a 80EE080A 		vdiv.f32	s0, s0, s16
 5082 007e 0499     		ldr	r1, [sp, #16]
 5083 0080 3B46     		mov	r3, r7
 5084 0082 B548     		ldr	r0, .L353+16
 5085 0084 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 5086              	.LVL300:
 619:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 5087              		.loc 19 619 5 is_stmt 1 view .LVU1297
 619:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 5088              		.loc 19 619 18 is_stmt 0 view .LVU1298
 5089 0088 0A20     		movs	r0, #10
 5090 008a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5091              	.LVL301:
 5092 008e 0346     		mov	r3, r0	@ movhi
 5093 0090 2046     		mov	r0, r4
 637:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 186


 5094              		.loc 19 637 20 view .LVU1299
 5095 0092 DFF82493 		ldr	r9, .L353+112
 619:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 5096              		.loc 19 619 18 view .LVU1300
 5097 0096 ADF81830 		strh	r3, [sp, #24]	@ movhi
 5098 009a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5099              	.LVL302:
 5100 009e 0346     		mov	r3, r0	@ movhi
 619:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 5101              		.loc 19 619 85 view .LVU1301
 5102 00a0 A948     		ldr	r0, .L353
 619:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 5103              		.loc 19 619 18 view .LVU1302
 5104 00a2 ADF81C30 		strh	r3, [sp, #28]	@ movhi
 619:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 5105              		.loc 19 619 85 view .LVU1303
 5106 00a6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5107              	.LVL303:
 619:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 5108              		.loc 19 619 18 view .LVU1304
 5109 00aa 079A     		ldr	r2, [sp, #28]
 5110 00ac 80EE080A 		vdiv.f32	s0, s0, s16
 5111 00b0 0699     		ldr	r1, [sp, #24]
 5112 00b2 0023     		movs	r3, #0
 5113 00b4 A948     		ldr	r0, .L353+20
 5114 00b6 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 5115              	.LVL304:
 620:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 5116              		.loc 19 620 5 is_stmt 1 view .LVU1305
 620:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 5117              		.loc 19 620 18 is_stmt 0 view .LVU1306
 5118 00ba 0B20     		movs	r0, #11
 5119 00bc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5120              	.LVL305:
 5121 00c0 0346     		mov	r3, r0	@ movhi
 5122 00c2 0320     		movs	r0, #3
 5123 00c4 ADF82030 		strh	r3, [sp, #32]	@ movhi
 5124 00c8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5125              	.LVL306:
 5126 00cc 0346     		mov	r3, r0	@ movhi
 620:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 5127              		.loc 19 620 85 view .LVU1307
 5128 00ce 9E48     		ldr	r0, .L353
 620:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 5129              		.loc 19 620 18 view .LVU1308
 5130 00d0 ADF82430 		strh	r3, [sp, #36]	@ movhi
 620:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 5131              		.loc 19 620 85 view .LVU1309
 5132 00d4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5133              	.LVL307:
 620:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 5134              		.loc 19 620 18 view .LVU1310
 5135 00d8 099A     		ldr	r2, [sp, #36]
 5136 00da 80EE080A 		vdiv.f32	s0, s0, s16
 5137 00de 0899     		ldr	r1, [sp, #32]
 5138 00e0 0023     		movs	r3, #0
 5139 00e2 9F48     		ldr	r0, .L353+24
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 187


 5140 00e4 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 5141              	.LVL308:
 621:Veno-Echo.cpp **** 
 5142              		.loc 19 621 5 is_stmt 1 view .LVU1311
 621:Veno-Echo.cpp **** 
 5143              		.loc 19 621 20 is_stmt 0 view .LVU1312
 5144 00e8 1820     		movs	r0, #24
 5145 00ea FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5146              	.LVL309:
 5147 00ee 0346     		mov	r3, r0	@ movhi
 5148 00f0 0420     		movs	r0, #4
 5149 00f2 ADF82830 		strh	r3, [sp, #40]	@ movhi
 5150 00f6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5151              	.LVL310:
 5152 00fa 0346     		mov	r3, r0	@ movhi
 621:Veno-Echo.cpp **** 
 5153              		.loc 19 621 93 view .LVU1313
 5154 00fc 9248     		ldr	r0, .L353
 621:Veno-Echo.cpp **** 
 5155              		.loc 19 621 20 view .LVU1314
 5156 00fe ADF82C30 		strh	r3, [sp, #44]	@ movhi
 621:Veno-Echo.cpp **** 
 5157              		.loc 19 621 93 view .LVU1315
 5158 0102 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5159              	.LVL311:
 621:Veno-Echo.cpp **** 
 5160              		.loc 19 621 20 view .LVU1316
 5161 0106 2346     		mov	r3, r4
 5162 0108 80EE080A 		vdiv.f32	s0, s0, s16
 5163 010c 0B9A     		ldr	r2, [sp, #44]
 5164 010e 0A99     		ldr	r1, [sp, #40]
 5165 0110 9448     		ldr	r0, .L353+28
 5166 0112 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 5167              	.LVL312:
 624:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 5168              		.loc 19 624 5 is_stmt 1 view .LVU1317
 624:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 5169              		.loc 19 624 22 is_stmt 0 view .LVU1318
 5170 0116 0020     		movs	r0, #0
 5171 0118 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5172              	.LVL313:
 5173 011c 0346     		mov	r3, r0	@ movhi
 624:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 5174              		.loc 19 624 55 view .LVU1319
 5175 011e 8A48     		ldr	r0, .L353
 624:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 5176              		.loc 19 624 22 view .LVU1320
 5177 0120 ADF83030 		strh	r3, [sp, #48]	@ movhi
 624:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 5178              		.loc 19 624 55 view .LVU1321
 5179 0124 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5180              	.LVL314:
 624:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 5181              		.loc 19 624 22 view .LVU1322
 5182 0128 3A46     		mov	r2, r7
 5183 012a 0C99     		ldr	r1, [sp, #48]
 5184 012c 80EE090A 		vdiv.f32	s0, s0, s18
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 188


 5185 0130 3B46     		mov	r3, r7
 5186 0132 8D48     		ldr	r0, .L353+32
 5187 0134 0094     		str	r4, [sp]
 5188 0136 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 5189              	.LVL315:
 625:Veno-Echo.cpp **** 
 5190              		.loc 19 625 5 is_stmt 1 view .LVU1323
 625:Veno-Echo.cpp **** 
 5191              		.loc 19 625 22 is_stmt 0 view .LVU1324
 5192 013a 3846     		mov	r0, r7
 5193 013c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5194              	.LVL316:
 5195 0140 0346     		mov	r3, r0	@ movhi
 625:Veno-Echo.cpp **** 
 5196              		.loc 19 625 55 view .LVU1325
 5197 0142 8148     		ldr	r0, .L353
 625:Veno-Echo.cpp **** 
 5198              		.loc 19 625 22 view .LVU1326
 5199 0144 ADF83430 		strh	r3, [sp, #52]	@ movhi
 625:Veno-Echo.cpp **** 
 5200              		.loc 19 625 55 view .LVU1327
 5201 0148 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5202              	.LVL317:
 625:Veno-Echo.cpp **** 
 5203              		.loc 19 625 22 view .LVU1328
 5204 014c 3A46     		mov	r2, r7
 5205 014e 0D99     		ldr	r1, [sp, #52]
 5206 0150 80EE090A 		vdiv.f32	s0, s0, s18
 5207 0154 3B46     		mov	r3, r7
 5208 0156 8548     		ldr	r0, .L353+36
 5209 0158 0094     		str	r4, [sp]
 5210 015a FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 5211              	.LVL318:
 628:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 5212              		.loc 19 628 5 is_stmt 1 view .LVU1329
 628:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 5213              		.loc 19 628 14 is_stmt 0 view .LVU1330
 5214 015e 1720     		movs	r0, #23
 5215 0160 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5216              	.LVL319:
 5217 0164 0346     		mov	r3, r0	@ movhi
 628:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 5218              		.loc 19 628 48 view .LVU1331
 5219 0166 7848     		ldr	r0, .L353
 628:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 5220              		.loc 19 628 14 view .LVU1332
 5221 0168 ADF83830 		strh	r3, [sp, #56]	@ movhi
 628:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 5222              		.loc 19 628 48 view .LVU1333
 5223 016c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5224              	.LVL320:
 628:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 5225              		.loc 19 628 14 view .LVU1334
 5226 0170 0E99     		ldr	r1, [sp, #56]
 5227 0172 80EE090A 		vdiv.f32	s0, s0, s18
 5228 0176 7E48     		ldr	r0, .L353+40
 5229 0178 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 189


 5230              	.LVL321:
 629:Veno-Echo.cpp ****     
 5231              		.loc 19 629 5 is_stmt 1 view .LVU1335
 629:Veno-Echo.cpp ****     
 5232              		.loc 19 629 17 is_stmt 0 view .LVU1336
 5233 017c 0520     		movs	r0, #5
 5234 017e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 5235              	.LVL322:
 5236 0182 0346     		mov	r3, r0	@ movhi
 5237 0184 7048     		ldr	r0, .L353
 5238 0186 ADF83C30 		strh	r3, [sp, #60]	@ movhi
 5239 018a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5240              	.LVL323:
 5241 018e 0F99     		ldr	r1, [sp, #60]
 5242 0190 7848     		ldr	r0, .L353+44
 5243 0192 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 5244              	.LVL324:
 631:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 5245              		.loc 19 631 5 is_stmt 1 view .LVU1337
 631:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 5246              		.loc 19 631 20 is_stmt 0 view .LVU1338
 5247 0196 6C48     		ldr	r0, .L353
 5248 0198 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5249              	.LVL325:
 5250 019c 4046     		mov	r0, r8
 5251 019e FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 5252              	.LVL326:
 632:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 5253              		.loc 19 632 5 is_stmt 1 view .LVU1339
 5254              	.LBB1186:
 5255              	.LBI1174:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5256              		.loc 7 54 17 view .LVU1340
 5257              	.LBB1176:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5258              		.loc 7 54 48 view .LVU1341
 5259              	.LBE1176:
 5260              	.LBE1186:
 637:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 5261              		.loc 19 637 20 is_stmt 0 view .LVU1342
 5262 01a2 6948     		ldr	r0, .L353
 5263              	.LBB1187:
 5264              	.LBB1172:
 5265              		.loc 7 58 57 view .LVU1343
 5266 01a4 C8ED008A 		vstr.32	s17, [r8]
 5267              	.LBE1172:
 5268              	.LBE1187:
 643:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 5269              		.loc 19 643 17 view .LVU1344
 5270 01a8 734C     		ldr	r4, .L353+48
 5271              	.LBB1188:
 5272              	.LBB1177:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5273              		.loc 7 54 63 view .LVU1345
 5274 01aa C8F80850 		str	r5, [r8, #8]	@ float
 5275              	.LVL327:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 190


 5276              		.loc 7 54 63 view .LVU1346
 5277              	.LBE1177:
 5278              	.LBE1188:
 633:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 5279              		.loc 19 633 5 is_stmt 1 view .LVU1347
 5280              	.LBB1189:
 5281              	.LBI1182:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5282              		.loc 7 54 17 view .LVU1348
 5283              	.LBB1184:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5284              		.loc 7 54 48 view .LVU1349
 5285              	.LBE1184:
 5286              	.LBE1189:
 5287              	.LBB1190:
 5288              	.LBB1191:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5289              		.loc 7 54 63 is_stmt 0 view .LVU1350
 5290 01ae C8F81450 		str	r5, [r8, #20]	@ float
 5291              	.LBE1191:
 5292              	.LBE1190:
 5293              	.LBB1193:
 5294              	.LBB1185:
 5295 01b2 C8F80C60 		str	r6, [r8, #12]	@ float
 5296              	.LVL328:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5297              		.loc 7 54 63 view .LVU1351
 5298              	.LBE1185:
 5299              	.LBE1193:
 634:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 5300              		.loc 19 634 5 is_stmt 1 view .LVU1352
 5301              	.LBB1194:
 5302              	.LBI1190:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5303              		.loc 7 54 17 view .LVU1353
 5304              	.LBB1192:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5305              		.loc 7 54 48 view .LVU1354
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5306              		.loc 7 54 48 is_stmt 0 view .LVU1355
 5307              	.LBE1192:
 5308              	.LBE1194:
 635:Veno-Echo.cpp **** 
 5309              		.loc 19 635 5 is_stmt 1 view .LVU1356
 5310              	.LBB1195:
 5311              	.LBI1170:
 5312              		.loc 7 58 17 view .LVU1357
 5313              	.LBB1173:
 5314              		.loc 7 58 52 view .LVU1358
 5315              		.loc 7 58 52 is_stmt 0 view .LVU1359
 5316              	.LBE1173:
 5317              	.LBE1195:
 637:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 5318              		.loc 19 637 5 is_stmt 1 view .LVU1360
 637:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 5319              		.loc 19 637 20 is_stmt 0 view .LVU1361
 5320 01b6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 191


 5321              	.LVL329:
 5322 01ba 4846     		mov	r0, r9
 649:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 5323              		.loc 19 649 17 view .LVU1362
 5324 01bc DFF8FC81 		ldr	r8, .L353+116
 637:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 5325              		.loc 19 637 20 view .LVU1363
 5326 01c0 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 5327              	.LVL330:
 638:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 5328              		.loc 19 638 5 is_stmt 1 view .LVU1364
 5329              	.LBB1196:
 5330              	.LBI1196:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5331              		.loc 7 54 17 view .LVU1365
 5332              	.LBB1197:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5333              		.loc 7 54 48 view .LVU1366
 5334              	.LBE1197:
 5335              	.LBE1196:
 643:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 5336              		.loc 19 643 17 is_stmt 0 view .LVU1367
 5337 01c4 6048     		ldr	r0, .L353
 5338              	.LBB1199:
 5339              	.LBB1198:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5340              		.loc 7 54 63 view .LVU1368
 5341 01c6 C9F80850 		str	r5, [r9, #8]	@ float
 5342              	.LVL331:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5343              		.loc 7 54 63 view .LVU1369
 5344              	.LBE1198:
 5345              	.LBE1199:
 639:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 5346              		.loc 19 639 5 is_stmt 1 view .LVU1370
 5347              	.LBB1200:
 5348              	.LBI1200:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5349              		.loc 7 54 17 view .LVU1371
 5350              	.LBB1201:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5351              		.loc 7 54 48 view .LVU1372
 5352              	.LBE1201:
 5353              	.LBE1200:
 5354              	.LBB1203:
 5355              	.LBB1204:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5356              		.loc 7 54 63 is_stmt 0 view .LVU1373
 5357 01ca C9F81450 		str	r5, [r9, #20]	@ float
 5358              	.LBE1204:
 5359              	.LBE1203:
 5360              	.LBB1206:
 5361              	.LBB1202:
 5362 01ce C9F80C60 		str	r6, [r9, #12]	@ float
 5363              	.LVL332:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5364              		.loc 7 54 63 view .LVU1374
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 192


 5365              	.LBE1202:
 5366              	.LBE1206:
 640:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 5367              		.loc 19 640 5 is_stmt 1 view .LVU1375
 5368              	.LBB1207:
 5369              	.LBI1203:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5370              		.loc 7 54 17 view .LVU1376
 5371              	.LBB1205:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5372              		.loc 7 54 48 view .LVU1377
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5373              		.loc 7 54 48 is_stmt 0 view .LVU1378
 5374              	.LBE1205:
 5375              	.LBE1207:
 641:Veno-Echo.cpp **** 
 5376              		.loc 19 641 5 is_stmt 1 view .LVU1379
 5377              	.LBB1208:
 5378              	.LBI1208:
 5379              		.loc 7 58 17 view .LVU1380
 5380              	.LBB1209:
 5381              		.loc 7 58 52 view .LVU1381
 5382              		.loc 7 58 57 is_stmt 0 view .LVU1382
 5383 01d2 C9ED008A 		vstr.32	s17, [r9]
 5384              	.LVL333:
 5385              		.loc 7 58 57 view .LVU1383
 5386              	.LBE1209:
 5387              	.LBE1208:
 643:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 5388              		.loc 19 643 5 is_stmt 1 view .LVU1384
 643:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 5389              		.loc 19 643 17 is_stmt 0 view .LVU1385
 5390 01d6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5391              	.LVL334:
 5392 01da 2046     		mov	r0, r4
 668:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 5393              		.loc 19 668 17 view .LVU1386
 5394 01dc 9FED678A 		vldr.32	s16, .L353+52
 643:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 5395              		.loc 19 643 17 view .LVU1387
 5396 01e0 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 5397              	.LVL335:
 644:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 5398              		.loc 19 644 5 is_stmt 1 view .LVU1388
 5399              	.LBB1210:
 5400              	.LBI1210:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5401              		.loc 7 54 17 view .LVU1389
 5402              	.LBB1211:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5403              		.loc 7 54 48 view .LVU1390
 5404              	.LBE1211:
 5405              	.LBE1210:
 649:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 5406              		.loc 19 649 17 is_stmt 0 view .LVU1391
 5407 01e4 5848     		ldr	r0, .L353
 5408              	.LBB1213:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 193


 5409              	.LBB1214:
 5410              		.loc 7 58 57 view .LVU1392
 5411 01e6 C4ED008A 		vstr.32	s17, [r4]
 5412              	.LBE1214:
 5413              	.LBE1213:
 5414              	.LBB1216:
 5415              	.LBB1212:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5416              		.loc 7 54 63 view .LVU1393
 5417 01ea A660     		str	r6, [r4, #8]	@ float
 5418              	.LVL336:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5419              		.loc 7 54 63 view .LVU1394
 5420              	.LBE1212:
 5421              	.LBE1216:
 645:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 5422              		.loc 19 645 5 is_stmt 1 view .LVU1395
 5423              	.LBB1217:
 5424              	.LBI1217:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5425              		.loc 7 54 17 view .LVU1396
 5426              	.LBB1218:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5427              		.loc 7 54 48 view .LVU1397
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5428              		.loc 7 54 63 is_stmt 0 view .LVU1398
 5429 01ec E660     		str	r6, [r4, #12]	@ float
 5430              	.LVL337:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5431              		.loc 7 54 63 view .LVU1399
 5432              	.LBE1218:
 5433              	.LBE1217:
 646:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 5434              		.loc 19 646 5 is_stmt 1 view .LVU1400
 5435              	.LBB1219:
 5436              	.LBI1219:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5437              		.loc 7 54 17 view .LVU1401
 5438              	.LBB1220:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5439              		.loc 7 54 48 view .LVU1402
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5440              		.loc 7 54 63 is_stmt 0 view .LVU1403
 5441 01ee 6661     		str	r6, [r4, #20]	@ float
 5442              	.LVL338:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5443              		.loc 7 54 63 view .LVU1404
 5444              	.LBE1220:
 5445              	.LBE1219:
 647:Veno-Echo.cpp **** 
 5446              		.loc 19 647 5 is_stmt 1 view .LVU1405
 5447              	.LBB1221:
 5448              	.LBI1213:
 5449              		.loc 7 58 17 view .LVU1406
 5450              	.LBB1215:
 5451              		.loc 7 58 52 view .LVU1407
 5452              		.loc 7 58 52 is_stmt 0 view .LVU1408
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 194


 5453              	.LBE1215:
 5454              	.LBE1221:
 649:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 5455              		.loc 19 649 5 is_stmt 1 view .LVU1409
 649:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 5456              		.loc 19 649 17 is_stmt 0 view .LVU1410
 5457 01f0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5458              	.LVL339:
 5459 01f4 4046     		mov	r0, r8
 5460              	.LBB1222:
 5461              	.LBB1223:
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 5462              		.loc 8 44 20 view .LVU1411
 5463 01f6 624C     		ldr	r4, .L353+56
 5464              	.LBE1223:
 5465              	.LBE1222:
 649:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 5466              		.loc 19 649 17 view .LVU1412
 5467 01f8 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 5468              	.LVL340:
 650:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 5469              		.loc 19 650 5 is_stmt 1 view .LVU1413
 5470              	.LBB1228:
 5471              	.LBI1228:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5472              		.loc 7 54 17 view .LVU1414
 5473              	.LBB1229:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5474              		.loc 7 54 48 view .LVU1415
 5475              	.LBE1229:
 5476              	.LBE1228:
 5477              	.LBB1231:
 5478              	.LBB1232:
 5479              	.LBB1233:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 5480              		.loc 10 45 16 is_stmt 0 view .LVU1416
 5481 01fc 6149     		ldr	r1, .L353+60
 5482              	.LBE1233:
 5483              	.LBE1232:
 5484              	.LBE1231:
 5485              	.LBB1238:
 5486              	.LBB1239:
 5487              	.LBB1240:
 5488 01fe 624A     		ldr	r2, .L353+64
 5489              	.LBE1240:
 5490              	.LBE1239:
 5491              	.LBE1238:
 5492              	.LBB1245:
 5493              	.LBB1246:
 5494              	.LBB1247:
 5495 0200 624B     		ldr	r3, .L353+68
 5496              	.LBE1247:
 5497              	.LBE1246:
 5498              	.LBE1245:
 5499              	.LBB1252:
 5500              	.LBB1236:
 5501              	.LBB1234:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 195


 5502 0202 0D60     		str	r5, [r1]	@ float
 5503              	.LBE1234:
 5504              	.LBE1236:
 5505              	.LBE1252:
 5506              	.LBB1253:
 5507              	.LBB1243:
 5508              	.LBB1241:
 5509 0204 1560     		str	r5, [r2]	@ float
 5510              	.LBE1241:
 5511              	.LBE1243:
 5512              	.LBE1253:
 5513              	.LBB1254:
 5514              	.LBB1250:
 5515              	.LBB1248:
 5516 0206 1D60     		str	r5, [r3]	@ float
 5517              	.LBE1248:
 5518              	.LBE1250:
 5519              	.LBE1254:
 5520              	.LBB1255:
 5521              	.LBB1180:
 5522              		.loc 10 64 50 view .LVU1417
 5523 0208 0F71     		strb	r7, [r1, #4]
 5524              	.LBE1180:
 5525              	.LBE1255:
 5526              	.LBB1256:
 5527              	.LBB1257:
 5528 020a 1771     		strb	r7, [r2, #4]
 5529              	.LBE1257:
 5530              	.LBE1256:
 5531              	.LBB1259:
 5532              	.LBB1260:
 5533 020c 1F71     		strb	r7, [r3, #4]
 5534              	.LBE1260:
 5535              	.LBE1259:
 664:Veno-Echo.cpp **** 
 5536              		.loc 19 664 15 view .LVU1418
 5537 020e 4E48     		ldr	r0, .L353
 5538              	.LBB1262:
 5539              	.LBB1263:
 5540              		.loc 7 58 57 view .LVU1419
 5541 0210 C8ED008A 		vstr.32	s17, [r8]
 5542              	.LBE1263:
 5543              	.LBE1262:
 5544              	.LBB1265:
 5545              	.LBB1230:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5546              		.loc 7 54 63 view .LVU1420
 5547 0214 C8F80860 		str	r6, [r8, #8]	@ float
 5548              	.LVL341:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5549              		.loc 7 54 63 view .LVU1421
 5550              	.LBE1230:
 5551              	.LBE1265:
 651:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 5552              		.loc 19 651 5 is_stmt 1 view .LVU1422
 5553              	.LBB1266:
 5554              	.LBI1266:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 196


  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5555              		.loc 7 54 17 view .LVU1423
 5556              	.LBB1267:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5557              		.loc 7 54 48 view .LVU1424
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5558              		.loc 7 54 63 is_stmt 0 view .LVU1425
 5559 0218 C8F80C60 		str	r6, [r8, #12]	@ float
 5560              	.LVL342:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5561              		.loc 7 54 63 view .LVU1426
 5562              	.LBE1267:
 5563              	.LBE1266:
 652:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 5564              		.loc 19 652 5 is_stmt 1 view .LVU1427
 5565              	.LBB1268:
 5566              	.LBI1268:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5567              		.loc 7 54 17 view .LVU1428
 5568              	.LBB1269:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5569              		.loc 7 54 48 view .LVU1429
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5570              		.loc 7 54 63 is_stmt 0 view .LVU1430
 5571 021c C8F81460 		str	r6, [r8, #20]	@ float
 5572              	.LVL343:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 5573              		.loc 7 54 63 view .LVU1431
 5574              	.LBE1269:
 5575              	.LBE1268:
 653:Veno-Echo.cpp **** 
 5576              		.loc 19 653 5 is_stmt 1 view .LVU1432
 5577              	.LBB1270:
 5578              	.LBI1262:
 5579              		.loc 7 58 17 view .LVU1433
 5580              	.LBB1264:
 5581              		.loc 7 58 52 view .LVU1434
 5582              		.loc 7 58 52 is_stmt 0 view .LVU1435
 5583              	.LBE1264:
 5584              	.LBE1270:
 656:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 5585              		.loc 19 656 5 is_stmt 1 view .LVU1436
 5586              	.LBB1271:
 5587              	.LBI1231:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 5588              		.loc 10 51 17 view .LVU1437
 5589              	.LBE1271:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 5590              		.loc 10 51 26 view .LVU1438
 5591              	.LBB1272:
 5592              	.LBB1237:
 5593              	.LBI1232:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 5594              		.loc 10 43 17 view .LVU1439
 5595              	.LBB1235:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 5596              		.loc 10 45 9 view .LVU1440
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 197


  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 5597              		.loc 10 46 9 view .LVU1441
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 5598              		.loc 10 46 9 is_stmt 0 view .LVU1442
 5599              	.LBE1235:
 5600              	.LBE1237:
 5601              	.LBE1272:
 657:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 5602              		.loc 19 657 5 is_stmt 1 view .LVU1443
 5603              	.LBB1273:
 5604              	.LBI1178:
 5605              		.loc 10 64 17 view .LVU1444
 5606              	.LBB1181:
 5607              		.loc 10 64 43 view .LVU1445
 5608              		.loc 10 64 43 is_stmt 0 view .LVU1446
 5609              	.LBE1181:
 5610              	.LBE1273:
 658:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 5611              		.loc 19 658 5 is_stmt 1 view .LVU1447
 5612              	.LBB1274:
 5613              	.LBI1238:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 5614              		.loc 10 51 17 view .LVU1448
 5615              	.LBE1274:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 5616              		.loc 10 51 26 view .LVU1449
 5617              	.LBB1275:
 5618              	.LBB1244:
 5619              	.LBI1239:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 5620              		.loc 10 43 17 view .LVU1450
 5621              	.LBB1242:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 5622              		.loc 10 45 9 view .LVU1451
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 5623              		.loc 10 46 9 view .LVU1452
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 5624              		.loc 10 46 9 is_stmt 0 view .LVU1453
 5625              	.LBE1242:
 5626              	.LBE1244:
 5627              	.LBE1275:
 659:Veno-Echo.cpp **** 
 5628              		.loc 19 659 5 is_stmt 1 view .LVU1454
 5629              	.LBB1276:
 5630              	.LBI1256:
 5631              		.loc 10 64 17 view .LVU1455
 5632              	.LBB1258:
 5633              		.loc 10 64 43 view .LVU1456
 5634              		.loc 10 64 43 is_stmt 0 view .LVU1457
 5635              	.LBE1258:
 5636              	.LBE1276:
 661:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 5637              		.loc 19 661 5 is_stmt 1 view .LVU1458
 5638              	.LBB1277:
 5639              	.LBI1245:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 5640              		.loc 10 51 17 view .LVU1459
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 198


 5641              	.LBE1277:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 5642              		.loc 10 51 26 view .LVU1460
 5643              	.LBB1278:
 5644              	.LBB1251:
 5645              	.LBI1246:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 5646              		.loc 10 43 17 view .LVU1461
 5647              	.LBB1249:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 5648              		.loc 10 45 9 view .LVU1462
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 5649              		.loc 10 46 9 view .LVU1463
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 5650              		.loc 10 46 9 is_stmt 0 view .LVU1464
 5651              	.LBE1249:
 5652              	.LBE1251:
 5653              	.LBE1278:
 662:Veno-Echo.cpp **** 
 5654              		.loc 19 662 5 is_stmt 1 view .LVU1465
 5655              	.LBB1279:
 5656              	.LBI1259:
 5657              		.loc 10 64 17 view .LVU1466
 5658              	.LBB1261:
 5659              		.loc 10 64 43 view .LVU1467
 5660              		.loc 10 64 43 is_stmt 0 view .LVU1468
 5661              	.LBE1261:
 5662              	.LBE1279:
 664:Veno-Echo.cpp **** 
 5663              		.loc 19 664 5 is_stmt 1 view .LVU1469
 664:Veno-Echo.cpp **** 
 5664              		.loc 19 664 15 is_stmt 0 view .LVU1470
 5665 0220 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5666              	.LVL344:
 5667 0224 FFF7FEFF 		bl	_Z10InitDelaysf
 5668              	.LVL345:
 667:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 5669              		.loc 19 667 5 is_stmt 1 view .LVU1471
 667:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 5670              		.loc 19 667 15 is_stmt 0 view .LVU1472
 5671 0228 4748     		ldr	r0, .L353
 5672 022a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5673              	.LVL346:
 5674 022e 5848     		ldr	r0, .L353+72
 5675 0230 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 5676              	.LVL347:
 668:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 5677              		.loc 19 668 5 is_stmt 1 view .LVU1473
 668:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 5678              		.loc 19 668 17 is_stmt 0 view .LVU1474
 5679 0234 B0EE480A 		vmov.f32	s0, s16
 5680 0238 5548     		ldr	r0, .L353+72
 5681 023a FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5682              	.LVL348:
 669:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 5683              		.loc 19 669 5 is_stmt 1 view .LVU1475
 669:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 199


 5684              		.loc 19 669 18 is_stmt 0 view .LVU1476
 5685 023e 9FED550A 		vldr.32	s0, .L353+76
 5686 0242 5348     		ldr	r0, .L353+72
 5687 0244 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5688              	.LVL349:
 670:Veno-Echo.cpp **** 
 5689              		.loc 19 670 5 is_stmt 1 view .LVU1477
 670:Veno-Echo.cpp **** 
 5690              		.loc 19 670 19 is_stmt 0 view .LVU1478
 5691 0248 9FED5D0A 		vldr.32	s0, .L353+120
 5692 024c 5048     		ldr	r0, .L353+72
 5693 024e FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 5694              	.LVL350:
 672:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 5695              		.loc 19 672 5 is_stmt 1 view .LVU1479
 672:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 5696              		.loc 19 672 15 is_stmt 0 view .LVU1480
 5697 0252 3D48     		ldr	r0, .L353
 5698 0254 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5699              	.LVL351:
 5700 0258 4F48     		ldr	r0, .L353+80
 5701 025a FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 5702              	.LVL352:
 673:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 5703              		.loc 19 673 5 is_stmt 1 view .LVU1481
 673:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 5704              		.loc 19 673 17 is_stmt 0 view .LVU1482
 5705 025e B0EE480A 		vmov.f32	s0, s16
 5706 0262 4D48     		ldr	r0, .L353+80
 5707 0264 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5708              	.LVL353:
 674:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 5709              		.loc 19 674 5 is_stmt 1 view .LVU1483
 674:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 5710              		.loc 19 674 18 is_stmt 0 view .LVU1484
 5711 0268 9FED4A0A 		vldr.32	s0, .L353+76
 5712 026c 4A48     		ldr	r0, .L353+80
 5713 026e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5714              	.LVL354:
 675:Veno-Echo.cpp **** 
 5715              		.loc 19 675 5 is_stmt 1 view .LVU1485
 675:Veno-Echo.cpp **** 
 5716              		.loc 19 675 19 is_stmt 0 view .LVU1486
 5717 0272 9FED530A 		vldr.32	s0, .L353+120
 5718 0276 4848     		ldr	r0, .L353+80
 5719 0278 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 5720              	.LVL355:
 678:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 5721              		.loc 19 678 5 is_stmt 1 view .LVU1487
 678:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 5722              		.loc 19 678 15 is_stmt 0 view .LVU1488
 5723 027c 3248     		ldr	r0, .L353
 5724 027e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5725              	.LVL356:
 5726 0282 4648     		ldr	r0, .L353+84
 5727 0284 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 5728              	.LVL357:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 200


 679:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 5729              		.loc 19 679 5 is_stmt 1 view .LVU1489
 679:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 5730              		.loc 19 679 17 is_stmt 0 view .LVU1490
 5731 0288 B0EE480A 		vmov.f32	s0, s16
 5732 028c 4348     		ldr	r0, .L353+84
 5733 028e FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5734              	.LVL358:
 680:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 5735              		.loc 19 680 5 is_stmt 1 view .LVU1491
 680:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 5736              		.loc 19 680 18 is_stmt 0 view .LVU1492
 5737 0292 9FED430A 		vldr.32	s0, .L353+88
 5738 0296 4148     		ldr	r0, .L353+84
 5739 0298 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5740              	.LVL359:
 681:Veno-Echo.cpp **** 
 5741              		.loc 19 681 5 is_stmt 1 view .LVU1493
 681:Veno-Echo.cpp **** 
 5742              		.loc 19 681 19 is_stmt 0 view .LVU1494
 5743 029c 9FED480A 		vldr.32	s0, .L353+120
 5744 02a0 3E48     		ldr	r0, .L353+84
 5745 02a2 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 5746              	.LVL360:
 683:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 5747              		.loc 19 683 5 is_stmt 1 view .LVU1495
 683:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 5748              		.loc 19 683 15 is_stmt 0 view .LVU1496
 5749 02a6 2848     		ldr	r0, .L353
 5750 02a8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5751              	.LVL361:
 5752 02ac 3D48     		ldr	r0, .L353+92
 5753 02ae FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 5754              	.LVL362:
 684:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 5755              		.loc 19 684 5 is_stmt 1 view .LVU1497
 684:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 5756              		.loc 19 684 17 is_stmt 0 view .LVU1498
 5757 02b2 B0EE480A 		vmov.f32	s0, s16
 5758 02b6 3B48     		ldr	r0, .L353+92
 5759 02b8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5760              	.LVL363:
 685:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 5761              		.loc 19 685 5 is_stmt 1 view .LVU1499
 685:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 5762              		.loc 19 685 18 is_stmt 0 view .LVU1500
 5763 02bc 9FED380A 		vldr.32	s0, .L353+88
 5764 02c0 3848     		ldr	r0, .L353+92
 5765 02c2 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5766              	.LVL364:
 686:Veno-Echo.cpp **** 
 5767              		.loc 19 686 5 is_stmt 1 view .LVU1501
 686:Veno-Echo.cpp **** 
 5768              		.loc 19 686 19 is_stmt 0 view .LVU1502
 5769 02c6 9FED3E0A 		vldr.32	s0, .L353+120
 5770 02ca 3648     		ldr	r0, .L353+92
 5771 02cc FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 201


 5772              	.LVL365:
 689:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 5773              		.loc 19 689 5 is_stmt 1 view .LVU1503
 689:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 5774              		.loc 19 689 20 is_stmt 0 view .LVU1504
 5775 02d0 1D48     		ldr	r0, .L353
 5776 02d2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5777              	.LVL366:
 5778 02d6 3448     		ldr	r0, .L353+96
 5779 02d8 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 5780              	.LVL367:
 690:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 5781              		.loc 19 690 5 is_stmt 1 view .LVU1505
 690:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 5782              		.loc 19 690 22 is_stmt 0 view .LVU1506
 5783 02dc B0EE480A 		vmov.f32	s0, s16
 5784 02e0 3148     		ldr	r0, .L353+96
 5785 02e2 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5786              	.LVL368:
 691:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 5787              		.loc 19 691 5 is_stmt 1 view .LVU1507
 691:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 5788              		.loc 19 691 23 is_stmt 0 view .LVU1508
 5789 02e6 9FED2B0A 		vldr.32	s0, .L353+76
 5790 02ea 2F48     		ldr	r0, .L353+96
 5791 02ec FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5792              	.LVL369:
 692:Veno-Echo.cpp **** 
 5793              		.loc 19 692 5 is_stmt 1 view .LVU1509
 692:Veno-Echo.cpp **** 
 5794              		.loc 19 692 24 is_stmt 0 view .LVU1510
 5795 02f0 9FED330A 		vldr.32	s0, .L353+120
 5796 02f4 2C48     		ldr	r0, .L353+96
 5797 02f6 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 5798              	.LVL370:
 694:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 5799              		.loc 19 694 5 is_stmt 1 view .LVU1511
 694:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 5800              		.loc 19 694 20 is_stmt 0 view .LVU1512
 5801 02fa 1348     		ldr	r0, .L353
 5802 02fc FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5803              	.LVL371:
 5804 0300 2A48     		ldr	r0, .L353+100
 5805 0302 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 5806              	.LVL372:
 695:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 5807              		.loc 19 695 5 is_stmt 1 view .LVU1513
 695:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 5808              		.loc 19 695 22 is_stmt 0 view .LVU1514
 5809 0306 B0EE480A 		vmov.f32	s0, s16
 5810 030a 2848     		ldr	r0, .L353+100
 5811 030c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5812              	.LVL373:
 696:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 5813              		.loc 19 696 5 is_stmt 1 view .LVU1515
 696:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 5814              		.loc 19 696 23 is_stmt 0 view .LVU1516
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 202


 5815 0310 9FED200A 		vldr.32	s0, .L353+76
 5816 0314 2548     		ldr	r0, .L353+100
 5817 0316 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5818              	.LVL374:
 697:Veno-Echo.cpp **** 
 5819              		.loc 19 697 5 is_stmt 1 view .LVU1517
 697:Veno-Echo.cpp **** 
 5820              		.loc 19 697 24 is_stmt 0 view .LVU1518
 5821 031a 9FED290A 		vldr.32	s0, .L353+120
 5822 031e 2348     		ldr	r0, .L353+100
 5823 0320 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 5824              	.LVL375:
 700:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 5825              		.loc 19 700 5 is_stmt 1 view .LVU1519
 700:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 5826              		.loc 19 700 20 is_stmt 0 view .LVU1520
 5827 0324 0848     		ldr	r0, .L353
 5828 0326 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5829              	.LVL376:
 5830 032a 2148     		ldr	r0, .L353+104
 5831 032c FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 5832              	.LVL377:
 701:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 5833              		.loc 19 701 5 is_stmt 1 view .LVU1521
 701:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 5834              		.loc 19 701 22 is_stmt 0 view .LVU1522
 5835 0330 B0EE480A 		vmov.f32	s0, s16
 5836 0334 1E48     		ldr	r0, .L353+104
 5837 0336 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5838              	.LVL378:
 702:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 5839              		.loc 19 702 5 is_stmt 1 view .LVU1523
 702:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 5840              		.loc 19 702 23 is_stmt 0 view .LVU1524
 5841 033a 9FED190A 		vldr.32	s0, .L353+88
 5842 033e 1C48     		ldr	r0, .L353+104
 5843 0340 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5844              	.LVL379:
 5845 0344 3EE0     		b	.L354
 5846              	.L355:
 5847 0346 00BF     		.align	2
 5848              	.L353:
 5849 0348 00000000 		.word	.LANCHOR4
 5850 034c 00004042 		.word	1111490560
 5851 0350 00000000 		.word	.LANCHOR58
 5852 0354 0AD7233C 		.word	1008981770
 5853 0358 00000000 		.word	.LANCHOR59
 5854 035c 00000000 		.word	.LANCHOR60
 5855 0360 00000000 		.word	.LANCHOR61
 5856 0364 00000000 		.word	.LANCHOR62
 5857 0368 00000000 		.word	.LANCHOR63
 5858 036c 00000000 		.word	.LANCHOR64
 5859 0370 00000000 		.word	.LANCHOR65
 5860 0374 00000000 		.word	.LANCHOR44
 5861 0378 00000000 		.word	.LANCHOR68
 5862 037c 00000000 		.word	0
 5863 0380 00000000 		.word	.LANCHOR37
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 203


 5864 0384 00000000 		.word	.LANCHOR70
 5865 0388 00000000 		.word	.LANCHOR71
 5866 038c 00000000 		.word	.LANCHOR32
 5867 0390 00000000 		.word	.LANCHOR21
 5868 0394 00803B46 		.word	1178304512
 5869 0398 00000000 		.word	.LANCHOR22
 5870 039c 00000000 		.word	.LANCHOR12
 5871 03a0 00004843 		.word	1128792064
 5872 03a4 00000000 		.word	.LANCHOR13
 5873 03a8 00000000 		.word	.LANCHOR23
 5874 03ac 00000000 		.word	.LANCHOR24
 5875 03b0 00000000 		.word	.LANCHOR14
 5876 03b4 00000000 		.word	.LANCHOR66
 5877 03b8 00000000 		.word	.LANCHOR67
 5878 03bc 00000000 		.word	.LANCHOR69
 5879 03c0 3333333F 		.word	1060320051
 5880              	.L354:
 703:Veno-Echo.cpp **** 
 5881              		.loc 19 703 5 is_stmt 1 view .LVU1525
 703:Veno-Echo.cpp **** 
 5882              		.loc 19 703 24 is_stmt 0 view .LVU1526
 5883 03c4 1FED020A 		vldr.32	s0, .L353+120
 5884 03c8 7B48     		ldr	r0, .L356
 5885 03ca FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 5886              	.LVL380:
 705:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 5887              		.loc 19 705 5 is_stmt 1 view .LVU1527
 705:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 5888              		.loc 19 705 20 is_stmt 0 view .LVU1528
 5889 03ce 7B48     		ldr	r0, .L356+4
 5890 03d0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5891              	.LVL381:
 5892 03d4 7A48     		ldr	r0, .L356+8
 5893 03d6 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 5894              	.LVL382:
 706:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 5895              		.loc 19 706 5 is_stmt 1 view .LVU1529
 706:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 5896              		.loc 19 706 22 is_stmt 0 view .LVU1530
 5897 03da B0EE480A 		vmov.f32	s0, s16
 5898 03de 7848     		ldr	r0, .L356+8
 5899 03e0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5900              	.LVL383:
 707:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 5901              		.loc 19 707 5 is_stmt 1 view .LVU1531
 707:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 5902              		.loc 19 707 23 is_stmt 0 view .LVU1532
 5903 03e4 9FED770A 		vldr.32	s0, .L356+12
 5904 03e8 7548     		ldr	r0, .L356+8
 5905 03ea FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5906              	.LVL384:
 708:Veno-Echo.cpp **** 
 5907              		.loc 19 708 5 is_stmt 1 view .LVU1533
 708:Veno-Echo.cpp **** 
 5908              		.loc 19 708 24 is_stmt 0 view .LVU1534
 5909 03ee 9FED760A 		vldr.32	s0, .L356+16
 5910 03f2 7348     		ldr	r0, .L356+8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 204


 5911 03f4 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 5912              	.LVL385:
 710:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 5913              		.loc 19 710 5 is_stmt 1 view .LVU1535
 710:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 5914              		.loc 19 710 21 is_stmt 0 view .LVU1536
 5915 03f8 7048     		ldr	r0, .L356+4
 5916 03fa FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5917              	.LVL386:
 5918 03fe 7348     		ldr	r0, .L356+20
 5919 0400 FFF7FEFF 		bl	_ZN7daisysp7DcBlock4InitEf
 5920              	.LVL387:
 711:Veno-Echo.cpp **** 
 5921              		.loc 19 711 5 is_stmt 1 view .LVU1537
 711:Veno-Echo.cpp **** 
 5922              		.loc 19 711 21 is_stmt 0 view .LVU1538
 5923 0404 6D48     		ldr	r0, .L356+4
 5924 0406 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5925              	.LVL388:
 5926 040a 7148     		ldr	r0, .L356+24
 5927 040c FFF7FEFF 		bl	_ZN7daisysp7DcBlock4InitEf
 5928              	.LVL389:
 714:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 5929              		.loc 19 714 5 is_stmt 1 view .LVU1539
 714:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 5930              		.loc 19 714 13 is_stmt 0 view .LVU1540
 5931 0410 6A48     		ldr	r0, .L356+4
 5932 0412 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 5933              	.LVL390:
 5934 0416 F0EE407A 		vmov.f32	s15, s0
 5935              	.LVL391:
 5936              	.LBB1280:
 5937              	.LBI1222:
  42:../DaisySP/Source/Synthesis/oscillator.h ****     {
 5938              		.loc 8 42 10 is_stmt 1 view .LVU1541
 5939              	.LBB1224:
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 5940              		.loc 8 44 9 view .LVU1542
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 5941              		.loc 8 46 20 is_stmt 0 view .LVU1543
 5942 041a 9FED6E7A 		vldr.32	s14, .L356+28
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 5943              		.loc 8 49 34 view .LVU1544
 5944 041e 2046     		mov	r0, r4
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 5945              		.loc 8 47 20 view .LVU1545
 5946 0420 6560     		str	r5, [r4, #4]	@ float
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 5947              		.loc 8 45 27 view .LVU1546
 5948 0422 C8EEA76A 		vdiv.f32	s13, s17, s15
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 5949              		.loc 8 46 20 view .LVU1547
 5950 0426 84ED027A 		vstr.32	s14, [r4, #8]
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 5951              		.loc 8 44 20 view .LVU1548
 5952 042a C4ED037A 		vstr.32	s15, [r4, #12]
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 205


 5953              		.loc 8 45 9 is_stmt 1 view .LVU1549
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 5954              		.loc 8 48 20 is_stmt 0 view .LVU1550
 5955 042e 84ED058A 		vstr.32	s16, [r4, #20]
 5956              	.LBE1224:
 5957              	.LBE1280:
 736:Veno-Echo.cpp **** 
 5958              		.loc 19 736 17 view .LVU1551
 5959 0432 694D     		ldr	r5, .L356+32
 5960              	.LBB1281:
 5961              	.LBB1225:
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 5962              		.loc 8 49 34 view .LVU1552
 5963 0434 B0EE470A 		vmov.f32	s0, s14
 5964              	.LVL392:
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 5965              		.loc 8 45 20 view .LVU1553
 5966 0438 C4ED046A 		vstr.32	s13, [r4, #16]
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 5967              		.loc 8 46 9 is_stmt 1 view .LVU1554
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 5968              		.loc 8 47 9 view .LVU1555
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 5969              		.loc 8 48 9 view .LVU1556
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 5970              		.loc 8 49 9 view .LVU1557
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 5971              		.loc 8 49 34 is_stmt 0 view .LVU1558
 5972 043c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 5973              	.LVL393:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 5974              		.loc 8 52 20 view .LVU1559
 5975 0440 40F20113 		movw	r3, #257
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 5976              		.loc 8 49 34 view .LVU1560
 5977 0444 F0EE407A 		vmov.f32	s15, s0
 5978              	.LBE1225:
 5979              	.LBE1281:
 5980              	.LBB1282:
 5981              	.LBB1283:
 5982              		.loc 8 61 34 view .LVU1561
 5983 0448 2046     		mov	r0, r4
 5984              	.LBE1283:
 5985              	.LBE1282:
 5986              	.LBB1287:
 5987              	.LBB1288:
  62:../DaisySP/Source/Synthesis/oscillator.h ****     }
  63:../DaisySP/Source/Synthesis/oscillator.h **** 
  64:../DaisySP/Source/Synthesis/oscillator.h **** 
  65:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  66:../DaisySP/Source/Synthesis/oscillator.h ****     */
  67:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:../DaisySP/Source/Synthesis/oscillator.h ****     */
  70:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  71:../DaisySP/Source/Synthesis/oscillator.h ****     {
  72:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 206


 5988              		.loc 8 72 19 view .LVU1562
 5989 044a 2770     		strb	r7, [r4]
 5990              	.LBE1288:
 5991              	.LBE1287:
 5992              	.LBB1290:
 5993              	.LBB1226:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 5994              		.loc 8 52 20 view .LVU1563
 5995 044c A384     		strh	r3, [r4, #36]	@ movhi
 5996              	.LBE1226:
 5997              	.LBE1290:
 5998              	.LBB1291:
 5999              	.LBB1284:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 6000              		.loc 8 61 34 view .LVU1564
 6001 044e B0EE680A 		vmov.f32	s0, s17
 6002              	.LBE1284:
 6003              	.LBE1291:
 6004              	.LBB1292:
 6005              	.LBB1227:
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 6006              		.loc 8 49 20 view .LVU1565
 6007 0452 C4ED067A 		vstr.32	s15, [r4, #24]
  50:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
 6008              		.loc 8 50 9 is_stmt 1 view .LVU1566
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
 6009              		.loc 8 51 9 view .LVU1567
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 6010              		.loc 8 52 9 view .LVU1568
 6011              	.LVL394:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 6012              		.loc 8 52 9 is_stmt 0 view .LVU1569
 6013              	.LBE1227:
 6014              	.LBE1292:
 715:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 6015              		.loc 19 715 5 is_stmt 1 view .LVU1570
 6016              	.LBB1293:
 6017              	.LBI1287:
  70:../DaisySP/Source/Synthesis/oscillator.h ****     {
 6018              		.loc 8 70 17 view .LVU1571
 6019              	.LBB1289:
 6020              		.loc 8 72 9 view .LVU1572
 6021              		.loc 8 72 9 is_stmt 0 view .LVU1573
 6022              	.LBE1289:
 6023              	.LBE1293:
 716:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 6024              		.loc 19 716 5 is_stmt 1 view .LVU1574
 6025              	.LBB1294:
 6026              	.LBI1282:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 6027              		.loc 8 58 17 view .LVU1575
 6028              	.LBB1285:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6029              		.loc 8 60 9 view .LVU1576
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 6030              		.loc 8 61 9 view .LVU1577
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 207


 6031              		.loc 8 60 20 is_stmt 0 view .LVU1578
 6032 0456 C4ED028A 		vstr.32	s17, [r4, #8]
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 6033              		.loc 8 61 34 view .LVU1579
 6034 045a FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 6035              	.LVL395:
 6036 045e F0EE407A 		vmov.f32	s15, s0
 6037              	.LBE1285:
 6038              	.LBE1294:
 724:Veno-Echo.cpp **** 
 6039              		.loc 19 724 19 view .LVU1580
 6040 0462 41F27072 		movw	r2, #6000
 6041 0466 5021     		movs	r1, #80
 6042 0468 B7EE040A 		vmov.f32	s0, #1.25e+0
 6043 046c 5B48     		ldr	r0, .L356+36
 6044              	.LBB1295:
 6045              	.LBB1296:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 6046              		.loc 8 67 46 view .LVU1581
 6047 046e C4ED018A 		vstr.32	s17, [r4, #4]
 6048              	.LBE1296:
 6049              	.LBE1295:
 6050              	.LBB1298:
 6051              	.LBB1286:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 6052              		.loc 8 61 20 view .LVU1582
 6053 0472 C4ED067A 		vstr.32	s15, [r4, #24]
 6054              	.LVL396:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 6055              		.loc 8 61 20 view .LVU1583
 6056              	.LBE1286:
 6057              	.LBE1298:
 717:Veno-Echo.cpp **** 
 6058              		.loc 19 717 5 is_stmt 1 view .LVU1584
 6059              	.LBB1299:
 6060              	.LBI1295:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 6061              		.loc 8 67 17 view .LVU1585
 6062              	.LBB1297:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 6063              		.loc 8 67 41 view .LVU1586
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 6064              		.loc 8 67 41 is_stmt 0 view .LVU1587
 6065              	.LBE1297:
 6066              	.LBE1299:
 724:Veno-Echo.cpp **** 
 6067              		.loc 19 724 5 is_stmt 1 view .LVU1588
 724:Veno-Echo.cpp **** 
 6068              		.loc 19 724 19 is_stmt 0 view .LVU1589
 6069 0476 FFF7FEFF 		bl	_ZN8Taptempo4initEiif
 6070              	.LVL397:
 728:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 6071              		.loc 19 728 5 is_stmt 1 view .LVU1590
 728:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 6072              		.loc 19 728 23 is_stmt 0 view .LVU1591
 6073 047a 1820     		movs	r0, #24
 736:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 208


 6074              		.loc 19 736 17 view .LVU1592
 6075 047c 584C     		ldr	r4, .L356+40
 728:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 6076              		.loc 19 728 23 view .LVU1593
 6077 047e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6078              	.LVL398:
 6079 0482 0346     		mov	r3, r0	@ movhi
 6080 0484 4D48     		ldr	r0, .L356+4
 6081 0486 ADF84030 		strh	r3, [sp, #64]	@ movhi
 6082 048a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6083              	.LVL399:
 6084 048e 1099     		ldr	r1, [sp, #64]
 6085 0490 5448     		ldr	r0, .L356+44
 6086 0492 FFF7FEFF 		bl	_ZN8TempoLED4initE12dsy_gpio_pinf
 6087              	.LVL400:
 729:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 6088              		.loc 19 729 5 is_stmt 1 view .LVU1594
 729:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 6089              		.loc 19 729 27 is_stmt 0 view .LVU1595
 6090 0496 5148     		ldr	r0, .L356+36
 6091 0498 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 6092              	.LVL401:
 6093 049c 5148     		ldr	r0, .L356+44
 6094 049e FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 6095              	.LVL402:
 730:Veno-Echo.cpp **** 
 6096              		.loc 19 730 5 is_stmt 1 view .LVU1596
 730:Veno-Echo.cpp **** 
 6097              		.loc 19 730 29 is_stmt 0 view .LVU1597
 6098 04a2 5048     		ldr	r0, .L356+44
 6099 04a4 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 6100              	.LVL403:
 735:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 6101              		.loc 19 735 5 is_stmt 1 view .LVU1598
 735:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 6102              		.loc 19 735 18 is_stmt 0 view .LVU1599
 6103 04a8 4B48     		ldr	r0, .L356+32
 6104 04aa FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 6105              	.LVL404:
 736:Veno-Echo.cpp **** 
 6106              		.loc 19 736 5 is_stmt 1 view .LVU1600
 736:Veno-Echo.cpp **** 
 6107              		.loc 19 736 17 is_stmt 0 view .LVU1601
 6108 04ae 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 6109 04b0 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6110 04b2 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 6111 04b6 84E80F00 		stm	r4, {r0, r1, r2, r3}
 744:Veno-Echo.cpp **** 
 6112              		.loc 19 744 5 is_stmt 1 view .LVU1602
 746:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 6113              		.loc 19 746 5 view .LVU1603
 746:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 6114              		.loc 19 746 28 is_stmt 0 view .LVU1604
 6115 04ba 0F20     		movs	r0, #15
 6116 04bc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6117              	.LVL405:
 6118 04c0 0346     		mov	r3, r0	@ movhi
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 209


 6119 04c2 1CA8     		add	r0, sp, #112
 6120 04c4 ADF84430 		strh	r3, [sp, #68]	@ movhi
 6121 04c8 1199     		ldr	r1, [sp, #68]
 6122 04ca FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 6123              	.LVL406:
 747:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 6124              		.loc 19 747 5 is_stmt 1 view .LVU1605
 747:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 6125              		.loc 19 747 28 is_stmt 0 view .LVU1606
 6126 04ce 1020     		movs	r0, #16
 6127 04d0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6128              	.LVL407:
 6129 04d4 0346     		mov	r3, r0	@ movhi
 6130 04d6 0DF18100 		add	r0, sp, #129
 6131 04da ADF84830 		strh	r3, [sp, #72]	@ movhi
 6132 04de 1299     		ldr	r1, [sp, #72]
 6133 04e0 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 6134              	.LVL408:
 748:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 6135              		.loc 19 748 5 is_stmt 1 view .LVU1607
 748:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 6136              		.loc 19 748 28 is_stmt 0 view .LVU1608
 6137 04e4 1120     		movs	r0, #17
 6138 04e6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6139              	.LVL409:
 6140 04ea 0346     		mov	r3, r0	@ movhi
 6141 04ec 0DF19200 		add	r0, sp, #146
 6142 04f0 ADF84C30 		strh	r3, [sp, #76]	@ movhi
 6143 04f4 1399     		ldr	r1, [sp, #76]
 6144 04f6 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 6145              	.LVL410:
 749:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 6146              		.loc 19 749 5 is_stmt 1 view .LVU1609
 749:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 6147              		.loc 19 749 28 is_stmt 0 view .LVU1610
 6148 04fa 1220     		movs	r0, #18
 6149 04fc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6150              	.LVL411:
 6151 0500 0346     		mov	r3, r0	@ movhi
 6152 0502 0DF1A300 		add	r0, sp, #163
 6153 0506 ADF85030 		strh	r3, [sp, #80]	@ movhi
 6154 050a 1499     		ldr	r1, [sp, #80]
 6155 050c FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 6156              	.LVL412:
 750:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 6157              		.loc 19 750 5 is_stmt 1 view .LVU1611
 750:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 6158              		.loc 19 750 28 is_stmt 0 view .LVU1612
 6159 0510 1320     		movs	r0, #19
 6160 0512 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6161              	.LVL413:
 6162 0516 0346     		mov	r3, r0	@ movhi
 6163 0518 2DA8     		add	r0, sp, #180
 6164 051a ADF85430 		strh	r3, [sp, #84]	@ movhi
 6165 051e 1599     		ldr	r1, [sp, #84]
 6166 0520 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 6167              	.LVL414:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 210


 751:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 6168              		.loc 19 751 5 is_stmt 1 view .LVU1613
 751:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 6169              		.loc 19 751 28 is_stmt 0 view .LVU1614
 6170 0524 1420     		movs	r0, #20
 6171 0526 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6172              	.LVL415:
 6173 052a 0346     		mov	r3, r0	@ movhi
 6174 052c 0DF1C500 		add	r0, sp, #197
 6175 0530 ADF85830 		strh	r3, [sp, #88]	@ movhi
 6176 0534 1699     		ldr	r1, [sp, #88]
 6177 0536 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 6178              	.LVL416:
 753:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 6179              		.loc 19 753 5 is_stmt 1 view .LVU1615
 753:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 6180              		.loc 19 753 28 is_stmt 0 view .LVU1616
 6181 053a 1620     		movs	r0, #22
 6182 053c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6183              	.LVL417:
 6184 0540 0346     		mov	r3, r0	@ movhi
 6185 0542 0DF1D600 		add	r0, sp, #214
 6186 0546 ADF85C30 		strh	r3, [sp, #92]	@ movhi
 6187 054a 1799     		ldr	r1, [sp, #92]
 6188 054c FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 6189              	.LVL418:
 754:Veno-Echo.cpp **** 
 6190              		.loc 19 754 5 is_stmt 1 view .LVU1617
 754:Veno-Echo.cpp **** 
 6191              		.loc 19 754 25 is_stmt 0 view .LVU1618
 6192 0550 1920     		movs	r0, #25
 6193 0552 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6194              	.LVL419:
 6195 0556 0346     		mov	r3, r0	@ movhi
 6196 0558 0E20     		movs	r0, #14
 6197 055a ADF86030 		strh	r3, [sp, #96]	@ movhi
 6198 055e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6199              	.LVL420:
 6200 0562 0346     		mov	r3, r0	@ movhi
 6201 0564 0D20     		movs	r0, #13
 6202 0566 ADF86430 		strh	r3, [sp, #100]	@ movhi
 6203 056a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6204              	.LVL421:
 6205 056e 0346     		mov	r3, r0	@ movhi
 6206 0570 0C20     		movs	r0, #12
 6207 0572 ADF86830 		strh	r3, [sp, #104]	@ movhi
 6208 0576 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6209              	.LVL422:
 6210 057a BDF86810 		ldrh	r1, [sp, #104]
 6211 057e 0822     		movs	r2, #8
 6212 0580 199B     		ldr	r3, [sp, #100]
 6213 0582 ADF80400 		strh	r0, [sp, #4]	@ movhi
 6214 0586 0DF1E700 		add	r0, sp, #231
 6215 058a ADF80010 		strh	r1, [sp]	@ movhi
 6216 058e 1899     		ldr	r1, [sp, #96]
 6217 0590 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
 6218              	.LVL423:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 211


 757:Veno-Echo.cpp ****     hw.adc.Start();
 6219              		.loc 19 757 5 is_stmt 1 view .LVU1619
 757:Veno-Echo.cpp ****     hw.adc.Start();
 6220              		.loc 19 757 16 is_stmt 0 view .LVU1620
 6221 0594 1CA9     		add	r1, sp, #112
 6222 0596 0623     		movs	r3, #6
 6223 0598 0822     		movs	r2, #8
 6224 059a 1348     		ldr	r0, .L356+48
 6225 059c FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 6226              	.LVL424:
 758:Veno-Echo.cpp **** 
 6227              		.loc 19 758 5 is_stmt 1 view .LVU1621
 758:Veno-Echo.cpp **** 
 6228              		.loc 19 758 17 is_stmt 0 view .LVU1622
 6229 05a0 1148     		ldr	r0, .L356+48
 6230 05a2 FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 6231              	.LVL425:
 760:Veno-Echo.cpp ****     // start audio callback
 6232              		.loc 19 760 5 is_stmt 1 view .LVU1623
 760:Veno-Echo.cpp ****     // start audio callback
 6233              		.loc 19 760 25 is_stmt 0 view .LVU1624
 6234 05a6 3946     		mov	r1, r7
 6235 05a8 0448     		ldr	r0, .L356+4
 6236 05aa FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 6237              	.LVL426:
 762:Veno-Echo.cpp **** 
 6238              		.loc 19 762 5 is_stmt 1 view .LVU1625
 762:Veno-Echo.cpp **** 
 6239              		.loc 19 762 18 is_stmt 0 view .LVU1626
 6240 05ae 0F49     		ldr	r1, .L356+52
 6241 05b0 0248     		ldr	r0, .L356+4
 6242 05b2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
 6243              	.LVL427:
 6244              	.L351:
 766:Veno-Echo.cpp ****      {
 6245              		.loc 19 766 6 is_stmt 1 discriminator 1 view .LVU1627
 766:Veno-Echo.cpp ****      {
 6246              		.loc 19 766 6 discriminator 1 view .LVU1628
 766:Veno-Echo.cpp ****      {
 6247              		.loc 19 766 6 discriminator 1 view .LVU1629
 766:Veno-Echo.cpp ****      {
 6248              		.loc 19 766 6 discriminator 1 view .LVU1630
 6249 05b6 FEE7     		b	.L351
 6250              	.L357:
 6251              		.align	2
 6252              	.L356:
 6253 05b8 00000000 		.word	.LANCHOR14
 6254 05bc 00000000 		.word	.LANCHOR4
 6255 05c0 00000000 		.word	.LANCHOR15
 6256 05c4 00004843 		.word	1128792064
 6257 05c8 3333333F 		.word	1060320051
 6258 05cc 00000000 		.word	.LANCHOR72
 6259 05d0 00000000 		.word	.LANCHOR73
 6260 05d4 0000C842 		.word	1120403456
 6261 05d8 00000000 		.word	.LANCHOR74
 6262 05dc 00000000 		.word	.LANCHOR47
 6263 05e0 00000000 		.word	.LANCHOR16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 212


 6264 05e4 00000000 		.word	.LANCHOR46
 6265 05e8 18000000 		.word	.LANCHOR4+24
 6266 05ec 00000000 		.word	_ZL13AudioCallbackPfS_j
 6267              		.cfi_endproc
 6268              	.LFE4290:
 6270              		.section	.text._Z13TurnOnAllLEDsv,"ax",%progbits
 6271              		.align	1
 6272              		.p2align 2,,3
 6273              		.global	_Z13TurnOnAllLEDsv
 6274              		.syntax unified
 6275              		.thumb
 6276              		.thumb_func
 6277              		.fpu fpv5-d16
 6279              	_Z13TurnOnAllLEDsv:
 6280              	.LFB4313:
1559:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 6281              		.loc 19 1559 1 view -0
 6282              		.cfi_startproc
 6283              		@ args = 0, pretend = 0, frame = 0
 6284              		@ frame_needed = 0, uses_anonymous_args = 0
1560:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 6285              		.loc 19 1560 5 view .LVU1632
1559:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 6286              		.loc 19 1559 1 is_stmt 0 view .LVU1633
 6287 0000 08B5     		push	{r3, lr}
 6288              		.cfi_def_cfa_offset 8
 6289              		.cfi_offset 3, -8
 6290              		.cfi_offset 14, -4
1560:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 6291              		.loc 19 1560 26 view .LVU1634
 6292 0002 B7EE000A 		vmov.f32	s0, #1.0e+0
 6293 0006 1148     		ldr	r0, .L360
 6294 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 6295              	.LVL428:
1561:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 6296              		.loc 19 1561 5 is_stmt 1 view .LVU1635
1561:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 6297              		.loc 19 1561 28 is_stmt 0 view .LVU1636
 6298 000c B7EE000A 		vmov.f32	s0, #1.0e+0
 6299 0010 0F48     		ldr	r0, .L360+4
 6300 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 6301              	.LVL429:
1562:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 6302              		.loc 19 1562 5 is_stmt 1 view .LVU1637
1562:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 6303              		.loc 19 1562 28 is_stmt 0 view .LVU1638
 6304 0016 B7EE000A 		vmov.f32	s0, #1.0e+0
 6305 001a 0E48     		ldr	r0, .L360+8
 6306 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 6307              	.LVL430:
1563:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 6308              		.loc 19 1563 5 is_stmt 1 view .LVU1639
1563:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 6309              		.loc 19 1563 21 is_stmt 0 view .LVU1640
 6310 0020 B7EE000A 		vmov.f32	s0, #1.0e+0
 6311 0024 0C48     		ldr	r0, .L360+12
 6312 0026 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 213


 6313              	.LVL431:
1564:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 6314              		.loc 19 1564 5 is_stmt 1 view .LVU1641
1564:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 6315              		.loc 19 1564 21 is_stmt 0 view .LVU1642
 6316 002a B7EE000A 		vmov.f32	s0, #1.0e+0
 6317 002e 0B48     		ldr	r0, .L360+16
 6318 0030 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 6319              	.LVL432:
1565:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 6320              		.loc 19 1565 5 is_stmt 1 view .LVU1643
1565:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 6321              		.loc 19 1565 19 is_stmt 0 view .LVU1644
 6322 0034 B7EE000A 		vmov.f32	s0, #1.0e+0
 6323 0038 0948     		ldr	r0, .L360+20
 6324 003a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 6325              	.LVL433:
1566:Veno-Echo.cpp **** }
 6326              		.loc 19 1566 5 is_stmt 1 view .LVU1645
1566:Veno-Echo.cpp **** }
 6327              		.loc 19 1566 19 is_stmt 0 view .LVU1646
 6328 003e B7EE000A 		vmov.f32	s0, #1.0e+0
 6329 0042 0848     		ldr	r0, .L360+24
1567:Veno-Echo.cpp **** 
 6330              		.loc 19 1567 1 view .LVU1647
 6331 0044 BDE80840 		pop	{r3, lr}
 6332              		.cfi_restore 14
 6333              		.cfi_restore 3
 6334              		.cfi_def_cfa_offset 0
1566:Veno-Echo.cpp **** }
 6335              		.loc 19 1566 19 view .LVU1648
 6336 0048 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 6337              	.LVL434:
 6338              	.L361:
 6339              		.align	2
 6340              	.L360:
 6341 004c 00000000 		.word	.LANCHOR46
 6342 0050 04000000 		.word	.LANCHOR0+4
 6343 0054 04000000 		.word	.LANCHOR1+4
 6344 0058 00000000 		.word	.LANCHOR60
 6345 005c 00000000 		.word	.LANCHOR61
 6346 0060 00000000 		.word	.LANCHOR58
 6347 0064 00000000 		.word	.LANCHOR59
 6348              		.cfi_endproc
 6349              	.LFE4313:
 6351              		.section	.text._Z12ResetAllLEDsv,"ax",%progbits
 6352              		.align	1
 6353              		.p2align 2,,3
 6354              		.global	_Z12ResetAllLEDsv
 6355              		.syntax unified
 6356              		.thumb
 6357              		.thumb_func
 6358              		.fpu fpv5-d16
 6360              	_Z12ResetAllLEDsv:
 6361              	.LFB4314:
1570:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 6362              		.loc 19 1570 1 is_stmt 1 view -0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 214


 6363              		.cfi_startproc
 6364              		@ args = 0, pretend = 0, frame = 0
 6365              		@ frame_needed = 0, uses_anonymous_args = 0
1571:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 6366              		.loc 19 1571 5 view .LVU1650
1570:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 6367              		.loc 19 1570 1 is_stmt 0 view .LVU1651
 6368 0000 08B5     		push	{r3, lr}
 6369              		.cfi_def_cfa_offset 8
 6370              		.cfi_offset 3, -8
 6371              		.cfi_offset 14, -4
1571:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 6372              		.loc 19 1571 26 view .LVU1652
 6373 0002 9FED1E0A 		vldr.32	s0, .L369
 6374 0006 1E48     		ldr	r0, .L369+4
 6375 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 6376              	.LVL435:
1572:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 6377              		.loc 19 1572 5 is_stmt 1 view .LVU1653
1572:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 6378              		.loc 19 1572 28 is_stmt 0 view .LVU1654
 6379 000c 9FED1B0A 		vldr.32	s0, .L369
 6380 0010 1C48     		ldr	r0, .L369+8
 6381 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 6382              	.LVL436:
1573:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 6383              		.loc 19 1573 5 is_stmt 1 view .LVU1655
1573:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 6384              		.loc 19 1573 28 is_stmt 0 view .LVU1656
 6385 0016 1C48     		ldr	r0, .L369+12
 6386 0018 9FED180A 		vldr.32	s0, .L369
 6387 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 6388              	.LVL437:
1574:Veno-Echo.cpp ****     {
 6389              		.loc 19 1574 5 is_stmt 1 view .LVU1657
1574:Veno-Echo.cpp ****     {
 6390              		.loc 19 1574 26 is_stmt 0 view .LVU1658
 6391 0020 1A48     		ldr	r0, .L369+16
 6392 0022 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 6393              	.LVL438:
1574:Veno-Echo.cpp ****     {
 6394              		.loc 19 1574 5 view .LVU1659
 6395 0026 C8B9     		cbnz	r0, .L363
1576:Veno-Echo.cpp ****     }
 6396              		.loc 19 1576 9 is_stmt 1 view .LVU1660
1576:Veno-Echo.cpp ****     }
 6397              		.loc 19 1576 25 is_stmt 0 view .LVU1661
 6398 0028 1848     		ldr	r0, .L369+16
 6399 002a 9FED140A 		vldr.32	s0, .L369
 6400 002e FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 6401              	.LVL439:
1583:Veno-Echo.cpp ****     {
 6402              		.loc 19 1583 5 is_stmt 1 view .LVU1662
1583:Veno-Echo.cpp ****     {
 6403              		.loc 19 1583 26 is_stmt 0 view .LVU1663
 6404 0032 1748     		ldr	r0, .L369+20
 6405 0034 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 215


 6406              	.LVL440:
1583:Veno-Echo.cpp ****     {
 6407              		.loc 19 1583 5 view .LVU1664
 6408 0038 D0B9     		cbnz	r0, .L365
 6409              	.L368:
1585:Veno-Echo.cpp ****     }
 6410              		.loc 19 1585 9 is_stmt 1 view .LVU1665
1585:Veno-Echo.cpp ****     }
 6411              		.loc 19 1585 25 is_stmt 0 view .LVU1666
 6412 003a 9FED100A 		vldr.32	s0, .L369
 6413 003e 1448     		ldr	r0, .L369+20
 6414 0040 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 6415              	.LVL441:
 6416              	.L366:
1592:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 6417              		.loc 19 1592 5 is_stmt 1 view .LVU1667
1592:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 6418              		.loc 19 1592 19 is_stmt 0 view .LVU1668
 6419 0044 9FED0D0A 		vldr.32	s0, .L369
 6420 0048 1248     		ldr	r0, .L369+24
 6421 004a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 6422              	.LVL442:
1593:Veno-Echo.cpp **** }
 6423              		.loc 19 1593 5 is_stmt 1 view .LVU1669
1593:Veno-Echo.cpp **** }
 6424              		.loc 19 1593 19 is_stmt 0 view .LVU1670
 6425 004e 9FED0B0A 		vldr.32	s0, .L369
 6426 0052 1148     		ldr	r0, .L369+28
1594:Veno-Echo.cpp **** 
 6427              		.loc 19 1594 1 view .LVU1671
 6428 0054 BDE80840 		pop	{r3, lr}
 6429              		.cfi_remember_state
 6430              		.cfi_restore 14
 6431              		.cfi_restore 3
 6432              		.cfi_def_cfa_offset 0
1593:Veno-Echo.cpp **** }
 6433              		.loc 19 1593 19 view .LVU1672
 6434 0058 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 6435              	.LVL443:
 6436              	.L363:
 6437              		.cfi_restore_state
1580:Veno-Echo.cpp ****     }
 6438              		.loc 19 1580 8 is_stmt 1 view .LVU1673
1580:Veno-Echo.cpp ****     }
 6439              		.loc 19 1580 24 is_stmt 0 view .LVU1674
 6440 005c 0B48     		ldr	r0, .L369+16
 6441 005e B7EE000A 		vmov.f32	s0, #1.0e+0
 6442 0062 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 6443              	.LVL444:
1583:Veno-Echo.cpp ****     {
 6444              		.loc 19 1583 5 is_stmt 1 view .LVU1675
1583:Veno-Echo.cpp ****     {
 6445              		.loc 19 1583 26 is_stmt 0 view .LVU1676
 6446 0066 0A48     		ldr	r0, .L369+20
 6447 0068 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 6448              	.LVL445:
1583:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 216


 6449              		.loc 19 1583 5 view .LVU1677
 6450 006c 0028     		cmp	r0, #0
 6451 006e E4D0     		beq	.L368
 6452              	.L365:
1589:Veno-Echo.cpp ****     }
 6453              		.loc 19 1589 9 is_stmt 1 view .LVU1678
1589:Veno-Echo.cpp ****     }
 6454              		.loc 19 1589 25 is_stmt 0 view .LVU1679
 6455 0070 B7EE000A 		vmov.f32	s0, #1.0e+0
 6456 0074 0648     		ldr	r0, .L369+20
 6457 0076 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 6458              	.LVL446:
 6459 007a E3E7     		b	.L366
 6460              	.L370:
 6461              		.align	2
 6462              	.L369:
 6463 007c 00000000 		.word	0
 6464 0080 00000000 		.word	.LANCHOR46
 6465 0084 04000000 		.word	.LANCHOR0+4
 6466 0088 04000000 		.word	.LANCHOR1+4
 6467 008c 00000000 		.word	.LANCHOR60
 6468 0090 00000000 		.word	.LANCHOR61
 6469 0094 00000000 		.word	.LANCHOR58
 6470 0098 00000000 		.word	.LANCHOR59
 6471              		.cfi_endproc
 6472              	.LFE4314:
 6474              		.section	.text._Z14Update_Buttonsv,"ax",%progbits
 6475              		.align	1
 6476              		.p2align 2,,3
 6477              		.global	_Z14Update_Buttonsv
 6478              		.syntax unified
 6479              		.thumb
 6480              		.thumb_func
 6481              		.fpu fpv5-d16
 6483              	_Z14Update_Buttonsv:
 6484              	.LFB4308:
1188:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 6485              		.loc 19 1188 1 is_stmt 1 view -0
 6486              		.cfi_startproc
 6487              		@ args = 0, pretend = 0, frame = 0
 6488              		@ frame_needed = 0, uses_anonymous_args = 0
1189:Veno-Echo.cpp ****     static uint32_t resetTime{};
 6489              		.loc 19 1189 5 view .LVU1681
1190:Veno-Echo.cpp ****     static int buttonstate{};
 6490              		.loc 19 1190 5 view .LVU1682
1191:Veno-Echo.cpp **** 
 6491              		.loc 19 1191 5 view .LVU1683
1193:Veno-Echo.cpp ****     Rev_R_sw.update();
 6492              		.loc 19 1193 5 view .LVU1684
1188:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 6493              		.loc 19 1188 1 is_stmt 0 view .LVU1685
 6494 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6495              		.cfi_def_cfa_offset 24
 6496              		.cfi_offset 3, -24
 6497              		.cfi_offset 4, -20
 6498              		.cfi_offset 5, -16
 6499              		.cfi_offset 6, -12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 217


 6500              		.cfi_offset 7, -8
 6501              		.cfi_offset 14, -4
1193:Veno-Echo.cpp ****     Rev_R_sw.update();
 6502              		.loc 19 1193 20 view .LVU1686
 6503 0002 6D48     		ldr	r0, .L420
 6504 0004 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 6505              	.LVL447:
1194:Veno-Echo.cpp ****     LPF_sw.update();
 6506              		.loc 19 1194 5 is_stmt 1 view .LVU1687
1194:Veno-Echo.cpp ****     LPF_sw.update();
 6507              		.loc 19 1194 20 is_stmt 0 view .LVU1688
 6508 0008 6C48     		ldr	r0, .L420+4
 6509 000a FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 6510              	.LVL448:
1195:Veno-Echo.cpp ****     HPF_sw.update();
 6511              		.loc 19 1195 5 is_stmt 1 view .LVU1689
1195:Veno-Echo.cpp ****     HPF_sw.update();
 6512              		.loc 19 1195 18 is_stmt 0 view .LVU1690
 6513 000e 6C48     		ldr	r0, .L420+8
 6514 0010 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 6515              	.LVL449:
1196:Veno-Echo.cpp ****     Tap_Button.update();
 6516              		.loc 19 1196 5 is_stmt 1 view .LVU1691
1199:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 6517              		.loc 19 1199 26 is_stmt 0 view .LVU1692
 6518 0014 6B4C     		ldr	r4, .L420+12
1196:Veno-Echo.cpp ****     Tap_Button.update();
 6519              		.loc 19 1196 18 view .LVU1693
 6520 0016 6C48     		ldr	r0, .L420+16
 6521 0018 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 6522              	.LVL450:
1197:Veno-Echo.cpp **** 
 6523              		.loc 19 1197 5 is_stmt 1 view .LVU1694
1197:Veno-Echo.cpp **** 
 6524              		.loc 19 1197 22 is_stmt 0 view .LVU1695
 6525 001c 6B48     		ldr	r0, .L420+20
 6526 001e FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 6527              	.LVL451:
1199:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 6528              		.loc 19 1199 5 is_stmt 1 view .LVU1696
1199:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 6529              		.loc 19 1199 26 is_stmt 0 view .LVU1697
 6530 0022 2046     		mov	r0, r4
 6531 0024 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 6532              	.LVL452:
1200:Veno-Echo.cpp ****     //TapButton.Debounce();
 6533              		.loc 19 1200 5 is_stmt 1 view .LVU1698
1200:Veno-Echo.cpp ****     //TapButton.Debounce();
 6534              		.loc 19 1200 26 is_stmt 0 view .LVU1699
 6535 0028 6948     		ldr	r0, .L420+24
 6536 002a FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 6537              	.LVL453:
1202:Veno-Echo.cpp ****     ClockIn.Debounce();
 6538              		.loc 19 1202 5 is_stmt 1 view .LVU1700
1202:Veno-Echo.cpp ****     ClockIn.Debounce();
 6539              		.loc 19 1202 18 is_stmt 0 view .LVU1701
 6540 002e 6948     		ldr	r0, .L420+28
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 218


 6541 0030 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 6542              	.LVL454:
1203:Veno-Echo.cpp ****     //gate inputs
 6543              		.loc 19 1203 5 is_stmt 1 view .LVU1702
1203:Veno-Echo.cpp ****     //gate inputs
 6544              		.loc 19 1203 21 is_stmt 0 view .LVU1703
 6545 0034 6848     		ldr	r0, .L420+32
 6546 0036 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 6547              	.LVL455:
1205:Veno-Echo.cpp ****     {
 6548              		.loc 19 1205 5 is_stmt 1 view .LVU1704
 6549              		.loc 1 69 38 view .LVU1705
1205:Veno-Echo.cpp ****     {
 6550              		.loc 19 1205 5 is_stmt 0 view .LVU1706
 6551 003a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 6552 003c 7F2B     		cmp	r3, #127
 6553 003e 00F09F80 		beq	.L411
 6554              	.L372:
1211:Veno-Echo.cpp ****     {
 6555              		.loc 19 1211 5 is_stmt 1 view .LVU1707
 6556              	.LVL456:
 6557              		.loc 1 69 38 view .LVU1708
1211:Veno-Echo.cpp ****     {
 6558              		.loc 19 1211 32 is_stmt 0 view .LVU1709
 6559 0042 634B     		ldr	r3, .L420+24
1211:Veno-Echo.cpp ****     {
 6560              		.loc 19 1211 5 view .LVU1710
 6561 0044 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 6562 0046 7F2B     		cmp	r3, #127
 6563 0048 00F09680 		beq	.L412
 6564              	.L373:
1219:Veno-Echo.cpp ****     {
 6565              		.loc 19 1219 5 is_stmt 1 view .LVU1711
1219:Veno-Echo.cpp ****     {
 6566              		.loc 19 1219 28 is_stmt 0 view .LVU1712
 6567 004c 5A48     		ldr	r0, .L420
1221:Veno-Echo.cpp ****         if (buttonstate == 3)
 6568              		.loc 19 1221 21 view .LVU1713
 6569 004e 634C     		ldr	r4, .L420+36
1219:Veno-Echo.cpp ****     {
 6570              		.loc 19 1219 28 view .LVU1714
 6571 0050 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 6572              	.LVL457:
1219:Veno-Echo.cpp ****     {
 6573              		.loc 19 1219 5 view .LVU1715
 6574 0054 28B1     		cbz	r0, .L375
1221:Veno-Echo.cpp ****         if (buttonstate == 3)
 6575              		.loc 19 1221 9 is_stmt 1 view .LVU1716
1221:Veno-Echo.cpp ****         if (buttonstate == 3)
 6576              		.loc 19 1221 21 is_stmt 0 view .LVU1717
 6577 0056 2368     		ldr	r3, [r4]
 6578 0058 0133     		adds	r3, r3, #1
1222:Veno-Echo.cpp ****         {
 6579              		.loc 19 1222 9 view .LVU1718
 6580 005a 032B     		cmp	r3, #3
1221:Veno-Echo.cpp ****         if (buttonstate == 3)
 6581              		.loc 19 1221 21 view .LVU1719
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 219


 6582 005c 2360     		str	r3, [r4]
1222:Veno-Echo.cpp ****         {
 6583              		.loc 19 1222 9 is_stmt 1 view .LVU1720
 6584 005e 00F09380 		beq	.L413
 6585              	.L375:
1228:Veno-Echo.cpp ****     {
 6586              		.loc 19 1228 5 view .LVU1721
1228:Veno-Echo.cpp ****     {
 6587              		.loc 19 1228 29 is_stmt 0 view .LVU1722
 6588 0062 5548     		ldr	r0, .L420
 6589 0064 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 6590              	.LVL458:
1228:Veno-Echo.cpp ****     {
 6591              		.loc 19 1228 5 view .LVU1723
 6592 0068 10B1     		cbz	r0, .L377
1230:Veno-Echo.cpp ****     }
 6593              		.loc 19 1230 9 is_stmt 1 view .LVU1724
1230:Veno-Echo.cpp ****     }
 6594              		.loc 19 1230 21 is_stmt 0 view .LVU1725
 6595 006a 2368     		ldr	r3, [r4]
 6596 006c 013B     		subs	r3, r3, #1
 6597 006e 2360     		str	r3, [r4]
 6598              	.L377:
1233:Veno-Echo.cpp ****     {
 6599              		.loc 19 1233 5 is_stmt 1 view .LVU1726
1233:Veno-Echo.cpp ****     {
 6600              		.loc 19 1233 28 is_stmt 0 view .LVU1727
 6601 0070 5248     		ldr	r0, .L420+4
 6602 0072 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 6603              	.LVL459:
1233:Veno-Echo.cpp ****     {
 6604              		.loc 19 1233 5 view .LVU1728
 6605 0076 28B1     		cbz	r0, .L379
1235:Veno-Echo.cpp ****         if (buttonstate == 3)
 6606              		.loc 19 1235 9 is_stmt 1 view .LVU1729
1235:Veno-Echo.cpp ****         if (buttonstate == 3)
 6607              		.loc 19 1235 21 is_stmt 0 view .LVU1730
 6608 0078 2368     		ldr	r3, [r4]
 6609 007a 0133     		adds	r3, r3, #1
1236:Veno-Echo.cpp ****         {
 6610              		.loc 19 1236 9 view .LVU1731
 6611 007c 032B     		cmp	r3, #3
1235:Veno-Echo.cpp ****         if (buttonstate == 3)
 6612              		.loc 19 1235 21 view .LVU1732
 6613 007e 2360     		str	r3, [r4]
1236:Veno-Echo.cpp ****         {
 6614              		.loc 19 1236 9 is_stmt 1 view .LVU1733
 6615 0080 00F08780 		beq	.L414
 6616              	.L379:
1242:Veno-Echo.cpp ****     {
 6617              		.loc 19 1242 5 view .LVU1734
1242:Veno-Echo.cpp ****     {
 6618              		.loc 19 1242 29 is_stmt 0 view .LVU1735
 6619 0084 4D48     		ldr	r0, .L420+4
 6620 0086 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 6621              	.LVL460:
1242:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 220


 6622              		.loc 19 1242 5 view .LVU1736
 6623 008a 10B1     		cbz	r0, .L381
1244:Veno-Echo.cpp ****     }
 6624              		.loc 19 1244 9 is_stmt 1 view .LVU1737
1244:Veno-Echo.cpp ****     }
 6625              		.loc 19 1244 21 is_stmt 0 view .LVU1738
 6626 008c 2368     		ldr	r3, [r4]
 6627 008e 013B     		subs	r3, r3, #1
 6628 0090 2360     		str	r3, [r4]
 6629              	.L381:
1247:Veno-Echo.cpp ****     {
 6630              		.loc 19 1247 5 is_stmt 1 view .LVU1739
1247:Veno-Echo.cpp ****     {
 6631              		.loc 19 1247 30 is_stmt 0 view .LVU1740
 6632 0092 4E48     		ldr	r0, .L420+20
 6633 0094 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 6634              	.LVL461:
1247:Veno-Echo.cpp ****     {
 6635              		.loc 19 1247 5 view .LVU1741
 6636 0098 0028     		cmp	r0, #0
 6637 009a 55D1     		bne	.L382
 6638 009c 504D     		ldr	r5, .L420+40
 6639              	.L383:
1271:Veno-Echo.cpp ****     {
 6640              		.loc 19 1271 5 is_stmt 1 view .LVU1742
1271:Veno-Echo.cpp ****     {
 6641              		.loc 19 1271 31 is_stmt 0 view .LVU1743
 6642 009e 4B48     		ldr	r0, .L420+20
 6643 00a0 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 6644              	.LVL462:
1271:Veno-Echo.cpp ****     {
 6645              		.loc 19 1271 5 view .LVU1744
 6646 00a4 38B1     		cbz	r0, .L387
1273:Veno-Echo.cpp ****         buttonstate -= 1;
 6647              		.loc 19 1273 9 is_stmt 1 view .LVU1745
1274:Veno-Echo.cpp ****         mute = false;
 6648              		.loc 19 1274 21 is_stmt 0 view .LVU1746
 6649 00a6 2368     		ldr	r3, [r4]
1273:Veno-Echo.cpp ****         buttonstate -= 1;
 6650              		.loc 19 1273 15 view .LVU1747
 6651 00a8 0022     		movs	r2, #0
 6652 00aa 4E48     		ldr	r0, .L420+44
1274:Veno-Echo.cpp ****         mute = false;
 6653              		.loc 19 1274 21 view .LVU1748
 6654 00ac 013B     		subs	r3, r3, #1
1275:Veno-Echo.cpp ****     }
 6655              		.loc 19 1275 14 view .LVU1749
 6656 00ae 4E49     		ldr	r1, .L420+48
1273:Veno-Echo.cpp ****         buttonstate -= 1;
 6657              		.loc 19 1273 15 view .LVU1750
 6658 00b0 0270     		strb	r2, [r0]
1274:Veno-Echo.cpp ****         mute = false;
 6659              		.loc 19 1274 9 is_stmt 1 view .LVU1751
1274:Veno-Echo.cpp ****         mute = false;
 6660              		.loc 19 1274 21 is_stmt 0 view .LVU1752
 6661 00b2 2360     		str	r3, [r4]
1275:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 221


 6662              		.loc 19 1275 9 is_stmt 1 view .LVU1753
1275:Veno-Echo.cpp ****     }
 6663              		.loc 19 1275 14 is_stmt 0 view .LVU1754
 6664 00b4 0A70     		strb	r2, [r1]
 6665              	.L387:
1278:Veno-Echo.cpp ****     {
 6666              		.loc 19 1278 5 is_stmt 1 view .LVU1755
1278:Veno-Echo.cpp ****     {
 6667              		.loc 19 1278 28 is_stmt 0 view .LVU1756
 6668 00b6 4548     		ldr	r0, .L420+20
 6669 00b8 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 6670              	.LVL463:
1278:Veno-Echo.cpp ****     {
 6671              		.loc 19 1278 5 view .LVU1757
 6672 00bc A0B9     		cbnz	r0, .L415
 6673              	.L389:
1286:Veno-Echo.cpp ****     {
 6674              		.loc 19 1286 5 is_stmt 1 view .LVU1758
 6675 00be 2368     		ldr	r3, [r4]
 6676 00c0 032B     		cmp	r3, #3
 6677 00c2 1ED0     		beq	.L416
 6678              	.L392:
1308:Veno-Echo.cpp **** 
 6679              		.loc 19 1308 5 view .LVU1759
1308:Veno-Echo.cpp **** 
 6680              		.loc 19 1308 31 is_stmt 0 view .LVU1760
 6681 00c4 434B     		ldr	r3, .L420+28
 6682 00c6 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 6683              	.LBB1300:
 6684              	.LBI1300:
  70:../libdaisy/src/hid/switch.h **** 
  71:../libdaisy/src/hid/switch.h ****     /** \return true if the button was just released */
  72:../libdaisy/src/hid/switch.h ****     inline bool FallingEdge() const { return state_ == 0x80; }
  73:../libdaisy/src/hid/switch.h **** 
  74:../libdaisy/src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  75:../libdaisy/src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 6685              		.loc 1 75 17 is_stmt 1 view .LVU1761
 6686              	.LVL464:
 6687              	.LBB1301:
 6688              		.loc 1 75 35 view .LVU1762
 6689              		.loc 1 75 52 is_stmt 0 view .LVU1763
 6690 00c8 A3F1FF02 		sub	r2, r3, #255
 6691              	.LBE1301:
 6692              	.LBE1300:
1310:Veno-Echo.cpp ****     {
 6693              		.loc 19 1310 5 view .LVU1764
 6694 00cc 7F2B     		cmp	r3, #127
 6695              	.LBB1303:
 6696              	.LBB1302:
 6697              		.loc 1 75 52 view .LVU1765
 6698 00ce B2FA82F2 		clz	r2, r2
 6699 00d2 4FEA5212 		lsr	r2, r2, #5
 6700 00d6 2A70     		strb	r2, [r5]
 6701              	.LBE1302:
 6702              	.LBE1303:
1310:Veno-Echo.cpp ****     {
 6703              		.loc 19 1310 5 is_stmt 1 view .LVU1766
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 222


 6704              	.LVL465:
  69:../libdaisy/src/hid/switch.h **** 
 6705              		.loc 1 69 38 view .LVU1767
1310:Veno-Echo.cpp ****     {
 6706              		.loc 19 1310 5 is_stmt 0 view .LVU1768
 6707 00d8 00D0     		beq	.L417
1319:Veno-Echo.cpp **** 
 6708              		.loc 19 1319 1 view .LVU1769
 6709 00da F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6710              	.L417:
1315:Veno-Echo.cpp ****         delayR_flag = true;
 6711              		.loc 19 1315 9 is_stmt 1 view .LVU1770
1315:Veno-Echo.cpp ****         delayR_flag = true;
 6712              		.loc 19 1315 21 is_stmt 0 view .LVU1771
 6713 00dc 0123     		movs	r3, #1
 6714 00de 4349     		ldr	r1, .L420+52
1316:Veno-Echo.cpp ****     }
 6715              		.loc 19 1316 21 view .LVU1772
 6716 00e0 434A     		ldr	r2, .L420+56
1315:Veno-Echo.cpp ****         delayR_flag = true;
 6717              		.loc 19 1315 21 view .LVU1773
 6718 00e2 0B70     		strb	r3, [r1]
1316:Veno-Echo.cpp ****     }
 6719              		.loc 19 1316 9 is_stmt 1 view .LVU1774
1316:Veno-Echo.cpp ****     }
 6720              		.loc 19 1316 21 is_stmt 0 view .LVU1775
 6721 00e4 1370     		strb	r3, [r2]
1319:Veno-Echo.cpp **** 
 6722              		.loc 19 1319 1 view .LVU1776
 6723 00e6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6724              	.LVL466:
 6725              	.L415:
1280:Veno-Echo.cpp ****         {
 6726              		.loc 19 1280 9 is_stmt 1 view .LVU1777
1280:Veno-Echo.cpp ****         {
 6727              		.loc 19 1280 29 is_stmt 0 view .LVU1778
 6728 00e8 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 6729              	.LVL467:
1280:Veno-Echo.cpp ****         {
 6730              		.loc 19 1280 32 view .LVU1779
 6731 00ec 414B     		ldr	r3, .L420+60
 6732 00ee 1B68     		ldr	r3, [r3]
 6733 00f0 C01A     		subs	r0, r0, r3
1280:Veno-Echo.cpp ****         {
 6734              		.loc 19 1280 9 view .LVU1780
 6735 00f2 FA28     		cmp	r0, #250
 6736 00f4 E3D9     		bls	.L389
1282:Veno-Echo.cpp ****         } 
 6737              		.loc 19 1282 13 is_stmt 1 view .LVU1781
1282:Veno-Echo.cpp ****         } 
 6738              		.loc 19 1282 19 is_stmt 0 view .LVU1782
 6739 00f6 3B4B     		ldr	r3, .L420+44
 6740 00f8 0122     		movs	r2, #1
 6741 00fa 1A70     		strb	r2, [r3]
1286:Veno-Echo.cpp ****     {
 6742              		.loc 19 1286 5 is_stmt 1 view .LVU1783
 6743 00fc 2368     		ldr	r3, [r4]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 223


 6744 00fe 032B     		cmp	r3, #3
 6745 0100 E0D1     		bne	.L392
 6746              	.L416:
1295:Veno-Echo.cpp ****             {
 6747              		.loc 19 1295 13 view .LVU1784
1295:Veno-Echo.cpp ****             {
 6748              		.loc 19 1295 36 is_stmt 0 view .LVU1785
 6749 0102 3D4F     		ldr	r7, .L420+64
1295:Veno-Echo.cpp ****             {
 6750              		.loc 19 1295 33 view .LVU1786
 6751 0104 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 6752              	.LVL468:
1295:Veno-Echo.cpp ****             {
 6753              		.loc 19 1295 13 view .LVU1787
 6754 0108 40F6B833 		movw	r3, #3000
1295:Veno-Echo.cpp ****             {
 6755              		.loc 19 1295 36 view .LVU1788
 6756 010c 3A68     		ldr	r2, [r7]
 6757 010e 801A     		subs	r0, r0, r2
1295:Veno-Echo.cpp ****             {
 6758              		.loc 19 1295 13 view .LVU1789
 6759 0110 9842     		cmp	r0, r3
 6760 0112 D7D9     		bls	.L392
1297:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 6761              		.loc 19 1297 17 is_stmt 1 view .LVU1790
1297:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 6762              		.loc 19 1297 32 is_stmt 0 view .LVU1791
 6763 0114 2848     		ldr	r0, .L420
 6764 0116 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 6765              	.LVL469:
1298:Veno-Echo.cpp ****                 ResetAllLEDs();
 6766              		.loc 19 1298 17 is_stmt 1 view .LVU1792
1298:Veno-Echo.cpp ****                 ResetAllLEDs();
 6767              		.loc 19 1298 32 is_stmt 0 view .LVU1793
 6768 011a 2848     		ldr	r0, .L420+4
 6769 011c FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 6770              	.LVL470:
1299:Veno-Echo.cpp ****                 //don't let reset or shift update
 6771              		.loc 19 1299 17 is_stmt 1 view .LVU1794
1303:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 6772              		.loc 19 1303 29 is_stmt 0 view .LVU1795
 6773 0120 364E     		ldr	r6, .L420+68
1299:Veno-Echo.cpp ****                 //don't let reset or shift update
 6774              		.loc 19 1299 29 view .LVU1796
 6775 0122 FFF7FEFF 		bl	_Z12ResetAllLEDsv
 6776              	.LVL471:
1301:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 6777              		.loc 19 1301 17 is_stmt 1 view .LVU1797
1301:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 6778              		.loc 19 1301 23 is_stmt 0 view .LVU1798
 6779 0126 2F4B     		ldr	r3, .L420+44
 6780 0128 0022     		movs	r2, #0
1302:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 6781              		.loc 19 1302 30 view .LVU1799
 6782 012a 3448     		ldr	r0, .L420+68
1303:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 6783              		.loc 19 1303 29 view .LVU1800
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 224


 6784 012c 344C     		ldr	r4, .L420+72
1301:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 6785              		.loc 19 1301 23 view .LVU1801
 6786 012e 1A70     		strb	r2, [r3]
1302:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 6787              		.loc 19 1302 17 is_stmt 1 view .LVU1802
1302:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 6788              		.loc 19 1302 30 is_stmt 0 view .LVU1803
 6789 0130 FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 6790              	.LVL472:
1303:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 6791              		.loc 19 1303 17 is_stmt 1 view .LVU1804
1303:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 6792              		.loc 19 1303 29 is_stmt 0 view .LVU1805
 6793 0134 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 6794 0136 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6795 0138 96E80F00 		ldm	r6, {r0, r1, r2, r3}
 6796 013c 84E80F00 		stm	r4, {r0, r1, r2, r3}
1304:Veno-Echo.cpp ****             }
 6797              		.loc 19 1304 17 is_stmt 1 view .LVU1806
1304:Veno-Echo.cpp ****             }
 6798              		.loc 19 1304 43 is_stmt 0 view .LVU1807
 6799 0140 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 6800              	.LVL473:
1304:Veno-Echo.cpp ****             }
 6801              		.loc 19 1304 27 view .LVU1808
 6802 0144 3860     		str	r0, [r7]
 6803 0146 BDE7     		b	.L392
 6804              	.L382:
1249:Veno-Echo.cpp ****         {
 6805              		.loc 19 1249 9 is_stmt 1 view .LVU1809
1249:Veno-Echo.cpp ****         {
 6806              		.loc 19 1249 25 is_stmt 0 view .LVU1810
 6807 0148 2E48     		ldr	r0, .L420+76
 6808 014a FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 6809              	.LVL474:
1249:Veno-Echo.cpp ****         {
 6810              		.loc 19 1249 9 view .LVU1811
 6811 014e 60BB     		cbnz	r0, .L418
 6812              	.L384:
1253:Veno-Echo.cpp ****         
 6813              		.loc 19 1253 9 is_stmt 1 view .LVU1812
1255:Veno-Echo.cpp ****         {
 6814              		.loc 19 1255 9 is_stmt 0 view .LVU1813
 6815 0150 234D     		ldr	r5, .L420+40
1253:Veno-Echo.cpp ****         
 6816              		.loc 19 1253 33 view .LVU1814
 6817 0152 2D48     		ldr	r0, .L420+80
 6818 0154 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 6819              	.LVL475:
1255:Veno-Echo.cpp ****         {
 6820              		.loc 19 1255 9 is_stmt 1 view .LVU1815
 6821 0158 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 6822 015a FBB9     		cbnz	r3, .L419
 6823              	.L385:
1261:Veno-Echo.cpp ****         buttonstate += 1;
 6824              		.loc 19 1261 9 view .LVU1816
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 225


1261:Veno-Echo.cpp ****         buttonstate += 1;
 6825              		.loc 19 1261 35 is_stmt 0 view .LVU1817
 6826 015c FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 6827              	.LVL476:
1262:Veno-Echo.cpp ****         
 6828              		.loc 19 1262 21 view .LVU1818
 6829 0160 2368     		ldr	r3, [r4]
1261:Veno-Echo.cpp ****         buttonstate += 1;
 6830              		.loc 19 1261 19 view .LVU1819
 6831 0162 244A     		ldr	r2, .L420+60
1262:Veno-Echo.cpp ****         
 6832              		.loc 19 1262 21 view .LVU1820
 6833 0164 0133     		adds	r3, r3, #1
1261:Veno-Echo.cpp ****         buttonstate += 1;
 6834              		.loc 19 1261 19 view .LVU1821
 6835 0166 1060     		str	r0, [r2]
1262:Veno-Echo.cpp ****         
 6836              		.loc 19 1262 9 is_stmt 1 view .LVU1822
1264:Veno-Echo.cpp ****         {
 6837              		.loc 19 1264 9 is_stmt 0 view .LVU1823
 6838 0168 032B     		cmp	r3, #3
1262:Veno-Echo.cpp ****         
 6839              		.loc 19 1262 21 view .LVU1824
 6840 016a 2360     		str	r3, [r4]
1264:Veno-Echo.cpp ****         {
 6841              		.loc 19 1264 9 is_stmt 1 view .LVU1825
 6842 016c 97D1     		bne	.L383
1266:Veno-Echo.cpp ****         }
 6843              		.loc 19 1266 13 view .LVU1826
1266:Veno-Echo.cpp ****         }
 6844              		.loc 19 1266 39 is_stmt 0 view .LVU1827
 6845 016e FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 6846              	.LVL477:
1266:Veno-Echo.cpp ****         }
 6847              		.loc 19 1266 23 view .LVU1828
 6848 0172 214B     		ldr	r3, .L420+64
 6849 0174 1860     		str	r0, [r3]
 6850 0176 92E7     		b	.L383
 6851              	.L412:
1213:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 6852              		.loc 19 1213 9 is_stmt 1 view .LVU1829
1213:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 6853              		.loc 19 1213 24 is_stmt 0 view .LVU1830
 6854 0178 1048     		ldr	r0, .L420+4
 6855 017a FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 6856              	.LVL478:
 6857 017e 65E7     		b	.L373
 6858              	.LVL479:
 6859              	.L411:
1207:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 6860              		.loc 19 1207 9 is_stmt 1 view .LVU1831
1207:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 6861              		.loc 19 1207 24 is_stmt 0 view .LVU1832
 6862 0180 0D48     		ldr	r0, .L420
 6863 0182 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 6864              	.LVL480:
 6865 0186 5CE7     		b	.L372
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 226


 6866              	.LVL481:
 6867              	.L413:
1224:Veno-Echo.cpp ****         }
 6868              		.loc 19 1224 13 is_stmt 1 view .LVU1833
1224:Veno-Echo.cpp ****         }
 6869              		.loc 19 1224 39 is_stmt 0 view .LVU1834
 6870 0188 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 6871              	.LVL482:
1224:Veno-Echo.cpp ****         }
 6872              		.loc 19 1224 23 view .LVU1835
 6873 018c 1A4B     		ldr	r3, .L420+64
 6874 018e 1860     		str	r0, [r3]
 6875 0190 67E7     		b	.L375
 6876              	.L414:
1238:Veno-Echo.cpp ****         }
 6877              		.loc 19 1238 13 is_stmt 1 view .LVU1836
1238:Veno-Echo.cpp ****         }
 6878              		.loc 19 1238 39 is_stmt 0 view .LVU1837
 6879 0192 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 6880              	.LVL483:
1238:Veno-Echo.cpp ****         }
 6881              		.loc 19 1238 23 view .LVU1838
 6882 0196 184B     		ldr	r3, .L420+64
 6883 0198 1860     		str	r0, [r3]
 6884 019a 73E7     		b	.L379
 6885              	.L419:
1257:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
 6886              		.loc 19 1257 13 is_stmt 1 view .LVU1839
1257:Veno-Echo.cpp ****             delayR.tempoled.resetPhase();
 6887              		.loc 19 1257 39 is_stmt 0 view .LVU1840
 6888 019c 1B48     		ldr	r0, .L420+84
 6889 019e FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 6890              	.LVL484:
1258:Veno-Echo.cpp ****         }
 6891              		.loc 19 1258 13 is_stmt 1 view .LVU1841
1258:Veno-Echo.cpp ****         }
 6892              		.loc 19 1258 39 is_stmt 0 view .LVU1842
 6893 01a2 1B48     		ldr	r0, .L420+88
 6894 01a4 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 6895              	.LVL485:
 6896 01a8 D8E7     		b	.L385
 6897              	.L418:
1251:Veno-Echo.cpp ****         }
 6898              		.loc 19 1251 13 is_stmt 1 view .LVU1843
1251:Veno-Echo.cpp ****         }
 6899              		.loc 19 1251 35 is_stmt 0 view .LVU1844
 6900 01aa 1648     		ldr	r0, .L420+76
 6901 01ac FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 6902              	.LVL486:
 6903 01b0 1548     		ldr	r0, .L420+80
 6904 01b2 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 6905              	.LVL487:
 6906 01b6 CBE7     		b	.L384
 6907              	.L421:
 6908              		.align	2
 6909              	.L420:
 6910 01b8 00000000 		.word	.LANCHOR60
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 227


 6911 01bc 00000000 		.word	.LANCHOR61
 6912 01c0 00000000 		.word	.LANCHOR58
 6913 01c4 00000000 		.word	.LANCHOR63
 6914 01c8 00000000 		.word	.LANCHOR59
 6915 01cc 00000000 		.word	.LANCHOR62
 6916 01d0 00000000 		.word	.LANCHOR64
 6917 01d4 00000000 		.word	.LANCHOR65
 6918 01d8 00000000 		.word	.LANCHOR44
 6919 01dc 00000000 		.word	.LANCHOR75
 6920 01e0 00000000 		.word	.LANCHOR48
 6921 01e4 00000000 		.word	.LANCHOR8
 6922 01e8 00000000 		.word	.LANCHOR78
 6923 01ec 00000000 		.word	.LANCHOR51
 6924 01f0 00000000 		.word	.LANCHOR52
 6925 01f4 00000000 		.word	.LANCHOR77
 6926 01f8 00000000 		.word	.LANCHOR76
 6927 01fc 00000000 		.word	.LANCHOR74
 6928 0200 00000000 		.word	.LANCHOR16
 6929 0204 00000000 		.word	.LANCHOR47
 6930 0208 00000000 		.word	.LANCHOR46
 6931 020c 04000000 		.word	.LANCHOR0+4
 6932 0210 04000000 		.word	.LANCHOR1+4
 6933              		.cfi_endproc
 6934              	.LFE4308:
 6936              		.section	.text._ZL13AudioCallbackPfS_j,"ax",%progbits
 6937              		.align	1
 6938              		.p2align 2,,3
 6939              		.syntax unified
 6940              		.thumb
 6941              		.thumb_func
 6942              		.fpu fpv5-d16
 6944              	_ZL13AudioCallbackPfS_j:
 6945              	.LVL488:
 6946              	.LFB4288:
 240:Veno-Echo.cpp **** 
 6947              		.loc 19 240 1 is_stmt 1 view -0
 6948              		.cfi_startproc
 6949              		@ args = 0, pretend = 0, frame = 72
 6950              		@ frame_needed = 0, uses_anonymous_args = 0
 251:Veno-Echo.cpp **** 
 6951              		.loc 19 251 1 view .LVU1846
 269:Veno-Echo.cpp **** 
 6952              		.loc 19 269 1 view .LVU1847
 269:Veno-Echo.cpp **** 
 6953              		.loc 19 269 9 is_stmt 0 view .LVU1848
 6954 0000 DFF894C0 		ldr	ip, .L539+8
 269:Veno-Echo.cpp **** 
 6955              		.loc 19 269 20 view .LVU1849
 6956 0004 DCF80030 		ldr	r3, [ip]
 240:Veno-Echo.cpp **** 
 6957              		.loc 19 240 1 view .LVU1850
 6958 0008 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6959              		.cfi_def_cfa_offset 36
 6960              		.cfi_offset 4, -36
 6961              		.cfi_offset 5, -32
 6962              		.cfi_offset 6, -28
 6963              		.cfi_offset 7, -24
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 228


 6964              		.cfi_offset 8, -20
 6965              		.cfi_offset 9, -16
 6966              		.cfi_offset 10, -12
 6967              		.cfi_offset 11, -8
 6968              		.cfi_offset 14, -4
 269:Veno-Echo.cpp **** 
 6969              		.loc 19 269 20 view .LVU1851
 6970 000c 0133     		adds	r3, r3, #1
 269:Veno-Echo.cpp **** 
 6971              		.loc 19 269 25 view .LVU1852
 6972 000e 204C     		ldr	r4, .L539
 240:Veno-Echo.cpp **** 
 6973              		.loc 19 240 1 view .LVU1853
 6974 0010 0646     		mov	r6, r0
 6975 0012 1546     		mov	r5, r2
 269:Veno-Echo.cpp **** 
 6976              		.loc 19 269 25 view .LVU1854
 6977 0014 84FB0302 		smull	r0, r2, r4, r3
 6978              	.LVL489:
 269:Veno-Echo.cpp **** 
 6979              		.loc 19 269 25 view .LVU1855
 6980 0018 DC17     		asrs	r4, r3, #31
 240:Veno-Echo.cpp **** 
 6981              		.loc 19 240 1 view .LVU1856
 6982 001a 0F46     		mov	r7, r1
 6983              	.LBB1393:
 6984              	.LBB1394:
 6985              	.LBB1395:
 6986              		.file 23 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** /** @file bits/atomic_base.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  Do not attempt to use it directly. @headername{atomic}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 229


  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ATOMIC_BASE_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ATOMIC_BASE_H 1
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <stdint.h>
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/atomic_lockfree_defines.h>
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** namespace std _GLIBCXX_VISIBILITY(default)
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** {
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @defgroup atomics Atomics
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * Components for performing atomic operations.
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @{
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    */
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Enumeration for memory_order
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __cplusplus > 201703L
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum class memory_order : int
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       relaxed,
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       consume,
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acquire,
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       release,
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acq_rel,
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       seq_cst
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_relaxed = memory_order::relaxed;
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_consume = memory_order::consume;
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acquire = memory_order::acquire;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_release = memory_order::release;
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acq_rel = memory_order::acq_rel;
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_seq_cst = memory_order::seq_cst;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   typedef enum memory_order
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_relaxed,
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_consume,
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acquire,
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_release,
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acq_rel,
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_seq_cst
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     } memory_order;
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum __memory_order_modifier
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 230


  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_mask          = 0x0ffff,
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_modifier_mask = 0xffff0000,
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_acquire   = 0x10000,
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_release   = 0x20000
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator|(memory_order __m, __memory_order_modifier __mod)
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) | int(__mod));
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator&(memory_order __m, __memory_order_modifier __mod)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) & int(__mod));
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Drop release ordering as per [atomics.types.operations.req]/21
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order2(memory_order __m) noexcept
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return __m == memory_order_acq_rel ? memory_order_acquire
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __m == memory_order_release ? memory_order_relaxed : __m;
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order(memory_order __m) noexcept
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(__cmpexch_failure_order2(__m & __memory_order_mask)
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       | __memory_order_modifier(__m & __memory_order_modifier_mask));
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_thread_fence(memory_order __m) noexcept
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_thread_fence(int(__m)); }
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_signal_fence(memory_order __m) noexcept
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_signal_fence(int(__m)); }
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// kill_dependency
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     inline _Tp
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     kill_dependency(_Tp __y) noexcept
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _Tp __ret(__y);
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __ret;
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Base types for atomics.
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _IntTp>
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base;
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_VAR_INIT(_VI) { _VI }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 231


 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic;
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic<_Tp*>;
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     /* The target's "set" value for test-and-set may not be exactly 1.  */
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __GCC_ATOMIC_TEST_AND_SET_TRUEVAL == 1
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef bool __atomic_flag_data_type;
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef unsigned char __atomic_flag_data_type;
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  @brief Base type for atomic_flag.
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  Base type is POD with data, allowing atomic_flag to derive from
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  it and meet the standard layout type requirement. In addition to
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  compatibility with a C interface, this allows different
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  implementations of atomic_flag to use the same atomic operation
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  functions, via a standard conversion to the __atomic_flag_base
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  argument.
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   */
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_BEGIN_EXTERN_C
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct __atomic_flag_base
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     __atomic_flag_data_type _M_i;
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_END_EXTERN_C
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_FLAG_INIT { 0 }
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// atomic_flag
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct atomic_flag : public __atomic_flag_base
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag() noexcept = default;
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     ~atomic_flag() noexcept = default;
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag(const atomic_flag&) = delete;
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) = delete;
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) volatile = delete;
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     // Conversion to ATOMIC_FLAG_INIT.
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     constexpr atomic_flag(bool __i) noexcept
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __atomic_flag_base{ _S_init(__i) }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { }
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) noexcept
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) volatile noexcept
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 232


 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) noexcept
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) volatile noexcept
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   private:
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     static constexpr __atomic_flag_data_type
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _S_init(bool __i)
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { return __i ? __GCC_ATOMIC_TEST_AND_SET_TRUEVAL : 0; }
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Base class for atomic integrals.
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // For each of the integral types, define atomic_[integral type] struct
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_bool     bool
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char     char
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_schar    signed char
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uchar    unsigned char
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_short    short
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ushort   unsigned short
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_int      int
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uint     unsigned int
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_long     long
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ulong    unsigned long
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_llong    long long
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ullong   unsigned long long
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char8_t  char8_t
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char16_t char16_t
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char32_t char32_t
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_wchar_t  wchar_t
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // NB: Assuming _ITp is an integral scalar type that is 1, 2, 4, or
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // 8 bytes, since that is what GCC built-in functions for atomic
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // memory access expect.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 233


 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _ITp>
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using value_type = _ITp;
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using difference_type = value_type;
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     private:
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       typedef _ITp 	__int_type;
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       static constexpr int _S_alignment =
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	sizeof(_ITp) > alignof(_ITp) ? sizeof(_ITp) : alignof(_ITp);
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       alignas(_S_alignment) __int_type _M_i;
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     public:
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base() noexcept = default;
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       ~__atomic_base() noexcept = default;
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base(const __atomic_base&) = delete;
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) = delete;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) volatile = delete;
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       // Requires __int_type convertible to _M_i.
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       constexpr __atomic_base(__int_type __i) noexcept : _M_i (__i) { }
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const noexcept
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const volatile noexcept
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) noexcept
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) volatile noexcept
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) noexcept
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) volatile noexcept
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) noexcept
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 234


 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) volatile noexcept
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() noexcept
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() volatile noexcept
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() noexcept
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() volatile noexcept
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) noexcept
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) volatile noexcept
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) noexcept
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) volatile noexcept
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) noexcept
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) volatile noexcept
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) noexcept
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) volatile noexcept
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) noexcept
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) volatile noexcept
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 235


 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const noexcept
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const volatile noexcept
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i, memory_order __m = memory_order_seq_cst) noexcept
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i,
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    memory_order __m = memory_order_seq_cst) volatile noexcept
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE __int_type
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       load(memory_order __m = memory_order_seq_cst) const noexcept
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_release);
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_load_n(&_M_i, int(__m));
 6987              		.loc 23 419 24 view .LVU1857
 6988 001c 1D49     		ldr	r1, .L539+4
 6989              	.LVL490:
 6990              		.loc 23 419 24 view .LVU1858
 6991              	.LBE1395:
 6992              	.LBE1394:
 6993              	.LBE1393:
 269:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 236


 6994              		.loc 19 269 25 view .LVU1859
 6995 001e 1A44     		add	r2, r2, r3
 6996 0020 C4EBE204 		rsb	r4, r4, r2, asr #3
 6997 0024 C4EB0414 		rsb	r4, r4, r4, lsl #4
 6998 0028 1B1B     		subs	r3, r3, r4
 240:Veno-Echo.cpp **** 
 6999              		.loc 19 240 1 view .LVU1860
 7000 002a 2DED0E8B 		vpush.64	{d8, d9, d10, d11, d12, d13, d14}
 7001              		.cfi_def_cfa_offset 92
 7002              		.cfi_offset 80, -92
 7003              		.cfi_offset 81, -88
 7004              		.cfi_offset 82, -84
 7005              		.cfi_offset 83, -80
 7006              		.cfi_offset 84, -76
 7007              		.cfi_offset 85, -72
 7008              		.cfi_offset 86, -68
 7009              		.cfi_offset 87, -64
 7010              		.cfi_offset 88, -60
 7011              		.cfi_offset 89, -56
 7012              		.cfi_offset 90, -52
 7013              		.cfi_offset 91, -48
 7014              		.cfi_offset 92, -44
 7015              		.cfi_offset 93, -40
 269:Veno-Echo.cpp **** 
 7016              		.loc 19 269 9 view .LVU1861
 7017 002e CCF80030 		str	r3, [ip]
 271:Veno-Echo.cpp **** {
 7018              		.loc 19 271 1 is_stmt 1 view .LVU1862
 7019              	.LVL491:
 7020              	.LBB1400:
 7021              	.LBI1393:
 7022              		.file 24 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** /** @file include/atomic
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 237


  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  *  This is a Standard C++ Library header.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  */
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Based on "C++ Atomic Types and Operations" by Hans Boehm and Lawrence Crowl.
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2427.html
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #ifndef _GLIBCXX_ATOMIC
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #define _GLIBCXX_ATOMIC 1
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #pragma GCC system_header
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus < 201103L
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # include <bits/c++0x_warning.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #else
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/atomic_base.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/move.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** namespace std _GLIBCXX_VISIBILITY(default)
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** {
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /**
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @addtogroup atomics
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @{
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    */
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus >= 201703L
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # define __cpp_lib_atomic_is_always_lock_free 201603
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #endif
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<typename _Tp>
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     struct atomic;
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /// atomic<bool>
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   // NB: No operators or fetch-operations for this type.
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<>
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   struct atomic<bool>
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   {
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     using value_type = bool;
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   private:
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     __atomic_base<bool>	_M_base;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   public:
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic() noexcept = default;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     ~atomic() noexcept = default;
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic(const atomic&) = delete;
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) = delete;
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) volatile = delete;
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     constexpr atomic(bool __i) noexcept : _M_base(__i) { }
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) noexcept
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 238


  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) volatile noexcept
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator bool() const noexcept
 7023              		.loc 24 87 5 view .LVU1863
 7024              	.LBE1400:
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.load(); }
 7025              		.loc 24 88 7 view .LVU1864
 7026              	.LBB1401:
 7027              	.LBB1398:
 7028              	.LBI1394:
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 7029              		.loc 23 413 7 view .LVU1865
 7030              	.LBB1396:
 7031              		.loc 23 419 24 is_stmt 0 view .LVU1866
 7032 0032 BFF35B8F 		dmb	ish
 7033 0036 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 7034              	.LBE1396:
 7035              	.LBE1398:
 7036              	.LBE1401:
 240:Veno-Echo.cpp **** 
 7037              		.loc 19 240 1 view .LVU1867
 7038 0038 93B0     		sub	sp, sp, #76
 7039              		.cfi_def_cfa_offset 168
 7040              	.LBB1402:
 7041              	.LBB1399:
 7042              	.LBB1397:
 7043              		.loc 23 419 24 view .LVU1868
 7044 003a BFF35B8F 		dmb	ish
 7045              	.LBE1397:
 7046              	.LBE1399:
 7047              	.LBE1402:
 271:Veno-Echo.cpp **** {
 7048              		.loc 19 271 1 view .LVU1869
 7049 003e B3B9     		cbnz	r3, .L423
 284:Veno-Echo.cpp ****         {
 7050              		.loc 19 284 9 is_stmt 1 view .LVU1870
 7051 0040 DCF80030 		ldr	r3, [ip]
 7052 0044 0E2B     		cmp	r3, #14
 7053 0046 12D8     		bhi	.L423
 7054 0048 DFE813F0 		tbh	[pc, r3, lsl #1]
 7055              	.L425:
 7056 004c 2606     		.2byte	(.L439-.L425)/2
 7057 004e 1D06     		.2byte	(.L438-.L425)/2
 7058 0050 1906     		.2byte	(.L437-.L425)/2
 7059 0052 1006     		.2byte	(.L436-.L425)/2
 7060 0054 0C06     		.2byte	(.L435-.L425)/2
 7061 0056 0306     		.2byte	(.L434-.L425)/2
 7062 0058 FF05     		.2byte	(.L433-.L425)/2
 7063 005a F605     		.2byte	(.L432-.L425)/2
 7064 005c F205     		.2byte	(.L431-.L425)/2
 7065 005e E905     		.2byte	(.L430-.L425)/2
 7066 0060 E505     		.2byte	(.L429-.L425)/2
 7067 0062 DC05     		.2byte	(.L428-.L425)/2
 7068 0064 D805     		.2byte	(.L427-.L425)/2
 7069 0066 0F00     		.2byte	(.L426-.L425)/2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 239


 7070 0068 D405     		.2byte	(.L424-.L425)/2
 7071              		.p2align 1
 7072              	.L426:
 339:Veno-Echo.cpp ****                 Update_crossfeedback();
 7073              		.loc 19 339 13 view .LVU1871
 340:Veno-Echo.cpp ****             break;
 7074              		.loc 19 340 17 view .LVU1872
 340:Veno-Echo.cpp ****             break;
 7075              		.loc 19 340 37 is_stmt 0 view .LVU1873
 7076 006a FFF7FEFF 		bl	_Z20Update_crossfeedbackv
 7077              	.LVL492:
 341:Veno-Echo.cpp **** 
 7078              		.loc 19 341 13 is_stmt 1 view .LVU1874
 7079              	.L423:
 7080              	.LBB1403:
 349:Veno-Echo.cpp ****     {   
 7081              		.loc 19 349 25 discriminator 1 view .LVU1875
 7082 006e 002D     		cmp	r5, #0
 7083 0070 00F0A885 		beq	.L422
 349:Veno-Echo.cpp ****     {   
 7084              		.loc 19 349 25 is_stmt 0 view .LVU1876
 7085 0074 0023     		movs	r3, #0
 7086 0076 013D     		subs	r5, r5, #1
 7087              	.LVL493:
 349:Veno-Echo.cpp ****     {   
 7088              		.loc 19 349 25 view .LVU1877
 7089 0078 DFF82080 		ldr	r8, .L539+12
 7090 007c B346     		mov	fp, r6
 7091 007e 0293     		str	r3, [sp, #8]
 7092 0080 25F00103 		bic	r3, r5, #1
 7093 0084 DFF81890 		ldr	r9, .L539+16
 7094 0088 0097     		str	r7, [sp]
 7095 008a 0593     		str	r3, [sp, #20]
 7096 008c 8FE0     		b	.L495
 7097              	.L540:
 7098 008e 00BF     		.align	2
 7099              	.L539:
 7100 0090 89888888 		.word	-2004318071
 7101 0094 00000000 		.word	.LANCHOR80
 7102 0098 00000000 		.word	.LANCHOR79
 7103 009c 00000000 		.word	.LANCHOR95
 7104 00a0 00000000 		.word	.LANCHOR96
 7105              	.LVL494:
 7106              	.L538:
 7107              	.LBB1404:
 7108              	.LBB1405:
 7109              	.LBB1406:
1601:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 7110              		.loc 19 1601 10 is_stmt 1 view .LVU1878
 7111 00a4 F8EE007A 		vmov.f32	s15, #-2.0e+0
1602:Veno-Echo.cpp ****     else
 7112              		.loc 19 1602 19 is_stmt 0 view .LVU1879
 7113 00a8 B4EE678A 		vcmp.f32	s16, s15
 7114 00ac F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 7115 00b0 48BF     		it	mi
 7116 00b2 B0EE678A 		vmovmi.f32	s16, s15
 7117              	.LVL495:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 240


 7118              	.L477:
1606:Veno-Echo.cpp **** }
 7119              		.loc 19 1606 5 is_stmt 1 view .LVU1880
1606:Veno-Echo.cpp **** }
 7120              		.loc 19 1606 5 is_stmt 0 view .LVU1881
 7121              	.LBE1406:
 7122              	.LBE1405:
 488:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 7123              		.loc 19 488 9 is_stmt 1 view .LVU1882
 488:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 7124              		.loc 19 488 42 is_stmt 0 view .LVU1883
 7125 00b6 D848     		ldr	r0, .L541
 7126 00b8 FFF7FEFF 		bl	_ZN7daisysp7DcBlock7ProcessEf
 7127              	.LVL496:
 488:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 7128              		.loc 19 488 21 view .LVU1884
 7129 00bc 11A9     		add	r1, sp, #68
 7130 00be D748     		ldr	r0, .L541+4
 488:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 7131              		.loc 19 488 42 view .LVU1885
 7132 00c0 8DED110A 		vstr.32	s0, [sp, #68]
 488:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 7133              		.loc 19 488 21 view .LVU1886
 7134 00c4 FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 7135              	.LVL497:
 489:Veno-Echo.cpp **** 
 7136              		.loc 19 489 9 is_stmt 1 view .LVU1887
 489:Veno-Echo.cpp **** 
 7137              		.loc 19 489 42 is_stmt 0 view .LVU1888
 7138 00c8 D548     		ldr	r0, .L541+8
 7139 00ca B0EE480A 		vmov.f32	s0, s16
 7140 00ce FFF7FEFF 		bl	_ZN7daisysp7DcBlock7ProcessEf
 7141              	.LVL498:
 489:Veno-Echo.cpp **** 
 7142              		.loc 19 489 21 view .LVU1889
 7143 00d2 11A9     		add	r1, sp, #68
 7144 00d4 D348     		ldr	r0, .L541+12
 489:Veno-Echo.cpp **** 
 7145              		.loc 19 489 42 view .LVU1890
 7146 00d6 8DED110A 		vstr.32	s0, [sp, #68]
 489:Veno-Echo.cpp **** 
 7147              		.loc 19 489 21 view .LVU1891
 7148 00da FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 7149              	.LVL499:
 492:Veno-Echo.cpp ****         float mixR;
 7150              		.loc 19 492 9 is_stmt 1 view .LVU1892
 493:Veno-Echo.cpp **** 
 7151              		.loc 19 493 9 view .LVU1893
 495:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 7152              		.loc 19 495 9 view .LVU1894
 495:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 7153              		.loc 19 495 53 is_stmt 0 view .LVU1895
 7154 00de 09AA     		add	r2, sp, #36
 7155 00e0 08A9     		add	r1, sp, #32
 7156 00e2 D148     		ldr	r0, .L541+16
 7157 00e4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 7158              	.LVL500:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 241


 496:Veno-Echo.cpp **** 
 7159              		.loc 19 496 53 view .LVU1896
 7160 00e8 08AA     		add	r2, sp, #32
 7161 00ea 09A9     		add	r1, sp, #36
 7162 00ec CE48     		ldr	r0, .L541+16
 495:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 7163              		.loc 19 495 81 view .LVU1897
 7164 00ee 8DED0A0A 		vstr.32	s0, [sp, #40]
 496:Veno-Echo.cpp **** 
 7165              		.loc 19 496 9 is_stmt 1 view .LVU1898
 496:Veno-Echo.cpp **** 
 7166              		.loc 19 496 53 is_stmt 0 view .LVU1899
 7167 00f2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 7168              	.LVL501:
 7169              	.LBB1408:
 7170              	.LBB1409:
1599:Veno-Echo.cpp ****         returnval = limit;
 7171              		.loc 19 1599 5 view .LVU1900
 7172 00f6 B0EE007A 		vmov.f32	s14, #2.0e+0
 7173              	.LBE1409:
 7174              	.LBE1408:
 499:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 7175              		.loc 19 499 38 view .LVU1901
 7176 00fa DDED0A7A 		vldr.32	s15, [sp, #40]
 499:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 7177              		.loc 19 499 9 is_stmt 1 view .LVU1902
 7178              	.LVL502:
 7179              	.LBB1412:
 7180              	.LBI1408:
1596:Veno-Echo.cpp **** {
 7181              		.loc 19 1596 7 view .LVU1903
 7182              	.LBB1410:
1598:Veno-Echo.cpp ****     if (input > limit)
 7183              		.loc 19 1598 5 view .LVU1904
1599:Veno-Echo.cpp ****         returnval = limit;
 7184              		.loc 19 1599 5 view .LVU1905
 7185 00fe F4EEC77A 		vcmpe.f32	s15, s14
 7186 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 7187 0106 00F30285 		bgt	.L507
1601:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 7188              		.loc 19 1601 10 view .LVU1906
 7189 010a B8EE007A 		vmov.f32	s14, #-2.0e+0
1602:Veno-Echo.cpp ****     else
 7190              		.loc 19 1602 19 is_stmt 0 view .LVU1907
 7191 010e F4EE477A 		vcmp.f32	s15, s14
 7192 0112 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 7193 0116 48BF     		it	mi
 7194 0118 F0EE477A 		vmovmi.f32	s15, s14
 7195              	.LVL503:
 7196              	.L479:
1606:Veno-Echo.cpp **** }
 7197              		.loc 19 1606 5 is_stmt 1 view .LVU1908
1606:Veno-Echo.cpp **** }
 7198              		.loc 19 1606 5 is_stmt 0 view .LVU1909
 7199              	.LBE1410:
 7200              	.LBE1412:
 7201              	.LBB1413:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 242


 7202              	.LBB1414:
1599:Veno-Echo.cpp ****         returnval = limit;
 7203              		.loc 19 1599 5 view .LVU1910
 7204 011c B0EE007A 		vmov.f32	s14, #2.0e+0
 7205              	.LBE1414:
 7206              	.LBE1413:
 499:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 7207              		.loc 19 499 27 view .LVU1911
 7208 0120 CDED0A7A 		vstr.32	s15, [sp, #40]
 500:Veno-Echo.cpp **** 
 7209              		.loc 19 500 9 is_stmt 1 view .LVU1912
 7210              	.LVL504:
 7211              	.LBB1418:
 7212              	.LBI1413:
1596:Veno-Echo.cpp **** {
 7213              		.loc 19 1596 7 view .LVU1913
 7214              	.LBB1415:
1598:Veno-Echo.cpp ****     if (input > limit)
 7215              		.loc 19 1598 5 view .LVU1914
1599:Veno-Echo.cpp ****         returnval = limit;
 7216              		.loc 19 1599 5 view .LVU1915
 7217 0124 B4EEC70A 		vcmpe.f32	s0, s14
 7218 0128 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 7219 012c 00F35784 		bgt	.L508
1601:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 7220              		.loc 19 1601 10 view .LVU1916
 7221 0130 B8EE007A 		vmov.f32	s14, #-2.0e+0
 7222              	.LBE1415:
 7223              	.LBE1418:
 7224              	.LBB1419:
 502:Veno-Echo.cpp **** {
 7225              		.loc 19 502 1 is_stmt 0 view .LVU1917
 7226 0134 BD4B     		ldr	r3, .L541+20
 7227 0136 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7228              	.LBE1419:
 7229              	.LBB1441:
 7230              	.LBB1416:
1602:Veno-Echo.cpp ****     else
 7231              		.loc 19 1602 19 view .LVU1918
 7232 0138 B4EE470A 		vcmp.f32	s0, s14
 7233 013c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 7234 0140 48BF     		it	mi
 7235 0142 B0EE470A 		vmovmi.f32	s0, s14
 7236              	.LVL505:
1606:Veno-Echo.cpp **** }
 7237              		.loc 19 1606 5 is_stmt 1 view .LVU1919
1606:Veno-Echo.cpp **** }
 7238              		.loc 19 1606 5 is_stmt 0 view .LVU1920
 7239              	.LBE1416:
 7240              	.LBE1441:
 500:Veno-Echo.cpp **** 
 7241              		.loc 19 500 27 view .LVU1921
 7242 0146 8DED0B0A 		vstr.32	s0, [sp, #44]
 502:Veno-Echo.cpp **** {
 7243              		.loc 19 502 1 is_stmt 1 view .LVU1922
 7244              	.LBB1442:
 7245 014a 002B     		cmp	r3, #0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 243


 7246 014c 40F05084 		bne	.L535
 7247              	.LVL506:
 7248              	.L483:
 502:Veno-Echo.cpp **** {
 7249              		.loc 19 502 1 is_stmt 0 view .LVU1923
 7250              	.LBE1442:
 543:Veno-Echo.cpp ****         {
 7251              		.loc 19 543 9 is_stmt 1 view .LVU1924
 543:Veno-Echo.cpp ****         {
 7252              		.loc 19 543 19 is_stmt 0 view .LVU1925
 7253 0150 B74B     		ldr	r3, .L541+24
 543:Veno-Echo.cpp ****         {
 7254              		.loc 19 543 9 view .LVU1926
 7255 0152 F6EE006A 		vmov.f32	s13, #5.0e-1
 543:Veno-Echo.cpp ****         {
 7256              		.loc 19 543 19 view .LVU1927
 7257 0156 93ED007A 		vldr.32	s14, [r3]
 543:Veno-Echo.cpp ****         {
 7258              		.loc 19 543 9 view .LVU1928
 7259 015a B4EEE67A 		vcmpe.f32	s14, s13
 7260 015e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 7261 0162 40F12A84 		bpl	.L529
 545:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 7262              		.loc 19 545 13 is_stmt 1 view .LVU1929
 545:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 7263              		.loc 19 545 34 is_stmt 0 view .LVU1930
 7264 0166 37EE077A 		vadd.f32	s14, s14, s14
 545:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 7265              		.loc 19 545 18 view .LVU1931
 7266 016a 9BED006A 		vldr.32	s12, [fp]
 546:Veno-Echo.cpp ****         }
 7267              		.loc 19 546 18 view .LVU1932
 7268 016e DBED016A 		vldr.32	s13, [fp, #4]
 545:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 7269              		.loc 19 545 18 view .LVU1933
 7270 0172 A7EE276A 		vfma.f32	s12, s14, s15
 546:Veno-Echo.cpp ****         }
 7271              		.loc 19 546 18 view .LVU1934
 7272 0176 E7EE006A 		vfma.f32	s13, s14, s0
 545:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 7273              		.loc 19 545 18 view .LVU1935
 7274 017a F0EE467A 		vmov.f32	s15, s12
 7275              	.LVL507:
 546:Veno-Echo.cpp ****         }
 7276              		.loc 19 546 13 is_stmt 1 view .LVU1936
 546:Veno-Echo.cpp ****         }
 7277              		.loc 19 546 18 is_stmt 0 view .LVU1937
 7278 017e B0EE660A 		vmov.f32	s0, s13
 7279              	.LVL508:
 7280              	.L489:
 560:Veno-Echo.cpp ****         {
 7281              		.loc 19 560 9 is_stmt 1 view .LVU1938
 7282 0182 AC4B     		ldr	r3, .L541+28
 7283 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7284 0186 002B     		cmp	r3, #0
 7285 0188 00F01084 		beq	.L492
 562:Veno-Echo.cpp ****             out[i+1] = 0.0f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 244


 7286              		.loc 19 562 13 view .LVU1939
 562:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 7287              		.loc 19 562 20 is_stmt 0 view .LVU1940
 7288 018c 0023     		movs	r3, #0
 7289 018e 009A     		ldr	r2, [sp]
 7290 0190 1360     		str	r3, [r2]	@ float
 563:Veno-Echo.cpp ****         }
 7291              		.loc 19 563 13 is_stmt 1 view .LVU1941
 563:Veno-Echo.cpp ****         }
 7292              		.loc 19 563 22 is_stmt 0 view .LVU1942
 7293 0192 5360     		str	r3, [r2, #4]	@ float
 7294              	.L493:
 7295              	.LBE1404:
 349:Veno-Echo.cpp ****     {   
 7296              		.loc 19 349 5 is_stmt 1 discriminator 2 view .LVU1943
 7297 0194 009B     		ldr	r3, [sp]
 7298 0196 0BF1080B 		add	fp, fp, #8
 349:Veno-Echo.cpp ****     {   
 7299              		.loc 19 349 35 is_stmt 0 discriminator 2 view .LVU1944
 7300 019a 029A     		ldr	r2, [sp, #8]
 349:Veno-Echo.cpp ****     {   
 7301              		.loc 19 349 25 discriminator 2 view .LVU1945
 7302 019c 0599     		ldr	r1, [sp, #20]
 7303 019e 0833     		adds	r3, r3, #8
 7304 01a0 8A42     		cmp	r2, r1
 7305 01a2 0093     		str	r3, [sp]
 349:Veno-Echo.cpp ****     {   
 7306              		.loc 19 349 35 discriminator 2 view .LVU1946
 7307 01a4 02F10203 		add	r3, r2, #2
 7308              	.LVL509:
 349:Veno-Echo.cpp ****     {   
 7309              		.loc 19 349 25 is_stmt 1 discriminator 2 view .LVU1947
 7310 01a8 00F00C85 		beq	.L422
 7311 01ac 0293     		str	r3, [sp, #8]
 7312              	.LVL510:
 7313              	.L495:
 7314              	.LBB1778:
 351:Veno-Echo.cpp ****         Update_Mod();
 7315              		.loc 19 351 9 view .LVU1948
 351:Veno-Echo.cpp ****         Update_Mod();
 7316              		.loc 19 351 20 is_stmt 0 view .LVU1949
 7317 01ae FFF7FEFF 		bl	_Z11UpdateClockv
 7318              	.LVL511:
 352:Veno-Echo.cpp ****         //get xfade positions from envelopes:
 7319              		.loc 19 352 9 is_stmt 1 view .LVU1950
 7320              	.LBB1443:
 7321              	.LBB1444:
 7322              	.LBB1445:
 7323              	.LBB1446:
  74:delayline_reverse.h **** 
  75:delayline_reverse.h ****     /** sets the delay time in samples
  76:delayline_reverse.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  77:delayline_reverse.h ****     */
  78:delayline_reverse.h ****     inline void SetDelay1(float delay)
  79:delayline_reverse.h ****     {
  80:delayline_reverse.h ****         int32_t int_delay = static_cast<int32_t>(delay);
  81:delayline_reverse.h ****         frac1_             = delay - static_cast<float>(int_delay);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 245


  82:delayline_reverse.h ****         delay1_ = static_cast<size_t>(int_delay) < max_size ? int_delay
  83:delayline_reverse.h ****                                                            : max_size - 1;
  84:delayline_reverse.h ****     }
  85:delayline_reverse.h **** 
  86:delayline_reverse.h ****     /** writes the sample of type T to the delay line, and advances the write ptr
  87:delayline_reverse.h ****     */
  88:delayline_reverse.h ****     inline void Write(const T sample)
  89:delayline_reverse.h ****     {
  90:delayline_reverse.h ****         line_[write_ptr_] = sample;
  91:delayline_reverse.h ****         //advance write ptr in forward direction
  92:delayline_reverse.h ****         write_ptr_        = (write_ptr_ + 1 + max_size) % max_size; //increment forwards
  93:delayline_reverse.h ****         
  94:delayline_reverse.h ****         //increment head difference
  95:delayline_reverse.h ****         headDiff_        = (headDiff_ + 1 + delay1_) % delay1_;   
  96:delayline_reverse.h **** 
  97:delayline_reverse.h ****         //advance read ptrs in reverse direction
  98:delayline_reverse.h ****         read_ptr1_ = (read_ptr1_ - 1 + max_size) % max_size;
  99:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 100:delayline_reverse.h ****  
 101:delayline_reverse.h ****         if (headDiff_ > (delay1_ - fadetime - 1))  //start cross fade region
 102:delayline_reverse.h ****         {
 103:delayline_reverse.h ****             if(!fading_)
 104:delayline_reverse.h ****             {
 105:delayline_reverse.h ****                 fading_ = true; //start fading
 106:delayline_reverse.h ****                 
 107:delayline_reverse.h ****                 if(!playinghead_) 
 108:delayline_reverse.h ****                 {
 109:delayline_reverse.h ****                     //jump ptr2 to fadetime beyond write position
 110:delayline_reverse.h ****                     read_ptr2_ = write_ptr_ - 1;
 111:delayline_reverse.h ****                 }
 112:delayline_reverse.h ****     
 113:delayline_reverse.h ****                 else
 114:delayline_reverse.h ****                 {
 115:delayline_reverse.h ****                     //jump ptr1 to fadetime beyond write position
 116:delayline_reverse.h ****                     read_ptr1_ = write_ptr_ - 1; 
 117:delayline_reverse.h ****                 }
 118:delayline_reverse.h ****             }
 119:delayline_reverse.h **** 
 120:delayline_reverse.h ****             else
 121:delayline_reverse.h ****             {
 122:delayline_reverse.h ****                 //continue fading
 123:delayline_reverse.h ****             }
 124:delayline_reverse.h ****         }
 125:delayline_reverse.h **** 
 126:delayline_reverse.h ****         if(fading_)
 127:delayline_reverse.h ****         {
 128:delayline_reverse.h ****             if(!playinghead_)   //head1 playing
 129:delayline_reverse.h ****             {
 130:delayline_reverse.h ****                 fadepos_ = fadepos_ + (1.0f / (fadetime) ); //increment up to 1.
 131:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 132:delayline_reverse.h ****                 {
 133:delayline_reverse.h ****                     fadepos_ = 1.0f;
 134:delayline_reverse.h ****                     fading_ = false;    //stop fading
 135:delayline_reverse.h ****                     playinghead_ = true;
 136:delayline_reverse.h ****                 }
 137:delayline_reverse.h ****             }
 138:delayline_reverse.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 246


 139:delayline_reverse.h ****             else    //head2 playing
 140:delayline_reverse.h ****             {
 141:delayline_reverse.h ****                 fadepos_ = fadepos_ - (1.0f / (fadetime) ); //increment down to 0
 142:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 143:delayline_reverse.h ****                 {
 144:delayline_reverse.h ****                     fadepos_ = 0.0f;
 145:delayline_reverse.h ****                     fading_ = false;    //stop fading
 146:delayline_reverse.h ****                     playinghead_ = false;
 147:delayline_reverse.h ****                 }
 148:delayline_reverse.h ****             }
 149:delayline_reverse.h ****         }
 150:delayline_reverse.h ****         else    //not fading
 151:delayline_reverse.h ****         {
 152:delayline_reverse.h ****         }
 153:delayline_reverse.h **** 
 154:delayline_reverse.h ****         
 155:delayline_reverse.h ****     }
 156:delayline_reverse.h **** 
 157:delayline_reverse.h ****     /** returns the next sample of type T in the delay line, interpolated if necessary.
 158:delayline_reverse.h ****     */
 159:delayline_reverse.h ****     inline const T ReadRev() const
 160:delayline_reverse.h ****     {
 161:delayline_reverse.h ****         T a1 = line_[read_ptr1_];
 162:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 163:delayline_reverse.h **** 
 164:delayline_reverse.h ****         float read1 = a1;
 165:delayline_reverse.h ****         float read2 = a2;
 166:delayline_reverse.h **** 
 167:delayline_reverse.h ****         float scalar_1, scalar_2;
 168:delayline_reverse.h **** 
 169:delayline_reverse.h ****         //hann
 170:delayline_reverse.h ****         //scalar_1 = sinf(fadepos_ * ((float)M_PI * 0.5f));
 171:delayline_reverse.h ****         //scalar_2 = sinf((1.0f - fadepos_) * ((float)M_PI * 0.5f));
 172:delayline_reverse.h **** 
 173:delayline_reverse.h ****         //flattenned hann
 174:delayline_reverse.h ****         scalar_1 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*fadepos_)  +   (1.0f/16.0f)*s
 7324              		.loc 18 174 71 is_stmt 0 view .LVU1951
 7325 01b2 DFF808A3 		ldr	r10, .L541+164
 7326              	.LBE1446:
 7327              	.LBE1445:
 7328              	.LBE1444:
 7329              	.LBE1443:
 352:Veno-Echo.cpp ****         //get xfade positions from envelopes:
 7330              		.loc 19 352 19 view .LVU1952
 7331 01b6 FFF7FEFF 		bl	_Z10Update_Modv
 7332              	.LVL512:
 354:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 7333              		.loc 19 354 9 is_stmt 1 view .LVU1953
 354:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 7334              		.loc 19 354 51 is_stmt 0 view .LVU1954
 7335 01ba 9F48     		ldr	r0, .L541+32
 7336 01bc FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7337              	.LVL513:
 7338 01c0 0146     		mov	r1, r0
 7339 01c2 9E48     		ldr	r0, .L541+36
 7340              	.LBB1498:
 7341              	.LBB1481:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 247


 7342              	.LBB1464:
 7343              	.LBB1447:
 175:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7344              		.loc 18 175 77 view .LVU1955
 7345 01c4 F7EE00AA 		vmov.f32	s21, #1.0e+0
 7346              	.LBE1447:
 7347              	.LBE1464:
 7348              	.LBE1481:
 7349              	.LBE1498:
 354:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 7350              		.loc 19 354 51 view .LVU1956
 7351 01c8 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 7352              	.LVL514:
 355:Veno-Echo.cpp ****         
 7353              		.loc 19 355 51 view .LVU1957
 7354 01cc 9C48     		ldr	r0, .L541+40
 354:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 7355              		.loc 19 354 51 view .LVU1958
 7356 01ce F0EE40BA 		vmov.f32	s23, s0
 7357              	.LVL515:
 355:Veno-Echo.cpp ****         
 7358              		.loc 19 355 9 is_stmt 1 view .LVU1959
 355:Veno-Echo.cpp ****         
 7359              		.loc 19 355 51 is_stmt 0 view .LVU1960
 7360 01d2 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7361              	.LVL516:
 355:Veno-Echo.cpp ****         
 7362              		.loc 19 355 51 view .LVU1961
 7363 01d6 0146     		mov	r1, r0
 7364 01d8 9A48     		ldr	r0, .L541+44
 7365 01da FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 7366              	.LVL517:
 357:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 7367              		.loc 19 357 44 view .LVU1962
 7368 01de 9A48     		ldr	r0, .L541+48
 355:Veno-Echo.cpp ****         
 7369              		.loc 19 355 51 view .LVU1963
 7370 01e0 B0EE409A 		vmov.f32	s18, s0
 7371              	.LVL518:
 357:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 7372              		.loc 19 357 9 is_stmt 1 view .LVU1964
 357:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 7373              		.loc 19 357 44 is_stmt 0 view .LVU1965
 7374 01e4 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7375              	.LVL519:
 357:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 7376              		.loc 19 357 44 view .LVU1966
 7377 01e8 0146     		mov	r1, r0
 7378 01ea 9848     		ldr	r0, .L541+52
 7379 01ec FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 7380              	.LVL520:
 358:Veno-Echo.cpp **** 
 7381              		.loc 19 358 44 view .LVU1967
 7382 01f0 9748     		ldr	r0, .L541+56
 357:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 7383              		.loc 19 357 44 view .LVU1968
 7384 01f2 B0EE408A 		vmov.f32	s16, s0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 248


 7385              	.LVL521:
 358:Veno-Echo.cpp **** 
 7386              		.loc 19 358 9 is_stmt 1 view .LVU1969
 358:Veno-Echo.cpp **** 
 7387              		.loc 19 358 44 is_stmt 0 view .LVU1970
 7388 01f6 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7389              	.LVL522:
 358:Veno-Echo.cpp **** 
 7390              		.loc 19 358 44 view .LVU1971
 7391 01fa 0146     		mov	r1, r0
 7392 01fc 9548     		ldr	r0, .L541+60
 7393 01fe FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 7394              	.LVL523:
 7395              	.LBB1499:
 7396              	.LBB1500:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7397              		.loc 10 60 42 view .LVU1972
 7398 0202 9548     		ldr	r0, .L541+64
 7399              	.LBE1500:
 7400              	.LBE1499:
 381:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 7401              		.loc 19 381 49 view .LVU1973
 7402 0204 954B     		ldr	r3, .L541+68
 358:Veno-Echo.cpp **** 
 7403              		.loc 19 358 44 view .LVU1974
 7404 0206 F0EE407A 		vmov.f32	s15, s0
 7405              	.LVL524:
 361:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 7406              		.loc 19 361 9 is_stmt 1 view .LVU1975
 7407              	.LBB1502:
 7408              	.LBI1499:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7409              		.loc 10 60 17 view .LVU1976
 7410              	.LBB1501:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7411              		.loc 10 60 37 view .LVU1977
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7412              		.loc 10 60 42 is_stmt 0 view .LVU1978
 7413 020a C0ED00BA 		vstr.32	s23, [r0]
 7414              	.LVL525:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7415              		.loc 10 60 42 view .LVU1979
 7416              	.LBE1501:
 7417              	.LBE1502:
 362:Veno-Echo.cpp ****         
 7418              		.loc 19 362 9 is_stmt 1 view .LVU1980
 7419              	.LBB1503:
 7420              	.LBI1503:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7421              		.loc 10 60 17 view .LVU1981
 7422              	.LBB1504:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7423              		.loc 10 60 37 view .LVU1982
 7424              	.LBE1504:
 7425              	.LBE1503:
 7426              	.LBB1507:
 7427              	.LBB1482:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 249


 7428              	.LBB1465:
 7429              	.LBB1448:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7430              		.loc 18 174 82 is_stmt 0 view .LVU1983
 7431 020e F6EE028A 		vmov.f32	s17, #5.625e-1
 7432              	.LBE1448:
 7433              	.LBE1465:
 7434              	.LBE1482:
 7435              	.LBE1507:
 7436              	.LBB1508:
 7437              	.LBB1505:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7438              		.loc 10 60 42 view .LVU1984
 7439 0212 9348     		ldr	r0, .L541+72
 7440              	.LBE1505:
 7441              	.LBE1508:
 381:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 7442              		.loc 19 381 49 view .LVU1985
 7443 0214 1D68     		ldr	r5, [r3]
 7444              	.LBB1509:
 7445              	.LBB1506:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7446              		.loc 10 60 42 view .LVU1986
 7447 0216 80ED009A 		vstr.32	s18, [r0]
 7448              	.LVL526:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7449              		.loc 10 60 42 view .LVU1987
 7450              	.LBE1506:
 7451              	.LBE1509:
 364:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 7452              		.loc 19 364 9 is_stmt 1 view .LVU1988
 7453              	.LBB1510:
 7454              	.LBI1510:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7455              		.loc 10 60 17 view .LVU1989
 7456              	.LBB1511:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7457              		.loc 10 60 37 view .LVU1990
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7458              		.loc 10 60 42 is_stmt 0 view .LVU1991
 7459 021a 9248     		ldr	r0, .L541+76
 7460              	.LBE1511:
 7461              	.LBE1510:
 7462              	.LBB1513:
 7463              	.LBB1483:
 7464              	.LBB1466:
 7465              	.LBB1449:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7466              		.loc 18 174 71 view .LVU1992
 7467 021c 05EB0A03 		add	r3, r5, r10
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7468              		.loc 18 174 46 view .LVU1993
 7469 0220 9FED91AA 		vldr.32	s20, .L541+80
 7470              	.LBE1449:
 7471              	.LBE1466:
 7472              	.LBE1483:
 7473              	.LBE1513:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 250


 7474              	.LBB1514:
 7475              	.LBB1512:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7476              		.loc 10 60 42 view .LVU1994
 7477 0224 80ED008A 		vstr.32	s16, [r0]
 7478              	.LVL527:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7479              		.loc 10 60 42 view .LVU1995
 7480              	.LBE1512:
 7481              	.LBE1514:
 365:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 7482              		.loc 19 365 9 is_stmt 1 view .LVU1996
 7483              	.LBB1515:
 7484              	.LBI1515:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7485              		.loc 10 60 17 view .LVU1997
 7486              	.LBB1516:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7487              		.loc 10 60 37 view .LVU1998
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7488              		.loc 10 60 42 is_stmt 0 view .LVU1999
 7489 0228 9048     		ldr	r0, .L541+84
 7490              	.LBE1516:
 7491              	.LBE1515:
 7492              	.LBB1518:
 7493              	.LBB1484:
 7494              	.LBB1467:
 7495              	.LBB1450:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7496              		.loc 18 174 71 view .LVU2000
 7497 022a 93ED00BA 		vldr.32	s22, [r3]
 7498              	.LBE1450:
 7499              	.LBE1467:
 7500              	.LBE1484:
 7501              	.LBE1518:
 7502              	.LBB1519:
 7503              	.LBB1517:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7504              		.loc 10 60 42 view .LVU2001
 7505 022e 80ED008A 		vstr.32	s16, [r0]
 7506              	.LVL528:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7507              		.loc 10 60 42 view .LVU2002
 7508              	.LBE1517:
 7509              	.LBE1519:
 366:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 7510              		.loc 19 366 9 is_stmt 1 view .LVU2003
 7511              	.LBB1520:
 7512              	.LBI1520:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7513              		.loc 10 60 17 view .LVU2004
 7514              	.LBB1521:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7515              		.loc 10 60 37 view .LVU2005
 7516              	.LBE1521:
 7517              	.LBE1520:
 7518              	.LBB1524:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 251


 7519              	.LBB1525:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7520              		.loc 10 60 42 is_stmt 0 view .LVU2006
 7521 0232 8F48     		ldr	r0, .L541+88
 7522              	.LBE1525:
 7523              	.LBE1524:
 7524              	.LBB1528:
 7525              	.LBB1485:
 7526              	.LBB1468:
 7527              	.LBB1451:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7528              		.loc 18 174 46 view .LVU2007
 7529 0234 2BEE0A0A 		vmul.f32	s0, s22, s20
 7530              	.LVL529:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7531              		.loc 18 174 71 view .LVU2008
 7532 0238 0493     		str	r3, [sp, #16]
 7533              		.loc 18 175 77 view .LVU2009
 7534 023a 3AEECBCA 		vsub.f32	s24, s21, s22
 7535              	.LBE1451:
 7536              	.LBE1468:
 7537              	.LBE1485:
 7538              	.LBE1528:
 7539              	.LBB1529:
 7540              	.LBB1526:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7541              		.loc 10 60 42 view .LVU2010
 7542 023e 80ED008A 		vstr.32	s16, [r0]
 7543              	.LBE1526:
 7544              	.LBE1529:
 374:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 7545              		.loc 19 374 27 view .LVU2011
 7546 0242 8C4B     		ldr	r3, .L541+92
 7547              	.LBB1530:
 7548              	.LBB1531:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7549              		.loc 10 60 42 view .LVU2012
 7550 0244 8C48     		ldr	r0, .L541+96
 7551              	.LBE1531:
 7552              	.LBE1530:
 374:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 7553              		.loc 19 374 27 view .LVU2013
 7554 0246 1B68     		ldr	r3, [r3]	@ float
 7555              	.LBB1534:
 7556              	.LBB1532:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7557              		.loc 10 60 42 view .LVU2014
 7558 0248 80ED008A 		vstr.32	s16, [r0]
 7559              	.LBE1532:
 7560              	.LBE1534:
 7561              	.LBB1535:
 7562              	.LBB1522:
 7563 024c 8B48     		ldr	r0, .L541+100
 7564              	.LBE1522:
 7565              	.LBE1535:
 7566              	.LBB1536:
 7567              	.LBB1486:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 252


 7568              	.LBB1469:
 7569              	.LBB1452:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7570              		.loc 18 174 103 view .LVU2015
 7571 024e DFED8C9A 		vldr.32	s19, .L541+104
 7572              	.LBE1452:
 7573              	.LBE1469:
 7574              	.LBE1486:
 7575              	.LBE1536:
 7576              	.LBB1537:
 7577              	.LBB1523:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7578              		.loc 10 60 42 view .LVU2016
 7579 0252 C0ED007A 		vstr.32	s15, [r0]
 7580              	.LVL530:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7581              		.loc 10 60 42 view .LVU2017
 7582              	.LBE1523:
 7583              	.LBE1537:
 367:Veno-Echo.cpp **** 
 7584              		.loc 19 367 9 is_stmt 1 view .LVU2018
 7585              	.LBB1538:
 7586              	.LBI1538:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7587              		.loc 10 60 17 view .LVU2019
 7588              	.LBB1539:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7589              		.loc 10 60 37 view .LVU2020
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7590              		.loc 10 60 42 is_stmt 0 view .LVU2021
 7591 0256 8B48     		ldr	r0, .L541+108
 7592              	.LBE1539:
 7593              	.LBE1538:
 7594              	.LBB1541:
 7595              	.LBB1487:
 7596              	.LBB1470:
 7597              	.LBB1453:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7598              		.loc 18 174 98 view .LVU2022
 7599 0258 9FED8B9A 		vldr.32	s18, .L541+112
 7600              	.LVL531:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7601              		.loc 18 174 98 view .LVU2023
 7602              	.LBE1453:
 7603              	.LBE1470:
 7604              	.LBE1487:
 7605              	.LBE1541:
 7606              	.LBB1542:
 7607              	.LBB1540:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7608              		.loc 10 60 42 view .LVU2024
 7609 025c C0ED007A 		vstr.32	s15, [r0]
 7610              	.LVL532:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7611              		.loc 10 60 42 view .LVU2025
 7612              	.LBE1540:
 7613              	.LBE1542:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 253


 369:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 7614              		.loc 19 369 9 is_stmt 1 view .LVU2026
 7615              	.LBB1543:
 7616              	.LBI1524:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7617              		.loc 10 60 17 view .LVU2027
 7618              	.LBB1527:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7619              		.loc 10 60 37 view .LVU2028
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7620              		.loc 10 60 37 is_stmt 0 view .LVU2029
 7621              	.LBE1527:
 7622              	.LBE1543:
 370:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 7623              		.loc 19 370 9 is_stmt 1 view .LVU2030
 7624              	.LBB1544:
 7625              	.LBI1530:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7626              		.loc 10 60 17 view .LVU2031
 7627              	.LBB1533:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7628              		.loc 10 60 37 view .LVU2032
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7629              		.loc 10 60 37 is_stmt 0 view .LVU2033
 7630              	.LBE1533:
 7631              	.LBE1544:
 371:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 7632              		.loc 19 371 9 is_stmt 1 view .LVU2034
 7633              	.LBB1545:
 7634              	.LBI1545:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7635              		.loc 10 60 17 view .LVU2035
 7636              	.LBB1546:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7637              		.loc 10 60 37 view .LVU2036
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7638              		.loc 10 60 42 is_stmt 0 view .LVU2037
 7639 0260 8A48     		ldr	r0, .L541+116
 7640              	.LBE1546:
 7641              	.LBE1545:
 7642              	.LBB1548:
 7643              	.LBB1488:
 7644              	.LBB1471:
 7645              	.LBB1454:
 162:delayline_reverse.h **** 
 7646              		.loc 18 162 23 view .LVU2038
 7647 0262 D5E90267 		ldrd	r6, r7, [r5, #8]
 7648              	.LBE1454:
 7649              	.LBE1471:
 7650              	.LBE1488:
 7651              	.LBE1548:
 7652              	.LBB1549:
 7653              	.LBB1547:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7654              		.loc 10 60 42 view .LVU2039
 7655 0266 C0ED007A 		vstr.32	s15, [r0]
 7656              	.LVL533:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 254


  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7657              		.loc 10 60 42 view .LVU2040
 7658              	.LBE1547:
 7659              	.LBE1549:
 372:Veno-Echo.cpp **** 
 7660              		.loc 19 372 9 is_stmt 1 view .LVU2041
 7661              	.LBB1550:
 7662              	.LBI1550:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7663              		.loc 10 60 17 view .LVU2042
 7664              	.LBB1551:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7665              		.loc 10 60 37 view .LVU2043
 7666              	.LBE1551:
 7667              	.LBE1550:
 7668              	.LBB1554:
 7669              	.LBB1489:
 7670              	.LBB1472:
 7671              	.LBB1455:
 162:delayline_reverse.h **** 
 7672              		.loc 18 162 11 is_stmt 0 view .LVU2044
 7673 026a 05EB8702 		add	r2, r5, r7, lsl #2
 7674              	.LBE1455:
 7675              	.LBE1472:
 7676              	.LBE1489:
 7677              	.LBE1554:
 7678              	.LBB1555:
 7679              	.LBB1552:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7680              		.loc 10 60 42 view .LVU2045
 7681 026e 8848     		ldr	r0, .L541+120
 7682              	.LBE1552:
 7683              	.LBE1555:
 7684              	.LBB1556:
 7685              	.LBB1490:
 7686              	.LBB1473:
 7687              	.LBB1456:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 7688              		.loc 18 161 11 view .LVU2046
 7689 0270 05EB8601 		add	r1, r5, r6, lsl #2
 162:delayline_reverse.h **** 
 7690              		.loc 18 162 11 view .LVU2047
 7691 0274 D2ED06DA 		vldr.32	s27, [r2, #24]
 7692              	.LBE1456:
 7693              	.LBE1473:
 7694              	.LBE1490:
 7695              	.LBE1556:
 7696              	.LBB1557:
 7697              	.LBB1558:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7698              		.loc 10 60 42 view .LVU2048
 7699 0278 864A     		ldr	r2, .L541+124
 7700              	.LBE1558:
 7701              	.LBE1557:
 7702              	.LBB1560:
 7703              	.LBB1553:
 7704 027a C0ED007A 		vstr.32	s15, [r0]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 255


 7705              	.LVL534:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7706              		.loc 10 60 42 view .LVU2049
 7707              	.LBE1553:
 7708              	.LBE1560:
 374:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 7709              		.loc 19 374 9 is_stmt 1 view .LVU2050
 7710              	.LBB1561:
 7711              	.LBI1557:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7712              		.loc 10 60 17 view .LVU2051
 7713              	.LBB1559:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7714              		.loc 10 60 37 view .LVU2052
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7715              		.loc 10 60 42 is_stmt 0 view .LVU2053
 7716 027e 1360     		str	r3, [r2]	@ float
 7717              	.LVL535:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7718              		.loc 10 60 42 view .LVU2054
 7719              	.LBE1559:
 7720              	.LBE1561:
 375:Veno-Echo.cpp **** 
 7721              		.loc 19 375 9 is_stmt 1 view .LVU2055
 7722              	.LBB1562:
 7723              	.LBI1562:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7724              		.loc 10 60 17 view .LVU2056
 7725              	.LBB1563:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7726              		.loc 10 60 37 view .LVU2057
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7727              		.loc 10 60 42 is_stmt 0 view .LVU2058
 7728 0280 854A     		ldr	r2, .L541+128
 7729              	.LBE1563:
 7730              	.LBE1562:
 7731              	.LBB1565:
 7732              	.LBB1491:
 7733              	.LBB1474:
 7734              	.LBB1457:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 7735              		.loc 18 161 11 view .LVU2059
 7736 0282 91ED06EA 		vldr.32	s28, [r1, #24]
 7737              	.LBE1457:
 7738              	.LBE1474:
 7739              	.LBE1491:
 7740              	.LBE1565:
 7741              	.LBB1566:
 7742              	.LBB1564:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7743              		.loc 10 60 42 view .LVU2060
 7744 0286 1360     		str	r3, [r2]	@ float
 7745              	.LVL536:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7746              		.loc 10 60 42 view .LVU2061
 7747              	.LBE1564:
 7748              	.LBE1566:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 256


 377:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 7749              		.loc 19 377 9 is_stmt 1 view .LVU2062
 7750              	.LBB1567:
 7751              	.LBI1567:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7752              		.loc 10 60 17 view .LVU2063
 7753              	.LBB1568:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7754              		.loc 10 60 37 view .LVU2064
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7755              		.loc 10 60 42 is_stmt 0 view .LVU2065
 7756 0288 844A     		ldr	r2, .L541+132
 7757 028a 1360     		str	r3, [r2]	@ float
 7758              	.LVL537:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7759              		.loc 10 60 42 view .LVU2066
 7760              	.LBE1568:
 7761              	.LBE1567:
 378:Veno-Echo.cpp **** 
 7762              		.loc 19 378 9 is_stmt 1 view .LVU2067
 7763              	.LBB1569:
 7764              	.LBI1569:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7765              		.loc 10 60 17 view .LVU2068
 7766              	.LBB1570:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7767              		.loc 10 60 37 view .LVU2069
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7768              		.loc 10 60 42 is_stmt 0 view .LVU2070
 7769 028c 844A     		ldr	r2, .L541+136
 7770 028e 1360     		str	r3, [r2]	@ float
 7771              	.LVL538:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 7772              		.loc 10 60 42 view .LVU2071
 7773              	.LBE1570:
 7774              	.LBE1569:
 381:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 7775              		.loc 19 381 9 is_stmt 1 view .LVU2072
 7776              	.LBB1571:
 7777              	.LBI1443:
  79:Veno-Echo.cpp ****     {
 7778              		.loc 19 79 11 view .LVU2073
 7779              	.LBB1492:
  82:Veno-Echo.cpp ****         return read;
 7780              		.loc 19 82 9 view .LVU2074
 7781              	.LBB1475:
 7782              	.LBI1445:
 159:delayline_reverse.h ****     {
 7783              		.loc 18 159 20 view .LVU2075
 7784              	.LBB1458:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7785              		.loc 18 174 46 is_stmt 0 view .LVU2076
 7786 0290 FFF7FEFF 		bl	sinf
 7787              	.LVL539:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7788              		.loc 18 174 46 view .LVU2077
 7789 0294 F0EE40BA 		vmov.f32	s23, s0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 257


 7790              	.LVL540:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7791              		.loc 18 174 103 view .LVU2078
 7792 0298 2BEE290A 		vmul.f32	s0, s22, s19
 7793 029c FFF7FEFF 		bl	sinf
 7794              	.LVL541:
 7795 02a0 B0EE408A 		vmov.f32	s16, s0
 7796              	.LVL542:
 7797              		.loc 18 175 46 view .LVU2079
 7798 02a4 2CEE0A0A 		vmul.f32	s0, s24, s20
 7799 02a8 FFF7FEFF 		bl	sinf
 7800              	.LVL543:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7801              		.loc 18 174 98 view .LVU2080
 7802 02ac 28EE098A 		vmul.f32	s16, s16, s18
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7803              		.loc 18 174 82 view .LVU2081
 7804 02b0 ABEEA88A 		vfma.f32	s16, s23, s17
 7805              	.LVL544:
 7806              		.loc 18 175 46 view .LVU2082
 7807 02b4 F0EE40BA 		vmov.f32	s23, s0
 7808              		.loc 18 175 112 view .LVU2083
 7809 02b8 2CEE290A 		vmul.f32	s0, s24, s19
 7810 02bc FFF7FEFF 		bl	sinf
 7811              	.LVL545:
 7812              		.loc 18 175 107 view .LVU2084
 7813 02c0 60EE097A 		vmul.f32	s15, s0, s18
 7814              	.LBE1458:
 7815              	.LBE1475:
 7816              	.LBE1492:
 7817              	.LBE1571:
 382:Veno-Echo.cpp **** 
 7818              		.loc 19 382 49 view .LVU2085
 7819 02c4 774B     		ldr	r3, .L541+140
 7820              	.LBB1572:
 7821              	.LBB1493:
 7822              	.LBB1476:
 7823              	.LBB1459:
 7824              		.loc 18 175 91 view .LVU2086
 7825 02c6 EBEEA87A 		vfma.f32	s15, s23, s17
 7826              	.LVL546:
 7827              		.loc 18 175 91 view .LVU2087
 7828              	.LBE1459:
 7829              	.LBE1476:
 7830              	.LBE1493:
 7831              	.LBE1572:
 382:Veno-Echo.cpp **** 
 7832              		.loc 19 382 49 view .LVU2088
 7833 02ca 1C68     		ldr	r4, [r3]
 7834              	.LBB1573:
 7835              	.LBB1494:
 7836              	.LBB1477:
 7837              	.LBB1460:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7838              		.loc 18 174 9 view .LVU2089
 7839 02cc 38EE088A 		vadd.f32	s16, s16, s16
 7840              	.LVL547:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 258


 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7841              		.loc 18 174 9 view .LVU2090
 7842              	.LBE1460:
 7843              	.LBE1477:
 7844              	.LBE1494:
 7845              	.LBE1573:
 7846              	.LBB1574:
 7847              	.LBB1575:
 7848              	.LBB1576:
 7849              	.LBB1577:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7850              		.loc 18 174 71 view .LVU2091
 7851 02d0 04EB0A01 		add	r1, r4, r10
 162:delayline_reverse.h **** 
 7852              		.loc 18 162 11 view .LVU2092
 7853 02d4 D4E90223 		ldrd	r2, r3, [r4, #8]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7854              		.loc 18 174 71 view .LVU2093
 7855 02d8 91ED00CA 		vldr.32	s24, [r1]
 7856              	.LBE1577:
 7857              	.LBE1576:
 7858              	.LBE1575:
 7859              	.LBE1574:
 7860              	.LBB1608:
 7861              	.LBB1495:
 7862              	.LBB1478:
 7863              	.LBB1461:
 7864              		.loc 18 175 9 view .LVU2094
 7865 02dc 77EEA77A 		vadd.f32	s15, s15, s15
 7866              	.LVL548:
 7867              		.loc 18 175 9 view .LVU2095
 7868              	.LBE1461:
 7869              	.LBE1478:
 7870              	.LBE1495:
 7871              	.LBE1608:
 7872              	.LBB1609:
 7873              	.LBB1598:
 7874              	.LBB1588:
 7875              	.LBB1578:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 7876              		.loc 18 161 11 view .LVU2096
 7877 02e0 04EB8202 		add	r2, r4, r2, lsl #2
 162:delayline_reverse.h **** 
 7878              		.loc 18 162 11 view .LVU2097
 7879 02e4 04EB8303 		add	r3, r4, r3, lsl #2
 7880              		.loc 18 175 77 view .LVU2098
 7881 02e8 7AEECCAA 		vsub.f32	s21, s21, s24
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7882              		.loc 18 174 46 view .LVU2099
 7883 02ec 2CEE0A0A 		vmul.f32	s0, s24, s20
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 7884              		.loc 18 161 11 view .LVU2100
 7885 02f0 92ED06DA 		vldr.32	s26, [r2, #24]
 7886              	.LBE1578:
 7887              	.LBE1588:
 7888              	.LBE1598:
 7889              	.LBE1609:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 259


 7890              	.LBB1610:
 7891              	.LBB1496:
 7892              	.LBB1479:
 7893              	.LBB1462:
 176:delayline_reverse.h **** 
 177:delayline_reverse.h ****         return (read2 * scalar_1) + (read1 * scalar_2); 
 7894              		.loc 18 177 44 view .LVU2101
 7895 02f4 67EE8E7A 		vmul.f32	s15, s15, s28
 7896              	.LVL549:
 7897              		.loc 18 177 44 view .LVU2102
 7898              	.LBE1462:
 7899              	.LBE1479:
 7900              	.LBE1496:
 7901              	.LBE1610:
 7902              	.LBB1611:
 7903              	.LBB1599:
 7904              	.LBB1589:
 7905              	.LBB1579:
 162:delayline_reverse.h **** 
 7906              		.loc 18 162 11 view .LVU2103
 7907 02f8 D3ED06CA 		vldr.32	s25, [r3, #24]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7908              		.loc 18 174 71 view .LVU2104
 7909 02fc 0391     		str	r1, [sp, #12]
 7910              	.LBE1579:
 7911              	.LBE1589:
 7912              	.LBE1599:
 7913              	.LBE1611:
 7914              	.LBB1612:
 7915              	.LBB1497:
 7916              	.LBB1480:
 7917              	.LBB1463:
 7918              		.loc 18 177 54 view .LVU2105
 7919 02fe EDEE887A 		vfma.f32	s15, s27, s16
 7920              	.LVL550:
 7921              		.loc 18 177 54 view .LVU2106
 7922              	.LBE1463:
 7923              	.LBE1480:
  83:Veno-Echo.cpp ****     }
 7924              		.loc 19 83 9 is_stmt 1 view .LVU2107
  83:Veno-Echo.cpp ****     }
 7925              		.loc 19 83 9 is_stmt 0 view .LVU2108
 7926              	.LBE1497:
 7927              	.LBE1612:
 381:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 7928              		.loc 19 381 50 view .LVU2109
 7929 0302 CDED067A 		vstr.32	s15, [sp, #24]
 382:Veno-Echo.cpp **** 
 7930              		.loc 19 382 9 is_stmt 1 view .LVU2110
 7931              	.LVL551:
 7932              	.LBB1613:
 7933              	.LBI1574:
  79:Veno-Echo.cpp ****     {
 7934              		.loc 19 79 11 view .LVU2111
 7935              	.LBB1600:
  82:Veno-Echo.cpp ****         return read;
 7936              		.loc 19 82 9 view .LVU2112
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 260


 7937              	.LBB1590:
 7938              	.LBI1576:
 159:delayline_reverse.h ****     {
 7939              		.loc 18 159 20 view .LVU2113
 7940              	.LBB1580:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7941              		.loc 18 174 46 is_stmt 0 view .LVU2114
 7942 0306 FFF7FEFF 		bl	sinf
 7943              	.LVL552:
 7944 030a F0EE40BA 		vmov.f32	s23, s0
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7945              		.loc 18 174 103 view .LVU2115
 7946 030e 2CEE290A 		vmul.f32	s0, s24, s19
 7947 0312 FFF7FEFF 		bl	sinf
 7948              	.LVL553:
 7949 0316 B0EE408A 		vmov.f32	s16, s0
 175:delayline_reverse.h **** 
 7950              		.loc 18 175 46 view .LVU2116
 7951 031a 2AEE8A0A 		vmul.f32	s0, s21, s20
 7952 031e FFF7FEFF 		bl	sinf
 7953              	.LVL554:
 7954 0322 F0EE407A 		vmov.f32	s15, s0
 175:delayline_reverse.h **** 
 7955              		.loc 18 175 112 view .LVU2117
 7956 0326 2AEEA90A 		vmul.f32	s0, s21, s19
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7957              		.loc 18 174 98 view .LVU2118
 7958 032a 28EE098A 		vmul.f32	s16, s16, s18
 175:delayline_reverse.h **** 
 7959              		.loc 18 175 46 view .LVU2119
 7960 032e F0EE679A 		vmov.f32	s19, s15
 175:delayline_reverse.h **** 
 7961              		.loc 18 175 112 view .LVU2120
 7962 0332 FFF7FEFF 		bl	sinf
 7963              	.LVL555:
 7964              	.LBE1580:
 7965              	.LBE1590:
 7966              	.LBE1600:
 7967              	.LBE1613:
 7968              	.LBB1614:
 7969              	.LBB1615:
 7970              	.LBB1616:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 7971              		.loc 18 98 38 view .LVU2121
 7972 0336 5C48     		ldr	r0, .L541+144
 7973              	.LBE1616:
 7974              	.LBE1615:
 7975              	.LBE1614:
 7976              	.LBB1639:
 7977              	.LBB1601:
 7978              	.LBB1591:
 7979              	.LBB1581:
 175:delayline_reverse.h **** 
 7980              		.loc 18 175 107 view .LVU2122
 7981 0338 60EE097A 		vmul.f32	s15, s0, s18
 7982              	.LBE1581:
 7983              	.LBE1591:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 261


 7984              	.LBE1601:
 7985              	.LBE1639:
 7986              	.LBB1640:
 7987              	.LBB1628:
 7988              	.LBB1617:
  92:delayline_reverse.h ****         
 7989              		.loc 18 92 57 view .LVU2123
 7990 033c 5B4B     		ldr	r3, .L541+148
 7991              	.LBE1617:
 7992              	.LBE1628:
 7993              	.LBE1640:
 7994              	.LBB1641:
 7995              	.LBB1602:
 7996              	.LBB1592:
 7997              	.LBB1582:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 7998              		.loc 18 174 82 view .LVU2124
 7999 033e ABEEA88A 		vfma.f32	s16, s23, s17
 8000              	.LVL556:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8001              		.loc 18 174 82 view .LVU2125
 8002              	.LBE1582:
 8003              	.LBE1592:
 8004              	.LBE1602:
 8005              	.LBE1641:
 8006              	.LBB1642:
 8007              	.LBB1629:
 8008              	.LBB1618:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 8009              		.loc 18 98 38 view .LVU2126
 8010 0342 0644     		add	r6, r6, r0
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 8011              		.loc 18 90 15 view .LVU2127
 8012 0344 D5F804E0 		ldr	lr, [r5, #4]
 8013              	.LBE1618:
 8014              	.LBE1629:
 8015              	.LBE1642:
 8016              	.LBB1643:
 8017              	.LBB1603:
 8018              	.LBB1593:
 8019              	.LBB1583:
 175:delayline_reverse.h **** 
 8020              		.loc 18 175 91 view .LVU2128
 8021 0348 E9EEA87A 		vfma.f32	s15, s19, s17
 8022              	.LVL557:
 175:delayline_reverse.h **** 
 8023              		.loc 18 175 91 view .LVU2129
 8024              	.LBE1583:
 8025              	.LBE1593:
 8026              	.LBE1603:
 8027              	.LBE1643:
 8028              	.LBB1644:
 8029              	.LBB1630:
 8030              	.LBB1619:
  99:delayline_reverse.h ****  
 8031              		.loc 18 99 38 view .LVU2130
 8032 034c 3844     		add	r0, r0, r7
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 262


  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 8033              		.loc 18 98 50 view .LVU2131
 8034 034e A3FB06C1 		umull	ip, r1, r3, r6
  92:delayline_reverse.h ****         
 8035              		.loc 18 92 57 view .LVU2132
 8036 0352 DFF86CC1 		ldr	ip, .L541+168
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 8037              		.loc 18 90 9 view .LVU2133
 8038 0356 05EB8E0A 		add	r10, r5, lr, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 8039              		.loc 18 98 50 view .LVU2134
 8040 035a 890C     		lsrs	r1, r1, #18
 8041              	.LBE1619:
 8042              	.LBE1630:
 8043              	.LBE1644:
 8044              	.LBB1645:
 8045              	.LBB1604:
 8046              	.LBB1594:
 8047              	.LBB1584:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8048              		.loc 18 174 9 view .LVU2135
 8049 035c 38EE088A 		vadd.f32	s16, s16, s16
 8050              	.LVL558:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8051              		.loc 18 174 9 view .LVU2136
 8052              	.LBE1584:
 8053              	.LBE1594:
 8054              	.LBE1604:
 8055              	.LBE1645:
 8056              	.LBB1646:
 8057              	.LBB1631:
 8058              	.LBB1620:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 8059              		.loc 18 98 50 view .LVU2137
 8060 0360 0CFB1161 		mls	r1, ip, r1, r6
  92:delayline_reverse.h ****         
 8061              		.loc 18 92 45 view .LVU2138
 8062 0364 524E     		ldr	r6, .L541+152
 8063              	.LBE1620:
 8064              	.LBE1631:
 8065              	.LBE1646:
 8066              	.LBB1647:
 8067              	.LBB1605:
 8068              	.LBB1595:
 8069              	.LBB1585:
 175:delayline_reverse.h **** 
 8070              		.loc 18 175 9 view .LVU2139
 8071 0366 37EEA70A 		vadd.f32	s0, s15, s15
 8072              	.LVL559:
 175:delayline_reverse.h **** 
 8073              		.loc 18 175 9 view .LVU2140
 8074              	.LBE1585:
 8075              	.LBE1595:
 8076              	.LBE1605:
 8077              	.LBE1647:
 385:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 8078              		.loc 19 385 26 view .LVU2141
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 263


 8079 036a DBED007A 		vldr.32	s15, [fp]
 8080              	.LBB1648:
 8081              	.LBB1632:
 8082              	.LBB1621:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 8083              		.loc 18 98 50 view .LVU2142
 8084 036e 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 8085              		.loc 18 92 45 view .LVU2143
 8086 0370 7644     		add	r6, r6, lr
  99:delayline_reverse.h ****  
 8087              		.loc 18 99 50 view .LVU2144
 8088 0372 A3FB001E 		umull	r1, lr, r3, r0
  92:delayline_reverse.h ****         
 8089              		.loc 18 92 57 view .LVU2145
 8090 0376 A3FB0613 		umull	r1, r3, r3, r6
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 8091              		.loc 18 98 9 view .LVU2146
 8092 037a 0199     		ldr	r1, [sp, #4]
  99:delayline_reverse.h ****  
 8093              		.loc 18 99 50 view .LVU2147
 8094 037c 4FEA9E4E 		lsr	lr, lr, #18
 8095              	.LBE1621:
 8096              	.LBE1632:
 8097              	.LBE1648:
 8098              	.LBB1649:
 8099              	.LBB1606:
 8100              	.LBB1596:
 8101              	.LBB1586:
 8102              		.loc 18 177 44 view .LVU2148
 8103 0380 20EE0D0A 		vmul.f32	s0, s0, s26
 8104              	.LVL560:
 8105              		.loc 18 177 44 view .LVU2149
 8106              	.LBE1586:
 8107              	.LBE1596:
 8108              	.LBE1606:
 8109              	.LBE1649:
 8110              	.LBB1650:
 8111              	.LBB1633:
 8112              	.LBB1622:
  92:delayline_reverse.h ****         
 8113              		.loc 18 92 57 view .LVU2150
 8114 0384 9B0C     		lsrs	r3, r3, #18
  99:delayline_reverse.h ****  
 8115              		.loc 18 99 50 view .LVU2151
 8116 0386 0CFB1E00 		mls	r0, ip, lr, r0
 8117              	.LBE1622:
 8118              	.LBE1633:
 8119              	.LBE1650:
 8120              	.LBB1651:
 8121              	.LBB1607:
 8122              	.LBB1597:
 8123              	.LBB1587:
 8124              		.loc 18 177 54 view .LVU2152
 8125 038a ACEE880A 		vfma.f32	s0, s25, s16
 8126              	.LVL561:
 8127              		.loc 18 177 54 view .LVU2153
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 264


 8128              	.LBE1587:
 8129              	.LBE1597:
  83:Veno-Echo.cpp ****     }
 8130              		.loc 19 83 9 is_stmt 1 view .LVU2154
  83:Veno-Echo.cpp ****     }
 8131              		.loc 19 83 9 is_stmt 0 view .LVU2155
 8132              	.LBE1607:
 8133              	.LBE1651:
 8134              	.LBB1652:
 8135              	.LBB1634:
 8136              	.LBB1623:
  92:delayline_reverse.h ****         
 8137              		.loc 18 92 57 view .LVU2156
 8138 038e 0CFB1363 		mls	r3, ip, r3, r6
  95:delayline_reverse.h **** 
 8139              		.loc 18 95 43 view .LVU2157
 8140 0392 D5E90472 		ldrd	r7, r2, [r5, #16]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 8141              		.loc 18 90 9 view .LVU2158
 8142 0396 CAED067A 		vstr.32	s15, [r10, #24]
  95:delayline_reverse.h **** 
 8143              		.loc 18 95 43 view .LVU2159
 8144 039a 3A44     		add	r2, r2, r7
 101:delayline_reverse.h ****         {
 8145              		.loc 18 101 36 view .LVU2160
 8146 039c DFF824A1 		ldr	r10, .L541+172
  95:delayline_reverse.h **** 
 8147              		.loc 18 95 43 view .LVU2161
 8148 03a0 0132     		adds	r2, r2, #1
 101:delayline_reverse.h ****         {
 8149              		.loc 18 101 36 view .LVU2162
 8150 03a2 55F80AE0 		ldr	lr, [r5, r10]
 101:delayline_reverse.h ****         {
 8151              		.loc 18 101 45 view .LVU2163
 8152 03a6 07F1FF3A 		add	r10, r7, #-1
 8153              	.LBE1623:
 8154              	.LBE1634:
 8155              	.LBE1652:
 382:Veno-Echo.cpp **** 
 8156              		.loc 19 382 50 view .LVU2164
 8157 03aa 8DED070A 		vstr.32	s0, [sp, #28]
 385:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 8158              		.loc 19 385 9 is_stmt 1 view .LVU2165
 8159              	.LVL562:
 8160              	.LBB1653:
 8161              	.LBI1614:
  92:Veno-Echo.cpp ****     {
 8162              		.loc 19 92 10 view .LVU2166
  92:Veno-Echo.cpp ****     {
 8163              		.loc 19 92 10 is_stmt 0 view .LVU2167
 8164              	.LBE1653:
 8165              	.LBE1778:
 8166              	.LBE1403:
  94:Veno-Echo.cpp ****     }
 8167              		.loc 19 94 9 is_stmt 1 view .LVU2168
 8168              	.LBB1790:
 8169              	.LBB1779:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 265


 8170              	.LBB1654:
 8171              	.LBB1635:
 8172              	.LBI1615:
  88:delayline_reverse.h ****     {
 8173              		.loc 18 88 17 view .LVU2169
 8174              	.LBB1624:
  99:delayline_reverse.h ****  
 8175              		.loc 18 99 9 is_stmt 0 view .LVU2170
 8176 03ae C5E90210 		strd	r1, r0, [r5, #8]
  95:delayline_reverse.h **** 
 8177              		.loc 18 95 54 view .LVU2171
 8178 03b2 B2FBF7F1 		udiv	r1, r2, r7
 101:delayline_reverse.h ****         {
 8179              		.loc 18 101 45 view .LVU2172
 8180 03b6 AAEB0E0A 		sub	r10, r10, lr
  95:delayline_reverse.h **** 
 8181              		.loc 18 95 54 view .LVU2173
 8182 03ba 07FB1122 		mls	r2, r7, r1, r2
  92:delayline_reverse.h ****         
 8183              		.loc 18 92 9 view .LVU2174
 8184 03be 6B60     		str	r3, [r5, #4]
 101:delayline_reverse.h ****         {
 8185              		.loc 18 101 9 view .LVU2175
 8186 03c0 5245     		cmp	r2, r10
  95:delayline_reverse.h **** 
 8187              		.loc 18 95 9 view .LVU2176
 8188 03c2 6A61     		str	r2, [r5, #20]
 101:delayline_reverse.h ****         {
 8189              		.loc 18 101 9 view .LVU2177
 8190 03c4 40F2CF82 		bls	.L441
 103:delayline_reverse.h ****             {
 8191              		.loc 18 103 17 view .LVU2178
 8192 03c8 3A49     		ldr	r1, .L541+156
 103:delayline_reverse.h ****             {
 8193              		.loc 18 103 13 view .LVU2179
 8194 03ca 685C     		ldrb	r0, [r5, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 8195              		.loc 18 103 17 view .LVU2180
 8196 03cc 6A18     		adds	r2, r5, r1
 103:delayline_reverse.h ****             {
 8197              		.loc 18 103 13 view .LVU2181
 8198 03ce 0028     		cmp	r0, #0
 8199 03d0 40F0CF82 		bne	.L532
 107:delayline_reverse.h ****                 {
 8200              		.loc 18 107 21 view .LVU2182
 8201 03d4 3848     		ldr	r0, .L541+160
 105:delayline_reverse.h ****                 
 8202              		.loc 18 105 17 view .LVU2183
 8203 03d6 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 8204              		.loc 18 110 45 view .LVU2184
 8205 03d8 013B     		subs	r3, r3, #1
 107:delayline_reverse.h ****                 {
 8206              		.loc 18 107 17 view .LVU2185
 8207 03da 2E5C     		ldrb	r6, [r5, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 8208              		.loc 18 107 21 view .LVU2186
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 266


 8209 03dc 2844     		add	r0, r0, r5
 105:delayline_reverse.h ****                 
 8210              		.loc 18 105 17 view .LVU2187
 8211 03de 6F54     		strb	r7, [r5, r1]
 107:delayline_reverse.h ****                 {
 8212              		.loc 18 107 17 view .LVU2188
 8213 03e0 002E     		cmp	r6, #0
 8214 03e2 40F0EB83 		bne	.L443
 110:delayline_reverse.h ****                 }
 8215              		.loc 18 110 21 view .LVU2189
 8216 03e6 EB60     		str	r3, [r5, #12]
 8217              	.L444:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 8218              		.loc 18 130 45 view .LVU2190
 8219 03e8 07EE90EA 		vmov	s15, lr	@ int
 8220              	.LVL563:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 8221              		.loc 18 130 45 view .LVU2191
 8222 03ec B7EE007A 		vmov.f32	s14, #1.0e+0
 8223 03f0 F8EE676A 		vcvt.f32.u32	s13, s15
 8224 03f4 C7EE267A 		vdiv.f32	s15, s14, s13
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 8225              		.loc 18 130 37 view .LVU2192
 8226 03f8 37EE8BBA 		vadd.f32	s22, s15, s22
 131:delayline_reverse.h ****                 {
 8227              		.loc 18 131 17 view .LVU2193
 8228 03fc B4EEC7BA 		vcmpe.f32	s22, s14
 8229 0400 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8230 0404 40F39183 		ble	.L533
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 8231              		.loc 18 133 21 view .LVU2194
 8232 0408 049B     		ldr	r3, [sp, #16]
 134:delayline_reverse.h ****                     playinghead_ = true;
 8233              		.loc 18 134 21 view .LVU2195
 8234 040a 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 8235              		.loc 18 133 21 view .LVU2196
 8236 040c 83ED007A 		vstr.32	s14, [r3]
 135:delayline_reverse.h ****                 }
 8237              		.loc 18 135 21 view .LVU2197
 8238 0410 0123     		movs	r3, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 8239              		.loc 18 134 21 view .LVU2198
 8240 0412 1170     		strb	r1, [r2]
 135:delayline_reverse.h ****                 }
 8241              		.loc 18 135 21 view .LVU2199
 8242 0414 0370     		strb	r3, [r0]
 8243 0416 57E0     		b	.L542
 8244              	.L543:
 8245              		.align	2
 8246              	.L541:
 8247 0418 00000000 		.word	.LANCHOR72
 8248 041c 00000000 		.word	.LANCHOR0
 8249 0420 00000000 		.word	.LANCHOR73
 8250 0424 00000000 		.word	.LANCHOR1
 8251 0428 00000000 		.word	.LANCHOR32
 8252 042c 00000000 		.word	.LANCHOR40
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 267


 8253 0430 00000000 		.word	.LANCHOR27
 8254 0434 00000000 		.word	.LANCHOR78
 8255 0438 00000000 		.word	.LANCHOR60
 8256 043c 00000000 		.word	.LANCHOR66
 8257 0440 00000000 		.word	.LANCHOR61
 8258 0444 00000000 		.word	.LANCHOR67
 8259 0448 00000000 		.word	.LANCHOR59
 8260 044c 00000000 		.word	.LANCHOR69
 8261 0450 00000000 		.word	.LANCHOR58
 8262 0454 00000000 		.word	.LANCHOR68
 8263 0458 00000000 		.word	.LANCHOR70
 8264 045c 00000000 		.word	.LANCHOR2
 8265 0460 00000000 		.word	.LANCHOR71
 8266 0464 00000000 		.word	.LANCHOR81
 8267 0468 DB0FC93F 		.word	1070141403
 8268 046c 00000000 		.word	.LANCHOR82
 8269 0470 00000000 		.word	.LANCHOR85
 8270 0474 00000000 		.word	.LANCHOR39
 8271 0478 00000000 		.word	.LANCHOR86
 8272 047c 00000000 		.word	.LANCHOR83
 8273 0480 E4CB9640 		.word	1083624420
 8274 0484 00000000 		.word	.LANCHOR84
 8275 0488 0000803D 		.word	1031798784
 8276 048c 00000000 		.word	.LANCHOR87
 8277 0490 00000000 		.word	.LANCHOR88
 8278 0494 00000000 		.word	.LANCHOR89
 8279 0498 00000000 		.word	.LANCHOR90
 8280 049c 00000000 		.word	.LANCHOR91
 8281 04a0 00000000 		.word	.LANCHOR92
 8282 04a4 00000000 		.word	.LANCHOR3
 8283 04a8 BF270900 		.word	599999
 8284 04ac 851DD96F 		.word	1876499845
 8285 04b0 C1270900 		.word	600001
 8286 04b4 249F2400 		.word	2400036
 8287 04b8 1C9F2400 		.word	2400028
 8288 04bc 209F2400 		.word	2400032
 8289 04c0 C0270900 		.word	600000
 8290 04c4 189F2400 		.word	2400024
 8291              	.L542:
 8292              	.LVL564:
 8293              	.L447:
 135:delayline_reverse.h ****                 }
 8294              		.loc 18 135 21 view .LVU2200
 8295              	.LBE1624:
 8296              	.LBE1635:
 8297              	.LBE1654:
 386:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 8298              		.loc 19 386 9 is_stmt 1 view .LVU2201
 8299              	.LBB1655:
 8300              	.LBB1656:
 8301              	.LBB1657:
  95:delayline_reverse.h **** 
 8302              		.loc 18 95 45 is_stmt 0 view .LVU2202
 8303 04c8 2169     		ldr	r1, [r4, #16]
 8304 04ca 0BF10403 		add	r3, fp, #4
  95:delayline_reverse.h **** 
 8305              		.loc 18 95 43 view .LVU2203
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 268


 8306 04ce 6069     		ldr	r0, [r4, #20]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 8307              		.loc 18 90 15 view .LVU2204
 8308 04d0 6568     		ldr	r5, [r4, #4]
 8309 04d2 08EE103A 		vmov	s16, r3	@ int
  95:delayline_reverse.h **** 
 8310              		.loc 18 95 43 view .LVU2205
 8311 04d6 0844     		add	r0, r0, r1
  92:delayline_reverse.h ****         
 8312              		.loc 18 92 45 view .LVU2206
 8313 04d8 B14F     		ldr	r7, .L544
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 8314              		.loc 18 90 9 view .LVU2207
 8315 04da 04EB850E 		add	lr, r4, r5, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 8316              		.loc 18 98 38 view .LVU2208
 8317 04de B14B     		ldr	r3, .L544+4
  95:delayline_reverse.h **** 
 8318              		.loc 18 95 43 view .LVU2209
 8319 04e0 421C     		adds	r2, r0, #1
  92:delayline_reverse.h ****         
 8320              		.loc 18 92 45 view .LVU2210
 8321 04e2 2F44     		add	r7, r7, r5
 101:delayline_reverse.h ****         {
 8322              		.loc 18 101 45 view .LVU2211
 8323 04e4 01F1FF3C 		add	ip, r1, #-1
 8324              	.LBE1657:
 8325              	.LBE1656:
 8326              	.LBE1655:
 386:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 8327              		.loc 19 386 26 view .LVU2212
 8328 04e8 DBED017A 		vldr.32	s15, [fp, #4]
 8329              	.LVL565:
 8330              	.LBB1666:
 8331              	.LBI1655:
  92:Veno-Echo.cpp ****     {
 8332              		.loc 19 92 10 is_stmt 1 view .LVU2213
  92:Veno-Echo.cpp ****     {
 8333              		.loc 19 92 10 is_stmt 0 view .LVU2214
 8334              	.LBE1666:
 8335              	.LBE1779:
 8336              	.LBE1790:
  94:Veno-Echo.cpp ****     }
 8337              		.loc 19 94 9 is_stmt 1 view .LVU2215
 8338              	.LBB1791:
 8339              	.LBB1780:
 8340              	.LBB1667:
 8341              	.LBB1662:
 8342              	.LBI1656:
  88:delayline_reverse.h ****     {
 8343              		.loc 18 88 17 view .LVU2216
 8344              	.LBB1658:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 8345              		.loc 18 98 38 is_stmt 0 view .LVU2217
 8346 04ec D4E90205 		ldrd	r0, r5, [r4, #8]
 8347 04f0 00EB030A 		add	r10, r0, r3
  99:delayline_reverse.h ****  
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 269


 8348              		.loc 18 99 38 view .LVU2218
 8349 04f4 1D44     		add	r5, r5, r3
  92:delayline_reverse.h ****         
 8350              		.loc 18 92 57 view .LVU2219
 8351 04f6 03F1E043 		add	r3, r3, #1879048192
  95:delayline_reverse.h **** 
 8352              		.loc 18 95 54 view .LVU2220
 8353 04fa B2FBF1F0 		udiv	r0, r2, r1
 8354 04fe 01FB1020 		mls	r0, r1, r0, r2
 101:delayline_reverse.h ****         {
 8355              		.loc 18 101 36 view .LVU2221
 8356 0502 A949     		ldr	r1, .L544+8
  92:delayline_reverse.h ****         
 8357              		.loc 18 92 57 view .LVU2222
 8358 0504 A3F54013 		sub	r3, r3, #3145728
 101:delayline_reverse.h ****         {
 8359              		.loc 18 101 36 view .LVU2223
 8360 0508 6158     		ldr	r1, [r4, r1]
  92:delayline_reverse.h ****         
 8361              		.loc 18 92 57 view .LVU2224
 8362 050a A3F63A23 		subw	r3, r3, #2618
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 8363              		.loc 18 90 9 view .LVU2225
 8364 050e CEED067A 		vstr.32	s15, [lr, #24]
 101:delayline_reverse.h ****         {
 8365              		.loc 18 101 36 view .LVU2226
 8366 0512 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 8367              		.loc 18 92 57 view .LVU2227
 8368 0514 A3FB0762 		umull	r6, r2, r3, r7
 8369 0518 DFF8C8E2 		ldr	lr, .L544+68
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 8370              		.loc 18 98 50 view .LVU2228
 8371 051c A3FB0A61 		umull	r6, r1, r3, r10
  99:delayline_reverse.h ****  
 8372              		.loc 18 99 50 view .LVU2229
 8373 0520 A3FB0563 		umull	r6, r3, r3, r5
 101:delayline_reverse.h ****         {
 8374              		.loc 18 101 45 view .LVU2230
 8375 0524 019E     		ldr	r6, [sp, #4]
  92:delayline_reverse.h ****         
 8376              		.loc 18 92 57 view .LVU2231
 8377 0526 920C     		lsrs	r2, r2, #18
  95:delayline_reverse.h **** 
 8378              		.loc 18 95 9 view .LVU2232
 8379 0528 6061     		str	r0, [r4, #20]
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 8380              		.loc 18 98 50 view .LVU2233
 8381 052a 890C     		lsrs	r1, r1, #18
 101:delayline_reverse.h ****         {
 8382              		.loc 18 101 45 view .LVU2234
 8383 052c ACEB060C 		sub	ip, ip, r6
  99:delayline_reverse.h ****  
 8384              		.loc 18 99 50 view .LVU2235
 8385 0530 9B0C     		lsrs	r3, r3, #18
  92:delayline_reverse.h ****         
 8386              		.loc 18 92 57 view .LVU2236
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 270


 8387 0532 0EFB1272 		mls	r2, lr, r2, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 8388              		.loc 18 98 50 view .LVU2237
 8389 0536 0EFB11A1 		mls	r1, lr, r1, r10
 101:delayline_reverse.h ****         {
 8390              		.loc 18 101 9 view .LVU2238
 8391 053a 6045     		cmp	r0, ip
  99:delayline_reverse.h ****  
 8392              		.loc 18 99 50 view .LVU2239
 8393 053c 0EFB1353 		mls	r3, lr, r3, r5
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 8394              		.loc 18 98 9 view .LVU2240
 8395 0540 C4E90121 		strd	r2, r1, [r4, #4]
  99:delayline_reverse.h ****  
 8396              		.loc 18 99 9 view .LVU2241
 8397 0544 E360     		str	r3, [r4, #12]
 101:delayline_reverse.h ****         {
 8398              		.loc 18 101 9 view .LVU2242
 8399 0546 40F2EB81 		bls	.L451
 103:delayline_reverse.h ****             {
 8400              		.loc 18 103 17 view .LVU2243
 8401 054a 9849     		ldr	r1, .L544+12
 103:delayline_reverse.h ****             {
 8402              		.loc 18 103 13 view .LVU2244
 8403 054c 605C     		ldrb	r0, [r4, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 8404              		.loc 18 103 17 view .LVU2245
 8405 054e 6318     		adds	r3, r4, r1
 103:delayline_reverse.h ****             {
 8406              		.loc 18 103 13 view .LVU2246
 8407 0550 0028     		cmp	r0, #0
 8408 0552 40F0EB81 		bne	.L534
 107:delayline_reverse.h ****                 {
 8409              		.loc 18 107 21 view .LVU2247
 8410 0556 9648     		ldr	r0, .L544+16
 105:delayline_reverse.h ****                 
 8411              		.loc 18 105 17 view .LVU2248
 8412 0558 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 8413              		.loc 18 110 45 view .LVU2249
 8414 055a 013A     		subs	r2, r2, #1
 107:delayline_reverse.h ****                 {
 8415              		.loc 18 107 17 view .LVU2250
 8416 055c 255C     		ldrb	r5, [r4, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 8417              		.loc 18 107 21 view .LVU2251
 8418 055e 2044     		add	r0, r0, r4
 105:delayline_reverse.h ****                 
 8419              		.loc 18 105 17 view .LVU2252
 8420 0560 6754     		strb	r7, [r4, r1]
 107:delayline_reverse.h ****                 {
 8421              		.loc 18 107 17 view .LVU2253
 8422 0562 002D     		cmp	r5, #0
 8423 0564 40F02C83 		bne	.L453
 110:delayline_reverse.h ****                 }
 8424              		.loc 18 110 21 view .LVU2254
 8425 0568 E260     		str	r2, [r4, #12]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 271


 8426              	.L454:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 8427              		.loc 18 130 45 view .LVU2255
 8428 056a DDED017A 		vldr.32	s15, [sp, #4]	@ int
 8429              	.LVL566:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 8430              		.loc 18 130 45 view .LVU2256
 8431 056e B7EE007A 		vmov.f32	s14, #1.0e+0
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 8432              		.loc 18 130 37 view .LVU2257
 8433 0572 039A     		ldr	r2, [sp, #12]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 8434              		.loc 18 130 45 view .LVU2258
 8435 0574 B8EE676A 		vcvt.f32.u32	s12, s15
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 8436              		.loc 18 130 37 view .LVU2259
 8437 0578 D2ED006A 		vldr.32	s13, [r2]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 8438              		.loc 18 130 45 view .LVU2260
 8439 057c C7EE067A 		vdiv.f32	s15, s14, s12
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 8440              		.loc 18 130 37 view .LVU2261
 8441 0580 77EEA67A 		vadd.f32	s15, s15, s13
 131:delayline_reverse.h ****                 {
 8442              		.loc 18 131 17 view .LVU2262
 8443 0584 F4EEC77A 		vcmpe.f32	s15, s14
 8444 0588 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8445 058c 40F31F83 		ble	.L536
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 8446              		.loc 18 133 21 view .LVU2263
 8447 0590 039A     		ldr	r2, [sp, #12]
 134:delayline_reverse.h ****                     playinghead_ = true;
 8448              		.loc 18 134 21 view .LVU2264
 8449 0592 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 8450              		.loc 18 133 21 view .LVU2265
 8451 0594 82ED007A 		vstr.32	s14, [r2]
 135:delayline_reverse.h ****                 }
 8452              		.loc 18 135 21 view .LVU2266
 8453 0598 0122     		movs	r2, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 8454              		.loc 18 134 21 view .LVU2267
 8455 059a 1970     		strb	r1, [r3]
 135:delayline_reverse.h ****                 }
 8456              		.loc 18 135 21 view .LVU2268
 8457 059c 0270     		strb	r2, [r0]
 8458              	.LVL567:
 8459              	.L457:
 135:delayline_reverse.h ****                 }
 8460              		.loc 18 135 21 view .LVU2269
 8461              	.LBE1658:
 8462              	.LBE1662:
 8463              	.LBE1667:
 391:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 8464              		.loc 19 391 9 is_stmt 1 view .LVU2270
 391:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 8465              		.loc 19 391 56 is_stmt 0 view .LVU2271
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 272


 8466 059e 06AA     		add	r2, sp, #24
 8467 05a0 5946     		mov	r1, fp
 8468 05a2 8448     		ldr	r0, .L544+20
 8469 05a4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 8470              	.LVL568:
 392:Veno-Echo.cpp **** 
 8471              		.loc 19 392 56 view .LVU2272
 8472 05a8 18EE101A 		vmov	r1, s16	@ int
 8473 05ac 07AA     		add	r2, sp, #28
 8474 05ae 8248     		ldr	r0, .L544+24
 391:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 8475              		.loc 19 391 56 view .LVU2273
 8476 05b0 F0EE408A 		vmov.f32	s17, s0
 8477              	.LVL569:
 392:Veno-Echo.cpp **** 
 8478              		.loc 19 392 9 is_stmt 1 view .LVU2274
 392:Veno-Echo.cpp **** 
 8479              		.loc 19 392 56 is_stmt 0 view .LVU2275
 8480 05b4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 8481              	.LVL570:
 395:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 8482              		.loc 19 395 46 view .LVU2276
 8483 05b8 8048     		ldr	r0, .L544+28
 392:Veno-Echo.cpp **** 
 8484              		.loc 19 392 56 view .LVU2277
 8485 05ba B0EE408A 		vmov.f32	s16, s0
 8486              	.LVL571:
 395:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 8487              		.loc 19 395 9 is_stmt 1 view .LVU2278
 395:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 8488              		.loc 19 395 46 is_stmt 0 view .LVU2279
 8489 05be FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 8490              	.LVL572:
 395:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 8491              		.loc 19 395 46 view .LVU2280
 8492 05c2 0346     		mov	r3, r0
 396:Veno-Echo.cpp ****         //Update Base Tempo LED
 8493              		.loc 19 396 46 view .LVU2281
 8494 05c4 7E48     		ldr	r0, .L544+32
 395:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 8495              		.loc 19 395 45 view .LVU2282
 8496 05c6 1B68     		ldr	r3, [r3]	@ float
 395:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 8497              		.loc 19 395 47 view .LVU2283
 8498 05c8 0893     		str	r3, [sp, #32]	@ float
 396:Veno-Echo.cpp ****         //Update Base Tempo LED
 8499              		.loc 19 396 9 is_stmt 1 view .LVU2284
 396:Veno-Echo.cpp ****         //Update Base Tempo LED
 8500              		.loc 19 396 46 is_stmt 0 view .LVU2285
 8501 05ca FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 8502              	.LVL573:
 396:Veno-Echo.cpp ****         //Update Base Tempo LED
 8503              		.loc 19 396 45 view .LVU2286
 8504 05ce 0368     		ldr	r3, [r0]	@ float
 396:Veno-Echo.cpp ****         //Update Base Tempo LED
 8505              		.loc 19 396 47 view .LVU2287
 8506 05d0 0993     		str	r3, [sp, #36]	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 273


 398:Veno-Echo.cpp **** 
 8507              		.loc 19 398 9 is_stmt 1 view .LVU2288
 398:Veno-Echo.cpp **** 
 8508              		.loc 19 398 28 is_stmt 0 view .LVU2289
 8509 05d2 FFF7FEFF 		bl	_Z19Update_BaseTempoLEDv
 8510              	.LVL574:
 401:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 8511              		.loc 19 401 9 is_stmt 1 view .LVU2290
 8512              	.LBB1668:
 8513              	.LBB1669:
1599:Veno-Echo.cpp ****         returnval = limit;
 8514              		.loc 19 1599 5 is_stmt 0 view .LVU2291
 8515 05d6 B0EE007A 		vmov.f32	s14, #2.0e+0
 8516              	.LBE1669:
 8517              	.LBE1668:
 401:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 8518              		.loc 19 401 34 view .LVU2292
 8519 05da DDED087A 		vldr.32	s15, [sp, #32]
 8520              	.LVL575:
 8521              	.LBB1672:
 8522              	.LBI1668:
1596:Veno-Echo.cpp **** {
 8523              		.loc 19 1596 7 is_stmt 1 view .LVU2293
 8524              	.LBB1670:
1598:Veno-Echo.cpp ****     if (input > limit)
 8525              		.loc 19 1598 5 view .LVU2294
1599:Veno-Echo.cpp ****         returnval = limit;
 8526              		.loc 19 1599 5 view .LVU2295
 8527 05de F4EEC77A 		vcmpe.f32	s15, s14
 8528 05e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8529 05e6 00F39881 		bgt	.L498
1601:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8530              		.loc 19 1601 10 view .LVU2296
 8531 05ea B8EE007A 		vmov.f32	s14, #-2.0e+0
1602:Veno-Echo.cpp ****     else
 8532              		.loc 19 1602 19 is_stmt 0 view .LVU2297
 8533 05ee F4EE477A 		vcmp.f32	s15, s14
 8534 05f2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8535 05f6 48BF     		it	mi
 8536 05f8 F0EE477A 		vmovmi.f32	s15, s14
 8537              	.LVL576:
 8538              	.L461:
1606:Veno-Echo.cpp **** }
 8539              		.loc 19 1606 5 is_stmt 1 view .LVU2298
1606:Veno-Echo.cpp **** }
 8540              		.loc 19 1606 5 is_stmt 0 view .LVU2299
 8541              	.LBE1670:
 8542              	.LBE1672:
 8543              	.LBB1673:
 8544              	.LBB1674:
1599:Veno-Echo.cpp ****         returnval = limit;
 8545              		.loc 19 1599 5 view .LVU2300
 8546 05fc B0EE007A 		vmov.f32	s14, #2.0e+0
 8547              	.LBE1674:
 8548              	.LBE1673:
 402:Veno-Echo.cpp **** 
 8549              		.loc 19 402 34 view .LVU2301
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 274


 8550 0600 9DED090A 		vldr.32	s0, [sp, #36]
 401:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 8551              		.loc 19 401 23 view .LVU2302
 8552 0604 CDED087A 		vstr.32	s15, [sp, #32]
 402:Veno-Echo.cpp **** 
 8553              		.loc 19 402 9 is_stmt 1 view .LVU2303
 8554              	.LVL577:
 8555              	.LBB1678:
 8556              	.LBI1673:
1596:Veno-Echo.cpp **** {
 8557              		.loc 19 1596 7 view .LVU2304
 8558              	.LBB1675:
1598:Veno-Echo.cpp ****     if (input > limit)
 8559              		.loc 19 1598 5 view .LVU2305
1599:Veno-Echo.cpp ****         returnval = limit;
 8560              		.loc 19 1599 5 view .LVU2306
 8561 0608 B4EEC70A 		vcmpe.f32	s0, s14
 8562 060c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8563 0610 00F3EA80 		bgt	.L499
1601:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8564              		.loc 19 1601 10 view .LVU2307
 8565 0614 B8EE007A 		vmov.f32	s14, #-2.0e+0
 8566              	.LBE1675:
 8567              	.LBE1678:
 8568              	.LBB1679:
 404:Veno-Echo.cpp **** {
 8569              		.loc 19 404 1 is_stmt 0 view .LVU2308
 8570 0618 6A4B     		ldr	r3, .L544+36
 8571 061a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8572              	.LBE1679:
 8573              	.LBB1701:
 8574              	.LBB1676:
1602:Veno-Echo.cpp ****     else
 8575              		.loc 19 1602 19 view .LVU2309
 8576 061c B4EE470A 		vcmp.f32	s0, s14
 8577 0620 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8578 0624 48BF     		it	mi
 8579 0626 B0EE470A 		vmovmi.f32	s0, s14
 8580              	.LVL578:
1606:Veno-Echo.cpp **** }
 8581              		.loc 19 1606 5 is_stmt 1 view .LVU2310
1606:Veno-Echo.cpp **** }
 8582              		.loc 19 1606 5 is_stmt 0 view .LVU2311
 8583              	.LBE1676:
 8584              	.LBE1701:
 402:Veno-Echo.cpp **** 
 8585              		.loc 19 402 23 view .LVU2312
 8586 062a 8DED090A 		vstr.32	s0, [sp, #36]
 404:Veno-Echo.cpp **** {
 8587              		.loc 19 404 1 is_stmt 1 view .LVU2313
 8588              	.LBB1702:
 8589 062e 002B     		cmp	r3, #0
 8590 0630 00F0E380 		beq	.L537
 8591              	.L465:
 8592              	.LBE1702:
 448:Veno-Echo.cpp ****         static float RNegFB{};
 8593              		.loc 19 448 9 view .LVU2314
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 275


 449:Veno-Echo.cpp **** 
 8594              		.loc 19 449 9 view .LVU2315
 452:Veno-Echo.cpp ****             LNegFB = 0.0f;
 8595              		.loc 19 452 9 view .LVU2316
 452:Veno-Echo.cpp ****             LNegFB = 0.0f;
 8596              		.loc 19 452 22 is_stmt 0 view .LVU2317
 8597 0634 644B     		ldr	r3, .L544+40
 8598              	.LBB1703:
 8599              	.LBB1704:
  53:envFollow.h   **** 
  54:envFollow.h   ****     float GetEnv(float sample)
  55:envFollow.h   ****     {
  56:envFollow.h   ****         //remove average DC offset:
  57:envFollow.h   ****         avg = (w * sample) + ((1-w) * avg);
 8600              		.loc 12 57 16 view .LVU2318
 8601 0636 D8ED042A 		vldr.32	s5, [r8, #16]
 8602              	.LBE1704:
 8603              	.LBE1703:
 452:Veno-Echo.cpp ****             LNegFB = 0.0f;
 8604              		.loc 19 452 22 view .LVU2319
 8605 063a D3ED004A 		vldr.32	s9, [r3]
 8606 063e 634B     		ldr	r3, .L544+44
 8607              	.LBB1716:
 8608              	.LBB1705:
 8609              		.loc 12 57 37 view .LVU2320
 8610 0640 98ED006A 		vldr.32	s12, [r8]
 8611              	.LBE1705:
 8612              	.LBE1716:
 452:Veno-Echo.cpp ****             LNegFB = 0.0f;
 8613              		.loc 19 452 22 view .LVU2321
 8614 0644 93ED007A 		vldr.32	s14, [r3]
 455:Veno-Echo.cpp ****             RNegFB = 0.0f;
 8615              		.loc 19 455 22 view .LVU2322
 8616 0648 614B     		ldr	r3, .L544+48
 452:Veno-Echo.cpp ****             LNegFB = 0.0f;
 8617              		.loc 19 452 9 view .LVU2323
 8618 064a F4EEC74A 		vcmpe.f32	s9, s14
 8619              	.LBB1717:
 8620              	.LBB1718:
 8621              		.loc 12 57 16 view .LVU2324
 8622 064e D9ED043A 		vldr.32	s7, [r9, #16]
  58:envFollow.h   ****         sample_noDC = sample - avg;
  59:envFollow.h   **** 
  60:envFollow.h   ****         //take absolute
  61:envFollow.h   ****         pos_sample = fabsf(sample_noDC);
  62:envFollow.h   ****         //return static_cast<int>(pos_sample);
  63:envFollow.h   **** 
  64:envFollow.h   ****         //remove ripple
  65:envFollow.h   ****         avg_env = (w_env * pos_sample) + ((1-w_env) * avg_env);
 8623              		.loc 12 65 20 view .LVU2325
 8624 0652 99ED054A 		vldr.32	s8, [r9, #20]
 8625              		.loc 12 65 53 view .LVU2326
 8626 0656 99ED032A 		vldr.32	s4, [r9, #12]
 8627              	.LBE1718:
 8628              	.LBE1717:
 452:Veno-Echo.cpp ****             LNegFB = 0.0f;
 8629              		.loc 19 452 9 view .LVU2327
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 276


 8630 065a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8631              	.LBB1727:
 8632              	.LBB1706:
 8633              		.loc 12 65 20 view .LVU2328
 8634 065e 98ED053A 		vldr.32	s6, [r8, #20]
 8635              		.loc 12 65 53 view .LVU2329
 8636 0662 98ED031A 		vldr.32	s2, [r8, #12]
 8637              	.LBE1706:
 8638              	.LBE1727:
 471:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 8639              		.loc 19 471 13 view .LVU2330
 8640 0666 DFED5B1A 		vldr.32	s3, .L544+52
 8641 066a 58BF     		it	pl
 8642 066c 74EEC74A 		vsubpl.f32	s9, s9, s14
 455:Veno-Echo.cpp ****             RNegFB = 0.0f;
 8643              		.loc 19 455 9 is_stmt 1 view .LVU2331
 455:Veno-Echo.cpp ****             RNegFB = 0.0f;
 8644              		.loc 19 455 22 is_stmt 0 view .LVU2332
 8645 0670 93ED007A 		vldr.32	s14, [r3]
 8646 0674 584B     		ldr	r3, .L544+56
 8647 0676 D3ED006A 		vldr.32	s13, [r3]
 458:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 8648              		.loc 19 458 15 view .LVU2333
 8649 067a 67EEA44A 		vmul.f32	s9, s15, s9
 8650              	.LBB1728:
 8651              	.LBB1719:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 8652              		.loc 12 57 37 view .LVU2334
 8653 067e D9ED007A 		vldr.32	s15, [r9]
 8654              	.LBE1719:
 8655              	.LBE1728:
 455:Veno-Echo.cpp ****             RNegFB = 0.0f;
 8656              		.loc 19 455 9 view .LVU2335
 8657 0682 B4EEE67A 		vcmpe.f32	s14, s13
 462:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 8658              		.loc 19 462 36 view .LVU2336
 8659 0686 554B     		ldr	r3, .L544+60
 455:Veno-Echo.cpp ****             RNegFB = 0.0f;
 8660              		.loc 19 455 9 view .LVU2337
 8661 0688 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8662 068c 58BF     		it	pl
 8663 068e 37EE667A 		vsubpl.f32	s14, s14, s13
 458:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 8664              		.loc 19 458 9 is_stmt 1 view .LVU2338
 8665              	.LVL579:
 459:Veno-Echo.cpp **** 
 8666              		.loc 19 459 9 view .LVU2339
 462:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 8667              		.loc 19 462 36 is_stmt 0 view .LVU2340
 8668 0692 F7EE006A 		vmov.f32	s13, #1.0e+0
 459:Veno-Echo.cpp **** 
 8669              		.loc 19 459 15 view .LVU2341
 8670 0696 20EE070A 		vmul.f32	s0, s0, s14
 8671              	.LVL580:
 462:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 8672              		.loc 19 462 9 is_stmt 1 view .LVU2342
 8673              	.LBB1729:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 277


 8674              	.LBB1707:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 8675              		.loc 12 57 33 is_stmt 0 view .LVU2343
 8676 069a 36EEE25A 		vsub.f32	s10, s13, s5
 8677              	.LBE1707:
 8678              	.LBE1729:
 8679              	.LBB1730:
 8680              	.LBB1720:
 8681 069e 76EEE35A 		vsub.f32	s11, s13, s7
 8682              	.LBE1720:
 8683              	.LBE1730:
 8684              	.LBB1731:
 8685              	.LBB1708:
 8686              		.loc 12 65 45 view .LVU2344
 8687 06a2 36EEC37A 		vsub.f32	s14, s13, s6
  57:envFollow.h   ****         sample_noDC = sample - avg;
 8688              		.loc 12 57 37 view .LVU2345
 8689 06a6 25EE065A 		vmul.f32	s10, s10, s12
 8690              	.LBE1708:
 8691              	.LBE1731:
 462:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 8692              		.loc 19 462 36 view .LVU2346
 8693 06aa 93ED006A 		vldr.32	s12, [r3]
 8694              	.LBB1732:
 8695              	.LBB1721:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 8696              		.loc 12 57 37 view .LVU2347
 8697 06ae 65EEA75A 		vmul.f32	s11, s11, s15
 8698              		.loc 12 65 45 view .LVU2348
 8699 06b2 76EEC47A 		vsub.f32	s15, s13, s8
 8700              	.LBE1721:
 8701              	.LBE1732:
 8702              	.LBB1733:
 8703              	.LBB1709:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 8704              		.loc 12 57 28 view .LVU2349
 8705 06b6 A4EEA25A 		vfma.f32	s10, s9, s5
 8706              	.LBE1709:
 8707              	.LBE1733:
 8708              	.LBB1734:
 8709              	.LBB1722:
 8710 06ba E0EE235A 		vfma.f32	s11, s0, s7
 8711              		.loc 12 65 53 view .LVU2350
 8712 06be 67EE827A 		vmul.f32	s15, s15, s4
 8713              	.LBE1722:
 8714              	.LBE1734:
 8715              	.LBB1735:
 8716              	.LBB1710:
 8717 06c2 27EE017A 		vmul.f32	s14, s14, s2
 8718              	.LBE1710:
 8719              	.LBE1735:
 462:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 8720              		.loc 19 462 36 view .LVU2351
 8721 06c6 76EEC66A 		vsub.f32	s13, s13, s12
 8722              	.LBB1736:
 8723              	.LBB1711:
  58:envFollow.h   **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 278


 8724              		.loc 12 58 30 view .LVU2352
 8725 06ca 34EEC52A 		vsub.f32	s4, s9, s10
  57:envFollow.h   ****         sample_noDC = sample - avg;
 8726              		.loc 12 57 13 view .LVU2353
 8727 06ce 88ED005A 		vstr.32	s10, [r8]
 8728              	.LBE1711:
 8729              	.LBE1736:
 8730              	.LBB1737:
 8731              	.LBB1723:
  58:envFollow.h   **** 
 8732              		.loc 12 58 30 view .LVU2354
 8733 06d2 70EE652A 		vsub.f32	s5, s0, s11
  57:envFollow.h   ****         sample_noDC = sample - avg;
 8734              		.loc 12 57 13 view .LVU2355
 8735 06d6 C9ED005A 		vstr.32	s11, [r9]
 8736              	.LBE1723:
 8737              	.LBE1737:
 462:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 8738              		.loc 19 462 89 view .LVU2356
 8739 06da 66EE005A 		vmul.f32	s11, s12, s0
 8740              	.LBB1738:
 8741              	.LBB1712:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 8742              		.loc 12 61 27 view .LVU2357
 8743 06de F0EEC23A 		vabs.f32	s7, s4
  58:envFollow.h   **** 
 8744              		.loc 12 58 21 view .LVU2358
 8745 06e2 88ED022A 		vstr.32	s4, [r8, #8]
 8746              	.LBE1712:
 8747              	.LBE1738:
 8748              	.LBB1739:
 8749              	.LBB1724:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 8750              		.loc 12 61 27 view .LVU2359
 8751 06e6 B0EEE25A 		vabs.f32	s10, s5
  58:envFollow.h   **** 
 8752              		.loc 12 58 21 view .LVU2360
 8753 06ea C9ED022A 		vstr.32	s5, [r9, #8]
 8754              	.LBE1724:
 8755              	.LBE1739:
 463:Veno-Echo.cpp **** 
 8756              		.loc 19 463 89 view .LVU2361
 8757 06ee 26EE246A 		vmul.f32	s12, s12, s9
 8758              	.LBB1740:
 8759              	.LBB1713:
 8760              		.loc 12 65 40 view .LVU2362
 8761 06f2 A3EE837A 		vfma.f32	s14, s7, s6
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 8762              		.loc 12 61 20 view .LVU2363
 8763 06f6 C8ED013A 		vstr.32	s7, [r8, #4]
 8764              	.LBE1713:
 8765              	.LBE1740:
 8766              	.LBB1741:
 8767              	.LBB1725:
 8768              		.loc 12 65 40 view .LVU2364
 8769 06fa E5EE047A 		vfma.f32	s15, s10, s8
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 279


 8770              		.loc 12 61 20 view .LVU2365
 8771 06fe 89ED015A 		vstr.32	s10, [r9, #4]
 8772              	.LBE1725:
 8773              	.LBE1741:
 462:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 8774              		.loc 19 462 15 view .LVU2366
 8775 0702 E6EEA45A 		vfma.f32	s11, s13, s9
 8776              	.LVL581:
 463:Veno-Echo.cpp **** 
 8777              		.loc 19 463 9 is_stmt 1 view .LVU2367
 463:Veno-Echo.cpp **** 
 8778              		.loc 19 463 15 is_stmt 0 view .LVU2368
 8779 0706 A6EE806A 		vfma.f32	s12, s13, s0
 8780              	.LVL582:
 467:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 8781              		.loc 19 467 9 is_stmt 1 view .LVU2369
 8782              	.LBB1742:
 8783              	.LBI1703:
  54:envFollow.h   ****     {
 8784              		.loc 12 54 11 view .LVU2370
 8785              	.LBB1714:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 8786              		.loc 12 57 9 view .LVU2371
  58:envFollow.h   **** 
 8787              		.loc 12 58 9 view .LVU2372
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 8788              		.loc 12 61 9 view .LVU2373
 8789              		.loc 12 65 9 view .LVU2374
 8790              	.LBE1714:
 8791              	.LBE1742:
 471:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 8792              		.loc 19 471 13 is_stmt 0 view .LVU2375
 8793 070a B4EEE17A 		vcmpe.f32	s14, s3
 8794              	.LBB1743:
 8795              	.LBB1715:
 8796              		.loc 12 65 17 view .LVU2376
 8797 070e 88ED037A 		vstr.32	s14, [r8, #12]
  66:envFollow.h   **** 
  67:envFollow.h   ****         return avg_env;
 8798              		.loc 12 67 9 is_stmt 1 view .LVU2377
 8799              	.LVL583:
 8800              		.loc 12 67 9 is_stmt 0 view .LVU2378
 8801              	.LBE1715:
 8802              	.LBE1743:
 468:Veno-Echo.cpp **** 
 8803              		.loc 19 468 9 is_stmt 1 view .LVU2379
 8804              	.LBB1744:
 8805              	.LBI1717:
  54:envFollow.h   ****     {
 8806              		.loc 12 54 11 view .LVU2380
 8807              	.LBB1726:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 8808              		.loc 12 57 9 view .LVU2381
  58:envFollow.h   **** 
 8809              		.loc 12 58 9 view .LVU2382
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 8810              		.loc 12 61 9 view .LVU2383
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 280


  65:envFollow.h   **** 
 8811              		.loc 12 65 9 view .LVU2384
  65:envFollow.h   **** 
 8812              		.loc 12 65 17 is_stmt 0 view .LVU2385
 8813 0712 C9ED037A 		vstr.32	s15, [r9, #12]
 8814              		.loc 12 67 9 is_stmt 1 view .LVU2386
 8815              	.LVL584:
 8816              		.loc 12 67 9 is_stmt 0 view .LVU2387
 8817              	.LBE1726:
 8818              	.LBE1744:
 471:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 8819              		.loc 19 471 13 is_stmt 1 view .LVU2388
 8820 0716 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8821 071a 3DDB     		blt	.L527
 472:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 8822              		.loc 19 472 17 view .LVU2389
 472:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 8823              		.loc 19 472 32 is_stmt 0 view .LVU2390
 8824 071c 37EE617A 		vsub.f32	s14, s14, s3
 8825              	.LVL585:
 472:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 8826              		.loc 19 472 47 view .LVU2391
 8827 0720 F0EE086A 		vmov.f32	s13, #3.0e+0
 8828 0724 27EE267A 		vmul.f32	s14, s14, s13
 8829              	.L471:
 476:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 8830              		.loc 19 476 13 view .LVU2392
 8831 0728 DFED2A6A 		vldr.32	s13, .L544+52
 8832 072c 274B     		ldr	r3, .L544+44
 8833 072e F4EEE67A 		vcmpe.f32	s15, s13
 8834 0732 83ED007A 		vstr.32	s14, [r3]
 476:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 8835              		.loc 19 476 13 is_stmt 1 view .LVU2393
 8836 0736 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8837 073a 2ADB     		blt	.L528
 477:Veno-Echo.cpp ****             else RNegFB = 0.0;
 8838              		.loc 19 477 17 view .LVU2394
 477:Veno-Echo.cpp ****             else RNegFB = 0.0;
 8839              		.loc 19 477 32 is_stmt 0 view .LVU2395
 8840 073c 77EEE67A 		vsub.f32	s15, s15, s13
 8841              	.LVL586:
 477:Veno-Echo.cpp ****             else RNegFB = 0.0;
 8842              		.loc 19 477 47 view .LVU2396
 8843 0740 B0EE087A 		vmov.f32	s14, #3.0e+0
 8844 0744 67EE877A 		vmul.f32	s15, s15, s14
 8845              	.L473:
 8846 0748 234B     		ldr	r3, .L544+56
 481:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 8847              		.loc 19 481 15 view .LVU2397
 8848 074a 38EEA50A 		vadd.f32	s0, s17, s11
 8849              	.LVL587:
 482:Veno-Echo.cpp ****  
 8850              		.loc 19 482 15 view .LVU2398
 8851 074e 38EE068A 		vadd.f32	s16, s16, s12
 8852              	.LVL588:
 482:Veno-Echo.cpp ****  
 8853              		.loc 19 482 15 view .LVU2399
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 281


 8854 0752 C3ED007A 		vstr.32	s15, [r3]
 481:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 8855              		.loc 19 481 9 is_stmt 1 view .LVU2400
 8856              	.LVL589:
 482:Veno-Echo.cpp ****  
 8857              		.loc 19 482 9 view .LVU2401
 485:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 8858              		.loc 19 485 9 view .LVU2402
 8859              	.LBB1745:
 8860              	.LBI1745:
1596:Veno-Echo.cpp **** {
 8861              		.loc 19 1596 7 view .LVU2403
 8862              	.LBB1746:
1598:Veno-Echo.cpp ****     if (input > limit)
 8863              		.loc 19 1598 5 view .LVU2404
1599:Veno-Echo.cpp ****         returnval = limit;
 8864              		.loc 19 1599 5 view .LVU2405
 8865 0756 F0EE007A 		vmov.f32	s15, #2.0e+0
 8866 075a B4EEE70A 		vcmpe.f32	s0, s15
 8867 075e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8868 0762 13DC     		bgt	.L505
1601:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8869              		.loc 19 1601 10 view .LVU2406
 8870 0764 F8EE007A 		vmov.f32	s15, #-2.0e+0
1602:Veno-Echo.cpp ****     else
 8871              		.loc 19 1602 19 is_stmt 0 view .LVU2407
 8872 0768 B4EE670A 		vcmp.f32	s0, s15
 8873 076c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8874 0770 48BF     		it	mi
 8875 0772 B0EE670A 		vmovmi.f32	s0, s15
 8876              	.LVL590:
 8877              	.L475:
1606:Veno-Echo.cpp **** }
 8878              		.loc 19 1606 5 is_stmt 1 view .LVU2408
1606:Veno-Echo.cpp **** }
 8879              		.loc 19 1606 5 is_stmt 0 view .LVU2409
 8880              	.LBE1746:
 8881              	.LBE1745:
 486:Veno-Echo.cpp **** 
 8882              		.loc 19 486 9 is_stmt 1 view .LVU2410
 8883              	.LBB1748:
 8884              	.LBI1405:
1596:Veno-Echo.cpp **** {
 8885              		.loc 19 1596 7 view .LVU2411
 8886              	.LBB1407:
1598:Veno-Echo.cpp ****     if (input > limit)
 8887              		.loc 19 1598 5 view .LVU2412
1599:Veno-Echo.cpp ****         returnval = limit;
 8888              		.loc 19 1599 5 view .LVU2413
 8889 0776 F0EE007A 		vmov.f32	s15, #2.0e+0
 8890 077a B4EEE78A 		vcmpe.f32	s16, s15
 8891 077e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8892 0782 7FF78FAC 		ble	.L538
1600:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 8893              		.loc 19 1600 19 is_stmt 0 view .LVU2414
 8894 0786 B0EE678A 		vmov.f32	s16, s15
 8895              	.LVL591:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 282


1600:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 8896              		.loc 19 1600 19 view .LVU2415
 8897 078a 94E4     		b	.L477
 8898              	.LVL592:
 8899              	.L505:
1600:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 8900              		.loc 19 1600 19 view .LVU2416
 8901              	.LBE1407:
 8902              	.LBE1748:
 8903              	.LBB1749:
 8904              	.LBB1747:
 8905 078c B0EE670A 		vmov.f32	s0, s15
 8906              	.LVL593:
1600:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 8907              		.loc 19 1600 19 view .LVU2417
 8908 0790 F1E7     		b	.L475
 8909              	.LVL594:
 8910              	.L528:
1600:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 8911              		.loc 19 1600 19 view .LVU2418
 8912              	.LBE1747:
 8913              	.LBE1749:
 478:Veno-Echo.cpp **** 
 8914              		.loc 19 478 25 view .LVU2419
 8915 0792 DFED137A 		vldr.32	s15, .L544+64
 8916              	.LVL595:
 478:Veno-Echo.cpp **** 
 8917              		.loc 19 478 25 view .LVU2420
 8918 0796 D7E7     		b	.L473
 8919              	.LVL596:
 8920              	.L527:
 474:Veno-Echo.cpp ****             
 8921              		.loc 19 474 25 view .LVU2421
 8922 0798 9FED117A 		vldr.32	s14, .L544+64
 8923              	.LVL597:
 474:Veno-Echo.cpp ****             
 8924              		.loc 19 474 25 view .LVU2422
 8925 079c C4E7     		b	.L471
 8926              	.L545:
 8927 079e 00BF     		.align	2
 8928              	.L544:
 8929 07a0 C1270900 		.word	600001
 8930 07a4 BF270900 		.word	599999
 8931 07a8 189F2400 		.word	2400024
 8932 07ac 249F2400 		.word	2400036
 8933 07b0 1C9F2400 		.word	2400028
 8934 07b4 00000000 		.word	.LANCHOR70
 8935 07b8 00000000 		.word	.LANCHOR71
 8936 07bc 00000000 		.word	.LANCHOR0
 8937 07c0 00000000 		.word	.LANCHOR1
 8938 07c4 00000000 		.word	.LANCHOR40
 8939 07c8 00000000 		.word	.LANCHOR10
 8940 07cc 00000000 		.word	.LANCHOR93
 8941 07d0 00000000 		.word	.LANCHOR19
 8942 07d4 CDCCCC3E 		.word	1053609165
 8943 07d8 00000000 		.word	.LANCHOR94
 8944 07dc 00000000 		.word	.LANCHOR35
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 283


 8945 07e0 00000000 		.word	0
 8946 07e4 C0270900 		.word	600000
 8947              	.LVL598:
 8948              	.L499:
 8949              	.LBB1750:
 404:Veno-Echo.cpp **** {
 8950              		.loc 19 404 1 view .LVU2423
 8951 07e8 D64B     		ldr	r3, .L546
 8952              	.LBE1750:
 8953              	.LBB1751:
 8954              	.LBB1677:
1600:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 8955              		.loc 19 1600 19 view .LVU2424
 8956 07ea B0EE470A 		vmov.f32	s0, s14
 8957              	.LVL599:
1606:Veno-Echo.cpp **** }
 8958              		.loc 19 1606 5 is_stmt 1 view .LVU2425
1606:Veno-Echo.cpp **** }
 8959              		.loc 19 1606 5 is_stmt 0 view .LVU2426
 8960              	.LBE1677:
 8961              	.LBE1751:
 8962              	.LBB1752:
 404:Veno-Echo.cpp **** {
 8963              		.loc 19 404 1 view .LVU2427
 8964 07ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8965              	.LBE1752:
 402:Veno-Echo.cpp **** 
 8966              		.loc 19 402 23 view .LVU2428
 8967 07f0 8DED090A 		vstr.32	s0, [sp, #36]
 404:Veno-Echo.cpp **** {
 8968              		.loc 19 404 1 is_stmt 1 view .LVU2429
 8969              	.LBB1753:
 8970 07f4 002B     		cmp	r3, #0
 8971 07f6 7FF41DAF 		bne	.L465
 8972              	.L537:
 8973              	.LBB1680:
 410:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 8974              		.loc 19 410 9 view .LVU2430
 410:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 8975              		.loc 19 410 22 is_stmt 0 view .LVU2431
 8976 07fa 9FEDD39A 		vldr.32	s18, .L546+4
 8977 07fe D34D     		ldr	r5, .L546+8
 8978 0800 27EE890A 		vmul.f32	s0, s15, s18
 411:Veno-Echo.cpp **** 
 8979              		.loc 19 411 22 view .LVU2432
 8980 0804 D24C     		ldr	r4, .L546+12
 410:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 8981              		.loc 19 410 22 view .LVU2433
 8982 0806 2846     		mov	r0, r5
 8983 0808 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 8984              	.LVL600:
 411:Veno-Echo.cpp **** 
 8985              		.loc 19 411 9 is_stmt 1 view .LVU2434
 411:Veno-Echo.cpp **** 
 8986              		.loc 19 411 22 is_stmt 0 view .LVU2435
 8987 080c 9DED090A 		vldr.32	s0, [sp, #36]
 8988 0810 2046     		mov	r0, r4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 284


 8989 0812 20EE090A 		vmul.f32	s0, s0, s18
 8990 0816 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 8991              	.LVL601:
 414:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 8992              		.loc 19 414 9 is_stmt 1 view .LVU2436
 414:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 8993              		.loc 19 414 9 is_stmt 0 view .LVU2437
 8994              	.LBE1680:
 8995              	.LBE1753:
 8996              	.LBE1780:
 8997              	.LBE1791:
  23:../DaisySP/Source/Filters/svf.h ****     /** Initializes the filter
  24:../DaisySP/Source/Filters/svf.h ****         float sample_rate - sample rate of the audio engine being run, and the frequency that the P
  25:../DaisySP/Source/Filters/svf.h ****     */
  26:../DaisySP/Source/Filters/svf.h ****     void Init(float sample_rate);
  27:../DaisySP/Source/Filters/svf.h **** 
  28:../DaisySP/Source/Filters/svf.h **** 
  29:../DaisySP/Source/Filters/svf.h ****     /** 
  30:../DaisySP/Source/Filters/svf.h ****         Process the input signal, updating all of the outputs.
  31:../DaisySP/Source/Filters/svf.h ****     */
  32:../DaisySP/Source/Filters/svf.h ****     void Process(float in);
  33:../DaisySP/Source/Filters/svf.h **** 
  34:../DaisySP/Source/Filters/svf.h **** 
  35:../DaisySP/Source/Filters/svf.h ****     /** sets the frequency of the cutoff frequency. 
  36:../DaisySP/Source/Filters/svf.h ****         f must be between 0.0 and sample_rate / 3
  37:../DaisySP/Source/Filters/svf.h ****     */
  38:../DaisySP/Source/Filters/svf.h ****     void SetFreq(float f);
  39:../DaisySP/Source/Filters/svf.h **** 
  40:../DaisySP/Source/Filters/svf.h ****     /** sets the resonance of the filter.
  41:../DaisySP/Source/Filters/svf.h ****         Must be between 0.0 and 1.0 to ensure stability.
  42:../DaisySP/Source/Filters/svf.h ****     */
  43:../DaisySP/Source/Filters/svf.h ****     void SetRes(float r);
  44:../DaisySP/Source/Filters/svf.h **** 
  45:../DaisySP/Source/Filters/svf.h ****     /** sets the drive of the filter 
  46:../DaisySP/Source/Filters/svf.h ****         affects the response of the resonance of the filter
  47:../DaisySP/Source/Filters/svf.h ****     */
  48:../DaisySP/Source/Filters/svf.h ****     void SetDrive(float d);
  49:../DaisySP/Source/Filters/svf.h ****     /** lowpass output
  50:../DaisySP/Source/Filters/svf.h ****         \return low pass output of the filter
  51:../DaisySP/Source/Filters/svf.h ****     */
  52:../DaisySP/Source/Filters/svf.h ****     inline float Low() { return out_low_; }
 8998              		.loc 9 52 26 is_stmt 1 view .LVU2438
 8999              	.LBB1792:
 9000              	.LBB1781:
 9001              	.LBB1754:
 9002              	.LBB1695:
 414:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 9003              		.loc 19 414 40 is_stmt 0 view .LVU2439
 9004 081a F2EE046A 		vmov.f32	s13, #1.0e+1
 9005 081e 95ED0C7A 		vldr.32	s14, [r5, #48]
 418:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 9006              		.loc 19 418 49 view .LVU2440
 9007 0822 0CAA     		add	r2, sp, #48
 415:Veno-Echo.cpp ****         
 9008              		.loc 19 415 40 view .LVU2441
 9009 0824 D4ED0C7A 		vldr.32	s15, [r4, #48]
 418:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 285


 9010              		.loc 19 418 49 view .LVU2442
 9011 0828 08A9     		add	r1, sp, #32
 414:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 9012              		.loc 19 414 40 view .LVU2443
 9013 082a 27EE267A 		vmul.f32	s14, s14, s13
 418:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 9014              		.loc 19 418 49 view .LVU2444
 9015 082e C948     		ldr	r0, .L546+16
 415:Veno-Echo.cpp ****         
 9016              		.loc 19 415 40 view .LVU2445
 9017 0830 67EEA67A 		vmul.f32	s15, s15, s13
 414:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 9018              		.loc 19 414 47 view .LVU2446
 9019 0834 8DED0C7A 		vstr.32	s14, [sp, #48]
 415:Veno-Echo.cpp ****         
 9020              		.loc 19 415 9 is_stmt 1 view .LVU2447
 9021              	.LVL602:
 415:Veno-Echo.cpp ****         
 9022              		.loc 19 415 9 is_stmt 0 view .LVU2448
 9023              	.LBE1695:
 9024              	.LBE1754:
 9025              	.LBE1781:
 9026              	.LBE1792:
 9027              		.loc 9 52 26 is_stmt 1 view .LVU2449
 9028              	.LBB1793:
 9029              	.LBB1782:
 9030              	.LBB1755:
 9031              	.LBB1696:
 415:Veno-Echo.cpp ****         
 9032              		.loc 19 415 47 is_stmt 0 view .LVU2450
 9033 0838 CDED0D7A 		vstr.32	s15, [sp, #52]
 418:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 9034              		.loc 19 418 9 is_stmt 1 view .LVU2451
 418:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 9035              		.loc 19 418 49 is_stmt 0 view .LVU2452
 9036 083c FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9037              	.LVL603:
 419:Veno-Echo.cpp **** 
 9038              		.loc 19 419 49 view .LVU2453
 9039 0840 0DAA     		add	r2, sp, #52
 9040 0842 09A9     		add	r1, sp, #36
 9041 0844 C448     		ldr	r0, .L546+20
 418:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 9042              		.loc 19 418 78 view .LVU2454
 9043 0846 8DED0E0A 		vstr.32	s0, [sp, #56]
 419:Veno-Echo.cpp **** 
 9044              		.loc 19 419 9 is_stmt 1 view .LVU2455
 419:Veno-Echo.cpp **** 
 9045              		.loc 19 419 49 is_stmt 0 view .LVU2456
 9046 084a FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9047              	.LVL604:
 9048              	.LBB1681:
 9049              	.LBB1682:
1599:Veno-Echo.cpp ****         returnval = limit;
 9050              		.loc 19 1599 5 view .LVU2457
 9051 084e F0EE006A 		vmov.f32	s13, #2.0e+0
 9052              	.LBE1682:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 286


 9053              	.LBE1681:
 422:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 9054              		.loc 19 422 36 view .LVU2458
 9055 0852 9DED0E7A 		vldr.32	s14, [sp, #56]
 419:Veno-Echo.cpp **** 
 9056              		.loc 19 419 49 view .LVU2459
 9057 0856 F0EE407A 		vmov.f32	s15, s0
 422:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 9058              		.loc 19 422 9 is_stmt 1 view .LVU2460
 9059              	.LVL605:
 9060              	.LBB1686:
 9061              	.LBI1681:
1596:Veno-Echo.cpp **** {
 9062              		.loc 19 1596 7 view .LVU2461
 9063              	.LBB1683:
1598:Veno-Echo.cpp ****     if (input > limit)
 9064              		.loc 19 1598 5 view .LVU2462
1599:Veno-Echo.cpp ****         returnval = limit;
 9065              		.loc 19 1599 5 view .LVU2463
 9066 085a B4EEE67A 		vcmpe.f32	s14, s13
 9067 085e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9068 0862 00F3A681 		bgt	.L500
1601:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9069              		.loc 19 1601 10 view .LVU2464
 9070 0866 F8EE006A 		vmov.f32	s13, #-2.0e+0
 9071 086a B4EEE67A 		vcmpe.f32	s14, s13
 9072 086e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9073 0872 00F1B581 		bmi	.L501
 9074 0876 27EE090A 		vmul.f32	s0, s14, s18
 9075              	.LVL606:
 9076              	.L466:
1606:Veno-Echo.cpp **** }
 9077              		.loc 19 1606 5 view .LVU2465
1606:Veno-Echo.cpp **** }
 9078              		.loc 19 1606 5 is_stmt 0 view .LVU2466
 9079              	.LBE1683:
 9080              	.LBE1686:
 9081              	.LBB1687:
 9082              	.LBB1688:
1599:Veno-Echo.cpp ****         returnval = limit;
 9083              		.loc 19 1599 5 view .LVU2467
 9084 087a F0EE006A 		vmov.f32	s13, #2.0e+0
 9085              	.LBE1688:
 9086              	.LBE1687:
 422:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 9087              		.loc 19 422 25 view .LVU2468
 9088 087e 8DED0E7A 		vstr.32	s14, [sp, #56]
 423:Veno-Echo.cpp **** 
 9089              		.loc 19 423 9 is_stmt 1 view .LVU2469
 9090              	.LVL607:
 9091              	.LBB1691:
 9092              	.LBI1687:
1596:Veno-Echo.cpp **** {
 9093              		.loc 19 1596 7 view .LVU2470
 9094              	.LBB1689:
1598:Veno-Echo.cpp ****     if (input > limit)
 9095              		.loc 19 1598 5 view .LVU2471
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 287


1599:Veno-Echo.cpp ****         returnval = limit;
 9096              		.loc 19 1599 5 view .LVU2472
 9097 0882 F4EEE67A 		vcmpe.f32	s15, s13
 9098 0886 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9099 088a 00F38F81 		bgt	.L502
1601:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9100              		.loc 19 1601 10 view .LVU2473
 9101 088e B8EE007A 		vmov.f32	s14, #-2.0e+0
1602:Veno-Echo.cpp ****     else
 9102              		.loc 19 1602 19 is_stmt 0 view .LVU2474
 9103 0892 F4EE477A 		vcmp.f32	s15, s14
 9104 0896 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9105 089a 48BF     		it	mi
 9106 089c F0EE477A 		vmovmi.f32	s15, s14
 9107              	.LVL608:
 9108              	.L467:
1606:Veno-Echo.cpp **** }
 9109              		.loc 19 1606 5 is_stmt 1 view .LVU2475
1606:Veno-Echo.cpp **** }
 9110              		.loc 19 1606 5 is_stmt 0 view .LVU2476
 9111              	.LBE1689:
 9112              	.LBE1691:
 426:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 9113              		.loc 19 426 22 view .LVU2477
 9114 08a0 AE4D     		ldr	r5, .L546+24
 427:Veno-Echo.cpp **** 
 9115              		.loc 19 427 22 view .LVU2478
 9116 08a2 AF4C     		ldr	r4, .L546+28
 426:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 9117              		.loc 19 426 22 view .LVU2479
 9118 08a4 2846     		mov	r0, r5
 423:Veno-Echo.cpp **** 
 9119              		.loc 19 423 25 view .LVU2480
 9120 08a6 CDED0F7A 		vstr.32	s15, [sp, #60]
 426:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 9121              		.loc 19 426 9 is_stmt 1 view .LVU2481
 426:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 9122              		.loc 19 426 22 is_stmt 0 view .LVU2482
 9123 08aa FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 9124              	.LVL609:
 427:Veno-Echo.cpp **** 
 9125              		.loc 19 427 9 is_stmt 1 view .LVU2483
 427:Veno-Echo.cpp **** 
 9126              		.loc 19 427 22 is_stmt 0 view .LVU2484
 9127 08ae DFEDA67A 		vldr.32	s15, .L546+4
 9128 08b2 9DED0F0A 		vldr.32	s0, [sp, #60]
 9129 08b6 2046     		mov	r0, r4
 9130 08b8 20EE270A 		vmul.f32	s0, s0, s15
 9131 08bc FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 9132              	.LVL610:
 429:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 9133              		.loc 19 429 9 is_stmt 1 view .LVU2485
 429:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 9134              		.loc 19 429 9 is_stmt 0 view .LVU2486
 9135              	.LBE1696:
 9136              	.LBE1755:
 9137              	.LBE1782:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 288


 9138              	.LBE1793:
  53:../DaisySP/Source/Filters/svf.h ****     /** highpass output
  54:../DaisySP/Source/Filters/svf.h ****         \return high pass output of the filter
  55:../DaisySP/Source/Filters/svf.h ****     */
  56:../DaisySP/Source/Filters/svf.h ****     inline float High() { return out_high_; }
 9139              		.loc 9 56 27 is_stmt 1 view .LVU2487
 9140              	.LBB1794:
 9141              	.LBB1783:
 9142              	.LBB1756:
 9143              	.LBB1697:
 429:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 9144              		.loc 19 429 41 is_stmt 0 view .LVU2488
 9145 08c0 F2EE046A 		vmov.f32	s13, #1.0e+1
 9146 08c4 95ED0D7A 		vldr.32	s14, [r5, #52]
 432:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 9147              		.loc 19 432 45 view .LVU2489
 9148 08c8 0EA9     		add	r1, sp, #56
 430:Veno-Echo.cpp **** 
 9149              		.loc 19 430 41 view .LVU2490
 9150 08ca D4ED0D7A 		vldr.32	s15, [r4, #52]
 432:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 9151              		.loc 19 432 45 view .LVU2491
 9152 08ce 10AA     		add	r2, sp, #64
 429:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 9153              		.loc 19 429 41 view .LVU2492
 9154 08d0 27EE267A 		vmul.f32	s14, s14, s13
 432:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 9155              		.loc 19 432 45 view .LVU2493
 9156 08d4 A348     		ldr	r0, .L546+32
 430:Veno-Echo.cpp **** 
 9157              		.loc 19 430 41 view .LVU2494
 9158 08d6 67EEA67A 		vmul.f32	s15, s15, s13
 429:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 9159              		.loc 19 429 48 view .LVU2495
 9160 08da 8DED107A 		vstr.32	s14, [sp, #64]
 430:Veno-Echo.cpp **** 
 9161              		.loc 19 430 9 is_stmt 1 view .LVU2496
 9162              	.LVL611:
 430:Veno-Echo.cpp **** 
 9163              		.loc 19 430 9 is_stmt 0 view .LVU2497
 9164              	.LBE1697:
 9165              	.LBE1756:
 9166              	.LBE1783:
 9167              	.LBE1794:
 9168              		.loc 9 56 27 is_stmt 1 view .LVU2498
 9169              	.LBB1795:
 9170              	.LBB1784:
 9171              	.LBB1757:
 9172              	.LBB1698:
 430:Veno-Echo.cpp **** 
 9173              		.loc 19 430 48 is_stmt 0 view .LVU2499
 9174 08de CDED117A 		vstr.32	s15, [sp, #68]
 432:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 9175              		.loc 19 432 9 is_stmt 1 view .LVU2500
 432:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 9176              		.loc 19 432 45 is_stmt 0 view .LVU2501
 9177 08e2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 289


 9178              	.LVL612:
 433:Veno-Echo.cpp **** 
 9179              		.loc 19 433 45 view .LVU2502
 9180 08e6 0FA9     		add	r1, sp, #60
 9181 08e8 11AA     		add	r2, sp, #68
 9182 08ea 9F48     		ldr	r0, .L546+36
 432:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 9183              		.loc 19 432 25 view .LVU2503
 9184 08ec 8DED0E0A 		vstr.32	s0, [sp, #56]
 433:Veno-Echo.cpp **** 
 9185              		.loc 19 433 9 is_stmt 1 view .LVU2504
 433:Veno-Echo.cpp **** 
 9186              		.loc 19 433 45 is_stmt 0 view .LVU2505
 9187 08f0 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9188              	.LVL613:
 437:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 9189              		.loc 19 437 44 view .LVU2506
 9190 08f4 0EAA     		add	r2, sp, #56
 9191 08f6 08A9     		add	r1, sp, #32
 9192 08f8 9C48     		ldr	r0, .L546+40
 433:Veno-Echo.cpp **** 
 9193              		.loc 19 433 25 view .LVU2507
 9194 08fa 8DED0F0A 		vstr.32	s0, [sp, #60]
 437:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 9195              		.loc 19 437 9 is_stmt 1 view .LVU2508
 437:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 9196              		.loc 19 437 44 is_stmt 0 view .LVU2509
 9197 08fe FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9198              	.LVL614:
 438:Veno-Echo.cpp **** 
 9199              		.loc 19 438 44 view .LVU2510
 9200 0902 0FAA     		add	r2, sp, #60
 9201 0904 09A9     		add	r1, sp, #36
 9202 0906 9A48     		ldr	r0, .L546+44
 437:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 9203              		.loc 19 437 23 view .LVU2511
 9204 0908 8DED080A 		vstr.32	s0, [sp, #32]
 438:Veno-Echo.cpp **** 
 9205              		.loc 19 438 9 is_stmt 1 view .LVU2512
 438:Veno-Echo.cpp **** 
 9206              		.loc 19 438 44 is_stmt 0 view .LVU2513
 9207 090c FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9208              	.LVL615:
 9209 0910 DDED087A 		vldr.32	s15, [sp, #32]
 438:Veno-Echo.cpp **** 
 9210              		.loc 19 438 23 view .LVU2514
 9211 0914 8DED090A 		vstr.32	s0, [sp, #36]
 9212              	.LBE1698:
 9213 0918 8CE6     		b	.L465
 9214              	.LVL616:
 9215              	.L498:
 438:Veno-Echo.cpp **** 
 9216              		.loc 19 438 23 view .LVU2515
 9217              	.LBE1757:
 9218              	.LBB1758:
 9219              	.LBB1671:
1600:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 290


 9220              		.loc 19 1600 19 view .LVU2516
 9221 091a F0EE477A 		vmov.f32	s15, s14
 9222              	.LVL617:
1600:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 9223              		.loc 19 1600 19 view .LVU2517
 9224 091e 6DE6     		b	.L461
 9225              	.LVL618:
 9226              	.L451:
1600:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 9227              		.loc 19 1600 19 view .LVU2518
 9228              	.LBE1671:
 9229              	.LBE1758:
 9230              	.LBB1759:
 9231              	.LBB1663:
 9232              	.LBB1659:
 126:delayline_reverse.h ****         {
 9233              		.loc 18 126 12 view .LVU2519
 9234 0920 944B     		ldr	r3, .L546+48
 126:delayline_reverse.h ****         {
 9235              		.loc 18 126 9 view .LVU2520
 9236 0922 E25C     		ldrb	r2, [r4, r3]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 9237              		.loc 18 126 12 view .LVU2521
 9238 0924 2344     		add	r3, r3, r4
 126:delayline_reverse.h ****         {
 9239              		.loc 18 126 9 view .LVU2522
 9240 0926 002A     		cmp	r2, #0
 9241 0928 3FF439AE 		beq	.L457
 9242              	.L534:
 126:delayline_reverse.h ****         {
 9243              		.loc 18 126 9 view .LVU2523
 9244 092c 924A     		ldr	r2, .L546+52
 9245 092e A018     		adds	r0, r4, r2
 9246 0930 A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 9247              		.loc 18 128 13 view .LVU2524
 9248 0932 002A     		cmp	r2, #0
 9249 0934 3FF419AE 		beq	.L454
 9250              	.L455:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9251              		.loc 18 141 45 view .LVU2525
 9252 0938 DDED017A 		vldr.32	s15, [sp, #4]	@ int
 9253              	.LVL619:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9254              		.loc 18 141 45 view .LVU2526
 9255 093c B7EE006A 		vmov.f32	s12, #1.0e+0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9256              		.loc 18 141 37 view .LVU2527
 9257 0940 0399     		ldr	r1, [sp, #12]
 142:delayline_reverse.h ****                 {
 9258              		.loc 18 142 17 view .LVU2528
 9259 0942 0022     		movs	r2, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9260              		.loc 18 141 45 view .LVU2529
 9261 0944 F8EE676A 		vcvt.f32.u32	s13, s15
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9262              		.loc 18 141 37 view .LVU2530
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 291


 9263 0948 D1ED007A 		vldr.32	s15, [r1]
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9264              		.loc 18 141 45 view .LVU2531
 9265 094c 86EE267A 		vdiv.f32	s14, s12, s13
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9266              		.loc 18 141 37 view .LVU2532
 9267 0950 77EEC77A 		vsub.f32	s15, s15, s14
 142:delayline_reverse.h ****                 {
 9268              		.loc 18 142 17 view .LVU2533
 9269 0954 F5EEC07A 		vcmpe.f32	s15, #0
 9270 0958 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9271 095c 00F13A81 		bmi	.L460
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9272              		.loc 18 141 17 view .LVU2534
 9273 0960 C1ED007A 		vstr.32	s15, [r1]
 9274 0964 1BE6     		b	.L457
 9275              	.LVL620:
 9276              	.L441:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9277              		.loc 18 141 17 view .LVU2535
 9278              	.LBE1659:
 9279              	.LBE1663:
 9280              	.LBE1759:
 9281              	.LBB1760:
 9282              	.LBB1636:
 9283              	.LBB1625:
 126:delayline_reverse.h ****         {
 9284              		.loc 18 126 12 view .LVU2536
 9285 0966 834A     		ldr	r2, .L546+48
 126:delayline_reverse.h ****         {
 9286              		.loc 18 126 9 view .LVU2537
 9287 0968 AB5C     		ldrb	r3, [r5, r2]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 9288              		.loc 18 126 12 view .LVU2538
 9289 096a 2A44     		add	r2, r2, r5
 126:delayline_reverse.h ****         {
 9290              		.loc 18 126 9 view .LVU2539
 9291 096c 002B     		cmp	r3, #0
 9292 096e 3FF4ABAD 		beq	.L447
 9293              	.L532:
 126:delayline_reverse.h ****         {
 9294              		.loc 18 126 9 view .LVU2540
 9295 0972 814B     		ldr	r3, .L546+52
 9296 0974 E818     		adds	r0, r5, r3
 9297 0976 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 9298              		.loc 18 128 13 view .LVU2541
 9299 0978 002B     		cmp	r3, #0
 9300 097a 3FF435AD 		beq	.L444
 9301              	.L445:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9302              		.loc 18 141 45 view .LVU2542
 9303 097e 07EE90EA 		vmov	s15, lr	@ int
 9304              	.LVL621:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9305              		.loc 18 141 45 view .LVU2543
 9306 0982 F7EE006A 		vmov.f32	s13, #1.0e+0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 292


 142:delayline_reverse.h ****                 {
 9307              		.loc 18 142 17 view .LVU2544
 9308 0986 0023     		movs	r3, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9309              		.loc 18 141 45 view .LVU2545
 9310 0988 B8EE677A 		vcvt.f32.u32	s14, s15
 9311 098c C6EE877A 		vdiv.f32	s15, s13, s14
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9312              		.loc 18 141 37 view .LVU2546
 9313 0990 3BEE67BA 		vsub.f32	s22, s22, s15
 142:delayline_reverse.h ****                 {
 9314              		.loc 18 142 17 view .LVU2547
 9315 0994 B5EEC0BA 		vcmpe.f32	s22, #0
 9316 0998 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9317 099c 40F1C580 		bpl	.L533
 145:delayline_reverse.h ****                     playinghead_ = false;
 9318              		.loc 18 145 21 view .LVU2548
 9319 09a0 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9320              		.loc 18 144 21 view .LVU2549
 9321 09a2 049D     		ldr	r5, [sp, #16]
 9322              	.LVL622:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9323              		.loc 18 144 21 view .LVU2550
 9324 09a4 2B60     		str	r3, [r5]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 9325              		.loc 18 145 21 view .LVU2551
 9326 09a6 1170     		strb	r1, [r2]
 146:delayline_reverse.h ****                 }
 9327              		.loc 18 146 21 view .LVU2552
 9328 09a8 0170     		strb	r1, [r0]
 9329 09aa 8DE5     		b	.L447
 9330              	.LVL623:
 9331              	.L492:
 146:delayline_reverse.h ****                 }
 9332              		.loc 18 146 21 view .LVU2553
 9333              	.LBE1625:
 9334              	.LBE1636:
 9335              	.LBE1760:
 567:Veno-Echo.cpp ****             out[i+1] = mixR;
 9336              		.loc 19 567 13 is_stmt 1 view .LVU2554
 567:Veno-Echo.cpp ****             out[i+1] = mixR;
 9337              		.loc 19 567 20 is_stmt 0 view .LVU2555
 9338 09ac 009B     		ldr	r3, [sp]
 9339 09ae C3ED007A 		vstr.32	s15, [r3]
 568:Veno-Echo.cpp ****         }
 9340              		.loc 19 568 13 is_stmt 1 view .LVU2556
 568:Veno-Echo.cpp ****         }
 9341              		.loc 19 568 22 is_stmt 0 view .LVU2557
 9342 09b2 83ED010A 		vstr.32	s0, [r3, #4]
 9343 09b6 FFF7EDBB 		b	.L493
 9344              	.LVL624:
 9345              	.L529:
 548:Veno-Echo.cpp ****         {
 9346              		.loc 19 548 14 is_stmt 1 view .LVU2558
 9347 09ba 40F3AC80 		ble	.L530
 550:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 293


 9348              		.loc 19 550 13 view .LVU2559
 550:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 9349              		.loc 19 550 24 is_stmt 0 view .LVU2560
 9350 09be F7EE006A 		vmov.f32	s13, #1.0e+0
 550:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 9351              		.loc 19 550 18 view .LVU2561
 9352 09c2 DBED005A 		vldr.32	s11, [fp]
 551:Veno-Echo.cpp ****         }
 9353              		.loc 19 551 18 view .LVU2562
 9354 09c6 9BED016A 		vldr.32	s12, [fp, #4]
 550:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 9355              		.loc 19 550 24 view .LVU2563
 9356 09ca 36EEC77A 		vsub.f32	s14, s13, s14
 550:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 9357              		.loc 19 550 33 view .LVU2564
 9358 09ce 37EE077A 		vadd.f32	s14, s14, s14
 550:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 9359              		.loc 19 550 18 view .LVU2565
 9360 09d2 E7EE257A 		vfma.f32	s15, s14, s11
 9361              	.LVL625:
 551:Veno-Echo.cpp ****         }
 9362              		.loc 19 551 13 is_stmt 1 view .LVU2566
 551:Veno-Echo.cpp ****         }
 9363              		.loc 19 551 18 is_stmt 0 view .LVU2567
 9364 09d6 A7EE060A 		vfma.f32	s0, s14, s12
 9365              	.LVL626:
 551:Veno-Echo.cpp ****         }
 9366              		.loc 19 551 18 view .LVU2568
 9367 09da FFF7D2BB 		b	.L489
 9368              	.LVL627:
 9369              	.L508:
 9370              	.LBB1761:
 502:Veno-Echo.cpp **** {
 9371              		.loc 19 502 1 view .LVU2569
 9372 09de 594B     		ldr	r3, .L546
 9373              	.LBE1761:
 9374              	.LBB1762:
 9375              	.LBB1417:
1600:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 9376              		.loc 19 1600 19 view .LVU2570
 9377 09e0 B0EE470A 		vmov.f32	s0, s14
 9378              	.LVL628:
1606:Veno-Echo.cpp **** }
 9379              		.loc 19 1606 5 is_stmt 1 view .LVU2571
1606:Veno-Echo.cpp **** }
 9380              		.loc 19 1606 5 is_stmt 0 view .LVU2572
 9381              	.LBE1417:
 9382              	.LBE1762:
 9383              	.LBB1763:
 502:Veno-Echo.cpp **** {
 9384              		.loc 19 502 1 view .LVU2573
 9385 09e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9386              	.LBE1763:
 500:Veno-Echo.cpp **** 
 9387              		.loc 19 500 27 view .LVU2574
 9388 09e6 8DED0B0A 		vstr.32	s0, [sp, #44]
 502:Veno-Echo.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 294


 9389              		.loc 19 502 1 is_stmt 1 view .LVU2575
 9390              	.LBB1764:
 9391 09ea 002B     		cmp	r3, #0
 9392 09ec 3FF4B0AB 		beq	.L483
 9393              	.L535:
 9394              	.LBB1420:
 508:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 9395              		.loc 19 508 9 view .LVU2576
 508:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 9396              		.loc 19 508 27 is_stmt 0 view .LVU2577
 9397 09f0 9FED558A 		vldr.32	s16, .L546+4
 9398              	.LVL629:
 508:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 9399              		.loc 19 508 27 view .LVU2578
 9400 09f4 614D     		ldr	r5, .L546+56
 9401 09f6 27EE880A 		vmul.f32	s0, s15, s16
 509:Veno-Echo.cpp **** 
 9402              		.loc 19 509 27 view .LVU2579
 9403 09fa 614C     		ldr	r4, .L546+60
 508:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 9404              		.loc 19 508 27 view .LVU2580
 9405 09fc 2846     		mov	r0, r5
 9406 09fe FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 9407              	.LVL630:
 509:Veno-Echo.cpp **** 
 9408              		.loc 19 509 9 is_stmt 1 view .LVU2581
 509:Veno-Echo.cpp **** 
 9409              		.loc 19 509 27 is_stmt 0 view .LVU2582
 9410 0a02 9DED0B0A 		vldr.32	s0, [sp, #44]
 9411 0a06 2046     		mov	r0, r4
 9412 0a08 20EE080A 		vmul.f32	s0, s0, s16
 9413 0a0c FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 9414              	.LVL631:
 512:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 9415              		.loc 19 512 9 is_stmt 1 view .LVU2583
 512:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 9416              		.loc 19 512 9 is_stmt 0 view .LVU2584
 9417              	.LBE1420:
 9418              	.LBE1764:
 9419              	.LBE1784:
 9420              	.LBE1795:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 9421              		.loc 9 52 26 is_stmt 1 view .LVU2585
 9422              	.LBB1796:
 9423              	.LBB1785:
 9424              	.LBB1765:
 9425              	.LBB1435:
 512:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 9426              		.loc 19 512 50 is_stmt 0 view .LVU2586
 9427 0a10 F2EE046A 		vmov.f32	s13, #1.0e+1
 9428 0a14 95ED0C7A 		vldr.32	s14, [r5, #48]
 516:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 9429              		.loc 19 516 59 view .LVU2587
 9430 0a18 0AA9     		add	r1, sp, #40
 513:Veno-Echo.cpp ****         
 9431              		.loc 19 513 50 view .LVU2588
 9432 0a1a D4ED0C7A 		vldr.32	s15, [r4, #48]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 295


 516:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 9433              		.loc 19 516 59 view .LVU2589
 9434 0a1e 0CAA     		add	r2, sp, #48
 512:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 9435              		.loc 19 512 50 view .LVU2590
 9436 0a20 27EE267A 		vmul.f32	s14, s14, s13
 516:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 9437              		.loc 19 516 59 view .LVU2591
 9438 0a24 5748     		ldr	r0, .L546+64
 513:Veno-Echo.cpp ****         
 9439              		.loc 19 513 50 view .LVU2592
 9440 0a26 67EEA67A 		vmul.f32	s15, s15, s13
 512:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 9441              		.loc 19 512 57 view .LVU2593
 9442 0a2a 8DED0C7A 		vstr.32	s14, [sp, #48]
 513:Veno-Echo.cpp ****         
 9443              		.loc 19 513 9 is_stmt 1 view .LVU2594
 9444              	.LVL632:
 513:Veno-Echo.cpp ****         
 9445              		.loc 19 513 9 is_stmt 0 view .LVU2595
 9446              	.LBE1435:
 9447              	.LBE1765:
 9448              	.LBE1785:
 9449              	.LBE1796:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 9450              		.loc 9 52 26 is_stmt 1 view .LVU2596
 9451              	.LBB1797:
 9452              	.LBB1786:
 9453              	.LBB1766:
 9454              	.LBB1436:
 513:Veno-Echo.cpp ****         
 9455              		.loc 19 513 57 is_stmt 0 view .LVU2597
 9456 0a2e CDED0D7A 		vstr.32	s15, [sp, #52]
 516:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 9457              		.loc 19 516 9 is_stmt 1 view .LVU2598
 516:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 9458              		.loc 19 516 59 is_stmt 0 view .LVU2599
 9459 0a32 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9460              	.LVL633:
 517:Veno-Echo.cpp **** 
 9461              		.loc 19 517 59 view .LVU2600
 9462 0a36 0BA9     		add	r1, sp, #44
 9463 0a38 0DAA     		add	r2, sp, #52
 9464 0a3a 5348     		ldr	r0, .L546+68
 516:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 9465              		.loc 19 516 97 view .LVU2601
 9466 0a3c 8DED0E0A 		vstr.32	s0, [sp, #56]
 517:Veno-Echo.cpp **** 
 9467              		.loc 19 517 9 is_stmt 1 view .LVU2602
 517:Veno-Echo.cpp **** 
 9468              		.loc 19 517 59 is_stmt 0 view .LVU2603
 9469 0a40 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9470              	.LVL634:
 9471              	.LBB1421:
 9472              	.LBB1422:
1599:Veno-Echo.cpp ****         returnval = limit;
 9473              		.loc 19 1599 5 view .LVU2604
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 296


 9474 0a44 F0EE006A 		vmov.f32	s13, #2.0e+0
 9475              	.LBE1422:
 9476              	.LBE1421:
 520:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 9477              		.loc 19 520 41 view .LVU2605
 9478 0a48 9DED0E7A 		vldr.32	s14, [sp, #56]
 517:Veno-Echo.cpp **** 
 9479              		.loc 19 517 59 view .LVU2606
 9480 0a4c F0EE407A 		vmov.f32	s15, s0
 520:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 9481              		.loc 19 520 9 is_stmt 1 view .LVU2607
 9482              	.LVL635:
 9483              	.LBB1426:
 9484              	.LBI1421:
1596:Veno-Echo.cpp **** {
 9485              		.loc 19 1596 7 view .LVU2608
 9486              	.LBB1423:
1598:Veno-Echo.cpp ****     if (input > limit)
 9487              		.loc 19 1598 5 view .LVU2609
1599:Veno-Echo.cpp ****         returnval = limit;
 9488              		.loc 19 1599 5 view .LVU2610
 9489 0a50 B4EEE67A 		vcmpe.f32	s14, s13
 9490 0a54 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9491 0a58 6EDC     		bgt	.L509
1601:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9492              		.loc 19 1601 10 view .LVU2611
 9493 0a5a F8EE006A 		vmov.f32	s13, #-2.0e+0
 9494 0a5e B4EEE67A 		vcmpe.f32	s14, s13
 9495 0a62 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9496 0a66 00F1C080 		bmi	.L510
 9497 0a6a 27EE080A 		vmul.f32	s0, s14, s16
 9498              	.LVL636:
 9499              	.L484:
1606:Veno-Echo.cpp **** }
 9500              		.loc 19 1606 5 view .LVU2612
1606:Veno-Echo.cpp **** }
 9501              		.loc 19 1606 5 is_stmt 0 view .LVU2613
 9502              	.LBE1423:
 9503              	.LBE1426:
 9504              	.LBB1427:
 9505              	.LBB1428:
1599:Veno-Echo.cpp ****         returnval = limit;
 9506              		.loc 19 1599 5 view .LVU2614
 9507 0a6e F0EE006A 		vmov.f32	s13, #2.0e+0
 9508              	.LBE1428:
 9509              	.LBE1427:
 520:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 9510              		.loc 19 520 30 view .LVU2615
 9511 0a72 8DED0E7A 		vstr.32	s14, [sp, #56]
 521:Veno-Echo.cpp **** 
 9512              		.loc 19 521 9 is_stmt 1 view .LVU2616
 9513              	.LVL637:
 9514              	.LBB1431:
 9515              	.LBI1427:
1596:Veno-Echo.cpp **** {
 9516              		.loc 19 1596 7 view .LVU2617
 9517              	.LBB1429:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 297


1598:Veno-Echo.cpp ****     if (input > limit)
 9518              		.loc 19 1598 5 view .LVU2618
1599:Veno-Echo.cpp ****         returnval = limit;
 9519              		.loc 19 1599 5 view .LVU2619
 9520 0a76 F4EEE67A 		vcmpe.f32	s15, s13
 9521 0a7a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9522 0a7e 58DC     		bgt	.L511
1601:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9523              		.loc 19 1601 10 view .LVU2620
 9524 0a80 B8EE007A 		vmov.f32	s14, #-2.0e+0
1602:Veno-Echo.cpp ****     else
 9525              		.loc 19 1602 19 is_stmt 0 view .LVU2621
 9526 0a84 F4EE477A 		vcmp.f32	s15, s14
 9527 0a88 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9528 0a8c 48BF     		it	mi
 9529 0a8e F0EE477A 		vmovmi.f32	s15, s14
 9530              	.LVL638:
 9531              	.L485:
1606:Veno-Echo.cpp **** }
 9532              		.loc 19 1606 5 is_stmt 1 view .LVU2622
1606:Veno-Echo.cpp **** }
 9533              		.loc 19 1606 5 is_stmt 0 view .LVU2623
 9534              	.LBE1429:
 9535              	.LBE1431:
 524:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 9536              		.loc 19 524 27 view .LVU2624
 9537 0a92 3E4D     		ldr	r5, .L546+72
 525:Veno-Echo.cpp **** 
 9538              		.loc 19 525 27 view .LVU2625
 9539 0a94 3E4C     		ldr	r4, .L546+76
 524:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 9540              		.loc 19 524 27 view .LVU2626
 9541 0a96 2846     		mov	r0, r5
 521:Veno-Echo.cpp **** 
 9542              		.loc 19 521 30 view .LVU2627
 9543 0a98 CDED0F7A 		vstr.32	s15, [sp, #60]
 524:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 9544              		.loc 19 524 9 is_stmt 1 view .LVU2628
 524:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 9545              		.loc 19 524 27 is_stmt 0 view .LVU2629
 9546 0a9c FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 9547              	.LVL639:
 525:Veno-Echo.cpp **** 
 9548              		.loc 19 525 9 is_stmt 1 view .LVU2630
 525:Veno-Echo.cpp **** 
 9549              		.loc 19 525 27 is_stmt 0 view .LVU2631
 9550 0aa0 DFED297A 		vldr.32	s15, .L546+4
 9551 0aa4 9DED0F0A 		vldr.32	s0, [sp, #60]
 9552 0aa8 2046     		mov	r0, r4
 9553 0aaa 20EE270A 		vmul.f32	s0, s0, s15
 9554 0aae FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 9555              	.LVL640:
 527:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 9556              		.loc 19 527 9 is_stmt 1 view .LVU2632
 527:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 9557              		.loc 19 527 9 is_stmt 0 view .LVU2633
 9558              	.LBE1436:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 298


 9559              	.LBE1766:
 9560              	.LBE1786:
 9561              	.LBE1797:
 9562              		.loc 9 56 27 is_stmt 1 view .LVU2634
 9563              	.LBB1798:
 9564              	.LBB1787:
 9565              	.LBB1767:
 9566              	.LBB1437:
 527:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 9567              		.loc 19 527 51 is_stmt 0 view .LVU2635
 9568 0ab2 F2EE046A 		vmov.f32	s13, #1.0e+1
 9569 0ab6 95ED0D7A 		vldr.32	s14, [r5, #52]
 530:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 9570              		.loc 19 530 55 view .LVU2636
 9571 0aba 0EA9     		add	r1, sp, #56
 528:Veno-Echo.cpp **** 
 9572              		.loc 19 528 51 view .LVU2637
 9573 0abc D4ED0D7A 		vldr.32	s15, [r4, #52]
 530:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 9574              		.loc 19 530 55 view .LVU2638
 9575 0ac0 10AA     		add	r2, sp, #64
 527:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 9576              		.loc 19 527 51 view .LVU2639
 9577 0ac2 27EE267A 		vmul.f32	s14, s14, s13
 530:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 9578              		.loc 19 530 55 view .LVU2640
 9579 0ac6 3348     		ldr	r0, .L546+80
 528:Veno-Echo.cpp **** 
 9580              		.loc 19 528 51 view .LVU2641
 9581 0ac8 67EEA67A 		vmul.f32	s15, s15, s13
 527:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 9582              		.loc 19 527 58 view .LVU2642
 9583 0acc 8DED107A 		vstr.32	s14, [sp, #64]
 528:Veno-Echo.cpp **** 
 9584              		.loc 19 528 9 is_stmt 1 view .LVU2643
 9585              	.LVL641:
 528:Veno-Echo.cpp **** 
 9586              		.loc 19 528 9 is_stmt 0 view .LVU2644
 9587              	.LBE1437:
 9588              	.LBE1767:
 9589              	.LBE1787:
 9590              	.LBE1798:
 9591              		.loc 9 56 27 is_stmt 1 view .LVU2645
 9592              	.LBB1799:
 9593              	.LBB1788:
 9594              	.LBB1768:
 9595              	.LBB1438:
 528:Veno-Echo.cpp **** 
 9596              		.loc 19 528 58 is_stmt 0 view .LVU2646
 9597 0ad0 CDED117A 		vstr.32	s15, [sp, #68]
 530:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 9598              		.loc 19 530 9 is_stmt 1 view .LVU2647
 530:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 9599              		.loc 19 530 55 is_stmt 0 view .LVU2648
 9600 0ad4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9601              	.LVL642:
 531:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 299


 9602              		.loc 19 531 55 view .LVU2649
 9603 0ad8 0FA9     		add	r1, sp, #60
 9604 0ada 11AA     		add	r2, sp, #68
 9605 0adc 2E48     		ldr	r0, .L546+84
 530:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 9606              		.loc 19 530 30 view .LVU2650
 9607 0ade 8DED0E0A 		vstr.32	s0, [sp, #56]
 531:Veno-Echo.cpp **** 
 9608              		.loc 19 531 9 is_stmt 1 view .LVU2651
 531:Veno-Echo.cpp **** 
 9609              		.loc 19 531 55 is_stmt 0 view .LVU2652
 9610 0ae2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9611              	.LVL643:
 534:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 9612              		.loc 19 534 53 view .LVU2653
 9613 0ae6 0EAA     		add	r2, sp, #56
 9614 0ae8 0AA9     		add	r1, sp, #40
 9615 0aea 2C48     		ldr	r0, .L546+88
 531:Veno-Echo.cpp **** 
 9616              		.loc 19 531 30 view .LVU2654
 9617 0aec 8DED0F0A 		vstr.32	s0, [sp, #60]
 534:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 9618              		.loc 19 534 9 is_stmt 1 view .LVU2655
 534:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 9619              		.loc 19 534 53 is_stmt 0 view .LVU2656
 9620 0af0 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9621              	.LVL644:
 535:Veno-Echo.cpp **** 
 9622              		.loc 19 535 53 view .LVU2657
 9623 0af4 0FAA     		add	r2, sp, #60
 9624 0af6 0BA9     		add	r1, sp, #44
 9625 0af8 2948     		ldr	r0, .L546+92
 534:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 9626              		.loc 19 534 27 view .LVU2658
 9627 0afa 8DED0A0A 		vstr.32	s0, [sp, #40]
 535:Veno-Echo.cpp **** 
 9628              		.loc 19 535 9 is_stmt 1 view .LVU2659
 535:Veno-Echo.cpp **** 
 9629              		.loc 19 535 53 is_stmt 0 view .LVU2660
 9630 0afe FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9631              	.LVL645:
 9632 0b02 DDED0A7A 		vldr.32	s15, [sp, #40]
 535:Veno-Echo.cpp **** 
 9633              		.loc 19 535 27 view .LVU2661
 9634 0b06 8DED0B0A 		vstr.32	s0, [sp, #44]
 9635              	.LBE1438:
 9636 0b0a FFF721BB 		b	.L483
 9637              	.LVL646:
 9638              	.L507:
 535:Veno-Echo.cpp **** 
 9639              		.loc 19 535 27 view .LVU2662
 9640              	.LBE1768:
 9641              	.LBB1769:
 9642              	.LBB1411:
1600:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 9643              		.loc 19 1600 19 view .LVU2663
 9644 0b0e F0EE477A 		vmov.f32	s15, s14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 300


 9645              	.LVL647:
1600:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 9646              		.loc 19 1600 19 view .LVU2664
 9647 0b12 FFF703BB 		b	.L479
 9648              	.LVL648:
 9649              	.L530:
1600:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 9650              		.loc 19 1600 19 view .LVU2665
 9651              	.LBE1411:
 9652              	.LBE1769:
 555:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 9653              		.loc 19 555 13 is_stmt 1 view .LVU2666
 555:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 9654              		.loc 19 555 18 is_stmt 0 view .LVU2667
 9655 0b16 DBED006A 		vldr.32	s13, [fp]
 556:Veno-Echo.cpp ****         }
 9656              		.loc 19 556 18 view .LVU2668
 9657 0b1a 9BED017A 		vldr.32	s14, [fp, #4]
 555:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 9658              		.loc 19 555 18 view .LVU2669
 9659 0b1e 77EEA67A 		vadd.f32	s15, s15, s13
 9660              	.LVL649:
 556:Veno-Echo.cpp ****         }
 9661              		.loc 19 556 13 is_stmt 1 view .LVU2670
 556:Veno-Echo.cpp ****         }
 9662              		.loc 19 556 18 is_stmt 0 view .LVU2671
 9663 0b22 30EE070A 		vadd.f32	s0, s0, s14
 9664              	.LVL650:
 556:Veno-Echo.cpp ****         }
 9665              		.loc 19 556 18 view .LVU2672
 9666 0b26 FFF72CBB 		b	.L489
 9667              	.LVL651:
 9668              	.L533:
 9669              	.LBB1770:
 9670              	.LBB1637:
 9671              	.LBB1626:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9672              		.loc 18 141 17 view .LVU2673
 9673 0b2a 049B     		ldr	r3, [sp, #16]
 9674 0b2c 83ED00BA 		vstr.32	s22, [r3]
 9675 0b30 CAE4     		b	.L447
 9676              	.LVL652:
 9677              	.L511:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 9678              		.loc 18 141 17 view .LVU2674
 9679              	.LBE1626:
 9680              	.LBE1637:
 9681              	.LBE1770:
 9682              	.LBB1771:
 9683              	.LBB1439:
 9684              	.LBB1432:
 9685              	.LBB1430:
1600:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 9686              		.loc 19 1600 19 view .LVU2675
 9687 0b32 F0EE667A 		vmov.f32	s15, s13
 9688              	.LVL653:
1600:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 301


 9689              		.loc 19 1600 19 view .LVU2676
 9690 0b36 ACE7     		b	.L485
 9691              	.LVL654:
 9692              	.L509:
1600:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 9693              		.loc 19 1600 19 view .LVU2677
 9694              	.LBE1430:
 9695              	.LBE1432:
 9696              	.LBB1433:
 9697              	.LBB1424:
 9698 0b38 B0EE667A 		vmov.f32	s14, s13
 9699              	.LVL655:
1600:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 9700              		.loc 19 1600 19 view .LVU2678
 9701 0b3c 9FED190A 		vldr.32	s0, .L546+96
 9702 0b40 95E7     		b	.L484
 9703              	.L547:
 9704 0b42 00BF     		.align	2
 9705              	.L546:
 9706 0b44 00000000 		.word	.LANCHOR40
 9707 0b48 CDCCCC3D 		.word	1036831949
 9708 0b4c 00000000 		.word	.LANCHOR21
 9709 0b50 00000000 		.word	.LANCHOR22
 9710 0b54 00000000 		.word	.LANCHOR83
 9711 0b58 00000000 		.word	.LANCHOR84
 9712 0b5c 00000000 		.word	.LANCHOR12
 9713 0b60 00000000 		.word	.LANCHOR13
 9714 0b64 00000000 		.word	.LANCHOR81
 9715 0b68 00000000 		.word	.LANCHOR82
 9716 0b6c 00000000 		.word	.LANCHOR89
 9717 0b70 00000000 		.word	.LANCHOR90
 9718 0b74 249F2400 		.word	2400036
 9719 0b78 1C9F2400 		.word	2400028
 9720 0b7c 00000000 		.word	.LANCHOR23
 9721 0b80 00000000 		.word	.LANCHOR24
 9722 0b84 00000000 		.word	.LANCHOR87
 9723 0b88 00000000 		.word	.LANCHOR88
 9724 0b8c 00000000 		.word	.LANCHOR14
 9725 0b90 00000000 		.word	.LANCHOR15
 9726 0b94 00000000 		.word	.LANCHOR85
 9727 0b98 00000000 		.word	.LANCHOR86
 9728 0b9c 00000000 		.word	.LANCHOR91
 9729 0ba0 00000000 		.word	.LANCHOR92
 9730 0ba4 CDCC4C3E 		.word	1045220557
 9731 0ba8 CDCC4CBE 		.word	3192704205
 9732              	.LVL656:
 9733              	.L502:
1600:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 9734              		.loc 19 1600 19 view .LVU2679
 9735              	.LBE1424:
 9736              	.LBE1433:
 9737              	.LBE1439:
 9738              	.LBE1771:
 9739              	.LBB1772:
 9740              	.LBB1699:
 9741              	.LBB1692:
 9742              	.LBB1690:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 302


 9743 0bac F0EE667A 		vmov.f32	s15, s13
 9744              	.LVL657:
1600:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 9745              		.loc 19 1600 19 view .LVU2680
 9746 0bb0 76E6     		b	.L467
 9747              	.LVL658:
 9748              	.L500:
1600:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 9749              		.loc 19 1600 19 view .LVU2681
 9750              	.LBE1690:
 9751              	.LBE1692:
 9752              	.LBB1693:
 9753              	.LBB1684:
 9754 0bb2 B0EE667A 		vmov.f32	s14, s13
 9755              	.LVL659:
1600:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 9756              		.loc 19 1600 19 view .LVU2682
 9757 0bb6 1FED050A 		vldr.32	s0, .L546+96
 9758 0bba 5EE6     		b	.L466
 9759              	.LVL660:
 9760              	.L443:
1600:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 9761              		.loc 19 1600 19 view .LVU2683
 9762              	.LBE1684:
 9763              	.LBE1693:
 9764              	.LBE1699:
 9765              	.LBE1772:
 9766              	.LBB1773:
 9767              	.LBB1638:
 9768              	.LBB1627:
 116:delayline_reverse.h ****                 }
 9769              		.loc 18 116 21 view .LVU2684
 9770 0bbc AB60     		str	r3, [r5, #8]
 9771 0bbe DEE6     		b	.L445
 9772              	.LVL661:
 9773              	.L453:
 116:delayline_reverse.h ****                 }
 9774              		.loc 18 116 21 view .LVU2685
 9775              	.LBE1627:
 9776              	.LBE1638:
 9777              	.LBE1773:
 9778              	.LBB1774:
 9779              	.LBB1664:
 9780              	.LBB1660:
 9781 0bc0 A260     		str	r2, [r4, #8]
 9782 0bc2 B9E6     		b	.L455
 9783              	.LVL662:
 9784              	.L422:
 116:delayline_reverse.h ****                 }
 9785              		.loc 18 116 21 view .LVU2686
 9786              	.LBE1660:
 9787              	.LBE1664:
 9788              	.LBE1774:
 9789              	.LBE1788:
 9790              	.LBE1799:
 576:Veno-Echo.cpp **** 
 9791              		.loc 19 576 1 view .LVU2687
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 303


 9792 0bc4 13B0     		add	sp, sp, #76
 9793              		.cfi_remember_state
 9794              		.cfi_def_cfa_offset 92
 9795              		@ sp needed
 9796 0bc6 BDEC0E8B 		vldm	sp!, {d8-d14}
 9797              		.cfi_restore 92
 9798              		.cfi_restore 93
 9799              		.cfi_restore 90
 9800              		.cfi_restore 91
 9801              		.cfi_restore 88
 9802              		.cfi_restore 89
 9803              		.cfi_restore 86
 9804              		.cfi_restore 87
 9805              		.cfi_restore 84
 9806              		.cfi_restore 85
 9807              		.cfi_restore 82
 9808              		.cfi_restore 83
 9809              		.cfi_restore 80
 9810              		.cfi_restore 81
 9811              		.cfi_def_cfa_offset 36
 9812 0bca BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 9813              	.LVL663:
 9814              	.L536:
 9815              		.cfi_restore_state
 9816              	.LBB1800:
 9817              	.LBB1789:
 9818              	.LBB1775:
 9819              	.LBB1665:
 9820              	.LBB1661:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9821              		.loc 18 130 17 view .LVU2688
 9822 0bce C2ED007A 		vstr.32	s15, [r2]
 9823 0bd2 E4E4     		b	.L457
 9824              	.L460:
 145:delayline_reverse.h ****                     playinghead_ = false;
 9825              		.loc 18 145 21 view .LVU2689
 9826 0bd4 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9827              		.loc 18 144 21 view .LVU2690
 9828 0bd6 039C     		ldr	r4, [sp, #12]
 9829              	.LVL664:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9830              		.loc 18 144 21 view .LVU2691
 9831 0bd8 2260     		str	r2, [r4]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 9832              		.loc 18 145 21 view .LVU2692
 9833 0bda 1970     		strb	r1, [r3]
 146:delayline_reverse.h ****                 }
 9834              		.loc 18 146 21 view .LVU2693
 9835 0bdc 0170     		strb	r1, [r0]
 9836 0bde DEE4     		b	.L457
 9837              	.LVL665:
 9838              	.L501:
 146:delayline_reverse.h ****                 }
 9839              		.loc 18 146 21 view .LVU2694
 9840              	.LBE1661:
 9841              	.LBE1665:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 304


 9842              	.LBE1775:
 9843              	.LBB1776:
 9844              	.LBB1700:
 9845              	.LBB1694:
 9846              	.LBB1685:
1602:Veno-Echo.cpp ****     else
 9847              		.loc 19 1602 19 view .LVU2695
 9848 0be0 B0EE667A 		vmov.f32	s14, s13
 9849              	.LVL666:
1602:Veno-Echo.cpp ****     else
 9850              		.loc 19 1602 19 view .LVU2696
 9851 0be4 1FED100A 		vldr.32	s0, .L546+100
 9852 0be8 47E6     		b	.L466
 9853              	.LVL667:
 9854              	.L510:
1602:Veno-Echo.cpp ****     else
 9855              		.loc 19 1602 19 view .LVU2697
 9856              	.LBE1685:
 9857              	.LBE1694:
 9858              	.LBE1700:
 9859              	.LBE1776:
 9860              	.LBB1777:
 9861              	.LBB1440:
 9862              	.LBB1434:
 9863              	.LBB1425:
 9864 0bea B0EE667A 		vmov.f32	s14, s13
 9865              	.LVL668:
1602:Veno-Echo.cpp ****     else
 9866              		.loc 19 1602 19 view .LVU2698
 9867 0bee 1FED120A 		vldr.32	s0, .L546+100
 9868 0bf2 3CE7     		b	.L484
 9869              	.LVL669:
 9870              	.L424:
1602:Veno-Echo.cpp ****     else
 9871              		.loc 19 1602 19 view .LVU2699
 9872              	.LBE1425:
 9873              	.LBE1434:
 9874              	.LBE1440:
 9875              	.LBE1777:
 9876              	.LBE1789:
 9877              	.LBE1800:
 343:Veno-Echo.cpp ****                 Update_filterXfade();
 9878              		.loc 19 343 13 is_stmt 1 view .LVU2700
 344:Veno-Echo.cpp ****             break;
 9879              		.loc 19 344 17 view .LVU2701
 344:Veno-Echo.cpp ****             break;
 9880              		.loc 19 344 35 is_stmt 0 view .LVU2702
 9881 0bf4 FFF7FEFF 		bl	_Z18Update_filterXfadev
 9882              	.LVL670:
 345:Veno-Echo.cpp ****         }
 9883              		.loc 19 345 13 is_stmt 1 view .LVU2703
 9884 0bf8 FFF739BA 		b	.L423
 9885              	.L427:
 335:Veno-Echo.cpp ****                 Update_width();
 9886              		.loc 19 335 13 view .LVU2704
 336:Veno-Echo.cpp ****             break;
 9887              		.loc 19 336 17 view .LVU2705
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 305


 336:Veno-Echo.cpp ****             break;
 9888              		.loc 19 336 29 is_stmt 0 view .LVU2706
 9889 0bfc FFF7FEFF 		bl	_Z12Update_widthv
 9890              	.LVL671:
 337:Veno-Echo.cpp **** 
 9891              		.loc 19 337 13 is_stmt 1 view .LVU2707
 9892 0c00 FFF735BA 		b	.L423
 9893              	.L428:
 331:Veno-Echo.cpp ****                 Update_width_CV();
 9894              		.loc 19 331 13 view .LVU2708
 332:Veno-Echo.cpp ****             break;
 9895              		.loc 19 332 17 view .LVU2709
 9896              	.LBB1801:
 9897              	.LBI1801:
1034:Veno-Echo.cpp **** {
 9898              		.loc 19 1034 6 view .LVU2710
 9899              	.LBB1802:
1036:Veno-Echo.cpp **** }
 9900              		.loc 19 1036 5 view .LVU2711
1036:Veno-Echo.cpp **** }
 9901              		.loc 19 1036 30 is_stmt 0 view .LVU2712
 9902 0c04 0521     		movs	r1, #5
 9903 0c06 2748     		ldr	r0, .L548
 9904 0c08 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 9905              	.LVL672:
1036:Veno-Echo.cpp **** }
 9906              		.loc 19 1036 13 view .LVU2713
 9907 0c0c 264B     		ldr	r3, .L548+4
 9908 0c0e 83ED000A 		vstr.32	s0, [r3]
1037:Veno-Echo.cpp **** 
 9909              		.loc 19 1037 1 view .LVU2714
 9910 0c12 FFF72CBA 		b	.L423
 9911              	.L429:
 9912              	.LBE1802:
 9913              	.LBE1801:
 327:Veno-Echo.cpp ****                 Update_drywet();
 9914              		.loc 19 327 13 is_stmt 1 view .LVU2715
 328:Veno-Echo.cpp ****             break;
 9915              		.loc 19 328 17 view .LVU2716
 328:Veno-Echo.cpp ****             break;
 9916              		.loc 19 328 30 is_stmt 0 view .LVU2717
 9917 0c16 FFF7FEFF 		bl	_Z13Update_drywetv
 9918              	.LVL673:
 329:Veno-Echo.cpp **** 
 9919              		.loc 19 329 13 is_stmt 1 view .LVU2718
 9920 0c1a FFF728BA 		b	.L423
 9921              	.L430:
 323:Veno-Echo.cpp ****                 Update_drywet_CV();
 9922              		.loc 19 323 13 view .LVU2719
 324:Veno-Echo.cpp ****             break;
 9923              		.loc 19 324 17 view .LVU2720
 9924              	.LBB1803:
 9925              	.LBI1803:
 978:Veno-Echo.cpp **** {
 9926              		.loc 19 978 6 view .LVU2721
 9927              	.LBB1804:
 980:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 306


 9928              		.loc 19 980 5 view .LVU2722
 980:Veno-Echo.cpp **** }
 9929              		.loc 19 980 32 is_stmt 0 view .LVU2723
 9930 0c1e 0421     		movs	r1, #4
 9931 0c20 2048     		ldr	r0, .L548
 9932 0c22 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 9933              	.LVL674:
 980:Veno-Echo.cpp **** }
 9934              		.loc 19 980 15 view .LVU2724
 9935 0c26 214B     		ldr	r3, .L548+8
 9936 0c28 83ED000A 		vstr.32	s0, [r3]
 981:Veno-Echo.cpp **** 
 9937              		.loc 19 981 1 view .LVU2725
 9938 0c2c FFF71FBA 		b	.L423
 9939              	.L431:
 9940              	.LBE1804:
 9941              	.LBE1803:
 319:Veno-Echo.cpp ****                 Update_feedbackR();
 9942              		.loc 19 319 13 is_stmt 1 view .LVU2726
 320:Veno-Echo.cpp ****             break;
 9943              		.loc 19 320 17 view .LVU2727
 320:Veno-Echo.cpp ****             break;
 9944              		.loc 19 320 33 is_stmt 0 view .LVU2728
 9945 0c30 FFF7FEFF 		bl	_Z16Update_feedbackRv
 9946              	.LVL675:
 321:Veno-Echo.cpp **** 
 9947              		.loc 19 321 13 is_stmt 1 view .LVU2729
 9948 0c34 FFF71BBA 		b	.L423
 9949              	.L432:
 315:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 9950              		.loc 19 315 13 view .LVU2730
 316:Veno-Echo.cpp ****             break;
 9951              		.loc 19 316 17 view .LVU2731
 9952              	.LBB1805:
 9953              	.LBI1805:
 945:Veno-Echo.cpp **** {
 9954              		.loc 19 945 6 view .LVU2732
 9955              	.LBB1806:
 947:Veno-Echo.cpp **** }
 9956              		.loc 19 947 5 view .LVU2733
 947:Veno-Echo.cpp **** }
 9957              		.loc 19 947 35 is_stmt 0 view .LVU2734
 9958 0c38 0321     		movs	r1, #3
 9959 0c3a 1A48     		ldr	r0, .L548
 9960 0c3c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 9961              	.LVL676:
 947:Veno-Echo.cpp **** }
 9962              		.loc 19 947 18 view .LVU2735
 9963 0c40 1B4B     		ldr	r3, .L548+12
 9964 0c42 83ED000A 		vstr.32	s0, [r3]
 948:Veno-Echo.cpp **** 
 9965              		.loc 19 948 1 view .LVU2736
 9966 0c46 FFF712BA 		b	.L423
 9967              	.L433:
 9968              	.LBE1806:
 9969              	.LBE1805:
 311:Veno-Echo.cpp ****                 Update_feedbackL();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 307


 9970              		.loc 19 311 13 is_stmt 1 view .LVU2737
 312:Veno-Echo.cpp ****             break;
 9971              		.loc 19 312 17 view .LVU2738
 312:Veno-Echo.cpp ****             break;
 9972              		.loc 19 312 33 is_stmt 0 view .LVU2739
 9973 0c4a FFF7FEFF 		bl	_Z16Update_feedbackLv
 9974              	.LVL677:
 313:Veno-Echo.cpp **** 
 9975              		.loc 19 313 13 is_stmt 1 view .LVU2740
 9976 0c4e FFF70EBA 		b	.L423
 9977              	.L434:
 307:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 9978              		.loc 19 307 13 view .LVU2741
 308:Veno-Echo.cpp ****             break;
 9979              		.loc 19 308 17 view .LVU2742
 9980              	.LBB1807:
 9981              	.LBI1807:
 911:Veno-Echo.cpp **** {
 9982              		.loc 19 911 6 view .LVU2743
 9983              	.LBB1808:
 913:Veno-Echo.cpp **** }
 9984              		.loc 19 913 5 view .LVU2744
 913:Veno-Echo.cpp **** }
 9985              		.loc 19 913 35 is_stmt 0 view .LVU2745
 9986 0c52 0221     		movs	r1, #2
 9987 0c54 1348     		ldr	r0, .L548
 9988 0c56 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 9989              	.LVL678:
 913:Veno-Echo.cpp **** }
 9990              		.loc 19 913 18 view .LVU2746
 9991 0c5a 164B     		ldr	r3, .L548+16
 9992 0c5c 83ED000A 		vstr.32	s0, [r3]
 914:Veno-Echo.cpp **** void Update_feedbackL()
 9993              		.loc 19 914 1 view .LVU2747
 9994 0c60 FFF705BA 		b	.L423
 9995              	.L435:
 9996              	.LBE1808:
 9997              	.LBE1807:
 303:Veno-Echo.cpp ****                 Update_DelayTimeR();
 9998              		.loc 19 303 13 is_stmt 1 view .LVU2748
 304:Veno-Echo.cpp ****             break;
 9999              		.loc 19 304 17 view .LVU2749
 304:Veno-Echo.cpp ****             break;
 10000              		.loc 19 304 34 is_stmt 0 view .LVU2750
 10001 0c64 FFF7FEFF 		bl	_Z17Update_DelayTimeRv
 10002              	.LVL679:
 305:Veno-Echo.cpp **** 
 10003              		.loc 19 305 13 is_stmt 1 view .LVU2751
 10004 0c68 FFF701BA 		b	.L423
 10005              	.L436:
 299:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 10006              		.loc 19 299 13 view .LVU2752
 300:Veno-Echo.cpp ****             break;
 10007              		.loc 19 300 17 view .LVU2753
 10008              	.LBB1809:
 10009              	.LBI1809:
 849:Veno-Echo.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 308


 10010              		.loc 19 849 6 view .LVU2754
 10011              	.LBB1810:
 851:Veno-Echo.cpp **** }
 10012              		.loc 19 851 5 view .LVU2755
 851:Veno-Echo.cpp **** }
 10013              		.loc 19 851 36 is_stmt 0 view .LVU2756
 10014 0c6c 0121     		movs	r1, #1
 10015 0c6e 0D48     		ldr	r0, .L548
 10016 0c70 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 10017              	.LVL680:
 851:Veno-Echo.cpp **** }
 10018              		.loc 19 851 19 view .LVU2757
 10019 0c74 104B     		ldr	r3, .L548+20
 10020 0c76 83ED000A 		vstr.32	s0, [r3]
 852:Veno-Echo.cpp **** 
 10021              		.loc 19 852 1 view .LVU2758
 10022 0c7a FFF7F8B9 		b	.L423
 10023              	.L437:
 10024              	.LBE1810:
 10025              	.LBE1809:
 295:Veno-Echo.cpp ****                 Update_DelayTimeL();
 10026              		.loc 19 295 13 is_stmt 1 view .LVU2759
 296:Veno-Echo.cpp ****             break;
 10027              		.loc 19 296 17 view .LVU2760
 296:Veno-Echo.cpp ****             break;
 10028              		.loc 19 296 34 is_stmt 0 view .LVU2761
 10029 0c7e FFF7FEFF 		bl	_Z17Update_DelayTimeLv
 10030              	.LVL681:
 297:Veno-Echo.cpp **** 
 10031              		.loc 19 297 13 is_stmt 1 view .LVU2762
 10032 0c82 FFF7F4B9 		b	.L423
 10033              	.L438:
 291:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 10034              		.loc 19 291 13 view .LVU2763
 292:Veno-Echo.cpp ****             break;
 10035              		.loc 19 292 17 view .LVU2764
 10036              	.LBB1811:
 10037              	.LBI1811:
 786:Veno-Echo.cpp **** {
 10038              		.loc 19 786 6 view .LVU2765
 10039              	.LBB1812:
 788:Veno-Echo.cpp **** }
 10040              		.loc 19 788 5 view .LVU2766
 788:Veno-Echo.cpp **** }
 10041              		.loc 19 788 36 is_stmt 0 view .LVU2767
 10042 0c86 0021     		movs	r1, #0
 10043 0c88 0648     		ldr	r0, .L548
 10044 0c8a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 10045              	.LVL682:
 788:Veno-Echo.cpp **** }
 10046              		.loc 19 788 19 view .LVU2768
 10047 0c8e 0B4B     		ldr	r3, .L548+24
 10048 0c90 83ED000A 		vstr.32	s0, [r3]
 789:Veno-Echo.cpp **** 
 10049              		.loc 19 789 1 view .LVU2769
 10050 0c94 FFF7EBB9 		b	.L423
 10051              	.L439:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 309


 10052              	.LBE1812:
 10053              	.LBE1811:
 286:Veno-Echo.cpp ****                 Update_Buttons();
 10054              		.loc 19 286 13 is_stmt 1 view .LVU2770
 287:Veno-Echo.cpp ****                 GetModCV();
 10055              		.loc 19 287 17 view .LVU2771
 287:Veno-Echo.cpp ****                 GetModCV();
 10056              		.loc 19 287 31 is_stmt 0 view .LVU2772
 10057 0c98 FFF7FEFF 		bl	_Z14Update_Buttonsv
 10058              	.LVL683:
 288:Veno-Echo.cpp ****             break;
 10059              		.loc 19 288 17 is_stmt 1 view .LVU2773
 288:Veno-Echo.cpp ****             break;
 10060              		.loc 19 288 25 is_stmt 0 view .LVU2774
 10061 0c9c FFF7FEFF 		bl	_Z8GetModCVv
 10062              	.LVL684:
 289:Veno-Echo.cpp **** 
 10063              		.loc 19 289 13 is_stmt 1 view .LVU2775
 10064 0ca0 FFF7E5B9 		b	.L423
 10065              	.L549:
 10066              		.align	2
 10067              	.L548:
 10068 0ca4 18000000 		.word	.LANCHOR4+24
 10069 0ca8 00000000 		.word	.LANCHOR29
 10070 0cac 00000000 		.word	.LANCHOR25
 10071 0cb0 00000000 		.word	.LANCHOR17
 10072 0cb4 00000000 		.word	.LANCHOR7
 10073 0cb8 00000000 		.word	.LANCHOR6
 10074 0cbc 00000000 		.word	.LANCHOR5
 10075              		.cfi_endproc
 10076              	.LFE4288:
 10078              		.section	.text._Z9HardLimitff,"ax",%progbits
 10079              		.align	1
 10080              		.p2align 2,,3
 10081              		.global	_Z9HardLimitff
 10082              		.syntax unified
 10083              		.thumb
 10084              		.thumb_func
 10085              		.fpu fpv5-d16
 10087              	_Z9HardLimitff:
 10088              	.LVL685:
 10089              	.LFB4315:
1597:Veno-Echo.cpp ****     float returnval{};
 10090              		.loc 19 1597 1 view -0
 10091              		.cfi_startproc
 10092              		@ args = 0, pretend = 0, frame = 0
 10093              		@ frame_needed = 0, uses_anonymous_args = 0
 10094              		@ link register save eliminated.
1598:Veno-Echo.cpp ****     if (input > limit)
 10095              		.loc 19 1598 5 view .LVU2777
1599:Veno-Echo.cpp ****         returnval = limit;
 10096              		.loc 19 1599 5 view .LVU2778
 10097 0000 B4EEE00A 		vcmpe.f32	s0, s1
 10098 0004 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10099 0008 07DC     		bgt	.L551
1601:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10100              		.loc 19 1601 10 view .LVU2779
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 310


1601:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10101              		.loc 19 1601 28 is_stmt 0 view .LVU2780
 10102 000a F1EE600A 		vneg.f32	s1, s1
 10103              	.LVL686:
1601:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10104              		.loc 19 1601 10 view .LVU2781
 10105 000e F4EEC00A 		vcmpe.f32	s1, s0
 10106 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1604:Veno-Echo.cpp **** 
 10107              		.loc 19 1604 19 view .LVU2782
 10108 0016 70FE800A 		vselgt.f32	s1, s1, s0
 10109              	.L551:
 10110              	.LVL687:
1606:Veno-Echo.cpp **** }
 10111              		.loc 19 1606 5 is_stmt 1 view .LVU2783
1607:Veno-Echo.cpp **** 
 10112              		.loc 19 1607 1 is_stmt 0 view .LVU2784
 10113 001a B0EE600A 		vmov.f32	s0, s1
 10114              	.LVL688:
1607:Veno-Echo.cpp **** 
 10115              		.loc 19 1607 1 view .LVU2785
 10116 001e 7047     		bx	lr
 10117              		.cfi_endproc
 10118              	.LFE4315:
 10120              		.section	.text._Z10PotCVComboff,"ax",%progbits
 10121              		.align	1
 10122              		.p2align 2,,3
 10123              		.global	_Z10PotCVComboff
 10124              		.syntax unified
 10125              		.thumb
 10126              		.thumb_func
 10127              		.fpu fpv5-d16
 10129              	_Z10PotCVComboff:
 10130              	.LVL689:
 10131              	.LFB4316:
1610:Veno-Echo.cpp ****     float output{};
 10132              		.loc 19 1610 1 is_stmt 1 view -0
 10133              		.cfi_startproc
 10134              		@ args = 0, pretend = 0, frame = 0
 10135              		@ frame_needed = 0, uses_anonymous_args = 0
 10136              		@ link register save eliminated.
1611:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 10137              		.loc 19 1611 5 view .LVU2787
1612:Veno-Echo.cpp **** 
 10138              		.loc 19 1612 5 view .LVU2788
1612:Veno-Echo.cpp **** 
 10139              		.loc 19 1612 39 is_stmt 0 view .LVU2789
 10140 0000 F7EE007A 		vmov.f32	s15, #1.0e+0
1612:Veno-Echo.cpp **** 
 10141              		.loc 19 1612 49 view .LVU2790
 10142 0004 F6EE006A 		vmov.f32	s13, #5.0e-1
1612:Veno-Echo.cpp **** 
 10143              		.loc 19 1612 12 view .LVU2791
 10144 0008 B0EE007A 		vmov.f32	s14, #2.0e+0
1612:Veno-Echo.cpp **** 
 10145              		.loc 19 1612 39 view .LVU2792
 10146 000c 77EEE00A 		vsub.f32	s1, s15, s1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 311


 10147              	.LVL690:
1612:Veno-Echo.cpp **** 
 10148              		.loc 19 1612 49 view .LVU2793
 10149 0010 70EEE60A 		vsub.f32	s1, s1, s13
1612:Veno-Echo.cpp **** 
 10150              		.loc 19 1612 12 view .LVU2794
 10151 0014 A0EE870A 		vfma.f32	s0, s1, s14
 10152              	.LVL691:
1614:Veno-Echo.cpp ****     {
 10153              		.loc 19 1614 5 is_stmt 1 view .LVU2795
 10154 0018 B5EEC00A 		vcmpe.f32	s0, #0
 10155 001c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10156 0020 06D4     		bmi	.L557
1619:Veno-Echo.cpp ****     {
 10157              		.loc 19 1619 5 view .LVU2796
1621:Veno-Echo.cpp ****     }
 10158              		.loc 19 1621 16 is_stmt 0 view .LVU2797
 10159 0022 B4EE670A 		vcmp.f32	s0, s15
 10160 0026 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10161 002a 37FE800A 		vselgt.f32	s0, s15, s0
 10162              	.LVL692:
1621:Veno-Echo.cpp ****     }
 10163              		.loc 19 1621 16 view .LVU2798
 10164 002e 7047     		bx	lr
 10165              	.LVL693:
 10166              	.L557:
1616:Veno-Echo.cpp ****     }
 10167              		.loc 19 1616 16 view .LVU2799
 10168 0030 9FED010A 		vldr.32	s0, .L559
 10169              	.LVL694:
 10170              		.loc 19 1624 5 is_stmt 1 view .LVU2800
1625:Veno-Echo.cpp **** }...
 10171              		.loc 19 1625 1 is_stmt 0 view .LVU2801
 10172 0034 7047     		bx	lr
 10173              	.L560:
 10174 0036 00BF     		.align	2
 10175              	.L559:
 10176 0038 00000000 		.word	0
 10177              		.cfi_endproc
 10178              	.LFE4316:
 10180              		.section	.text.startup._GLOBAL__sub_I_delMemsL,"ax",%progbits
 10181              		.align	1
 10182              		.p2align 2,,3
 10183              		.syntax unified
 10184              		.thumb
 10185              		.thumb_func
 10186              		.fpu fpv5-d16
 10188              	_GLOBAL__sub_I_delMemsL:
 10189              	.LFB4895:
 10190              		.loc 19 1625 1 is_stmt 1 view -0
 10191              		.cfi_startproc
 10192              		@ args = 0, pretend = 0, frame = 0
 10193              		@ frame_needed = 0, uses_anonymous_args = 0
 10194              	.LBB1969:
 10195              	.LBI1969:
 10196              		.loc 19 1625 1 view .LVU2803
 10197              	.LVL695:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 312


 10198              	.LBB1970:
 10199              	.LBB1971:
 10200              	.LBI1971:
  21:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 10201              		.loc 2 21 5 view .LVU2804
 10202              	.LBB1972:
 10203              	.LBB1973:
 10204              	.LBI1973:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 10205              		.loc 6 36 5 view .LVU2805
 10206              	.LBE1973:
 10207              	.LBE1972:
 10208              	.LBE1971:
 10209              	.LBE1970:
 10210              	.LBE1969:
 10211              		.loc 19 1625 1 is_stmt 0 view .LVU2806
 10212 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 10213              		.cfi_def_cfa_offset 24
 10214              		.cfi_offset 4, -24
 10215              		.cfi_offset 5, -20
 10216              		.cfi_offset 6, -16
 10217              		.cfi_offset 7, -12
 10218              		.cfi_offset 8, -8
 10219              		.cfi_offset 14, -4
 10220              	.LBB2092:
 10221              	.LBB2088:
 10222              	.LBB1988:
 10223              	.LBB1986:
 10224              	.LBB1978:
 10225              	.LBB1974:
 10226              	.LBB1975:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 10227              		.loc 6 36 35 view .LVU2807
 10228 0004 9448     		ldr	r0, .L563
 10229 0006 0026     		movs	r6, #0
 10230              	.LBE1975:
 10231              	.LBE1974:
 10232              	.LBE1978:
 10233              	.LBE1986:
 10234              	.LBE1988:
 10235              		.file 25 "Veno-Echo.h"
   1:Veno-Echo.h   **** // Copyright 2020 Adam Fulford
   2:Veno-Echo.h   **** // 
   3:Veno-Echo.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.h   **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.h   **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.h   **** // 
  10:Veno-Echo.h   **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.h   **** // all copies or substantial portions of the Software.
  12:Veno-Echo.h   **** // 
  13:Veno-Echo.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 313


  17:Veno-Echo.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.h   **** // THE SOFTWARE.
  20:Veno-Echo.h   **** // 
  21:Veno-Echo.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.h   **** 
  23:Veno-Echo.h   **** #ifndef VENO_ECHO_H
  24:Veno-Echo.h   **** #define VENO_ECHO_H
  25:Veno-Echo.h   **** 
  26:Veno-Echo.h   **** //#include "daisysp.h"
  27:Veno-Echo.h   **** #include "daisy_seed.h"
  28:Veno-Echo.h   **** 
  29:Veno-Echo.h   **** //using namespace daisysp;
  30:Veno-Echo.h   **** using namespace daisy;
  31:Veno-Echo.h   **** 
  32:Veno-Echo.h   **** static DaisySeed hw;
 10236              		.loc 25 32 18 view .LVU2808
 10237 0008 944C     		ldr	r4, .L563+4
  40:Veno-Echo.cpp **** static Svf LPF_L;
 10238              		.loc 19 40 12 view .LVU2809
 10239 000a 954D     		ldr	r5, .L563+8
 10240              		.loc 25 32 18 view .LVU2810
 10241 000c 2246     		mov	r2, r4
 10242 000e 9549     		ldr	r1, .L563+12
 10243              	.LBB1989:
 10244              	.LBB1987:
 10245              	.LBB1979:
 10246              	.LBB1977:
 10247              	.LBB1976:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 10248              		.loc 6 36 35 view .LVU2811
 10249 0010 4661     		str	r6, [r0, #20]
 10250              	.LVL696:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 10251              		.loc 6 36 35 view .LVU2812
 10252              	.LBE1976:
 10253              	.LBE1977:
 10254              	.LBE1979:
 10255              	.LBB1980:
 10256              	.LBI1980:
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 10257              		.loc 5 84 5 is_stmt 1 view .LVU2813
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 10258              		.loc 5 84 5 is_stmt 0 view .LVU2814
 10259              	.LBE1980:
 10260              	.LBB1981:
 10261              	.LBI1981:
 10262              		.file 26 "../libdaisy/src/per/dac.h"
   1:../libdaisy/src/per/dac.h **** #pragma once
   2:../libdaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../libdaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../libdaisy/src/per/dac.h **** 
   5:../libdaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../libdaisy/src/per/dac.h **** 
   7:../libdaisy/src/per/dac.h **** namespace daisy
   8:../libdaisy/src/per/dac.h **** {
   9:../libdaisy/src/per/dac.h **** /** DAC handle for Built-in DAC Peripheral 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 314


  10:../libdaisy/src/per/dac.h ****  ** 
  11:../libdaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  12:../libdaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  13:../libdaisy/src/per/dac.h ****  **
  14:../libdaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal periphearls is also not supported.
  15:../libdaisy/src/per/dac.h ****  **
  16:../libdaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  17:../libdaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  18:../libdaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  19:../libdaisy/src/per/dac.h ****  ***/
  20:../libdaisy/src/per/dac.h **** class DacHandle
  21:../libdaisy/src/per/dac.h **** {
  22:../libdaisy/src/per/dac.h ****   public:
  23:../libdaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  24:../libdaisy/src/per/dac.h ****     enum class Result
  25:../libdaisy/src/per/dac.h ****     {
  26:../libdaisy/src/per/dac.h ****         OK,
  27:../libdaisy/src/per/dac.h ****         ERR,
  28:../libdaisy/src/per/dac.h ****     };
  29:../libdaisy/src/per/dac.h **** 
  30:../libdaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  31:../libdaisy/src/per/dac.h ****     enum class Channel
  32:../libdaisy/src/per/dac.h ****     {
  33:../libdaisy/src/per/dac.h ****         ONE,
  34:../libdaisy/src/per/dac.h ****         TWO,
  35:../libdaisy/src/per/dac.h ****         BOTH,
  36:../libdaisy/src/per/dac.h ****     };
  37:../libdaisy/src/per/dac.h **** 
  38:../libdaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  39:../libdaisy/src/per/dac.h ****      **
  40:../libdaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  41:../libdaisy/src/per/dac.h ****      **
  42:../libdaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  43:../libdaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  44:../libdaisy/src/per/dac.h ****      ***/
  45:../libdaisy/src/per/dac.h ****     enum class Mode
  46:../libdaisy/src/per/dac.h ****     {
  47:../libdaisy/src/per/dac.h ****         POLLING,
  48:../libdaisy/src/per/dac.h ****         DMA,
  49:../libdaisy/src/per/dac.h ****     };
  50:../libdaisy/src/per/dac.h **** 
  51:../libdaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  52:../libdaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  53:../libdaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  54:../libdaisy/src/per/dac.h ****      ***/
  55:../libdaisy/src/per/dac.h ****     enum class BitDepth
  56:../libdaisy/src/per/dac.h ****     {
  57:../libdaisy/src/per/dac.h ****         BITS_8,
  58:../libdaisy/src/per/dac.h ****         BITS_12
  59:../libdaisy/src/per/dac.h ****     };
  60:../libdaisy/src/per/dac.h **** 
  61:../libdaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  62:../libdaisy/src/per/dac.h ****     enum class BufferState
  63:../libdaisy/src/per/dac.h ****     {
  64:../libdaisy/src/per/dac.h ****         ENABLED,
  65:../libdaisy/src/per/dac.h ****         DISABLED,
  66:../libdaisy/src/per/dac.h ****     };
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 315


  67:../libdaisy/src/per/dac.h **** 
  68:../libdaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  69:../libdaisy/src/per/dac.h ****     struct Config
  70:../libdaisy/src/per/dac.h ****     {
  71:../libdaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  72:../libdaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  73:../libdaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  74:../libdaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  75:../libdaisy/src/per/dac.h ****         uint32_t target_samplerate;
  76:../libdaisy/src/per/dac.h **** 
  77:../libdaisy/src/per/dac.h ****         Channel     chn;
  78:../libdaisy/src/per/dac.h ****         Mode        mode;
  79:../libdaisy/src/per/dac.h ****         BitDepth    bitdepth;
  80:../libdaisy/src/per/dac.h ****         BufferState buff_state;
  81:../libdaisy/src/per/dac.h ****     };
  82:../libdaisy/src/per/dac.h **** 
  83:../libdaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 10263              		.loc 26 83 5 is_stmt 1 view .LVU2815
 10264              	.LBB1982:
 10265              	.LBB1983:
 10266              		.loc 26 83 33 is_stmt 0 view .LVU2816
 10267 0012 0662     		str	r6, [r0, #32]
 10268              	.LVL697:
 10269              		.loc 26 83 33 view .LVU2817
 10270              	.LBE1983:
 10271              	.LBE1982:
 10272              	.LBE1981:
 10273              	.LBB1984:
 10274              	.LBI1984:
  40:../libdaisy/src/hid/usb.h **** 
 10275              		.loc 4 40 5 is_stmt 1 view .LVU2818
  40:../libdaisy/src/hid/usb.h **** 
 10276              		.loc 4 40 5 is_stmt 0 view .LVU2819
 10277              	.LBE1984:
 10278              	.LBB1985:
 10279              	.LBI1985:
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 10280              		.loc 3 56 5 is_stmt 1 view .LVU2820
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 10281              		.loc 3 56 5 is_stmt 0 view .LVU2821
 10282              	.LBE1985:
 10283              	.LBE1987:
 10284              	.LBE1989:
 10285              		.loc 25 32 18 view .LVU2822
 10286 0014 FFF7FEFF 		bl	__aeabi_atexit
 10287              	.LVL698:
 10288              	.LBB1990:
 10289              	.LBI1990:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 10290              		.loc 9 21 5 is_stmt 1 view .LVU2823
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 10291              		.loc 9 21 5 is_stmt 0 view .LVU2824
 10292              	.LBE1990:
  40:Veno-Echo.cpp **** static Svf LPF_L;
 10293              		.loc 19 40 12 view .LVU2825
 10294 0018 2246     		mov	r2, r4
 10295 001a 2946     		mov	r1, r5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 316


 10296 001c 9248     		ldr	r0, .L563+16
 10297 001e FFF7FEFF 		bl	__aeabi_atexit
 10298              	.LVL699:
 10299              	.LBB1991:
 10300              	.LBI1991:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 10301              		.loc 9 21 5 is_stmt 1 view .LVU2826
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 10302              		.loc 9 21 5 is_stmt 0 view .LVU2827
 10303              	.LBE1991:
  41:Veno-Echo.cpp **** static Svf LPF_R;
 10304              		.loc 19 41 12 view .LVU2828
 10305 0022 2246     		mov	r2, r4
 10306 0024 2946     		mov	r1, r5
 10307 0026 9148     		ldr	r0, .L563+20
 10308 0028 FFF7FEFF 		bl	__aeabi_atexit
 10309              	.LVL700:
 10310              	.LBB1992:
 10311              	.LBI1992:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 10312              		.loc 9 21 5 is_stmt 1 view .LVU2829
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 10313              		.loc 9 21 5 is_stmt 0 view .LVU2830
 10314              	.LBE1992:
  42:Veno-Echo.cpp **** static Svf HPF_L;
 10315              		.loc 19 42 12 view .LVU2831
 10316 002c 2246     		mov	r2, r4
 10317 002e 2946     		mov	r1, r5
 10318 0030 8F48     		ldr	r0, .L563+24
 10319 0032 FFF7FEFF 		bl	__aeabi_atexit
 10320              	.LVL701:
 10321              	.LBB1993:
 10322              	.LBI1993:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 10323              		.loc 9 21 5 is_stmt 1 view .LVU2832
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 10324              		.loc 9 21 5 is_stmt 0 view .LVU2833
 10325              	.LBE1993:
  43:Veno-Echo.cpp **** static Svf HPF_R;
 10326              		.loc 19 43 12 view .LVU2834
 10327 0036 2246     		mov	r2, r4
 10328 0038 2946     		mov	r1, r5
 10329 003a 8E48     		ldr	r0, .L563+28
 10330 003c FFF7FEFF 		bl	__aeabi_atexit
 10331              	.LVL702:
 10332              	.LBB1994:
 10333              	.LBI1994:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 10334              		.loc 9 21 5 is_stmt 1 view .LVU2835
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 10335              		.loc 9 21 5 is_stmt 0 view .LVU2836
 10336              	.LBE1994:
  45:Veno-Echo.cpp **** static Svf LPF_L_post;
 10337              		.loc 19 45 12 view .LVU2837
 10338 0040 2246     		mov	r2, r4
 10339 0042 2946     		mov	r1, r5
 10340 0044 8C48     		ldr	r0, .L563+32
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 317


 10341 0046 FFF7FEFF 		bl	__aeabi_atexit
 10342              	.LVL703:
 10343              	.LBB1995:
 10344              	.LBI1995:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 10345              		.loc 9 21 5 is_stmt 1 view .LVU2838
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 10346              		.loc 9 21 5 is_stmt 0 view .LVU2839
 10347              	.LBE1995:
  46:Veno-Echo.cpp **** static Svf LPF_R_post;
 10348              		.loc 19 46 12 view .LVU2840
 10349 004a 2246     		mov	r2, r4
 10350 004c 2946     		mov	r1, r5
 10351 004e 8B48     		ldr	r0, .L563+36
 10352 0050 FFF7FEFF 		bl	__aeabi_atexit
 10353              	.LVL704:
 10354              	.LBB1996:
 10355              	.LBI1996:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 10356              		.loc 9 21 5 is_stmt 1 view .LVU2841
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 10357              		.loc 9 21 5 is_stmt 0 view .LVU2842
 10358              	.LBE1996:
  47:Veno-Echo.cpp **** static Svf HPF_L_post;
 10359              		.loc 19 47 12 view .LVU2843
 10360 0054 2246     		mov	r2, r4
 10361 0056 2946     		mov	r1, r5
 10362 0058 8948     		ldr	r0, .L563+40
 10363 005a FFF7FEFF 		bl	__aeabi_atexit
 10364              	.LVL705:
 10365              	.LBB1997:
 10366              	.LBI1997:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 10367              		.loc 9 21 5 is_stmt 1 view .LVU2844
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 10368              		.loc 9 21 5 is_stmt 0 view .LVU2845
 10369              	.LBE1997:
  48:Veno-Echo.cpp **** static Svf HPF_R_post;
 10370              		.loc 19 48 12 view .LVU2846
 10371 005e 2246     		mov	r2, r4
 10372 0060 2946     		mov	r1, r5
 10373 0062 8848     		ldr	r0, .L563+44
 10374 0064 FFF7FEFF 		bl	__aeabi_atexit
 10375              	.LVL706:
 10376              	.LBB1998:
 10377              	.LBI1998:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 10378              		.loc 8 15 5 is_stmt 1 view .LVU2847
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 10379              		.loc 8 15 5 is_stmt 0 view .LVU2848
 10380              	.LBE1998:
  50:Veno-Echo.cpp **** static Oscillator lfo;
 10381              		.loc 19 50 19 view .LVU2849
 10382 0068 2246     		mov	r2, r4
 10383 006a 8749     		ldr	r1, .L563+48
 10384              	.LBB1999:
 10385              	.LBB2000:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 318


 10386              	.LBB2001:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 10387              		.loc 12 45 13 view .LVU2850
 10388 006c 0025     		movs	r5, #0
 10389              	.LBE2001:
 10390              	.LBE2000:
 10391              	.LBE1999:
  50:Veno-Echo.cpp **** static Oscillator lfo;
 10392              		.loc 19 50 19 view .LVU2851
 10393 006e 8748     		ldr	r0, .L563+52
 10394 0070 FFF7FEFF 		bl	__aeabi_atexit
 10395              	.LVL707:
 10396              	.LBB2006:
 10397              	.LBI1999:
  43:envFollow.h   ****     {
 10398              		.loc 12 43 5 is_stmt 1 view .LVU2852
 10399              	.LBB2004:
 10400              	.LBB2002:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 10401              		.loc 12 45 9 view .LVU2853
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 10402              		.loc 12 48 11 is_stmt 0 view .LVU2854
 10403 0074 864F     		ldr	r7, .L563+56
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 10404              		.loc 12 45 13 view .LVU2855
 10405 0076 8748     		ldr	r0, .L563+60
 10406              	.LBE2002:
 10407              	.LBE2004:
 10408              	.LBE2006:
  51:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 10409              		.loc 19 51 18 view .LVU2856
 10410 0078 2246     		mov	r2, r4
 10411 007a 8749     		ldr	r1, .L563+64
 10412              	.LBB2007:
 10413              	.LBB2005:
 10414              	.LBB2003:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 10415              		.loc 12 45 13 view .LVU2857
 10416 007c 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 10417              		.loc 12 46 9 is_stmt 1 view .LVU2858
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 10418              		.loc 12 46 20 is_stmt 0 view .LVU2859
 10419 007e 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 10420              		.loc 12 47 9 is_stmt 1 view .LVU2860
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 10421              		.loc 12 47 17 is_stmt 0 view .LVU2861
 10422 0080 C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 10423              		.loc 12 48 9 is_stmt 1 view .LVU2862
  50:envFollow.h   ****     }  
 10424              		.loc 12 50 21 is_stmt 0 view .LVU2863
 10425 0082 8560     		str	r5, [r0, #8]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 10426              		.loc 12 48 11 view .LVU2864
 10427 0084 0761     		str	r7, [r0, #16]	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 319


  49:envFollow.h   ****         sample_noDC = 0.0f;
 10428              		.loc 12 49 9 is_stmt 1 view .LVU2865
  49:envFollow.h   ****         sample_noDC = 0.0f;
 10429              		.loc 12 49 15 is_stmt 0 view .LVU2866
 10430 0086 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 10431              		.loc 12 50 9 is_stmt 1 view .LVU2867
 10432              	.LVL708:
  50:envFollow.h   ****     }  
 10433              		.loc 12 50 9 is_stmt 0 view .LVU2868
 10434              	.LBE2003:
 10435              	.LBE2005:
 10436              	.LBE2007:
  51:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 10437              		.loc 19 51 18 view .LVU2869
 10438 0088 FFF7FEFF 		bl	__aeabi_atexit
 10439              	.LVL709:
 10440              	.LBB2008:
 10441              	.LBI2008:
  43:envFollow.h   ****     {
 10442              		.loc 12 43 5 is_stmt 1 view .LVU2870
 10443              	.LBB2009:
 10444              	.LBB2010:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 10445              		.loc 12 45 9 view .LVU2871
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 10446              		.loc 12 45 13 is_stmt 0 view .LVU2872
 10447 008c 8348     		ldr	r0, .L563+68
 10448              	.LBE2010:
 10449              	.LBE2009:
 10450              	.LBE2008:
  53:Veno-Echo.cpp **** static DcBlock DcBlock_LFB, DcBlock_RFB; //DC blocks
 10451              		.loc 19 53 16 view .LVU2873
 10452 008e DFF8D082 		ldr	r8, .L563+264
  51:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 10453              		.loc 19 51 27 view .LVU2874
 10454 0092 2246     		mov	r2, r4
 10455 0094 8049     		ldr	r1, .L563+64
 10456              	.LBB2013:
 10457              	.LBB2012:
 10458              	.LBB2011:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 10459              		.loc 12 45 13 view .LVU2875
 10460 0096 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 10461              		.loc 12 46 9 is_stmt 1 view .LVU2876
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 10462              		.loc 12 46 20 is_stmt 0 view .LVU2877
 10463 0098 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 10464              		.loc 12 47 9 is_stmt 1 view .LVU2878
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 10465              		.loc 12 47 17 is_stmt 0 view .LVU2879
 10466 009a C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 10467              		.loc 12 48 9 is_stmt 1 view .LVU2880
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 320


 10468              		.loc 12 48 11 is_stmt 0 view .LVU2881
 10469 009c 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 10470              		.loc 12 49 9 is_stmt 1 view .LVU2882
  49:envFollow.h   ****         sample_noDC = 0.0f;
 10471              		.loc 12 49 15 is_stmt 0 view .LVU2883
 10472 009e 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 10473              		.loc 12 50 9 is_stmt 1 view .LVU2884
  50:envFollow.h   ****     }  
 10474              		.loc 12 50 21 is_stmt 0 view .LVU2885
 10475 00a0 8560     		str	r5, [r0, #8]	@ float
 10476              	.LVL710:
  50:envFollow.h   ****     }  
 10477              		.loc 12 50 21 view .LVU2886
 10478              	.LBE2011:
 10479              	.LBE2012:
 10480              	.LBE2013:
  51:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 10481              		.loc 19 51 27 view .LVU2887
 10482 00a2 FFF7FEFF 		bl	__aeabi_atexit
 10483              	.LVL711:
 10484              	.LBB2014:
 10485              	.LBI2014:
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 10486              		.loc 11 14 5 is_stmt 1 view .LVU2888
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 10487              		.loc 11 14 5 is_stmt 0 view .LVU2889
 10488              	.LBE2014:
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsL;
 10489              		.loc 19 56 76 view .LVU2890
 10490 00a6 7E4F     		ldr	r7, .L563+72
  53:Veno-Echo.cpp **** static DcBlock DcBlock_LFB, DcBlock_RFB; //DC blocks
 10491              		.loc 19 53 16 view .LVU2891
 10492 00a8 2246     		mov	r2, r4
 10493 00aa 4146     		mov	r1, r8
 10494 00ac 7D48     		ldr	r0, .L563+76
 10495 00ae FFF7FEFF 		bl	__aeabi_atexit
 10496              	.LVL712:
 10497              	.LBB2015:
 10498              	.LBI2015:
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 10499              		.loc 11 14 5 is_stmt 1 view .LVU2892
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 10500              		.loc 11 14 5 is_stmt 0 view .LVU2893
 10501              	.LBE2015:
  53:Veno-Echo.cpp **** static DcBlock DcBlock_LFB, DcBlock_RFB; //DC blocks
 10502              		.loc 19 53 29 view .LVU2894
 10503 00b2 2246     		mov	r2, r4
 10504 00b4 4146     		mov	r1, r8
 10505 00b6 7C48     		ldr	r0, .L563+80
 10506 00b8 FFF7FEFF 		bl	__aeabi_atexit
 10507              	.LVL713:
 10508              	.LBB2016:
 10509              	.LBI2016:
  48:delayline_multitap.h ****     {
 10510              		.loc 17 48 5 is_stmt 1 view .LVU2895
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 321


  48:delayline_multitap.h ****     {
 10511              		.loc 17 48 5 is_stmt 0 view .LVU2896
 10512              	.LBE2016:
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsL_REV; //10 s
 10513              		.loc 19 59 80 view .LVU2897
 10514 00bc 7B4D     		ldr	r5, .L563+84
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsL;
 10515              		.loc 19 56 76 view .LVU2898
 10516 00be 2246     		mov	r2, r4
 10517 00c0 3946     		mov	r1, r7
 10518 00c2 7B48     		ldr	r0, .L563+88
 10519 00c4 FFF7FEFF 		bl	__aeabi_atexit
 10520              	.LVL714:
 10521              	.LBB2017:
 10522              	.LBI2017:
  48:delayline_multitap.h ****     {
 10523              		.loc 17 48 5 is_stmt 1 view .LVU2899
  48:delayline_multitap.h ****     {
 10524              		.loc 17 48 5 is_stmt 0 view .LVU2900
 10525              	.LBE2017:
  57:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 10526              		.loc 19 57 76 view .LVU2901
 10527 00c8 2246     		mov	r2, r4
 10528 00ca 3946     		mov	r1, r7
 10529 00cc 7948     		ldr	r0, .L563+92
 10530 00ce FFF7FEFF 		bl	__aeabi_atexit
 10531              	.LVL715:
 10532              	.LBB2018:
 10533              	.LBI2018:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 10534              		.loc 18 38 5 is_stmt 1 view .LVU2902
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 10535              		.loc 18 38 5 is_stmt 0 view .LVU2903
 10536              	.LBE2018:
  98:Veno-Echo.cpp **** DelayMulti delayL,delayR;
 10537              		.loc 19 98 12 view .LVU2904
 10538 00d2 794F     		ldr	r7, .L563+96
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsL_REV; //10 s
 10539              		.loc 19 59 80 view .LVU2905
 10540 00d4 2246     		mov	r2, r4
 10541 00d6 2946     		mov	r1, r5
 10542 00d8 7848     		ldr	r0, .L563+100
 10543 00da FFF7FEFF 		bl	__aeabi_atexit
 10544              	.LVL716:
 10545              	.LBB2019:
 10546              	.LBI2019:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 10547              		.loc 18 38 5 is_stmt 1 view .LVU2906
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 10548              		.loc 18 38 5 is_stmt 0 view .LVU2907
 10549              	.LBE2019:
  60:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 10550              		.loc 19 60 80 view .LVU2908
 10551 00de 2246     		mov	r2, r4
 10552 00e0 2946     		mov	r1, r5
 10553 00e2 7748     		ldr	r0, .L563+104
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 322


 10554              		.loc 19 102 11 view .LVU2909
 10555 00e4 774D     		ldr	r5, .L563+108
  60:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 10556              		.loc 19 60 80 view .LVU2910
 10557 00e6 FFF7FEFF 		bl	__aeabi_atexit
 10558              	.LVL717:
 10559              	.LBB2020:
 10560              	.LBI2020:
  49:DelayMulti.h  **** ~DelayMulti() {}
 10561              		.loc 16 49 1 is_stmt 1 view .LVU2911
 10562              	.LBB2021:
 10563              	.LBB2022:
 10564              	.LBI2022:
  40:LEDs.h        **** ~TempoLED(){}   //destructor
 10565              		.loc 14 40 1 view .LVU2912
 10566              	.LBB2023:
 10567              	.LBB2024:
 10568              	.LBI2024:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 10569              		.loc 15 24 5 view .LVU2913
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 10570              		.loc 15 24 5 is_stmt 0 view .LVU2914
 10571              	.LBE2024:
 10572              	.LBB2025:
 10573              	.LBI2025:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 10574              		.loc 8 15 5 is_stmt 1 view .LVU2915
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 10575              		.loc 8 15 5 is_stmt 0 view .LVU2916
 10576              	.LBE2025:
 10577              	.LBE2023:
 10578              	.LBE2022:
 10579              	.LBE2021:
 10580              	.LBE2020:
 10581              	.LBE2088:
 10582              	.LBE2092:
  49:DelayMulti.h  **** ~DelayMulti() {}
 10583              		.loc 16 49 14 is_stmt 1 view .LVU2917
  49:DelayMulti.h  **** ~DelayMulti() {}
 10584              		.loc 16 49 14 view .LVU2918
 10585              	.LBB2093:
 10586              	.LBB2089:
  98:Veno-Echo.cpp **** DelayMulti delayL,delayR;
 10587              		.loc 19 98 12 is_stmt 0 view .LVU2919
 10588 00ea 2246     		mov	r2, r4
 10589 00ec 3946     		mov	r1, r7
 10590 00ee 7648     		ldr	r0, .L563+112
 10591 00f0 FFF7FEFF 		bl	__aeabi_atexit
 10592              	.LVL718:
 10593              	.LBB2026:
 10594              	.LBI2026:
  49:DelayMulti.h  **** ~DelayMulti() {}
 10595              		.loc 16 49 1 is_stmt 1 view .LVU2920
 10596              	.LBB2027:
 10597              	.LBB2028:
 10598              	.LBI2028:
  40:LEDs.h        **** ~TempoLED(){}   //destructor
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 323


 10599              		.loc 14 40 1 view .LVU2921
 10600              	.LBB2029:
 10601              	.LBB2030:
 10602              	.LBI2030:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 10603              		.loc 15 24 5 view .LVU2922
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 10604              		.loc 15 24 5 is_stmt 0 view .LVU2923
 10605              	.LBE2030:
 10606              	.LBB2031:
 10607              	.LBI2031:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 10608              		.loc 8 15 5 is_stmt 1 view .LVU2924
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 10609              		.loc 8 15 5 is_stmt 0 view .LVU2925
 10610              	.LBE2031:
 10611              	.LBE2029:
 10612              	.LBE2028:
 10613              	.LBE2027:
 10614              	.LBE2026:
 10615              	.LBE2089:
 10616              	.LBE2093:
  49:DelayMulti.h  **** ~DelayMulti() {}
 10617              		.loc 16 49 14 is_stmt 1 view .LVU2926
  49:DelayMulti.h  **** ~DelayMulti() {}
 10618              		.loc 16 49 14 view .LVU2927
 10619              	.LBB2094:
 10620              	.LBB2090:
  98:Veno-Echo.cpp **** DelayMulti delayL,delayR;
 10621              		.loc 19 98 19 is_stmt 0 view .LVU2928
 10622 00f4 2246     		mov	r2, r4
 10623 00f6 3946     		mov	r1, r7
 10624 00f8 7448     		ldr	r0, .L563+116
 10625 00fa FFF7FEFF 		bl	__aeabi_atexit
 10626              	.LVL719:
 10627              	.LBB2032:
 10628              	.LBI2032:
  60:LEDs.h        ****     ~ButtonLED() {}
 10629              		.loc 14 60 5 is_stmt 1 view .LVU2929
 10630              	.LBB2033:
 10631              	.LBB2034:
 10632              	.LBI2034:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 10633              		.loc 1 40 5 view .LVU2930
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 10634              		.loc 1 40 5 is_stmt 0 view .LVU2931
 10635              	.LBE2034:
 10636              	.LBB2035:
 10637              	.LBI2035:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 10638              		.loc 15 24 5 is_stmt 1 view .LVU2932
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 10639              		.loc 15 24 5 is_stmt 0 view .LVU2933
 10640              	.LBE2035:
 10641              	.LBE2033:
 10642              	.LBE2032:
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 324


 10643              		.loc 19 102 11 view .LVU2934
 10644 00fe 2246     		mov	r2, r4
 10645 0100 2946     		mov	r1, r5
 10646 0102 7348     		ldr	r0, .L563+120
 10647 0104 FFF7FEFF 		bl	__aeabi_atexit
 10648              	.LVL720:
 10649              	.LBB2036:
 10650              	.LBI2036:
  60:LEDs.h        ****     ~ButtonLED() {}
 10651              		.loc 14 60 5 is_stmt 1 view .LVU2935
 10652              	.LBB2037:
 10653              	.LBB2038:
 10654              	.LBI2038:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 10655              		.loc 1 40 5 view .LVU2936
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 10656              		.loc 1 40 5 is_stmt 0 view .LVU2937
 10657              	.LBE2038:
 10658              	.LBB2039:
 10659              	.LBI2039:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 10660              		.loc 15 24 5 is_stmt 1 view .LVU2938
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 10661              		.loc 15 24 5 is_stmt 0 view .LVU2939
 10662              	.LBE2039:
 10663              	.LBE2037:
 10664              	.LBE2036:
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 10665              		.loc 19 102 18 view .LVU2940
 10666 0108 2246     		mov	r2, r4
 10667 010a 2946     		mov	r1, r5
 10668 010c 7148     		ldr	r0, .L563+124
 10669 010e FFF7FEFF 		bl	__aeabi_atexit
 10670              	.LVL721:
 10671              	.LBB2040:
 10672              	.LBI2040:
  60:LEDs.h        ****     ~ButtonLED() {}
 10673              		.loc 14 60 5 is_stmt 1 view .LVU2941
 10674              	.LBB2041:
 10675              	.LBB2042:
 10676              	.LBI2042:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 10677              		.loc 1 40 5 view .LVU2942
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 10678              		.loc 1 40 5 is_stmt 0 view .LVU2943
 10679              	.LBE2042:
 10680              	.LBB2043:
 10681              	.LBI2043:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 10682              		.loc 15 24 5 is_stmt 1 view .LVU2944
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 10683              		.loc 15 24 5 is_stmt 0 view .LVU2945
 10684              	.LBE2043:
 10685              	.LBE2041:
 10686              	.LBE2040:
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 10687              		.loc 19 102 25 view .LVU2946
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 325


 10688 0112 2246     		mov	r2, r4
 10689 0114 2946     		mov	r1, r5
 10690 0116 7048     		ldr	r0, .L563+128
 10691 0118 FFF7FEFF 		bl	__aeabi_atexit
 10692              	.LVL722:
 10693              	.LBB2044:
 10694              	.LBI2044:
  60:LEDs.h        ****     ~ButtonLED() {}
 10695              		.loc 14 60 5 is_stmt 1 view .LVU2947
 10696              	.LBB2045:
 10697              	.LBB2046:
 10698              	.LBI2046:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 10699              		.loc 1 40 5 view .LVU2948
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 10700              		.loc 1 40 5 is_stmt 0 view .LVU2949
 10701              	.LBE2046:
 10702              	.LBB2047:
 10703              	.LBI2047:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 10704              		.loc 15 24 5 is_stmt 1 view .LVU2950
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 10705              		.loc 15 24 5 is_stmt 0 view .LVU2951
 10706              	.LBE2047:
 10707              	.LBE2045:
 10708              	.LBE2044:
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 10709              		.loc 19 102 34 view .LVU2952
 10710 011c 2246     		mov	r2, r4
 10711 011e 2946     		mov	r1, r5
 10712 0120 6E48     		ldr	r0, .L563+132
 10713 0122 FFF7FEFF 		bl	__aeabi_atexit
 10714              	.LVL723:
 10715              	.LBB2048:
 10716              	.LBI2048:
  60:LEDs.h        ****     ~ButtonLED() {}
 10717              		.loc 14 60 5 is_stmt 1 view .LVU2953
 10718              	.LBB2049:
 10719              	.LBB2050:
 10720              	.LBI2050:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 10721              		.loc 1 40 5 view .LVU2954
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 10722              		.loc 1 40 5 is_stmt 0 view .LVU2955
 10723              	.LBE2050:
 10724              	.LBB2051:
 10725              	.LBI2051:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 10726              		.loc 15 24 5 is_stmt 1 view .LVU2956
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 10727              		.loc 15 24 5 is_stmt 0 view .LVU2957
 10728              	.LBE2051:
 10729              	.LBE2049:
 10730              	.LBE2048:
 147:Veno-Echo.cpp **** static Adsr FwdRevLEnv;
 10731              		.loc 19 147 13 view .LVU2958
 10732 0126 6E4F     		ldr	r7, .L563+136
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 326


 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 10733              		.loc 19 102 44 view .LVU2959
 10734 0128 2246     		mov	r2, r4
 10735 012a 2946     		mov	r1, r5
 10736 012c 6D48     		ldr	r0, .L563+140
 10737 012e FFF7FEFF 		bl	__aeabi_atexit
 10738              	.LVL724:
 10739              	.LBB2052:
 10740              	.LBI2052:
  40:LEDs.h        **** ~TempoLED(){}   //destructor
 10741              		.loc 14 40 1 is_stmt 1 view .LVU2960
 10742              	.LBB2053:
 10743              	.LBB2054:
 10744              	.LBI2054:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 10745              		.loc 15 24 5 view .LVU2961
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 10746              		.loc 15 24 5 is_stmt 0 view .LVU2962
 10747              	.LBE2054:
 10748              	.LBB2055:
 10749              	.LBI2055:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 10750              		.loc 8 15 5 is_stmt 1 view .LVU2963
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 10751              		.loc 8 15 5 is_stmt 0 view .LVU2964
 10752              	.LBE2055:
 10753              	.LBE2053:
 10754              	.LBE2052:
 103:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 10755              		.loc 19 103 10 view .LVU2965
 10756 0132 2246     		mov	r2, r4
 10757 0134 6C49     		ldr	r1, .L563+144
 10758 0136 6D48     		ldr	r0, .L563+148
 10759 0138 FFF7FEFF 		bl	__aeabi_atexit
 10760              	.LVL725:
 10761              	.LBB2056:
 10762              	.LBI2056:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 10763              		.loc 7 38 5 is_stmt 1 view .LVU2966
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 10764              		.loc 7 38 5 is_stmt 0 view .LVU2967
 10765              	.LBE2056:
 147:Veno-Echo.cpp **** static Adsr FwdRevLEnv;
 10766              		.loc 19 147 13 view .LVU2968
 10767 013c 2246     		mov	r2, r4
 10768 013e 3946     		mov	r1, r7
 10769 0140 6B48     		ldr	r0, .L563+152
 10770 0142 FFF7FEFF 		bl	__aeabi_atexit
 10771              	.LVL726:
 10772              	.LBB2057:
 10773              	.LBI2057:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 10774              		.loc 7 38 5 is_stmt 1 view .LVU2969
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 10775              		.loc 7 38 5 is_stmt 0 view .LVU2970
 10776              	.LBE2057:
 148:Veno-Echo.cpp **** static Adsr FwdRevREnv;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 327


 10777              		.loc 19 148 13 view .LVU2971
 10778 0146 2246     		mov	r2, r4
 10779 0148 3946     		mov	r1, r7
 10780 014a 6A48     		ldr	r0, .L563+156
 153:Veno-Echo.cpp **** static CrossFade FwdRevLXfade;  //crossfades for reverse delay into fwd delay
 10781              		.loc 19 153 18 view .LVU2972
 10782 014c 6A4D     		ldr	r5, .L563+160
 148:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 10783              		.loc 19 148 13 view .LVU2973
 10784 014e FFF7FEFF 		bl	__aeabi_atexit
 10785              	.LVL727:
 10786              	.LBB2058:
 10787              	.LBI2058:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 10788              		.loc 7 38 5 is_stmt 1 view .LVU2974
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 10789              		.loc 7 38 5 is_stmt 0 view .LVU2975
 10790              	.LBE2058:
 150:Veno-Echo.cpp **** static Adsr LPF_Env;
 10791              		.loc 19 150 13 view .LVU2976
 10792 0152 2246     		mov	r2, r4
 10793 0154 3946     		mov	r1, r7
 10794 0156 6948     		ldr	r0, .L563+164
 10795 0158 FFF7FEFF 		bl	__aeabi_atexit
 10796              	.LVL728:
 10797              	.LBB2059:
 10798              	.LBI2059:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 10799              		.loc 7 38 5 is_stmt 1 view .LVU2977
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 10800              		.loc 7 38 5 is_stmt 0 view .LVU2978
 10801              	.LBE2059:
 151:Veno-Echo.cpp **** static Adsr HPF_Env;
 10802              		.loc 19 151 13 view .LVU2979
 10803 015c 2246     		mov	r2, r4
 10804 015e 3946     		mov	r1, r7
 10805 0160 6748     		ldr	r0, .L563+168
 10806 0162 FFF7FEFF 		bl	__aeabi_atexit
 10807              	.LVL729:
 10808              	.LBB2060:
 10809              	.LBI2060:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 10810              		.loc 10 36 5 is_stmt 1 view .LVU2980
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 10811              		.loc 10 36 5 is_stmt 0 view .LVU2981
 10812              	.LBE2060:
 153:Veno-Echo.cpp **** static CrossFade FwdRevLXfade;  //crossfades for reverse delay into fwd delay
 10813              		.loc 19 153 18 view .LVU2982
 10814 0166 2246     		mov	r2, r4
 10815 0168 2946     		mov	r1, r5
 10816 016a 6648     		ldr	r0, .L563+172
 10817 016c FFF7FEFF 		bl	__aeabi_atexit
 10818              	.LVL730:
 10819              	.LBB2061:
 10820              	.LBI2061:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 10821              		.loc 10 36 5 is_stmt 1 view .LVU2983
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 328


  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 10822              		.loc 10 36 5 is_stmt 0 view .LVU2984
 10823              	.LBE2061:
 154:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 10824              		.loc 19 154 18 view .LVU2985
 10825 0170 2246     		mov	r2, r4
 10826 0172 2946     		mov	r1, r5
 10827 0174 6448     		ldr	r0, .L563+176
 10828 0176 FFF7FEFF 		bl	__aeabi_atexit
 10829              	.LVL731:
 10830              	.LBB2062:
 10831              	.LBI2062:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 10832              		.loc 10 36 5 is_stmt 1 view .LVU2986
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 10833              		.loc 10 36 5 is_stmt 0 view .LVU2987
 10834              	.LBE2062:
 156:Veno-Echo.cpp **** static CrossFade WidthXfade;
 10835              		.loc 19 156 18 view .LVU2988
 10836 017a 2246     		mov	r2, r4
 10837 017c 2946     		mov	r1, r5
 10838 017e 6348     		ldr	r0, .L563+180
 10839 0180 FFF7FEFF 		bl	__aeabi_atexit
 10840              	.LVL732:
 10841              	.LBB2063:
 10842              	.LBI2063:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 10843              		.loc 10 36 5 is_stmt 1 view .LVU2989
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 10844              		.loc 10 36 5 is_stmt 0 view .LVU2990
 10845              	.LBE2063:
 159:Veno-Echo.cpp **** static CrossFade LPF_LXfade;
 10846              		.loc 19 159 18 view .LVU2991
 10847 0184 2246     		mov	r2, r4
 10848 0186 2946     		mov	r1, r5
 10849 0188 6148     		ldr	r0, .L563+184
 10850 018a FFF7FEFF 		bl	__aeabi_atexit
 10851              	.LVL733:
 10852              	.LBB2064:
 10853              	.LBI2064:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 10854              		.loc 10 36 5 is_stmt 1 view .LVU2992
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 10855              		.loc 10 36 5 is_stmt 0 view .LVU2993
 10856              	.LBE2064:
 160:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 10857              		.loc 19 160 18 view .LVU2994
 10858 018e 2246     		mov	r2, r4
 10859 0190 2946     		mov	r1, r5
 10860 0192 6048     		ldr	r0, .L563+188
 10861 0194 FFF7FEFF 		bl	__aeabi_atexit
 10862              	.LVL734:
 10863              	.LBB2065:
 10864              	.LBI2065:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 10865              		.loc 10 36 5 is_stmt 1 view .LVU2995
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 329


 10866              		.loc 10 36 5 is_stmt 0 view .LVU2996
 10867              	.LBE2065:
 161:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 10868              		.loc 19 161 18 view .LVU2997
 10869 0198 2246     		mov	r2, r4
 10870 019a 2946     		mov	r1, r5
 10871 019c 5E48     		ldr	r0, .L563+192
 10872 019e FFF7FEFF 		bl	__aeabi_atexit
 10873              	.LVL735:
 10874              	.LBB2066:
 10875              	.LBI2066:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 10876              		.loc 10 36 5 is_stmt 1 view .LVU2998
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 10877              		.loc 10 36 5 is_stmt 0 view .LVU2999
 10878              	.LBE2066:
 162:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 10879              		.loc 19 162 18 view .LVU3000
 10880 01a2 2246     		mov	r2, r4
 10881 01a4 2946     		mov	r1, r5
 10882 01a6 5D48     		ldr	r0, .L563+196
 10883 01a8 FFF7FEFF 		bl	__aeabi_atexit
 10884              	.LVL736:
 10885              	.LBB2067:
 10886              	.LBI2067:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 10887              		.loc 10 36 5 is_stmt 1 view .LVU3001
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 10888              		.loc 10 36 5 is_stmt 0 view .LVU3002
 10889              	.LBE2067:
 165:Veno-Echo.cpp **** static CrossFade LPF_LXfade_post;
 10890              		.loc 19 165 18 view .LVU3003
 10891 01ac 2246     		mov	r2, r4
 10892 01ae 2946     		mov	r1, r5
 10893 01b0 5B48     		ldr	r0, .L563+200
 10894 01b2 FFF7FEFF 		bl	__aeabi_atexit
 10895              	.LVL737:
 10896              	.LBB2068:
 10897              	.LBI2068:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 10898              		.loc 10 36 5 is_stmt 1 view .LVU3004
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 10899              		.loc 10 36 5 is_stmt 0 view .LVU3005
 10900              	.LBE2068:
 166:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 10901              		.loc 19 166 18 view .LVU3006
 10902 01b6 2246     		mov	r2, r4
 10903 01b8 2946     		mov	r1, r5
 10904 01ba 5A48     		ldr	r0, .L563+204
 10905 01bc FFF7FEFF 		bl	__aeabi_atexit
 10906              	.LVL738:
 10907              	.LBB2069:
 10908              	.LBI2069:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 10909              		.loc 10 36 5 is_stmt 1 view .LVU3007
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 10910              		.loc 10 36 5 is_stmt 0 view .LVU3008
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 330


 10911              	.LBE2069:
 167:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 10912              		.loc 19 167 18 view .LVU3009
 10913 01c0 2246     		mov	r2, r4
 10914 01c2 2946     		mov	r1, r5
 10915 01c4 5848     		ldr	r0, .L563+208
 10916 01c6 FFF7FEFF 		bl	__aeabi_atexit
 10917              	.LVL739:
 10918              	.LBB2070:
 10919              	.LBI2070:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 10920              		.loc 10 36 5 is_stmt 1 view .LVU3010
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 10921              		.loc 10 36 5 is_stmt 0 view .LVU3011
 10922              	.LBE2070:
 168:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 10923              		.loc 19 168 18 view .LVU3012
 10924 01ca 2246     		mov	r2, r4
 10925 01cc 2946     		mov	r1, r5
 10926 01ce 5748     		ldr	r0, .L563+212
 10927 01d0 FFF7FEFF 		bl	__aeabi_atexit
 10928              	.LVL740:
 10929              	.LBB2071:
 10930              	.LBI2071:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 10931              		.loc 10 36 5 is_stmt 1 view .LVU3013
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 10932              		.loc 10 36 5 is_stmt 0 view .LVU3014
 10933              	.LBE2071:
 171:Veno-Echo.cpp **** static CrossFade FilterMix_L;
 10934              		.loc 19 171 18 view .LVU3015
 10935 01d4 2246     		mov	r2, r4
 10936 01d6 2946     		mov	r1, r5
 10937 01d8 5548     		ldr	r0, .L563+216
 10938 01da FFF7FEFF 		bl	__aeabi_atexit
 10939              	.LVL741:
 10940              	.LBB2072:
 10941              	.LBI2072:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 10942              		.loc 10 36 5 is_stmt 1 view .LVU3016
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 10943              		.loc 10 36 5 is_stmt 0 view .LVU3017
 10944              	.LBE2072:
 172:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 10945              		.loc 19 172 18 view .LVU3018
 10946 01de 2246     		mov	r2, r4
 10947 01e0 2946     		mov	r1, r5
 10948 01e2 5448     		ldr	r0, .L563+220
 10949 01e4 FFF7FEFF 		bl	__aeabi_atexit
 10950              	.LVL742:
 10951              	.LBB2073:
 10952              	.LBI2073:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 10953              		.loc 10 36 5 is_stmt 1 view .LVU3019
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 10954              		.loc 10 36 5 is_stmt 0 view .LVU3020
 10955              	.LBE2073:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 331


 178:Veno-Echo.cpp **** Switch ReverseGateL;
 10956              		.loc 19 178 8 view .LVU3021
 10957 01e8 534F     		ldr	r7, .L563+224
 174:Veno-Echo.cpp **** static CrossFade FilterMix_L_post;
 10958              		.loc 19 174 18 view .LVU3022
 10959 01ea 2246     		mov	r2, r4
 10960 01ec 2946     		mov	r1, r5
 10961 01ee 5348     		ldr	r0, .L563+228
 10962 01f0 FFF7FEFF 		bl	__aeabi_atexit
 10963              	.LVL743:
 10964              	.LBB2074:
 10965              	.LBI2074:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 10966              		.loc 10 36 5 is_stmt 1 view .LVU3023
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 10967              		.loc 10 36 5 is_stmt 0 view .LVU3024
 10968              	.LBE2074:
 175:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 10969              		.loc 19 175 18 view .LVU3025
 10970 01f4 2246     		mov	r2, r4
 10971 01f6 2946     		mov	r1, r5
 10972 01f8 5148     		ldr	r0, .L563+232
 10973 01fa FFF7FEFF 		bl	__aeabi_atexit
 10974              	.LVL744:
 10975              	.LBB2075:
 10976              	.LBI2075:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 10977              		.loc 1 40 5 is_stmt 1 view .LVU3026
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 10978              		.loc 1 40 5 is_stmt 0 view .LVU3027
 10979              	.LBE2075:
 178:Veno-Echo.cpp **** Switch ReverseGateL;
 10980              		.loc 19 178 8 view .LVU3028
 10981 01fe 2246     		mov	r2, r4
 10982 0200 3946     		mov	r1, r7
 10983 0202 5048     		ldr	r0, .L563+236
 10984 0204 FFF7FEFF 		bl	__aeabi_atexit
 10985              	.LVL745:
 10986              	.LBB2076:
 10987              	.LBI2076:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 10988              		.loc 1 40 5 is_stmt 1 view .LVU3029
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 10989              		.loc 1 40 5 is_stmt 0 view .LVU3030
 10990              	.LBE2076:
 179:Veno-Echo.cpp **** Switch ReverseGateR;
 10991              		.loc 19 179 8 view .LVU3031
 10992 0208 2246     		mov	r2, r4
 10993 020a 3946     		mov	r1, r7
 10994 020c 4E48     		ldr	r0, .L563+240
 10995 020e FFF7FEFF 		bl	__aeabi_atexit
 10996              	.LVL746:
 10997              	.LBB2077:
 10998              	.LBI2077:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 10999              		.loc 1 40 5 is_stmt 1 view .LVU3032
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 332


 11000              		.loc 1 40 5 is_stmt 0 view .LVU3033
 11001              	.LBE2077:
 182:Veno-Echo.cpp **** Switch Sync;
 11002              		.loc 19 182 8 view .LVU3034
 11003 0212 2246     		mov	r2, r4
 11004 0214 3946     		mov	r1, r7
 11005 0216 4D48     		ldr	r0, .L563+244
 11006 0218 FFF7FEFF 		bl	__aeabi_atexit
 11007              	.LVL747:
 11008              	.LBB2078:
 11009              	.LBI2078:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11010              		.loc 1 40 5 is_stmt 1 view .LVU3035
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 11011              		.loc 1 40 5 is_stmt 0 view .LVU3036
 11012              	.LBE2078:
 183:Veno-Echo.cpp **** Switch ClockIn;
 11013              		.loc 19 183 8 view .LVU3037
 11014 021c 2246     		mov	r2, r4
 11015 021e 3946     		mov	r1, r7
 11016 0220 4B48     		ldr	r0, .L563+248
 11017 0222 FFF7FEFF 		bl	__aeabi_atexit
 11018              	.LVL748:
 11019              	.LBB2079:
 11020              	.LBI2079:
  41:taptempo.h    ****     {
 11021              		.loc 13 41 5 is_stmt 1 view .LVU3038
 11022              	.LBB2080:
 11023              	.LBB2081:
  43:taptempo.h    ****         tap_tolerance_ = 1.25f;
 11024              		.loc 13 43 9 view .LVU3039
  46:taptempo.h    ****         lastTapLength_ = 0;
 11025              		.loc 13 46 17 is_stmt 0 view .LVU3040
 11026 0226 5027     		movs	r7, #80
  43:taptempo.h    ****         tap_tolerance_ = 1.25f;
 11027              		.loc 13 43 18 view .LVU3041
 11028 0228 4A48     		ldr	r0, .L563+252
  45:taptempo.h    ****         mintap_ = 80;
 11029              		.loc 13 45 17 view .LVU3042
 11030 022a 4FF4FA6C 		mov	ip, #2000
  44:taptempo.h    ****         maxtap_ = 2000;
 11031              		.loc 13 44 24 view .LVU3043
 11032 022e DFF834E1 		ldr	lr, .L563+268
  51:taptempo.h    **** 
 11033              		.loc 13 51 19 view .LVU3044
 11034 0232 4FF07E53 		mov	r3, #1065353216
  48:taptempo.h    ****         lastTime_ = 0;
 11035              		.loc 13 48 16 view .LVU3045
 11036 0236 484D     		ldr	r5, .L563+256
 11037              	.LBE2081:
 11038              	.LBE2080:
 11039              	.LBE2079:
 186:Veno-Echo.cpp **** Taptempo BaseTempo; 
 11040              		.loc 19 186 10 view .LVU3046
 11041 0238 2246     		mov	r2, r4
 11042              	.LBB2086:
 11043              	.LBB2084:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 333


 11044              	.LBB2082:
  43:taptempo.h    ****         tap_tolerance_ = 1.25f;
 11045              		.loc 13 43 18 view .LVU3047
 11046 023a 0676     		strb	r6, [r0, #24]
  44:taptempo.h    ****         maxtap_ = 2000;
 11047              		.loc 13 44 9 is_stmt 1 view .LVU3048
  50:taptempo.h    ****         tapRatio_ = 1.0f;
 11048              		.loc 13 50 22 is_stmt 0 view .LVU3049
 11049 023c 8660     		str	r6, [r0, #8]
  44:taptempo.h    ****         maxtap_ = 2000;
 11050              		.loc 13 44 24 view .LVU3050
 11051 023e C0F81CE0 		str	lr, [r0, #28]	@ float
  45:taptempo.h    ****         mintap_ = 80;
 11052              		.loc 13 45 9 is_stmt 1 view .LVU3051
  48:taptempo.h    ****         lastTime_ = 0;
 11053              		.loc 13 48 16 is_stmt 0 view .LVU3052
 11054 0242 0562     		str	r5, [r0, #32]	@ float
 11055              	.LBE2082:
 11056              	.LBE2084:
 11057              	.LBE2086:
 186:Veno-Echo.cpp **** Taptempo BaseTempo; 
 11058              		.loc 19 186 10 view .LVU3053
 11059 0244 4549     		ldr	r1, .L563+260
 11060              	.LBB2087:
 11061              	.LBB2085:
 11062              	.LBB2083:
  51:taptempo.h    **** 
 11063              		.loc 13 51 19 view .LVU3054
 11064 0246 4362     		str	r3, [r0, #36]	@ float
  49:taptempo.h    ****         currentTime_ = 0;
 11065              		.loc 13 49 19 view .LVU3055
 11066 0248 C0E90366 		strd	r6, r6, [r0, #12]
  46:taptempo.h    ****         lastTapLength_ = 0;
 11067              		.loc 13 46 17 view .LVU3056
 11068 024c C0E9007C 		strd	r7, ip, [r0]
  47:taptempo.h    ****         tempo_ = 500.0f;
 11069              		.loc 13 47 9 is_stmt 1 view .LVU3057
  48:taptempo.h    ****         lastTime_ = 0;
 11070              		.loc 13 48 9 view .LVU3058
  49:taptempo.h    ****         currentTime_ = 0;
 11071              		.loc 13 49 9 view .LVU3059
  50:taptempo.h    ****         tapRatio_ = 1.0f;
 11072              		.loc 13 50 9 view .LVU3060
  51:taptempo.h    **** 
 11073              		.loc 13 51 9 view .LVU3061
 11074              	.LVL749:
  51:taptempo.h    **** 
 11075              		.loc 13 51 9 is_stmt 0 view .LVU3062
 11076              	.LBE2083:
 11077              	.LBE2085:
 11078              	.LBE2087:
 11079              	.LBE2090:
 11080              	.LBE2094:
 11081              		.loc 19 1625 1 view .LVU3063
 11082 0250 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 11083              		.cfi_restore 14
 11084              		.cfi_restore 8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 334


 11085              		.cfi_restore 7
 11086              		.cfi_restore 6
 11087              		.cfi_restore 5
 11088              		.cfi_restore 4
 11089              		.cfi_def_cfa_offset 0
 11090              	.LBB2095:
 11091              	.LBB2091:
 186:Veno-Echo.cpp **** Taptempo BaseTempo; 
 11092              		.loc 19 186 10 view .LVU3064
 11093 0254 FFF7FEBF 		b	__aeabi_atexit
 11094              	.LVL750:
 11095              	.L564:
 11096              		.align	2
 11097              	.L563:
 11098 0258 00000000 		.word	.LANCHOR4
 11099 025c 00000000 		.word	__dso_handle
 11100 0260 00000000 		.word	_ZN7daisysp3SvfD1Ev
 11101 0264 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 11102 0268 00000000 		.word	.LANCHOR21
 11103 026c 00000000 		.word	.LANCHOR22
 11104 0270 00000000 		.word	.LANCHOR12
 11105 0274 00000000 		.word	.LANCHOR13
 11106 0278 00000000 		.word	.LANCHOR23
 11107 027c 00000000 		.word	.LANCHOR24
 11108 0280 00000000 		.word	.LANCHOR14
 11109 0284 00000000 		.word	.LANCHOR15
 11110 0288 00000000 		.word	_ZN7daisysp10OscillatorD1Ev
 11111 028c 00000000 		.word	.LANCHOR37
 11112 0290 17B7D138 		.word	953267991
 11113 0294 00000000 		.word	.LANCHOR95
 11114 0298 00000000 		.word	_ZN7daisysp9EnvFollowD1Ev
 11115 029c 00000000 		.word	.LANCHOR96
 11116 02a0 00000000 		.word	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 11117 02a4 00000000 		.word	.LANCHOR72
 11118 02a8 00000000 		.word	.LANCHOR73
 11119 02ac 00000000 		.word	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 11120 02b0 00000000 		.word	delMemsL
 11121 02b4 00000000 		.word	delMemsR
 11122 02b8 00000000 		.word	_ZN10DelayMultiD1Ev
 11123 02bc 00000000 		.word	delMemsL_REV
 11124 02c0 00000000 		.word	delMemsR_REV
 11125 02c4 00000000 		.word	_ZN9ButtonLEDD1Ev
 11126 02c8 00000000 		.word	.LANCHOR0
 11127 02cc 00000000 		.word	.LANCHOR1
 11128 02d0 00000000 		.word	.LANCHOR58
 11129 02d4 00000000 		.word	.LANCHOR59
 11130 02d8 00000000 		.word	.LANCHOR60
 11131 02dc 00000000 		.word	.LANCHOR61
 11132 02e0 00000000 		.word	_ZN7daisysp4AdsrD1Ev
 11133 02e4 00000000 		.word	.LANCHOR62
 11134 02e8 00000000 		.word	_ZN8TempoLEDD1Ev
 11135 02ec 00000000 		.word	.LANCHOR46
 11136 02f0 00000000 		.word	.LANCHOR66
 11137 02f4 00000000 		.word	.LANCHOR67
 11138 02f8 00000000 		.word	_ZN7daisysp9CrossFadeD1Ev
 11139 02fc 00000000 		.word	.LANCHOR68
 11140 0300 00000000 		.word	.LANCHOR69
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 335


 11141 0304 00000000 		.word	.LANCHOR70
 11142 0308 00000000 		.word	.LANCHOR71
 11143 030c 00000000 		.word	.LANCHOR32
 11144 0310 00000000 		.word	.LANCHOR83
 11145 0314 00000000 		.word	.LANCHOR84
 11146 0318 00000000 		.word	.LANCHOR81
 11147 031c 00000000 		.word	.LANCHOR82
 11148 0320 00000000 		.word	.LANCHOR87
 11149 0324 00000000 		.word	.LANCHOR88
 11150 0328 00000000 		.word	.LANCHOR85
 11151 032c 00000000 		.word	.LANCHOR86
 11152 0330 00000000 		.word	.LANCHOR89
 11153 0334 00000000 		.word	.LANCHOR90
 11154 0338 00000000 		.word	_ZN5daisy6SwitchD1Ev
 11155 033c 00000000 		.word	.LANCHOR91
 11156 0340 00000000 		.word	.LANCHOR92
 11157 0344 00000000 		.word	.LANCHOR63
 11158 0348 00000000 		.word	.LANCHOR64
 11159 034c 00000000 		.word	.LANCHOR65
 11160 0350 00000000 		.word	.LANCHOR44
 11161 0354 00000000 		.word	.LANCHOR47
 11162 0358 0000FA43 		.word	1140457472
 11163 035c 00000000 		.word	_ZN8TaptempoD1Ev
 11164 0360 00000000 		.word	_ZN7daisysp7DcBlockD1Ev
 11165 0364 0000A03F 		.word	1067450368
 11166              	.LBE2091:
 11167              	.LBE2095:
 11168              		.cfi_endproc
 11169              	.LFE4895:
 11171              		.section	.init_array,"aw",%init_array
 11172              		.align	2
 11173 0000 00000000 		.word	_GLOBAL__sub_I_delMemsL(target1)
 11174              		.global	AltControls
 11175              		.global	BaseTempo
 11176              		.global	ClockIn
 11177              		.global	Sync
 11178              		.global	ReverseGateR
 11179              		.global	ReverseGateL
 11180              		.global	save_flag
 11181              		.global	delayR_flag
 11182              		.global	delayL_flag
 11183              		.global	PostFilters
 11184              		.global	ClockInFlag
 11185              		.global	mute
 11186              		.global	shift
 11187              		.global	syncMode
 11188              		.global	modulation_CV_Raw
 11189              		.global	ModDepth
 11190              		.global	div_R
 11191              		.global	div_L
 11192              		.global	filterXfade
 11193              		.global	width_CV
 11194              		.global	width
 11195              		.global	drywet_CV
 11196              		.global	drywet
 11197              		.global	crossfeedback_CV
 11198              		.global	crossfeedback
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 336


 11199              		.global	feedbackR_CV
 11200              		.global	feedbackR
 11201              		.global	feedbackL_CV
 11202              		.global	feedbackL
 11203              		.global	delayTimeR_CV
 11204              		.global	delayTimeL_CV
 11205              		.global	tempoLED_BASE
 11206              		.global	Tap_Button
 11207              		.global	Rev_R_sw
 11208              		.global	Rev_L_sw
 11209              		.global	HPF_sw
 11210              		.global	LPF_sw
 11211              		.global	delaysR_REV
 11212              		.global	delaysL_REV
 11213              		.global	delayR
 11214              		.global	delayL
 11215              		.global	delMemsR_REV
 11216              		.global	delMemsL_REV
 11217              		.global	delMemsR
 11218              		.global	delMemsL
 11219              		.section	.bss.AltControls,"aw",%nobits
 11220              		.align	2
 11221              		.set	.LANCHOR16,. + 0
 11224              	AltControls:
 11225 0000 00000000 		.space	32
 11225      00000000 
 11225      00000000 
 11225      00000000 
 11225      00000000 
 11226              		.section	.bss.BaseTempo,"aw",%nobits
 11227              		.align	2
 11228              		.set	.LANCHOR47,. + 0
 11231              	BaseTempo:
 11232 0000 00000000 		.space	40
 11232      00000000 
 11232      00000000 
 11232      00000000 
 11232      00000000 
 11233              		.section	.bss.ClockIn,"aw",%nobits
 11234              		.align	2
 11235              		.set	.LANCHOR44,. + 0
 11238              	ClockIn:
 11239 0000 00000000 		.space	16
 11239      00000000 
 11239      00000000 
 11239      00000000 
 11240              		.section	.bss.ClockInFlag,"aw",%nobits
 11243              	ClockInFlag:
 11244 0000 00       		.space	1
 11245              		.section	.bss.HPF_sw,"aw",%nobits
 11246              		.align	2
 11247              		.set	.LANCHOR59,. + 0
 11250              	HPF_sw:
 11251 0000 00000000 		.space	52
 11251      00000000 
 11251      00000000 
 11251      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 337


 11251      00000000 
 11252              		.section	.bss.LPF_sw,"aw",%nobits
 11253              		.align	2
 11254              		.set	.LANCHOR58,. + 0
 11257              	LPF_sw:
 11258 0000 00000000 		.space	52
 11258      00000000 
 11258      00000000 
 11258      00000000 
 11258      00000000 
 11259              		.section	.bss.ModDepth,"aw",%nobits
 11260              		.align	2
 11261              		.set	.LANCHOR33,. + 0
 11264              	ModDepth:
 11265 0000 00000000 		.space	4
 11266              		.section	.bss.PostFilters,"aw",%nobits
 11267              		.set	.LANCHOR40,. + 0
 11270              	PostFilters:
 11271 0000 00       		.space	1
 11272              		.section	.bss.Rev_L_sw,"aw",%nobits
 11273              		.align	2
 11274              		.set	.LANCHOR60,. + 0
 11277              	Rev_L_sw:
 11278 0000 00000000 		.space	52
 11278      00000000 
 11278      00000000 
 11278      00000000 
 11278      00000000 
 11279              		.section	.bss.Rev_R_sw,"aw",%nobits
 11280              		.align	2
 11281              		.set	.LANCHOR61,. + 0
 11284              	Rev_R_sw:
 11285 0000 00000000 		.space	52
 11285      00000000 
 11285      00000000 
 11285      00000000 
 11285      00000000 
 11286              		.section	.bss.ReverseGateL,"aw",%nobits
 11287              		.align	2
 11288              		.set	.LANCHOR63,. + 0
 11291              	ReverseGateL:
 11292 0000 00000000 		.space	16
 11292      00000000 
 11292      00000000 
 11292      00000000 
 11293              		.section	.bss.ReverseGateR,"aw",%nobits
 11294              		.align	2
 11295              		.set	.LANCHOR64,. + 0
 11298              	ReverseGateR:
 11299 0000 00000000 		.space	16
 11299      00000000 
 11299      00000000 
 11299      00000000 
 11300              		.section	.bss.Sync,"aw",%nobits
 11301              		.align	2
 11302              		.set	.LANCHOR65,. + 0
 11305              	Sync:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 338


 11306 0000 00000000 		.space	16
 11306      00000000 
 11306      00000000 
 11306      00000000 
 11307              		.section	.bss.Tap_Button,"aw",%nobits
 11308              		.align	2
 11309              		.set	.LANCHOR62,. + 0
 11312              	Tap_Button:
 11313 0000 00000000 		.space	52
 11313      00000000 
 11313      00000000 
 11313      00000000 
 11313      00000000 
 11314              		.section	.bss._ZL10FwdRevLEnv,"aw",%nobits
 11315              		.align	2
 11316              		.set	.LANCHOR66,. + 0
 11319              	_ZL10FwdRevLEnv:
 11320 0000 00000000 		.space	56
 11320      00000000 
 11320      00000000 
 11320      00000000 
 11320      00000000 
 11321              		.section	.bss._ZL10FwdRevREnv,"aw",%nobits
 11322              		.align	2
 11323              		.set	.LANCHOR67,. + 0
 11326              	_ZL10FwdRevREnv:
 11327 0000 00000000 		.space	56
 11327      00000000 
 11327      00000000 
 11327      00000000 
 11327      00000000 
 11328              		.section	.bss._ZL10HPF_LXfade,"aw",%nobits
 11329              		.align	2
 11330              		.set	.LANCHOR81,. + 0
 11333              	_ZL10HPF_LXfade:
 11334 0000 00000000 		.space	8
 11334      00000000 
 11335              		.section	.bss._ZL10HPF_L_post,"aw",%nobits
 11336              		.align	2
 11337              		.set	.LANCHOR14,. + 0
 11340              	_ZL10HPF_L_post:
 11341 0000 00000000 		.space	76
 11341      00000000 
 11341      00000000 
 11341      00000000 
 11341      00000000 
 11342              		.section	.bss._ZL10HPF_RXfade,"aw",%nobits
 11343              		.align	2
 11344              		.set	.LANCHOR82,. + 0
 11347              	_ZL10HPF_RXfade:
 11348 0000 00000000 		.space	8
 11348      00000000 
 11349              		.section	.bss._ZL10HPF_R_post,"aw",%nobits
 11350              		.align	2
 11351              		.set	.LANCHOR15,. + 0
 11354              	_ZL10HPF_R_post:
 11355 0000 00000000 		.space	76
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 339


 11355      00000000 
 11355      00000000 
 11355      00000000 
 11355      00000000 
 11356              		.section	.bss._ZL10LPF_LXfade,"aw",%nobits
 11357              		.align	2
 11358              		.set	.LANCHOR83,. + 0
 11361              	_ZL10LPF_LXfade:
 11362 0000 00000000 		.space	8
 11362      00000000 
 11363              		.section	.bss._ZL10LPF_L_post,"aw",%nobits
 11364              		.align	2
 11365              		.set	.LANCHOR23,. + 0
 11368              	_ZL10LPF_L_post:
 11369 0000 00000000 		.space	76
 11369      00000000 
 11369      00000000 
 11369      00000000 
 11369      00000000 
 11370              		.section	.bss._ZL10LPF_RXfade,"aw",%nobits
 11371              		.align	2
 11372              		.set	.LANCHOR84,. + 0
 11375              	_ZL10LPF_RXfade:
 11376 0000 00000000 		.space	8
 11376      00000000 
 11377              		.section	.bss._ZL10LPF_R_post,"aw",%nobits
 11378              		.align	2
 11379              		.set	.LANCHOR24,. + 0
 11382              	_ZL10LPF_R_post:
 11383 0000 00000000 		.space	76
 11383      00000000 
 11383      00000000 
 11383      00000000 
 11383      00000000 
 11384              		.section	.bss._ZL10WidthXfade,"aw",%nobits
 11385              		.align	2
 11386              		.set	.LANCHOR32,. + 0
 11389              	_ZL10WidthXfade:
 11390 0000 00000000 		.space	8
 11390      00000000 
 11391              		.section	.bss._ZL11DcBlock_LFB,"aw",%nobits
 11392              		.align	2
 11393              		.set	.LANCHOR72,. + 0
 11396              	_ZL11DcBlock_LFB:
 11397 0000 00000000 		.space	12
 11397      00000000 
 11397      00000000 
 11398              		.section	.bss._ZL11DcBlock_RFB,"aw",%nobits
 11399              		.align	2
 11400              		.set	.LANCHOR73,. + 0
 11403              	_ZL11DcBlock_RFB:
 11404 0000 00000000 		.space	12
 11404      00000000 
 11404      00000000 
 11405              		.section	.bss._ZL11FilterMix_L,"aw",%nobits
 11406              		.align	2
 11407              		.set	.LANCHOR89,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 340


 11410              	_ZL11FilterMix_L:
 11411 0000 00000000 		.space	8
 11411      00000000 
 11412              		.section	.bss._ZL11FilterMix_R,"aw",%nobits
 11413              		.align	2
 11414              		.set	.LANCHOR90,. + 0
 11417              	_ZL11FilterMix_R:
 11418 0000 00000000 		.space	8
 11418      00000000 
 11419              		.section	.bss._ZL12FwdRevLXfade,"aw",%nobits
 11420              		.align	2
 11421              		.set	.LANCHOR70,. + 0
 11424              	_ZL12FwdRevLXfade:
 11425 0000 00000000 		.space	8
 11425      00000000 
 11426              		.section	.bss._ZL12FwdRevRXfade,"aw",%nobits
 11427              		.align	2
 11428              		.set	.LANCHOR71,. + 0
 11431              	_ZL12FwdRevRXfade:
 11432 0000 00000000 		.space	8
 11432      00000000 
 11433              		.section	.bss._ZL15HPF_LXfade_post,"aw",%nobits
 11434              		.align	2
 11435              		.set	.LANCHOR85,. + 0
 11438              	_ZL15HPF_LXfade_post:
 11439 0000 00000000 		.space	8
 11439      00000000 
 11440              		.section	.bss._ZL15HPF_RXfade_post,"aw",%nobits
 11441              		.align	2
 11442              		.set	.LANCHOR86,. + 0
 11445              	_ZL15HPF_RXfade_post:
 11446 0000 00000000 		.space	8
 11446      00000000 
 11447              		.section	.bss._ZL15LPF_LXfade_post,"aw",%nobits
 11448              		.align	2
 11449              		.set	.LANCHOR87,. + 0
 11452              	_ZL15LPF_LXfade_post:
 11453 0000 00000000 		.space	8
 11453      00000000 
 11454              		.section	.bss._ZL15LPF_RXfade_post,"aw",%nobits
 11455              		.align	2
 11456              		.set	.LANCHOR88,. + 0
 11459              	_ZL15LPF_RXfade_post:
 11460 0000 00000000 		.space	8
 11460      00000000 
 11461              		.section	.bss._ZL16FilterMix_L_post,"aw",%nobits
 11462              		.align	2
 11463              		.set	.LANCHOR91,. + 0
 11466              	_ZL16FilterMix_L_post:
 11467 0000 00000000 		.space	8
 11467      00000000 
 11468              		.section	.bss._ZL16FilterMix_R_post,"aw",%nobits
 11469              		.align	2
 11470              		.set	.LANCHOR92,. + 0
 11473              	_ZL16FilterMix_R_post:
 11474 0000 00000000 		.space	8
 11474      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 341


 11475              		.section	.bss._ZL2hw,"aw",%nobits
 11476              		.align	2
 11477              		.set	.LANCHOR4,. + 0
 11480              	_ZL2hw:
 11481 0000 00000000 		.space	60
 11481      00000000 
 11481      00000000 
 11481      00000000 
 11481      00000000 
 11482              		.section	.bss._ZL3lfo,"aw",%nobits
 11483              		.align	2
 11484              		.set	.LANCHOR37,. + 0
 11487              	_ZL3lfo:
 11488 0000 00000000 		.space	40
 11488      00000000 
 11488      00000000 
 11488      00000000 
 11488      00000000 
 11489              		.section	.bss._ZL5HPF_L,"aw",%nobits
 11490              		.align	2
 11491              		.set	.LANCHOR12,. + 0
 11494              	_ZL5HPF_L:
 11495 0000 00000000 		.space	76
 11495      00000000 
 11495      00000000 
 11495      00000000 
 11495      00000000 
 11496              		.section	.bss._ZL5HPF_R,"aw",%nobits
 11497              		.align	2
 11498              		.set	.LANCHOR13,. + 0
 11501              	_ZL5HPF_R:
 11502 0000 00000000 		.space	76
 11502      00000000 
 11502      00000000 
 11502      00000000 
 11502      00000000 
 11503              		.section	.bss._ZL5LPF_L,"aw",%nobits
 11504              		.align	2
 11505              		.set	.LANCHOR21,. + 0
 11508              	_ZL5LPF_L:
 11509 0000 00000000 		.space	76
 11509      00000000 
 11509      00000000 
 11509      00000000 
 11509      00000000 
 11510              		.section	.bss._ZL5LPF_R,"aw",%nobits
 11511              		.align	2
 11512              		.set	.LANCHOR22,. + 0
 11515              	_ZL5LPF_R:
 11516 0000 00000000 		.space	76
 11516      00000000 
 11516      00000000 
 11516      00000000 
 11516      00000000 
 11517              		.section	.bss._ZL7HPF_Env,"aw",%nobits
 11518              		.align	2
 11519              		.set	.LANCHOR69,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 342


 11522              	_ZL7HPF_Env:
 11523 0000 00000000 		.space	56
 11523      00000000 
 11523      00000000 
 11523      00000000 
 11523      00000000 
 11524              		.section	.bss._ZL7LPF_Env,"aw",%nobits
 11525              		.align	2
 11526              		.set	.LANCHOR68,. + 0
 11529              	_ZL7LPF_Env:
 11530 0000 00000000 		.space	56
 11530      00000000 
 11530      00000000 
 11530      00000000 
 11530      00000000 
 11531              		.section	.bss._ZL7LeftEnv,"aw",%nobits
 11532              		.align	2
 11533              		.set	.LANCHOR95,. + 0
 11536              	_ZL7LeftEnv:
 11537 0000 00000000 		.space	24
 11537      00000000 
 11537      00000000 
 11537      00000000 
 11537      00000000 
 11538              		.section	.bss._ZL8RightEnv,"aw",%nobits
 11539              		.align	2
 11540              		.set	.LANCHOR96,. + 0
 11543              	_ZL8RightEnv:
 11544 0000 00000000 		.space	24
 11544      00000000 
 11544      00000000 
 11544      00000000 
 11544      00000000 
 11545              		.section	.bss._ZZ10Update_ModvE13modulation_CV,"aw",%nobits
 11546              		.align	2
 11547              		.set	.LANCHOR42,. + 0
 11550              	_ZZ10Update_ModvE13modulation_CV:
 11551 0000 00000000 		.space	4
 11552              		.section	.bss._ZZ10Update_ModvE17ModDepth_Filtered,"aw",%nobits
 11553              		.align	2
 11554              		.set	.LANCHOR43,. + 0
 11557              	_ZZ10Update_ModvE17ModDepth_Filtered:
 11558 0000 00000000 		.space	4
 11559              		.section	.bss._ZZ11UpdateClockvE10divCounter,"aw",%nobits
 11560              		.align	2
 11561              		.set	.LANCHOR45,. + 0
 11564              	_ZZ11UpdateClockvE10divCounter:
 11565 0000 00000000 		.space	4
 11566              		.section	.bss._ZZ12Update_widthvE14width_Pot_Last,"aw",%nobits
 11567              		.align	2
 11568              		.set	.LANCHOR30,. + 0
 11571              	_ZZ12Update_widthvE14width_Pot_Last:
 11572 0000 00000000 		.space	4
 11573              		.section	.bss._ZZ13Update_drywetvE15drywet_Pot_Last,"aw",%nobits
 11574              		.align	2
 11575              		.set	.LANCHOR26,. + 0
 11578              	_ZZ13Update_drywetvE15drywet_Pot_Last:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 343


 11579 0000 00000000 		.space	4
 11580              		.section	.bss._ZZ13Update_drywetvE3Res,"aw",%nobits
 11581              		.align	2
 11582              		.set	.LANCHOR28,. + 0
 11585              	_ZZ13Update_drywetvE3Res:
 11586 0000 00000000 		.space	4
 11587              		.section	.bss._ZZ14Update_ButtonsvE11buttonstate,"aw",%nobits
 11588              		.align	2
 11589              		.set	.LANCHOR75,. + 0
 11592              	_ZZ14Update_ButtonsvE11buttonstate:
 11593 0000 00000000 		.space	4
 11594              		.section	.bss._ZZ14Update_ButtonsvE9resetTime,"aw",%nobits
 11595              		.align	2
 11596              		.set	.LANCHOR76,. + 0
 11599              	_ZZ14Update_ButtonsvE9resetTime:
 11600 0000 00000000 		.space	4
 11601              		.section	.bss._ZZ14Update_ButtonsvE9shiftTime,"aw",%nobits
 11602              		.align	2
 11603              		.set	.LANCHOR77,. + 0
 11606              	_ZZ14Update_ButtonsvE9shiftTime:
 11607 0000 00000000 		.space	4
 11608              		.section	.bss._ZZ16Update_feedbackLvE18feedbackL_Pot_Last,"aw",%nobits
 11609              		.align	2
 11610              		.set	.LANCHOR9,. + 0
 11613              	_ZZ16Update_feedbackLvE18feedbackL_Pot_Last:
 11614 0000 00000000 		.space	4
 11615              		.section	.bss._ZZ16Update_feedbackLvE8HPCutoff,"aw",%nobits
 11616              		.align	2
 11617              		.set	.LANCHOR11,. + 0
 11620              	_ZZ16Update_feedbackLvE8HPCutoff:
 11621 0000 00000000 		.space	4
 11622              		.section	.bss._ZZ16Update_feedbackRvE18feedbackR_Pot_Last,"aw",%nobits
 11623              		.align	2
 11624              		.set	.LANCHOR18,. + 0
 11627              	_ZZ16Update_feedbackRvE18feedbackR_Pot_Last:
 11628 0000 00000000 		.space	4
 11629              		.section	.bss._ZZ16Update_feedbackRvE8LPCutoff,"aw",%nobits
 11630              		.align	2
 11631              		.set	.LANCHOR20,. + 0
 11634              	_ZZ16Update_feedbackRvE8LPCutoff:
 11635 0000 00000000 		.space	4
 11636              		.section	.bss._ZZ17Update_DelayTimeLvE19delayTimeL_Pot_Last,"aw",%nobits
 11637              		.align	2
 11638              		.set	.LANCHOR57,. + 0
 11641              	_ZZ17Update_DelayTimeLvE19delayTimeL_Pot_Last:
 11642 0000 00000000 		.space	4
 11643              		.section	.bss._ZZ17Update_DelayTimeLvE8counterL,"aw",%nobits
 11644              		.align	2
 11645              		.set	.LANCHOR56,. + 0
 11648              	_ZZ17Update_DelayTimeLvE8counterL:
 11649 0000 00000000 		.space	4
 11650              		.section	.bss._ZZ17Update_DelayTimeRvE19delayTimeR_Pot_Last,"aw",%nobits
 11651              		.align	2
 11652              		.set	.LANCHOR54,. + 0
 11655              	_ZZ17Update_DelayTimeRvE19delayTimeR_Pot_Last:
 11656 0000 00000000 		.space	4
 11657              		.section	.bss._ZZ17Update_DelayTimeRvE8counterR,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 344


 11658              		.align	2
 11659              		.set	.LANCHOR53,. + 0
 11662              	_ZZ17Update_DelayTimeRvE8counterR:
 11663 0000 00000000 		.space	4
 11664              		.section	.bss._ZZ18Update_filterXfadevE20filterXfade_Pot_Last,"aw",%nobits
 11665              		.align	2
 11666              		.set	.LANCHOR38,. + 0
 11669              	_ZZ18Update_filterXfadevE20filterXfade_Pot_Last:
 11670 0000 00000000 		.space	4
 11671              		.section	.bss._ZZ20Update_crossfeedbackvE22crossfeedback_Pot_Last,"aw",%nobits
 11672              		.align	2
 11673              		.set	.LANCHOR34,. + 0
 11676              	_ZZ20Update_crossfeedbackvE22crossfeedback_Pot_Last:
 11677 0000 00000000 		.space	4
 11678              		.section	.bss._ZZ20Update_crossfeedbackvE7modRate,"aw",%nobits
 11679              		.align	2
 11680              		.set	.LANCHOR36,. + 0
 11683              	_ZZ20Update_crossfeedbackvE7modRate:
 11684 0000 00000000 		.space	4
 11685              		.section	.bss._ZZL13AudioCallbackPfS_jE6LNegFB,"aw",%nobits
 11686              		.align	2
 11687              		.set	.LANCHOR93,. + 0
 11690              	_ZZL13AudioCallbackPfS_jE6LNegFB:
 11691 0000 00000000 		.space	4
 11692              		.section	.bss._ZZL13AudioCallbackPfS_jE6RNegFB,"aw",%nobits
 11693              		.align	2
 11694              		.set	.LANCHOR94,. + 0
 11697              	_ZZL13AudioCallbackPfS_jE6RNegFB:
 11698 0000 00000000 		.space	4
 11699              		.section	.bss._ZZL13AudioCallbackPfS_jE7Counter,"aw",%nobits
 11700              		.align	2
 11701              		.set	.LANCHOR79,. + 0
 11704              	_ZZL13AudioCallbackPfS_jE7Counter:
 11705 0000 00000000 		.space	4
 11706              		.section	.bss.crossfeedback,"aw",%nobits
 11707              		.align	2
 11708              		.set	.LANCHOR35,. + 0
 11711              	crossfeedback:
 11712 0000 00000000 		.space	4
 11713              		.section	.bss.crossfeedback_CV,"aw",%nobits
 11714              		.align	2
 11717              	crossfeedback_CV:
 11718 0000 00000000 		.space	4
 11719              		.section	.bss.delayL,"aw",%nobits
 11720              		.align	2
 11721              		.set	.LANCHOR0,. + 0
 11724              	delayL:
 11725 0000 00000000 		.space	284
 11725      00000000 
 11725      00000000 
 11725      00000000 
 11725      00000000 
 11726              		.section	.bss.delayR,"aw",%nobits
 11727              		.align	2
 11728              		.set	.LANCHOR1,. + 0
 11731              	delayR:
 11732 0000 00000000 		.space	284
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 345


 11732      00000000 
 11732      00000000 
 11732      00000000 
 11732      00000000 
 11733              		.section	.bss.delayTimeL_CV,"aw",%nobits
 11734              		.align	2
 11735              		.set	.LANCHOR5,. + 0
 11738              	delayTimeL_CV:
 11739 0000 00000000 		.space	4
 11740              		.section	.bss.delayTimeR_CV,"aw",%nobits
 11741              		.align	2
 11742              		.set	.LANCHOR6,. + 0
 11745              	delayTimeR_CV:
 11746 0000 00000000 		.space	4
 11747              		.section	.bss.delaysL_REV,"aw",%nobits
 11748              		.align	2
 11749              		.set	.LANCHOR2,. + 0
 11752              	delaysL_REV:
 11753 0000 00000000 		.space	8
 11753      00000000 
 11754              		.section	.bss.delaysR_REV,"aw",%nobits
 11755              		.align	2
 11756              		.set	.LANCHOR3,. + 0
 11759              	delaysR_REV:
 11760 0000 00000000 		.space	8
 11760      00000000 
 11761              		.section	.bss.div_L,"aw",%nobits
 11762              		.set	.LANCHOR49,. + 0
 11765              	div_L:
 11766 0000 00       		.space	1
 11767              		.section	.bss.div_R,"aw",%nobits
 11768              		.set	.LANCHOR50,. + 0
 11771              	div_R:
 11772 0000 00       		.space	1
 11773              		.section	.bss.drywet_CV,"aw",%nobits
 11774              		.align	2
 11775              		.set	.LANCHOR25,. + 0
 11778              	drywet_CV:
 11779 0000 00000000 		.space	4
 11780              		.section	.bss.feedbackL,"aw",%nobits
 11781              		.align	2
 11782              		.set	.LANCHOR10,. + 0
 11785              	feedbackL:
 11786 0000 00000000 		.space	4
 11787              		.section	.bss.feedbackL_CV,"aw",%nobits
 11788              		.align	2
 11789              		.set	.LANCHOR7,. + 0
 11792              	feedbackL_CV:
 11793 0000 00000000 		.space	4
 11794              		.section	.bss.feedbackR,"aw",%nobits
 11795              		.align	2
 11796              		.set	.LANCHOR19,. + 0
 11799              	feedbackR:
 11800 0000 00000000 		.space	4
 11801              		.section	.bss.feedbackR_CV,"aw",%nobits
 11802              		.align	2
 11803              		.set	.LANCHOR17,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 346


 11806              	feedbackR_CV:
 11807 0000 00000000 		.space	4
 11808              		.section	.bss.filterXfade,"aw",%nobits
 11809              		.align	2
 11810              		.set	.LANCHOR39,. + 0
 11813              	filterXfade:
 11814 0000 00000000 		.space	4
 11815              		.section	.bss.modulation_CV_Raw,"aw",%nobits
 11816              		.align	2
 11817              		.set	.LANCHOR41,. + 0
 11820              	modulation_CV_Raw:
 11821 0000 00000000 		.space	4
 11822              		.section	.bss.mute,"aw",%nobits
 11823              		.set	.LANCHOR78,. + 0
 11826              	mute:
 11827 0000 00       		.space	1
 11828              		.section	.bss.save_flag,"aw",%nobits
 11829              		.align	2
 11830              		.set	.LANCHOR80,. + 0
 11833              	save_flag:
 11834 0000 00       		.space	1
 11835              		.section	.bss.shift,"aw",%nobits
 11836              		.set	.LANCHOR8,. + 0
 11839              	shift:
 11840 0000 00       		.space	1
 11841              		.section	.bss.syncMode,"aw",%nobits
 11842              		.set	.LANCHOR48,. + 0
 11845              	syncMode:
 11846 0000 00       		.space	1
 11847              		.section	.bss.tempoLED_BASE,"aw",%nobits
 11848              		.align	2
 11849              		.set	.LANCHOR46,. + 0
 11852              	tempoLED_BASE:
 11853 0000 00000000 		.space	68
 11853      00000000 
 11853      00000000 
 11853      00000000 
 11853      00000000 
 11854              		.section	.bss.width_CV,"aw",%nobits
 11855              		.align	2
 11856              		.set	.LANCHOR29,. + 0
 11859              	width_CV:
 11860 0000 00000000 		.space	4
 11861              		.section	.data.delayL_flag,"aw"
 11862              		.set	.LANCHOR51,. + 0
 11865              	delayL_flag:
 11866 0000 01       		.byte	1
 11867              		.section	.data.delayR_flag,"aw"
 11868              		.set	.LANCHOR52,. + 0
 11871              	delayR_flag:
 11872 0000 01       		.byte	1
 11873              		.section	.data.drywet,"aw"
 11874              		.align	2
 11875              		.set	.LANCHOR27,. + 0
 11878              	drywet:
 11879 0000 0000003F 		.word	1056964608
 11880              		.section	.data.width,"aw"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 347


 11881              		.align	2
 11882              		.set	.LANCHOR31,. + 0
 11885              	width:
 11886 0000 0000803F 		.word	1065353216
 11887              		.section	.rodata.CSWTCH.244,"a"
 11888              		.align	2
 11889              		.set	.LANCHOR55,. + 0
 11892              	CSWTCH.244:
 11893 0000 0000C03F 		.word	1069547520
 11894 0004 00000040 		.word	1073741824
 11895 0008 00004040 		.word	1077936128
 11896              		.section	.rodata._ZL18defaultAltControls,"a"
 11897              		.align	2
 11898              		.set	.LANCHOR74,. + 0
 11901              	_ZL18defaultAltControls:
 11902 0000 00650148 		.word	1208050944
 11903 0004 0000803F 		.word	1065353216
 11904 0008 00000000 		.word	0
 11905 000c 9A99A140 		.word	1084332442
 11906 0010 00004843 		.word	1128792064
 11907 0014 00803B46 		.word	1178304512
 11908 0018 00000000 		.word	0
 11909 001c 00000000 		.word	0
 11910              		.section	.sdram_bss,"aw"
 11911              		.align	2
 11914              	delMemsR_REV:
 11915 0000 00000000 		.space	2400040
 11915      00000000 
 11915      00000000 
 11915      00000000 
 11915      00000000 
 11918              	delMemsL_REV:
 11919 249f28 00000000 		.space	2400040
 11919      00000000 
 11919      00000000 
 11919      00000000 
 11919      00000000 
 11922              	delMemsR:
 11923 493e50 00000000 		.space	6912136
 11923      00000000 
 11923      00000000 
 11923      00000000 
 11923      00000000 
 11926              	delMemsL:
 11927 b2b6d8 00000000 		.space	6912136
 11927      00000000 
 11927      00000000 
 11927      00000000 
 11927      00000000 
 11928              		.text
 11929              	.Letext0:
 11930              		.file 27 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_d
 11931              		.file 28 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdin
 11932              		.file 29 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdint.h"
 11933              		.file 30 "../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 11934              		.file 31 "../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 11935              		.file 32 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 348


 11936              		.file 33 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 11937              		.file 34 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 11938              		.file 35 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 11939              		.file 36 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 11940              		.file 37 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 11941              		.file 38 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 11942              		.file 39 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 11943              		.file 40 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 11944              		.file 41 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 11945              		.file 42 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 11946              		.file 43 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 11947              		.file 44 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 11948              		.file 45 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 11949              		.file 46 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 11950              		.file 47 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 11951              		.file 48 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 11952              		.file 49 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 11953              		.file 50 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 11954              		.file 51 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 11955              		.file 52 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 11956              		.file 53 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 11957              		.file 54 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock.h
 11958              		.file 55 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_types
 11959              		.file 56 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reent.
 11960              		.file 57 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
 11961              		.file 58 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdlib.h"
 11962              		.file 59 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 11963              		.file 60 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 11964              		.file 61 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 11965              		.file 62 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 11966              		.file 63 "../libdaisy/src/daisy_core.h"
 11967              		.file 64 "../libdaisy/src/per/tim.h"
 11968              		.file 65 "../libdaisy/src/per/sai.h"
 11969              		.file 66 "../libdaisy/src/util/wav_format.h"
 11970              		.file 67 "../libdaisy/src/per/qspi.h"
 11971              		.file 68 "../libdaisy/src/per/gpio.h"
 11972              		.file 69 "../libdaisy/src/dev/sdram.h"
 11973              		.file 70 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 11974              		.file 71 "<built-in>"
 11975              		.file 72 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdio.h"
 11976              		.file 73 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/unistd
 11977              		.file 74 "../libdaisy/src/util/oled_fonts.h"
 11978              		.file 75 "../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 11979              		.file 76 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 11980              		.file 77 "../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 11981              		.file 78 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 11982              		.file 79 "../libdaisy/src/util/sd_diskio.h"
 11983              		.file 80 "../libdaisy/src/sys/fatfs.h"
 11984              		.file 81 "../DaisySP/Source/Control/adenv.h"
 11985              		.file 82 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/wchar.h"
 11986              		.file 83 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/locale.h"
 11987              		.file 84 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/ctype.h"
 11988              		.file 85 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/errno.
 11989              		.file 86 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/string.h"
 11990              		.file 87 "QSPI_Settings.h"
 11991              		.file 88 "scale.h"
 11992              		.file 89 "constants.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 349


 11993              		.file 90 "../libdaisy/src/dev/sr_595.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 350


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Veno-Echo.cpp
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:17     .text._ZN5daisy6SwitchD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:43     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:92     .text._ZN7daisysp4AdsrD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:100    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:100    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:117    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:125    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:125    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:142    .text._ZN7daisysp3SvfD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:150    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:150    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:167    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:175    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:175    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:192    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:200    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 _ZN7daisysp7DcBlockD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:200    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 _ZN7daisysp7DcBlockD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:217    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:242    .text._ZN8TaptempoD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:267    .text._ZN8TempoLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:303    .text._ZN9ButtonLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:311    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:311    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:337    .text._ZN10DelayMultiD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:345    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:345    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:376    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:384    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:384    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:401    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:409    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:409    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:426    .text._Z10InitDelaysf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:434    .text._Z10InitDelaysf:0000000000000000 _Z10InitDelaysf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:998    .text._Z10InitDelaysf:000000000000018c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11926  .sdram_bss:0000000000b2b6d8 delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11922  .sdram_bss:0000000000493e50 delMemsR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11918  .sdram_bss:0000000000249f28 delMemsL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11914  .sdram_bss:0000000000000000 delMemsR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:1024   .text._Z20Update_DelayTimeL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:1032   .text._Z20Update_DelayTimeL_CVv:0000000000000000 _Z20Update_DelayTimeL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:1057   .text._Z20Update_DelayTimeL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:1063   .text._Z20Update_DelayTimeR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:1071   .text._Z20Update_DelayTimeR_CVv:0000000000000000 _Z20Update_DelayTimeR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:1096   .text._Z20Update_DelayTimeR_CVv:0000000000000014 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 351


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:1102   .text._Z19Update_feedbackL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:1110   .text._Z19Update_feedbackL_CVv:0000000000000000 _Z19Update_feedbackL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:1135   .text._Z19Update_feedbackL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:1141   .text._Z16Update_feedbackLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:1149   .text._Z16Update_feedbackLv:0000000000000000 _Z16Update_feedbackLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:1357   .text._Z16Update_feedbackLv:00000000000000d8 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:1381   .text._Z19Update_feedbackR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:1389   .text._Z19Update_feedbackR_CVv:0000000000000000 _Z19Update_feedbackR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:1414   .text._Z19Update_feedbackR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:1420   .text._Z16Update_feedbackRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:1428   .text._Z16Update_feedbackRv:0000000000000000 _Z16Update_feedbackRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:1635   .text._Z16Update_feedbackRv:00000000000000d8 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:1659   .text._Z16Update_drywet_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:1667   .text._Z16Update_drywet_CVv:0000000000000000 _Z16Update_drywet_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:1692   .text._Z16Update_drywet_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:1698   .text._Z13Update_drywetv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:1706   .text._Z13Update_drywetv:0000000000000000 _Z13Update_drywetv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:1961   .text._Z13Update_drywetv:0000000000000128 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:1989   .text._Z15Update_width_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:1997   .text._Z15Update_width_CVv:0000000000000000 _Z15Update_width_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:2022   .text._Z15Update_width_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:2028   .text._Z12Update_widthv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:2036   .text._Z12Update_widthv:0000000000000000 _Z12Update_widthv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:2237   .text._Z12Update_widthv:00000000000000bc $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:2257   .text._Z20Update_crossfeedbackv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:2265   .text._Z20Update_crossfeedbackv:0000000000000000 _Z20Update_crossfeedbackv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:2434   .text._Z20Update_crossfeedbackv:0000000000000084 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:2449   .text._Z18Update_filterXfadev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:2457   .text._Z18Update_filterXfadev:0000000000000000 _Z18Update_filterXfadev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:2589   .text._Z18Update_filterXfadev:0000000000000090 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:2605   .text._Z8GetModCVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:2613   .text._Z8GetModCVv:0000000000000000 _Z8GetModCVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:2643   .text._Z8GetModCVv:0000000000000020 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:2651   .text._Z10Update_Modv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:2659   .text._Z10Update_Modv:0000000000000000 _Z10Update_Modv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:2813   .text._Z10Update_Modv:000000000000007c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:2825   .text._Z11UpdateClockv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:2833   .text._Z11UpdateClockv:0000000000000000 _Z11UpdateClockv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:2944   .text._Z11UpdateClockv:0000000000000064 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:2959   .text._Z19Update_BaseTempoLEDv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:2967   .text._Z19Update_BaseTempoLEDv:0000000000000000 _Z19Update_BaseTempoLEDv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:3039   .text._Z19Update_BaseTempoLEDv:0000000000000040 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:3048   .text._Z11SetTempoDivfP9TempoDivs:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:3056   .text._Z11SetTempoDivfP9TempoDivs:0000000000000000 _Z11SetTempoDivfP9TempoDivs
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:3276   .text._Z11SetTempoDivfP9TempoDivs:0000000000000108 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:3293   .text._Z17Update_DelayTimeRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:3301   .text._Z17Update_DelayTimeRv:0000000000000000 _Z17Update_DelayTimeRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:3654   .text._Z17Update_DelayTimeRv:0000000000000140 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:3677   .text._Z17Update_DelayTimeLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:3685   .text._Z17Update_DelayTimeLv:0000000000000000 _Z17Update_DelayTimeLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:4150   .text._Z17Update_DelayTimeLv:0000000000000188 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:4176   .text._Z11GetTapRatio9TapRatios:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:4184   .text._Z11GetTapRatio9TapRatios:0000000000000000 _Z11GetTapRatio9TapRatios
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:4214   .text._Z11GetTapRatio9TapRatios:000000000000001c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:4219   .text._Z13ApplySettingsRK8Settings:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:4227   .text._Z13ApplySettingsRK8Settings:0000000000000000 _Z13ApplySettingsRK8Settings
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:4924   .text._Z13ApplySettingsRK8Settings:0000000000000340 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 352


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:4963   .text.startup.main:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:4971   .text.startup.main:0000000000000000 main
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:5849   .text.startup.main:0000000000000348 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:5883   .text.startup.main:00000000000003c4 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:6253   .text.startup.main:00000000000005b8 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:6944   .text._ZL13AudioCallbackPfS_j:0000000000000000 _ZL13AudioCallbackPfS_j
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:6271   .text._Z13TurnOnAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:6279   .text._Z13TurnOnAllLEDsv:0000000000000000 _Z13TurnOnAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:6341   .text._Z13TurnOnAllLEDsv:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:6352   .text._Z12ResetAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:6360   .text._Z12ResetAllLEDsv:0000000000000000 _Z12ResetAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:6463   .text._Z12ResetAllLEDsv:000000000000007c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:6475   .text._Z14Update_Buttonsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:6483   .text._Z14Update_Buttonsv:0000000000000000 _Z14Update_Buttonsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:6910   .text._Z14Update_Buttonsv:00000000000001b8 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:6937   .text._ZL13AudioCallbackPfS_j:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:7056   .text._ZL13AudioCallbackPfS_j:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:7071   .text._ZL13AudioCallbackPfS_j:000000000000006a $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:7100   .text._ZL13AudioCallbackPfS_j:0000000000000090 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:7111   .text._ZL13AudioCallbackPfS_j:00000000000000a4 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:8247   .text._ZL13AudioCallbackPfS_j:0000000000000418 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:8303   .text._ZL13AudioCallbackPfS_j:00000000000004c8 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:8929   .text._ZL13AudioCallbackPfS_j:00000000000007a0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:8951   .text._ZL13AudioCallbackPfS_j:00000000000007e8 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:9706   .text._ZL13AudioCallbackPfS_j:0000000000000b44 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:9743   .text._ZL13AudioCallbackPfS_j:0000000000000bac $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:10068  .text._ZL13AudioCallbackPfS_j:0000000000000ca4 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:10079  .text._Z9HardLimitff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:10087  .text._Z9HardLimitff:0000000000000000 _Z9HardLimitff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:10121  .text._Z10PotCVComboff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:10129  .text._Z10PotCVComboff:0000000000000000 _Z10PotCVComboff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:10176  .text._Z10PotCVComboff:0000000000000038 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:10181  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:10188  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 _GLOBAL__sub_I_delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11098  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000258 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11172  .init_array:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11224  .bss.AltControls:0000000000000000 AltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11231  .bss.BaseTempo:0000000000000000 BaseTempo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11238  .bss.ClockIn:0000000000000000 ClockIn
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11305  .bss.Sync:0000000000000000 Sync
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11298  .bss.ReverseGateR:0000000000000000 ReverseGateR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11291  .bss.ReverseGateL:0000000000000000 ReverseGateL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11833  .bss.save_flag:0000000000000000 save_flag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11871  .data.delayR_flag:0000000000000000 delayR_flag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11865  .data.delayL_flag:0000000000000000 delayL_flag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11270  .bss.PostFilters:0000000000000000 PostFilters
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11243  .bss.ClockInFlag:0000000000000000 ClockInFlag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11826  .bss.mute:0000000000000000 mute
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11839  .bss.shift:0000000000000000 shift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11845  .bss.syncMode:0000000000000000 syncMode
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11820  .bss.modulation_CV_Raw:0000000000000000 modulation_CV_Raw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11264  .bss.ModDepth:0000000000000000 ModDepth
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11771  .bss.div_R:0000000000000000 div_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11765  .bss.div_L:0000000000000000 div_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11813  .bss.filterXfade:0000000000000000 filterXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11859  .bss.width_CV:0000000000000000 width_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11885  .data.width:0000000000000000 width
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 353


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11778  .bss.drywet_CV:0000000000000000 drywet_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11878  .data.drywet:0000000000000000 drywet
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11717  .bss.crossfeedback_CV:0000000000000000 crossfeedback_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11711  .bss.crossfeedback:0000000000000000 crossfeedback
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11806  .bss.feedbackR_CV:0000000000000000 feedbackR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11799  .bss.feedbackR:0000000000000000 feedbackR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11792  .bss.feedbackL_CV:0000000000000000 feedbackL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11785  .bss.feedbackL:0000000000000000 feedbackL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11745  .bss.delayTimeR_CV:0000000000000000 delayTimeR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11738  .bss.delayTimeL_CV:0000000000000000 delayTimeL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11852  .bss.tempoLED_BASE:0000000000000000 tempoLED_BASE
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11312  .bss.Tap_Button:0000000000000000 Tap_Button
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11284  .bss.Rev_R_sw:0000000000000000 Rev_R_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11277  .bss.Rev_L_sw:0000000000000000 Rev_L_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11250  .bss.HPF_sw:0000000000000000 HPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11257  .bss.LPF_sw:0000000000000000 LPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11759  .bss.delaysR_REV:0000000000000000 delaysR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11752  .bss.delaysL_REV:0000000000000000 delaysL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11731  .bss.delayR:0000000000000000 delayR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11724  .bss.delayL:0000000000000000 delayL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11220  .bss.AltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11227  .bss.BaseTempo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11234  .bss.ClockIn:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11244  .bss.ClockInFlag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11246  .bss.HPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11253  .bss.LPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11260  .bss.ModDepth:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11271  .bss.PostFilters:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11273  .bss.Rev_L_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11280  .bss.Rev_R_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11287  .bss.ReverseGateL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11294  .bss.ReverseGateR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11301  .bss.Sync:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11308  .bss.Tap_Button:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11315  .bss._ZL10FwdRevLEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11319  .bss._ZL10FwdRevLEnv:0000000000000000 _ZL10FwdRevLEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11322  .bss._ZL10FwdRevREnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11326  .bss._ZL10FwdRevREnv:0000000000000000 _ZL10FwdRevREnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11329  .bss._ZL10HPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11333  .bss._ZL10HPF_LXfade:0000000000000000 _ZL10HPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11336  .bss._ZL10HPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11340  .bss._ZL10HPF_L_post:0000000000000000 _ZL10HPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11343  .bss._ZL10HPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11347  .bss._ZL10HPF_RXfade:0000000000000000 _ZL10HPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11350  .bss._ZL10HPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11354  .bss._ZL10HPF_R_post:0000000000000000 _ZL10HPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11357  .bss._ZL10LPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11361  .bss._ZL10LPF_LXfade:0000000000000000 _ZL10LPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11364  .bss._ZL10LPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11368  .bss._ZL10LPF_L_post:0000000000000000 _ZL10LPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11371  .bss._ZL10LPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11375  .bss._ZL10LPF_RXfade:0000000000000000 _ZL10LPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11378  .bss._ZL10LPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11382  .bss._ZL10LPF_R_post:0000000000000000 _ZL10LPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11385  .bss._ZL10WidthXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11389  .bss._ZL10WidthXfade:0000000000000000 _ZL10WidthXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11392  .bss._ZL11DcBlock_LFB:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 354


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11396  .bss._ZL11DcBlock_LFB:0000000000000000 _ZL11DcBlock_LFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11399  .bss._ZL11DcBlock_RFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11403  .bss._ZL11DcBlock_RFB:0000000000000000 _ZL11DcBlock_RFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11406  .bss._ZL11FilterMix_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11410  .bss._ZL11FilterMix_L:0000000000000000 _ZL11FilterMix_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11413  .bss._ZL11FilterMix_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11417  .bss._ZL11FilterMix_R:0000000000000000 _ZL11FilterMix_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11420  .bss._ZL12FwdRevLXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11424  .bss._ZL12FwdRevLXfade:0000000000000000 _ZL12FwdRevLXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11427  .bss._ZL12FwdRevRXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11431  .bss._ZL12FwdRevRXfade:0000000000000000 _ZL12FwdRevRXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11434  .bss._ZL15HPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11438  .bss._ZL15HPF_LXfade_post:0000000000000000 _ZL15HPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11441  .bss._ZL15HPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11445  .bss._ZL15HPF_RXfade_post:0000000000000000 _ZL15HPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11448  .bss._ZL15LPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11452  .bss._ZL15LPF_LXfade_post:0000000000000000 _ZL15LPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11455  .bss._ZL15LPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11459  .bss._ZL15LPF_RXfade_post:0000000000000000 _ZL15LPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11462  .bss._ZL16FilterMix_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11466  .bss._ZL16FilterMix_L_post:0000000000000000 _ZL16FilterMix_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11469  .bss._ZL16FilterMix_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11473  .bss._ZL16FilterMix_R_post:0000000000000000 _ZL16FilterMix_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11476  .bss._ZL2hw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11480  .bss._ZL2hw:0000000000000000 _ZL2hw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11483  .bss._ZL3lfo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11487  .bss._ZL3lfo:0000000000000000 _ZL3lfo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11490  .bss._ZL5HPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11494  .bss._ZL5HPF_L:0000000000000000 _ZL5HPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11497  .bss._ZL5HPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11501  .bss._ZL5HPF_R:0000000000000000 _ZL5HPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11504  .bss._ZL5LPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11508  .bss._ZL5LPF_L:0000000000000000 _ZL5LPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11511  .bss._ZL5LPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11515  .bss._ZL5LPF_R:0000000000000000 _ZL5LPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11518  .bss._ZL7HPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11522  .bss._ZL7HPF_Env:0000000000000000 _ZL7HPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11525  .bss._ZL7LPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11529  .bss._ZL7LPF_Env:0000000000000000 _ZL7LPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11532  .bss._ZL7LeftEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11536  .bss._ZL7LeftEnv:0000000000000000 _ZL7LeftEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11539  .bss._ZL8RightEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11543  .bss._ZL8RightEnv:0000000000000000 _ZL8RightEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11546  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11550  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 _ZZ10Update_ModvE13modulation_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11553  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11557  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 _ZZ10Update_ModvE17ModDepth_Filtered
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11560  .bss._ZZ11UpdateClockvE10divCounter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11564  .bss._ZZ11UpdateClockvE10divCounter:0000000000000000 _ZZ11UpdateClockvE10divCounter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11567  .bss._ZZ12Update_widthvE14width_Pot_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11571  .bss._ZZ12Update_widthvE14width_Pot_Last:0000000000000000 _ZZ12Update_widthvE14width_Pot_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11574  .bss._ZZ13Update_drywetvE15drywet_Pot_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11578  .bss._ZZ13Update_drywetvE15drywet_Pot_Last:0000000000000000 _ZZ13Update_drywetvE15drywet_Pot_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11581  .bss._ZZ13Update_drywetvE3Res:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11585  .bss._ZZ13Update_drywetvE3Res:0000000000000000 _ZZ13Update_drywetvE3Res
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11588  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11592  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 _ZZ14Update_ButtonsvE11buttonstate
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 355


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11595  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11599  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 _ZZ14Update_ButtonsvE9resetTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11602  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11606  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 _ZZ14Update_ButtonsvE9shiftTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11609  .bss._ZZ16Update_feedbackLvE18feedbackL_Pot_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11613  .bss._ZZ16Update_feedbackLvE18feedbackL_Pot_Last:0000000000000000 _ZZ16Update_feedbackLvE18feedbackL_Pot_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11616  .bss._ZZ16Update_feedbackLvE8HPCutoff:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11620  .bss._ZZ16Update_feedbackLvE8HPCutoff:0000000000000000 _ZZ16Update_feedbackLvE8HPCutoff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11623  .bss._ZZ16Update_feedbackRvE18feedbackR_Pot_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11627  .bss._ZZ16Update_feedbackRvE18feedbackR_Pot_Last:0000000000000000 _ZZ16Update_feedbackRvE18feedbackR_Pot_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11630  .bss._ZZ16Update_feedbackRvE8LPCutoff:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11634  .bss._ZZ16Update_feedbackRvE8LPCutoff:0000000000000000 _ZZ16Update_feedbackRvE8LPCutoff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11637  .bss._ZZ17Update_DelayTimeLvE19delayTimeL_Pot_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11641  .bss._ZZ17Update_DelayTimeLvE19delayTimeL_Pot_Last:0000000000000000 _ZZ17Update_DelayTimeLvE19delayTimeL_Pot_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11644  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11648  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 _ZZ17Update_DelayTimeLvE8counterL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11651  .bss._ZZ17Update_DelayTimeRvE19delayTimeR_Pot_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11655  .bss._ZZ17Update_DelayTimeRvE19delayTimeR_Pot_Last:0000000000000000 _ZZ17Update_DelayTimeRvE19delayTimeR_Pot_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11658  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11662  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 _ZZ17Update_DelayTimeRvE8counterR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11665  .bss._ZZ18Update_filterXfadevE20filterXfade_Pot_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11669  .bss._ZZ18Update_filterXfadevE20filterXfade_Pot_Last:0000000000000000 _ZZ18Update_filterXfadevE20filterXfade_Pot_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11672  .bss._ZZ20Update_crossfeedbackvE22crossfeedback_Pot_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11676  .bss._ZZ20Update_crossfeedbackvE22crossfeedback_Pot_Last:0000000000000000 _ZZ20Update_crossfeedbackvE22crossfeedback_Pot_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11679  .bss._ZZ20Update_crossfeedbackvE7modRate:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11683  .bss._ZZ20Update_crossfeedbackvE7modRate:0000000000000000 _ZZ20Update_crossfeedbackvE7modRate
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11686  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11690  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6LNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11693  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11697  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6RNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11700  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11704  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 _ZZL13AudioCallbackPfS_jE7Counter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11707  .bss.crossfeedback:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11714  .bss.crossfeedback_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11720  .bss.delayL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11727  .bss.delayR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11734  .bss.delayTimeL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11741  .bss.delayTimeR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11748  .bss.delaysL_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11755  .bss.delaysR_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11766  .bss.div_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11772  .bss.div_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11774  .bss.drywet_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11781  .bss.feedbackL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11788  .bss.feedbackL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11795  .bss.feedbackR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11802  .bss.feedbackR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11809  .bss.filterXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11816  .bss.modulation_CV_Raw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11827  .bss.mute:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11829  .bss.save_flag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11840  .bss.shift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11846  .bss.syncMode:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11848  .bss.tempoLED_BASE:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11855  .bss.width_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11874  .data.drywet:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11881  .data.width:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 356


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11888  .rodata.CSWTCH.244:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11892  .rodata.CSWTCH.244:0000000000000000 CSWTCH.244
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11897  .rodata._ZL18defaultAltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11901  .rodata._ZL18defaultAltControls:0000000000000000 _ZL18defaultAltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s:11911  .sdram_bss:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy6SwitchD5Ev
                           .group:0000000000000000 _ZN5daisy9DaisySeedD5Ev
                           .group:0000000000000000 _ZN7daisysp4AdsrD5Ev
                           .group:0000000000000000 _ZN7daisysp10OscillatorD5Ev
                           .group:0000000000000000 _ZN7daisysp3SvfD5Ev
                           .group:0000000000000000 _ZN7daisysp9CrossFadeD5Ev
                           .group:0000000000000000 _ZN7daisysp7DcBlockD5Ev
                           .group:0000000000000000 _ZN7daisysp9EnvFollowD5Ev
                           .group:0000000000000000 _ZN8TaptempoD5Ev
                           .group:0000000000000000 _ZN8TempoLEDD5Ev
                           .group:0000000000000000 _ZN9ButtonLEDD5Ev
                           .group:0000000000000000 _ZN10DelayMultiD5Ev
                           .group:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED5Ev
                           .group:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED5Ev

UNDEFINED SYMBOLS
_ZN5daisy9DaisySeed6GetPinEh
_ZN10DelayMulti4initE12dsy_gpio_pinf
_ZN10DelayMulti12SetDelayTimeEf
_ZNK5daisy9AdcHandle8GetFloatEh
_ZNK5daisy9AdcHandle11GetMuxFloatEhh
_Z5scalefff9CurveType
_ZN7daisysp3Svf7SetFreqEf
_ZN7daisysp3Svf6SetResEf
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN7daisysp10Oscillator7ProcessEv
_ZN10DelayMulti13SetModulationERKf
_ZN5daisy6Switch8DebounceEv
_ZN8TempoLED10resetPhaseEv
_ZN8Taptempo3tapEv
_ZN8Taptempo10getTapFreqEv
_ZN8TempoLED8setTempoEf
_ZN8TempoLED6updateEv
_ZN8TempoLED5isEOCEv
_ZN8Taptempo12getTapLengthEv
_ZN8Taptempo11setTapRatioEf
_ZN10DelayMulti16SetDelayTime_potEfb
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN7daisysp4Adsr4InitEf
_ZN7daisysp3Svf4InitEf
_ZN7daisysp3Svf8SetDriveEf
_ZN7daisysp7DcBlock4InitEf
_ZN8Taptempo4initEiif
_ZN8TempoLED4initE12dsy_gpio_pinf
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccQpwbyL.s 			page 357


_ZN5daisy9AdcHandle5StartEv
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
_ZN8TempoLED7LED_setEf
_ZN9ButtonLED7LED_setEf
_ZN9ButtonLED8getStateEv
_ZN9ButtonLED6updateEv
_ZN9ButtonLED10RisingEdgeEv
_ZN9ButtonLED11FallingEdgeEv
_ZN5daisy6System6GetNowEv
_ZN9ButtonLED6toggleEv
_ZN7daisysp7DcBlock7ProcessEf
_ZN10DelayMulti5WriteERKf
_ZN7daisysp9CrossFade7ProcessERfS1_
_ZN7daisysp4Adsr7ProcessEb
sinf
_ZN10DelayMulti9GetOutputEv
_ZN7daisysp3Svf7ProcessEf
__aeabi_atexit
__dso_handle
