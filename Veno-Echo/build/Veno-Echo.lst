ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Veno-Echo.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy6SwitchD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy6SwitchD2Ev:
  27              	.LVL0:
  28              	.LFB1523:
  29              		.file 1 "../libdaisy/src/hid/switch.h"
   1:../libdaisy/src/hid/switch.h **** #pragma once
   2:../libdaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../libdaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../libdaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../libdaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../libdaisy/src/hid/switch.h **** 
   7:../libdaisy/src/hid/switch.h **** namespace daisy
   8:../libdaisy/src/hid/switch.h **** {
   9:../libdaisy/src/hid/switch.h **** /** 
  10:../libdaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  11:../libdaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  12:../libdaisy/src/hid/switch.h ****     @author Stephen Hensley
  13:../libdaisy/src/hid/switch.h ****     @date December 2019
  14:../libdaisy/src/hid/switch.h ****     @ingroup controls
  15:../libdaisy/src/hid/switch.h **** */
  16:../libdaisy/src/hid/switch.h **** class Switch
  17:../libdaisy/src/hid/switch.h **** {
  18:../libdaisy/src/hid/switch.h ****   public:
  19:../libdaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  20:../libdaisy/src/hid/switch.h ****     enum Type
  21:../libdaisy/src/hid/switch.h ****     {
  22:../libdaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  23:../libdaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  24:../libdaisy/src/hid/switch.h ****     };
  25:../libdaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  26:../libdaisy/src/hid/switch.h ****     enum Polarity
  27:../libdaisy/src/hid/switch.h ****     {
  28:../libdaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  29:../libdaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 2


  30:../libdaisy/src/hid/switch.h ****     };
  31:../libdaisy/src/hid/switch.h **** 
  32:../libdaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  33:../libdaisy/src/hid/switch.h ****     enum Pull
  34:../libdaisy/src/hid/switch.h ****     {
  35:../libdaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  36:../libdaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  37:../libdaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  38:../libdaisy/src/hid/switch.h ****     };
  39:../libdaisy/src/hid/switch.h **** 
  40:../libdaisy/src/hid/switch.h ****     Switch() {}
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
  30              		.loc 1 41 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 41 16 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE1523:
  40              		.weak	_ZN5daisy6SwitchD1Ev
  41              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
  42 0002 00BF     		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN5daisy9DaisySeedD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN5daisy9DaisySeedD2Ev:
  52              	.LVL1:
  53              	.LFB1703:
  54              		.file 2 "../libdaisy/src/daisy_seed.h"
   1:../libdaisy/src/daisy_seed.h **** #pragma once
   2:../libdaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../libdaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../libdaisy/src/daisy_seed.h **** 
   5:../libdaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../libdaisy/src/daisy_seed.h **** 
   7:../libdaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../libdaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../libdaisy/src/daisy_seed.h **** 
  10:../libdaisy/src/daisy_seed.h **** namespace daisy
  11:../libdaisy/src/daisy_seed.h **** {
  12:../libdaisy/src/daisy_seed.h **** /**
  13:../libdaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../libdaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../libdaisy/src/daisy_seed.h **** 
  16:../libdaisy/src/daisy_seed.h ****    @ingroup boards
  17:../libdaisy/src/daisy_seed.h **** */
  18:../libdaisy/src/daisy_seed.h **** class DaisySeed
  19:../libdaisy/src/daisy_seed.h **** {
  20:../libdaisy/src/daisy_seed.h ****   public:
  21:../libdaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 3


  55              		.loc 2 22 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LBB793:
  61              	.LBI793:
  62              		.file 3 "../libdaisy/src/sys/system.h"
   1:../libdaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../libdaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../libdaisy/src/sys/system.h **** 
   4:../libdaisy/src/sys/system.h **** #include <cstdint>
   5:../libdaisy/src/sys/system.h **** #include "per/tim.h"
   6:../libdaisy/src/sys/system.h **** 
   7:../libdaisy/src/sys/system.h **** namespace daisy
   8:../libdaisy/src/sys/system.h **** {
   9:../libdaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  10:../libdaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  11:../libdaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  12:../libdaisy/src/sys/system.h ****  **
  13:../libdaisy/src/sys/system.h ****  ** @author shensley
  14:../libdaisy/src/sys/system.h ****  ** @addtogroup system
  15:../libdaisy/src/sys/system.h ****  */
  16:../libdaisy/src/sys/system.h **** class System
  17:../libdaisy/src/sys/system.h **** {
  18:../libdaisy/src/sys/system.h ****   public:
  19:../libdaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  20:../libdaisy/src/sys/system.h ****     struct Config
  21:../libdaisy/src/sys/system.h ****     {
  22:../libdaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  23:../libdaisy/src/sys/system.h ****         enum class SysClkFreq
  24:../libdaisy/src/sys/system.h ****         {
  25:../libdaisy/src/sys/system.h ****             FREQ_400MHZ,
  26:../libdaisy/src/sys/system.h ****             FREQ_480MHZ,
  27:../libdaisy/src/sys/system.h ****         };
  28:../libdaisy/src/sys/system.h **** 
  29:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  30:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  31:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  32:../libdaisy/src/sys/system.h ****          ** */
  33:../libdaisy/src/sys/system.h ****         void Defaults()
  34:../libdaisy/src/sys/system.h ****         {
  35:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_400MHZ;
  36:../libdaisy/src/sys/system.h ****             use_dcache = true;
  37:../libdaisy/src/sys/system.h ****             use_icache = true;
  38:../libdaisy/src/sys/system.h ****         }
  39:../libdaisy/src/sys/system.h **** 
  40:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  41:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  42:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  43:../libdaisy/src/sys/system.h ****          ** */
  44:../libdaisy/src/sys/system.h ****         void Boost()
  45:../libdaisy/src/sys/system.h ****         {
  46:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_480MHZ;
  47:../libdaisy/src/sys/system.h ****             use_dcache = true;
  48:../libdaisy/src/sys/system.h ****             use_icache = true;
  49:../libdaisy/src/sys/system.h ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 4


  50:../libdaisy/src/sys/system.h **** 
  51:../libdaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  52:../libdaisy/src/sys/system.h ****         bool       use_dcache;
  53:../libdaisy/src/sys/system.h ****         bool       use_icache;
  54:../libdaisy/src/sys/system.h ****     };
  55:../libdaisy/src/sys/system.h **** 
  56:../libdaisy/src/sys/system.h ****     System() {}
  57:../libdaisy/src/sys/system.h ****     ~System() {}
  63              		.loc 3 57 5 view .LVU3
  64              		.loc 3 57 5 is_stmt 0 view .LVU4
  65              	.LBE793:
  66              	.LBB794:
  67              	.LBI794:
  68              		.file 4 "../libdaisy/src/hid/usb.h"
   1:../libdaisy/src/hid/usb.h **** #pragma once
   2:../libdaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../libdaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../libdaisy/src/hid/usb.h **** #include <stdint.h>
   5:../libdaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../libdaisy/src/hid/usb.h **** 
   7:../libdaisy/src/hid/usb.h **** namespace daisy
   8:../libdaisy/src/hid/usb.h **** /** @addtogroup externals
   9:../libdaisy/src/hid/usb.h ****     @{
  10:../libdaisy/src/hid/usb.h **** */
  11:../libdaisy/src/hid/usb.h **** 
  12:../libdaisy/src/hid/usb.h **** {
  13:../libdaisy/src/hid/usb.h **** /** 
  14:../libdaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../libdaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../libdaisy/src/hid/usb.h ****     @date December 2019
  17:../libdaisy/src/hid/usb.h **** */
  18:../libdaisy/src/hid/usb.h **** class UsbHandle
  19:../libdaisy/src/hid/usb.h **** {
  20:../libdaisy/src/hid/usb.h ****   public:
  21:../libdaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../libdaisy/src/hid/usb.h ****     enum class Result
  23:../libdaisy/src/hid/usb.h ****     {
  24:../libdaisy/src/hid/usb.h ****         OK,
  25:../libdaisy/src/hid/usb.h ****         ERR,
  26:../libdaisy/src/hid/usb.h ****     };
  27:../libdaisy/src/hid/usb.h **** 
  28:../libdaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../libdaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../libdaisy/src/hid/usb.h ****     {
  31:../libdaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../libdaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../libdaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../libdaisy/src/hid/usb.h ****     };
  35:../libdaisy/src/hid/usb.h **** 
  36:../libdaisy/src/hid/usb.h **** 
  37:../libdaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../libdaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../libdaisy/src/hid/usb.h **** 
  40:../libdaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../libdaisy/src/hid/usb.h **** 
  42:../libdaisy/src/hid/usb.h ****     ~UsbHandle() {}
  69              		.loc 4 42 5 is_stmt 1 view .LVU5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 5


  70              		.loc 4 42 5 is_stmt 0 view .LVU6
  71              	.LBE794:
  72              	.LBB795:
  73              	.LBI795:
  74              		.file 5 "../libdaisy/src/per/adc.h"
   1:../libdaisy/src/per/adc.h **** #pragma once
   2:../libdaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../libdaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../libdaisy/src/per/adc.h **** #include <stdint.h>
   5:../libdaisy/src/per/adc.h **** #include <stdlib.h>
   6:../libdaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../libdaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../libdaisy/src/per/adc.h **** 
   9:../libdaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 14 /**< Maximum number of ADC channels */
  10:../libdaisy/src/per/adc.h **** 
  11:../libdaisy/src/per/adc.h **** namespace daisy
  12:../libdaisy/src/per/adc.h **** {
  13:../libdaisy/src/per/adc.h **** /** @addtogroup analog_digital_conversion
  14:../libdaisy/src/per/adc.h ****     @{
  15:../libdaisy/src/per/adc.h **** */
  16:../libdaisy/src/per/adc.h **** 
  17:../libdaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../libdaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../libdaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../libdaisy/src/per/adc.h **** */
  21:../libdaisy/src/per/adc.h **** 
  22:../libdaisy/src/per/adc.h **** /** Configuration Structure for a given channel */
  23:../libdaisy/src/per/adc.h **** struct AdcChannelConfig
  24:../libdaisy/src/per/adc.h **** {
  25:../libdaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  26:../libdaisy/src/per/adc.h ****     enum MuxPin
  27:../libdaisy/src/per/adc.h ****     {
  28:../libdaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  29:../libdaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  30:../libdaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  31:../libdaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  32:../libdaisy/src/per/adc.h ****     };
  33:../libdaisy/src/per/adc.h **** 
  34:../libdaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  35:../libdaisy/src/per/adc.h ****     \param pin Pin to init.
  36:../libdaisy/src/per/adc.h ****      */
  37:../libdaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  38:../libdaisy/src/per/adc.h **** 
  39:../libdaisy/src/per/adc.h ****     /** 
  40:../libdaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  41:../libdaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  42:../libdaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  43:../libdaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  44:../libdaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  45:../libdaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  46:../libdaisy/src/per/adc.h ****     \param mux_0 First mux pin
  47:../libdaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  48:../libdaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  49:../libdaisy/src/per/adc.h ****     \param adc_pin &
  50:../libdaisy/src/per/adc.h ****     */
  51:../libdaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  52:../libdaisy/src/per/adc.h ****                  size_t       mux_channels,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 6


  53:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  54:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  55:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  56:../libdaisy/src/per/adc.h **** 
  57:../libdaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  58:../libdaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  59:../libdaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  60:../libdaisy/src/per/adc.h **** };
  61:../libdaisy/src/per/adc.h **** 
  62:../libdaisy/src/per/adc.h **** /**
  63:../libdaisy/src/per/adc.h ****    Handler for analog to digital conversion
  64:../libdaisy/src/per/adc.h **** */
  65:../libdaisy/src/per/adc.h **** class AdcHandle
  66:../libdaisy/src/per/adc.h **** {
  67:../libdaisy/src/per/adc.h ****   public:
  68:../libdaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  69:../libdaisy/src/per/adc.h ****     enum OverSampling
  70:../libdaisy/src/per/adc.h ****     {
  71:../libdaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  72:../libdaisy/src/per/adc.h ****         OVS_4,    /**< & */
  73:../libdaisy/src/per/adc.h ****         OVS_8,    /**< & */
  74:../libdaisy/src/per/adc.h ****         OVS_16,   /**< & */
  75:../libdaisy/src/per/adc.h ****         OVS_32,   /**< & */
  76:../libdaisy/src/per/adc.h ****         OVS_64,   /**< & */
  77:../libdaisy/src/per/adc.h ****         OVS_128,  /**< & */
  78:../libdaisy/src/per/adc.h ****         OVS_256,  /**< & */
  79:../libdaisy/src/per/adc.h ****         OVS_512,  /**< & */
  80:../libdaisy/src/per/adc.h ****         OVS_1024, /**< & */
  81:../libdaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  82:../libdaisy/src/per/adc.h ****     };
  83:../libdaisy/src/per/adc.h **** 
  84:../libdaisy/src/per/adc.h ****     AdcHandle() {}
  85:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
  75              		.loc 5 85 5 is_stmt 1 view .LVU7
  76              		.loc 5 85 5 is_stmt 0 view .LVU8
  77              	.LBE795:
  78              	.LBB796:
  79              	.LBI796:
  80              		.file 6 "../libdaisy/src/hid/audio.h"
   1:../libdaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../libdaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../libdaisy/src/hid/audio.h **** 
   4:../libdaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../libdaisy/src/hid/audio.h **** 
   6:../libdaisy/src/hid/audio.h **** namespace daisy
   7:../libdaisy/src/hid/audio.h **** {
   8:../libdaisy/src/hid/audio.h **** class AudioHandle
   9:../libdaisy/src/hid/audio.h **** {
  10:../libdaisy/src/hid/audio.h ****   public:
  11:../libdaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  12:../libdaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  13:../libdaisy/src/hid/audio.h ****     struct Config
  14:../libdaisy/src/hid/audio.h ****     {
  15:../libdaisy/src/hid/audio.h ****         size_t                        blocksize;
  16:../libdaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  17:../libdaisy/src/hid/audio.h ****         float                         postgain;
  18:../libdaisy/src/hid/audio.h ****     };
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 7


  19:../libdaisy/src/hid/audio.h **** 
  20:../libdaisy/src/hid/audio.h ****     enum class Result
  21:../libdaisy/src/hid/audio.h ****     {
  22:../libdaisy/src/hid/audio.h ****         OK,
  23:../libdaisy/src/hid/audio.h ****         ERR,
  24:../libdaisy/src/hid/audio.h ****     };
  25:../libdaisy/src/hid/audio.h **** 
  26:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. Both arrays arranged by float[chn][sample] */
  27:../libdaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(float** in, float** out, size_t size);
  28:../libdaisy/src/hid/audio.h **** 
  29:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. 
  30:../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  31:../libdaisy/src/hid/audio.h ****      */
  32:../libdaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(float* in,
  33:../libdaisy/src/hid/audio.h ****                                               float* out,
  34:../libdaisy/src/hid/audio.h ****                                               size_t size);
  35:../libdaisy/src/hid/audio.h **** 
  36:../libdaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  37:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
  81              		.loc 6 37 5 is_stmt 1 view .LVU9
  82              		.loc 6 37 5 is_stmt 0 view .LVU10
  83              	.LBE796:
  84              		.loc 2 22 19 view .LVU11
  85 0000 7047     		bx	lr
  86              		.cfi_endproc
  87              	.LFE1703:
  89              		.weak	_ZN5daisy9DaisySeedD1Ev
  90              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  91 0002 00BF     		.section	.text._ZN7daisysp4AdsrD2Ev,"axG",%progbits,_ZN7daisysp4AdsrD5Ev,comdat
  92              		.align	1
  93              		.p2align 2,,3
  94              		.weak	_ZN7daisysp4AdsrD2Ev
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv5-d16
 100              	_ZN7daisysp4AdsrD2Ev:
 101              	.LVL2:
 102              	.LFB1726:
 103              		.file 7 "../DaisySP/Source/Control/adsr.h"
   1:../DaisySP/Source/Control/adsr.h **** #pragma once
   2:../DaisySP/Source/Control/adsr.h **** #ifndef DSY_ADSR_H
   3:../DaisySP/Source/Control/adsr.h **** #define DSY_ADSR_H
   4:../DaisySP/Source/Control/adsr.h **** 
   5:../DaisySP/Source/Control/adsr.h **** #include <stdint.h>
   6:../DaisySP/Source/Control/adsr.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Control/adsr.h **** 
   8:../DaisySP/Source/Control/adsr.h **** namespace daisysp
   9:../DaisySP/Source/Control/adsr.h **** {
  10:../DaisySP/Source/Control/adsr.h **** /** Distinct stages that the phase of the envelope can be located in.
  11:../DaisySP/Source/Control/adsr.h **** - IDLE   = located at phase location 0, and not currently running
  12:../DaisySP/Source/Control/adsr.h **** - ATTACK  = First segment of envelope where phase moves from 0 to 1
  13:../DaisySP/Source/Control/adsr.h **** - DECAY   = Second segment of envelope where phase moves from 1 to SUSTAIN value
  14:../DaisySP/Source/Control/adsr.h **** - SUSTAIN = Third segment of envelope, stays at SUSTAIN level until GATE is released
  15:../DaisySP/Source/Control/adsr.h **** - RELEASE =     Fourth segment of envelop where phase moves from SUSTAIN to 0
  16:../DaisySP/Source/Control/adsr.h **** - LAST    =  Last segment, aka release
  17:../DaisySP/Source/Control/adsr.h **** */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 8


  18:../DaisySP/Source/Control/adsr.h **** enum
  19:../DaisySP/Source/Control/adsr.h **** {
  20:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_IDLE,
  21:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_ATTACK,
  22:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_DECAY,
  23:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_SUSTAIN,
  24:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_RELEASE,
  25:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_LAST,
  26:../DaisySP/Source/Control/adsr.h **** };
  27:../DaisySP/Source/Control/adsr.h **** 
  28:../DaisySP/Source/Control/adsr.h **** 
  29:../DaisySP/Source/Control/adsr.h **** /** adsr envelope module
  30:../DaisySP/Source/Control/adsr.h **** 
  31:../DaisySP/Source/Control/adsr.h **** Original author(s) : Paul Batchelor
  32:../DaisySP/Source/Control/adsr.h **** 
  33:../DaisySP/Source/Control/adsr.h **** Ported from Soundpipe by Ben Sergentanis, May 2020
  34:../DaisySP/Source/Control/adsr.h **** */
  35:../DaisySP/Source/Control/adsr.h **** class Adsr
  36:../DaisySP/Source/Control/adsr.h **** {
  37:../DaisySP/Source/Control/adsr.h ****   public:
  38:../DaisySP/Source/Control/adsr.h ****     Adsr() {}
  39:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 104              		.loc 7 39 5 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109              		.loc 7 39 14 is_stmt 0 view .LVU13
 110 0000 7047     		bx	lr
 111              		.cfi_endproc
 112              	.LFE1726:
 114              		.weak	_ZN7daisysp4AdsrD1Ev
 115              		.thumb_set _ZN7daisysp4AdsrD1Ev,_ZN7daisysp4AdsrD2Ev
 116 0002 00BF     		.section	.text._ZN7daisysp10OscillatorD2Ev,"axG",%progbits,_ZN7daisysp10OscillatorD5Ev,comdat
 117              		.align	1
 118              		.p2align 2,,3
 119              		.weak	_ZN7daisysp10OscillatorD2Ev
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv5-d16
 125              	_ZN7daisysp10OscillatorD2Ev:
 126              	.LVL3:
 127              	.LFB3340:
 128              		.file 8 "../DaisySP/Source/Synthesis/oscillator.h"
   1:../DaisySP/Source/Synthesis/oscillator.h **** #pragma once
   2:../DaisySP/Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
   3:../DaisySP/Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
   4:../DaisySP/Source/Synthesis/oscillator.h **** #include <stdint.h>
   5:../DaisySP/Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
   6:../DaisySP/Source/Synthesis/oscillator.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Synthesis/oscillator.h **** 
   8:../DaisySP/Source/Synthesis/oscillator.h **** namespace daisysp
   9:../DaisySP/Source/Synthesis/oscillator.h **** {
  10:../DaisySP/Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:../DaisySP/Source/Synthesis/oscillator.h **** */
  12:../DaisySP/Source/Synthesis/oscillator.h **** class Oscillator
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 9


  13:../DaisySP/Source/Synthesis/oscillator.h **** {
  14:../DaisySP/Source/Synthesis/oscillator.h ****   public:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     Oscillator() {}
  16:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 129              		.loc 8 16 5 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134              		.loc 8 16 20 is_stmt 0 view .LVU15
 135 0000 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE3340:
 139              		.weak	_ZN7daisysp10OscillatorD1Ev
 140              		.thumb_set _ZN7daisysp10OscillatorD1Ev,_ZN7daisysp10OscillatorD2Ev
 141 0002 00BF     		.section	.text._ZN7daisysp3SvfD2Ev,"axG",%progbits,_ZN7daisysp3SvfD5Ev,comdat
 142              		.align	1
 143              		.p2align 2,,3
 144              		.weak	_ZN7daisysp3SvfD2Ev
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv5-d16
 150              	_ZN7daisysp3SvfD2Ev:
 151              	.LVL4:
 152              	.LFB3356:
 153              		.file 9 "../DaisySP/Source/Filters/svf.h"
   1:../DaisySP/Source/Filters/svf.h **** #pragma once
   2:../DaisySP/Source/Filters/svf.h **** #ifndef DSY_SVF_H
   3:../DaisySP/Source/Filters/svf.h **** #define DSY_SVF_H
   4:../DaisySP/Source/Filters/svf.h **** 
   5:../DaisySP/Source/Filters/svf.h **** namespace daisysp
   6:../DaisySP/Source/Filters/svf.h **** {
   7:../DaisySP/Source/Filters/svf.h **** /**      Double Sampled, Stable State Variable Filter
   8:../DaisySP/Source/Filters/svf.h **** 
   9:../DaisySP/Source/Filters/svf.h **** Credit to Andrew Simper from musicdsp.org
  10:../DaisySP/Source/Filters/svf.h **** 
  11:../DaisySP/Source/Filters/svf.h **** This is his "State Variable Filter (Double Sampled, Stable)"
  12:../DaisySP/Source/Filters/svf.h **** 
  13:../DaisySP/Source/Filters/svf.h **** Additional thanks to Laurent de Soras for stability limit, and 
  14:../DaisySP/Source/Filters/svf.h **** Stefan Diedrichsen for the correct notch output
  15:../DaisySP/Source/Filters/svf.h **** 
  16:../DaisySP/Source/Filters/svf.h **** Ported by: Stephen Hensley
  17:../DaisySP/Source/Filters/svf.h **** */
  18:../DaisySP/Source/Filters/svf.h **** class Svf
  19:../DaisySP/Source/Filters/svf.h **** {
  20:../DaisySP/Source/Filters/svf.h ****   public:
  21:../DaisySP/Source/Filters/svf.h ****     Svf() {}
  22:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 154              		.loc 9 22 5 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 159              		.loc 9 22 13 is_stmt 0 view .LVU17
 160 0000 7047     		bx	lr
 161              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 10


 162              	.LFE3356:
 164              		.weak	_ZN7daisysp3SvfD1Ev
 165              		.thumb_set _ZN7daisysp3SvfD1Ev,_ZN7daisysp3SvfD2Ev
 166 0002 00BF     		.section	.text._ZN7daisysp9CrossFadeD2Ev,"axG",%progbits,_ZN7daisysp9CrossFadeD5Ev,comdat
 167              		.align	1
 168              		.p2align 2,,3
 169              		.weak	_ZN7daisysp9CrossFadeD2Ev
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv5-d16
 175              	_ZN7daisysp9CrossFadeD2Ev:
 176              	.LVL5:
 177              	.LFB3461:
 178              		.file 10 "../DaisySP/Source/Dynamics/crossfade.h"
   1:../DaisySP/Source/Dynamics/crossfade.h **** #pragma once
   2:../DaisySP/Source/Dynamics/crossfade.h **** #ifndef DSY_CROSSFADE_H
   3:../DaisySP/Source/Dynamics/crossfade.h **** #define DSY_CROSSFADE_H
   4:../DaisySP/Source/Dynamics/crossfade.h **** #include <stdint.h>
   5:../DaisySP/Source/Dynamics/crossfade.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Dynamics/crossfade.h **** 
   7:../DaisySP/Source/Dynamics/crossfade.h **** namespace daisysp
   8:../DaisySP/Source/Dynamics/crossfade.h **** {
   9:../DaisySP/Source/Dynamics/crossfade.h **** /** Curve applied to the CrossFade
  10:../DaisySP/Source/Dynamics/crossfade.h **** - LIN = linear
  11:../DaisySP/Source/Dynamics/crossfade.h **** - CPOW = constant power
  12:../DaisySP/Source/Dynamics/crossfade.h **** - LOG = logarithmic
  13:../DaisySP/Source/Dynamics/crossfade.h **** - EXP  exponential
  14:../DaisySP/Source/Dynamics/crossfade.h **** - LAST = end of enum (used for array indexing)
  15:../DaisySP/Source/Dynamics/crossfade.h **** */
  16:../DaisySP/Source/Dynamics/crossfade.h **** enum
  17:../DaisySP/Source/Dynamics/crossfade.h **** {
  18:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LIN,
  19:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_CPOW,
  20:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LOG,
  21:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_EXP,
  22:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LAST,
  23:../DaisySP/Source/Dynamics/crossfade.h **** };
  24:../DaisySP/Source/Dynamics/crossfade.h **** 
  25:../DaisySP/Source/Dynamics/crossfade.h **** /** Performs a CrossFade between two signals
  26:../DaisySP/Source/Dynamics/crossfade.h **** 
  27:../DaisySP/Source/Dynamics/crossfade.h ****     Original author: Paul Batchelor
  28:../DaisySP/Source/Dynamics/crossfade.h **** 
  29:../DaisySP/Source/Dynamics/crossfade.h ****     Ported from Soundpipe by Andrew Ikenberry
  30:../DaisySP/Source/Dynamics/crossfade.h **** 
  31:../DaisySP/Source/Dynamics/crossfade.h ****     added curve option for constant power, etc.
  32:../DaisySP/Source/Dynamics/crossfade.h **** */
  33:../DaisySP/Source/Dynamics/crossfade.h **** class CrossFade
  34:../DaisySP/Source/Dynamics/crossfade.h **** {
  35:../DaisySP/Source/Dynamics/crossfade.h ****   public:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     CrossFade() {}
  37:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 179              		.loc 10 37 5 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 11


 184              		.loc 10 37 19 is_stmt 0 view .LVU19
 185 0000 7047     		bx	lr
 186              		.cfi_endproc
 187              	.LFE3461:
 189              		.weak	_ZN7daisysp9CrossFadeD1Ev
 190              		.thumb_set _ZN7daisysp9CrossFadeD1Ev,_ZN7daisysp9CrossFadeD2Ev
 191 0002 00BF     		.section	.text._ZN7daisysp7DcBlockD2Ev,"axG",%progbits,_ZN7daisysp7DcBlockD5Ev,comdat
 192              		.align	1
 193              		.p2align 2,,3
 194              		.weak	_ZN7daisysp7DcBlockD2Ev
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu fpv5-d16
 200              	_ZN7daisysp7DcBlockD2Ev:
 201              	.LVL6:
 202              	.LFB3753:
 203              		.file 11 "../DaisySP/Source/Utility/dcblock.h"
   1:../DaisySP/Source/Utility/dcblock.h **** 
   2:../DaisySP/Source/Utility/dcblock.h **** #pragma once
   3:../DaisySP/Source/Utility/dcblock.h **** #ifndef DSY_DCBLOCK_H
   4:../DaisySP/Source/Utility/dcblock.h **** #define DSY_DCBLOCK_H
   5:../DaisySP/Source/Utility/dcblock.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Utility/dcblock.h **** 
   7:../DaisySP/Source/Utility/dcblock.h **** namespace daisysp
   8:../DaisySP/Source/Utility/dcblock.h **** {
   9:../DaisySP/Source/Utility/dcblock.h **** /** Removes DC component of a signal
  10:../DaisySP/Source/Utility/dcblock.h ****     */
  11:../DaisySP/Source/Utility/dcblock.h **** class DcBlock
  12:../DaisySP/Source/Utility/dcblock.h **** {
  13:../DaisySP/Source/Utility/dcblock.h ****   public:
  14:../DaisySP/Source/Utility/dcblock.h ****     DcBlock(){};
  15:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 204              		.loc 11 15 5 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 209              		.loc 11 15 16 is_stmt 0 view .LVU21
 210 0000 7047     		bx	lr
 211              		.cfi_endproc
 212              	.LFE3753:
 214              		.weak	_ZN7daisysp7DcBlockD1Ev
 215              		.thumb_set _ZN7daisysp7DcBlockD1Ev,_ZN7daisysp7DcBlockD2Ev
 216 0002 00BF     		.section	.text._ZN7daisysp9EnvFollowD2Ev,"axG",%progbits,_ZN7daisysp9EnvFollowD5Ev,comdat
 217              		.align	1
 218              		.p2align 2,,3
 219              		.weak	_ZN7daisysp9EnvFollowD2Ev
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu fpv5-d16
 225              	_ZN7daisysp9EnvFollowD2Ev:
 226              	.LVL7:
 227              	.LFB3940:
 228              		.file 12 "envFollow.h"
   1:envFollow.h   **** // Copyright 2021 Adam Fulford
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 12


   2:envFollow.h   **** // 
   3:envFollow.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:envFollow.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:envFollow.h   **** // in the Software without restriction, including without limitation the rights
   6:envFollow.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:envFollow.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:envFollow.h   **** // furnished to do so, subject to the following conditions:
   9:envFollow.h   **** // 
  10:envFollow.h   **** // The above copyright notice and this permission notice shall be included in
  11:envFollow.h   **** // all copies or substantial portions of the Software.
  12:envFollow.h   **** // 
  13:envFollow.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:envFollow.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:envFollow.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:envFollow.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:envFollow.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:envFollow.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:envFollow.h   **** // THE SOFTWARE.
  20:envFollow.h   **** // 
  21:envFollow.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:envFollow.h   **** 
  23:envFollow.h   **** #ifndef ENV_FOLLOW_H
  24:envFollow.h   **** #define ENV_FOLLOW_H
  25:envFollow.h   **** #include <math.h>
  26:envFollow.h   **** 
  27:envFollow.h   **** namespace daisysp
  28:envFollow.h   **** {
  29:envFollow.h   **** 
  30:envFollow.h   **** class EnvFollow
  31:envFollow.h   **** {
  32:envFollow.h   ****     private:
  33:envFollow.h   ****     
  34:envFollow.h   ****     float avg;      //exp average of input
  35:envFollow.h   ****     float pos_sample;   //positive sample
  36:envFollow.h   ****     float sample_noDC;  //no DC sample
  37:envFollow.h   ****     float avg_env;  //average envelope
  38:envFollow.h   ****     float w;        //weighting
  39:envFollow.h   ****     float w_env;    //envelope weighting
  40:envFollow.h   **** 
  41:envFollow.h   ****     public:
  42:envFollow.h   **** 
  43:envFollow.h   ****     EnvFollow() //default constructor
  44:envFollow.h   ****     {
  45:envFollow.h   ****         avg = 0.0f;      //exp average of input
  46:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
  47:envFollow.h   ****         avg_env = 0.0f;  //average envelope
  48:envFollow.h   ****         w = 0.0001f;        //weighting
  49:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
  50:envFollow.h   ****         sample_noDC = 0.0f;
  51:envFollow.h   ****     }  
  52:envFollow.h   ****     ~EnvFollow() {}
 229              		.loc 12 52 5 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              		.loc 12 52 19 is_stmt 0 view .LVU23
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 13


 235 0000 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE3940:
 239              		.weak	_ZN7daisysp9EnvFollowD1Ev
 240              		.thumb_set _ZN7daisysp9EnvFollowD1Ev,_ZN7daisysp9EnvFollowD2Ev
 241 0002 00BF     		.section	.text._ZN8TaptempoD2Ev,"axG",%progbits,_ZN8TaptempoD5Ev,comdat
 242              		.align	1
 243              		.p2align 2,,3
 244              		.weak	_ZN8TaptempoD2Ev
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu fpv5-d16
 250              	_ZN8TaptempoD2Ev:
 251              	.LVL8:
 252              	.LFB3947:
 253              		.file 13 "taptempo.h"
   1:taptempo.h    **** // Copyright 2021 Adam Fulford
   2:taptempo.h    **** // 
   3:taptempo.h    **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:taptempo.h    **** // of this software and associated documentation files (the "Software"), to deal
   5:taptempo.h    **** // in the Software without restriction, including without limitation the rights
   6:taptempo.h    **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:taptempo.h    **** // copies of the Software, and to permit persons to whom the Software is
   8:taptempo.h    **** // furnished to do so, subject to the following conditions:
   9:taptempo.h    **** // 
  10:taptempo.h    **** // The above copyright notice and this permission notice shall be included in
  11:taptempo.h    **** // all copies or substantial portions of the Software.
  12:taptempo.h    **** // 
  13:taptempo.h    **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:taptempo.h    **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:taptempo.h    **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:taptempo.h    **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:taptempo.h    **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:taptempo.h    **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:taptempo.h    **** // THE SOFTWARE.
  20:taptempo.h    **** // 
  21:taptempo.h    **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:taptempo.h    **** 
  23:taptempo.h    **** #ifndef TAP_TEMPO_H
  24:taptempo.h    **** #define TAP_TEMPO_H
  25:taptempo.h    **** 
  26:taptempo.h    **** #include "daisysp.h"
  27:taptempo.h    **** #include "daisy_seed.h"
  28:taptempo.h    **** 
  29:taptempo.h    **** using namespace daisy;
  30:taptempo.h    **** 
  31:taptempo.h    **** class Taptempo
  32:taptempo.h    **** {
  33:taptempo.h    ****     private:
  34:taptempo.h    ****         uint32_t mintap_,maxtap_;
  35:taptempo.h    ****         uint32_t currentTime_,lastTime_,lastTapLength_,tapLength_;
  36:taptempo.h    ****         uint32_t clockLength_, lastClockLength_, clockThresh_;
  37:taptempo.h    ****         bool tapflag_;
  38:taptempo.h    ****         float tap_tolerance_,tempo_,tapRatio_;
  39:taptempo.h    **** 
  40:taptempo.h    ****     public:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 14


  41:taptempo.h    **** 
  42:taptempo.h    ****     Taptempo()  //default constructor
  43:taptempo.h    ****     {
  44:taptempo.h    ****         tapflag_ = false;
  45:taptempo.h    ****         tap_tolerance_ = 1.25f;
  46:taptempo.h    ****         maxtap_ = 2000;
  47:taptempo.h    ****         mintap_ = 80;
  48:taptempo.h    ****         lastTapLength_ = 0;
  49:taptempo.h    ****         tempo_ = 500.0f;
  50:taptempo.h    ****         lastTime_ = 0;
  51:taptempo.h    ****         currentTime_ = 0;
  52:taptempo.h    ****         tapRatio_ = 1.0f;
  53:taptempo.h    ****         clockLength_ = 0;
  54:taptempo.h    ****         lastClockLength_ = 0;
  55:taptempo.h    ****         clockThresh_ = 10; //ms change
  56:taptempo.h    ****     }
  57:taptempo.h    ****     ~Taptempo() {}
 254              		.loc 13 57 5 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259              		.loc 13 57 18 is_stmt 0 view .LVU25
 260 0000 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE3947:
 264              		.weak	_ZN8TaptempoD1Ev
 265              		.thumb_set _ZN8TaptempoD1Ev,_ZN8TaptempoD2Ev
 266 0002 00BF     		.section	.text._ZN8TempoLEDD2Ev,"axG",%progbits,_ZN8TempoLEDD5Ev,comdat
 267              		.align	1
 268              		.p2align 2,,3
 269              		.weak	_ZN8TempoLEDD2Ev
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv5-d16
 275              	_ZN8TempoLEDD2Ev:
 276              	.LVL9:
 277              	.LFB3970:
 278              		.file 14 "LEDs.h"
   1:LEDs.h        **** // Copyright 2021 Adam Fulford
   2:LEDs.h        **** // 
   3:LEDs.h        **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:LEDs.h        **** // of this software and associated documentation files (the "Software"), to deal
   5:LEDs.h        **** // in the Software without restriction, including without limitation the rights
   6:LEDs.h        **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:LEDs.h        **** // copies of the Software, and to permit persons to whom the Software is
   8:LEDs.h        **** // furnished to do so, subject to the following conditions:
   9:LEDs.h        **** // 
  10:LEDs.h        **** // The above copyright notice and this permission notice shall be included in
  11:LEDs.h        **** // all copies or substantial portions of the Software.
  12:LEDs.h        **** // 
  13:LEDs.h        **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:LEDs.h        **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:LEDs.h        **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:LEDs.h        **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:LEDs.h        **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 15


  18:LEDs.h        **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:LEDs.h        **** // THE SOFTWARE.
  20:LEDs.h        **** // 
  21:LEDs.h        **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:LEDs.h        **** 
  23:LEDs.h        **** #ifndef LEDS_H
  24:LEDs.h        **** #define LEDS_H
  25:LEDs.h        **** 
  26:LEDs.h        **** #include "daisysp.h"
  27:LEDs.h        **** #include "daisy_seed.h"
  28:LEDs.h        **** #include "oscillator_p.h"
  29:LEDs.h        **** #include "constants.h"
  30:LEDs.h        **** 
  31:LEDs.h        **** using namespace daisysp;
  32:LEDs.h        **** using namespace daisy;
  33:LEDs.h        **** 
  34:LEDs.h        **** class TempoLED
  35:LEDs.h        **** {
  36:LEDs.h        **** 
  37:LEDs.h        **** Led led;
  38:LEDs.h        **** Oscillator_p blink;
  39:LEDs.h        **** TempoDivs div_last_;
  40:LEDs.h        **** //int phaseCounter_;
  41:LEDs.h        **** //int div_int;
  42:LEDs.h        **** //float phase_last_;
  43:LEDs.h        **** float GetDivInt(TempoDivs div);
  44:LEDs.h        **** 
  45:LEDs.h        **** public:
  46:LEDs.h        **** 
  47:LEDs.h        **** TempoLED(){}
  48:LEDs.h        **** ~TempoLED(){}   //destructor
 279              		.loc 14 48 1 is_stmt 1 view -0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284              	.LBB797:
 285              	.LBI797:
 286              		.file 15 "oscillator_p.h"
   1:oscillator_p.h **** #pragma once
   2:oscillator_p.h **** #ifndef DSY_OSCILLATOR_P_H
   3:oscillator_p.h **** #define DSY_OSCILLATOR_P_H
   4:oscillator_p.h **** #include <stdint.h>
   5:oscillator_p.h **** #include "Utility/dsp.h"
   6:oscillator_p.h **** #ifdef __cplusplus
   7:oscillator_p.h **** 
   8:oscillator_p.h **** namespace daisysp
   9:oscillator_p.h **** {
  10:oscillator_p.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:oscillator_p.h **** */
  12:oscillator_p.h **** class Oscillator_p
  13:oscillator_p.h **** {
  14:oscillator_p.h ****   public:
  15:oscillator_p.h ****     Oscillator_p() {}
  16:oscillator_p.h ****     ~Oscillator_p() {}
 287              		.loc 15 16 5 view .LVU27
 288              		.loc 15 16 5 is_stmt 0 view .LVU28
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 16


 289              	.LBE797:
 290              	.LBB798:
 291              	.LBI798:
 292              		.file 16 "../libdaisy/src/hid/led.h"
   1:../libdaisy/src/hid/led.h **** 
   2:../libdaisy/src/hid/led.h **** #pragma once
   3:../libdaisy/src/hid/led.h **** #ifndef DSY_LED_H
   4:../libdaisy/src/hid/led.h **** #define DSY_LED_H
   5:../libdaisy/src/hid/led.h **** #include "daisy_core.h"
   6:../libdaisy/src/hid/led.h **** #include "per/gpio.h"
   7:../libdaisy/src/hid/led.h **** 
   8:../libdaisy/src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../libdaisy/src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../libdaisy/src/hid/led.h **** */
  11:../libdaisy/src/hid/led.h **** 
  12:../libdaisy/src/hid/led.h **** namespace daisy
  13:../libdaisy/src/hid/led.h **** {
  14:../libdaisy/src/hid/led.h **** /**
  15:../libdaisy/src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../libdaisy/src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../libdaisy/src/hid/led.h ****     @author shensley
  18:../libdaisy/src/hid/led.h ****     @date March 2020
  19:../libdaisy/src/hid/led.h ****     @ingroup feedback
  20:../libdaisy/src/hid/led.h **** */
  21:../libdaisy/src/hid/led.h **** class Led
  22:../libdaisy/src/hid/led.h **** {
  23:../libdaisy/src/hid/led.h ****   public:
  24:../libdaisy/src/hid/led.h ****     Led() {}
  25:../libdaisy/src/hid/led.h ****     ~Led() {}
 293              		.loc 16 25 5 is_stmt 1 view .LVU29
 294              		.loc 16 25 5 is_stmt 0 view .LVU30
 295              	.LBE798:
 296              		.loc 14 48 13 view .LVU31
 297 0000 7047     		bx	lr
 298              		.cfi_endproc
 299              	.LFE3970:
 301              		.weak	_ZN8TempoLEDD1Ev
 302              		.thumb_set _ZN8TempoLEDD1Ev,_ZN8TempoLEDD2Ev
 303 0002 00BF     		.section	.text._ZN9ButtonLEDD2Ev,"axG",%progbits,_ZN9ButtonLEDD5Ev,comdat
 304              		.align	1
 305              		.p2align 2,,3
 306              		.weak	_ZN9ButtonLEDD2Ev
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 310              		.fpu fpv5-d16
 312              	_ZN9ButtonLEDD2Ev:
 313              	.LVL10:
 314              	.LFB3977:
  49:LEDs.h        **** 
  50:LEDs.h        **** void init(dsy_gpio_pin ledpin, float samplerate);  //led pin number
  51:LEDs.h        **** 
  52:LEDs.h        **** void setTempo(float tempo);
  53:LEDs.h        **** 
  54:LEDs.h        **** void resetPhase();
  55:LEDs.h        **** 
  56:LEDs.h        **** void resetPhaseCounter();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 17


  57:LEDs.h        **** 
  58:LEDs.h        **** //update using oscillator
  59:LEDs.h        **** void update();
  60:LEDs.h        **** 
  61:LEDs.h        **** //update using external sync
  62:LEDs.h        **** void update(TempoDivs div, float phase);
  63:LEDs.h        **** 
  64:LEDs.h        **** void LED_set(float brightness);
  65:LEDs.h        **** 
  66:LEDs.h        **** bool isEOC();
  67:LEDs.h        **** 
  68:LEDs.h        **** //high if just had a div change
  69:LEDs.h        **** //bool divChange();
  70:LEDs.h        **** 
  71:LEDs.h        **** float GetPhase() { return blink.GetPhase(); }
  72:LEDs.h        **** 
  73:LEDs.h        **** };
  74:LEDs.h        **** 
  75:LEDs.h        **** class ButtonLED    //button with status LED
  76:LEDs.h        **** {
  77:LEDs.h        ****     public:
  78:LEDs.h        ****     ButtonLED() {}
  79:LEDs.h        ****     ~ButtonLED() {}
 315              		.loc 14 79 5 is_stmt 1 view -0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              		@ link register save eliminated.
 320              	.LBB799:
 321              	.LBI799:
 322              		.loc 16 25 5 view .LVU33
 323              		.loc 16 25 5 is_stmt 0 view .LVU34
 324              	.LBE799:
 325              	.LBB800:
 326              	.LBI800:
 327              		.loc 1 41 5 is_stmt 1 view .LVU35
 328              		.loc 1 41 5 is_stmt 0 view .LVU36
 329              	.LBE800:
 330              		.loc 14 79 19 view .LVU37
 331 0000 7047     		bx	lr
 332              		.cfi_endproc
 333              	.LFE3977:
 335              		.weak	_ZN9ButtonLEDD1Ev
 336              		.thumb_set _ZN9ButtonLEDD1Ev,_ZN9ButtonLEDD2Ev
 337 0002 00BF     		.section	.text._ZN10DelayMultiD2Ev,"axG",%progbits,_ZN10DelayMultiD5Ev,comdat
 338              		.align	1
 339              		.p2align 2,,3
 340              		.weak	_ZN10DelayMultiD2Ev
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu fpv5-d16
 346              	_ZN10DelayMultiD2Ev:
 347              	.LVL11:
 348              	.LFB3983:
 349              		.file 17 "DelayMulti.h"
   1:DelayMulti.h  **** // Copyright 2021 Adam Fulford
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 18


   2:DelayMulti.h  **** // 
   3:DelayMulti.h  **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:DelayMulti.h  **** // of this software and associated documentation files (the "Software"), to deal
   5:DelayMulti.h  **** // in the Software without restriction, including without limitation the rights
   6:DelayMulti.h  **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:DelayMulti.h  **** // copies of the Software, and to permit persons to whom the Software is
   8:DelayMulti.h  **** // furnished to do so, subject to the following conditions:
   9:DelayMulti.h  **** // 
  10:DelayMulti.h  **** // The above copyright notice and this permission notice shall be included in
  11:DelayMulti.h  **** // all copies or substantial portions of the Software.
  12:DelayMulti.h  **** // 
  13:DelayMulti.h  **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:DelayMulti.h  **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:DelayMulti.h  **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:DelayMulti.h  **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:DelayMulti.h  **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:DelayMulti.h  **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:DelayMulti.h  **** // THE SOFTWARE.
  20:DelayMulti.h  **** // 
  21:DelayMulti.h  **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:DelayMulti.h  **** 
  23:DelayMulti.h  **** #ifndef DELAYMULTI_H
  24:DelayMulti.h  **** #define DELAYMULTI_H
  25:DelayMulti.h  **** 
  26:DelayMulti.h  **** #include "daisysp.h"
  27:DelayMulti.h  **** #include "daisy_seed.h"
  28:DelayMulti.h  **** #include "delayline_multitap.h" //modified delayline
  29:DelayMulti.h  **** #include "constants.h"
  30:DelayMulti.h  **** #include "LEDs.h"
  31:DelayMulti.h  **** #include "scale.h"
  32:DelayMulti.h  **** 
  33:DelayMulti.h  **** using namespace daisysp;
  34:DelayMulti.h  **** using namespace daisy;
  35:DelayMulti.h  **** 
  36:DelayMulti.h  **** constexpr size_t numHeads{1};
  37:DelayMulti.h  **** //constexpr size_t numHeadsSets{2};
  38:DelayMulti.h  **** constexpr size_t totalNumHeads{2};
  39:DelayMulti.h  **** 
  40:DelayMulti.h  **** constexpr float delaytime_threshold{50};   //in samples
  41:DelayMulti.h  **** constexpr uint32_t timethresh{25}; //length of wait before triggering xfade (used to be 75)
  42:DelayMulti.h  **** 
  43:DelayMulti.h  **** class DelayMulti
  44:DelayMulti.h  **** {
  45:DelayMulti.h  **** public:
  46:DelayMulti.h  **** DelayLineMultiTap <float, static_cast<size_t>(48000 * 36.0f)>  *del; //36 second buffer
  47:DelayMulti.h  **** //tempoLED
  48:DelayMulti.h  **** TempoLED tempoled;
  49:DelayMulti.h  **** DelayMulti() {}
  50:DelayMulti.h  **** ~DelayMulti() {}
 350              		.loc 17 50 1 is_stmt 1 view -0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354              		@ link register save eliminated.
 355              	.LBB801:
 356              	.LBI801:
  48:LEDs.h        **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 19


 357              		.loc 14 48 1 view .LVU39
 358              	.LBB802:
 359              	.LBI802:
 360              		.loc 15 16 5 view .LVU40
 361              		.loc 15 16 5 is_stmt 0 view .LVU41
 362              	.LBE802:
 363              	.LBB803:
 364              	.LBI803:
 365              		.loc 16 25 5 is_stmt 1 view .LVU42
 366              		.loc 16 25 5 is_stmt 0 view .LVU43
 367              	.LBE803:
 368              	.LBE801:
 369              		.loc 17 50 16 view .LVU44
 370 0000 7047     		bx	lr
 371              		.cfi_endproc
 372              	.LFE3983:
 374              		.weak	_ZN10DelayMultiD1Ev
 375              		.thumb_set _ZN10DelayMultiD1Ev,_ZN10DelayMultiD2Ev
 376 0002 00BF     		.section	.text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev,"axG",%progbits,_ZN7daisysp17DelayL
 377              		.align	1
 378              		.p2align 2,,3
 379              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 383              		.fpu fpv5-d16
 385              	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:
 386              	.LVL12:
 387              	.LFB4912:
 388              		.file 18 "delayline_multitap.h"
   1:delayline_multitap.h **** // Copyright 2021 Adam Fulford
   2:delayline_multitap.h **** // 
   3:delayline_multitap.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_multitap.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_multitap.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_multitap.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_multitap.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_multitap.h **** // furnished to do so, subject to the following conditions:
   9:delayline_multitap.h **** // 
  10:delayline_multitap.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_multitap.h **** // all copies or substantial portions of the Software.
  12:delayline_multitap.h **** // 
  13:delayline_multitap.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_multitap.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_multitap.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_multitap.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_multitap.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_multitap.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_multitap.h **** // THE SOFTWARE.
  20:delayline_multitap.h **** // 
  21:delayline_multitap.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_multitap.h **** 
  23:delayline_multitap.h **** #pragma once
  24:delayline_multitap.h **** #ifndef DSY_DELAY_MULTITAP_H
  25:delayline_multitap.h **** #define DSY_DELAY_MULTITAP_H
  26:delayline_multitap.h **** #include <stdlib.h>
  27:delayline_multitap.h **** #include <stdint.h>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 20


  28:delayline_multitap.h **** #include <array>
  29:delayline_multitap.h **** namespace daisysp
  30:delayline_multitap.h **** {
  31:delayline_multitap.h **** /** Mulitap Delay line.
  32:delayline_multitap.h **** 
  33:delayline_multitap.h **** DelayLine<float, SAMPLE_RATE> del;
  34:delayline_multitap.h **** 
  35:delayline_multitap.h **** By: Adam Fulford
  36:delayline_multitap.h **** */
  37:delayline_multitap.h **** template <typename T, size_t max_size>
  38:delayline_multitap.h **** class DelayLineMultiTap
  39:delayline_multitap.h **** {
  40:delayline_multitap.h **** private:
  41:delayline_multitap.h ****     size_t write_ptr_;
  42:delayline_multitap.h ****     std::array<size_t, 16> delay_;    //array to hold delay times for upto 16 read heads.
  43:delayline_multitap.h ****     std::array<float, 16> frac_;
  44:delayline_multitap.h ****     T      line_[max_size];
  45:delayline_multitap.h ****     size_t num_heads_;
  46:delayline_multitap.h **** 
  47:delayline_multitap.h ****   public:
  48:delayline_multitap.h ****     DelayLineMultiTap() 
  49:delayline_multitap.h ****     {
  50:delayline_multitap.h ****        // num_heads_ = 16; //Why can't I do this in the default constructor?! Compiles but does not
  51:delayline_multitap.h ****     }
  52:delayline_multitap.h ****     ~DelayLineMultiTap() {}
 389              		.loc 18 52 5 is_stmt 1 view -0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              		@ link register save eliminated.
 394              		.loc 18 52 27 is_stmt 0 view .LVU46
 395 0000 7047     		bx	lr
 396              		.cfi_endproc
 397              	.LFE4912:
 399              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 400              		.thumb_set _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev,_ZN7daisysp17DelayLineMultiTapIfLj17280
 401 0002 00BF     		.section	.text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev,"axG",%progbits,_ZN7daisysp16DelayLin
 402              		.align	1
 403              		.p2align 2,,3
 404              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu fpv5-d16
 410              	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:
 411              	.LVL13:
 412              	.LFB4915:
 413              		.file 19 "delayline_reverse.h"
   1:delayline_reverse.h **** // Copyright 2021 Adam Fulford
   2:delayline_reverse.h **** // 
   3:delayline_reverse.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_reverse.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_reverse.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_reverse.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_reverse.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_reverse.h **** // furnished to do so, subject to the following conditions:
   9:delayline_reverse.h **** // 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 21


  10:delayline_reverse.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_reverse.h **** // all copies or substantial portions of the Software.
  12:delayline_reverse.h **** // 
  13:delayline_reverse.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_reverse.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_reverse.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_reverse.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_reverse.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_reverse.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_reverse.h **** // THE SOFTWARE.
  20:delayline_reverse.h **** // 
  21:delayline_reverse.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_reverse.h **** 
  23:delayline_reverse.h **** #pragma once
  24:delayline_reverse.h **** #ifndef DSY_DELAY_REVERSE_H
  25:delayline_reverse.h **** #define DSY_DELAY_REVERSE_H
  26:delayline_reverse.h **** #include <stdlib.h>
  27:delayline_reverse.h **** #include <stdint.h>
  28:delayline_reverse.h **** #include <math.h>
  29:delayline_reverse.h **** namespace daisysp
  30:delayline_reverse.h **** {
  31:delayline_reverse.h **** /** Reverse Delay line
  32:delayline_reverse.h **** By: Adam Fulford
  33:delayline_reverse.h **** */
  34:delayline_reverse.h **** template <typename T, size_t max_size>
  35:delayline_reverse.h **** class DelayLineReverse
  36:delayline_reverse.h **** {
  37:delayline_reverse.h ****   public:
  38:delayline_reverse.h ****     DelayLineReverse() {}
  39:delayline_reverse.h ****     ~DelayLineReverse() {}
 414              		.loc 19 39 5 is_stmt 1 view -0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              		@ link register save eliminated.
 419              		.loc 19 39 26 is_stmt 0 view .LVU48
 420 0000 7047     		bx	lr
 421              		.cfi_endproc
 422              	.LFE4915:
 424              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 425              		.thumb_set _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev,_ZN7daisysp16DelayLineReverseIfLj600000EE
 426 0002 00BF     		.section	.text._Z10InitDelaysf,"ax",%progbits
 427              		.align	1
 428              		.p2align 2,,3
 429              		.global	_Z10InitDelaysf
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 433              		.fpu fpv5-d16
 435              	_Z10InitDelaysf:
 436              	.LVL14:
 437              	.LFB4310:
 438              		.file 20 "Veno-Echo.cpp"
   1:Veno-Echo.cpp **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.cpp **** // 
   3:Veno-Echo.cpp **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.cpp **** // of this software and associated documentation files (the "Software"), to deal
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 22


   5:Veno-Echo.cpp **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.cpp **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.cpp **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.cpp **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.cpp **** // 
  10:Veno-Echo.cpp **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.cpp **** // all copies or substantial portions of the Software.
  12:Veno-Echo.cpp **** // 
  13:Veno-Echo.cpp **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.cpp **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.cpp **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.cpp **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.cpp **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.cpp **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.cpp **** // THE SOFTWARE.
  20:Veno-Echo.cpp **** // 
  21:Veno-Echo.cpp **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.cpp **** 
  23:Veno-Echo.cpp **** #include "Veno-Echo.h"
  24:Veno-Echo.cpp **** #include "QSPI_Settings.h"
  25:Veno-Echo.cpp **** #include "daisysp.h"
  26:Veno-Echo.cpp **** #include "delayline_multitap.h" //modified delayline
  27:Veno-Echo.cpp **** #include "delayline_reverse.h"  //reverse delayline
  28:Veno-Echo.cpp **** #include "envFollow.h"
  29:Veno-Echo.cpp **** #include "scale.h"
  30:Veno-Echo.cpp **** #include "constants.h"
  31:Veno-Echo.cpp **** #include "taptempo.h"
  32:Veno-Echo.cpp **** #include "LEDs.h"
  33:Veno-Echo.cpp **** #include "DelayMulti.h"
  34:Veno-Echo.cpp **** #include <math.h>
  35:Veno-Echo.cpp **** #include <string.h>
  36:Veno-Echo.cpp **** #include <atomic>
  37:Veno-Echo.cpp **** 
  38:Veno-Echo.cpp **** using namespace daisysp;
  39:Veno-Echo.cpp **** 
  40:Veno-Echo.cpp **** static Svf LPF_L;
  41:Veno-Echo.cpp **** static Svf LPF_R;
  42:Veno-Echo.cpp **** static Svf HPF_L;
  43:Veno-Echo.cpp **** static Svf HPF_R;
  44:Veno-Echo.cpp **** 
  45:Veno-Echo.cpp **** static Svf LPF_L_post;
  46:Veno-Echo.cpp **** static Svf LPF_R_post;
  47:Veno-Echo.cpp **** static Svf HPF_L_post;
  48:Veno-Echo.cpp **** static Svf HPF_R_post;
  49:Veno-Echo.cpp **** 
  50:Veno-Echo.cpp **** static Oscillator lfo;
  51:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
  52:Veno-Echo.cpp **** 
  53:Veno-Echo.cpp **** static DcBlock DcBlock_LFB, DcBlock_RFB; //DC blocks
  54:Veno-Echo.cpp **** 
  55:Veno-Echo.cpp **** // Declare a DelayLine of MAX_DELAY number of floats.
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsL;
  57:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
  58:Veno-Echo.cpp **** 
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsL_REV; //10 s
  60:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
  61:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 23


  62:Veno-Echo.cpp **** struct DelayRev
  63:Veno-Echo.cpp **** {
  64:Veno-Echo.cpp ****     DelayLineReverse <float, static_cast<size_t>(maxRevDelay*2.5f)>  *del;
  65:Veno-Echo.cpp ****     float currentDelay_;
  66:Veno-Echo.cpp ****     //float delayTarget;
  67:Veno-Echo.cpp **** 
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
  69:Veno-Echo.cpp ****     {
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
  71:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
  72:Veno-Echo.cpp ****         {
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
  75:Veno-Echo.cpp ****             //del -> Reset();
  76:Veno-Echo.cpp ****         }
  77:Veno-Echo.cpp ****     }
  78:Veno-Echo.cpp **** 
  79:Veno-Echo.cpp ****     float Read()
  80:Veno-Echo.cpp ****     {
  81:Veno-Echo.cpp ****         //read from head1
  82:Veno-Echo.cpp ****         float read = del -> ReadRev();
  83:Veno-Echo.cpp ****         return read;
  84:Veno-Echo.cpp ****     }
  85:Veno-Echo.cpp **** 
  86:Veno-Echo.cpp ****     float FwdFbk()
  87:Veno-Echo.cpp ****     {
  88:Veno-Echo.cpp ****         float read = del -> ReadFwd();
  89:Veno-Echo.cpp ****         return read;
  90:Veno-Echo.cpp ****     }
  91:Veno-Echo.cpp **** 
  92:Veno-Echo.cpp ****     void Write(float in)    //sort out feedback in audiocallback
  93:Veno-Echo.cpp ****     {
  94:Veno-Echo.cpp ****         del -> Write(in);
  95:Veno-Echo.cpp ****     }
  96:Veno-Echo.cpp **** };
  97:Veno-Echo.cpp **** 
  98:Veno-Echo.cpp **** DelayMulti delayL,delayR;
  99:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 100:Veno-Echo.cpp **** 
 101:Veno-Echo.cpp **** //LED objects:
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 103:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 104:Veno-Echo.cpp **** 
 105:Veno-Echo.cpp **** 
 106:Veno-Echo.cpp **** float delayTimeL_CV{};
 107:Veno-Echo.cpp **** float delayTimeR_CV{};
 108:Veno-Echo.cpp **** 
 109:Veno-Echo.cpp **** float feedbackL{};
 110:Veno-Echo.cpp **** float feedbackL_CV{};
 111:Veno-Echo.cpp **** 
 112:Veno-Echo.cpp **** float feedbackR{};
 113:Veno-Echo.cpp **** float feedbackR_CV{};
 114:Veno-Echo.cpp **** 
 115:Veno-Echo.cpp **** float crossfeedback{};
 116:Veno-Echo.cpp **** float crossfeedback_CV{};
 117:Veno-Echo.cpp **** 
 118:Veno-Echo.cpp **** float drywet{0.5};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 24


 119:Veno-Echo.cpp **** float drywet_CV{};
 120:Veno-Echo.cpp **** 
 121:Veno-Echo.cpp **** float width{1.0};
 122:Veno-Echo.cpp **** float width_CV{};
 123:Veno-Echo.cpp **** 
 124:Veno-Echo.cpp **** float filterXfade{};
 125:Veno-Echo.cpp **** 
 126:Veno-Echo.cpp **** TempoDivs div_L{};
 127:Veno-Echo.cpp **** TempoDivs div_R{};
 128:Veno-Echo.cpp **** 
 129:Veno-Echo.cpp **** float ModDepth{0.0f};   //100.0 is a lot!
 130:Veno-Echo.cpp **** 
 131:Veno-Echo.cpp **** //float modulation_CV{};
 132:Veno-Echo.cpp **** float modulation_CV_Raw{};
 133:Veno-Echo.cpp **** 
 134:Veno-Echo.cpp **** bool syncMode{false};
 135:Veno-Echo.cpp **** bool shift{false};  //global variable for secondary shift functions
 136:Veno-Echo.cpp **** bool mute{};
 137:Veno-Echo.cpp **** 
 138:Veno-Echo.cpp **** bool ClockInFlag{false};
 139:Veno-Echo.cpp **** 
 140:Veno-Echo.cpp **** bool PostFilters{false};
 141:Veno-Echo.cpp **** 
 142:Veno-Echo.cpp **** std::atomic<bool> save_flag{};
 143:Veno-Echo.cpp **** 
 144:Veno-Echo.cpp **** static Adsr FwdRevLEnv;
 145:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 146:Veno-Echo.cpp **** 
 147:Veno-Echo.cpp **** static Adsr LPF_Env;
 148:Veno-Echo.cpp **** static Adsr HPF_Env;
 149:Veno-Echo.cpp **** 
 150:Veno-Echo.cpp **** static CrossFade FwdRevLXfade;  //crossfades for reverse delay into fwd delay
 151:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 152:Veno-Echo.cpp **** 
 153:Veno-Echo.cpp **** static CrossFade WidthXfade;
 154:Veno-Echo.cpp **** 
 155:Veno-Echo.cpp **** //crossfades for switching in and out of filters
 156:Veno-Echo.cpp **** static CrossFade LPF_LXfade;
 157:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 158:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 159:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 160:Veno-Echo.cpp **** 
 161:Veno-Echo.cpp **** //crossfades for switching in and out of post filters
 162:Veno-Echo.cpp **** static CrossFade LPF_LXfade_post;
 163:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 164:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 165:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 166:Veno-Echo.cpp **** 
 167:Veno-Echo.cpp **** //cross fades for manual filter crossfading
 168:Veno-Echo.cpp **** static CrossFade FilterMix_L;
 169:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 170:Veno-Echo.cpp **** 
 171:Veno-Echo.cpp **** static CrossFade FilterMix_L_post;
 172:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 173:Veno-Echo.cpp **** 
 174:Veno-Echo.cpp **** //Gate inputs
 175:Veno-Echo.cpp **** Switch ReverseGateL;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 25


 176:Veno-Echo.cpp **** Switch ReverseGateR;
 177:Veno-Echo.cpp **** 
 178:Veno-Echo.cpp **** //Switch TapButton;
 179:Veno-Echo.cpp **** Switch Sync;
 180:Veno-Echo.cpp **** Switch ClockIn;
 181:Veno-Echo.cpp **** 
 182:Veno-Echo.cpp **** //Tap tempo
 183:Veno-Echo.cpp **** Taptempo BaseTempo; 
 184:Veno-Echo.cpp **** 
 185:Veno-Echo.cpp **** Settings AltControls;
 186:Veno-Echo.cpp **** 
 187:Veno-Echo.cpp **** //default alt control values
 188:Veno-Echo.cpp **** constexpr Settings defaultAltControls
 189:Veno-Echo.cpp **** {
 190:Veno-Echo.cpp ****     (minRevDelay + maxRevDelay) / 2.0f, //RevLength
 191:Veno-Echo.cpp ****     1.0f,   //tapRatio
 192:Veno-Echo.cpp ****     0.0f,   //ModDepth
 193:Veno-Echo.cpp ****     (maxModRate + minModRate) / 2.0f,   //ModFreq
 194:Veno-Echo.cpp ****     defaultHPCut,   //HP_Cutoff
 195:Veno-Echo.cpp ****     defaultLPCut,   //LP_Cutoff
 196:Veno-Echo.cpp ****     default_Res,     //Filter Resonance
 197:Veno-Echo.cpp ****     0.0f
 198:Veno-Echo.cpp **** };
 199:Veno-Echo.cpp **** 
 200:Veno-Echo.cpp **** void Update_DelayTimeL_CV();
 201:Veno-Echo.cpp **** void Update_DelayTimeL();
 202:Veno-Echo.cpp **** 
 203:Veno-Echo.cpp **** void Update_DelayTimeR_CV();
 204:Veno-Echo.cpp **** void Update_DelayTimeR();
 205:Veno-Echo.cpp **** 
 206:Veno-Echo.cpp **** void Update_feedbackL_CV();
 207:Veno-Echo.cpp **** void Update_feedbackL();
 208:Veno-Echo.cpp **** 
 209:Veno-Echo.cpp **** void Update_feedbackR_CV();
 210:Veno-Echo.cpp **** void Update_feedbackR();
 211:Veno-Echo.cpp **** 
 212:Veno-Echo.cpp **** void Update_drywet_CV();
 213:Veno-Echo.cpp **** void Update_drywet();
 214:Veno-Echo.cpp **** 
 215:Veno-Echo.cpp **** void Update_width_CV();
 216:Veno-Echo.cpp **** void Update_width();
 217:Veno-Echo.cpp **** 
 218:Veno-Echo.cpp **** void Update_crossfeedback();
 219:Veno-Echo.cpp **** void Update_filterXfade();
 220:Veno-Echo.cpp **** 
 221:Veno-Echo.cpp **** void Update_Buttons();
 222:Veno-Echo.cpp **** void Update_BaseTempoLED();
 223:Veno-Echo.cpp **** void Update_Mod();
 224:Veno-Echo.cpp **** void GetModCV();
 225:Veno-Echo.cpp **** float SetTempoDiv(float input, TempoDivs *div);
 226:Veno-Echo.cpp **** void UpdateClock();
 227:Veno-Echo.cpp **** float GetTapRatio(TapRatios ratio);
 228:Veno-Echo.cpp **** void ApplySettings(const Settings &setting);
 229:Veno-Echo.cpp **** void TurnOnAllLEDs();
 230:Veno-Echo.cpp **** void ResetAllLEDs();
 231:Veno-Echo.cpp **** float HardLimit(float input, float limit);
 232:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 26


 233:Veno-Echo.cpp **** bool checkPickupState(float value, float lastvalue, bool lastState, bool ShiftChange);
 234:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
 235:Veno-Echo.cpp **** 
 236:Veno-Echo.cpp **** static void AudioCallback(float *in, float *out, size_t size)
 237:Veno-Echo.cpp **** {
 238:Veno-Echo.cpp **** 
 239:Veno-Echo.cpp **** /*
 240:Veno-Echo.cpp **** static uint32_t funcLength{};
 241:Veno-Echo.cpp **** static uint32_t lastFuncTime{};
 242:Veno-Echo.cpp **** static uint32_t maxFuncLength{};
 243:Veno-Echo.cpp **** static uint32_t minFuncLength{500000000};
 244:Veno-Echo.cpp **** static uint32_t aveFuncLength{};
 245:Veno-Echo.cpp **** 
 246:Veno-Echo.cpp **** */
 247:Veno-Echo.cpp **** 
 248:Veno-Echo.cpp **** static int Counter{};
 249:Veno-Echo.cpp **** 
 250:Veno-Echo.cpp **** /*
 251:Veno-Echo.cpp ****     funcLength = System::GetUs() - lastFuncTime;
 252:Veno-Echo.cpp **** 
 253:Veno-Echo.cpp ****     aveFuncLength = (funcLength + 1023 * aveFuncLength) >> 10;
 254:Veno-Echo.cpp ****     if (funcLength > maxFuncLength)
 255:Veno-Echo.cpp ****     {
 256:Veno-Echo.cpp ****         maxFuncLength = funcLength;
 257:Veno-Echo.cpp ****     }
 258:Veno-Echo.cpp **** 
 259:Veno-Echo.cpp ****     if (funcLength < minFuncLength)
 260:Veno-Echo.cpp ****     {
 261:Veno-Echo.cpp ****         minFuncLength = funcLength;
 262:Veno-Echo.cpp ****     }
 263:Veno-Echo.cpp **** 
 264:Veno-Echo.cpp **** */
 265:Veno-Echo.cpp **** 
 266:Veno-Echo.cpp **** Counter = (Counter + 1) % 15;
 267:Veno-Echo.cpp **** 
 268:Veno-Echo.cpp **** if(!save_flag)  //don't check ADCs if saving!
 269:Veno-Echo.cpp **** {
 270:Veno-Echo.cpp ****     /*
 271:Veno-Echo.cpp ****         //each call generate random dither length between 0 and 14
 272:Veno-Echo.cpp ****         uint16_t randomDither{uint16_t (rand() % 5)};
 273:Veno-Echo.cpp ****         //init timeofCall as current time
 274:Veno-Echo.cpp ****         uint32_t timeofCall{System::GetUs()};
 275:Veno-Echo.cpp **** 
 276:Veno-Echo.cpp ****         //wait for random Dither time
 277:Veno-Echo.cpp ****         while( (System::GetUs() - timeofCall ) < randomDither)
 278:Veno-Echo.cpp ****         {}
 279:Veno-Echo.cpp ****     */
 280:Veno-Echo.cpp **** 
 281:Veno-Echo.cpp ****         switch (Counter)
 282:Veno-Echo.cpp ****         {
 283:Veno-Echo.cpp ****             case 0:
 284:Veno-Echo.cpp ****                 Update_Buttons();
 285:Veno-Echo.cpp ****                 GetModCV();
 286:Veno-Echo.cpp ****             break;
 287:Veno-Echo.cpp **** 
 288:Veno-Echo.cpp ****             case 1:
 289:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 27


 290:Veno-Echo.cpp ****             break;
 291:Veno-Echo.cpp **** 
 292:Veno-Echo.cpp ****             case 2:
 293:Veno-Echo.cpp ****                 Update_DelayTimeL();
 294:Veno-Echo.cpp ****             break;
 295:Veno-Echo.cpp **** 
 296:Veno-Echo.cpp ****             case 3:
 297:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 298:Veno-Echo.cpp ****             break;
 299:Veno-Echo.cpp **** 
 300:Veno-Echo.cpp ****             case 4:
 301:Veno-Echo.cpp ****                 Update_DelayTimeR();
 302:Veno-Echo.cpp ****             break;
 303:Veno-Echo.cpp **** 
 304:Veno-Echo.cpp ****             case 5:
 305:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 306:Veno-Echo.cpp ****             break;
 307:Veno-Echo.cpp **** 
 308:Veno-Echo.cpp ****             case 6:
 309:Veno-Echo.cpp ****                 Update_feedbackL();
 310:Veno-Echo.cpp ****             break;
 311:Veno-Echo.cpp **** 
 312:Veno-Echo.cpp ****             case 7:
 313:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 314:Veno-Echo.cpp ****             break;
 315:Veno-Echo.cpp **** 
 316:Veno-Echo.cpp ****             case 8:
 317:Veno-Echo.cpp ****                 Update_feedbackR();
 318:Veno-Echo.cpp ****             break;
 319:Veno-Echo.cpp **** 
 320:Veno-Echo.cpp ****             case 9:
 321:Veno-Echo.cpp ****                 Update_drywet_CV();
 322:Veno-Echo.cpp ****             break;
 323:Veno-Echo.cpp **** 
 324:Veno-Echo.cpp ****             case 10:
 325:Veno-Echo.cpp ****                 Update_drywet();
 326:Veno-Echo.cpp ****             break;
 327:Veno-Echo.cpp **** 
 328:Veno-Echo.cpp ****             case 11:
 329:Veno-Echo.cpp ****                 Update_width_CV();
 330:Veno-Echo.cpp ****             break;
 331:Veno-Echo.cpp **** 
 332:Veno-Echo.cpp ****             case 12:
 333:Veno-Echo.cpp ****                 Update_width();
 334:Veno-Echo.cpp ****             break;
 335:Veno-Echo.cpp **** 
 336:Veno-Echo.cpp ****             case 13:
 337:Veno-Echo.cpp ****                 Update_crossfeedback();
 338:Veno-Echo.cpp ****             break;
 339:Veno-Echo.cpp **** 
 340:Veno-Echo.cpp ****             case 14:
 341:Veno-Echo.cpp ****                 Update_filterXfade();
 342:Veno-Echo.cpp ****             break;
 343:Veno-Echo.cpp ****         }
 344:Veno-Echo.cpp **** }
 345:Veno-Echo.cpp **** 
 346:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 28


 347:Veno-Echo.cpp ****     {   
 348:Veno-Echo.cpp ****         UpdateClock(); 
 349:Veno-Echo.cpp ****         Update_Mod();
 350:Veno-Echo.cpp **** 
 351:Veno-Echo.cpp ****         //get xfade positions from envelopes:
 352:Veno-Echo.cpp ****         float FwdRevLXFadepos = FwdRevLEnv.Process(Rev_L_sw.getState());
 353:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 354:Veno-Echo.cpp ****         
 355:Veno-Echo.cpp ****         float HPFXFadepos = HPF_Env.Process(HPF_sw.getState());
 356:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 357:Veno-Echo.cpp **** 
 358:Veno-Echo.cpp ****         //set xfade positions      
 359:Veno-Echo.cpp ****         FwdRevLXfade.SetPos(FwdRevLXFadepos);
 360:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 361:Veno-Echo.cpp ****         
 362:Veno-Echo.cpp ****         HPF_LXfade.SetPos(HPFXFadepos);
 363:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 364:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 365:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 366:Veno-Echo.cpp **** 
 367:Veno-Echo.cpp ****         HPF_LXfade_post.SetPos(HPFXFadepos);
 368:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 369:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 370:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 371:Veno-Echo.cpp **** 
 372:Veno-Echo.cpp ****         FilterMix_L.SetPos(filterXfade);
 373:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 374:Veno-Echo.cpp **** 
 375:Veno-Echo.cpp ****         FilterMix_L_post.SetPos(filterXfade);
 376:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 377:Veno-Echo.cpp **** 
 378:Veno-Echo.cpp ****         //filter controls, read from reverse delay lines:
 379:Veno-Echo.cpp ****         float delayRevSignalL = delaysL_REV.Read();
 380:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 381:Veno-Echo.cpp **** 
 382:Veno-Echo.cpp ****         //write input to reverse delay (no feedback)
 383:Veno-Echo.cpp ****         delaysL_REV.Write(in[i]);
 384:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 385:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 386:Veno-Echo.cpp ****         //delaysR_REV.Write(Input_R);
 387:Veno-Echo.cpp **** 
 388:Veno-Echo.cpp ****         //process Xfade between reverse and direct input
 389:Veno-Echo.cpp ****         float FwdRevSignalLXFade = FwdRevLXfade.Process(in[i],delayRevSignalL);
 390:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 391:Veno-Echo.cpp **** 
 392:Veno-Echo.cpp ****         //Get combined output from all delay heads
 393:Veno-Echo.cpp ****         float delaySignal_L{delayL.GetOutput()};   
 394:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 395:Veno-Echo.cpp **** 
 396:Veno-Echo.cpp ****         //Update Base Tempo LED
 397:Veno-Echo.cpp ****         Update_BaseTempoLED();
 398:Veno-Echo.cpp **** 
 399:Veno-Echo.cpp ****         //hard limit
 400:Veno-Echo.cpp ****         delaySignal_L = HardLimit(delaySignal_L,AudioLimit);
 401:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 402:Veno-Echo.cpp **** 
 403:Veno-Echo.cpp **** if(!PostFilters)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 29


 404:Veno-Echo.cpp **** {
 405:Veno-Echo.cpp **** //****************************************************************************************
 406:Veno-Echo.cpp ****         //pre filters
 407:Veno-Echo.cpp ****         //process LPF
 408:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 409:Veno-Echo.cpp ****         LPF_L.Process(delaySignal_L * 0.1f);
 410:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 411:Veno-Echo.cpp **** 
 412:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 413:Veno-Echo.cpp ****         float LPF_L_signal{LPF_L.Low() * 10.0f};
 414:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 415:Veno-Echo.cpp ****         
 416:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 417:Veno-Echo.cpp ****         float filteredDelay_L{LPF_LXfade.Process(delaySignal_L, LPF_L_signal)};
 418:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 419:Veno-Echo.cpp **** 
 420:Veno-Echo.cpp ****         //hard limit
 421:Veno-Echo.cpp ****         filteredDelay_L = HardLimit(filteredDelay_L,AudioLimit);
 422:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 423:Veno-Echo.cpp **** 
 424:Veno-Echo.cpp ****         //process HPF
 425:Veno-Echo.cpp ****         HPF_L.Process(filteredDelay_L * 0.1f);
 426:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 427:Veno-Echo.cpp **** 
 428:Veno-Echo.cpp ****         float HPF_L_signal{HPF_L.High() * 10.0f};
 429:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 430:Veno-Echo.cpp **** 
 431:Veno-Echo.cpp ****         filteredDelay_L = HPF_LXfade.Process(filteredDelay_L, HPF_L_signal);
 432:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 433:Veno-Echo.cpp **** 
 434:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 435:Veno-Echo.cpp **** 
 436:Veno-Echo.cpp ****         delaySignal_L = FilterMix_L.Process(delaySignal_L,filteredDelay_L);
 437:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 438:Veno-Echo.cpp **** 
 439:Veno-Echo.cpp **** //****************************************************************************************
 440:Veno-Echo.cpp **** }
 441:Veno-Echo.cpp **** 
 442:Veno-Echo.cpp **** else
 443:Veno-Echo.cpp **** {
 444:Veno-Echo.cpp ****     /* code */
 445:Veno-Echo.cpp **** }
 446:Veno-Echo.cpp **** 
 447:Veno-Echo.cpp ****         static float LNegFB{};  //static so value can be used for next sample
 448:Veno-Echo.cpp ****         static float RNegFB{};
 449:Veno-Echo.cpp **** 
 450:Veno-Echo.cpp ****         //ensure we never get inverse feedback
 451:Veno-Echo.cpp ****         if(feedbackL < LNegFB) 
 452:Veno-Echo.cpp ****             LNegFB = 0.0f;
 453:Veno-Echo.cpp ****         
 454:Veno-Echo.cpp ****         if(feedbackR < RNegFB)
 455:Veno-Echo.cpp ****             RNegFB = 0.0f;
 456:Veno-Echo.cpp **** 
 457:Veno-Echo.cpp ****         float feedbackSignalL{ (feedbackL - LNegFB) * delaySignal_L };
 458:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 459:Veno-Echo.cpp **** 
 460:Veno-Echo.cpp ****         //crossfeedback:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 30


 461:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 462:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 463:Veno-Echo.cpp **** 
 464:Veno-Echo.cpp **** 
 465:Veno-Echo.cpp ****         //get envelopes for feedback signals
 466:Veno-Echo.cpp ****         float EnvL{LeftEnv.GetEnv(feedbackSignalL)};  
 467:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 468:Veno-Echo.cpp **** 
 469:Veno-Echo.cpp ****             //if envelope of feedback signal exceeds threshold calculate negative FB factor
 470:Veno-Echo.cpp ****             if (EnvL >= NegFBOffset)
 471:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 472:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 473:Veno-Echo.cpp ****             else LNegFB = 0.0;
 474:Veno-Echo.cpp ****             
 475:Veno-Echo.cpp ****             if (EnvR >= NegFBOffset)
 476:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 477:Veno-Echo.cpp ****             else RNegFB = 0.0;
 478:Veno-Echo.cpp **** 
 479:Veno-Echo.cpp ****         //write to fwd delay lines, including a DC block and hard limit
 480:Veno-Echo.cpp ****         float combinedL{feedbackSignalLR + FwdRevSignalLXFade};
 481:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 482:Veno-Echo.cpp ****  
 483:Veno-Echo.cpp ****         //hard limit
 484:Veno-Echo.cpp ****         combinedL = HardLimit(combinedL,AudioLimit);
 485:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 486:Veno-Echo.cpp **** 
 487:Veno-Echo.cpp ****         delayL.Write( DcBlock_LFB.Process(combinedL ) );
 488:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 489:Veno-Echo.cpp **** 
 490:Veno-Echo.cpp ****         // floats for wet dry mix
 491:Veno-Echo.cpp ****         float mixL;
 492:Veno-Echo.cpp ****         float mixR;
 493:Veno-Echo.cpp **** 
 494:Veno-Echo.cpp ****         float delaySignal_L_SUM = WidthXfade.Process(delaySignal_L,delaySignal_R);    //mix to mono
 495:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 496:Veno-Echo.cpp **** 
 497:Veno-Echo.cpp ****         //hard limit
 498:Veno-Echo.cpp ****         delaySignal_L_SUM = HardLimit(delaySignal_L_SUM,AudioLimit);
 499:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 500:Veno-Echo.cpp **** 
 501:Veno-Echo.cpp **** if(PostFilters)
 502:Veno-Echo.cpp **** {
 503:Veno-Echo.cpp ****     //****************************************************************************************
 504:Veno-Echo.cpp ****         //post filters
 505:Veno-Echo.cpp ****         //process LPF
 506:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 507:Veno-Echo.cpp ****         LPF_L_post.Process(delaySignal_L_SUM * 0.1f);
 508:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 509:Veno-Echo.cpp **** 
 510:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 511:Veno-Echo.cpp ****         float LPF_L_signal_post{LPF_L_post.Low() * 10.0f};
 512:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 513:Veno-Echo.cpp ****         
 514:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 515:Veno-Echo.cpp ****         float filteredDelay_L_post{LPF_LXfade_post.Process(delaySignal_L_SUM, LPF_L_signal_post)};
 516:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 517:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 31


 518:Veno-Echo.cpp ****         //hard limit
 519:Veno-Echo.cpp ****         filteredDelay_L_post = HardLimit(filteredDelay_L_post,AudioLimit);
 520:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 521:Veno-Echo.cpp **** 
 522:Veno-Echo.cpp ****         //process HPF
 523:Veno-Echo.cpp ****         HPF_L_post.Process(filteredDelay_L_post * 0.1f);
 524:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 525:Veno-Echo.cpp **** 
 526:Veno-Echo.cpp ****         float HPF_L_signal_post{HPF_L_post.High() * 10.0f};
 527:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 528:Veno-Echo.cpp **** 
 529:Veno-Echo.cpp ****         filteredDelay_L_post = HPF_LXfade_post.Process(filteredDelay_L_post, HPF_L_signal_post);
 530:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 531:Veno-Echo.cpp **** 
 532:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 533:Veno-Echo.cpp ****         delaySignal_L_SUM = FilterMix_L_post.Process(delaySignal_L_SUM,filteredDelay_L_post);
 534:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 535:Veno-Echo.cpp **** 
 536:Veno-Echo.cpp ****     //****************************************************************************************
 537:Veno-Echo.cpp **** }
 538:Veno-Echo.cpp **** else
 539:Veno-Echo.cpp **** {
 540:Veno-Echo.cpp ****     /* code */
 541:Veno-Echo.cpp **** }
 542:Veno-Echo.cpp ****         if(drywet < 0.5f)
 543:Veno-Echo.cpp ****         {
 544:Veno-Echo.cpp ****             mixL = in[i] + (2.0f * drywet * delaySignal_L_SUM);
 545:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 546:Veno-Echo.cpp ****         }
 547:Veno-Echo.cpp ****         else if(drywet > 0.5f)
 548:Veno-Echo.cpp ****         {
 549:Veno-Echo.cpp ****             mixL = ((1 - drywet)* 2.0f * in[i]) + delaySignal_L_SUM;
 550:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 551:Veno-Echo.cpp ****         }
 552:Veno-Echo.cpp ****         else
 553:Veno-Echo.cpp ****         {
 554:Veno-Echo.cpp ****             mixL = in[i] + delaySignal_L_SUM;
 555:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 556:Veno-Echo.cpp ****         }
 557:Veno-Echo.cpp **** 
 558:Veno-Echo.cpp ****         //send mixes to outputs
 559:Veno-Echo.cpp ****         if(mute)
 560:Veno-Echo.cpp ****         {
 561:Veno-Echo.cpp ****             out[i] = 0.0f;
 562:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 563:Veno-Echo.cpp ****         }
 564:Veno-Echo.cpp ****         else
 565:Veno-Echo.cpp ****         {
 566:Veno-Echo.cpp ****             out[i] = mixL;
 567:Veno-Echo.cpp ****             out[i+1] = mixR;
 568:Veno-Echo.cpp ****         }
 569:Veno-Echo.cpp **** 
 570:Veno-Echo.cpp ****         //write to DAC for debug
 571:Veno-Echo.cpp ****        // dsy_dac_write(DSY_DAC_CHN1, static_cast<int>( EnvL * 4095.0f));
 572:Veno-Echo.cpp **** 
 573:Veno-Echo.cpp ****     }
 574:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 32


 575:Veno-Echo.cpp **** }
 576:Veno-Echo.cpp **** 
 577:Veno-Echo.cpp **** void InitDelays(float samplerate)
 578:Veno-Echo.cpp **** {
 439              		.loc 20 578 1 is_stmt 1 view -0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 16
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 579:Veno-Echo.cpp **** 
 580:Veno-Echo.cpp ****     //Init fwd delays
 581:Veno-Echo.cpp ****     delMemsL.Init(2);    //2 heads
 443              		.loc 20 581 5 view .LVU50
 444              	.LBB804:
 445              	.LBI804:
  53:delayline_multitap.h ****     
  54:delayline_multitap.h ****     /** initializes the delay line by clearing the values within, and setting delay head times to 0
  55:delayline_multitap.h ****     */
  56:delayline_multitap.h ****     void Init( size_t num_heads) 
 446              		.loc 18 56 10 view .LVU51
 447              	.LBB805:
 448              	.LBB806:
  57:delayline_multitap.h ****     {
  58:delayline_multitap.h ****         for(size_t i = 0; i < max_size; i++)
 449              		.loc 18 58 29 view .LVU52
 450 0000 5D4B     		ldr	r3, .L36
 451 0002 5E49     		ldr	r1, .L36+4
 452              	.LBE806:
 453              	.LBE805:
 454              	.LBE804:
 578:Veno-Echo.cpp **** 
 455              		.loc 20 578 1 is_stmt 0 view .LVU53
 456 0004 F0B5     		push	{r4, r5, r6, r7, lr}
 457              		.cfi_def_cfa_offset 20
 458              		.cfi_offset 4, -20
 459              		.cfi_offset 5, -16
 460              		.cfi_offset 6, -12
 461              		.cfi_offset 7, -8
 462              		.cfi_offset 14, -4
 463 0006 A3F18405 		sub	r5, r3, #132
 464 000a 85B0     		sub	sp, sp, #20
 465              		.cfi_def_cfa_offset 40
 466 000c 2846     		mov	r0, r5
 467              	.LVL15:
 468              	.L17:
 469              	.LBB811:
 470              	.LBB810:
 471              	.LBB807:
  59:delayline_multitap.h ****         {
  60:delayline_multitap.h ****             line_[i] = T(0);
 472              		.loc 18 60 13 view .LVU54
 473 000e 0022     		movs	r2, #0
 474 0010 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 475              		.loc 18 58 9 is_stmt 1 view .LVU55
  58:delayline_multitap.h ****         {
 476              		.loc 18 58 29 view .LVU56
 477 0014 8B42     		cmp	r3, r1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 33


 478 0016 FAD1     		bne	.L17
 479              	.LBE807:
  61:delayline_multitap.h ****         }
  62:delayline_multitap.h **** 
  63:delayline_multitap.h ****         write_ptr_ = 0;
 480              		.loc 18 63 9 is_stmt 0 view .LVU57
 481 0018 0022     		movs	r2, #0
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 482              		.loc 18 64 9 view .LVU58
 483 001a 594C     		ldr	r4, .L36+8
 484 001c 0226     		movs	r6, #2
 485              	.LBB808:
  65:delayline_multitap.h **** 
  66:delayline_multitap.h ****         for (size_t i{ 0 }; i < num_heads_; ++i)
 486              		.loc 18 66 21 view .LVU59
 487 001e 1346     		mov	r3, r2
 488              	.LBE808:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 489              		.loc 18 63 9 view .LVU60
 490 0020 2A60     		str	r2, [r5]
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 491              		.loc 18 64 9 view .LVU61
 492 0022 2E51     		str	r6, [r5, r4]
 493              	.LVL16:
 494              	.LBB809:
 495              		.loc 18 66 31 is_stmt 1 view .LVU62
 496              	.L18:
  67:delayline_multitap.h ****         {
  68:delayline_multitap.h ****             delay_[i] = 0;  //set all delay heads to 0 (no delay)
 497              		.loc 18 68 13 is_stmt 0 view .LVU63
 498 0024 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 499              		.loc 18 66 9 view .LVU64
 500 0026 0133     		adds	r3, r3, #1
 501              	.LVL17:
  69:delayline_multitap.h ****             frac_[i] = 0;
 502              		.loc 18 69 13 view .LVU65
 503 0028 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 504              		.loc 18 68 13 view .LVU66
 505 002a 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 506              		.loc 18 66 31 view .LVU67
 507 002e 0A68     		ldr	r2, [r1]
 508              		.loc 18 69 13 view .LVU68
 509 0030 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 510              		.loc 18 66 9 is_stmt 1 view .LVU69
 511              	.LVL18:
  66:delayline_multitap.h ****         {
 512              		.loc 18 66 31 view .LVU70
 513 0032 9A42     		cmp	r2, r3
 514 0034 F6D8     		bhi	.L18
 515 0036 534B     		ldr	r3, .L36+12
 516              	.LVL19:
  66:delayline_multitap.h ****         {
 517              		.loc 18 66 31 is_stmt 0 view .LVU71
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 34


 518 0038 5349     		ldr	r1, .L36+16
 519 003a A3F18406 		sub	r6, r3, #132
 520 003e 3046     		mov	r0, r6
 521              	.LVL20:
 522              	.L19:
  66:delayline_multitap.h ****         {
 523              		.loc 18 66 31 view .LVU72
 524              	.LBE809:
 525              	.LBE810:
 526              	.LBE811:
 527              	.LBB812:
 528              	.LBB813:
 529              	.LBB814:
  60:delayline_multitap.h ****         }
 530              		.loc 18 60 13 view .LVU73
 531 0040 0022     		movs	r2, #0
 532 0042 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 533              		.loc 18 58 9 is_stmt 1 view .LVU74
  58:delayline_multitap.h ****         {
 534              		.loc 18 58 29 view .LVU75
 535 0046 8B42     		cmp	r3, r1
 536 0048 FAD1     		bne	.L19
 537              	.LBE814:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 538              		.loc 18 63 9 is_stmt 0 view .LVU76
 539 004a 0022     		movs	r2, #0
  64:delayline_multitap.h **** 
 540              		.loc 18 64 9 view .LVU77
 541 004c 4C4C     		ldr	r4, .L36+8
 542 004e 0227     		movs	r7, #2
 543              	.LBB815:
  66:delayline_multitap.h ****         {
 544              		.loc 18 66 21 view .LVU78
 545 0050 1346     		mov	r3, r2
 546              	.LBE815:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 547              		.loc 18 63 9 view .LVU79
 548 0052 3260     		str	r2, [r6]
  64:delayline_multitap.h **** 
 549              		.loc 18 64 9 view .LVU80
 550 0054 3751     		str	r7, [r6, r4]
 551              	.LVL21:
 552              	.LBB816:
  66:delayline_multitap.h ****         {
 553              		.loc 18 66 31 is_stmt 1 view .LVU81
 554              	.L20:
  68:delayline_multitap.h ****             frac_[i] = 0;
 555              		.loc 18 68 13 is_stmt 0 view .LVU82
 556 0056 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 557              		.loc 18 66 9 view .LVU83
 558 0058 0133     		adds	r3, r3, #1
 559              	.LVL22:
 560              		.loc 18 69 13 view .LVU84
 561 005a 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 35


 562              		.loc 18 68 13 view .LVU85
 563 005c 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 564              		.loc 18 66 31 view .LVU86
 565 0060 0A68     		ldr	r2, [r1]
 566              		.loc 18 69 13 view .LVU87
 567 0062 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 568              		.loc 18 66 9 is_stmt 1 view .LVU88
 569              	.LVL23:
  66:delayline_multitap.h ****         {
 570              		.loc 18 66 31 view .LVU89
 571 0064 9A42     		cmp	r2, r3
 572 0066 F6D8     		bhi	.L20
 573              	.LVL24:
  66:delayline_multitap.h ****         {
 574              		.loc 18 66 31 is_stmt 0 view .LVU90
 575              	.LBE816:
 576              	.LBE813:
 577              	.LBE812:
 582:Veno-Echo.cpp ****     delMemsR.Init(2);    //2 heads
 583:Veno-Echo.cpp **** 
 584:Veno-Echo.cpp ****     //point del classes at SDRAM buffers
 585:Veno-Echo.cpp ****     delayL.del = &delMemsL; 
 578              		.loc 20 585 5 is_stmt 1 view .LVU91
 586:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 579              		.loc 20 586 16 is_stmt 0 view .LVU92
 580 0068 484C     		ldr	r4, .L36+20
 587:Veno-Echo.cpp **** 
 588:Veno-Echo.cpp ****     delayL.init(hw.GetPin(8),samplerate);
 581              		.loc 20 588 16 view .LVU93
 582 006a 0820     		movs	r0, #8
 585:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 583              		.loc 20 585 16 view .LVU94
 584 006c 484F     		ldr	r7, .L36+24
 585 006e 8DED010A 		vstr.32	s0, [sp, #4]	@ int
 586 0072 3D60     		str	r5, [r7]
 586:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 587              		.loc 20 586 5 is_stmt 1 view .LVU95
 588              	.LBB817:
 589              	.LBB818:
 590              	.LBB819:
  40:delayline_reverse.h ****     /** initializes the delay line by clearing the values within, and setting delay to min time.
  41:delayline_reverse.h ****     */
  42:delayline_reverse.h ****     void Init() 
  43:delayline_reverse.h ****     { 
  44:delayline_reverse.h ****         Reset(); 
  45:delayline_reverse.h ****     }
  46:delayline_reverse.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
  47:delayline_reverse.h ****     */
  48:delayline_reverse.h ****     void Reset()
  49:delayline_reverse.h ****     {
  50:delayline_reverse.h **** 
  51:delayline_reverse.h ****         delay1_  = 25000; //min Reverse delay time
 591              		.loc 19 51 9 is_stmt 0 view .LVU96
 592 0074 46F2A815 		movw	r5, #25000
 593              	.LBE819:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 36


 594              	.LBE818:
 595              	.LBE817:
 586:Veno-Echo.cpp **** 
 596              		.loc 20 586 16 view .LVU97
 597 0078 2660     		str	r6, [r4]
 598              		.loc 20 588 5 is_stmt 1 view .LVU98
 599              		.loc 20 588 16 is_stmt 0 view .LVU99
 600 007a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 601              	.LVL25:
 602              		.loc 20 588 16 view .LVU100
 603 007e 0346     		mov	r3, r0	@ movhi
 604 0080 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 605 0084 3846     		mov	r0, r7
 606 0086 ADF80830 		strh	r3, [sp, #8]	@ movhi
 607 008a 0299     		ldr	r1, [sp, #8]
 608 008c FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 609              	.LVL26:
 589:Veno-Echo.cpp ****     delayR.init(hw.GetPin(9),samplerate);
 610              		.loc 20 589 5 is_stmt 1 view .LVU101
 611              		.loc 20 589 16 is_stmt 0 view .LVU102
 612 0090 0920     		movs	r0, #9
 613 0092 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 614              	.LVL27:
 615 0096 0346     		mov	r3, r0	@ movhi
 616 0098 2046     		mov	r0, r4
 617              	.LBB831:
 618              	.LBB826:
 619              	.LBB821:
 620              		.loc 19 51 9 view .LVU103
 621 009a 3E4C     		ldr	r4, .L36+28
 622              	.LBE821:
 623              	.LBE826:
 624              	.LBE831:
 625              		.loc 20 589 16 view .LVU104
 626 009c ADF80C30 		strh	r3, [sp, #12]	@ movhi
 627 00a0 0399     		ldr	r1, [sp, #12]
 628 00a2 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 629 00a6 FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 630              	.LVL28:
 590:Veno-Echo.cpp **** 
 591:Veno-Echo.cpp ****     //delayL.SetDelayTime(500.0f);
 592:Veno-Echo.cpp ****     //delayR.SetDelayTime(500.0f);
 593:Veno-Echo.cpp **** 
 594:Veno-Echo.cpp ****     //Init rev delays
 595:Veno-Echo.cpp ****     delMemsL_REV.Init();
 631              		.loc 20 595 5 is_stmt 1 view .LVU105
 632              	.LBB832:
 633              	.LBI817:
  42:delayline_reverse.h ****     { 
 634              		.loc 19 42 10 view .LVU106
 635              	.LBB827:
 636              	.LBI818:
  48:delayline_reverse.h ****     {
 637              		.loc 19 48 10 view .LVU107
 638              	.LBB822:
  52:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 639              		.loc 19 52 9 is_stmt 0 view .LVU108
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 37


 640 00aa 3B4A     		ldr	r2, .L36+32
 641 00ac 45F6C050 		movw	r0, #24000
 642 00b0 04F11803 		add	r3, r4, #24
 643 00b4 3949     		ldr	r1, .L36+36
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 644              		.loc 19 51 9 view .LVU109
 645 00b6 2561     		str	r5, [r4, #16]
 646              		.loc 19 52 9 view .LVU110
 647 00b8 A050     		str	r0, [r4, r2]
 648              	.LVL29:
 649              	.LBB820:
  53:delayline_reverse.h ****         
  54:delayline_reverse.h ****         for(size_t i = 0; i < max_size; i++)
 650              		.loc 19 54 29 is_stmt 1 view .LVU111
 651              	.L21:
  55:delayline_reverse.h ****         {
  56:delayline_reverse.h ****             line_[i] = T(0);
 652              		.loc 19 56 13 is_stmt 0 view .LVU112
 653 00ba 0022     		movs	r2, #0
 654 00bc 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 655              		.loc 19 54 9 is_stmt 1 view .LVU113
  54:delayline_reverse.h ****         {
 656              		.loc 19 54 29 view .LVU114
 657 00c0 8B42     		cmp	r3, r1
 658 00c2 FAD1     		bne	.L21
 659              	.LBE820:
 660              	.LBE822:
 661              	.LBE827:
 662              	.LBE832:
 663              	.LBB833:
 664              	.LBB834:
 665              	.LBB835:
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 666              		.loc 19 51 9 is_stmt 0 view .LVU115
 667 00c4 3648     		ldr	r0, .L36+40
 668 00c6 46F2A811 		movw	r1, #25000
  52:delayline_reverse.h ****         
 669              		.loc 19 52 9 view .LVU116
 670 00ca 334D     		ldr	r5, .L36+32
 671 00cc 45F6C056 		movw	r6, #24000
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 672              		.loc 19 51 9 view .LVU117
 673 00d0 0161     		str	r1, [r0, #16]
 674              	.LBE835:
 675              	.LBE834:
 676              	.LBE833:
 677              	.LBB858:
 678              	.LBB828:
 679              	.LBB823:
  57:delayline_reverse.h ****         }
  58:delayline_reverse.h ****         write_ptr_ = 0;
 680              		.loc 19 58 9 view .LVU118
 681 00d2 0021     		movs	r1, #0
 682              	.LBE823:
 683              	.LBE828:
 684              	.LBE858:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 38


 685              	.LBB859:
 686              	.LBB848:
 687              	.LBB838:
  52:delayline_reverse.h ****         
 688              		.loc 19 52 9 view .LVU119
 689 00d4 4651     		str	r6, [r0, r5]
 690              	.LBE838:
 691              	.LBE848:
 692              	.LBE859:
 693              	.LBB860:
 694              	.LBB829:
 695              	.LBB824:
  59:delayline_reverse.h ****         read_ptr1_ = 0;
  60:delayline_reverse.h ****         read_ptr2_ = 0;
  61:delayline_reverse.h ****         headDiff_ = 0;
  62:delayline_reverse.h ****         playinghead_ = false;
 696              		.loc 19 62 9 view .LVU120
 697 00d6 0435     		adds	r5, r5, #4
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
  64:delayline_reverse.h ****         fading_ = false;
 698              		.loc 19 64 9 view .LVU121
 699 00d8 324E     		ldr	r6, .L36+44
 700 00da 00F11803 		add	r3, r0, #24
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 701              		.loc 19 62 9 view .LVU122
 702 00de 6155     		strb	r1, [r4, r5]
  60:delayline_reverse.h ****         headDiff_ = 0;
 703              		.loc 19 60 9 view .LVU123
 704 00e0 E160     		str	r1, [r4, #12]
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
 705              		.loc 19 63 9 view .LVU124
 706 00e2 314D     		ldr	r5, .L36+48
  61:delayline_reverse.h ****         playinghead_ = false;
 707              		.loc 19 61 9 view .LVU125
 708 00e4 6161     		str	r1, [r4, #20]
 709              		.loc 19 64 9 view .LVU126
 710 00e6 A155     		strb	r1, [r4, r6]
 711              	.LVL30:
 712              		.loc 19 64 9 view .LVU127
 713              	.LBE824:
 714              	.LBE829:
 715              	.LBE860:
 596:Veno-Echo.cpp ****     delMemsR_REV.Init();
 716              		.loc 20 596 5 is_stmt 1 view .LVU128
 717              	.LBB861:
 718              	.LBI833:
  42:delayline_reverse.h ****     { 
 719              		.loc 19 42 10 view .LVU129
 720              	.LBB849:
 721              	.LBI834:
  48:delayline_reverse.h ****     {
 722              		.loc 19 48 10 view .LVU130
 723              	.LBB839:
 724              	.LBB836:
  54:delayline_reverse.h ****         {
 725              		.loc 19 54 29 view .LVU131
 726              	.LBE836:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 39


 727              	.LBE839:
 728              	.LBE849:
 729              	.LBE861:
 730              	.LBB862:
 731              	.LBB830:
 732              	.LBB825:
  63:delayline_reverse.h ****         fading_ = false;
 733              		.loc 19 63 9 is_stmt 0 view .LVU132
 734 00e8 2A60     		str	r2, [r5]	@ float
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 735              		.loc 19 59 9 view .LVU133
 736 00ea C4E90111 		strd	r1, r1, [r4, #4]
 737 00ee 2F49     		ldr	r1, .L36+52
 738              	.LVL31:
 739              	.L22:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 740              		.loc 19 59 9 view .LVU134
 741              	.LBE825:
 742              	.LBE830:
 743              	.LBE862:
 744              	.LBB863:
 745              	.LBB850:
 746              	.LBB840:
 747              	.LBB837:
  56:delayline_reverse.h ****         }
 748              		.loc 19 56 13 view .LVU135
 749 00f0 0022     		movs	r2, #0
 750 00f2 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 751              		.loc 19 54 9 is_stmt 1 view .LVU136
  54:delayline_reverse.h ****         {
 752              		.loc 19 54 29 view .LVU137
 753 00f6 8B42     		cmp	r3, r1
 754 00f8 FAD1     		bne	.L22
 755              	.LBE837:
 756              	.LBE840:
 757              	.LBE850:
 758              	.LBE863:
 597:Veno-Echo.cpp **** 
 598:Veno-Echo.cpp ****     //point struct at SDRAM buffers
 599:Veno-Echo.cpp ****     delaysL_REV.del = &delMemsL_REV; 
 759              		.loc 20 599 21 is_stmt 0 view .LVU138
 760 00fa 2D49     		ldr	r1, .L36+56
 761              	.LBB864:
 762              	.LBB851:
 763              	.LBB841:
  58:delayline_reverse.h ****         read_ptr1_ = 0;
 764              		.loc 19 58 9 view .LVU139
 765 00fc 0023     		movs	r3, #0
 766              	.LBE841:
 767              	.LBE851:
 768              	.LBE864:
 769              	.LBB865:
 770              	.LBB866:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 771              		.loc 20 70 15 view .LVU140
 772 00fe DFED2D6A 		vldr.32	s13, .L36+60
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 40


  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 773              		.loc 20 70 28 view .LVU141
 774 0102 D1ED017A 		vldr.32	s15, [r1, #4]
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 775              		.loc 20 70 53 view .LVU142
 776 0106 9FED2C6A 		vldr.32	s12, .L36+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 777              		.loc 20 70 15 view .LVU143
 778 010a 36EEE77A 		vsub.f32	s14, s13, s15
 779              	.LBE866:
 780              	.LBE865:
 781              	.LBB880:
 782              	.LBB852:
 783              	.LBB842:
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 784              		.loc 19 62 9 view .LVU144
 785 010e 2B4D     		ldr	r5, .L36+68
 786              	.LBE842:
 787              	.LBE852:
 788              	.LBE880:
 789              	.LBB881:
 790              	.LBB875:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 791              		.loc 20 70 53 view .LVU145
 792 0110 67EE867A 		vmul.f32	s15, s15, s12
 793              	.LBE875:
 794              	.LBE881:
 795              	.LBB882:
 796              	.LBB853:
 797              	.LBB843:
 798              		.loc 19 64 9 view .LVU146
 799 0114 234E     		ldr	r6, .L36+44
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 800              		.loc 19 62 9 view .LVU147
 801 0116 4355     		strb	r3, [r0, r5]
 802              	.LBE843:
 803              	.LBE853:
 804              	.LBE882:
 805              	.LBB883:
 806              	.LBB876:
 807              	.LBB867:
 808              	.LBB868:
 809              		.file 21 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Copyright (C) 2016-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // GNU General Public License for more details.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 41


  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** /** @file include/bits/std_abs.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include_next <stdlib.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** # include_next <math.h>
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef abs
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** extern "C++"
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   using ::abs;
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long long
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(double __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 42


  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabs(__x); }
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(float __x)
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 810              		.loc 21 76 31 view .LVU148
 811 0118 B0EEC77A 		vabs.f32	s14, s14
 812              	.LBE868:
 813              	.LBE867:
 814              	.LBE876:
 815              	.LBE883:
 816              	.LBB884:
 817              	.LBB854:
 818              	.LBB844:
  63:delayline_reverse.h ****         fading_ = false;
 819              		.loc 19 63 9 view .LVU149
 820 011c 284D     		ldr	r5, .L36+72
  60:delayline_reverse.h ****         headDiff_ = 0;
 821              		.loc 19 60 9 view .LVU150
 822 011e C360     		str	r3, [r0, #12]
  61:delayline_reverse.h ****         playinghead_ = false;
 823              		.loc 19 61 9 view .LVU151
 824 0120 4361     		str	r3, [r0, #20]
 825              	.LBE844:
 826              	.LBE854:
 827              	.LBE884:
 828              	.LBB885:
 829              	.LBB877:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 830              		.loc 20 70 9 view .LVU152
 831 0122 B4EEE77A 		vcmpe.f32	s14, s15
 832              	.LBE877:
 833              	.LBE885:
 834              	.LBB886:
 835              	.LBB855:
 836              	.LBB845:
 837              		.loc 19 64 9 view .LVU153
 838 0126 8355     		strb	r3, [r0, r6]
 839              	.LVL32:
 840              		.loc 19 64 9 view .LVU154
 841              	.LBE845:
 842              	.LBE855:
 843              	.LBE886:
 844              		.loc 20 599 5 is_stmt 1 view .LVU155
 600:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 845              		.loc 20 600 5 view .LVU156
 599:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 846              		.loc 20 599 21 is_stmt 0 view .LVU157
 847 0128 0C60     		str	r4, [r1]
 848              	.LBB887:
 849              	.LBB856:
 850              	.LBB846:
  63:delayline_reverse.h ****         fading_ = false;
 851              		.loc 19 63 9 view .LVU158
 852 012a 2A60     		str	r2, [r5]	@ float
 853              	.LBE846:
 854              	.LBE856:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 43


 855              	.LBE887:
 856              	.LBB888:
 857              	.LBB878:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 858              		.loc 20 70 9 view .LVU159
 859 012c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 860              	.LBE878:
 861              	.LBE888:
 862              	.LBB889:
 863              	.LBB857:
 864              	.LBB847:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 865              		.loc 19 59 9 view .LVU160
 866 0130 C0E90133 		strd	r3, r3, [r0, #4]
 867              	.LBE847:
 868              	.LBE857:
 869              	.LBE889:
 870              		.loc 20 600 21 view .LVU161
 871 0134 234B     		ldr	r3, .L36+76
 872 0136 1860     		str	r0, [r3]
 601:Veno-Echo.cpp **** 
 602:Veno-Echo.cpp ****     //Reverse Delay Length. Setup as static value for now. Will make this a shift function
 603:Veno-Echo.cpp ****     delaysL_REV.SetDelayTime(maxRevDelay / 3.f);
 873              		.loc 20 603 5 is_stmt 1 view .LVU162
 874              	.LVL33:
 875              	.LBB890:
 876              	.LBI865:
  68:Veno-Echo.cpp ****     {
 877              		.loc 20 68 10 view .LVU163
 878              	.LBB879:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 879              		.loc 20 70 9 view .LVU164
 880              	.LBB870:
 881              	.LBI867:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 882              		.loc 21 75 3 view .LVU165
 883              	.LBB869:
 884              		.loc 21 76 5 view .LVU166
 885              		.loc 21 76 5 is_stmt 0 view .LVU167
 886              	.LBE869:
 887              	.LBE870:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 888              		.loc 20 70 9 view .LVU168
 889 0138 04DD     		ble	.L23
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 890              		.loc 20 73 13 is_stmt 1 view .LVU169
 891              	.LBB871:
 892              	.LBB872:
  65:delayline_reverse.h ****     }
  66:delayline_reverse.h **** 
  67:delayline_reverse.h ****     /** sets the delay time in samples
  68:delayline_reverse.h ****     */
  69:delayline_reverse.h ****     inline void SetDelay1(size_t delay)
  70:delayline_reverse.h ****     {
  71:delayline_reverse.h ****         frac1_  = 0.0f;
  72:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 893              		.loc 19 72 9 is_stmt 0 view .LVU170
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 44


 894 013a 234D     		ldr	r5, .L36+80
 895              	.LBE872:
 896              	.LBE871:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 897              		.loc 20 73 27 view .LVU171
 898 013c C1ED016A 		vstr.32	s13, [r1, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 899              		.loc 20 74 13 is_stmt 1 view .LVU172
 900              	.LVL34:
 901              	.LBB874:
 902              	.LBI871:
  69:delayline_reverse.h ****     {
 903              		.loc 19 69 17 view .LVU173
 904              	.LBB873:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 905              		.loc 19 71 9 is_stmt 0 view .LVU174
 906 0140 2260     		str	r2, [r4]	@ float
 907              		.loc 19 72 9 view .LVU175
 908 0142 2561     		str	r5, [r4, #16]
 909              	.LVL35:
 910              	.L23:
 911              		.loc 19 72 9 view .LVU176
 912              	.LBE873:
 913              	.LBE874:
 914              	.LBE879:
 915              	.LBE890:
 604:Veno-Echo.cpp ****     delaysR_REV.SetDelayTime(maxRevDelay / 3.f);   //default maxRevDelay / 3.0f
 916              		.loc 20 604 5 is_stmt 1 view .LVU177
 917              	.LBB891:
 918              	.LBI891:
  68:Veno-Echo.cpp ****     {
 919              		.loc 20 68 10 view .LVU178
 920              	.LBB892:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 921              		.loc 20 70 9 view .LVU179
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 922              		.loc 20 70 28 is_stmt 0 view .LVU180
 923 0144 D3ED017A 		vldr.32	s15, [r3, #4]
 924              	.LVL36:
 925              	.LBB893:
 926              	.LBI893:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 927              		.loc 21 75 3 is_stmt 1 view .LVU181
 928              	.LBB894:
 929              		.loc 21 76 5 view .LVU182
 930              		.loc 21 76 5 is_stmt 0 view .LVU183
 931              	.LBE894:
 932              	.LBE893:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 933              		.loc 20 70 15 view .LVU184
 934 0148 DFED1A6A 		vldr.32	s13, .L36+60
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 935              		.loc 20 70 53 view .LVU185
 936 014c 9FED1A6A 		vldr.32	s12, .L36+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 937              		.loc 20 70 15 view .LVU186
 938 0150 36EEE77A 		vsub.f32	s14, s13, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 45


  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 939              		.loc 20 70 53 view .LVU187
 940 0154 67EE867A 		vmul.f32	s15, s15, s12
 941              	.LBB896:
 942              	.LBB895:
 943              		.loc 21 76 31 view .LVU188
 944 0158 B0EEC77A 		vabs.f32	s14, s14
 945              	.LBE895:
 946              	.LBE896:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 947              		.loc 20 70 9 view .LVU189
 948 015c B4EEE77A 		vcmpe.f32	s14, s15
 949 0160 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 950 0164 05DD     		ble	.L16
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 951              		.loc 20 73 13 is_stmt 1 view .LVU190
 952              	.LBB897:
 953              	.LBB898:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 954              		.loc 19 71 9 is_stmt 0 view .LVU191
 955 0166 0021     		movs	r1, #0
 956              		.loc 19 72 9 view .LVU192
 957 0168 174A     		ldr	r2, .L36+80
 958              	.LBE898:
 959              	.LBE897:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 960              		.loc 20 73 27 view .LVU193
 961 016a C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 962              		.loc 20 74 13 is_stmt 1 view .LVU194
 963              	.LVL37:
 964              	.LBB900:
 965              	.LBI897:
  69:delayline_reverse.h ****     {
 966              		.loc 19 69 17 view .LVU195
 967              	.LBB899:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 968              		.loc 19 71 9 is_stmt 0 view .LVU196
 969 016e 0160     		str	r1, [r0]	@ float
 970              		.loc 19 72 9 view .LVU197
 971 0170 0261     		str	r2, [r0, #16]
 972              	.LVL38:
 973              	.L16:
 974              		.loc 19 72 9 view .LVU198
 975              	.LBE899:
 976              	.LBE900:
 977              	.LBE892:
 978              	.LBE891:
 605:Veno-Echo.cpp **** 
 606:Veno-Echo.cpp **** }
 979              		.loc 20 606 1 view .LVU199
 980 0172 05B0     		add	sp, sp, #20
 981              		.cfi_def_cfa_offset 20
 982              		@ sp needed
 983 0174 F0BD     		pop	{r4, r5, r6, r7, pc}
 984              	.L37:
 985 0176 00BF     		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 46


 986              	.L36:
 987 0178 84000000 		.word	delMemsL+132
 988 017c 84786900 		.word	delMemsL+6912132
 989 0180 84786900 		.word	6912132
 990 0184 84000000 		.word	delMemsR+132
 991 0188 84786900 		.word	delMemsR+6912132
 992 018c 00000000 		.word	.LANCHOR1
 993 0190 00000000 		.word	.LANCHOR0
 994 0194 00000000 		.word	delMemsL_REV
 995 0198 189F2400 		.word	2400024
 996 019c 189F2400 		.word	delMemsL_REV+2400024
 997 01a0 00000000 		.word	delMemsR_REV
 998 01a4 249F2400 		.word	2400036
 999 01a8 209F2400 		.word	delMemsL_REV+2400032
 1000 01ac 189F2400 		.word	delMemsR_REV+2400024
 1001 01b0 00000000 		.word	.LANCHOR2
 1002 01b4 00409C47 		.word	1201422336
 1003 01b8 0AD7A33B 		.word	1000593162
 1004 01bc 1C9F2400 		.word	2400028
 1005 01c0 209F2400 		.word	delMemsR_REV+2400032
 1006 01c4 00000000 		.word	.LANCHOR3
 1007 01c8 80380100 		.word	80000
 1008              		.cfi_endproc
 1009              	.LFE4310:
 1011              		.section	.text._Z20Update_DelayTimeL_CVv,"ax",%progbits
 1012              		.align	1
 1013              		.p2align 2,,3
 1014              		.global	_Z20Update_DelayTimeL_CVv
 1015              		.syntax unified
 1016              		.thumb
 1017              		.thumb_func
 1018              		.fpu fpv5-d16
 1020              	_Z20Update_DelayTimeL_CVv:
 1021              	.LFB4312:
 607:Veno-Echo.cpp **** 
 608:Veno-Echo.cpp **** int main(void)
 609:Veno-Echo.cpp **** {
 610:Veno-Echo.cpp ****     // initialize hardware.
 611:Veno-Echo.cpp ****     hw.Configure();
 612:Veno-Echo.cpp ****     hw.Init();
 613:Veno-Echo.cpp ****     
 614:Veno-Echo.cpp ****     //Buttons or switches with status LEDs
 615:Veno-Echo.cpp **** 
 616:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / 12.f);    
 617:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 618:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 619:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 620:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 621:Veno-Echo.cpp **** 
 622:Veno-Echo.cpp ****     //Gates
 623:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 624:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 625:Veno-Echo.cpp **** 
 626:Veno-Echo.cpp ****     //TapButton.Init(hw.GetPin(4), hw.AudioSampleRate() / 48.f);
 627:Veno-Echo.cpp ****     Sync.Init(hw.GetPin(23), hw.AudioSampleRate() / 48.f);
 628:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 629:Veno-Echo.cpp ****     
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 47


 630:Veno-Echo.cpp ****     FwdRevLEnv.Init(hw.AudioSampleRate());
 631:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 632:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 633:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 634:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 635:Veno-Echo.cpp **** 
 636:Veno-Echo.cpp ****     FwdRevREnv.Init(hw.AudioSampleRate());
 637:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 638:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 639:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 640:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 641:Veno-Echo.cpp **** 
 642:Veno-Echo.cpp ****     LPF_Env.Init(hw.AudioSampleRate());
 643:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 644:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 645:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 646:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 647:Veno-Echo.cpp **** 
 648:Veno-Echo.cpp ****     HPF_Env.Init(hw.AudioSampleRate());
 649:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 650:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 651:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 652:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 653:Veno-Echo.cpp **** 
 654:Veno-Echo.cpp ****     // set params for CrossFade objects
 655:Veno-Echo.cpp ****     FwdRevLXfade.Init();
 656:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 657:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 658:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 659:Veno-Echo.cpp **** 
 660:Veno-Echo.cpp ****     WidthXfade.Init();
 661:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 662:Veno-Echo.cpp **** 
 663:Veno-Echo.cpp ****     InitDelays(hw.AudioSampleRate());
 664:Veno-Echo.cpp **** 
 665:Veno-Echo.cpp ****     //setup L and R Low Pass filters
 666:Veno-Echo.cpp ****     LPF_L.Init(hw.AudioSampleRate());
 667:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 668:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 669:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 670:Veno-Echo.cpp **** 
 671:Veno-Echo.cpp ****     LPF_R.Init(hw.AudioSampleRate());
 672:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 673:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 674:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 675:Veno-Echo.cpp **** 
 676:Veno-Echo.cpp ****     //setup L and R High Pass filters
 677:Veno-Echo.cpp ****     HPF_L.Init(hw.AudioSampleRate());
 678:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 679:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 680:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 681:Veno-Echo.cpp **** 
 682:Veno-Echo.cpp ****     HPF_R.Init(hw.AudioSampleRate());
 683:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 684:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 685:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 686:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 48


 687:Veno-Echo.cpp ****     //post filters
 688:Veno-Echo.cpp ****     LPF_L_post.Init(hw.AudioSampleRate());
 689:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 690:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 691:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 692:Veno-Echo.cpp **** 
 693:Veno-Echo.cpp ****     LPF_R_post.Init(hw.AudioSampleRate());
 694:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 695:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 696:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 697:Veno-Echo.cpp **** 
 698:Veno-Echo.cpp ****     //setup L and R High Pass filters
 699:Veno-Echo.cpp ****     HPF_L_post.Init(hw.AudioSampleRate());
 700:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 701:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 702:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 703:Veno-Echo.cpp **** 
 704:Veno-Echo.cpp ****     HPF_R_post.Init(hw.AudioSampleRate());
 705:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 706:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 707:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 708:Veno-Echo.cpp **** 
 709:Veno-Echo.cpp ****     DcBlock_LFB.Init(hw.AudioSampleRate());
 710:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 711:Veno-Echo.cpp **** 
 712:Veno-Echo.cpp ****     //LFO for modulation of fwd delay time
 713:Veno-Echo.cpp ****     lfo.Init(hw.AudioSampleRate());
 714:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 715:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 716:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 717:Veno-Echo.cpp **** 
 718:Veno-Echo.cpp ****     BaseTempo.init(80,6000,1.25f);  //max 6 second tap
 719:Veno-Echo.cpp **** 
 720:Veno-Echo.cpp ****     //setup tempo indicators
 721:Veno-Echo.cpp ****     //tempoLED_BASE.init(hw.GetPin(14),hw.AudioSampleRate());
 722:Veno-Echo.cpp ****     tempoLED_BASE.init(hw.GetPin(24),hw.AudioSampleRate());
 723:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 724:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 725:Veno-Echo.cpp **** 
 726:Veno-Echo.cpp ****     //load settings from flash
 727:Veno-Echo.cpp **** 
 728:Veno-Echo.cpp ****     //Settings SavedSettings{LoadSettings()};
 729:Veno-Echo.cpp ****     ApplySettings(defaultAltControls);
 730:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 731:Veno-Echo.cpp **** 
 732:Veno-Echo.cpp ****     //initialize DAC
 733:Veno-Echo.cpp **** 
 734:Veno-Echo.cpp ****    //ADC
 735:Veno-Echo.cpp ****     AdcChannelConfig adcConfig[8];
 736:Veno-Echo.cpp **** 
 737:Veno-Echo.cpp ****     adcConfig[0].InitSingle(hw.GetPin(15));
 738:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 739:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 740:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 741:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 742:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 743:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 49


 744:Veno-Echo.cpp ****     adcConfig[6].InitSingle(hw.GetPin(22));
 745:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 746:Veno-Echo.cpp **** 
 747:Veno-Echo.cpp **** 
 748:Veno-Echo.cpp ****     hw.adc.Init(adcConfig, 8,daisy::AdcHandle::OVS_128);
 749:Veno-Echo.cpp ****     hw.adc.Start();
 750:Veno-Echo.cpp **** 
 751:Veno-Echo.cpp **** 
 752:Veno-Echo.cpp ****     hw.SetAudioBlockSize(1);     //set blocksize.
 753:Veno-Echo.cpp ****     // start audio callback
 754:Veno-Echo.cpp ****     hw.StartAudio(AudioCallback);
 755:Veno-Echo.cpp **** 
 756:Veno-Echo.cpp ****     
 757:Veno-Echo.cpp **** 
 758:Veno-Echo.cpp ****      for(;;)
 759:Veno-Echo.cpp ****      {
 760:Veno-Echo.cpp **** 
 761:Veno-Echo.cpp **** /*
 762:Veno-Echo.cpp ****         if(save_flag)
 763:Veno-Echo.cpp ****         {
 764:Veno-Echo.cpp **** 
 765:Veno-Echo.cpp ****             if (SaveSettings(AltControls) == DSY_MEMORY_OK)
 766:Veno-Echo.cpp ****             {
 767:Veno-Echo.cpp ****                 //reset flag
 768:Veno-Echo.cpp ****                 //System::Delay(1000);
 769:Veno-Echo.cpp ****                 save_flag = false;
 770:Veno-Echo.cpp ****             }
 771:Veno-Echo.cpp ****         }
 772:Veno-Echo.cpp **** 
 773:Veno-Echo.cpp **** */
 774:Veno-Echo.cpp ****      }
 775:Veno-Echo.cpp **** 
 776:Veno-Echo.cpp **** }
 777:Veno-Echo.cpp **** 
 778:Veno-Echo.cpp **** void Update_DelayTimeL_CV()
 779:Veno-Echo.cpp **** {
 1022              		.loc 20 779 1 is_stmt 1 view -0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 0
 1025              		@ frame_needed = 0, uses_anonymous_args = 0
 780:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1026              		.loc 20 780 5 view .LVU201
 779:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1027              		.loc 20 779 1 is_stmt 0 view .LVU202
 1028 0000 08B5     		push	{r3, lr}
 1029              		.cfi_def_cfa_offset 8
 1030              		.cfi_offset 3, -8
 1031              		.cfi_offset 14, -4
 1032              		.loc 20 780 36 view .LVU203
 1033 0002 0021     		movs	r1, #0
 1034 0004 0348     		ldr	r0, .L40
 1035 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1036              	.LVL39:
 1037              		.loc 20 780 19 view .LVU204
 1038 000a 034B     		ldr	r3, .L40+4
 1039 000c 83ED000A 		vstr.32	s0, [r3]
 781:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 50


 1040              		.loc 20 781 1 view .LVU205
 1041 0010 08BD     		pop	{r3, pc}
 1042              	.L41:
 1043 0012 00BF     		.align	2
 1044              	.L40:
 1045 0014 18000000 		.word	.LANCHOR4+24
 1046 0018 00000000 		.word	.LANCHOR5
 1047              		.cfi_endproc
 1048              	.LFE4312:
 1050              		.section	.text._Z17Update_DelayTimeLv,"ax",%progbits
 1051              		.align	1
 1052              		.p2align 2,,3
 1053              		.global	_Z17Update_DelayTimeLv
 1054              		.syntax unified
 1055              		.thumb
 1056              		.thumb_func
 1057              		.fpu fpv5-d16
 1059              	_Z17Update_DelayTimeLv:
 1060              	.LFB4313:
 782:Veno-Echo.cpp **** 
 783:Veno-Echo.cpp **** void Update_DelayTimeL()
 784:Veno-Echo.cpp **** {
 1061              		.loc 20 784 1 is_stmt 1 view -0
 1062              		.cfi_startproc
 1063              		@ args = 0, pretend = 0, frame = 0
 1064              		@ frame_needed = 0, uses_anonymous_args = 0
 785:Veno-Echo.cpp ****     static bool lastShift{};
 1065              		.loc 20 785 5 view .LVU207
 786:Veno-Echo.cpp ****     static bool delayTimeL_pickup{};
 1066              		.loc 20 786 5 view .LVU208
 787:Veno-Echo.cpp ****     static bool Rev_DelayTime_pickup{};
 1067              		.loc 20 787 5 view .LVU209
 788:Veno-Echo.cpp ****     
 789:Veno-Echo.cpp ****     static float delayTimeL_Last{};
 1068              		.loc 20 789 5 view .LVU210
 790:Veno-Echo.cpp **** 
 791:Veno-Echo.cpp ****     //update pot values
 792:Veno-Echo.cpp ****     float delayTimeL_Pot{hw.adc.GetMuxFloat(7,2)};
 1069              		.loc 20 792 5 view .LVU211
 784:Veno-Echo.cpp ****     static bool lastShift{};
 1070              		.loc 20 784 1 is_stmt 0 view .LVU212
 1071 0000 10B5     		push	{r4, lr}
 1072              		.cfi_def_cfa_offset 8
 1073              		.cfi_offset 4, -8
 1074              		.cfi_offset 14, -4
 1075              		.loc 20 792 44 view .LVU213
 1076 0002 0222     		movs	r2, #2
 1077 0004 0721     		movs	r1, #7
 1078 0006 7948     		ldr	r0, .L75
 784:Veno-Echo.cpp ****     static bool lastShift{};
 1079              		.loc 20 784 1 view .LVU214
 1080 0008 2DED028B 		vpush.64	{d8}
 1081              		.cfi_def_cfa_offset 16
 1082              		.cfi_offset 80, -16
 1083              		.cfi_offset 81, -12
 1084              		.loc 20 792 44 view .LVU215
 1085 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 51


 1086              	.LVL40:
 793:Veno-Echo.cpp **** 
 794:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 795:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 796:Veno-Echo.cpp ****     static int counterL{};
 797:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 1087              		.loc 20 797 26 view .LVU216
 1088 0010 7749     		ldr	r1, .L75+4
 1089              		.loc 20 797 31 view .LVU217
 1090 0012 784B     		ldr	r3, .L75+8
 1091              	.LVL41:
 796:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 1092              		.loc 20 796 5 is_stmt 1 view .LVU218
 1093              		.loc 20 797 5 view .LVU219
 1094              		.loc 20 797 26 is_stmt 0 view .LVU220
 1095 0014 0A68     		ldr	r2, [r1]
 1096              	.LBB901:
 798:Veno-Echo.cpp **** 
 799:Veno-Echo.cpp ****     if (!shift) //default control
 1097              		.loc 20 799 9 view .LVU221
 1098 0016 7848     		ldr	r0, .L75+12
 1099              	.LBE901:
 797:Veno-Echo.cpp **** 
 1100              		.loc 20 797 26 view .LVU222
 1101 0018 0132     		adds	r2, r2, #1
 1102              	.LBB968:
 1103              		.loc 20 799 5 view .LVU223
 1104 001a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1105              	.LBE968:
 797:Veno-Echo.cpp **** 
 1106              		.loc 20 797 31 view .LVU224
 1107 001c 83FB0243 		smull	r4, r3, r3, r2
 1108 0020 D417     		asrs	r4, r2, #31
 1109 0022 C4EB6313 		rsb	r3, r4, r3, asr #5
 1110 0026 03EB4303 		add	r3, r3, r3, lsl #1
 1111 002a A2EB8313 		sub	r3, r2, r3, lsl #6
 1112              	.LBB969:
 1113              	.LBB902:
 800:Veno-Echo.cpp ****     {
 801:Veno-Echo.cpp ****         static float delayTimeL_new{};
 802:Veno-Echo.cpp ****         //udpate pickup
 803:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 1114              		.loc 20 803 19 view .LVU225
 1115 002e 734A     		ldr	r2, .L75+16
 1116              	.LBE902:
 1117              	.LBE969:
 797:Veno-Echo.cpp **** 
 1118              		.loc 20 797 14 view .LVU226
 1119 0030 0B60     		str	r3, [r1]
 799:Veno-Echo.cpp ****     {
 1120              		.loc 20 799 5 is_stmt 1 view .LVU227
 1121              	.LBB970:
 1122 0032 0028     		cmp	r0, #0
 1123 0034 37D1     		bne	.L43
 1124              	.LBB921:
 801:Veno-Echo.cpp ****         //udpate pickup
 1125              		.loc 20 801 9 view .LVU228
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 52


 1126              		.loc 20 803 9 view .LVU229
 1127 0036 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1128 0038 0029     		cmp	r1, #0
 1129 003a 41D0     		beq	.L44
 804:Veno-Echo.cpp ****         {
 805:Veno-Echo.cpp ****             lastShift = shift;
 1130              		.loc 20 805 13 view .LVU230
 806:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1131              		.loc 20 806 31 is_stmt 0 view .LVU231
 1132 003c 704C     		ldr	r4, .L75+20
 807:Veno-Echo.cpp ****             delayTimeL_new = delayTimeL_Pot;   //update new value
 1133              		.loc 20 807 28 view .LVU232
 1134 003e 7149     		ldr	r1, .L75+24
 805:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1135              		.loc 20 805 23 view .LVU233
 1136 0040 1070     		strb	r0, [r2]
 806:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1137              		.loc 20 806 13 is_stmt 1 view .LVU234
 806:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1138              		.loc 20 806 31 is_stmt 0 view .LVU235
 1139 0042 2070     		strb	r0, [r4]
 1140              		.loc 20 807 13 is_stmt 1 view .LVU236
 1141              		.loc 20 807 28 is_stmt 0 view .LVU237
 1142 0044 81ED000A 		vstr.32	s0, [r1]
 1143              	.L45:
 808:Veno-Echo.cpp ****         } 
 809:Veno-Echo.cpp ****         else    //not a recent shift change
 810:Veno-Echo.cpp ****         {
 811:Veno-Echo.cpp ****             if(!delayTimeL_pickup)  //not picked up
 812:Veno-Echo.cpp ****             {
 813:Veno-Echo.cpp ****                 if(abs(delayTimeL_Pot - delayTimeL_new) > pickupTolerance)  //checked if changed fr
 814:Veno-Echo.cpp ****                 {
 815:Veno-Echo.cpp ****                     delayTimeL_pickup = true;   //set to picked up
 816:Veno-Echo.cpp ****                 }
 817:Veno-Echo.cpp ****             }
 818:Veno-Echo.cpp ****         }
 819:Veno-Echo.cpp **** 
 820:Veno-Echo.cpp ****         float delayTimeL{};
 1144              		.loc 20 820 9 is_stmt 1 view .LVU238
 1145              	.LVL42:
 821:Veno-Echo.cpp **** 
 822:Veno-Echo.cpp ****         if(delayTimeL_pickup)
 1146              		.loc 20 822 9 view .LVU239
 823:Veno-Echo.cpp ****         {
 824:Veno-Echo.cpp ****             delayTimeL = PotCVCombo(delayTimeL_Pot,delayTimeL_CV);  //combine pot value and CV
 825:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 826:Veno-Echo.cpp ****         }
 827:Veno-Echo.cpp **** 
 828:Veno-Echo.cpp ****         else
 829:Veno-Echo.cpp ****         {
 830:Veno-Echo.cpp ****             delayTimeL = PotCVCombo(delayTimeL_Last,delayTimeL_CV); //combine last pot value and CV
 1147              		.loc 20 830 13 view .LVU240
 1148              	.LBB903:
 1149              	.LBI903:
 831:Veno-Echo.cpp ****         }
 832:Veno-Echo.cpp **** 
 833:Veno-Echo.cpp ****         if(counterL == 0)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 53


 834:Veno-Echo.cpp ****         {
 835:Veno-Echo.cpp ****             if(delayL.SetDelayTime(delayTimeL,BaseTempo.getTapLength(),syncMode))
 836:Veno-Echo.cpp ****             {
 837:Veno-Echo.cpp ****             };
 838:Veno-Echo.cpp ****         }
 839:Veno-Echo.cpp **** 
 840:Veno-Echo.cpp ****     }   //not shift mode
 841:Veno-Echo.cpp **** 
 842:Veno-Echo.cpp ****     else    //shift mode
 843:Veno-Echo.cpp ****     {
 844:Veno-Echo.cpp ****         static float Rev_DelayTime_new{};
 845:Veno-Echo.cpp **** 
 846:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 847:Veno-Echo.cpp ****         {
 848:Veno-Echo.cpp ****             lastShift = shift;
 849:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 850:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 851:Veno-Echo.cpp ****         }
 852:Veno-Echo.cpp **** 
 853:Veno-Echo.cpp ****         else    //not a recent shift change
 854:Veno-Echo.cpp ****         {
 855:Veno-Echo.cpp ****             if(!Rev_DelayTime_pickup) //not picked up
 856:Veno-Echo.cpp ****             {
 857:Veno-Echo.cpp ****                 if(abs(delayTimeL_Pot - Rev_DelayTime_new) > pickupTolerance)
 858:Veno-Echo.cpp ****                 {
 859:Veno-Echo.cpp ****                     Rev_DelayTime_pickup = true;   //set picked up
 860:Veno-Echo.cpp ****                 }
 861:Veno-Echo.cpp ****             }
 862:Veno-Echo.cpp ****         }
 863:Veno-Echo.cpp **** 
 864:Veno-Echo.cpp ****         if(Rev_DelayTime_pickup)
 865:Veno-Echo.cpp ****         {
 866:Veno-Echo.cpp ****             float Rev_DelayTime{scale(delayTimeL_Pot,maxRevDelay,minRevDelay,EXPONENTIAL)};
 867:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 868:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 869:Veno-Echo.cpp ****             //save setting:
 870:Veno-Echo.cpp ****             AltControls.RevLength = Rev_DelayTime;
 871:Veno-Echo.cpp ****         }
 872:Veno-Echo.cpp ****     }
 873:Veno-Echo.cpp ****     
 874:Veno-Echo.cpp **** }
 875:Veno-Echo.cpp **** 
 876:Veno-Echo.cpp **** void Update_DelayTimeR_CV()
 877:Veno-Echo.cpp **** {
 878:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 879:Veno-Echo.cpp **** }
 880:Veno-Echo.cpp **** 
 881:Veno-Echo.cpp **** void Update_DelayTimeR()
 882:Veno-Echo.cpp **** {
 883:Veno-Echo.cpp ****     static bool lastShift{};
 884:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 885:Veno-Echo.cpp ****     static bool tapRatio_pickup{};
 886:Veno-Echo.cpp ****     
 887:Veno-Echo.cpp ****     static float delayTimeR_Last{};
 888:Veno-Echo.cpp **** 
 889:Veno-Echo.cpp ****     //update pot values
 890:Veno-Echo.cpp ****     float delayTimeR_Pot{hw.adc.GetMuxFloat(7,6)};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 54


 891:Veno-Echo.cpp **** 
 892:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 893:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 894:Veno-Echo.cpp ****     static int counterR{};
 895:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 896:Veno-Echo.cpp **** 
 897:Veno-Echo.cpp ****     if (!shift) //default control
 898:Veno-Echo.cpp ****     {
 899:Veno-Echo.cpp ****         static float delayTimeR_new{};
 900:Veno-Echo.cpp ****         //udpate pickup
 901:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 902:Veno-Echo.cpp ****         {
 903:Veno-Echo.cpp ****             lastShift = shift;
 904:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 905:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 906:Veno-Echo.cpp ****         } 
 907:Veno-Echo.cpp ****         else    //not a default shift change
 908:Veno-Echo.cpp ****         {
 909:Veno-Echo.cpp ****             if(!delayTimeR_pickup)  //not picked up
 910:Veno-Echo.cpp ****             {
 911:Veno-Echo.cpp ****                 if(abs(delayTimeR_Pot - delayTimeR_new) > pickupTolerance)  //checked if changed fr
 912:Veno-Echo.cpp ****                 {
 913:Veno-Echo.cpp ****                     delayTimeR_pickup = true;   //set to picked up
 914:Veno-Echo.cpp ****                 }
 915:Veno-Echo.cpp ****             }
 916:Veno-Echo.cpp ****         }
 917:Veno-Echo.cpp **** 
 918:Veno-Echo.cpp ****         float delayTimeR{};
 919:Veno-Echo.cpp **** 
 920:Veno-Echo.cpp ****         if(delayTimeR_pickup)
 921:Veno-Echo.cpp ****         {
 922:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Pot,delayTimeR_CV);
 923:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 924:Veno-Echo.cpp ****         }
 925:Veno-Echo.cpp **** 
 926:Veno-Echo.cpp ****         else
 927:Veno-Echo.cpp ****         {
 928:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Last,delayTimeR_CV);
 929:Veno-Echo.cpp ****         }
 930:Veno-Echo.cpp **** 
 931:Veno-Echo.cpp ****         if(counterR == 0)
 932:Veno-Echo.cpp ****         {
 933:Veno-Echo.cpp ****             if(delayR.SetDelayTime(delayTimeR,BaseTempo.getTapLength(),syncMode))
 934:Veno-Echo.cpp ****             {
 935:Veno-Echo.cpp ****             };
 936:Veno-Echo.cpp **** 
 937:Veno-Echo.cpp ****         }
 938:Veno-Echo.cpp ****     }   //not shift mode
 939:Veno-Echo.cpp **** 
 940:Veno-Echo.cpp ****     else    //shift mode
 941:Veno-Echo.cpp ****     {
 942:Veno-Echo.cpp **** 
 943:Veno-Echo.cpp ****         static float tapRatio_new{};
 944:Veno-Echo.cpp **** 
 945:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 946:Veno-Echo.cpp ****         {
 947:Veno-Echo.cpp ****             lastShift = shift;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 55


 948:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 949:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 950:Veno-Echo.cpp ****         }
 951:Veno-Echo.cpp **** 
 952:Veno-Echo.cpp ****         else    //not a recent shift change
 953:Veno-Echo.cpp ****         {
 954:Veno-Echo.cpp ****             if(!tapRatio_pickup) //not picked up
 955:Veno-Echo.cpp ****             {
 956:Veno-Echo.cpp ****                 if(abs(delayTimeR_Pot - tapRatio_new) > pickupTolerance)
 957:Veno-Echo.cpp ****                 {
 958:Veno-Echo.cpp ****                     tapRatio_pickup = true;   //set picked up
 959:Veno-Echo.cpp ****                 }
 960:Veno-Echo.cpp ****             }
 961:Veno-Echo.cpp ****         }
 962:Veno-Echo.cpp **** 
 963:Veno-Echo.cpp ****         if(tapRatio_pickup)
 964:Veno-Echo.cpp ****         {
 965:Veno-Echo.cpp ****             float tapRatioInput{delayTimeR_Pot};
 966:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
 967:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 968:Veno-Echo.cpp ****             //save setting:
 969:Veno-Echo.cpp ****             AltControls.tapRatio = GetTapRatio(tapRatio);
 970:Veno-Echo.cpp ****         }
 971:Veno-Echo.cpp ****     }
 972:Veno-Echo.cpp ****     
 973:Veno-Echo.cpp **** }
 974:Veno-Echo.cpp **** void Update_feedbackL_CV()
 975:Veno-Echo.cpp **** {
 976:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 977:Veno-Echo.cpp **** }
 978:Veno-Echo.cpp **** void Update_feedbackL()
 979:Veno-Echo.cpp **** {
 980:Veno-Echo.cpp ****     static bool lastShift{};
 981:Veno-Echo.cpp ****     static bool feedbackL_pickup{};
 982:Veno-Echo.cpp ****     static bool HPCutoff_pickup{};
 983:Veno-Echo.cpp **** 
 984:Veno-Echo.cpp ****     static float feedbackL_Last{};
 985:Veno-Echo.cpp **** 
 986:Veno-Echo.cpp ****     //get pot values:
 987:Veno-Echo.cpp ****     //float feedbackL_Pot{hw.adc.GetFloat(2)};
 988:Veno-Echo.cpp ****     float feedbackL_Pot{hw.adc.GetMuxFloat(7,1)};
 989:Veno-Echo.cpp **** 
 990:Veno-Echo.cpp ****     if (!shift) //default controls
 991:Veno-Echo.cpp ****     {   
 992:Veno-Echo.cpp ****         static float feedbackL_new{};
 993:Veno-Echo.cpp ****         //update pickup
 994:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 995:Veno-Echo.cpp ****         {
 996:Veno-Echo.cpp ****             lastShift = shift;
 997:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 998:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 999:Veno-Echo.cpp ****         } 
1000:Veno-Echo.cpp ****         else    //not a default shift change
1001:Veno-Echo.cpp ****         {
1002:Veno-Echo.cpp ****             if(!feedbackL_pickup)  //not picked up
1003:Veno-Echo.cpp ****             {
1004:Veno-Echo.cpp ****                 if(abs(feedbackL_Pot - feedbackL_new) > pickupTolerance)  //checked if changed from
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 56


1005:Veno-Echo.cpp ****                 {
1006:Veno-Echo.cpp ****                     feedbackL_pickup = true;   //set to picked up
1007:Veno-Echo.cpp ****                 }
1008:Veno-Echo.cpp ****             }
1009:Veno-Echo.cpp ****         }
1010:Veno-Echo.cpp **** 
1011:Veno-Echo.cpp ****         float feedbackL_combo{};
1012:Veno-Echo.cpp **** 
1013:Veno-Echo.cpp ****         if(feedbackL_pickup)
1014:Veno-Echo.cpp ****         {
1015:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Pot,feedbackL_CV);
1016:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
1017:Veno-Echo.cpp ****         }
1018:Veno-Echo.cpp **** 
1019:Veno-Echo.cpp ****         else
1020:Veno-Echo.cpp ****         {
1021:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Last,feedbackL_CV);
1022:Veno-Echo.cpp ****         }
1023:Veno-Echo.cpp ****   
1024:Veno-Echo.cpp ****         float feedbackL_Target{scale(feedbackL_combo,0.0,maxFB,LINEAR)};  
1025:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
1026:Veno-Echo.cpp ****     }
1027:Veno-Echo.cpp ****     else    //alternate controls
1028:Veno-Echo.cpp ****     {
1029:Veno-Echo.cpp ****         static float HPCutoff_new{};
1030:Veno-Echo.cpp **** 
1031:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1032:Veno-Echo.cpp ****         {
1033:Veno-Echo.cpp ****             lastShift = shift;
1034:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
1035:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
1036:Veno-Echo.cpp ****         }
1037:Veno-Echo.cpp **** 
1038:Veno-Echo.cpp ****         else    //not a recent shift change
1039:Veno-Echo.cpp ****         {
1040:Veno-Echo.cpp ****             if(!HPCutoff_pickup) //not picked up
1041:Veno-Echo.cpp ****             {
1042:Veno-Echo.cpp ****                 if(abs(feedbackL_Pot - HPCutoff_new) > pickupTolerance)
1043:Veno-Echo.cpp ****                 {
1044:Veno-Echo.cpp ****                     HPCutoff_pickup = true;   //set picked up
1045:Veno-Echo.cpp ****                 }
1046:Veno-Echo.cpp ****             }
1047:Veno-Echo.cpp ****         }
1048:Veno-Echo.cpp **** 
1049:Veno-Echo.cpp ****         if(HPCutoff_pickup)
1050:Veno-Echo.cpp ****         {
1051:Veno-Echo.cpp ****             float HPCutoff{};
1052:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
1053:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
1054:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
1055:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
1056:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
1057:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
1058:Veno-Echo.cpp ****         }
1059:Veno-Echo.cpp ****     }
1060:Veno-Echo.cpp **** }
1061:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 57


1062:Veno-Echo.cpp **** void Update_feedbackR_CV()
1063:Veno-Echo.cpp **** {
1064:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
1065:Veno-Echo.cpp **** }
1066:Veno-Echo.cpp **** 
1067:Veno-Echo.cpp **** void Update_feedbackR()
1068:Veno-Echo.cpp **** {
1069:Veno-Echo.cpp ****     static bool lastShift{};
1070:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
1071:Veno-Echo.cpp ****     static bool LPCutoff_pickup{};
1072:Veno-Echo.cpp **** 
1073:Veno-Echo.cpp ****     static float feedbackR_Last{};
1074:Veno-Echo.cpp **** 
1075:Veno-Echo.cpp ****     //get pot values:
1076:Veno-Echo.cpp ****     float feedbackR_Pot{hw.adc.GetMuxFloat(7,4)};
1077:Veno-Echo.cpp **** 
1078:Veno-Echo.cpp ****     if (!shift) //default controls
1079:Veno-Echo.cpp ****     {   
1080:Veno-Echo.cpp ****         static float feedbackR_new{};
1081:Veno-Echo.cpp ****         //update pickup
1082:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1083:Veno-Echo.cpp ****         {
1084:Veno-Echo.cpp ****             lastShift = shift;
1085:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
1086:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
1087:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
1088:Veno-Echo.cpp ****         } 
1089:Veno-Echo.cpp ****         else    //not a recent shift change
1090:Veno-Echo.cpp ****         {
1091:Veno-Echo.cpp ****             if(!feedbackR_pickup)  //not picked up
1092:Veno-Echo.cpp ****             {
1093:Veno-Echo.cpp ****                 if(abs(feedbackR_Pot - feedbackR_new) > pickupTolerance)  //checked if changed from
1094:Veno-Echo.cpp ****                 {
1095:Veno-Echo.cpp ****                     feedbackR_pickup = true;   //set to picked up
1096:Veno-Echo.cpp ****                 }
1097:Veno-Echo.cpp ****             }
1098:Veno-Echo.cpp ****         }
1099:Veno-Echo.cpp **** 
1100:Veno-Echo.cpp ****         float feedbackR_combo{};
1101:Veno-Echo.cpp ****         
1102:Veno-Echo.cpp ****         if(feedbackR_pickup)
1103:Veno-Echo.cpp ****         {
1104:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Pot,feedbackR_CV);
1105:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
1106:Veno-Echo.cpp ****         }
1107:Veno-Echo.cpp **** 
1108:Veno-Echo.cpp ****         else
1109:Veno-Echo.cpp ****         {
1110:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Last,feedbackR_CV);
1111:Veno-Echo.cpp ****         }
1112:Veno-Echo.cpp **** 
1113:Veno-Echo.cpp ****         float feedbackR_Target{scale(feedbackR_combo,0.0,maxFB,LINEAR)};
1114:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
1115:Veno-Echo.cpp ****     }
1116:Veno-Echo.cpp ****     else    //alternate controls
1117:Veno-Echo.cpp ****     {
1118:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 58


1119:Veno-Echo.cpp ****         static float LPCutoff_new{};
1120:Veno-Echo.cpp **** 
1121:Veno-Echo.cpp ****          if (shift != lastShift) //recent shift change
1122:Veno-Echo.cpp ****         {
1123:Veno-Echo.cpp ****             lastShift = shift;
1124:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
1125:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
1126:Veno-Echo.cpp ****         }
1127:Veno-Echo.cpp **** 
1128:Veno-Echo.cpp ****         else    //not a recent shift change
1129:Veno-Echo.cpp ****         {
1130:Veno-Echo.cpp ****             if(!LPCutoff_pickup) //not picked up
1131:Veno-Echo.cpp ****             {
1132:Veno-Echo.cpp ****                 if(abs(feedbackR_Pot - LPCutoff_new) > pickupTolerance)
1133:Veno-Echo.cpp ****                 {
1134:Veno-Echo.cpp ****                     LPCutoff_pickup = true;   //set picked up
1135:Veno-Echo.cpp ****                 }
1136:Veno-Echo.cpp ****             }
1137:Veno-Echo.cpp ****         }
1138:Veno-Echo.cpp **** 
1139:Veno-Echo.cpp ****         if(LPCutoff_pickup)
1140:Veno-Echo.cpp ****         {
1141:Veno-Echo.cpp ****             float LPCutoff{};
1142:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
1143:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
1144:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
1145:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
1146:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
1147:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
1148:Veno-Echo.cpp ****         }
1149:Veno-Echo.cpp ****     }
1150:Veno-Echo.cpp **** }
1151:Veno-Echo.cpp **** 
1152:Veno-Echo.cpp **** void Update_drywet_CV()
1153:Veno-Echo.cpp **** {
1154:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
1155:Veno-Echo.cpp **** }
1156:Veno-Echo.cpp **** 
1157:Veno-Echo.cpp **** void Update_drywet()
1158:Veno-Echo.cpp **** {
1159:Veno-Echo.cpp ****     static bool lastShift{};
1160:Veno-Echo.cpp ****     static bool drywet_pickup{};
1161:Veno-Echo.cpp ****     static bool Res_pickup{};
1162:Veno-Echo.cpp **** 
1163:Veno-Echo.cpp ****     static float drywet_Last{}; //last drywet position (unscaled)
1164:Veno-Echo.cpp ****     //static float Res_Last{}; //last res value (unscaled)
1165:Veno-Echo.cpp **** 
1166:Veno-Echo.cpp ****     //get pot values:
1167:Veno-Echo.cpp ****     //float drywet_Pot{hw.adc.GetFloat(4)};
1168:Veno-Echo.cpp ****     float drywet_Pot{hw.adc.GetMuxFloat(7,5)}; //read current pot position
1169:Veno-Echo.cpp **** 
1170:Veno-Echo.cpp ****     if (!shift) //default controls
1171:Veno-Echo.cpp ****     {   
1172:Veno-Echo.cpp **** 
1173:Veno-Echo.cpp ****         static float drywet_new{};
1174:Veno-Echo.cpp **** 
1175:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 59


1176:Veno-Echo.cpp ****         {
1177:Veno-Echo.cpp ****             lastShift = shift;
1178:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
1179:Veno-Echo.cpp ****             drywet_pickup = false;  //set to not picked up
1180:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
1181:Veno-Echo.cpp ****         } 
1182:Veno-Echo.cpp ****         
1183:Veno-Echo.cpp ****         else    //not a recent shift change
1184:Veno-Echo.cpp ****         {
1185:Veno-Echo.cpp ****             if(!drywet_pickup)  //not pickup
1186:Veno-Echo.cpp ****             {
1187:Veno-Echo.cpp ****                 //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,false);
1188:Veno-Echo.cpp ****                 if(abs(drywet_Pot - drywet_new) > pickupTolerance)  //check if changed from new val
1189:Veno-Echo.cpp ****                 {
1190:Veno-Echo.cpp ****                     drywet_pickup = true;   //set to picked up
1191:Veno-Echo.cpp ****                 }
1192:Veno-Echo.cpp ****             }
1193:Veno-Echo.cpp **** 
1194:Veno-Echo.cpp ****         }
1195:Veno-Echo.cpp ****         
1196:Veno-Echo.cpp ****         float drywetcombo{};
1197:Veno-Echo.cpp **** 
1198:Veno-Echo.cpp ****         if (drywet_pickup)
1199:Veno-Echo.cpp ****         {
1200:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Pot,drywet_CV);    //combine pot and CV
1201:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
1202:Veno-Echo.cpp ****         }
1203:Veno-Echo.cpp **** 
1204:Veno-Echo.cpp ****         else
1205:Veno-Echo.cpp ****         {
1206:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Last,drywet_CV);    //combine last pot value and CV
1207:Veno-Echo.cpp ****         }
1208:Veno-Echo.cpp **** 
1209:Veno-Echo.cpp ****         float drywetTarget{};
1210:Veno-Echo.cpp **** 
1211:Veno-Echo.cpp ****         if(drywetcombo >= 0.98)
1212:Veno-Echo.cpp ****         {
1213:Veno-Echo.cpp ****             drywetTarget = 1.0f;
1214:Veno-Echo.cpp ****         }
1215:Veno-Echo.cpp ****         else if(drywetcombo <= 0.02)
1216:Veno-Echo.cpp ****         {
1217:Veno-Echo.cpp ****             drywetTarget = 0.0f;
1218:Veno-Echo.cpp ****         }
1219:Veno-Echo.cpp ****         else
1220:Veno-Echo.cpp ****         {
1221:Veno-Echo.cpp ****             drywetTarget = scale(drywetcombo,0.0,1.0,LINEAR); 
1222:Veno-Echo.cpp ****         }
1223:Veno-Echo.cpp **** 
1224:Veno-Echo.cpp ****         //fonepole(drywet,drywetTarget,0.032f); 
1225:Veno-Echo.cpp ****         fonepole(drywet,drywetTarget,0.016f); 
1226:Veno-Echo.cpp ****     }
1227:Veno-Echo.cpp ****     else    //alternate controls
1228:Veno-Echo.cpp ****     {
1229:Veno-Echo.cpp ****         static float Res_new{};
1230:Veno-Echo.cpp **** 
1231:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1232:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 60


1233:Veno-Echo.cpp ****             lastShift = shift;
1234:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
1235:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
1236:Veno-Echo.cpp ****         }
1237:Veno-Echo.cpp **** 
1238:Veno-Echo.cpp ****         else    //not a recent shift change
1239:Veno-Echo.cpp ****         {
1240:Veno-Echo.cpp ****             if(!Res_pickup) //not picked up
1241:Veno-Echo.cpp ****             {
1242:Veno-Echo.cpp ****                 if(abs(drywet_Pot - Res_new) > pickupTolerance)
1243:Veno-Echo.cpp ****                 {
1244:Veno-Echo.cpp ****                     Res_pickup = true;  //set picked up
1245:Veno-Echo.cpp ****                 }
1246:Veno-Echo.cpp ****             }
1247:Veno-Echo.cpp ****         }
1248:Veno-Echo.cpp **** 
1249:Veno-Echo.cpp ****         if(Res_pickup)
1250:Veno-Echo.cpp ****         {
1251:Veno-Echo.cpp ****             float Res{};
1252:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
1253:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
1254:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
1255:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
1256:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
1257:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
1258:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
1259:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
1260:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
1261:Veno-Echo.cpp ****             AltControls.Resonance = Res;
1262:Veno-Echo.cpp ****         }
1263:Veno-Echo.cpp ****     }
1264:Veno-Echo.cpp **** }
1265:Veno-Echo.cpp **** 
1266:Veno-Echo.cpp **** void Update_width_CV()
1267:Veno-Echo.cpp **** {
1268:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
1269:Veno-Echo.cpp **** }
1270:Veno-Echo.cpp **** 
1271:Veno-Echo.cpp **** void Update_width()
1272:Veno-Echo.cpp **** {
1273:Veno-Echo.cpp ****     static bool lastShift{};
1274:Veno-Echo.cpp ****     static bool width_pickup{};
1275:Veno-Echo.cpp ****     static bool ModDepth_pickup{};
1276:Veno-Echo.cpp **** 
1277:Veno-Echo.cpp ****     static float width_Last{};
1278:Veno-Echo.cpp **** 
1279:Veno-Echo.cpp ****     //get pot values:
1280:Veno-Echo.cpp ****     float width_Pot{hw.adc.GetMuxFloat(7,7)};
1281:Veno-Echo.cpp **** 
1282:Veno-Echo.cpp ****     if (!shift) //default controls
1283:Veno-Echo.cpp ****     {   
1284:Veno-Echo.cpp ****         static float width_new{};
1285:Veno-Echo.cpp ****         //update pickup
1286:Veno-Echo.cpp ****         if (shift != lastShift)
1287:Veno-Echo.cpp ****         {
1288:Veno-Echo.cpp ****             lastShift = shift;
1289:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 61


1290:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
1291:Veno-Echo.cpp ****         }
1292:Veno-Echo.cpp **** 
1293:Veno-Echo.cpp ****         else
1294:Veno-Echo.cpp ****         {
1295:Veno-Echo.cpp ****             if(!width_pickup)  //not picked up
1296:Veno-Echo.cpp ****             {
1297:Veno-Echo.cpp ****                 if(abs(width_Pot - width_new) > pickupTolerance)  //checked if changed from new val
1298:Veno-Echo.cpp ****                 {
1299:Veno-Echo.cpp ****                     width_pickup = true;   //set to picked up
1300:Veno-Echo.cpp ****                 }
1301:Veno-Echo.cpp ****             }
1302:Veno-Echo.cpp **** 
1303:Veno-Echo.cpp ****         }
1304:Veno-Echo.cpp **** 
1305:Veno-Echo.cpp ****         float widthTarget{};
1306:Veno-Echo.cpp **** 
1307:Veno-Echo.cpp ****         if(width_pickup)
1308:Veno-Echo.cpp ****         {
1309:Veno-Echo.cpp ****             widthTarget = scale(PotCVCombo(width_Pot,width_CV),0.5f,0.0f,LINEAR);
1310:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
1311:Veno-Echo.cpp ****         }
1312:Veno-Echo.cpp **** 
1313:Veno-Echo.cpp ****         else
1314:Veno-Echo.cpp ****         {        
1315:Veno-Echo.cpp ****             widthTarget = scale(PotCVCombo(width_Last,width_CV),0.5f,0.0f,LINEAR);
1316:Veno-Echo.cpp ****         }
1317:Veno-Echo.cpp ****             
1318:Veno-Echo.cpp ****             fonepole(width,widthTarget,0.032f);
1319:Veno-Echo.cpp ****             WidthXfade.SetPos(width);
1320:Veno-Echo.cpp ****     }
1321:Veno-Echo.cpp **** 
1322:Veno-Echo.cpp ****     else    //alternate controls
1323:Veno-Echo.cpp ****     {
1324:Veno-Echo.cpp ****         static float ModDepth_new{};
1325:Veno-Echo.cpp **** 
1326:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1327:Veno-Echo.cpp ****         {
1328:Veno-Echo.cpp ****             lastShift = shift;
1329:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
1330:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
1331:Veno-Echo.cpp ****         }
1332:Veno-Echo.cpp **** 
1333:Veno-Echo.cpp ****         else    //not a recent shift change
1334:Veno-Echo.cpp ****         {
1335:Veno-Echo.cpp ****             if(!ModDepth_pickup) //not picked up
1336:Veno-Echo.cpp ****             {
1337:Veno-Echo.cpp ****                 if(abs(width_Pot - ModDepth_new) > pickupTolerance)
1338:Veno-Echo.cpp ****                 {
1339:Veno-Echo.cpp ****                     ModDepth_pickup = true;   //set picked up
1340:Veno-Echo.cpp ****                 }
1341:Veno-Echo.cpp ****             }
1342:Veno-Echo.cpp ****         }
1343:Veno-Echo.cpp **** 
1344:Veno-Echo.cpp ****         if(ModDepth_pickup)
1345:Veno-Echo.cpp ****         {
1346:Veno-Echo.cpp ****             ModDepth = scale(width_Pot,minModDepth,maxModDepth,LINEAR); 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 62


1347:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
1348:Veno-Echo.cpp ****         }
1349:Veno-Echo.cpp ****     }
1350:Veno-Echo.cpp **** }
1351:Veno-Echo.cpp **** 
1352:Veno-Echo.cpp **** void Update_crossfeedback()
1353:Veno-Echo.cpp **** {
1354:Veno-Echo.cpp ****     static bool lastShift{};
1355:Veno-Echo.cpp ****     static bool crossfeedback_pickup{};
1356:Veno-Echo.cpp ****     static bool modRate_pickup{};
1357:Veno-Echo.cpp **** 
1358:Veno-Echo.cpp ****     static float crossfeedback_Last{};
1359:Veno-Echo.cpp **** 
1360:Veno-Echo.cpp ****     //get pot values:
1361:Veno-Echo.cpp ****     float crossfeedback_Pot{hw.adc.GetMuxFloat(7,0)};
1362:Veno-Echo.cpp **** 
1363:Veno-Echo.cpp ****     if (!shift) //default controls
1364:Veno-Echo.cpp ****     {   
1365:Veno-Echo.cpp ****         static float crossfeedback_new{};
1366:Veno-Echo.cpp ****         //update pickup
1367:Veno-Echo.cpp ****         if (shift != lastShift)
1368:Veno-Echo.cpp ****         {
1369:Veno-Echo.cpp ****             lastShift = shift;
1370:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
1371:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
1372:Veno-Echo.cpp ****         }
1373:Veno-Echo.cpp **** 
1374:Veno-Echo.cpp ****         else
1375:Veno-Echo.cpp ****         {
1376:Veno-Echo.cpp ****             if(!crossfeedback_pickup)  //not picked up
1377:Veno-Echo.cpp ****             {
1378:Veno-Echo.cpp ****                 if(abs(crossfeedback_Pot - crossfeedback_new) > pickupTolerance)  //checked if chan
1379:Veno-Echo.cpp ****                 {
1380:Veno-Echo.cpp ****                     crossfeedback_pickup = true;   //set to picked up
1381:Veno-Echo.cpp ****                 }
1382:Veno-Echo.cpp ****             }
1383:Veno-Echo.cpp ****         }
1384:Veno-Echo.cpp ****         float crossfeedbackTarget{};
1385:Veno-Echo.cpp **** 
1386:Veno-Echo.cpp ****         if(crossfeedback_pickup)
1387:Veno-Echo.cpp ****         {
1388:Veno-Echo.cpp ****             crossfeedbackTarget = scale(crossfeedback_Pot,0.0,1.0,LINEAR);
1389:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
1390:Veno-Echo.cpp ****         }
1391:Veno-Echo.cpp **** 
1392:Veno-Echo.cpp ****         else
1393:Veno-Echo.cpp ****         {
1394:Veno-Echo.cpp ****             crossfeedbackTarget = scale(crossfeedback_Last,0.0,1.0,LINEAR);
1395:Veno-Echo.cpp ****         }
1396:Veno-Echo.cpp **** 
1397:Veno-Echo.cpp ****         fonepole(crossfeedback,crossfeedbackTarget,0.032f);
1398:Veno-Echo.cpp ****     }
1399:Veno-Echo.cpp ****     else    //alternate controls
1400:Veno-Echo.cpp ****     {
1401:Veno-Echo.cpp ****         static float modRate_new{};
1402:Veno-Echo.cpp **** 
1403:Veno-Echo.cpp ****         if (shift != lastShift)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 63


1404:Veno-Echo.cpp ****         {
1405:Veno-Echo.cpp ****             lastShift = shift;
1406:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
1407:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
1408:Veno-Echo.cpp ****         }
1409:Veno-Echo.cpp **** 
1410:Veno-Echo.cpp ****         else
1411:Veno-Echo.cpp ****         {
1412:Veno-Echo.cpp ****             if(!modRate_pickup)
1413:Veno-Echo.cpp ****             {
1414:Veno-Echo.cpp ****                 if(abs(crossfeedback_Pot - modRate_new) > pickupTolerance)
1415:Veno-Echo.cpp ****                 {
1416:Veno-Echo.cpp ****                     modRate_pickup = true; //set picked up
1417:Veno-Echo.cpp ****                 }
1418:Veno-Echo.cpp ****             }
1419:Veno-Echo.cpp ****         }
1420:Veno-Echo.cpp **** 
1421:Veno-Echo.cpp ****         if(modRate_pickup)
1422:Veno-Echo.cpp ****         {
1423:Veno-Echo.cpp ****             float modRate{scale(crossfeedback_Pot,minModRate,maxModRate,LINEAR)};
1424:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
1425:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
1426:Veno-Echo.cpp ****         }
1427:Veno-Echo.cpp ****     }
1428:Veno-Echo.cpp **** }
1429:Veno-Echo.cpp **** 
1430:Veno-Echo.cpp **** void Update_filterXfade()
1431:Veno-Echo.cpp **** {
1432:Veno-Echo.cpp ****     static bool lastShift{};
1433:Veno-Echo.cpp ****     static bool filterXfade_pickup{};
1434:Veno-Echo.cpp ****     static bool PostFilters_pickup{};
1435:Veno-Echo.cpp **** 
1436:Veno-Echo.cpp ****     static float filterXfade_last{};
1437:Veno-Echo.cpp **** 
1438:Veno-Echo.cpp ****     //get pot values:
1439:Veno-Echo.cpp ****     float filterXfade_Pot{hw.adc.GetMuxFloat(7,3)};
1440:Veno-Echo.cpp **** 
1441:Veno-Echo.cpp ****     if (!shift) //default controls
1442:Veno-Echo.cpp ****     {   
1443:Veno-Echo.cpp ****         static float filterXfade_new{};
1444:Veno-Echo.cpp ****         //update pickup
1445:Veno-Echo.cpp ****         if (shift != lastShift)
1446:Veno-Echo.cpp ****         {
1447:Veno-Echo.cpp ****             lastShift = shift;
1448:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
1449:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
1450:Veno-Echo.cpp ****         }
1451:Veno-Echo.cpp **** 
1452:Veno-Echo.cpp ****         else
1453:Veno-Echo.cpp ****         {
1454:Veno-Echo.cpp ****             if(!filterXfade_pickup)  //not picked up
1455:Veno-Echo.cpp ****             {
1456:Veno-Echo.cpp ****                 if(abs(filterXfade_Pot - filterXfade_new) > pickupTolerance)  //checked if changed 
1457:Veno-Echo.cpp ****                 {
1458:Veno-Echo.cpp ****                     filterXfade_pickup = true;   //set to picked up
1459:Veno-Echo.cpp ****                 }
1460:Veno-Echo.cpp ****             }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 64


1461:Veno-Echo.cpp ****         }
1462:Veno-Echo.cpp **** 
1463:Veno-Echo.cpp ****         float filterXfadeTarget{};
1464:Veno-Echo.cpp **** 
1465:Veno-Echo.cpp ****         if(filterXfade_pickup)
1466:Veno-Echo.cpp ****         {
1467:Veno-Echo.cpp ****             filterXfadeTarget = scale(filterXfade_Pot,0.0,1.0,EXPONENTIAL);
1468:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
1469:Veno-Echo.cpp ****         }
1470:Veno-Echo.cpp **** 
1471:Veno-Echo.cpp ****         else
1472:Veno-Echo.cpp ****         {
1473:Veno-Echo.cpp ****             filterXfadeTarget = scale(filterXfade_last,0.0,1.0,EXPONENTIAL);
1474:Veno-Echo.cpp ****         }
1475:Veno-Echo.cpp **** 
1476:Veno-Echo.cpp ****         fonepole(filterXfade,filterXfadeTarget,0.032f);
1477:Veno-Echo.cpp ****     }
1478:Veno-Echo.cpp ****     else    //alternate controls
1479:Veno-Echo.cpp ****     {
1480:Veno-Echo.cpp **** 
1481:Veno-Echo.cpp ****         static float PostFilters_new{};
1482:Veno-Echo.cpp **** 
1483:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1484:Veno-Echo.cpp ****         {
1485:Veno-Echo.cpp ****             lastShift = shift;
1486:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
1487:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
1488:Veno-Echo.cpp ****         }
1489:Veno-Echo.cpp **** 
1490:Veno-Echo.cpp ****         else    //not a recent shift change
1491:Veno-Echo.cpp ****         {
1492:Veno-Echo.cpp ****             if(!PostFilters_pickup) //not picked up
1493:Veno-Echo.cpp ****             {
1494:Veno-Echo.cpp ****                 if(abs(filterXfade_Pot - PostFilters_new) > pickupTolerance)
1495:Veno-Echo.cpp ****                 {
1496:Veno-Echo.cpp ****                     PostFilters_pickup = true;   //set picked up
1497:Veno-Echo.cpp ****                 }
1498:Veno-Echo.cpp ****             }
1499:Veno-Echo.cpp ****         }
1500:Veno-Echo.cpp ****         
1501:Veno-Echo.cpp ****         if(PostFilters_pickup)
1502:Veno-Echo.cpp ****         {
1503:Veno-Echo.cpp ****             if(filterXfade_Pot < 0.45f)
1504:Veno-Echo.cpp ****             {
1505:Veno-Echo.cpp ****                 PostFilters = false;
1506:Veno-Echo.cpp ****             }
1507:Veno-Echo.cpp ****             else if(filterXfade_Pot > 0.55f)
1508:Veno-Echo.cpp ****             {
1509:Veno-Echo.cpp ****                 PostFilters = true;
1510:Veno-Echo.cpp ****             }
1511:Veno-Echo.cpp ****             else
1512:Veno-Echo.cpp ****             {
1513:Veno-Echo.cpp ****               //do nothing
1514:Veno-Echo.cpp ****             }
1515:Veno-Echo.cpp ****             AltControls.FilterPrePost = filterXfade_Pot;
1516:Veno-Echo.cpp ****         }  
1517:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 65


1518:Veno-Echo.cpp **** }
1519:Veno-Echo.cpp **** 
1520:Veno-Echo.cpp **** void GetModCV()
1521:Veno-Echo.cpp **** {
1522:Veno-Echo.cpp ****     //get modulation CV input
1523:Veno-Echo.cpp ****     modulation_CV_Raw = scale(hw.adc.GetFloat(6),-1.0f * maxModAmp,maxModAmp,LINEAR);
1524:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
1525:Veno-Echo.cpp **** }
1526:Veno-Echo.cpp **** 
1527:Veno-Echo.cpp **** void Update_Mod()
1528:Veno-Echo.cpp **** {    
1529:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
1530:Veno-Echo.cpp ****     static float modulation_CV{};
1531:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
1532:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
1533:Veno-Echo.cpp ****     //calculate InternalMod
1534:Veno-Echo.cpp ****     float internalmod{lfo.Process() * ModDepth_Filtered};
1535:Veno-Echo.cpp ****     //apply modulation to delay lines
1536:Veno-Echo.cpp ****     delayL.SetModulation(modulation_CV + internalmod);
1537:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
1538:Veno-Echo.cpp **** }
1539:Veno-Echo.cpp **** 
1540:Veno-Echo.cpp **** void UpdateClock()
1541:Veno-Echo.cpp **** {
1542:Veno-Echo.cpp ****     static int divCounter{};
1543:Veno-Echo.cpp ****     ClockIn.Debounce();
1544:Veno-Echo.cpp **** 
1545:Veno-Echo.cpp ****     //if clock in pulse received
1546:Veno-Echo.cpp ****     if (ClockIn.RisingEdge())    
1547:Veno-Echo.cpp ****     {   
1548:Veno-Echo.cpp ****         divCounter = (divCounter + 1) % PPQN;
1549:Veno-Echo.cpp ****         //tempoLED_BASE.resetPhase();
1550:Veno-Echo.cpp ****         if(divCounter == 0)
1551:Veno-Echo.cpp ****         {
1552:Veno-Echo.cpp ****             if(BaseTempo.tap()) //if valid tap resistered
1553:Veno-Echo.cpp ****             {
1554:Veno-Echo.cpp ****                 tempoLED_BASE.setTempo(BaseTempo.getTapFreq()); //set new base freq
1555:Veno-Echo.cpp ****             }
1556:Veno-Echo.cpp ****         }
1557:Veno-Echo.cpp ****     }
1558:Veno-Echo.cpp ****     
1559:Veno-Echo.cpp **** }
1560:Veno-Echo.cpp **** 
1561:Veno-Echo.cpp **** void Update_Buttons()
1562:Veno-Echo.cpp **** {  
1563:Veno-Echo.cpp ****     static uint32_t shiftTime{};
1564:Veno-Echo.cpp ****     static uint32_t resetTime{};
1565:Veno-Echo.cpp ****     static int buttonstate{};
1566:Veno-Echo.cpp **** 
1567:Veno-Echo.cpp ****     Rev_L_sw.update();
1568:Veno-Echo.cpp ****     Rev_R_sw.update();
1569:Veno-Echo.cpp ****     LPF_sw.update();
1570:Veno-Echo.cpp ****     HPF_sw.update();
1571:Veno-Echo.cpp ****     Tap_Button.update();
1572:Veno-Echo.cpp **** 
1573:Veno-Echo.cpp ****     ReverseGateL.Debounce();
1574:Veno-Echo.cpp ****     ReverseGateR.Debounce();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 66


1575:Veno-Echo.cpp ****     //TapButton.Debounce();
1576:Veno-Echo.cpp ****     Sync.Debounce();
1577:Veno-Echo.cpp ****     ClockIn.Debounce();
1578:Veno-Echo.cpp ****     //gate inputs
1579:Veno-Echo.cpp ****     if (ReverseGateL.RisingEdge())
1580:Veno-Echo.cpp ****     {
1581:Veno-Echo.cpp ****         Rev_L_sw.toggle();
1582:Veno-Echo.cpp ****         //resetTime = System::GetNow();
1583:Veno-Echo.cpp ****     }
1584:Veno-Echo.cpp **** 
1585:Veno-Echo.cpp ****     if (ReverseGateR.RisingEdge())
1586:Veno-Echo.cpp ****     {
1587:Veno-Echo.cpp ****         Rev_R_sw.toggle();
1588:Veno-Echo.cpp ****         //resetTime = System::GetNow();
1589:Veno-Echo.cpp ****     }
1590:Veno-Echo.cpp **** 
1591:Veno-Echo.cpp ****     //buttons
1592:Veno-Echo.cpp **** 
1593:Veno-Echo.cpp ****     if (Rev_L_sw.RisingEdge())
1594:Veno-Echo.cpp ****     {
1595:Veno-Echo.cpp ****         buttonstate += 1;
1596:Veno-Echo.cpp ****         if (buttonstate == 3)
1597:Veno-Echo.cpp ****         {
1598:Veno-Echo.cpp ****             resetTime = System::GetNow();
1599:Veno-Echo.cpp ****         }
1600:Veno-Echo.cpp ****     }
1601:Veno-Echo.cpp **** 
1602:Veno-Echo.cpp ****     if (Rev_L_sw.FallingEdge())
1603:Veno-Echo.cpp ****     {
1604:Veno-Echo.cpp ****         buttonstate -= 1;
1605:Veno-Echo.cpp ****     }
1606:Veno-Echo.cpp **** 
1607:Veno-Echo.cpp ****     if (Rev_R_sw.RisingEdge())
1608:Veno-Echo.cpp ****     {
1609:Veno-Echo.cpp ****         buttonstate += 1;
1610:Veno-Echo.cpp ****         if (buttonstate == 3)
1611:Veno-Echo.cpp ****         {
1612:Veno-Echo.cpp ****             resetTime = System::GetNow();
1613:Veno-Echo.cpp ****         }
1614:Veno-Echo.cpp ****     }
1615:Veno-Echo.cpp **** 
1616:Veno-Echo.cpp ****     if (Rev_R_sw.FallingEdge())
1617:Veno-Echo.cpp ****     {
1618:Veno-Echo.cpp ****         buttonstate -= 1;
1619:Veno-Echo.cpp ****     }
1620:Veno-Echo.cpp **** 
1621:Veno-Echo.cpp ****     if (Tap_Button.RisingEdge())    
1622:Veno-Echo.cpp ****     {
1623:Veno-Echo.cpp ****         if(BaseTempo.tap()) //if tempo changed
1624:Veno-Echo.cpp ****         {
1625:Veno-Echo.cpp ****             tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1626:Veno-Echo.cpp ****         }
1627:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
1628:Veno-Echo.cpp ****         
1629:Veno-Echo.cpp **** 
1630:Veno-Echo.cpp ****         shiftTime = System::GetNow();   //reset shift timer
1631:Veno-Echo.cpp ****         buttonstate += 1;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 67


1632:Veno-Echo.cpp ****         
1633:Veno-Echo.cpp ****         if (buttonstate == 3)
1634:Veno-Echo.cpp ****         {
1635:Veno-Echo.cpp ****             resetTime = System::GetNow();
1636:Veno-Echo.cpp ****         }
1637:Veno-Echo.cpp **** 
1638:Veno-Echo.cpp ****     }
1639:Veno-Echo.cpp **** 
1640:Veno-Echo.cpp ****     if (Tap_Button.FallingEdge())    //when button is let go shift is off
1641:Veno-Echo.cpp ****     {
1642:Veno-Echo.cpp ****         shift = false;
1643:Veno-Echo.cpp ****         buttonstate -= 1;
1644:Veno-Echo.cpp ****         mute = false;
1645:Veno-Echo.cpp ****     }
1646:Veno-Echo.cpp **** 
1647:Veno-Echo.cpp ****     if (Tap_Button.getState())
1648:Veno-Echo.cpp ****     {
1649:Veno-Echo.cpp ****         if ( (System::GetNow() - shiftTime) > shiftWait)
1650:Veno-Echo.cpp ****         {
1651:Veno-Echo.cpp ****             shift = true;   //turn on shift if button held for longer than shiftWait
1652:Veno-Echo.cpp ****         } 
1653:Veno-Echo.cpp ****     }
1654:Veno-Echo.cpp **** 
1655:Veno-Echo.cpp ****     if (buttonstate == 3) //all buttons held
1656:Veno-Echo.cpp ****     {
1657:Veno-Echo.cpp **** 
1658:Veno-Echo.cpp ****             if( ((System::GetNow() - resetTime) > resetWait) )
1659:Veno-Echo.cpp ****             {
1660:Veno-Echo.cpp ****                 Rev_L_sw.toggle();
1661:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
1662:Veno-Echo.cpp ****                 ResetAllLEDs();
1663:Veno-Echo.cpp ****                 //don't let reset or shift update
1664:Veno-Echo.cpp ****                 shift = false;
1665:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
1666:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
1667:Veno-Echo.cpp ****                 resetTime = System::GetNow();
1668:Veno-Echo.cpp ****             }
1669:Veno-Echo.cpp ****     } 
1670:Veno-Echo.cpp **** 
1671:Veno-Echo.cpp ****     syncMode = Sync.Pressed() ? true : false;
1672:Veno-Echo.cpp **** 
1673:Veno-Echo.cpp ****     //update syncMode
1674:Veno-Echo.cpp ****     delayL.SetSync(syncMode);
1675:Veno-Echo.cpp ****     delayR.SetSync(syncMode);
1676:Veno-Echo.cpp **** }
1677:Veno-Echo.cpp **** 
1678:Veno-Echo.cpp **** void Update_BaseTempoLED()
1679:Veno-Echo.cpp **** {
1680:Veno-Echo.cpp ****     tempoLED_BASE.update();
1681:Veno-Echo.cpp **** 
1682:Veno-Echo.cpp ****     static int phaseCounter{};
1683:Veno-Echo.cpp **** 
1684:Veno-Echo.cpp ****     if(tempoLED_BASE.isEOC())
1685:Veno-Echo.cpp ****     {
1686:Veno-Echo.cpp ****         phaseCounter = (phaseCounter + 1) % 6;
1687:Veno-Echo.cpp ****     }
1688:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 68


1689:Veno-Echo.cpp ****     float dividedPhase{(tempoLED_BASE.GetPhase() / 6) + ( (TWOPI_F / 6) * phaseCounter ) };
1690:Veno-Echo.cpp ****     //update base phase for both delay lines
1691:Veno-Echo.cpp ****     delayL.SetBasePhase( dividedPhase );
1692:Veno-Echo.cpp ****     delayR.SetBasePhase( dividedPhase );
1693:Veno-Echo.cpp **** }
1694:Veno-Echo.cpp **** 
1695:Veno-Echo.cpp **** 
1696:Veno-Echo.cpp **** void ApplySettings(const Settings &setting)
1697:Veno-Echo.cpp **** {
1698:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
1699:Veno-Echo.cpp ****     {
1700:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(setting.RevLength);
1701:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
1702:Veno-Echo.cpp ****     }
1703:Veno-Echo.cpp ****     else
1704:Veno-Echo.cpp ****     {
1705:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(defaultAltControls.RevLength);
1706:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
1707:Veno-Echo.cpp ****     }
1708:Veno-Echo.cpp **** 
1709:Veno-Echo.cpp ****     if((setting.tapRatio >= 1.0f) && (setting.tapRatio <= 3.0f ))
1710:Veno-Echo.cpp ****     {
1711:Veno-Echo.cpp ****         BaseTempo.setTapRatio(setting.tapRatio);
1712:Veno-Echo.cpp ****     }
1713:Veno-Echo.cpp ****     else
1714:Veno-Echo.cpp ****     {
1715:Veno-Echo.cpp ****         BaseTempo.setTapRatio(defaultAltControls.tapRatio);
1716:Veno-Echo.cpp ****     }
1717:Veno-Echo.cpp **** 
1718:Veno-Echo.cpp ****     if((setting.ModDepth >= minModDepth) && (setting.ModDepth <= maxModDepth))
1719:Veno-Echo.cpp ****     {
1720:Veno-Echo.cpp ****         ModDepth = setting.ModDepth;
1721:Veno-Echo.cpp ****     }
1722:Veno-Echo.cpp ****     else
1723:Veno-Echo.cpp ****     {
1724:Veno-Echo.cpp ****         ModDepth = defaultAltControls.ModDepth;
1725:Veno-Echo.cpp ****     }
1726:Veno-Echo.cpp **** 
1727:Veno-Echo.cpp ****     if((setting.ModFreq >= minModRate) && (setting.ModFreq <= maxModRate))
1728:Veno-Echo.cpp ****     {
1729:Veno-Echo.cpp ****         lfo.SetFreq(setting.ModFreq);
1730:Veno-Echo.cpp ****     }
1731:Veno-Echo.cpp ****     else
1732:Veno-Echo.cpp ****     {
1733:Veno-Echo.cpp ****         lfo.SetFreq(defaultAltControls.ModFreq);
1734:Veno-Echo.cpp ****     }
1735:Veno-Echo.cpp **** 
1736:Veno-Echo.cpp ****     if((setting.LP_Cutoff >= minLPCut) && (setting.LP_Cutoff <= maxLPCut))
1737:Veno-Echo.cpp ****     {
1738:Veno-Echo.cpp ****         LPF_L.SetFreq(setting.LP_Cutoff);
1739:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
1740:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
1741:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
1742:Veno-Echo.cpp ****     }
1743:Veno-Echo.cpp ****     else
1744:Veno-Echo.cpp ****     {
1745:Veno-Echo.cpp ****         LPF_L.SetFreq(defaultAltControls.LP_Cutoff);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 69


1746:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
1747:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
1748:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
1749:Veno-Echo.cpp ****     }
1750:Veno-Echo.cpp ****     
1751:Veno-Echo.cpp ****     if((setting.HP_Cutoff >= minHPCut) && (setting.HP_Cutoff <= maxHPCut))
1752:Veno-Echo.cpp ****     {
1753:Veno-Echo.cpp ****         HPF_L.SetFreq(setting.HP_Cutoff);
1754:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
1755:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
1756:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
1757:Veno-Echo.cpp ****     }
1758:Veno-Echo.cpp ****     else
1759:Veno-Echo.cpp ****     {
1760:Veno-Echo.cpp ****         HPF_L.SetFreq(defaultAltControls.HP_Cutoff);
1761:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
1762:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
1763:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
1764:Veno-Echo.cpp **** 
1765:Veno-Echo.cpp ****     }
1766:Veno-Echo.cpp **** 
1767:Veno-Echo.cpp ****     if((setting.Resonance >= minRes) && (setting.Resonance <= maxRes))
1768:Veno-Echo.cpp ****     {
1769:Veno-Echo.cpp ****         LPF_L.SetRes(setting.Resonance);
1770:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
1771:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
1772:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
1773:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
1774:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
1775:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
1776:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
1777:Veno-Echo.cpp ****     }
1778:Veno-Echo.cpp **** 
1779:Veno-Echo.cpp ****     else
1780:Veno-Echo.cpp ****     {
1781:Veno-Echo.cpp ****         LPF_L_post.SetRes(defaultAltControls.Resonance);
1782:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
1783:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
1784:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
1785:Veno-Echo.cpp ****     }
1786:Veno-Echo.cpp **** 
1787:Veno-Echo.cpp ****     if(setting.FilterPrePost < 0.45f)
1788:Veno-Echo.cpp ****     {
1789:Veno-Echo.cpp ****         PostFilters = false;
1790:Veno-Echo.cpp ****     }
1791:Veno-Echo.cpp ****         else if(setting.FilterPrePost > 0.55f)
1792:Veno-Echo.cpp ****     {
1793:Veno-Echo.cpp ****         PostFilters = true;
1794:Veno-Echo.cpp ****     }
1795:Veno-Echo.cpp ****     else
1796:Veno-Echo.cpp ****     {
1797:Veno-Echo.cpp ****         PostFilters = false;    //default to pre filter
1798:Veno-Echo.cpp ****     }
1799:Veno-Echo.cpp **** 
1800:Veno-Echo.cpp **** }
1801:Veno-Echo.cpp **** 
1802:Veno-Echo.cpp **** void TurnOnAllLEDs()
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 70


1803:Veno-Echo.cpp **** {
1804:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
1805:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
1806:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
1807:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
1808:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
1809:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
1810:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
1811:Veno-Echo.cpp **** }
1812:Veno-Echo.cpp **** 
1813:Veno-Echo.cpp **** void ResetAllLEDs()
1814:Veno-Echo.cpp **** {
1815:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
1816:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
1817:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
1818:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
1819:Veno-Echo.cpp ****     {
1820:Veno-Echo.cpp ****         Rev_L_sw.LED_set(0.0f);
1821:Veno-Echo.cpp ****     }
1822:Veno-Echo.cpp ****     else
1823:Veno-Echo.cpp ****     {
1824:Veno-Echo.cpp ****        Rev_L_sw.LED_set(1.0f);
1825:Veno-Echo.cpp ****     }
1826:Veno-Echo.cpp **** 
1827:Veno-Echo.cpp ****     if(!Rev_R_sw.getState())
1828:Veno-Echo.cpp ****     {
1829:Veno-Echo.cpp ****         Rev_R_sw.LED_set(0.0f);
1830:Veno-Echo.cpp ****     }
1831:Veno-Echo.cpp ****     else
1832:Veno-Echo.cpp ****     {
1833:Veno-Echo.cpp ****         Rev_R_sw.LED_set(1.0f);
1834:Veno-Echo.cpp ****     }
1835:Veno-Echo.cpp ****     
1836:Veno-Echo.cpp ****     LPF_sw.LED_set(0.0f);
1837:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
1838:Veno-Echo.cpp **** }
1839:Veno-Echo.cpp **** 
1840:Veno-Echo.cpp **** float HardLimit(float input, float limit)
1841:Veno-Echo.cpp **** {
1842:Veno-Echo.cpp ****     float returnval{};
1843:Veno-Echo.cpp ****     if (input > limit)
1844:Veno-Echo.cpp ****         returnval = limit;
1845:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
1846:Veno-Echo.cpp ****         returnval = limit * -1.0f;
1847:Veno-Echo.cpp ****     else
1848:Veno-Echo.cpp ****         returnval = input;
1849:Veno-Echo.cpp **** 
1850:Veno-Echo.cpp ****     return returnval;   
1851:Veno-Echo.cpp **** }
1852:Veno-Echo.cpp **** 
1853:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 1150              		.loc 20 1853 7 view .LVU241
 1151              	.LBB904:
1854:Veno-Echo.cpp **** {
1855:Veno-Echo.cpp ****     float output{};
 1152              		.loc 20 1855 5 view .LVU242
1856:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 71


 1153              		.loc 20 1856 5 view .LVU243
 1154              	.LBE904:
 1155              	.LBE903:
 830:Veno-Echo.cpp ****         }
 1156              		.loc 20 830 36 is_stmt 0 view .LVU244
 1157 0048 6F49     		ldr	r1, .L75+28
 1158              	.LBB908:
 1159              	.LBB905:
 1160              		.loc 20 1856 39 view .LVU245
 1161 004a B7EE007A 		vmov.f32	s14, #1.0e+0
 1162              		.loc 20 1856 49 view .LVU246
 1163 004e B6EE006A 		vmov.f32	s12, #5.0e-1
 1164              	.LBE905:
 1165              	.LBE908:
 830:Veno-Echo.cpp ****         }
 1166              		.loc 20 830 36 view .LVU247
 1167 0052 6E4A     		ldr	r2, .L75+32
 1168              	.LBB909:
 1169              	.LBB906:
 1170              		.loc 20 1856 39 view .LVU248
 1171 0054 D1ED007A 		vldr.32	s15, [r1]
 1172              		.loc 20 1856 12 view .LVU249
 1173 0058 F0EE006A 		vmov.f32	s13, #2.0e+0
 1174 005c 92ED008A 		vldr.32	s16, [r2]
 1175              		.loc 20 1856 39 view .LVU250
 1176 0060 77EE677A 		vsub.f32	s15, s14, s15
 1177              		.loc 20 1856 49 view .LVU251
 1178 0064 77EEC67A 		vsub.f32	s15, s15, s12
 1179              		.loc 20 1856 12 view .LVU252
 1180 0068 A7EEA68A 		vfma.f32	s16, s15, s13
 1181              	.LVL43:
1857:Veno-Echo.cpp **** 
1858:Veno-Echo.cpp ****     if(output < 0.0f)
 1182              		.loc 20 1858 5 is_stmt 1 view .LVU253
 1183 006c B5EEC08A 		vcmpe.f32	s16, #0
 1184 0070 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1185 0074 00F1B380 		bmi	.L73
1859:Veno-Echo.cpp ****     {
1860:Veno-Echo.cpp ****         output = 0.0f;
1861:Veno-Echo.cpp ****     }
1862:Veno-Echo.cpp **** 
1863:Veno-Echo.cpp ****     if(output > 1.0f)
 1186              		.loc 20 1863 5 view .LVU254
1864:Veno-Echo.cpp ****     {
1865:Veno-Echo.cpp ****         output = 1.0f;
 1187              		.loc 20 1865 16 is_stmt 0 view .LVU255
 1188 0078 B4EE478A 		vcmp.f32	s16, s14
 1189 007c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1190 0080 37FE088A 		vselgt.f32	s16, s14, s16
 1191              	.LVL44:
 1192              	.L50:
 1193              		.loc 20 1865 16 view .LVU256
 1194              	.LBE906:
 1195              	.LBE909:
 833:Veno-Echo.cpp ****         {
 1196              		.loc 20 833 9 is_stmt 1 view .LVU257
 1197 0084 CBB9     		cbnz	r3, .L42
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 72


 835:Veno-Echo.cpp ****             {
 1198              		.loc 20 835 13 view .LVU258
 835:Veno-Echo.cpp ****             {
 1199              		.loc 20 835 35 is_stmt 0 view .LVU259
 1200 0086 6248     		ldr	r0, .L75+36
 1201 0088 FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 1202              	.LVL45:
 835:Veno-Echo.cpp ****             {
 1203              		.loc 20 835 35 view .LVU260
 1204 008c 614B     		ldr	r3, .L75+40
 1205 008e F0EE400A 		vmov.f32	s1, s0
 1206 0092 6148     		ldr	r0, .L75+44
 1207 0094 B0EE480A 		vmov.f32	s0, s16
 1208 0098 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1209              	.LBE921:
 1210              	.LBE970:
 874:Veno-Echo.cpp **** 
 1211              		.loc 20 874 1 view .LVU261
 1212 009a BDEC028B 		vldm	sp!, {d8}
 1213              		.cfi_remember_state
 1214              		.cfi_restore 80
 1215              		.cfi_restore 81
 1216              		.cfi_def_cfa_offset 8
 1217              	.LVL46:
 874:Veno-Echo.cpp **** 
 1218              		.loc 20 874 1 view .LVU262
 1219 009e BDE81040 		pop	{r4, lr}
 1220              		.cfi_restore 14
 1221              		.cfi_restore 4
 1222              		.cfi_def_cfa_offset 0
 1223              	.LBB971:
 1224              	.LBB922:
 835:Veno-Echo.cpp ****             {
 1225              		.loc 20 835 35 view .LVU263
 1226 00a2 FFF7FEBF 		b	_ZN10DelayMulti12SetDelayTimeEffb
 1227              	.LVL47:
 1228              	.L43:
 1229              		.cfi_restore_state
 835:Veno-Echo.cpp ****             {
 1230              		.loc 20 835 35 view .LVU264
 1231              	.LBE922:
 1232              	.LBB923:
 844:Veno-Echo.cpp **** 
 1233              		.loc 20 844 9 is_stmt 1 view .LVU265
 846:Veno-Echo.cpp ****         {
 1234              		.loc 20 846 9 view .LVU266
 1235 00a6 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1236 00a8 002B     		cmp	r3, #0
 1237 00aa 3CD1     		bne	.L53
 848:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1238              		.loc 20 848 13 view .LVU267
 848:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1239              		.loc 20 848 23 is_stmt 0 view .LVU268
 1240 00ac 0124     		movs	r4, #1
 849:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1241              		.loc 20 849 34 view .LVU269
 1242 00ae 5B48     		ldr	r0, .L75+48
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 73


 850:Veno-Echo.cpp ****         }
 1243              		.loc 20 850 31 view .LVU270
 1244 00b0 5B49     		ldr	r1, .L75+52
 848:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1245              		.loc 20 848 23 view .LVU271
 1246 00b2 1470     		strb	r4, [r2]
 849:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1247              		.loc 20 849 13 is_stmt 1 view .LVU272
 849:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1248              		.loc 20 849 34 is_stmt 0 view .LVU273
 1249 00b4 0370     		strb	r3, [r0]
 850:Veno-Echo.cpp ****         }
 1250              		.loc 20 850 13 is_stmt 1 view .LVU274
 850:Veno-Echo.cpp ****         }
 1251              		.loc 20 850 31 is_stmt 0 view .LVU275
 1252 00b6 81ED000A 		vstr.32	s0, [r1]
 1253              	.L42:
 850:Veno-Echo.cpp ****         }
 1254              		.loc 20 850 31 view .LVU276
 1255              	.LBE923:
 1256              	.LBE971:
 874:Veno-Echo.cpp **** 
 1257              		.loc 20 874 1 view .LVU277
 1258 00ba BDEC028B 		vldm	sp!, {d8}
 1259              		.cfi_remember_state
 1260              		.cfi_restore 80
 1261              		.cfi_restore 81
 1262              		.cfi_def_cfa_offset 8
 1263 00be 10BD     		pop	{r4, pc}
 1264              	.L44:
 1265              		.cfi_restore_state
 1266              	.LBB972:
 1267              	.LBB964:
 811:Veno-Echo.cpp ****             {
 1268              		.loc 20 811 13 is_stmt 1 view .LVU278
 811:Veno-Echo.cpp ****             {
 1269              		.loc 20 811 16 is_stmt 0 view .LVU279
 1270 00c0 4F4A     		ldr	r2, .L75+20
 811:Veno-Echo.cpp ****             {
 1271              		.loc 20 811 13 view .LVU280
 1272 00c2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1273 00c4 79B9     		cbnz	r1, .L46
 813:Veno-Echo.cpp ****                 {
 1274              		.loc 20 813 17 is_stmt 1 view .LVU281
 1275              	.LVL48:
 1276              	.LBB910:
 1277              	.LBI910:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1278              		.loc 21 75 3 view .LVU282
 1279              	.LBB911:
 1280              		.loc 21 76 5 view .LVU283
 1281              		.loc 21 76 5 is_stmt 0 view .LVU284
 1282              	.LBE911:
 1283              	.LBE910:
 813:Veno-Echo.cpp ****                 {
 1284              		.loc 20 813 23 view .LVU285
 1285 00c6 4F49     		ldr	r1, .L75+24
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 74


 813:Veno-Echo.cpp ****                 {
 1286              		.loc 20 813 17 view .LVU286
 1287 00c8 9FED567A 		vldr.32	s14, .L75+56
 813:Veno-Echo.cpp ****                 {
 1288              		.loc 20 813 23 view .LVU287
 1289 00cc D1ED007A 		vldr.32	s15, [r1]
 1290 00d0 70EE677A 		vsub.f32	s15, s0, s15
 1291              	.LBB913:
 1292              	.LBB912:
 1293              		.loc 21 76 31 view .LVU288
 1294 00d4 F0EEE77A 		vabs.f32	s15, s15
 1295              	.LBE912:
 1296              	.LBE913:
 813:Veno-Echo.cpp ****                 {
 1297              		.loc 20 813 17 view .LVU289
 1298 00d8 F4EEC77A 		vcmpe.f32	s15, s14
 1299 00dc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1300 00e0 B2DD     		ble	.L45
 815:Veno-Echo.cpp ****                 }
 1301              		.loc 20 815 21 is_stmt 1 view .LVU290
 815:Veno-Echo.cpp ****                 }
 1302              		.loc 20 815 39 is_stmt 0 view .LVU291
 1303 00e2 0121     		movs	r1, #1
 1304 00e4 1170     		strb	r1, [r2]
 1305              	.L46:
 820:Veno-Echo.cpp **** 
 1306              		.loc 20 820 9 is_stmt 1 view .LVU292
 1307              	.LVL49:
 822:Veno-Echo.cpp ****         {
 1308              		.loc 20 822 9 view .LVU293
 824:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 1309              		.loc 20 824 13 view .LVU294
 1310              	.LBB914:
 1311              	.LBI914:
1853:Veno-Echo.cpp **** {
 1312              		.loc 20 1853 7 view .LVU295
 1313              	.LBB915:
1855:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1314              		.loc 20 1855 5 view .LVU296
1856:Veno-Echo.cpp **** 
 1315              		.loc 20 1856 5 view .LVU297
 1316              	.LBE915:
 1317              	.LBE914:
 824:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 1318              		.loc 20 824 36 is_stmt 0 view .LVU298
 1319 00e6 484A     		ldr	r2, .L75+28
 1320              	.LBB918:
 1321              	.LBB916:
1856:Veno-Echo.cpp **** 
 1322              		.loc 20 1856 39 view .LVU299
 1323 00e8 B7EE007A 		vmov.f32	s14, #1.0e+0
1856:Veno-Echo.cpp **** 
 1324              		.loc 20 1856 49 view .LVU300
 1325 00ec B6EE006A 		vmov.f32	s12, #5.0e-1
1856:Veno-Echo.cpp **** 
 1326              		.loc 20 1856 39 view .LVU301
 1327 00f0 D2ED007A 		vldr.32	s15, [r2]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 75


1856:Veno-Echo.cpp **** 
 1328              		.loc 20 1856 12 view .LVU302
 1329 00f4 F0EE006A 		vmov.f32	s13, #2.0e+0
 1330 00f8 B0EE408A 		vmov.f32	s16, s0
1856:Veno-Echo.cpp **** 
 1331              		.loc 20 1856 39 view .LVU303
 1332 00fc 77EE677A 		vsub.f32	s15, s14, s15
1856:Veno-Echo.cpp **** 
 1333              		.loc 20 1856 49 view .LVU304
 1334 0100 77EEC67A 		vsub.f32	s15, s15, s12
1856:Veno-Echo.cpp **** 
 1335              		.loc 20 1856 12 view .LVU305
 1336 0104 A7EEA68A 		vfma.f32	s16, s15, s13
 1337              	.LVL50:
1858:Veno-Echo.cpp ****     {
 1338              		.loc 20 1858 5 is_stmt 1 view .LVU306
 1339 0108 B5EEC08A 		vcmpe.f32	s16, #0
 1340 010c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1341 0110 68D4     		bmi	.L74
1863:Veno-Echo.cpp ****     {
 1342              		.loc 20 1863 5 view .LVU307
 1343              		.loc 20 1865 16 is_stmt 0 view .LVU308
 1344 0112 B4EE478A 		vcmp.f32	s16, s14
 1345 0116 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1346 011a 37FE088A 		vselgt.f32	s16, s14, s16
 1347              	.LVL51:
 1348              	.L48:
1866:Veno-Echo.cpp ****     }
1867:Veno-Echo.cpp **** 
1868:Veno-Echo.cpp ****     return output;
 1349              		.loc 20 1868 5 is_stmt 1 view .LVU309
 1350              		.loc 20 1868 5 is_stmt 0 view .LVU310
 1351              	.LBE916:
 1352              	.LBE918:
 825:Veno-Echo.cpp ****         }
 1353              		.loc 20 825 13 is_stmt 1 view .LVU311
 825:Veno-Echo.cpp ****         }
 1354              		.loc 20 825 29 is_stmt 0 view .LVU312
 1355 011e 3B4A     		ldr	r2, .L75+32
 1356 0120 82ED000A 		vstr.32	s0, [r2]
 1357 0124 AEE7     		b	.L50
 1358              	.LVL52:
 1359              	.L53:
 825:Veno-Echo.cpp ****         }
 1360              		.loc 20 825 29 view .LVU313
 1361              	.LBE964:
 1362              	.LBB965:
 855:Veno-Echo.cpp ****             {
 1363              		.loc 20 855 13 is_stmt 1 view .LVU314
 855:Veno-Echo.cpp ****             {
 1364              		.loc 20 855 16 is_stmt 0 view .LVU315
 1365 0126 3D4B     		ldr	r3, .L75+48
 855:Veno-Echo.cpp ****             {
 1366              		.loc 20 855 13 view .LVU316
 1367 0128 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1368 012a 7AB9     		cbnz	r2, .L54
 857:Veno-Echo.cpp ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 76


 1369              		.loc 20 857 17 is_stmt 1 view .LVU317
 1370              	.LVL53:
 1371              	.LBB924:
 1372              	.LBI924:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1373              		.loc 21 75 3 view .LVU318
 1374              	.LBB925:
 1375              		.loc 21 76 5 view .LVU319
 1376              		.loc 21 76 5 is_stmt 0 view .LVU320
 1377              	.LBE925:
 1378              	.LBE924:
 857:Veno-Echo.cpp ****                 {
 1379              		.loc 20 857 23 view .LVU321
 1380 012c 3C4A     		ldr	r2, .L75+52
 857:Veno-Echo.cpp ****                 {
 1381              		.loc 20 857 17 view .LVU322
 1382 012e 9FED3D7A 		vldr.32	s14, .L75+56
 857:Veno-Echo.cpp ****                 {
 1383              		.loc 20 857 23 view .LVU323
 1384 0132 D2ED007A 		vldr.32	s15, [r2]
 1385 0136 70EE677A 		vsub.f32	s15, s0, s15
 1386              	.LBB927:
 1387              	.LBB926:
 1388              		.loc 21 76 31 view .LVU324
 1389 013a F0EEE77A 		vabs.f32	s15, s15
 1390              	.LBE926:
 1391              	.LBE927:
 857:Veno-Echo.cpp ****                 {
 1392              		.loc 20 857 17 view .LVU325
 1393 013e F4EEC77A 		vcmpe.f32	s15, s14
 1394 0142 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1395 0146 B8DD     		ble	.L42
 859:Veno-Echo.cpp ****                 }
 1396              		.loc 20 859 21 is_stmt 1 view .LVU326
 859:Veno-Echo.cpp ****                 }
 1397              		.loc 20 859 42 is_stmt 0 view .LVU327
 1398 0148 0122     		movs	r2, #1
 1399 014a 1A70     		strb	r2, [r3]
 1400              	.L54:
 864:Veno-Echo.cpp ****         {
 1401              		.loc 20 864 9 is_stmt 1 view .LVU328
 1402              	.LBB928:
 1403              	.LBB929:
 866:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 1404              		.loc 20 866 13 view .LVU329
 866:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 1405              		.loc 20 866 38 is_stmt 0 view .LVU330
 1406 014c 0120     		movs	r0, #1
 1407 014e 9FED361A 		vldr.32	s2, .L75+60
 1408 0152 DFED360A 		vldr.32	s1, .L75+64
 1409 0156 FFF7FEFF 		bl	_Z5scalefff9CurveType
 1410              	.LVL54:
 1411              	.LBB930:
 1412              	.LBB931:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1413              		.loc 20 70 28 view .LVU331
 1414 015a 354B     		ldr	r3, .L75+68
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 77


 1415              	.LVL55:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1416              		.loc 20 70 28 view .LVU332
 1417              	.LBE931:
 1418              	.LBE930:
 867:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 1419              		.loc 20 867 13 is_stmt 1 view .LVU333
 1420              	.LBB945:
 1421              	.LBI930:
  68:Veno-Echo.cpp ****     {
 1422              		.loc 20 68 10 view .LVU334
 1423              	.LBB943:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1424              		.loc 20 70 9 view .LVU335
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1425              		.loc 20 70 53 is_stmt 0 view .LVU336
 1426 015c DFED316A 		vldr.32	s13, .L75+56
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1427              		.loc 20 70 28 view .LVU337
 1428 0160 D3ED017A 		vldr.32	s15, [r3, #4]
 1429              	.LVL56:
 1430              	.LBB932:
 1431              	.LBI932:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1432              		.loc 21 75 3 is_stmt 1 view .LVU338
 1433              	.LBB933:
 1434              		.loc 21 76 5 view .LVU339
 1435              		.loc 21 76 5 is_stmt 0 view .LVU340
 1436              	.LBE933:
 1437              	.LBE932:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1438              		.loc 20 70 15 view .LVU341
 1439 0164 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1440              		.loc 20 70 53 view .LVU342
 1441 0168 67EEA67A 		vmul.f32	s15, s15, s13
 1442              	.LBB935:
 1443              	.LBB934:
 1444              		.loc 21 76 31 view .LVU343
 1445 016c B0EEC77A 		vabs.f32	s14, s14
 1446              	.LBE934:
 1447              	.LBE935:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1448              		.loc 20 70 9 view .LVU344
 1449 0170 B4EEE77A 		vcmpe.f32	s14, s15
 1450 0174 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1451 0178 0DDD     		ble	.L62
  74:Veno-Echo.cpp ****             //del -> Reset();
 1452              		.loc 20 74 29 view .LVU345
 1453 017a FCEEC07A 		vcvt.u32.f32	s15, s0
 1454              	.LBB936:
 1455              	.LBB937:
 1456              		.loc 19 72 9 view .LVU346
 1457 017e 2D4C     		ldr	r4, .L75+72
 1458              	.LBE937:
 1459              	.LBE936:
 1460              	.LBE943:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 78


 1461              	.LBE945:
 867:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 1462              		.loc 20 867 37 view .LVU347
 1463 0180 1968     		ldr	r1, [r3]
 1464              	.LBB946:
 1465              	.LBB944:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1466              		.loc 20 73 13 is_stmt 1 view .LVU348
 1467              	.LBB940:
 1468              	.LBB938:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1469              		.loc 19 71 9 is_stmt 0 view .LVU349
 1470 0182 0020     		movs	r0, #0
 1471              	.LBE938:
 1472              	.LBE940:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1473              		.loc 20 73 27 view .LVU350
 1474 0184 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 1475              		.loc 20 74 13 is_stmt 1 view .LVU351
 1476              	.LVL57:
 1477              	.LBB941:
 1478              	.LBI936:
  69:delayline_reverse.h ****     {
 1479              		.loc 19 69 17 view .LVU352
  69:delayline_reverse.h ****     {
 1480              		.loc 19 69 17 is_stmt 0 view .LVU353
 1481              	.LBE941:
  74:Veno-Echo.cpp ****             //del -> Reset();
 1482              		.loc 20 74 29 view .LVU354
 1483 0188 17EE902A 		vmov	r2, s15	@ int
 1484              	.LBB942:
 1485              	.LBB939:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1486              		.loc 19 71 9 view .LVU355
 1487 018c 0860     		str	r0, [r1]	@ float
 1488              		.loc 19 72 9 view .LVU356
 1489 018e A242     		cmp	r2, r4
 1490 0190 28BF     		it	cs
 1491 0192 2246     		movcs	r2, r4
 1492 0194 0A61     		str	r2, [r1, #16]
 1493              	.LVL58:
 1494              	.L62:
 1495              		.loc 19 72 9 view .LVU357
 1496              	.LBE939:
 1497              	.LBE942:
 1498              	.LBE944:
 1499              	.LBE946:
 868:Veno-Echo.cpp ****             //save setting:
 1500              		.loc 20 868 13 is_stmt 1 view .LVU358
 1501              	.LBB947:
 1502              	.LBI947:
  68:Veno-Echo.cpp ****     {
 1503              		.loc 20 68 10 view .LVU359
 1504              	.LBB948:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1505              		.loc 20 70 9 view .LVU360
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 79


  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1506              		.loc 20 70 28 is_stmt 0 view .LVU361
 1507 0196 284B     		ldr	r3, .L75+76
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1508              		.loc 20 70 53 view .LVU362
 1509 0198 DFED226A 		vldr.32	s13, .L75+56
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1510              		.loc 20 70 28 view .LVU363
 1511 019c D3ED017A 		vldr.32	s15, [r3, #4]
 1512              	.LVL59:
 1513              	.LBB949:
 1514              	.LBI949:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1515              		.loc 21 75 3 is_stmt 1 view .LVU364
 1516              	.LBB950:
 1517              		.loc 21 76 5 view .LVU365
 1518              		.loc 21 76 5 is_stmt 0 view .LVU366
 1519              	.LBE950:
 1520              	.LBE949:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1521              		.loc 20 70 15 view .LVU367
 1522 01a0 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1523              		.loc 20 70 53 view .LVU368
 1524 01a4 67EEA67A 		vmul.f32	s15, s15, s13
 1525              	.LBB952:
 1526              	.LBB951:
 1527              		.loc 21 76 31 view .LVU369
 1528 01a8 B0EEC77A 		vabs.f32	s14, s14
 1529              	.LBE951:
 1530              	.LBE952:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1531              		.loc 20 70 9 view .LVU370
 1532 01ac B4EEE77A 		vcmpe.f32	s14, s15
 1533 01b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1534 01b4 0DDD     		ble	.L56
  74:Veno-Echo.cpp ****             //del -> Reset();
 1535              		.loc 20 74 29 view .LVU371
 1536 01b6 FCEEC07A 		vcvt.u32.f32	s15, s0
 1537              	.LBB953:
 1538              	.LBB954:
 1539              		.loc 19 72 9 view .LVU372
 1540 01ba 1E4C     		ldr	r4, .L75+72
 1541              	.LBE954:
 1542              	.LBE953:
 1543              	.LBE948:
 1544              	.LBE947:
 868:Veno-Echo.cpp ****             //save setting:
 1545              		.loc 20 868 37 view .LVU373
 1546 01bc 1968     		ldr	r1, [r3]
 1547              	.LBB961:
 1548              	.LBB960:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1549              		.loc 20 73 13 is_stmt 1 view .LVU374
 1550              	.LBB957:
 1551              	.LBB955:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 80


 1552              		.loc 19 71 9 is_stmt 0 view .LVU375
 1553 01be 0020     		movs	r0, #0
 1554              	.LBE955:
 1555              	.LBE957:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1556              		.loc 20 73 27 view .LVU376
 1557 01c0 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 1558              		.loc 20 74 13 is_stmt 1 view .LVU377
 1559              	.LVL60:
 1560              	.LBB958:
 1561              	.LBI953:
  69:delayline_reverse.h ****     {
 1562              		.loc 19 69 17 view .LVU378
  69:delayline_reverse.h ****     {
 1563              		.loc 19 69 17 is_stmt 0 view .LVU379
 1564              	.LBE958:
  74:Veno-Echo.cpp ****             //del -> Reset();
 1565              		.loc 20 74 29 view .LVU380
 1566 01c4 17EE902A 		vmov	r2, s15	@ int
 1567              	.LBB959:
 1568              	.LBB956:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1569              		.loc 19 71 9 view .LVU381
 1570 01c8 0860     		str	r0, [r1]	@ float
 1571              		.loc 19 72 9 view .LVU382
 1572 01ca A242     		cmp	r2, r4
 1573 01cc 28BF     		it	cs
 1574 01ce 2246     		movcs	r2, r4
 1575 01d0 0A61     		str	r2, [r1, #16]
 1576              	.LVL61:
 1577              	.L56:
 1578              		.loc 19 72 9 view .LVU383
 1579              	.LBE956:
 1580              	.LBE959:
 1581              	.LBE960:
 1582              	.LBE961:
 870:Veno-Echo.cpp ****         }
 1583              		.loc 20 870 13 is_stmt 1 view .LVU384
 870:Veno-Echo.cpp ****         }
 1584              		.loc 20 870 35 is_stmt 0 view .LVU385
 1585 01d2 1A4B     		ldr	r3, .L75+80
 1586              	.LBE929:
 1587              	.LBE928:
 1588              	.LBE965:
 1589              	.LBE972:
 874:Veno-Echo.cpp **** 
 1590              		.loc 20 874 1 view .LVU386
 1591 01d4 BDEC028B 		vldm	sp!, {d8}
 1592              		.cfi_remember_state
 1593              		.cfi_restore 80
 1594              		.cfi_restore 81
 1595              		.cfi_def_cfa_offset 8
 1596              	.LBB973:
 1597              	.LBB966:
 1598              	.LBB963:
 1599              	.LBB962:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 81


 870:Veno-Echo.cpp ****         }
 1600              		.loc 20 870 35 view .LVU387
 1601 01d8 83ED000A 		vstr.32	s0, [r3]
 1602              	.LBE962:
 1603              	.LBE963:
 1604              	.LBE966:
 1605              	.LBE973:
 874:Veno-Echo.cpp **** 
 1606              		.loc 20 874 1 view .LVU388
 1607 01dc 10BD     		pop	{r4, pc}
 1608              	.LVL62:
 1609              	.L73:
 1610              		.cfi_restore_state
 1611              	.LBB974:
 1612              	.LBB967:
 1613              	.LBB919:
 1614              	.LBB907:
1860:Veno-Echo.cpp ****     }
 1615              		.loc 20 1860 16 view .LVU389
 1616 01de 9FED188A 		vldr.32	s16, .L75+84
 1617              	.LVL63:
1860:Veno-Echo.cpp ****     }
 1618              		.loc 20 1860 16 view .LVU390
 1619 01e2 4FE7     		b	.L50
 1620              	.LVL64:
 1621              	.L74:
1860:Veno-Echo.cpp ****     }
 1622              		.loc 20 1860 16 view .LVU391
 1623              	.LBE907:
 1624              	.LBE919:
 1625              	.LBB920:
 1626              	.LBB917:
 1627 01e4 9FED168A 		vldr.32	s16, .L75+84
 1628              	.LVL65:
1860:Veno-Echo.cpp ****     }
 1629              		.loc 20 1860 16 view .LVU392
 1630 01e8 99E7     		b	.L48
 1631              	.L76:
 1632 01ea 00BF     		.align	2
 1633              	.L75:
 1634 01ec 18000000 		.word	.LANCHOR4+24
 1635 01f0 00000000 		.word	.LANCHOR6
 1636 01f4 ABAAAA2A 		.word	715827883
 1637 01f8 00000000 		.word	.LANCHOR7
 1638 01fc 00000000 		.word	.LANCHOR8
 1639 0200 00000000 		.word	.LANCHOR9
 1640 0204 00000000 		.word	.LANCHOR10
 1641 0208 00000000 		.word	.LANCHOR5
 1642 020c 00000000 		.word	.LANCHOR11
 1643 0210 00000000 		.word	.LANCHOR12
 1644 0214 00000000 		.word	.LANCHOR13
 1645 0218 00000000 		.word	.LANCHOR0
 1646 021c 00000000 		.word	.LANCHOR14
 1647 0220 00000000 		.word	.LANCHOR15
 1648 0224 0AD7A33B 		.word	1000593162
 1649 0228 0050C346 		.word	1187205120
 1650 022c 00606A48 		.word	1214930944
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 82


 1651 0230 00000000 		.word	.LANCHOR2
 1652 0234 BF270900 		.word	599999
 1653 0238 00000000 		.word	.LANCHOR3
 1654 023c 00000000 		.word	.LANCHOR16
 1655 0240 00000000 		.word	0
 1656              	.LBE917:
 1657              	.LBE920:
 1658              	.LBE967:
 1659              	.LBE974:
 1660              		.cfi_endproc
 1661              	.LFE4313:
 1663              		.section	.text._Z20Update_DelayTimeR_CVv,"ax",%progbits
 1664              		.align	1
 1665              		.p2align 2,,3
 1666              		.global	_Z20Update_DelayTimeR_CVv
 1667              		.syntax unified
 1668              		.thumb
 1669              		.thumb_func
 1670              		.fpu fpv5-d16
 1672              	_Z20Update_DelayTimeR_CVv:
 1673              	.LFB4314:
 877:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1674              		.loc 20 877 1 is_stmt 1 view -0
 1675              		.cfi_startproc
 1676              		@ args = 0, pretend = 0, frame = 0
 1677              		@ frame_needed = 0, uses_anonymous_args = 0
 878:Veno-Echo.cpp **** }
 1678              		.loc 20 878 5 view .LVU394
 877:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1679              		.loc 20 877 1 is_stmt 0 view .LVU395
 1680 0000 08B5     		push	{r3, lr}
 1681              		.cfi_def_cfa_offset 8
 1682              		.cfi_offset 3, -8
 1683              		.cfi_offset 14, -4
 878:Veno-Echo.cpp **** }
 1684              		.loc 20 878 36 view .LVU396
 1685 0002 0121     		movs	r1, #1
 1686 0004 0348     		ldr	r0, .L79
 1687 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1688              	.LVL66:
 878:Veno-Echo.cpp **** }
 1689              		.loc 20 878 19 view .LVU397
 1690 000a 034B     		ldr	r3, .L79+4
 1691 000c 83ED000A 		vstr.32	s0, [r3]
 879:Veno-Echo.cpp **** 
 1692              		.loc 20 879 1 view .LVU398
 1693 0010 08BD     		pop	{r3, pc}
 1694              	.L80:
 1695 0012 00BF     		.align	2
 1696              	.L79:
 1697 0014 18000000 		.word	.LANCHOR4+24
 1698 0018 00000000 		.word	.LANCHOR17
 1699              		.cfi_endproc
 1700              	.LFE4314:
 1702              		.section	.text._Z17Update_DelayTimeRv,"ax",%progbits
 1703              		.align	1
 1704              		.p2align 2,,3
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 83


 1705              		.global	_Z17Update_DelayTimeRv
 1706              		.syntax unified
 1707              		.thumb
 1708              		.thumb_func
 1709              		.fpu fpv5-d16
 1711              	_Z17Update_DelayTimeRv:
 1712              	.LFB4315:
 882:Veno-Echo.cpp ****     static bool lastShift{};
 1713              		.loc 20 882 1 is_stmt 1 view -0
 1714              		.cfi_startproc
 1715              		@ args = 0, pretend = 0, frame = 0
 1716              		@ frame_needed = 0, uses_anonymous_args = 0
 883:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 1717              		.loc 20 883 5 view .LVU400
 884:Veno-Echo.cpp ****     static bool tapRatio_pickup{};
 1718              		.loc 20 884 5 view .LVU401
 885:Veno-Echo.cpp ****     
 1719              		.loc 20 885 5 view .LVU402
 887:Veno-Echo.cpp **** 
 1720              		.loc 20 887 5 view .LVU403
 890:Veno-Echo.cpp **** 
 1721              		.loc 20 890 5 view .LVU404
 882:Veno-Echo.cpp ****     static bool lastShift{};
 1722              		.loc 20 882 1 is_stmt 0 view .LVU405
 1723 0000 10B5     		push	{r4, lr}
 1724              		.cfi_def_cfa_offset 8
 1725              		.cfi_offset 4, -8
 1726              		.cfi_offset 14, -4
 890:Veno-Echo.cpp **** 
 1727              		.loc 20 890 44 view .LVU406
 1728 0002 0622     		movs	r2, #6
 1729 0004 0721     		movs	r1, #7
 1730 0006 6648     		ldr	r0, .L111
 882:Veno-Echo.cpp ****     static bool lastShift{};
 1731              		.loc 20 882 1 view .LVU407
 1732 0008 2DED028B 		vpush.64	{d8}
 1733              		.cfi_def_cfa_offset 16
 1734              		.cfi_offset 80, -16
 1735              		.cfi_offset 81, -12
 890:Veno-Echo.cpp **** 
 1736              		.loc 20 890 44 view .LVU408
 1737 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1738              	.LVL67:
 895:Veno-Echo.cpp **** 
 1739              		.loc 20 895 26 view .LVU409
 1740 0010 6449     		ldr	r1, .L111+4
 895:Veno-Echo.cpp **** 
 1741              		.loc 20 895 31 view .LVU410
 1742 0012 654B     		ldr	r3, .L111+8
 1743              	.LVL68:
 894:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 1744              		.loc 20 894 5 is_stmt 1 view .LVU411
 895:Veno-Echo.cpp **** 
 1745              		.loc 20 895 5 view .LVU412
 895:Veno-Echo.cpp **** 
 1746              		.loc 20 895 26 is_stmt 0 view .LVU413
 1747 0014 0A68     		ldr	r2, [r1]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 84


 1748              	.LBB975:
 897:Veno-Echo.cpp ****     {
 1749              		.loc 20 897 9 view .LVU414
 1750 0016 6548     		ldr	r0, .L111+12
 1751              	.LBE975:
 895:Veno-Echo.cpp **** 
 1752              		.loc 20 895 26 view .LVU415
 1753 0018 0132     		adds	r2, r2, #1
 1754              	.LBB1016:
 897:Veno-Echo.cpp ****     {
 1755              		.loc 20 897 5 view .LVU416
 1756 001a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1757              	.LBE1016:
 895:Veno-Echo.cpp **** 
 1758              		.loc 20 895 31 view .LVU417
 1759 001c 83FB0243 		smull	r4, r3, r3, r2
 1760 0020 D417     		asrs	r4, r2, #31
 1761 0022 C4EB6313 		rsb	r3, r4, r3, asr #5
 1762 0026 03EB4303 		add	r3, r3, r3, lsl #1
 1763 002a A2EB8313 		sub	r3, r2, r3, lsl #6
 1764              	.LBB1017:
 1765              	.LBB976:
 901:Veno-Echo.cpp ****         {
 1766              		.loc 20 901 19 view .LVU418
 1767 002e 604A     		ldr	r2, .L111+16
 1768              	.LBE976:
 1769              	.LBE1017:
 895:Veno-Echo.cpp **** 
 1770              		.loc 20 895 14 view .LVU419
 1771 0030 0B60     		str	r3, [r1]
 897:Veno-Echo.cpp ****     {
 1772              		.loc 20 897 5 is_stmt 1 view .LVU420
 1773              	.LBB1018:
 1774 0032 0028     		cmp	r0, #0
 1775 0034 37D1     		bne	.L82
 1776              	.LBB995:
 899:Veno-Echo.cpp ****         //udpate pickup
 1777              		.loc 20 899 9 view .LVU421
 901:Veno-Echo.cpp ****         {
 1778              		.loc 20 901 9 view .LVU422
 1779 0036 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1780 0038 0029     		cmp	r1, #0
 1781 003a 41D0     		beq	.L83
 903:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 1782              		.loc 20 903 13 view .LVU423
 904:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1783              		.loc 20 904 31 is_stmt 0 view .LVU424
 1784 003c 5D4C     		ldr	r4, .L111+20
 905:Veno-Echo.cpp ****         } 
 1785              		.loc 20 905 28 view .LVU425
 1786 003e 5E49     		ldr	r1, .L111+24
 903:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 1787              		.loc 20 903 23 view .LVU426
 1788 0040 1070     		strb	r0, [r2]
 904:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1789              		.loc 20 904 13 is_stmt 1 view .LVU427
 904:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 85


 1790              		.loc 20 904 31 is_stmt 0 view .LVU428
 1791 0042 2070     		strb	r0, [r4]
 905:Veno-Echo.cpp ****         } 
 1792              		.loc 20 905 13 is_stmt 1 view .LVU429
 905:Veno-Echo.cpp ****         } 
 1793              		.loc 20 905 28 is_stmt 0 view .LVU430
 1794 0044 81ED000A 		vstr.32	s0, [r1]
 1795              	.L84:
 918:Veno-Echo.cpp **** 
 1796              		.loc 20 918 9 is_stmt 1 view .LVU431
 1797              	.LVL69:
 920:Veno-Echo.cpp ****         {
 1798              		.loc 20 920 9 view .LVU432
 928:Veno-Echo.cpp ****         }
 1799              		.loc 20 928 13 view .LVU433
 1800              	.LBB977:
 1801              	.LBI977:
1853:Veno-Echo.cpp **** {
 1802              		.loc 20 1853 7 view .LVU434
 1803              	.LBB978:
1855:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1804              		.loc 20 1855 5 view .LVU435
1856:Veno-Echo.cpp **** 
 1805              		.loc 20 1856 5 view .LVU436
 1806              	.LBE978:
 1807              	.LBE977:
 928:Veno-Echo.cpp ****         }
 1808              		.loc 20 928 36 is_stmt 0 view .LVU437
 1809 0048 5C49     		ldr	r1, .L111+28
 1810              	.LBB982:
 1811              	.LBB979:
1856:Veno-Echo.cpp **** 
 1812              		.loc 20 1856 39 view .LVU438
 1813 004a B7EE007A 		vmov.f32	s14, #1.0e+0
1856:Veno-Echo.cpp **** 
 1814              		.loc 20 1856 49 view .LVU439
 1815 004e B6EE006A 		vmov.f32	s12, #5.0e-1
 1816              	.LBE979:
 1817              	.LBE982:
 928:Veno-Echo.cpp ****         }
 1818              		.loc 20 928 36 view .LVU440
 1819 0052 5B4A     		ldr	r2, .L111+32
 1820              	.LBB983:
 1821              	.LBB980:
1856:Veno-Echo.cpp **** 
 1822              		.loc 20 1856 39 view .LVU441
 1823 0054 D1ED007A 		vldr.32	s15, [r1]
1856:Veno-Echo.cpp **** 
 1824              		.loc 20 1856 12 view .LVU442
 1825 0058 F0EE006A 		vmov.f32	s13, #2.0e+0
 1826 005c 92ED008A 		vldr.32	s16, [r2]
1856:Veno-Echo.cpp **** 
 1827              		.loc 20 1856 39 view .LVU443
 1828 0060 77EE677A 		vsub.f32	s15, s14, s15
1856:Veno-Echo.cpp **** 
 1829              		.loc 20 1856 49 view .LVU444
 1830 0064 77EEC67A 		vsub.f32	s15, s15, s12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 86


1856:Veno-Echo.cpp **** 
 1831              		.loc 20 1856 12 view .LVU445
 1832 0068 A7EEA68A 		vfma.f32	s16, s15, s13
 1833              	.LVL70:
1858:Veno-Echo.cpp ****     {
 1834              		.loc 20 1858 5 is_stmt 1 view .LVU446
 1835 006c B5EEC08A 		vcmpe.f32	s16, #0
 1836 0070 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1837 0074 00F18880 		bmi	.L109
1863:Veno-Echo.cpp ****     {
 1838              		.loc 20 1863 5 view .LVU447
1865:Veno-Echo.cpp ****     }
 1839              		.loc 20 1865 16 is_stmt 0 view .LVU448
 1840 0078 B4EE478A 		vcmp.f32	s16, s14
 1841 007c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1842 0080 37FE088A 		vselgt.f32	s16, s14, s16
 1843              	.LVL71:
 1844              	.L89:
1865:Veno-Echo.cpp ****     }
 1845              		.loc 20 1865 16 view .LVU449
 1846              	.LBE980:
 1847              	.LBE983:
 931:Veno-Echo.cpp ****         {
 1848              		.loc 20 931 9 is_stmt 1 view .LVU450
 1849 0084 CBB9     		cbnz	r3, .L81
 933:Veno-Echo.cpp ****             {
 1850              		.loc 20 933 13 view .LVU451
 933:Veno-Echo.cpp ****             {
 1851              		.loc 20 933 35 is_stmt 0 view .LVU452
 1852 0086 4F48     		ldr	r0, .L111+36
 1853 0088 FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 1854              	.LVL72:
 933:Veno-Echo.cpp ****             {
 1855              		.loc 20 933 35 view .LVU453
 1856 008c 4E4B     		ldr	r3, .L111+40
 1857 008e F0EE400A 		vmov.f32	s1, s0
 1858 0092 4E48     		ldr	r0, .L111+44
 1859 0094 B0EE480A 		vmov.f32	s0, s16
 1860 0098 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1861              	.LBE995:
 1862              	.LBE1018:
 973:Veno-Echo.cpp **** void Update_feedbackL_CV()
 1863              		.loc 20 973 1 view .LVU454
 1864 009a BDEC028B 		vldm	sp!, {d8}
 1865              		.cfi_remember_state
 1866              		.cfi_restore 80
 1867              		.cfi_restore 81
 1868              		.cfi_def_cfa_offset 8
 1869              	.LVL73:
 973:Veno-Echo.cpp **** void Update_feedbackL_CV()
 1870              		.loc 20 973 1 view .LVU455
 1871 009e BDE81040 		pop	{r4, lr}
 1872              		.cfi_restore 14
 1873              		.cfi_restore 4
 1874              		.cfi_def_cfa_offset 0
 1875              	.LBB1019:
 1876              	.LBB996:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 87


 933:Veno-Echo.cpp ****             {
 1877              		.loc 20 933 35 view .LVU456
 1878 00a2 FFF7FEBF 		b	_ZN10DelayMulti12SetDelayTimeEffb
 1879              	.LVL74:
 1880              	.L82:
 1881              		.cfi_restore_state
 933:Veno-Echo.cpp ****             {
 1882              		.loc 20 933 35 view .LVU457
 1883              	.LBE996:
 1884              	.LBB997:
 943:Veno-Echo.cpp **** 
 1885              		.loc 20 943 9 is_stmt 1 view .LVU458
 945:Veno-Echo.cpp ****         {
 1886              		.loc 20 945 9 view .LVU459
 1887 00a6 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1888 00a8 002B     		cmp	r3, #0
 1889 00aa 3CD1     		bne	.L92
 947:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1890              		.loc 20 947 13 view .LVU460
 947:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1891              		.loc 20 947 23 is_stmt 0 view .LVU461
 1892 00ac 0124     		movs	r4, #1
 948:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1893              		.loc 20 948 29 view .LVU462
 1894 00ae 4848     		ldr	r0, .L111+48
 949:Veno-Echo.cpp ****         }
 1895              		.loc 20 949 26 view .LVU463
 1896 00b0 4849     		ldr	r1, .L111+52
 947:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1897              		.loc 20 947 23 view .LVU464
 1898 00b2 1470     		strb	r4, [r2]
 948:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1899              		.loc 20 948 13 is_stmt 1 view .LVU465
 948:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1900              		.loc 20 948 29 is_stmt 0 view .LVU466
 1901 00b4 0370     		strb	r3, [r0]
 949:Veno-Echo.cpp ****         }
 1902              		.loc 20 949 13 is_stmt 1 view .LVU467
 949:Veno-Echo.cpp ****         }
 1903              		.loc 20 949 26 is_stmt 0 view .LVU468
 1904 00b6 81ED000A 		vstr.32	s0, [r1]
 1905              	.L81:
 949:Veno-Echo.cpp ****         }
 1906              		.loc 20 949 26 view .LVU469
 1907              	.LBE997:
 1908              	.LBE1019:
 973:Veno-Echo.cpp **** void Update_feedbackL_CV()
 1909              		.loc 20 973 1 view .LVU470
 1910 00ba BDEC028B 		vldm	sp!, {d8}
 1911              		.cfi_remember_state
 1912              		.cfi_restore 80
 1913              		.cfi_restore 81
 1914              		.cfi_def_cfa_offset 8
 1915 00be 10BD     		pop	{r4, pc}
 1916              	.L83:
 1917              		.cfi_restore_state
 1918              	.LBB1020:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 88


 1919              	.LBB1012:
 909:Veno-Echo.cpp ****             {
 1920              		.loc 20 909 13 is_stmt 1 view .LVU471
 909:Veno-Echo.cpp ****             {
 1921              		.loc 20 909 16 is_stmt 0 view .LVU472
 1922 00c0 3C4A     		ldr	r2, .L111+20
 909:Veno-Echo.cpp ****             {
 1923              		.loc 20 909 13 view .LVU473
 1924 00c2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1925 00c4 79B9     		cbnz	r1, .L85
 911:Veno-Echo.cpp ****                 {
 1926              		.loc 20 911 17 is_stmt 1 view .LVU474
 1927              	.LVL75:
 1928              	.LBB984:
 1929              	.LBI984:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1930              		.loc 21 75 3 view .LVU475
 1931              	.LBB985:
 1932              		.loc 21 76 5 view .LVU476
 1933              		.loc 21 76 5 is_stmt 0 view .LVU477
 1934              	.LBE985:
 1935              	.LBE984:
 911:Veno-Echo.cpp ****                 {
 1936              		.loc 20 911 23 view .LVU478
 1937 00c6 3C49     		ldr	r1, .L111+24
 911:Veno-Echo.cpp ****                 {
 1938              		.loc 20 911 17 view .LVU479
 1939 00c8 9FED437A 		vldr.32	s14, .L111+56
 911:Veno-Echo.cpp ****                 {
 1940              		.loc 20 911 23 view .LVU480
 1941 00cc D1ED007A 		vldr.32	s15, [r1]
 1942 00d0 70EE677A 		vsub.f32	s15, s0, s15
 1943              	.LBB987:
 1944              	.LBB986:
 1945              		.loc 21 76 31 view .LVU481
 1946 00d4 F0EEE77A 		vabs.f32	s15, s15
 1947              	.LBE986:
 1948              	.LBE987:
 911:Veno-Echo.cpp ****                 {
 1949              		.loc 20 911 17 view .LVU482
 1950 00d8 F4EEC77A 		vcmpe.f32	s15, s14
 1951 00dc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1952 00e0 B2DD     		ble	.L84
 913:Veno-Echo.cpp ****                 }
 1953              		.loc 20 913 21 is_stmt 1 view .LVU483
 913:Veno-Echo.cpp ****                 }
 1954              		.loc 20 913 39 is_stmt 0 view .LVU484
 1955 00e2 0121     		movs	r1, #1
 1956 00e4 1170     		strb	r1, [r2]
 1957              	.L85:
 918:Veno-Echo.cpp **** 
 1958              		.loc 20 918 9 is_stmt 1 view .LVU485
 1959              	.LVL76:
 920:Veno-Echo.cpp ****         {
 1960              		.loc 20 920 9 view .LVU486
 922:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 1961              		.loc 20 922 13 view .LVU487
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 89


 1962              	.LBB988:
 1963              	.LBI988:
1853:Veno-Echo.cpp **** {
 1964              		.loc 20 1853 7 view .LVU488
 1965              	.LBB989:
1855:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1966              		.loc 20 1855 5 view .LVU489
1856:Veno-Echo.cpp **** 
 1967              		.loc 20 1856 5 view .LVU490
 1968              	.LBE989:
 1969              	.LBE988:
 922:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 1970              		.loc 20 922 36 is_stmt 0 view .LVU491
 1971 00e6 354A     		ldr	r2, .L111+28
 1972              	.LBB992:
 1973              	.LBB990:
1856:Veno-Echo.cpp **** 
 1974              		.loc 20 1856 39 view .LVU492
 1975 00e8 B7EE007A 		vmov.f32	s14, #1.0e+0
1856:Veno-Echo.cpp **** 
 1976              		.loc 20 1856 49 view .LVU493
 1977 00ec B6EE006A 		vmov.f32	s12, #5.0e-1
1856:Veno-Echo.cpp **** 
 1978              		.loc 20 1856 39 view .LVU494
 1979 00f0 D2ED007A 		vldr.32	s15, [r2]
1856:Veno-Echo.cpp **** 
 1980              		.loc 20 1856 12 view .LVU495
 1981 00f4 F0EE006A 		vmov.f32	s13, #2.0e+0
 1982 00f8 B0EE408A 		vmov.f32	s16, s0
1856:Veno-Echo.cpp **** 
 1983              		.loc 20 1856 39 view .LVU496
 1984 00fc 77EE677A 		vsub.f32	s15, s14, s15
1856:Veno-Echo.cpp **** 
 1985              		.loc 20 1856 49 view .LVU497
 1986 0100 77EEC67A 		vsub.f32	s15, s15, s12
1856:Veno-Echo.cpp **** 
 1987              		.loc 20 1856 12 view .LVU498
 1988 0104 A7EEA68A 		vfma.f32	s16, s15, s13
 1989              	.LVL77:
1858:Veno-Echo.cpp ****     {
 1990              		.loc 20 1858 5 is_stmt 1 view .LVU499
 1991 0108 B5EEC08A 		vcmpe.f32	s16, #0
 1992 010c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1993 0110 3DD4     		bmi	.L110
1863:Veno-Echo.cpp ****     {
 1994              		.loc 20 1863 5 view .LVU500
1865:Veno-Echo.cpp ****     }
 1995              		.loc 20 1865 16 is_stmt 0 view .LVU501
 1996 0112 B4EE478A 		vcmp.f32	s16, s14
 1997 0116 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1998 011a 37FE088A 		vselgt.f32	s16, s14, s16
 1999              	.LVL78:
 2000              	.L87:
 2001              		.loc 20 1868 5 is_stmt 1 view .LVU502
 2002              		.loc 20 1868 5 is_stmt 0 view .LVU503
 2003              	.LBE990:
 2004              	.LBE992:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 90


 923:Veno-Echo.cpp ****         }
 2005              		.loc 20 923 13 is_stmt 1 view .LVU504
 923:Veno-Echo.cpp ****         }
 2006              		.loc 20 923 29 is_stmt 0 view .LVU505
 2007 011e 284A     		ldr	r2, .L111+32
 2008 0120 82ED000A 		vstr.32	s0, [r2]
 2009 0124 AEE7     		b	.L89
 2010              	.LVL79:
 2011              	.L92:
 923:Veno-Echo.cpp ****         }
 2012              		.loc 20 923 29 view .LVU506
 2013              	.LBE1012:
 2014              	.LBB1013:
 954:Veno-Echo.cpp ****             {
 2015              		.loc 20 954 13 is_stmt 1 view .LVU507
 954:Veno-Echo.cpp ****             {
 2016              		.loc 20 954 16 is_stmt 0 view .LVU508
 2017 0126 2A4B     		ldr	r3, .L111+48
 954:Veno-Echo.cpp ****             {
 2018              		.loc 20 954 13 view .LVU509
 2019 0128 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2020 012a 7AB9     		cbnz	r2, .L93
 956:Veno-Echo.cpp ****                 {
 2021              		.loc 20 956 17 is_stmt 1 view .LVU510
 2022              	.LVL80:
 2023              	.LBB998:
 2024              	.LBI998:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2025              		.loc 21 75 3 view .LVU511
 2026              	.LBB999:
 2027              		.loc 21 76 5 view .LVU512
 2028              		.loc 21 76 5 is_stmt 0 view .LVU513
 2029              	.LBE999:
 2030              	.LBE998:
 956:Veno-Echo.cpp ****                 {
 2031              		.loc 20 956 23 view .LVU514
 2032 012c 294A     		ldr	r2, .L111+52
 956:Veno-Echo.cpp ****                 {
 2033              		.loc 20 956 17 view .LVU515
 2034 012e 9FED2A7A 		vldr.32	s14, .L111+56
 956:Veno-Echo.cpp ****                 {
 2035              		.loc 20 956 23 view .LVU516
 2036 0132 D2ED007A 		vldr.32	s15, [r2]
 2037 0136 70EE677A 		vsub.f32	s15, s0, s15
 2038              	.LBB1001:
 2039              	.LBB1000:
 2040              		.loc 21 76 31 view .LVU517
 2041 013a F0EEE77A 		vabs.f32	s15, s15
 2042              	.LBE1000:
 2043              	.LBE1001:
 956:Veno-Echo.cpp ****                 {
 2044              		.loc 20 956 17 view .LVU518
 2045 013e F4EEC77A 		vcmpe.f32	s15, s14
 2046 0142 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2047 0146 B8DD     		ble	.L81
 958:Veno-Echo.cpp ****                 }
 2048              		.loc 20 958 21 is_stmt 1 view .LVU519
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 91


 958:Veno-Echo.cpp ****                 }
 2049              		.loc 20 958 37 is_stmt 0 view .LVU520
 2050 0148 0122     		movs	r2, #1
 2051 014a 1A70     		strb	r2, [r3]
 2052              	.L93:
 963:Veno-Echo.cpp ****         {
 2053              		.loc 20 963 9 is_stmt 1 view .LVU521
 2054              	.LBB1002:
 2055              	.LBB1003:
 965:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
 2056              		.loc 20 965 13 view .LVU522
 2057              	.LVL81:
 966:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2058              		.loc 20 966 13 view .LVU523
 966:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2059              		.loc 20 966 61 is_stmt 0 view .LVU524
 2060 014c F0EE080A 		vmov.f32	s1, #3.0e+0
 2061 0150 0020     		movs	r0, #0
 2062 0152 9FED221A 		vldr.32	s2, .L111+60
 2063 0156 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2064              	.LVL82:
 2065              	.LBB1004:
 2066              	.LBI1004:
 2067              		.file 22 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // -*- C++ -*- C forwarding header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** /** @file include/cmath
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  as macros in C).
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 92


  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // ISO C++ 14882: 26.5  C library
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #pragma GCC system_header
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/c++config.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/cpp_type_traits.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <ext/type_traits.h>
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include_next <math.h>
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/std_abs.h>
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_CMATH
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_CMATH 1
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef div
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acos
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asin
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan2
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ceil
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cos
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cosh
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fabs
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef floor
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmod
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef frexp
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ldexp
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log10
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef modf
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef pow
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sin
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sinh
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sqrt
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tan
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tanh
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** extern "C++"
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acos;
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(float __x)
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosf(__x); }
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 93


  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(long double __x)
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosl(__x); }
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acos(_Tp __x)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acos(__x); }
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asin;
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(float __x)
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinf(__x); }
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(long double __x)
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinl(__x); }
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asin(_Tp __x)
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asin(__x); }
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan;
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(float __x)
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanf(__x); }
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(long double __x)
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanl(__x); }
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan(_Tp __x)
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atan(__x); }
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan2;
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(float __y, float __x)
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2f(__y, __x); }
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 94


 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(long double __y, long double __x)
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2l(__y, __x); }
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan2(_Tp __y, _Up __x)
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return atan2(__type(__y), __type(__x));
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ceil;
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(float __x)
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceilf(__x); }
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(long double __x)
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceill(__x); }
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ceil(_Tp __x)
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ceil(__x); }
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cos;
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(float __x)
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosf(__x); }
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(long double __x)
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosl(__x); }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cos(_Tp __x)
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cos(__x); }
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cosh;
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(float __x)
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshf(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 95


 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(long double __x)
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshl(__x); }
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cosh(_Tp __x)
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cosh(__x); }
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(float __x)
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expf(__x); }
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(long double __x)
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expl(__x); }
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp(_Tp __x)
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp(__x); }
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fabs;
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(float __x)
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsf(__x); }
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(long double __x)
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsl(__x); }
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fabs(_Tp __x)
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_fabs(__x); }
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::floor;
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(float __x)
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorf(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 96


 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(long double __x)
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorl(__x); }
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     floor(_Tp __x)
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_floor(__x); }
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmod;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(float __x, float __y)
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodf(__x, __y); }
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(long double __x, long double __y)
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodl(__x, __y); }
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmod(_Tp __x, _Up __y)
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmod(__type(__x), __type(__y));
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::frexp;
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(float __x, int* __exp)
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(long double __x, int* __exp)
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     frexp(_Tp __x, int* __exp)
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_frexp(__x, __exp); }
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ldexp;
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 97


 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(float __x, int __exp)
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(long double __x, int __exp)
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ldexp(_Tp __x, int __exp)
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log;
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(float __x)
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logf(__x); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(long double __x)
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logl(__x); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log(_Tp __x)
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log(__x); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log10;
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(float __x)
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10f(__x); }
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(long double __x)
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10l(__x); }
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log10(_Tp __x)
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log10(__x); }
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::modf;
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 98


 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(float __x, float* __iptr)
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modff(__x, __iptr); }
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(long double __x, long double* __iptr)
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::pow;
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, float __y)
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powf(__x, __y); }
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, long double __y)
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powl(__x, __y); }
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus < 201103L
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline double
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(double __x, int __i)
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powi(__x, __i); }
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, int __n)
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powif(__x, __n); }
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, int __n)
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powil(__x, __n); }
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     pow(_Tp __x, _Up __y)
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return pow(__type(__x), __type(__y));
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sin;
 422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(float __x)
 426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinf(__x); }
 427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(long double __x)
 430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinl(__x); }
 431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 99


 433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sin(_Tp __x)
 438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sin(__x); }
 439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sinh;
 441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(float __x)
 445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhf(__x); }
 446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(long double __x)
 449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhl(__x); }
 450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sinh(_Tp __x)
 457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sinh(__x); }
 458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sqrt;
 460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(float __x)
 464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtf(__x); }
 465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(long double __x)
 468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtl(__x); }
 469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sqrt(_Tp __x)
 476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sqrt(__x); }
 477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tan;
 479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(float __x)
 483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanf(__x); }
 484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(long double __x)
 487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanl(__x); }
 488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 100


 490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tan(_Tp __x)
 495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tan(__x); }
 496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tanh;
 498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(float __x)
 502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhf(__x); }
 503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(long double __x)
 506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhl(__x); }
 507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tanh(_Tp __x)
 514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tanh(__x); }
 515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_USE_C99_MATH
 517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC
 518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // These are possible macros imported from C99-land.
 520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fpclassify
 521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isfinite
 522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isinf
 523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnan
 524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnormal
 525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef signbit
 526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreater
 527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreaterequal
 528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isless
 529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessequal
 530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessgreater
 531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isunordered
 532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(float __x)
 538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(double __x)
 543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 101


 547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(long double __x)
 548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               int>::__type
 556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __x)
 557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? FP_NORMAL : FP_ZERO; }
 558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(float __x)
 563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(double __x)
 567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(long double __x)
 571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __x)
 579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return true; }
 580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(float __x)
 585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISINF \
 588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isinf;
 590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(double __x)
 593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(long double __x)
 598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 102


 604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __x)
 606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(float __x)
 612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISNAN \
 615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isnan;
 617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(double __x)
 620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(long double __x)
 625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __x)
 633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(float __x)
 639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(double __x)
 643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(long double __x)
 647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __x)
 655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? true : false; }
 656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // Note: middle-end/36757 is fixed, __builtin_signbit is type-generic.
 660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 103


 661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(float __x)
 662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(double __x)
 666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(long double __x)
 670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __x)
 678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x < 0 ? true : false; }
 679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(float __x, float __y)
 684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(double __x, double __y)
 688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(long double __x, long double __y)
 692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __x, _Up __y)
 701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__x), __type(__y));
 704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(float __x, float __y)
 710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(double __x, double __y)
 714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(long double __x, long double __y)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 104


 718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __x, _Up __y)
 727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__x), __type(__y));
 730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(float __x, float __y)
 736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(double __x, double __y)
 740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(long double __x, long double __y)
 744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __x, _Up __y)
 753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__x), __type(__y));
 756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 758:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 759:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 760:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 761:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(float __x, float __y)
 762:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 763:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 764:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 765:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(double __x, double __y)
 766:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 767:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 768:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 769:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(long double __x, long double __y)
 770:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 771:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 772:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 773:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 774:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 105


 775:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 776:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 777:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 778:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __x, _Up __y)
 779:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 780:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 781:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__x), __type(__y));
 782:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 783:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 784:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 785:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 786:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 787:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(float __x, float __y)
 788:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 789:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 790:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 791:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(double __x, double __y)
 792:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 793:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 794:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 795:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(long double __x, long double __y)
 796:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 797:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 798:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 799:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 800:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 801:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 802:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 803:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 804:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __x, _Up __y)
 805:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 806:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 807:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__x), __type(__y));
 808:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 809:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 810:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 811:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 812:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 813:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(float __x, float __y)
 814:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 815:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 816:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 817:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(double __x, double __y)
 818:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 819:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 820:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 821:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(long double __x, long double __y)
 822:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 823:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 824:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 825:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 826:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 827:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 828:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 829:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 830:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __x, _Up __y)
 831:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 106


 832:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 833:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__x), __type(__y));
 834:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 835:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 836:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 837:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 838:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 839:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 840:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 841:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 842:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __f)
 843:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 844:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 845:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 846:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				  FP_SUBNORMAL, FP_ZERO, __type(__f));
 847:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 848:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 849:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 850:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 851:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 852:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __f)
 853:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 854:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 855:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isfinite(__type(__f));
 856:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 857:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 858:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 859:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 860:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 861:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __f)
 862:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 863:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 864:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isinf(__type(__f));
 865:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 866:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 867:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 868:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 869:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 870:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __f)
 871:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 872:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 873:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnan(__type(__f));
 874:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 875:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 876:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 877:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 878:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 879:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __f)
 880:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 881:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 882:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnormal(__type(__f));
 883:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 884:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 885:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 886:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 887:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 888:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __f)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 107


 889:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 890:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 891:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_signbit(__type(__f));
 892:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 893:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 894:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 895:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 896:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 897:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __f1, _Tp __f2)
 898:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 899:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 900:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__f1), __type(__f2));
 901:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 902:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 903:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 904:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 905:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 906:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __f1, _Tp __f2)
 907:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 908:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 909:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__f1), __type(__f2));
 910:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 911:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 912:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 913:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 914:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 915:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __f1, _Tp __f2)
 916:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 917:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 918:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__f1), __type(__f2));
 919:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 920:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 921:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 922:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 923:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 924:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __f1, _Tp __f2)
 925:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 926:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 927:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__f1), __type(__f2));
 928:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 929:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 930:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 931:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 932:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 933:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __f1, _Tp __f2)
 934:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 935:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 936:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__f1), __type(__f2));
 937:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 938:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 939:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 940:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 941:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 942:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __f1, _Tp __f2)
 943:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 944:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 945:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__f1), __type(__f2));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 108


 946:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 947:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 948:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif // C++11
 949:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_FP_MACROS_DYNAMIC */
 950:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_MATH */
 951:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 952:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 953:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 954:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifdef _GLIBCXX_USE_C99_MATH_TR1
 955:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 956:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acosh
 957:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshf
 958:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshl
 959:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinh
 960:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhf
 961:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhl
 962:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanh
 963:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhf
 964:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhl
 965:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrt
 966:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtf
 967:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtl
 968:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysign
 969:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignf
 970:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignl
 971:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erf
 972:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erff
 973:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfl
 974:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfc
 975:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcf
 976:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcl
 977:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2
 978:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2f
 979:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2l
 980:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1
 981:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1f
 982:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1l
 983:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdim
 984:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdimf
 985:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdiml
 986:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fma
 987:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaf
 988:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmal
 989:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmax
 990:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxf
 991:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxl
 992:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmin
 993:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminf
 994:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminl
 995:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypot
 996:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotf
 997:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotl
 998:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogb
 999:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbf
1000:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbl
1001:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgamma
1002:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammaf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 109


1003:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammal
1004:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1005:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrint
1006:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintf
1007:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintl
1008:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llround
1009:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundf
1010:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundl
1011:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1012:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1p
1013:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pf
1014:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pl
1015:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2
1016:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2f
1017:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2l
1018:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logb
1019:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbf
1020:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbl
1021:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrint
1022:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintf
1023:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintl
1024:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lround
1025:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundf
1026:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundl
1027:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nan
1028:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanf
1029:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanl
1030:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyint
1031:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintf
1032:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintl
1033:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafter
1034:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterf
1035:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterl
1036:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttoward
1037:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardf
1038:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardl
1039:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainder
1040:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderf
1041:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderl
1042:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquo
1043:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquof
1044:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquol
1045:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rint
1046:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintf
1047:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintl
1048:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef round
1049:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundf
1050:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundl
1051:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbln
1052:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnf
1053:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnl
1054:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbn
1055:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnf
1056:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnl
1057:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgamma
1058:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammaf
1059:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammal
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 110


1060:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef trunc
1061:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncf
1062:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncl
1063:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1064:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // types
1065:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::double_t;
1066:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::float_t;
1067:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1068:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // functions
1069:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acosh;
1070:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshf;
1071:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshl;
1072:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1073:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinh;
1074:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhf;
1075:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhl;
1076:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1077:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanh;
1078:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhf;
1079:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhl;
1080:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1081:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrt;
1082:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtf;
1083:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtl;
1084:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1085:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysign;
1086:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignf;
1087:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignl;
1088:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1089:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erf;
1090:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erff;
1091:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfl;
1092:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1093:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfc;
1094:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcf;
1095:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcl;
1096:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1097:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2;
1098:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2f;
1099:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2l;
1100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1;
1102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1f;
1103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1l;
1104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdim;
1106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdimf;
1107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdiml;
1108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fma;
1110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaf;
1111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmal;
1112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmax;
1114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxf;
1115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxl;
1116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 111


1117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmin;
1118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminf;
1119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminl;
1120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypot;
1122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotf;
1123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotl;
1124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogb;
1126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbf;
1127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbl;
1128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgamma;
1130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammaf;
1131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammal;
1132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrint;
1135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintf;
1136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintl;
1137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llround;
1139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundf;
1140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundl;
1141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1p;
1144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pf;
1145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pl;
1146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2;
1148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2f;
1149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2l;
1150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logb;
1152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbf;
1153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbl;
1154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrint;
1156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintf;
1157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintl;
1158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lround;
1160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundf;
1161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundl;
1162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nan;
1164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanf;
1165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanl;
1166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyint;
1168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintf;
1169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintl;
1170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafter;
1172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterf;
1173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterl;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 112


1174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttoward;
1176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardf;
1177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardl;
1178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainder;
1180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderf;
1181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderl;
1182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquo;
1184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquof;
1185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquol;
1186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rint;
1188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintf;
1189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintl;
1190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::round;
1192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundf;
1193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundl;
1194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbln;
1196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnf;
1197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnl;
1198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbn;
1200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnf;
1201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnl;
1202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgamma;
1204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammaf;
1205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammal;
1206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::trunc;
1208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncf;
1209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncl;
1210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   /// Additional overloads.
1212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(float __x)
1215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshf(__x); }
1216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(long double __x)
1219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshl(__x); }
1220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acosh(_Tp __x)
1227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acosh(__x); }
1228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 113


1231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(float __x)
1233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhf(__x); }
1234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(long double __x)
1237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhl(__x); }
1238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asinh(_Tp __x)
1245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asinh(__x); }
1246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(float __x)
1251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhf(__x); }
1252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(long double __x)
1255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhl(__x); }
1256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atanh(_Tp __x)
1263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atanh(__x); }
1264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(float __x)
1269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtf(__x); }
1270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(long double __x)
1273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtl(__x); }
1274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cbrt(_Tp __x)
1281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cbrt(__x); }
1282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(float __x, float __y)
1287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignf(__x, __y); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 114


1288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(long double __x, long double __y)
1291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignl(__x, __y); }
1292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     copysign(_Tp __x, _Up __y)
1298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return copysign(__type(__x), __type(__y));
1301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(float __x)
1307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erff(__x); }
1308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(long double __x)
1311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfl(__x); }
1312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erf(_Tp __x)
1319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erf(__x); }
1320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(float __x)
1325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcf(__x); }
1326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(long double __x)
1329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcl(__x); }
1330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erfc(_Tp __x)
1337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erfc(__x); }
1338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(float __x)
1343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2f(__x); }
1344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 115


1345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(long double __x)
1347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2l(__x); }
1348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp2(_Tp __x)
1355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp2(__x); }
1356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(float __x)
1361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1f(__x); }
1362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(long double __x)
1365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1l(__x); }
1366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     expm1(_Tp __x)
1373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_expm1(__x); }
1374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(float __x, float __y)
1379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdimf(__x, __y); }
1380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(long double __x, long double __y)
1383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdiml(__x, __y); }
1384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fdim(_Tp __x, _Up __y)
1390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fdim(__type(__x), __type(__y));
1393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(float __x, float __y, float __z)
1399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaf(__x, __y, __z); }
1400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 116


1402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(long double __x, long double __y, long double __z)
1403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmal(__x, __y, __z); }
1404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up, typename _Vp>
1408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type
1409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fma(_Tp __x, _Up __y, _Vp __z)
1410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type __type;
1412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fma(__type(__x), __type(__y), __type(__z));
1413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(float __x, float __y)
1419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxf(__x, __y); }
1420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(long double __x, long double __y)
1423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxl(__x, __y); }
1424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmax(_Tp __x, _Up __y)
1430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmax(__type(__x), __type(__y));
1433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(float __x, float __y)
1439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminf(__x, __y); }
1440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(long double __x, long double __y)
1443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminl(__x, __y); }
1444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmin(_Tp __x, _Up __y)
1450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmin(__type(__x), __type(__y));
1453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(float __x, float __y)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 117


1459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotf(__x, __y); }
1460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(long double __x, long double __y)
1463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotl(__x, __y); }
1464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     hypot(_Tp __x, _Up __y)
1470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return hypot(__type(__x), __type(__y));
1473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(float __x)
1479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbf(__x); }
1480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(long double __x)
1483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbl(__x); }
1484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr
1489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     int>::__type
1491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ilogb(_Tp __x)
1492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ilogb(__x); }
1493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(float __x)
1498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammaf(__x); }
1499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(long double __x)
1502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammal(__x); }
1503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lgamma(_Tp __x)
1510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lgamma(__x); }
1511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(float __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 118


1516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintf(__x); }
1517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(long double __x)
1520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintl(__x); }
1521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llrint(_Tp __x)
1528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llrint(__x); }
1529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(float __x)
1534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundf(__x); }
1535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(long double __x)
1538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundl(__x); }
1539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llround(_Tp __x)
1546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llround(__x); }
1547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(float __x)
1552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pf(__x); }
1553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(long double __x)
1556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pl(__x); }
1557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log1p(_Tp __x)
1564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log1p(__x); }
1565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 568.
1569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(float __x)
1571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2f(__x); }
1572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 119


1573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(long double __x)
1575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2l(__x); }
1576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log2(_Tp __x)
1583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log2(__x); }
1584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(float __x)
1589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbf(__x); }
1590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(long double __x)
1593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbl(__x); }
1594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     logb(_Tp __x)
1601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_logb(__x); }
1602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(float __x)
1607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintf(__x); }
1608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(long double __x)
1611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintl(__x); }
1612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lrint(_Tp __x)
1619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lrint(__x); }
1620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(float __x)
1625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundf(__x); }
1626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(long double __x)
1629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundl(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 120


1630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lround(_Tp __x)
1637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lround(__x); }
1638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(float __x)
1643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintf(__x); }
1644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(long double __x)
1647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintl(__x); }
1648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nearbyint(_Tp __x)
1655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nearbyint(__x); }
1656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(float __x, float __y)
1661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterf(__x, __y); }
1662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(long double __x, long double __y)
1665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterl(__x, __y); }
1666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nextafter(_Tp __x, _Up __y)
1672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return nextafter(__type(__x), __type(__y));
1675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(float __x, long double __y)
1681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardf(__x, __y); }
1682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(long double __x, long double __y)
1685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardl(__x, __y); }
1686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 121


1687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nexttoward(_Tp __x, long double __y)
1693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nexttoward(__x, __y); }
1694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(float __x, float __y)
1699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderf(__x, __y); }
1700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(long double __x, long double __y)
1703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderl(__x, __y); }
1704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remainder(_Tp __x, _Up __y)
1710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remainder(__type(__x), __type(__y));
1713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
1718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(float __x, float __y, int* __pquo)
1719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquof(__x, __y, __pquo); }
1720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
1722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(long double __x, long double __y, int* __pquo)
1723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquol(__x, __y, __pquo); }
1724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remquo(_Tp __x, _Up __y, int* __pquo)
1730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remquo(__type(__x), __type(__y), __pquo);
1733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(float __x)
1739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintf(__x); }
1740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(long double __x)
1743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintl(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 122


1744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     rint(_Tp __x)
1751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_rint(__x); }
1752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   round(float __x)
 2068              		.loc 22 1756 3 is_stmt 1 view .LVU525
 2069              	.LBB1005:
1757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_roundf(__x); }
 2070              		.loc 22 1757 5 view .LVU526
 2071              		.loc 22 1757 28 is_stmt 0 view .LVU527
 2072 015a B8FE400A 		vrinta.f32	s0, s0
 2073              	.LVL83:
 2074              		.loc 22 1757 28 view .LVU528
 2075              	.LBE1005:
 2076              	.LBE1004:
 967:Veno-Echo.cpp ****             //save setting:
 2077              		.loc 20 967 13 is_stmt 1 view .LVU529
 2078              	.LBB1006:
 2079              	.LBI1006:
1869:Veno-Echo.cpp **** }
1870:Veno-Echo.cpp **** 
1871:Veno-Echo.cpp **** //checks pickup state of primary controls
1872:Veno-Echo.cpp **** bool checkPickupState(float value, float lastValue, bool lastState, bool ShiftChange)
1873:Veno-Echo.cpp **** {
1874:Veno-Echo.cpp ****     bool retval{};
1875:Veno-Echo.cpp ****     
1876:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change to not picked up, unless there's been no change
1877:Veno-Echo.cpp ****     {
1878:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
1879:Veno-Echo.cpp ****         {
1880:Veno-Echo.cpp ****             retval = false;
1881:Veno-Echo.cpp ****         }
1882:Veno-Echo.cpp ****         else
1883:Veno-Echo.cpp ****         {
1884:Veno-Echo.cpp ****             retval = true;
1885:Veno-Echo.cpp ****         }
1886:Veno-Echo.cpp ****     }
1887:Veno-Echo.cpp **** 
1888:Veno-Echo.cpp ****     else //not recent shift change, change to pickup if there's been a change since last shift chan
1889:Veno-Echo.cpp ****     {
1890:Veno-Echo.cpp ****     if(!lastState) //if not picked up
1891:Veno-Echo.cpp ****     {
1892:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
1893:Veno-Echo.cpp ****         {
1894:Veno-Echo.cpp ****             retval = true;
1895:Veno-Echo.cpp ****         }
1896:Veno-Echo.cpp **** 
1897:Veno-Echo.cpp ****         else
1898:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 123


1899:Veno-Echo.cpp ****             retval = false;
1900:Veno-Echo.cpp ****         }
1901:Veno-Echo.cpp **** 
1902:Veno-Echo.cpp ****     }
1903:Veno-Echo.cpp ****     else    //previous state is picked up
1904:Veno-Echo.cpp ****     {
1905:Veno-Echo.cpp ****         retval = true;  //always return true
1906:Veno-Echo.cpp ****     }
1907:Veno-Echo.cpp **** 
1908:Veno-Echo.cpp ****     }
1909:Veno-Echo.cpp ****     return retval;
1910:Veno-Echo.cpp **** 
1911:Veno-Echo.cpp **** }
1912:Veno-Echo.cpp **** 
1913:Veno-Echo.cpp **** //Checks pickup state of secondary controls
1914:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
1915:Veno-Echo.cpp **** {
1916:Veno-Echo.cpp ****     pickupState retval{};
1917:Veno-Echo.cpp **** 
1918:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
1919:Veno-Echo.cpp ****     {
1920:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
1921:Veno-Echo.cpp ****         {
1922:Veno-Echo.cpp ****             retval = BELOW;
1923:Veno-Echo.cpp ****         }
1924:Veno-Echo.cpp ****         
1925:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
1926:Veno-Echo.cpp ****         {
1927:Veno-Echo.cpp ****             retval = ABOVE;
1928:Veno-Echo.cpp ****         }
1929:Veno-Echo.cpp **** 
1930:Veno-Echo.cpp ****         else    //within tolerance i.e. unchanged
1931:Veno-Echo.cpp ****         {
1932:Veno-Echo.cpp ****             retval = PICKEDUP;
1933:Veno-Echo.cpp ****         }
1934:Veno-Echo.cpp ****     }
1935:Veno-Echo.cpp **** 
1936:Veno-Echo.cpp ****     else    //not a recent shift change
1937:Veno-Echo.cpp ****     {
1938:Veno-Echo.cpp ****         switch(lastState)
1939:Veno-Echo.cpp ****         {
1940:Veno-Echo.cpp ****             case BELOW:
1941:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
1942:Veno-Echo.cpp ****                 retval = PICKEDUP;
1943:Veno-Echo.cpp ****             else
1944:Veno-Echo.cpp ****                 retval = lastState;
1945:Veno-Echo.cpp ****             break;
1946:Veno-Echo.cpp **** 
1947:Veno-Echo.cpp ****             case ABOVE:
1948:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
1949:Veno-Echo.cpp ****                 retval = PICKEDUP;
1950:Veno-Echo.cpp ****             else
1951:Veno-Echo.cpp ****                 retval = lastState;
1952:Veno-Echo.cpp ****             break;
1953:Veno-Echo.cpp ****             case PICKEDUP:
1954:Veno-Echo.cpp ****                 retval = lastState;
1955:Veno-Echo.cpp ****             break;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 124


1956:Veno-Echo.cpp ****         }
1957:Veno-Echo.cpp ****     }
1958:Veno-Echo.cpp ****     
1959:Veno-Echo.cpp ****     return retval;
1960:Veno-Echo.cpp **** }
1961:Veno-Echo.cpp **** 
1962:Veno-Echo.cpp **** float GetTapRatio(TapRatios ratio)
 2080              		.loc 20 1962 7 view .LVU530
 2081              	.LBB1007:
1963:Veno-Echo.cpp **** {
1964:Veno-Echo.cpp **** float retVal{};
 2082              		.loc 20 1964 1 view .LVU531
1965:Veno-Echo.cpp ****     switch(ratio)
 2083              		.loc 20 1965 5 view .LVU532
 2084              	.LBE1007:
 2085              	.LBE1006:
 966:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2086              		.loc 20 966 130 is_stmt 0 view .LVU533
 2087 015e FCEEC07A 		vcvt.u32.f32	s15, s0
 2088 0162 17EE903A 		vmov	r3, s15	@ int
 2089 0166 013B     		subs	r3, r3, #1
 2090 0168 DBB2     		uxtb	r3, r3
 2091 016a 022B     		cmp	r3, #2
 2092 016c 12D9     		bls	.L97
 2093 016e B7EE008A 		vmov.f32	s16, #1.0e+0
 2094              	.L98:
 2095              	.LVL84:
 2096              	.LBB1009:
 2097              	.LBB1008:
1966:Veno-Echo.cpp ****     {
1967:Veno-Echo.cpp ****         case QUARTER:
1968:Veno-Echo.cpp ****         retVal = 1.0f;
1969:Veno-Echo.cpp ****         break;
1970:Veno-Echo.cpp **** 
1971:Veno-Echo.cpp ****         case DOTTED_EIGHT:
1972:Veno-Echo.cpp ****         retVal = 3.0f/2.0f;
1973:Veno-Echo.cpp ****         break;
1974:Veno-Echo.cpp **** 
1975:Veno-Echo.cpp ****         case EIGHT:
1976:Veno-Echo.cpp ****         retVal = 2.0f;
1977:Veno-Echo.cpp ****         break;
1978:Veno-Echo.cpp **** 
1979:Veno-Echo.cpp ****         case TWELVE:
1980:Veno-Echo.cpp ****         retVal = 3.0f;
1981:Veno-Echo.cpp ****         break;
1982:Veno-Echo.cpp **** 
1983:Veno-Echo.cpp ****         default:
1984:Veno-Echo.cpp ****         retVal = 1.0f;
1985:Veno-Echo.cpp ****         break;
1986:Veno-Echo.cpp ****     }
1987:Veno-Echo.cpp **** 
1988:Veno-Echo.cpp **** return retVal;
 2098              		.loc 20 1988 1 is_stmt 1 view .LVU534
 2099              		.loc 20 1988 1 is_stmt 0 view .LVU535
 2100              	.LBE1008:
 2101              	.LBE1009:
 967:Veno-Echo.cpp ****             //save setting:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 125


 2102              		.loc 20 967 34 view .LVU536
 2103 0172 B0EE480A 		vmov.f32	s0, s16
 2104              	.LVL85:
 967:Veno-Echo.cpp ****             //save setting:
 2105              		.loc 20 967 34 view .LVU537
 2106 0176 1348     		ldr	r0, .L111+36
 2107 0178 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 2108              	.LVL86:
 969:Veno-Echo.cpp ****         }
 2109              		.loc 20 969 13 is_stmt 1 view .LVU538
 969:Veno-Echo.cpp ****         }
 2110              		.loc 20 969 13 is_stmt 0 view .LVU539
 2111              	.LBE1003:
 2112              	.LBE1002:
 2113              	.LBE1013:
 2114              	.LBE1020:
1964:Veno-Echo.cpp ****     switch(ratio)
 2115              		.loc 20 1964 1 is_stmt 1 view .LVU540
1965:Veno-Echo.cpp ****     {
 2116              		.loc 20 1965 5 view .LVU541
 2117              		.loc 20 1988 1 view .LVU542
 2118              	.LBB1021:
 2119              	.LBB1014:
 2120              	.LBB1011:
 2121              	.LBB1010:
 969:Veno-Echo.cpp ****         }
 2122              		.loc 20 969 34 is_stmt 0 view .LVU543
 2123 017c 184B     		ldr	r3, .L111+64
 2124 017e 83ED018A 		vstr.32	s16, [r3, #4]
 2125              	.LBE1010:
 2126              	.LBE1011:
 2127              	.LBE1014:
 2128              	.LBE1021:
 973:Veno-Echo.cpp **** void Update_feedbackL_CV()
 2129              		.loc 20 973 1 view .LVU544
 2130 0182 BDEC028B 		vldm	sp!, {d8}
 2131              		.cfi_remember_state
 2132              		.cfi_restore 80
 2133              		.cfi_restore 81
 2134              		.cfi_def_cfa_offset 8
 2135 0186 10BD     		pop	{r4, pc}
 2136              	.LVL87:
 2137              	.L109:
 2138              		.cfi_restore_state
 2139              	.LBB1022:
 2140              	.LBB1015:
 2141              	.LBB993:
 2142              	.LBB981:
1860:Veno-Echo.cpp ****     }
 2143              		.loc 20 1860 16 view .LVU545
 2144 0188 9FED148A 		vldr.32	s16, .L111+60
 2145              	.LVL88:
1860:Veno-Echo.cpp ****     }
 2146              		.loc 20 1860 16 view .LVU546
 2147 018c 7AE7     		b	.L89
 2148              	.LVL89:
 2149              	.L110:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 126


1860:Veno-Echo.cpp ****     }
 2150              		.loc 20 1860 16 view .LVU547
 2151              	.LBE981:
 2152              	.LBE993:
 2153              	.LBB994:
 2154              	.LBB991:
 2155 018e 9FED138A 		vldr.32	s16, .L111+60
 2156              	.LVL90:
1860:Veno-Echo.cpp ****     }
 2157              		.loc 20 1860 16 view .LVU548
 2158 0192 C4E7     		b	.L87
 2159              	.LVL91:
 2160              	.L97:
1860:Veno-Echo.cpp ****     }
 2161              		.loc 20 1860 16 view .LVU549
 2162 0194 134A     		ldr	r2, .L111+68
 2163 0196 02EB8303 		add	r3, r2, r3, lsl #2
 2164 019a 93ED008A 		vldr.32	s16, [r3]
 2165 019e E8E7     		b	.L98
 2166              	.L112:
 2167              		.align	2
 2168              	.L111:
 2169 01a0 18000000 		.word	.LANCHOR4+24
 2170 01a4 00000000 		.word	.LANCHOR18
 2171 01a8 ABAAAA2A 		.word	715827883
 2172 01ac 00000000 		.word	.LANCHOR7
 2173 01b0 00000000 		.word	.LANCHOR19
 2174 01b4 00000000 		.word	.LANCHOR20
 2175 01b8 00000000 		.word	.LANCHOR21
 2176 01bc 00000000 		.word	.LANCHOR17
 2177 01c0 00000000 		.word	.LANCHOR22
 2178 01c4 00000000 		.word	.LANCHOR12
 2179 01c8 00000000 		.word	.LANCHOR13
 2180 01cc 00000000 		.word	.LANCHOR1
 2181 01d0 00000000 		.word	.LANCHOR23
 2182 01d4 00000000 		.word	.LANCHOR24
 2183 01d8 0AD7A33B 		.word	1000593162
 2184 01dc 00000000 		.word	0
 2185 01e0 00000000 		.word	.LANCHOR16
 2186 01e4 00000000 		.word	.LANCHOR25
 2187              	.LBE991:
 2188              	.LBE994:
 2189              	.LBE1015:
 2190              	.LBE1022:
 2191              		.cfi_endproc
 2192              	.LFE4315:
 2194              		.section	.text._Z19Update_feedbackL_CVv,"ax",%progbits
 2195              		.align	1
 2196              		.p2align 2,,3
 2197              		.global	_Z19Update_feedbackL_CVv
 2198              		.syntax unified
 2199              		.thumb
 2200              		.thumb_func
 2201              		.fpu fpv5-d16
 2203              	_Z19Update_feedbackL_CVv:
 2204              	.LFB4316:
 975:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 127


 2205              		.loc 20 975 1 is_stmt 1 view -0
 2206              		.cfi_startproc
 2207              		@ args = 0, pretend = 0, frame = 0
 2208              		@ frame_needed = 0, uses_anonymous_args = 0
 976:Veno-Echo.cpp **** }
 2209              		.loc 20 976 5 view .LVU551
 975:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 2210              		.loc 20 975 1 is_stmt 0 view .LVU552
 2211 0000 08B5     		push	{r3, lr}
 2212              		.cfi_def_cfa_offset 8
 2213              		.cfi_offset 3, -8
 2214              		.cfi_offset 14, -4
 976:Veno-Echo.cpp **** }
 2215              		.loc 20 976 35 view .LVU553
 2216 0002 0221     		movs	r1, #2
 2217 0004 0348     		ldr	r0, .L115
 2218 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2219              	.LVL92:
 976:Veno-Echo.cpp **** }
 2220              		.loc 20 976 18 view .LVU554
 2221 000a 034B     		ldr	r3, .L115+4
 2222 000c 83ED000A 		vstr.32	s0, [r3]
 977:Veno-Echo.cpp **** void Update_feedbackL()
 2223              		.loc 20 977 1 view .LVU555
 2224 0010 08BD     		pop	{r3, pc}
 2225              	.L116:
 2226 0012 00BF     		.align	2
 2227              	.L115:
 2228 0014 18000000 		.word	.LANCHOR4+24
 2229 0018 00000000 		.word	.LANCHOR26
 2230              		.cfi_endproc
 2231              	.LFE4316:
 2233              		.section	.text._Z16Update_feedbackLv,"ax",%progbits
 2234              		.align	1
 2235              		.p2align 2,,3
 2236              		.global	_Z16Update_feedbackLv
 2237              		.syntax unified
 2238              		.thumb
 2239              		.thumb_func
 2240              		.fpu fpv5-d16
 2242              	_Z16Update_feedbackLv:
 2243              	.LFB4317:
 979:Veno-Echo.cpp ****     static bool lastShift{};
 2244              		.loc 20 979 1 is_stmt 1 view -0
 2245              		.cfi_startproc
 2246              		@ args = 0, pretend = 0, frame = 0
 2247              		@ frame_needed = 0, uses_anonymous_args = 0
 980:Veno-Echo.cpp ****     static bool feedbackL_pickup{};
 2248              		.loc 20 980 5 view .LVU557
 981:Veno-Echo.cpp ****     static bool HPCutoff_pickup{};
 2249              		.loc 20 981 5 view .LVU558
 982:Veno-Echo.cpp **** 
 2250              		.loc 20 982 5 view .LVU559
 984:Veno-Echo.cpp **** 
 2251              		.loc 20 984 5 view .LVU560
 988:Veno-Echo.cpp **** 
 2252              		.loc 20 988 5 view .LVU561
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 128


 988:Veno-Echo.cpp **** 
 2253              		.loc 20 988 43 is_stmt 0 view .LVU562
 2254 0000 0122     		movs	r2, #1
 2255 0002 0721     		movs	r1, #7
 2256 0004 6248     		ldr	r0, .L145
 979:Veno-Echo.cpp ****     static bool lastShift{};
 2257              		.loc 20 979 1 view .LVU563
 2258 0006 10B5     		push	{r4, lr}
 2259              		.cfi_def_cfa_offset 8
 2260              		.cfi_offset 4, -8
 2261              		.cfi_offset 14, -4
 2262 0008 2DED028B 		vpush.64	{d8}
 2263              		.cfi_def_cfa_offset 16
 2264              		.cfi_offset 80, -16
 2265              		.cfi_offset 81, -12
 988:Veno-Echo.cpp **** 
 2266              		.loc 20 988 43 view .LVU564
 2267 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2268              	.LVL93:
 2269              	.LBB1023:
 990:Veno-Echo.cpp ****     {   
 2270              		.loc 20 990 9 view .LVU565
 2271 0010 604B     		ldr	r3, .L145+4
 2272              	.LVL94:
 990:Veno-Echo.cpp ****     {   
 2273              		.loc 20 990 9 view .LVU566
 2274              	.LBE1023:
 990:Veno-Echo.cpp ****     {   
 2275              		.loc 20 990 5 is_stmt 1 view .LVU567
 2276              	.LBB1059:
 2277              	.LBB1024:
 994:Veno-Echo.cpp ****         {
 2278              		.loc 20 994 19 is_stmt 0 view .LVU568
 2279 0012 614A     		ldr	r2, .L145+8
 2280              	.LBE1024:
 990:Veno-Echo.cpp ****     {   
 2281              		.loc 20 990 5 view .LVU569
 2282 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2283 0016 002B     		cmp	r3, #0
 2284 0018 3DD1     		bne	.L118
 2285              	.LBB1047:
 992:Veno-Echo.cpp ****         //update pickup
 2286              		.loc 20 992 9 is_stmt 1 view .LVU570
 994:Veno-Echo.cpp ****         {
 2287              		.loc 20 994 9 view .LVU571
 2288 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2289 001c 0029     		cmp	r1, #0
 2290 001e 47D0     		beq	.L119
 996:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 2291              		.loc 20 996 13 view .LVU572
 997:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2292              		.loc 20 997 30 is_stmt 0 view .LVU573
 2293 0020 5E48     		ldr	r0, .L145+12
 998:Veno-Echo.cpp ****         } 
 2294              		.loc 20 998 27 view .LVU574
 2295 0022 5F49     		ldr	r1, .L145+16
 996:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 129


 2296              		.loc 20 996 23 view .LVU575
 2297 0024 1370     		strb	r3, [r2]
 997:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2298              		.loc 20 997 13 is_stmt 1 view .LVU576
 997:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2299              		.loc 20 997 30 is_stmt 0 view .LVU577
 2300 0026 0370     		strb	r3, [r0]
 998:Veno-Echo.cpp ****         } 
 2301              		.loc 20 998 13 is_stmt 1 view .LVU578
 998:Veno-Echo.cpp ****         } 
 2302              		.loc 20 998 27 is_stmt 0 view .LVU579
 2303 0028 81ED000A 		vstr.32	s0, [r1]
 2304              	.L120:
1011:Veno-Echo.cpp **** 
 2305              		.loc 20 1011 9 is_stmt 1 view .LVU580
 2306              	.LVL95:
1013:Veno-Echo.cpp ****         {
 2307              		.loc 20 1013 9 view .LVU581
1021:Veno-Echo.cpp ****         }
 2308              		.loc 20 1021 13 view .LVU582
 2309              	.LBB1025:
 2310              	.LBI1025:
1853:Veno-Echo.cpp **** {
 2311              		.loc 20 1853 7 view .LVU583
 2312              	.LBB1026:
1855:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2313              		.loc 20 1855 5 view .LVU584
1856:Veno-Echo.cpp **** 
 2314              		.loc 20 1856 5 view .LVU585
 2315              	.LBE1026:
 2316              	.LBE1025:
1021:Veno-Echo.cpp ****         }
 2317              		.loc 20 1021 41 is_stmt 0 view .LVU586
 2318 002c 5D4A     		ldr	r2, .L145+20
 2319              	.LBB1030:
 2320              	.LBB1027:
1856:Veno-Echo.cpp **** 
 2321              		.loc 20 1856 39 view .LVU587
 2322 002e F7EE006A 		vmov.f32	s13, #1.0e+0
1856:Veno-Echo.cpp **** 
 2323              		.loc 20 1856 49 view .LVU588
 2324 0032 F6EE005A 		vmov.f32	s11, #5.0e-1
 2325              	.LBE1027:
 2326              	.LBE1030:
1021:Veno-Echo.cpp ****         }
 2327              		.loc 20 1021 41 view .LVU589
 2328 0036 5C4B     		ldr	r3, .L145+24
 2329              	.LBB1031:
 2330              	.LBB1028:
1856:Veno-Echo.cpp **** 
 2331              		.loc 20 1856 39 view .LVU590
 2332 0038 92ED007A 		vldr.32	s14, [r2]
1856:Veno-Echo.cpp **** 
 2333              		.loc 20 1856 12 view .LVU591
 2334 003c B0EE006A 		vmov.f32	s12, #2.0e+0
 2335 0040 D3ED007A 		vldr.32	s15, [r3]
1856:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 130


 2336              		.loc 20 1856 39 view .LVU592
 2337 0044 36EEC77A 		vsub.f32	s14, s13, s14
1856:Veno-Echo.cpp **** 
 2338              		.loc 20 1856 49 view .LVU593
 2339 0048 37EE657A 		vsub.f32	s14, s14, s11
1856:Veno-Echo.cpp **** 
 2340              		.loc 20 1856 12 view .LVU594
 2341 004c E7EE067A 		vfma.f32	s15, s14, s12
 2342              	.LVL96:
1858:Veno-Echo.cpp ****     {
 2343              		.loc 20 1858 5 is_stmt 1 view .LVU595
 2344 0050 F5EEC07A 		vcmpe.f32	s15, #0
 2345 0054 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2346 0058 00F19380 		bmi	.L143
1863:Veno-Echo.cpp ****     {
 2347              		.loc 20 1863 5 view .LVU596
1865:Veno-Echo.cpp ****     }
 2348              		.loc 20 1865 16 is_stmt 0 view .LVU597
 2349 005c F4EE667A 		vcmp.f32	s15, s13
 2350 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2351 0064 76FEA77A 		vselgt.f32	s15, s13, s15
 2352              	.LVL97:
 2353              	.L125:
1865:Veno-Echo.cpp ****     }
 2354              		.loc 20 1865 16 view .LVU598
 2355              	.LBE1028:
 2356              	.LBE1031:
1024:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2357              		.loc 20 1024 9 is_stmt 1 view .LVU599
1024:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2358              		.loc 20 1024 37 is_stmt 0 view .LVU600
 2359 0068 B0EE670A 		vmov.f32	s0, s15
 2360              	.LVL98:
1024:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2361              		.loc 20 1024 37 view .LVU601
 2362 006c 0020     		movs	r0, #0
 2363 006e B7EE041A 		vmov.f32	s2, #1.25e+0
 2364 0072 DFED4E0A 		vldr.32	s1, .L145+28
 2365 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2366              	.LVL99:
1025:Veno-Echo.cpp ****     }
 2367              		.loc 20 1025 9 is_stmt 1 view .LVU602
 2368              	.LBB1032:
 2369              	.LBI1032:
 2370              		.file 23 "../DaisySP/Source/Utility/dsp.h"
   1:../DaisySP/Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../DaisySP/Source/Utility/dsp.h **** */
   3:../DaisySP/Source/Utility/dsp.h **** #pragma once
   4:../DaisySP/Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
   5:../DaisySP/Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../DaisySP/Source/Utility/dsp.h **** #include <cassert>
   7:../DaisySP/Source/Utility/dsp.h **** #include <cstdint>
   8:../DaisySP/Source/Utility/dsp.h **** #include <random>
   9:../DaisySP/Source/Utility/dsp.h **** #include <cmath>
  10:../DaisySP/Source/Utility/dsp.h **** 
  11:../DaisySP/Source/Utility/dsp.h **** /** PIs
  12:../DaisySP/Source/Utility/dsp.h **** */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 131


  13:../DaisySP/Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../DaisySP/Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../DaisySP/Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../DaisySP/Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../DaisySP/Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  18:../DaisySP/Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../DaisySP/Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../DaisySP/Source/Utility/dsp.h **** 
  21:../DaisySP/Source/Utility/dsp.h **** namespace daisysp
  22:../DaisySP/Source/Utility/dsp.h **** {
  23:../DaisySP/Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../DaisySP/Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../DaisySP/Source/Utility/dsp.h **** 
  26:../DaisySP/Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../DaisySP/Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../DaisySP/Source/Utility/dsp.h **** 
  29:../DaisySP/Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../DaisySP/Source/Utility/dsp.h **** c/o stephen mccaul
  31:../DaisySP/Source/Utility/dsp.h **** */
  32:../DaisySP/Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../DaisySP/Source/Utility/dsp.h **** {
  34:../DaisySP/Source/Utility/dsp.h ****     float r;
  35:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  36:../DaisySP/Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../DaisySP/Source/Utility/dsp.h **** #else
  38:../DaisySP/Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  40:../DaisySP/Source/Utility/dsp.h ****     return r;
  41:../DaisySP/Source/Utility/dsp.h **** }
  42:../DaisySP/Source/Utility/dsp.h **** 
  43:../DaisySP/Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../DaisySP/Source/Utility/dsp.h **** {
  45:../DaisySP/Source/Utility/dsp.h ****     float r;
  46:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  47:../DaisySP/Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  48:../DaisySP/Source/Utility/dsp.h **** #else
  49:../DaisySP/Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  50:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  51:../DaisySP/Source/Utility/dsp.h ****     return r;
  52:../DaisySP/Source/Utility/dsp.h **** }
  53:../DaisySP/Source/Utility/dsp.h **** 
  54:../DaisySP/Source/Utility/dsp.h **** /** quick fp clamp
  55:../DaisySP/Source/Utility/dsp.h **** */
  56:../DaisySP/Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../DaisySP/Source/Utility/dsp.h **** {
  58:../DaisySP/Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../DaisySP/Source/Utility/dsp.h **** }
  60:../DaisySP/Source/Utility/dsp.h **** 
  61:../DaisySP/Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  62:../DaisySP/Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../DaisySP/Source/Utility/dsp.h **** These are approximations
  64:../DaisySP/Source/Utility/dsp.h **** */
  65:../DaisySP/Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../DaisySP/Source/Utility/dsp.h **** {
  67:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  68:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 132


  70:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../DaisySP/Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  74:../DaisySP/Source/Utility/dsp.h ****     return f;
  75:../DaisySP/Source/Utility/dsp.h **** }
  76:../DaisySP/Source/Utility/dsp.h **** 
  77:../DaisySP/Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  78:../DaisySP/Source/Utility/dsp.h **** {
  79:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  80:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  82:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../DaisySP/Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  86:../DaisySP/Source/Utility/dsp.h ****     return f;
  87:../DaisySP/Source/Utility/dsp.h **** }
  88:../DaisySP/Source/Utility/dsp.h **** 
  89:../DaisySP/Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../DaisySP/Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../DaisySP/Source/Utility/dsp.h **** */
  92:../DaisySP/Source/Utility/dsp.h **** inline float pow10f(float f)
  93:../DaisySP/Source/Utility/dsp.h **** {
  94:../DaisySP/Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../DaisySP/Source/Utility/dsp.h **** }
  96:../DaisySP/Source/Utility/dsp.h **** 
  97:../DaisySP/Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../DaisySP/Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../DaisySP/Source/Utility/dsp.h **** */
 100:../DaisySP/Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../DaisySP/Source/Utility/dsp.h **** {
 102:../DaisySP/Source/Utility/dsp.h ****     float frac;
 103:../DaisySP/Source/Utility/dsp.h ****     int   exp;
 104:../DaisySP/Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../DaisySP/Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 107:../DaisySP/Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 109:../DaisySP/Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 111:../DaisySP/Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../DaisySP/Source/Utility/dsp.h ****     f += exp;
 113:../DaisySP/Source/Utility/dsp.h ****     return (f);
 114:../DaisySP/Source/Utility/dsp.h **** }
 115:../DaisySP/Source/Utility/dsp.h **** 
 116:../DaisySP/Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../DaisySP/Source/Utility/dsp.h **** {
 118:../DaisySP/Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 119:../DaisySP/Source/Utility/dsp.h **** }
 120:../DaisySP/Source/Utility/dsp.h **** 
 121:../DaisySP/Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../DaisySP/Source/Utility/dsp.h **** */
 123:../DaisySP/Source/Utility/dsp.h **** inline float mtof(float m)
 124:../DaisySP/Source/Utility/dsp.h **** {
 125:../DaisySP/Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 126:../DaisySP/Source/Utility/dsp.h **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 133


 127:../DaisySP/Source/Utility/dsp.h **** 
 128:../DaisySP/Source/Utility/dsp.h **** 
 129:../DaisySP/Source/Utility/dsp.h **** /** one pole lpf
 130:../DaisySP/Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 131:../DaisySP/Source/Utility/dsp.h **** calls to properly filter the signal
 132:../DaisySP/Source/Utility/dsp.h **** coeff can be calculated:
 133:../DaisySP/Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 134:../DaisySP/Source/Utility/dsp.h **** */
 135:../DaisySP/Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 2371              		.loc 23 135 13 view .LVU603
 2372              	.LBB1033:
 136:../DaisySP/Source/Utility/dsp.h **** {
 137:../DaisySP/Source/Utility/dsp.h ****     out += coeff * (in - out);
 2373              		.loc 23 137 5 view .LVU604
 2374              		.loc 23 137 9 is_stmt 0 view .LVU605
 2375 007a 4D4B     		ldr	r3, .L145+32
 2376 007c 9FED4D7A 		vldr.32	s14, .L145+36
 2377 0080 D3ED007A 		vldr.32	s15, [r3]
 2378              		.loc 23 137 24 view .LVU606
 2379 0084 30EE670A 		vsub.f32	s0, s0, s15
 2380              	.LVL100:
 2381              		.loc 23 137 24 view .LVU607
 2382              	.LBE1033:
 2383              	.LBE1032:
 2384              	.LBE1047:
 2385              	.LBE1059:
1060:Veno-Echo.cpp **** 
 2386              		.loc 20 1060 1 view .LVU608
 2387 0088 BDEC028B 		vldm	sp!, {d8}
 2388              		.cfi_remember_state
 2389              		.cfi_restore 80
 2390              		.cfi_restore 81
 2391              		.cfi_def_cfa_offset 8
 2392              	.LBB1060:
 2393              	.LBB1048:
 2394              	.LBB1035:
 2395              	.LBB1034:
 2396              		.loc 23 137 9 view .LVU609
 2397 008c E0EE077A 		vfma.f32	s15, s0, s14
 2398 0090 C3ED007A 		vstr.32	s15, [r3]
 2399              	.LBE1034:
 2400              	.LBE1035:
 2401              	.LBE1048:
 2402              	.LBE1060:
1060:Veno-Echo.cpp **** 
 2403              		.loc 20 1060 1 view .LVU610
 2404 0094 10BD     		pop	{r4, pc}
 2405              	.LVL101:
 2406              	.L118:
 2407              		.cfi_restore_state
 2408              	.LBB1061:
 2409              	.LBB1049:
1029:Veno-Echo.cpp **** 
 2410              		.loc 20 1029 9 is_stmt 1 view .LVU611
1031:Veno-Echo.cpp ****         {
 2411              		.loc 20 1031 9 view .LVU612
 2412 0096 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 134


 2413 0098 002B     		cmp	r3, #0
 2414 009a 3ED1     		bne	.L128
1033:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2415              		.loc 20 1033 13 view .LVU613
1033:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2416              		.loc 20 1033 23 is_stmt 0 view .LVU614
 2417 009c 0124     		movs	r4, #1
1034:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2418              		.loc 20 1034 29 view .LVU615
 2419 009e 4648     		ldr	r0, .L145+40
1035:Veno-Echo.cpp ****         }
 2420              		.loc 20 1035 26 view .LVU616
 2421 00a0 4649     		ldr	r1, .L145+44
1033:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2422              		.loc 20 1033 23 view .LVU617
 2423 00a2 1470     		strb	r4, [r2]
1034:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2424              		.loc 20 1034 13 is_stmt 1 view .LVU618
1034:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2425              		.loc 20 1034 29 is_stmt 0 view .LVU619
 2426 00a4 0370     		strb	r3, [r0]
1035:Veno-Echo.cpp ****         }
 2427              		.loc 20 1035 13 is_stmt 1 view .LVU620
1035:Veno-Echo.cpp ****         }
 2428              		.loc 20 1035 26 is_stmt 0 view .LVU621
 2429 00a6 81ED000A 		vstr.32	s0, [r1]
 2430              	.L117:
1035:Veno-Echo.cpp ****         }
 2431              		.loc 20 1035 26 view .LVU622
 2432              	.LBE1049:
 2433              	.LBE1061:
1060:Veno-Echo.cpp **** 
 2434              		.loc 20 1060 1 view .LVU623
 2435 00aa BDEC028B 		vldm	sp!, {d8}
 2436              		.cfi_remember_state
 2437              		.cfi_restore 80
 2438              		.cfi_restore 81
 2439              		.cfi_def_cfa_offset 8
 2440 00ae 10BD     		pop	{r4, pc}
 2441              	.L119:
 2442              		.cfi_restore_state
 2443              	.LBB1062:
 2444              	.LBB1056:
1002:Veno-Echo.cpp ****             {
 2445              		.loc 20 1002 13 is_stmt 1 view .LVU624
1002:Veno-Echo.cpp ****             {
 2446              		.loc 20 1002 16 is_stmt 0 view .LVU625
 2447 00b0 3A4B     		ldr	r3, .L145+12
1002:Veno-Echo.cpp ****             {
 2448              		.loc 20 1002 13 view .LVU626
 2449 00b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2450 00b4 7AB9     		cbnz	r2, .L121
1004:Veno-Echo.cpp ****                 {
 2451              		.loc 20 1004 17 is_stmt 1 view .LVU627
 2452              	.LVL102:
 2453              	.LBB1036:
 2454              	.LBI1036:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 135


  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2455              		.loc 21 75 3 view .LVU628
 2456              	.LBB1037:
 2457              		.loc 21 76 5 view .LVU629
 2458              		.loc 21 76 5 is_stmt 0 view .LVU630
 2459              	.LBE1037:
 2460              	.LBE1036:
1004:Veno-Echo.cpp ****                 {
 2461              		.loc 20 1004 23 view .LVU631
 2462 00b6 3A4A     		ldr	r2, .L145+16
1004:Veno-Echo.cpp ****                 {
 2463              		.loc 20 1004 17 view .LVU632
 2464 00b8 9FED417A 		vldr.32	s14, .L145+48
1004:Veno-Echo.cpp ****                 {
 2465              		.loc 20 1004 23 view .LVU633
 2466 00bc D2ED007A 		vldr.32	s15, [r2]
 2467 00c0 70EE677A 		vsub.f32	s15, s0, s15
 2468              	.LBB1039:
 2469              	.LBB1038:
 2470              		.loc 21 76 31 view .LVU634
 2471 00c4 F0EEE77A 		vabs.f32	s15, s15
 2472              	.LBE1038:
 2473              	.LBE1039:
1004:Veno-Echo.cpp ****                 {
 2474              		.loc 20 1004 17 view .LVU635
 2475 00c8 F4EEC77A 		vcmpe.f32	s15, s14
 2476 00cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2477 00d0 ACDD     		ble	.L120
1006:Veno-Echo.cpp ****                 }
 2478              		.loc 20 1006 21 is_stmt 1 view .LVU636
1006:Veno-Echo.cpp ****                 }
 2479              		.loc 20 1006 38 is_stmt 0 view .LVU637
 2480 00d2 0122     		movs	r2, #1
 2481 00d4 1A70     		strb	r2, [r3]
 2482              	.L121:
1011:Veno-Echo.cpp **** 
 2483              		.loc 20 1011 9 is_stmt 1 view .LVU638
 2484              	.LVL103:
1013:Veno-Echo.cpp ****         {
 2485              		.loc 20 1013 9 view .LVU639
1015:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 2486              		.loc 20 1015 13 view .LVU640
 2487              	.LBB1040:
 2488              	.LBI1040:
1853:Veno-Echo.cpp **** {
 2489              		.loc 20 1853 7 view .LVU641
 2490              	.LBB1041:
1855:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2491              		.loc 20 1855 5 view .LVU642
1856:Veno-Echo.cpp **** 
 2492              		.loc 20 1856 5 view .LVU643
 2493              	.LBE1041:
 2494              	.LBE1040:
1015:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 2495              		.loc 20 1015 41 is_stmt 0 view .LVU644
 2496 00d6 334B     		ldr	r3, .L145+20
 2497              	.LBB1044:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 136


 2498              	.LBB1042:
1856:Veno-Echo.cpp **** 
 2499              		.loc 20 1856 39 view .LVU645
 2500 00d8 B7EE007A 		vmov.f32	s14, #1.0e+0
1856:Veno-Echo.cpp **** 
 2501              		.loc 20 1856 49 view .LVU646
 2502 00dc B6EE006A 		vmov.f32	s12, #5.0e-1
1856:Veno-Echo.cpp **** 
 2503              		.loc 20 1856 39 view .LVU647
 2504 00e0 D3ED007A 		vldr.32	s15, [r3]
1856:Veno-Echo.cpp **** 
 2505              		.loc 20 1856 12 view .LVU648
 2506 00e4 F0EE006A 		vmov.f32	s13, #2.0e+0
1856:Veno-Echo.cpp **** 
 2507              		.loc 20 1856 39 view .LVU649
 2508 00e8 77EE677A 		vsub.f32	s15, s14, s15
1856:Veno-Echo.cpp **** 
 2509              		.loc 20 1856 49 view .LVU650
 2510 00ec 77EEC67A 		vsub.f32	s15, s15, s12
1856:Veno-Echo.cpp **** 
 2511              		.loc 20 1856 12 view .LVU651
 2512 00f0 B0EE406A 		vmov.f32	s12, s0
 2513 00f4 A7EEA66A 		vfma.f32	s12, s15, s13
1858:Veno-Echo.cpp ****     {
 2514              		.loc 20 1858 5 view .LVU652
 2515 00f8 B5EEC06A 		vcmpe.f32	s12, #0
1856:Veno-Echo.cpp **** 
 2516              		.loc 20 1856 12 view .LVU653
 2517 00fc F0EE467A 		vmov.f32	s15, s12
 2518              	.LVL104:
1858:Veno-Echo.cpp ****     {
 2519              		.loc 20 1858 5 is_stmt 1 view .LVU654
 2520 0100 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2521 0104 40D4     		bmi	.L144
1863:Veno-Echo.cpp ****     {
 2522              		.loc 20 1863 5 view .LVU655
1865:Veno-Echo.cpp ****     }
 2523              		.loc 20 1865 16 is_stmt 0 view .LVU656
 2524 0106 F4EE477A 		vcmp.f32	s15, s14
 2525 010a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2526 010e 77FE277A 		vselgt.f32	s15, s14, s15
 2527              	.L123:
 2528              	.LVL105:
1868:Veno-Echo.cpp **** }
 2529              		.loc 20 1868 5 is_stmt 1 view .LVU657
1868:Veno-Echo.cpp **** }
 2530              		.loc 20 1868 5 is_stmt 0 view .LVU658
 2531              	.LBE1042:
 2532              	.LBE1044:
1016:Veno-Echo.cpp ****         }
 2533              		.loc 20 1016 13 is_stmt 1 view .LVU659
1016:Veno-Echo.cpp ****         }
 2534              		.loc 20 1016 28 is_stmt 0 view .LVU660
 2535 0112 254B     		ldr	r3, .L145+24
 2536 0114 83ED000A 		vstr.32	s0, [r3]
 2537 0118 A6E7     		b	.L125
 2538              	.LVL106:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 137


 2539              	.L128:
1016:Veno-Echo.cpp ****         }
 2540              		.loc 20 1016 28 view .LVU661
 2541              	.LBE1056:
 2542              	.LBB1057:
1040:Veno-Echo.cpp ****             {
 2543              		.loc 20 1040 13 is_stmt 1 view .LVU662
1040:Veno-Echo.cpp ****             {
 2544              		.loc 20 1040 16 is_stmt 0 view .LVU663
 2545 011a 274B     		ldr	r3, .L145+40
1040:Veno-Echo.cpp ****             {
 2546              		.loc 20 1040 13 view .LVU664
 2547 011c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2548 011e 7AB9     		cbnz	r2, .L130
1042:Veno-Echo.cpp ****                 {
 2549              		.loc 20 1042 17 is_stmt 1 view .LVU665
 2550              	.LVL107:
 2551              	.LBB1050:
 2552              	.LBI1050:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2553              		.loc 21 75 3 view .LVU666
 2554              	.LBB1051:
 2555              		.loc 21 76 5 view .LVU667
 2556              		.loc 21 76 5 is_stmt 0 view .LVU668
 2557              	.LBE1051:
 2558              	.LBE1050:
1042:Veno-Echo.cpp ****                 {
 2559              		.loc 20 1042 23 view .LVU669
 2560 0120 264A     		ldr	r2, .L145+44
1042:Veno-Echo.cpp ****                 {
 2561              		.loc 20 1042 17 view .LVU670
 2562 0122 9FED277A 		vldr.32	s14, .L145+48
1042:Veno-Echo.cpp ****                 {
 2563              		.loc 20 1042 23 view .LVU671
 2564 0126 D2ED007A 		vldr.32	s15, [r2]
 2565 012a 70EE677A 		vsub.f32	s15, s0, s15
 2566              	.LBB1053:
 2567              	.LBB1052:
 2568              		.loc 21 76 31 view .LVU672
 2569 012e F0EEE77A 		vabs.f32	s15, s15
 2570              	.LBE1052:
 2571              	.LBE1053:
1042:Veno-Echo.cpp ****                 {
 2572              		.loc 20 1042 17 view .LVU673
 2573 0132 F4EEC77A 		vcmpe.f32	s15, s14
 2574 0136 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2575 013a B6DD     		ble	.L117
1044:Veno-Echo.cpp ****                 }
 2576              		.loc 20 1044 21 is_stmt 1 view .LVU674
1044:Veno-Echo.cpp ****                 }
 2577              		.loc 20 1044 37 is_stmt 0 view .LVU675
 2578 013c 0122     		movs	r2, #1
 2579 013e 1A70     		strb	r2, [r3]
 2580              	.L130:
1049:Veno-Echo.cpp ****         {
 2581              		.loc 20 1049 9 is_stmt 1 view .LVU676
 2582              	.LBB1054:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 138


 2583              	.LBB1055:
1051:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
 2584              		.loc 20 1051 13 view .LVU677
 2585              	.LVL108:
1052:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2586              		.loc 20 1052 13 view .LVU678
1052:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2587              		.loc 20 1052 29 is_stmt 0 view .LVU679
 2588 0140 9FED201A 		vldr.32	s2, .L145+52
 2589 0144 0120     		movs	r0, #1
 2590 0146 DFED200A 		vldr.32	s1, .L145+56
 2591 014a FFF7FEFF 		bl	_Z5scalefff9CurveType
 2592              	.LVL109:
1052:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2593              		.loc 20 1052 29 view .LVU680
 2594 014e B0EE408A 		vmov.f32	s16, s0
 2595              	.LVL110:
1053:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 2596              		.loc 20 1053 13 is_stmt 1 view .LVU681
1053:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 2597              		.loc 20 1053 26 is_stmt 0 view .LVU682
 2598 0152 1E48     		ldr	r0, .L145+60
 2599 0154 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2600              	.LVL111:
1054:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 2601              		.loc 20 1054 13 is_stmt 1 view .LVU683
1054:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 2602              		.loc 20 1054 26 is_stmt 0 view .LVU684
 2603 0158 1D48     		ldr	r0, .L145+64
 2604 015a B0EE480A 		vmov.f32	s0, s16
 2605 015e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2606              	.LVL112:
1055:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 2607              		.loc 20 1055 13 is_stmt 1 view .LVU685
1055:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 2608              		.loc 20 1055 31 is_stmt 0 view .LVU686
 2609 0162 B0EE480A 		vmov.f32	s0, s16
 2610 0166 1B48     		ldr	r0, .L145+68
 2611 0168 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2612              	.LVL113:
1056:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 2613              		.loc 20 1056 13 is_stmt 1 view .LVU687
1056:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 2614              		.loc 20 1056 31 is_stmt 0 view .LVU688
 2615 016c B0EE480A 		vmov.f32	s0, s16
 2616 0170 1948     		ldr	r0, .L145+72
 2617 0172 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2618              	.LVL114:
1057:Veno-Echo.cpp ****         }
 2619              		.loc 20 1057 13 is_stmt 1 view .LVU689
1057:Veno-Echo.cpp ****         }
 2620              		.loc 20 1057 35 is_stmt 0 view .LVU690
 2621 0176 194B     		ldr	r3, .L145+76
 2622 0178 83ED048A 		vstr.32	s16, [r3, #16]
 2623              	.LBE1055:
 2624              	.LBE1054:
 2625              	.LBE1057:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 139


 2626              	.LBE1062:
1060:Veno-Echo.cpp **** 
 2627              		.loc 20 1060 1 view .LVU691
 2628 017c BDEC028B 		vldm	sp!, {d8}
 2629              		.cfi_remember_state
 2630              		.cfi_restore 80
 2631              		.cfi_restore 81
 2632              		.cfi_def_cfa_offset 8
 2633              	.LVL115:
1060:Veno-Echo.cpp **** 
 2634              		.loc 20 1060 1 view .LVU692
 2635 0180 10BD     		pop	{r4, pc}
 2636              	.LVL116:
 2637              	.L143:
 2638              		.cfi_restore_state
 2639              	.LBB1063:
 2640              	.LBB1058:
 2641              	.LBB1045:
 2642              	.LBB1029:
1860:Veno-Echo.cpp ****     }
 2643              		.loc 20 1860 16 view .LVU693
 2644 0182 DFED0A7A 		vldr.32	s15, .L145+28
 2645              	.LVL117:
1860:Veno-Echo.cpp ****     }
 2646              		.loc 20 1860 16 view .LVU694
 2647 0186 6FE7     		b	.L125
 2648              	.LVL118:
 2649              	.L144:
1860:Veno-Echo.cpp ****     }
 2650              		.loc 20 1860 16 view .LVU695
 2651              	.LBE1029:
 2652              	.LBE1045:
 2653              	.LBB1046:
 2654              	.LBB1043:
 2655 0188 DFED087A 		vldr.32	s15, .L145+28
 2656 018c C1E7     		b	.L123
 2657              	.L146:
 2658 018e 00BF     		.align	2
 2659              	.L145:
 2660 0190 18000000 		.word	.LANCHOR4+24
 2661 0194 00000000 		.word	.LANCHOR7
 2662 0198 00000000 		.word	.LANCHOR27
 2663 019c 00000000 		.word	.LANCHOR28
 2664 01a0 00000000 		.word	.LANCHOR29
 2665 01a4 00000000 		.word	.LANCHOR26
 2666 01a8 00000000 		.word	.LANCHOR30
 2667 01ac 00000000 		.word	0
 2668 01b0 00000000 		.word	.LANCHOR31
 2669 01b4 6F12033D 		.word	1023611503
 2670 01b8 00000000 		.word	.LANCHOR32
 2671 01bc 00000000 		.word	.LANCHOR33
 2672 01c0 0AD7A33B 		.word	1000593162
 2673 01c4 00004844 		.word	1145569280
 2674 01c8 0000C842 		.word	1120403456
 2675 01cc 00000000 		.word	.LANCHOR34
 2676 01d0 00000000 		.word	.LANCHOR35
 2677 01d4 00000000 		.word	.LANCHOR36
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 140


 2678 01d8 00000000 		.word	.LANCHOR37
 2679 01dc 00000000 		.word	.LANCHOR16
 2680              	.LBE1043:
 2681              	.LBE1046:
 2682              	.LBE1058:
 2683              	.LBE1063:
 2684              		.cfi_endproc
 2685              	.LFE4317:
 2687              		.section	.text._Z19Update_feedbackR_CVv,"ax",%progbits
 2688              		.align	1
 2689              		.p2align 2,,3
 2690              		.global	_Z19Update_feedbackR_CVv
 2691              		.syntax unified
 2692              		.thumb
 2693              		.thumb_func
 2694              		.fpu fpv5-d16
 2696              	_Z19Update_feedbackR_CVv:
 2697              	.LFB4318:
1063:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 2698              		.loc 20 1063 1 is_stmt 1 view -0
 2699              		.cfi_startproc
 2700              		@ args = 0, pretend = 0, frame = 0
 2701              		@ frame_needed = 0, uses_anonymous_args = 0
1064:Veno-Echo.cpp **** }
 2702              		.loc 20 1064 5 view .LVU697
1063:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 2703              		.loc 20 1063 1 is_stmt 0 view .LVU698
 2704 0000 08B5     		push	{r3, lr}
 2705              		.cfi_def_cfa_offset 8
 2706              		.cfi_offset 3, -8
 2707              		.cfi_offset 14, -4
1064:Veno-Echo.cpp **** }
 2708              		.loc 20 1064 35 view .LVU699
 2709 0002 0321     		movs	r1, #3
 2710 0004 0348     		ldr	r0, .L149
 2711 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2712              	.LVL119:
1064:Veno-Echo.cpp **** }
 2713              		.loc 20 1064 18 view .LVU700
 2714 000a 034B     		ldr	r3, .L149+4
 2715 000c 83ED000A 		vstr.32	s0, [r3]
1065:Veno-Echo.cpp **** 
 2716              		.loc 20 1065 1 view .LVU701
 2717 0010 08BD     		pop	{r3, pc}
 2718              	.L150:
 2719 0012 00BF     		.align	2
 2720              	.L149:
 2721 0014 18000000 		.word	.LANCHOR4+24
 2722 0018 00000000 		.word	.LANCHOR38
 2723              		.cfi_endproc
 2724              	.LFE4318:
 2726              		.section	.text._Z16Update_feedbackRv,"ax",%progbits
 2727              		.align	1
 2728              		.p2align 2,,3
 2729              		.global	_Z16Update_feedbackRv
 2730              		.syntax unified
 2731              		.thumb
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 141


 2732              		.thumb_func
 2733              		.fpu fpv5-d16
 2735              	_Z16Update_feedbackRv:
 2736              	.LFB4319:
1068:Veno-Echo.cpp ****     static bool lastShift{};
 2737              		.loc 20 1068 1 is_stmt 1 view -0
 2738              		.cfi_startproc
 2739              		@ args = 0, pretend = 0, frame = 0
 2740              		@ frame_needed = 0, uses_anonymous_args = 0
1069:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
 2741              		.loc 20 1069 5 view .LVU703
1070:Veno-Echo.cpp ****     static bool LPCutoff_pickup{};
 2742              		.loc 20 1070 5 view .LVU704
1071:Veno-Echo.cpp **** 
 2743              		.loc 20 1071 5 view .LVU705
1073:Veno-Echo.cpp **** 
 2744              		.loc 20 1073 5 view .LVU706
1076:Veno-Echo.cpp **** 
 2745              		.loc 20 1076 5 view .LVU707
1076:Veno-Echo.cpp **** 
 2746              		.loc 20 1076 43 is_stmt 0 view .LVU708
 2747 0000 0422     		movs	r2, #4
 2748 0002 0721     		movs	r1, #7
 2749 0004 6548     		ldr	r0, .L181
1068:Veno-Echo.cpp ****     static bool lastShift{};
 2750              		.loc 20 1068 1 view .LVU709
 2751 0006 10B5     		push	{r4, lr}
 2752              		.cfi_def_cfa_offset 8
 2753              		.cfi_offset 4, -8
 2754              		.cfi_offset 14, -4
 2755 0008 2DED028B 		vpush.64	{d8}
 2756              		.cfi_def_cfa_offset 16
 2757              		.cfi_offset 80, -16
 2758              		.cfi_offset 81, -12
1076:Veno-Echo.cpp **** 
 2759              		.loc 20 1076 43 view .LVU710
 2760 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2761              	.LVL120:
 2762              	.LBB1064:
1078:Veno-Echo.cpp ****     {   
 2763              		.loc 20 1078 9 view .LVU711
 2764 0010 634B     		ldr	r3, .L181+4
 2765              	.LVL121:
1078:Veno-Echo.cpp ****     {   
 2766              		.loc 20 1078 9 view .LVU712
 2767              	.LBE1064:
1078:Veno-Echo.cpp ****     {   
 2768              		.loc 20 1078 5 is_stmt 1 view .LVU713
 2769              	.LBB1098:
 2770              	.LBB1065:
1082:Veno-Echo.cpp ****         {
 2771              		.loc 20 1082 19 is_stmt 0 view .LVU714
 2772 0012 644A     		ldr	r2, .L181+8
 2773              	.LBE1065:
1078:Veno-Echo.cpp ****     {   
 2774              		.loc 20 1078 5 view .LVU715
 2775 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 142


 2776 0016 002B     		cmp	r3, #0
 2777 0018 3FD1     		bne	.L152
 2778              	.LBB1086:
1080:Veno-Echo.cpp ****         //update pickup
 2779              		.loc 20 1080 9 is_stmt 1 view .LVU716
1082:Veno-Echo.cpp ****         {
 2780              		.loc 20 1082 9 view .LVU717
 2781 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2782 001c 0029     		cmp	r1, #0
 2783 001e 49D0     		beq	.L153
1084:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
 2784              		.loc 20 1084 13 view .LVU718
1085:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
 2785              		.loc 20 1085 30 is_stmt 0 view .LVU719
 2786 0020 614C     		ldr	r4, .L181+12
1086:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2787              		.loc 20 1086 28 view .LVU720
 2788 0022 6248     		ldr	r0, .L181+16
1087:Veno-Echo.cpp ****         } 
 2789              		.loc 20 1087 27 view .LVU721
 2790 0024 6249     		ldr	r1, .L181+20
1084:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
 2791              		.loc 20 1084 23 view .LVU722
 2792 0026 1370     		strb	r3, [r2]
1085:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
 2793              		.loc 20 1085 13 is_stmt 1 view .LVU723
1085:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
 2794              		.loc 20 1085 30 is_stmt 0 view .LVU724
 2795 0028 2370     		strb	r3, [r4]
1086:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2796              		.loc 20 1086 13 is_stmt 1 view .LVU725
1086:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2797              		.loc 20 1086 28 is_stmt 0 view .LVU726
 2798 002a 80ED000A 		vstr.32	s0, [r0]
1087:Veno-Echo.cpp ****         } 
 2799              		.loc 20 1087 13 is_stmt 1 view .LVU727
1087:Veno-Echo.cpp ****         } 
 2800              		.loc 20 1087 27 is_stmt 0 view .LVU728
 2801 002e 81ED000A 		vstr.32	s0, [r1]
 2802              	.LVL122:
 2803              	.L154:
1100:Veno-Echo.cpp ****         
 2804              		.loc 20 1100 9 is_stmt 1 view .LVU729
1102:Veno-Echo.cpp ****         {
 2805              		.loc 20 1102 9 view .LVU730
1110:Veno-Echo.cpp ****         }
 2806              		.loc 20 1110 13 view .LVU731
 2807              	.LBB1066:
 2808              	.LBI1066:
1853:Veno-Echo.cpp **** {
 2809              		.loc 20 1853 7 view .LVU732
 2810              	.LBB1067:
1855:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2811              		.loc 20 1855 5 view .LVU733
1856:Veno-Echo.cpp **** 
 2812              		.loc 20 1856 5 view .LVU734
 2813              	.LBE1067:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 143


 2814              	.LBE1066:
1110:Veno-Echo.cpp ****         }
 2815              		.loc 20 1110 41 is_stmt 0 view .LVU735
 2816 0032 604B     		ldr	r3, .L181+24
 2817              	.LBB1070:
 2818              	.LBB1068:
1856:Veno-Echo.cpp **** 
 2819              		.loc 20 1856 39 view .LVU736
 2820 0034 B7EE007A 		vmov.f32	s14, #1.0e+0
1856:Veno-Echo.cpp **** 
 2821              		.loc 20 1856 49 view .LVU737
 2822 0038 B6EE006A 		vmov.f32	s12, #5.0e-1
1856:Veno-Echo.cpp **** 
 2823              		.loc 20 1856 39 view .LVU738
 2824 003c D3ED007A 		vldr.32	s15, [r3]
1856:Veno-Echo.cpp **** 
 2825              		.loc 20 1856 12 view .LVU739
 2826 0040 F0EE006A 		vmov.f32	s13, #2.0e+0
1856:Veno-Echo.cpp **** 
 2827              		.loc 20 1856 39 view .LVU740
 2828 0044 77EE677A 		vsub.f32	s15, s14, s15
1856:Veno-Echo.cpp **** 
 2829              		.loc 20 1856 49 view .LVU741
 2830 0048 77EEC67A 		vsub.f32	s15, s15, s12
1856:Veno-Echo.cpp **** 
 2831              		.loc 20 1856 12 view .LVU742
 2832 004c A7EEA60A 		vfma.f32	s0, s15, s13
1858:Veno-Echo.cpp ****     {
 2833              		.loc 20 1858 5 view .LVU743
 2834 0050 B5EEC00A 		vcmpe.f32	s0, #0
1856:Veno-Echo.cpp **** 
 2835              		.loc 20 1856 12 view .LVU744
 2836 0054 F0EE407A 		vmov.f32	s15, s0
 2837              	.LVL123:
1858:Veno-Echo.cpp ****     {
 2838              		.loc 20 1858 5 is_stmt 1 view .LVU745
 2839 0058 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2840 005c 00F19380 		bmi	.L179
1863:Veno-Echo.cpp ****     {
 2841              		.loc 20 1863 5 view .LVU746
1865:Veno-Echo.cpp ****     }
 2842              		.loc 20 1865 16 is_stmt 0 view .LVU747
 2843 0060 F4EE477A 		vcmp.f32	s15, s14
 2844 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2845 0068 77FE277A 		vselgt.f32	s15, s14, s15
 2846              	.LVL124:
 2847              	.L160:
1865:Veno-Echo.cpp ****     }
 2848              		.loc 20 1865 16 view .LVU748
 2849              	.LBE1068:
 2850              	.LBE1070:
1113:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2851              		.loc 20 1113 9 is_stmt 1 view .LVU749
1113:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2852              		.loc 20 1113 37 is_stmt 0 view .LVU750
 2853 006c B0EE670A 		vmov.f32	s0, s15
 2854 0070 0020     		movs	r0, #0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 144


 2855 0072 B7EE041A 		vmov.f32	s2, #1.25e+0
 2856 0076 DFED500A 		vldr.32	s1, .L181+28
 2857 007a FFF7FEFF 		bl	_Z5scalefff9CurveType
 2858              	.LVL125:
1114:Veno-Echo.cpp ****     }
 2859              		.loc 20 1114 9 is_stmt 1 view .LVU751
 2860              	.LBB1071:
 2861              	.LBI1071:
 135:../DaisySP/Source/Utility/dsp.h **** {
 2862              		.loc 23 135 13 view .LVU752
 2863              	.LBB1072:
 2864              		.loc 23 137 5 view .LVU753
 2865              		.loc 23 137 9 is_stmt 0 view .LVU754
 2866 007e 4F4B     		ldr	r3, .L181+32
 2867 0080 9FED4F7A 		vldr.32	s14, .L181+36
 2868 0084 D3ED007A 		vldr.32	s15, [r3]
 2869              		.loc 23 137 24 view .LVU755
 2870 0088 30EE670A 		vsub.f32	s0, s0, s15
 2871              	.LVL126:
 2872              		.loc 23 137 24 view .LVU756
 2873              	.LBE1072:
 2874              	.LBE1071:
 2875              	.LBE1086:
 2876              	.LBE1098:
1150:Veno-Echo.cpp **** 
 2877              		.loc 20 1150 1 view .LVU757
 2878 008c BDEC028B 		vldm	sp!, {d8}
 2879              		.cfi_remember_state
 2880              		.cfi_restore 80
 2881              		.cfi_restore 81
 2882              		.cfi_def_cfa_offset 8
 2883              	.LBB1099:
 2884              	.LBB1087:
 2885              	.LBB1074:
 2886              	.LBB1073:
 2887              		.loc 23 137 9 view .LVU758
 2888 0090 E0EE077A 		vfma.f32	s15, s0, s14
 2889 0094 C3ED007A 		vstr.32	s15, [r3]
 2890              	.LBE1073:
 2891              	.LBE1074:
 2892              	.LBE1087:
 2893              	.LBE1099:
1150:Veno-Echo.cpp **** 
 2894              		.loc 20 1150 1 view .LVU759
 2895 0098 10BD     		pop	{r4, pc}
 2896              	.LVL127:
 2897              	.L152:
 2898              		.cfi_restore_state
 2899              	.LBB1100:
 2900              	.LBB1088:
1119:Veno-Echo.cpp **** 
 2901              		.loc 20 1119 9 is_stmt 1 view .LVU760
1121:Veno-Echo.cpp ****         {
 2902              		.loc 20 1121 10 view .LVU761
 2903 009a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2904 009c 002B     		cmp	r3, #0
 2905 009e 3ED1     		bne	.L163
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 145


1123:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2906              		.loc 20 1123 13 view .LVU762
1123:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2907              		.loc 20 1123 23 is_stmt 0 view .LVU763
 2908 00a0 0124     		movs	r4, #1
1124:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2909              		.loc 20 1124 29 view .LVU764
 2910 00a2 4848     		ldr	r0, .L181+40
1125:Veno-Echo.cpp ****         }
 2911              		.loc 20 1125 26 view .LVU765
 2912 00a4 4849     		ldr	r1, .L181+44
1123:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2913              		.loc 20 1123 23 view .LVU766
 2914 00a6 1470     		strb	r4, [r2]
1124:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2915              		.loc 20 1124 13 is_stmt 1 view .LVU767
1124:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2916              		.loc 20 1124 29 is_stmt 0 view .LVU768
 2917 00a8 0370     		strb	r3, [r0]
1125:Veno-Echo.cpp ****         }
 2918              		.loc 20 1125 13 is_stmt 1 view .LVU769
1125:Veno-Echo.cpp ****         }
 2919              		.loc 20 1125 26 is_stmt 0 view .LVU770
 2920 00aa 81ED000A 		vstr.32	s0, [r1]
 2921              	.L151:
1125:Veno-Echo.cpp ****         }
 2922              		.loc 20 1125 26 view .LVU771
 2923              	.LBE1088:
 2924              	.LBE1100:
1150:Veno-Echo.cpp **** 
 2925              		.loc 20 1150 1 view .LVU772
 2926 00ae BDEC028B 		vldm	sp!, {d8}
 2927              		.cfi_remember_state
 2928              		.cfi_restore 80
 2929              		.cfi_restore 81
 2930              		.cfi_def_cfa_offset 8
 2931 00b2 10BD     		pop	{r4, pc}
 2932              	.L153:
 2933              		.cfi_restore_state
 2934              	.LBB1101:
 2935              	.LBB1095:
1091:Veno-Echo.cpp ****             {
 2936              		.loc 20 1091 13 is_stmt 1 view .LVU773
1091:Veno-Echo.cpp ****             {
 2937              		.loc 20 1091 16 is_stmt 0 view .LVU774
 2938 00b4 3C4B     		ldr	r3, .L181+12
1091:Veno-Echo.cpp ****             {
 2939              		.loc 20 1091 13 view .LVU775
 2940 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2941 00b8 7AB9     		cbnz	r2, .L155
1093:Veno-Echo.cpp ****                 {
 2942              		.loc 20 1093 17 is_stmt 1 view .LVU776
 2943              	.LVL128:
 2944              	.LBB1075:
 2945              	.LBI1075:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2946              		.loc 21 75 3 view .LVU777
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 146


 2947              	.LBB1076:
 2948              		.loc 21 76 5 view .LVU778
 2949              		.loc 21 76 5 is_stmt 0 view .LVU779
 2950              	.LBE1076:
 2951              	.LBE1075:
1093:Veno-Echo.cpp ****                 {
 2952              		.loc 20 1093 23 view .LVU780
 2953 00ba 3D4A     		ldr	r2, .L181+20
1093:Veno-Echo.cpp ****                 {
 2954              		.loc 20 1093 17 view .LVU781
 2955 00bc 9FED437A 		vldr.32	s14, .L181+48
1093:Veno-Echo.cpp ****                 {
 2956              		.loc 20 1093 23 view .LVU782
 2957 00c0 D2ED007A 		vldr.32	s15, [r2]
 2958 00c4 70EE677A 		vsub.f32	s15, s0, s15
 2959              	.LBB1078:
 2960              	.LBB1077:
 2961              		.loc 21 76 31 view .LVU783
 2962 00c8 F0EEE77A 		vabs.f32	s15, s15
 2963              	.LBE1077:
 2964              	.LBE1078:
1093:Veno-Echo.cpp ****                 {
 2965              		.loc 20 1093 17 view .LVU784
 2966 00cc F4EEC77A 		vcmpe.f32	s15, s14
 2967 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2968 00d4 5DDD     		ble	.L175
1095:Veno-Echo.cpp ****                 }
 2969              		.loc 20 1095 21 is_stmt 1 view .LVU785
1095:Veno-Echo.cpp ****                 }
 2970              		.loc 20 1095 38 is_stmt 0 view .LVU786
 2971 00d6 0122     		movs	r2, #1
 2972 00d8 1A70     		strb	r2, [r3]
 2973              	.L155:
1100:Veno-Echo.cpp ****         
 2974              		.loc 20 1100 9 is_stmt 1 view .LVU787
 2975              	.LVL129:
1102:Veno-Echo.cpp ****         {
 2976              		.loc 20 1102 9 view .LVU788
1104:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
 2977              		.loc 20 1104 13 view .LVU789
 2978              	.LBB1079:
 2979              	.LBI1079:
1853:Veno-Echo.cpp **** {
 2980              		.loc 20 1853 7 view .LVU790
 2981              	.LBB1080:
1855:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2982              		.loc 20 1855 5 view .LVU791
1856:Veno-Echo.cpp **** 
 2983              		.loc 20 1856 5 view .LVU792
 2984              	.LBE1080:
 2985              	.LBE1079:
1104:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
 2986              		.loc 20 1104 41 is_stmt 0 view .LVU793
 2987 00da 364B     		ldr	r3, .L181+24
 2988              	.LBB1083:
 2989              	.LBB1081:
1856:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 147


 2990              		.loc 20 1856 39 view .LVU794
 2991 00dc B7EE007A 		vmov.f32	s14, #1.0e+0
1856:Veno-Echo.cpp **** 
 2992              		.loc 20 1856 49 view .LVU795
 2993 00e0 B6EE006A 		vmov.f32	s12, #5.0e-1
1856:Veno-Echo.cpp **** 
 2994              		.loc 20 1856 39 view .LVU796
 2995 00e4 D3ED007A 		vldr.32	s15, [r3]
1856:Veno-Echo.cpp **** 
 2996              		.loc 20 1856 12 view .LVU797
 2997 00e8 F0EE006A 		vmov.f32	s13, #2.0e+0
1856:Veno-Echo.cpp **** 
 2998              		.loc 20 1856 39 view .LVU798
 2999 00ec 77EE677A 		vsub.f32	s15, s14, s15
1856:Veno-Echo.cpp **** 
 3000              		.loc 20 1856 49 view .LVU799
 3001 00f0 77EEC67A 		vsub.f32	s15, s15, s12
1856:Veno-Echo.cpp **** 
 3002              		.loc 20 1856 12 view .LVU800
 3003 00f4 B0EE406A 		vmov.f32	s12, s0
 3004 00f8 A7EEA66A 		vfma.f32	s12, s15, s13
1858:Veno-Echo.cpp ****     {
 3005              		.loc 20 1858 5 view .LVU801
 3006 00fc B5EEC06A 		vcmpe.f32	s12, #0
1856:Veno-Echo.cpp **** 
 3007              		.loc 20 1856 12 view .LVU802
 3008 0100 F0EE467A 		vmov.f32	s15, s12
 3009              	.LVL130:
1858:Veno-Echo.cpp ****     {
 3010              		.loc 20 1858 5 is_stmt 1 view .LVU803
 3011 0104 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3012 0108 40D4     		bmi	.L180
1863:Veno-Echo.cpp ****     {
 3013              		.loc 20 1863 5 view .LVU804
1865:Veno-Echo.cpp ****     }
 3014              		.loc 20 1865 16 is_stmt 0 view .LVU805
 3015 010a F4EE477A 		vcmp.f32	s15, s14
 3016 010e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3017 0112 77FE277A 		vselgt.f32	s15, s14, s15
 3018              	.L158:
 3019              	.LVL131:
1868:Veno-Echo.cpp **** }
 3020              		.loc 20 1868 5 is_stmt 1 view .LVU806
1868:Veno-Echo.cpp **** }
 3021              		.loc 20 1868 5 is_stmt 0 view .LVU807
 3022              	.LBE1081:
 3023              	.LBE1083:
1105:Veno-Echo.cpp ****         }
 3024              		.loc 20 1105 13 is_stmt 1 view .LVU808
1105:Veno-Echo.cpp ****         }
 3025              		.loc 20 1105 28 is_stmt 0 view .LVU809
 3026 0116 254B     		ldr	r3, .L181+16
 3027 0118 83ED000A 		vstr.32	s0, [r3]
 3028 011c A6E7     		b	.L160
 3029              	.LVL132:
 3030              	.L163:
1105:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 148


 3031              		.loc 20 1105 28 view .LVU810
 3032              	.LBE1095:
 3033              	.LBB1096:
1130:Veno-Echo.cpp ****             {
 3034              		.loc 20 1130 13 is_stmt 1 view .LVU811
1130:Veno-Echo.cpp ****             {
 3035              		.loc 20 1130 16 is_stmt 0 view .LVU812
 3036 011e 294B     		ldr	r3, .L181+40
1130:Veno-Echo.cpp ****             {
 3037              		.loc 20 1130 13 view .LVU813
 3038 0120 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3039 0122 7AB9     		cbnz	r2, .L165
1132:Veno-Echo.cpp ****                 {
 3040              		.loc 20 1132 17 is_stmt 1 view .LVU814
 3041              	.LVL133:
 3042              	.LBB1089:
 3043              	.LBI1089:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3044              		.loc 21 75 3 view .LVU815
 3045              	.LBB1090:
 3046              		.loc 21 76 5 view .LVU816
 3047              		.loc 21 76 5 is_stmt 0 view .LVU817
 3048              	.LBE1090:
 3049              	.LBE1089:
1132:Veno-Echo.cpp ****                 {
 3050              		.loc 20 1132 23 view .LVU818
 3051 0124 284A     		ldr	r2, .L181+44
1132:Veno-Echo.cpp ****                 {
 3052              		.loc 20 1132 17 view .LVU819
 3053 0126 9FED297A 		vldr.32	s14, .L181+48
1132:Veno-Echo.cpp ****                 {
 3054              		.loc 20 1132 23 view .LVU820
 3055 012a D2ED007A 		vldr.32	s15, [r2]
 3056 012e 70EE677A 		vsub.f32	s15, s0, s15
 3057              	.LBB1092:
 3058              	.LBB1091:
 3059              		.loc 21 76 31 view .LVU821
 3060 0132 F0EEE77A 		vabs.f32	s15, s15
 3061              	.LBE1091:
 3062              	.LBE1092:
1132:Veno-Echo.cpp ****                 {
 3063              		.loc 20 1132 17 view .LVU822
 3064 0136 F4EEC77A 		vcmpe.f32	s15, s14
 3065 013a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3066 013e B6DD     		ble	.L151
1134:Veno-Echo.cpp ****                 }
 3067              		.loc 20 1134 21 is_stmt 1 view .LVU823
1134:Veno-Echo.cpp ****                 }
 3068              		.loc 20 1134 37 is_stmt 0 view .LVU824
 3069 0140 0122     		movs	r2, #1
 3070 0142 1A70     		strb	r2, [r3]
 3071              	.L165:
1139:Veno-Echo.cpp ****         {
 3072              		.loc 20 1139 9 is_stmt 1 view .LVU825
 3073              	.LBB1093:
 3074              	.LBB1094:
1141:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 149


 3075              		.loc 20 1141 13 view .LVU826
 3076              	.LVL134:
1142:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3077              		.loc 20 1142 13 view .LVU827
1142:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3078              		.loc 20 1142 29 is_stmt 0 view .LVU828
 3079 0144 9FED221A 		vldr.32	s2, .L181+52
 3080 0148 0120     		movs	r0, #1
 3081 014a DFED220A 		vldr.32	s1, .L181+56
 3082 014e FFF7FEFF 		bl	_Z5scalefff9CurveType
 3083              	.LVL135:
1142:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3084              		.loc 20 1142 29 view .LVU829
 3085 0152 B0EE408A 		vmov.f32	s16, s0
 3086              	.LVL136:
1143:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 3087              		.loc 20 1143 13 is_stmt 1 view .LVU830
1143:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 3088              		.loc 20 1143 26 is_stmt 0 view .LVU831
 3089 0156 2048     		ldr	r0, .L181+60
 3090 0158 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3091              	.LVL137:
1144:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 3092              		.loc 20 1144 13 is_stmt 1 view .LVU832
1144:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 3093              		.loc 20 1144 26 is_stmt 0 view .LVU833
 3094 015c 1F48     		ldr	r0, .L181+64
 3095 015e B0EE480A 		vmov.f32	s0, s16
 3096 0162 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3097              	.LVL138:
1145:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 3098              		.loc 20 1145 13 is_stmt 1 view .LVU834
1145:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 3099              		.loc 20 1145 31 is_stmt 0 view .LVU835
 3100 0166 B0EE480A 		vmov.f32	s0, s16
 3101 016a 1D48     		ldr	r0, .L181+68
 3102 016c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3103              	.LVL139:
1146:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 3104              		.loc 20 1146 13 is_stmt 1 view .LVU836
1146:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 3105              		.loc 20 1146 31 is_stmt 0 view .LVU837
 3106 0170 B0EE480A 		vmov.f32	s0, s16
 3107 0174 1B48     		ldr	r0, .L181+72
 3108 0176 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3109              	.LVL140:
1147:Veno-Echo.cpp ****         }
 3110              		.loc 20 1147 13 is_stmt 1 view .LVU838
1147:Veno-Echo.cpp ****         }
 3111              		.loc 20 1147 35 is_stmt 0 view .LVU839
 3112 017a 1B4B     		ldr	r3, .L181+76
 3113 017c 83ED058A 		vstr.32	s16, [r3, #20]
 3114              	.LBE1094:
 3115              	.LBE1093:
 3116              	.LBE1096:
 3117              	.LBE1101:
1150:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 150


 3118              		.loc 20 1150 1 view .LVU840
 3119 0180 BDEC028B 		vldm	sp!, {d8}
 3120              		.cfi_remember_state
 3121              		.cfi_restore 80
 3122              		.cfi_restore 81
 3123              		.cfi_def_cfa_offset 8
 3124              	.LVL141:
1150:Veno-Echo.cpp **** 
 3125              		.loc 20 1150 1 view .LVU841
 3126 0184 10BD     		pop	{r4, pc}
 3127              	.LVL142:
 3128              	.L179:
 3129              		.cfi_restore_state
 3130              	.LBB1102:
 3131              	.LBB1097:
 3132              	.LBB1084:
 3133              	.LBB1069:
1860:Veno-Echo.cpp ****     }
 3134              		.loc 20 1860 16 view .LVU842
 3135 0186 DFED0C7A 		vldr.32	s15, .L181+28
 3136 018a 6FE7     		b	.L160
 3137              	.LVL143:
 3138              	.L180:
1860:Veno-Echo.cpp ****     }
 3139              		.loc 20 1860 16 view .LVU843
 3140              	.LBE1069:
 3141              	.LBE1084:
 3142              	.LBB1085:
 3143              	.LBB1082:
 3144 018c DFED0A7A 		vldr.32	s15, .L181+28
 3145 0190 C1E7     		b	.L158
 3146              	.LVL144:
 3147              	.L175:
1860:Veno-Echo.cpp ****     }
 3148              		.loc 20 1860 16 view .LVU844
 3149 0192 064B     		ldr	r3, .L181+16
 3150 0194 93ED000A 		vldr.32	s0, [r3]
 3151              	.LVL145:
1860:Veno-Echo.cpp ****     }
 3152              		.loc 20 1860 16 view .LVU845
 3153 0198 4BE7     		b	.L154
 3154              	.L182:
 3155 019a 00BF     		.align	2
 3156              	.L181:
 3157 019c 18000000 		.word	.LANCHOR4+24
 3158 01a0 00000000 		.word	.LANCHOR7
 3159 01a4 00000000 		.word	.LANCHOR39
 3160 01a8 00000000 		.word	.LANCHOR40
 3161 01ac 00000000 		.word	.LANCHOR41
 3162 01b0 00000000 		.word	.LANCHOR42
 3163 01b4 00000000 		.word	.LANCHOR38
 3164 01b8 00000000 		.word	0
 3165 01bc 00000000 		.word	.LANCHOR43
 3166 01c0 6F12033D 		.word	1023611503
 3167 01c4 00000000 		.word	.LANCHOR44
 3168 01c8 00000000 		.word	.LANCHOR45
 3169 01cc 0AD7A33B 		.word	1000593162
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 151


 3170 01d0 00803B46 		.word	1178304512
 3171 01d4 0080BB44 		.word	1153138688
 3172 01d8 00000000 		.word	.LANCHOR46
 3173 01dc 00000000 		.word	.LANCHOR47
 3174 01e0 00000000 		.word	.LANCHOR48
 3175 01e4 00000000 		.word	.LANCHOR49
 3176 01e8 00000000 		.word	.LANCHOR16
 3177              	.LBE1082:
 3178              	.LBE1085:
 3179              	.LBE1097:
 3180              	.LBE1102:
 3181              		.cfi_endproc
 3182              	.LFE4319:
 3184              		.section	.text._Z16Update_drywet_CVv,"ax",%progbits
 3185              		.align	1
 3186              		.p2align 2,,3
 3187              		.global	_Z16Update_drywet_CVv
 3188              		.syntax unified
 3189              		.thumb
 3190              		.thumb_func
 3191              		.fpu fpv5-d16
 3193              	_Z16Update_drywet_CVv:
 3194              	.LFB4320:
1153:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 3195              		.loc 20 1153 1 is_stmt 1 view -0
 3196              		.cfi_startproc
 3197              		@ args = 0, pretend = 0, frame = 0
 3198              		@ frame_needed = 0, uses_anonymous_args = 0
1154:Veno-Echo.cpp **** }
 3199              		.loc 20 1154 5 view .LVU847
1153:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 3200              		.loc 20 1153 1 is_stmt 0 view .LVU848
 3201 0000 08B5     		push	{r3, lr}
 3202              		.cfi_def_cfa_offset 8
 3203              		.cfi_offset 3, -8
 3204              		.cfi_offset 14, -4
1154:Veno-Echo.cpp **** }
 3205              		.loc 20 1154 32 view .LVU849
 3206 0002 0421     		movs	r1, #4
 3207 0004 0348     		ldr	r0, .L185
 3208 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3209              	.LVL146:
1154:Veno-Echo.cpp **** }
 3210              		.loc 20 1154 15 view .LVU850
 3211 000a 034B     		ldr	r3, .L185+4
 3212 000c 83ED000A 		vstr.32	s0, [r3]
1155:Veno-Echo.cpp **** 
 3213              		.loc 20 1155 1 view .LVU851
 3214 0010 08BD     		pop	{r3, pc}
 3215              	.L186:
 3216 0012 00BF     		.align	2
 3217              	.L185:
 3218 0014 18000000 		.word	.LANCHOR4+24
 3219 0018 00000000 		.word	.LANCHOR50
 3220              		.cfi_endproc
 3221              	.LFE4320:
 3223              		.section	.text._Z13Update_drywetv,"ax",%progbits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 152


 3224              		.align	1
 3225              		.p2align 2,,3
 3226              		.global	_Z13Update_drywetv
 3227              		.syntax unified
 3228              		.thumb
 3229              		.thumb_func
 3230              		.fpu fpv5-d16
 3232              	_Z13Update_drywetv:
 3233              	.LFB4321:
1158:Veno-Echo.cpp ****     static bool lastShift{};
 3234              		.loc 20 1158 1 is_stmt 1 view -0
 3235              		.cfi_startproc
 3236              		@ args = 0, pretend = 0, frame = 0
 3237              		@ frame_needed = 0, uses_anonymous_args = 0
1159:Veno-Echo.cpp ****     static bool drywet_pickup{};
 3238              		.loc 20 1159 5 view .LVU853
1160:Veno-Echo.cpp ****     static bool Res_pickup{};
 3239              		.loc 20 1160 5 view .LVU854
1161:Veno-Echo.cpp **** 
 3240              		.loc 20 1161 5 view .LVU855
1163:Veno-Echo.cpp ****     //static float Res_Last{}; //last res value (unscaled)
 3241              		.loc 20 1163 5 view .LVU856
1168:Veno-Echo.cpp **** 
 3242              		.loc 20 1168 5 view .LVU857
1168:Veno-Echo.cpp **** 
 3243              		.loc 20 1168 40 is_stmt 0 view .LVU858
 3244 0000 0522     		movs	r2, #5
 3245 0002 0721     		movs	r1, #7
 3246 0004 8048     		ldr	r0, .L220+24
1158:Veno-Echo.cpp ****     static bool lastShift{};
 3247              		.loc 20 1158 1 view .LVU859
 3248 0006 10B5     		push	{r4, lr}
 3249              		.cfi_def_cfa_offset 8
 3250              		.cfi_offset 4, -8
 3251              		.cfi_offset 14, -4
 3252 0008 2DED028B 		vpush.64	{d8}
 3253              		.cfi_def_cfa_offset 16
 3254              		.cfi_offset 80, -16
 3255              		.cfi_offset 81, -12
1168:Veno-Echo.cpp **** 
 3256              		.loc 20 1168 40 view .LVU860
 3257 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3258              	.LVL147:
 3259              	.LBB1103:
1170:Veno-Echo.cpp ****     {   
 3260              		.loc 20 1170 9 view .LVU861
 3261 0010 7E4B     		ldr	r3, .L220+28
 3262              	.LVL148:
1170:Veno-Echo.cpp ****     {   
 3263              		.loc 20 1170 9 view .LVU862
 3264              	.LBE1103:
1170:Veno-Echo.cpp ****     {   
 3265              		.loc 20 1170 5 is_stmt 1 view .LVU863
 3266              	.LBB1137:
 3267              	.LBB1104:
1175:Veno-Echo.cpp ****         {
 3268              		.loc 20 1175 19 is_stmt 0 view .LVU864
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 153


 3269 0012 7F4A     		ldr	r2, .L220+32
 3270              	.LBE1104:
1170:Veno-Echo.cpp ****     {   
 3271              		.loc 20 1170 5 view .LVU865
 3272 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3273 0016 B3BB     		cbnz	r3, .L188
 3274              	.LBB1125:
1173:Veno-Echo.cpp **** 
 3275              		.loc 20 1173 9 is_stmt 1 view .LVU866
1175:Veno-Echo.cpp ****         {
 3276              		.loc 20 1175 9 view .LVU867
 3277 0018 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3278 001a 0029     		cmp	r1, #0
 3279 001c 40D0     		beq	.L189
1177:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 3280              		.loc 20 1177 13 view .LVU868
1179:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3281              		.loc 20 1179 27 is_stmt 0 view .LVU869
 3282 001e 7D48     		ldr	r0, .L220+36
1180:Veno-Echo.cpp ****         } 
 3283              		.loc 20 1180 24 view .LVU870
 3284 0020 7D49     		ldr	r1, .L220+40
1177:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 3285              		.loc 20 1177 23 view .LVU871
 3286 0022 1370     		strb	r3, [r2]
1179:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3287              		.loc 20 1179 13 is_stmt 1 view .LVU872
1179:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3288              		.loc 20 1179 27 is_stmt 0 view .LVU873
 3289 0024 0370     		strb	r3, [r0]
1180:Veno-Echo.cpp ****         } 
 3290              		.loc 20 1180 13 is_stmt 1 view .LVU874
1180:Veno-Echo.cpp ****         } 
 3291              		.loc 20 1180 24 is_stmt 0 view .LVU875
 3292 0026 81ED000A 		vstr.32	s0, [r1]
 3293              	.L190:
1196:Veno-Echo.cpp **** 
 3294              		.loc 20 1196 9 is_stmt 1 view .LVU876
 3295              	.LVL149:
1198:Veno-Echo.cpp ****         {
 3296              		.loc 20 1198 9 view .LVU877
1206:Veno-Echo.cpp ****         }
 3297              		.loc 20 1206 13 view .LVU878
 3298              	.LBB1105:
 3299              	.LBI1105:
1853:Veno-Echo.cpp **** {
 3300              		.loc 20 1853 7 view .LVU879
 3301              	.LBB1106:
1855:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3302              		.loc 20 1855 5 view .LVU880
1856:Veno-Echo.cpp **** 
 3303              		.loc 20 1856 5 view .LVU881
 3304              	.LBE1106:
 3305              	.LBE1105:
1206:Veno-Echo.cpp ****         }
 3306              		.loc 20 1206 37 is_stmt 0 view .LVU882
 3307 002a 7C4A     		ldr	r2, .L220+44
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 154


 3308              	.LBB1109:
 3309              	.LBB1107:
1856:Veno-Echo.cpp **** 
 3310              		.loc 20 1856 39 view .LVU883
 3311 002c F7EE006A 		vmov.f32	s13, #1.0e+0
1856:Veno-Echo.cpp **** 
 3312              		.loc 20 1856 49 view .LVU884
 3313 0030 F6EE005A 		vmov.f32	s11, #5.0e-1
 3314              	.LBE1107:
 3315              	.LBE1109:
1206:Veno-Echo.cpp ****         }
 3316              		.loc 20 1206 37 view .LVU885
 3317 0034 7A4B     		ldr	r3, .L220+48
 3318              	.LBB1110:
 3319              	.LBB1108:
1856:Veno-Echo.cpp **** 
 3320              		.loc 20 1856 39 view .LVU886
 3321 0036 92ED007A 		vldr.32	s14, [r2]
1856:Veno-Echo.cpp **** 
 3322              		.loc 20 1856 12 view .LVU887
 3323 003a B0EE006A 		vmov.f32	s12, #2.0e+0
 3324 003e D3ED007A 		vldr.32	s15, [r3]
1856:Veno-Echo.cpp **** 
 3325              		.loc 20 1856 39 view .LVU888
 3326 0042 36EEC77A 		vsub.f32	s14, s13, s14
1856:Veno-Echo.cpp **** 
 3327              		.loc 20 1856 49 view .LVU889
 3328 0046 37EE657A 		vsub.f32	s14, s14, s11
1856:Veno-Echo.cpp **** 
 3329              		.loc 20 1856 12 view .LVU890
 3330 004a E7EE067A 		vfma.f32	s15, s14, s12
 3331              	.LVL150:
1858:Veno-Echo.cpp ****     {
 3332              		.loc 20 1858 5 is_stmt 1 view .LVU891
 3333 004e F5EEC07A 		vcmpe.f32	s15, #0
 3334 0052 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3335 0056 00F1BA80 		bmi	.L207
1863:Veno-Echo.cpp ****     {
 3336              		.loc 20 1863 5 view .LVU892
 3337 005a F4EEE67A 		vcmpe.f32	s15, s13
 3338 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3339 0062 40F3BF80 		ble	.L213
 3340              	.LVL151:
 3341              	.L198:
1863:Veno-Echo.cpp ****     {
 3342              		.loc 20 1863 5 is_stmt 0 view .LVU893
 3343              	.LBE1108:
 3344              	.LBE1110:
1213:Veno-Echo.cpp ****         }
 3345              		.loc 20 1213 26 view .LVU894
 3346 0066 B7EE000A 		vmov.f32	s0, #1.0e+0
 3347              	.LVL152:
 3348              	.L197:
1225:Veno-Echo.cpp ****     }
 3349              		.loc 20 1225 9 is_stmt 1 view .LVU895
 3350              	.LBB1111:
 3351              	.LBI1111:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 155


 135:../DaisySP/Source/Utility/dsp.h **** {
 3352              		.loc 23 135 13 view .LVU896
 3353              	.LBB1112:
 3354              		.loc 23 137 5 view .LVU897
 3355              		.loc 23 137 9 is_stmt 0 view .LVU898
 3356 006a 6E4B     		ldr	r3, .L220+52
 3357 006c 9FED6E7A 		vldr.32	s14, .L220+56
 3358 0070 D3ED007A 		vldr.32	s15, [r3]
 3359              		.loc 23 137 24 view .LVU899
 3360 0074 30EE670A 		vsub.f32	s0, s0, s15
 3361              	.LVL153:
 3362              		.loc 23 137 24 view .LVU900
 3363              	.LBE1112:
 3364              	.LBE1111:
 3365              	.LBE1125:
 3366              	.LBE1137:
1264:Veno-Echo.cpp **** 
 3367              		.loc 20 1264 1 view .LVU901
 3368 0078 BDEC028B 		vldm	sp!, {d8}
 3369              		.cfi_remember_state
 3370              		.cfi_restore 80
 3371              		.cfi_restore 81
 3372              		.cfi_def_cfa_offset 8
 3373              	.LBB1138:
 3374              	.LBB1126:
 3375              	.LBB1114:
 3376              	.LBB1113:
 3377              		.loc 23 137 9 view .LVU902
 3378 007c E0EE077A 		vfma.f32	s15, s0, s14
 3379 0080 C3ED007A 		vstr.32	s15, [r3]
 3380              	.LBE1113:
 3381              	.LBE1114:
 3382              	.LBE1126:
 3383              	.LBE1138:
1264:Veno-Echo.cpp **** 
 3384              		.loc 20 1264 1 view .LVU903
 3385 0084 10BD     		pop	{r4, pc}
 3386              	.LVL154:
 3387              	.L188:
 3388              		.cfi_restore_state
 3389              	.LBB1139:
 3390              	.LBB1127:
1229:Veno-Echo.cpp **** 
 3391              		.loc 20 1229 9 is_stmt 1 view .LVU904
1231:Veno-Echo.cpp ****         {
 3392              		.loc 20 1231 9 view .LVU905
 3393 0086 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3394 0088 002B     		cmp	r3, #0
 3395 008a 58D1     		bne	.L202
1233:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3396              		.loc 20 1233 13 view .LVU906
1233:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3397              		.loc 20 1233 23 is_stmt 0 view .LVU907
 3398 008c 0124     		movs	r4, #1
1234:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3399              		.loc 20 1234 24 view .LVU908
 3400 008e 6748     		ldr	r0, .L220+60
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 156


1235:Veno-Echo.cpp ****         }
 3401              		.loc 20 1235 21 view .LVU909
 3402 0090 6749     		ldr	r1, .L220+64
1233:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3403              		.loc 20 1233 23 view .LVU910
 3404 0092 1470     		strb	r4, [r2]
1234:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3405              		.loc 20 1234 13 is_stmt 1 view .LVU911
1234:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3406              		.loc 20 1234 24 is_stmt 0 view .LVU912
 3407 0094 0370     		strb	r3, [r0]
1235:Veno-Echo.cpp ****         }
 3408              		.loc 20 1235 13 is_stmt 1 view .LVU913
1235:Veno-Echo.cpp ****         }
 3409              		.loc 20 1235 21 is_stmt 0 view .LVU914
 3410 0096 81ED000A 		vstr.32	s0, [r1]
 3411              	.L187:
1235:Veno-Echo.cpp ****         }
 3412              		.loc 20 1235 21 view .LVU915
 3413              	.LBE1127:
 3414              	.LBE1139:
1264:Veno-Echo.cpp **** 
 3415              		.loc 20 1264 1 view .LVU916
 3416 009a BDEC028B 		vldm	sp!, {d8}
 3417              		.cfi_remember_state
 3418              		.cfi_restore 80
 3419              		.cfi_restore 81
 3420              		.cfi_def_cfa_offset 8
 3421 009e 10BD     		pop	{r4, pc}
 3422              	.L189:
 3423              		.cfi_restore_state
 3424              	.LBB1140:
 3425              	.LBB1134:
1185:Veno-Echo.cpp ****             {
 3426              		.loc 20 1185 13 is_stmt 1 view .LVU917
1185:Veno-Echo.cpp ****             {
 3427              		.loc 20 1185 16 is_stmt 0 view .LVU918
 3428 00a0 5C4B     		ldr	r3, .L220+36
1185:Veno-Echo.cpp ****             {
 3429              		.loc 20 1185 13 view .LVU919
 3430 00a2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3431 00a4 7AB9     		cbnz	r2, .L191
1188:Veno-Echo.cpp ****                 {
 3432              		.loc 20 1188 17 is_stmt 1 view .LVU920
 3433              	.LVL155:
 3434              	.LBB1115:
 3435              	.LBI1115:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3436              		.loc 21 75 3 view .LVU921
 3437              	.LBB1116:
 3438              		.loc 21 76 5 view .LVU922
 3439              		.loc 21 76 5 is_stmt 0 view .LVU923
 3440              	.LBE1116:
 3441              	.LBE1115:
1188:Veno-Echo.cpp ****                 {
 3442              		.loc 20 1188 23 view .LVU924
 3443 00a6 5C4A     		ldr	r2, .L220+40
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 157


1188:Veno-Echo.cpp ****                 {
 3444              		.loc 20 1188 17 view .LVU925
 3445 00a8 9FED627A 		vldr.32	s14, .L220+68
1188:Veno-Echo.cpp ****                 {
 3446              		.loc 20 1188 23 view .LVU926
 3447 00ac D2ED007A 		vldr.32	s15, [r2]
 3448 00b0 70EE677A 		vsub.f32	s15, s0, s15
 3449              	.LBB1118:
 3450              	.LBB1117:
 3451              		.loc 21 76 31 view .LVU927
 3452 00b4 F0EEE77A 		vabs.f32	s15, s15
 3453              	.LBE1117:
 3454              	.LBE1118:
1188:Veno-Echo.cpp ****                 {
 3455              		.loc 20 1188 17 view .LVU928
 3456 00b8 F4EEC77A 		vcmpe.f32	s15, s14
 3457 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3458 00c0 B3DD     		ble	.L190
1190:Veno-Echo.cpp ****                 }
 3459              		.loc 20 1190 21 is_stmt 1 view .LVU929
1190:Veno-Echo.cpp ****                 }
 3460              		.loc 20 1190 35 is_stmt 0 view .LVU930
 3461 00c2 0122     		movs	r2, #1
 3462 00c4 1A70     		strb	r2, [r3]
 3463              	.L191:
1196:Veno-Echo.cpp **** 
 3464              		.loc 20 1196 9 is_stmt 1 view .LVU931
 3465              	.LVL156:
1198:Veno-Echo.cpp ****         {
 3466              		.loc 20 1198 9 view .LVU932
1200:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 3467              		.loc 20 1200 13 view .LVU933
 3468              	.LBB1119:
 3469              	.LBI1119:
1853:Veno-Echo.cpp **** {
 3470              		.loc 20 1853 7 view .LVU934
 3471              	.LBB1120:
1855:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3472              		.loc 20 1855 5 view .LVU935
1856:Veno-Echo.cpp **** 
 3473              		.loc 20 1856 5 view .LVU936
 3474              	.LBE1120:
 3475              	.LBE1119:
1200:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 3476              		.loc 20 1200 37 is_stmt 0 view .LVU937
 3477 00c6 554B     		ldr	r3, .L220+44
 3478              	.LBB1123:
 3479              	.LBB1121:
1856:Veno-Echo.cpp **** 
 3480              		.loc 20 1856 39 view .LVU938
 3481 00c8 B7EE007A 		vmov.f32	s14, #1.0e+0
1856:Veno-Echo.cpp **** 
 3482              		.loc 20 1856 49 view .LVU939
 3483 00cc B6EE006A 		vmov.f32	s12, #5.0e-1
1856:Veno-Echo.cpp **** 
 3484              		.loc 20 1856 39 view .LVU940
 3485 00d0 D3ED007A 		vldr.32	s15, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 158


1856:Veno-Echo.cpp **** 
 3486              		.loc 20 1856 12 view .LVU941
 3487 00d4 F0EE006A 		vmov.f32	s13, #2.0e+0
1856:Veno-Echo.cpp **** 
 3488              		.loc 20 1856 39 view .LVU942
 3489 00d8 77EE677A 		vsub.f32	s15, s14, s15
1856:Veno-Echo.cpp **** 
 3490              		.loc 20 1856 49 view .LVU943
 3491 00dc 77EEC67A 		vsub.f32	s15, s15, s12
1856:Veno-Echo.cpp **** 
 3492              		.loc 20 1856 12 view .LVU944
 3493 00e0 B0EE406A 		vmov.f32	s12, s0
 3494 00e4 A7EEA66A 		vfma.f32	s12, s15, s13
1858:Veno-Echo.cpp ****     {
 3495              		.loc 20 1858 5 view .LVU945
 3496 00e8 B5EEC06A 		vcmpe.f32	s12, #0
1856:Veno-Echo.cpp **** 
 3497              		.loc 20 1856 12 view .LVU946
 3498 00ec F0EE467A 		vmov.f32	s15, s12
 3499              	.LVL157:
1858:Veno-Echo.cpp ****     {
 3500              		.loc 20 1858 5 is_stmt 1 view .LVU947
 3501 00f0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3502 00f4 6ED4     		bmi	.L218
1863:Veno-Echo.cpp ****     {
 3503              		.loc 20 1863 5 view .LVU948
 3504 00f6 F4EEC77A 		vcmpe.f32	s15, s14
 3505 00fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3506 00fe 6EDD     		ble	.L219
1865:Veno-Echo.cpp ****     }
 3507              		.loc 20 1865 16 is_stmt 0 view .LVU949
 3508 0100 F0EE477A 		vmov.f32	s15, s14
 3509 0104 B7EE006B 		vmov.f64	d6, #1.0e+0
 3510              	.LVL158:
 3511              	.L193:
1868:Veno-Echo.cpp **** }
 3512              		.loc 20 1868 5 is_stmt 1 view .LVU950
1868:Veno-Echo.cpp **** }
 3513              		.loc 20 1868 5 is_stmt 0 view .LVU951
 3514              	.LBE1121:
 3515              	.LBE1123:
1201:Veno-Echo.cpp ****         }
 3516              		.loc 20 1201 13 is_stmt 1 view .LVU952
1201:Veno-Echo.cpp ****         }
 3517              		.loc 20 1201 25 is_stmt 0 view .LVU953
 3518 0108 454B     		ldr	r3, .L220+48
 3519 010a 83ED000A 		vstr.32	s0, [r3]
 3520              	.LVL159:
 3521              	.L194:
1209:Veno-Echo.cpp **** 
 3522              		.loc 20 1209 9 is_stmt 1 view .LVU954
1211:Veno-Echo.cpp ****         {
 3523              		.loc 20 1211 9 view .LVU955
 3524 010e 9FED385B 		vldr.64	d5, .L220
 3525 0112 B4EEC56B 		vcmpe.f64	d6, d5
 3526 0116 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3527 011a A4DA     		bge	.L198
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 159


1215:Veno-Echo.cpp ****         {
 3528              		.loc 20 1215 14 view .LVU956
 3529 011c 9FED365B 		vldr.64	d5, .L220+8
 3530 0120 B4EEC56B 		vcmpe.f64	d6, d5
 3531 0124 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3532 0128 51D9     		bls	.L207
1221:Veno-Echo.cpp ****         }
 3533              		.loc 20 1221 13 view .LVU957
1221:Veno-Echo.cpp ****         }
 3534              		.loc 20 1221 33 is_stmt 0 view .LVU958
 3535 012a B0EE670A 		vmov.f32	s0, s15
 3536              	.LVL160:
1221:Veno-Echo.cpp ****         }
 3537              		.loc 20 1221 33 view .LVU959
 3538 012e 0020     		movs	r0, #0
 3539 0130 B7EE001A 		vmov.f32	s2, #1.0e+0
 3540 0134 DFED400A 		vldr.32	s1, .L220+72
 3541 0138 FFF7FEFF 		bl	_Z5scalefff9CurveType
 3542              	.LVL161:
1221:Veno-Echo.cpp ****         }
 3543              		.loc 20 1221 33 view .LVU960
 3544 013c 95E7     		b	.L197
 3545              	.LVL162:
 3546              	.L202:
1221:Veno-Echo.cpp ****         }
 3547              		.loc 20 1221 33 view .LVU961
 3548              	.LBE1134:
 3549              	.LBB1135:
1240:Veno-Echo.cpp ****             {
 3550              		.loc 20 1240 13 is_stmt 1 view .LVU962
1240:Veno-Echo.cpp ****             {
 3551              		.loc 20 1240 16 is_stmt 0 view .LVU963
 3552 013e 3B4B     		ldr	r3, .L220+60
1240:Veno-Echo.cpp ****             {
 3553              		.loc 20 1240 13 view .LVU964
 3554 0140 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3555 0142 7AB9     		cbnz	r2, .L204
1242:Veno-Echo.cpp ****                 {
 3556              		.loc 20 1242 17 is_stmt 1 view .LVU965
 3557              	.LVL163:
 3558              	.LBB1128:
 3559              	.LBI1128:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3560              		.loc 21 75 3 view .LVU966
 3561              	.LBB1129:
 3562              		.loc 21 76 5 view .LVU967
 3563              		.loc 21 76 5 is_stmt 0 view .LVU968
 3564              	.LBE1129:
 3565              	.LBE1128:
1242:Veno-Echo.cpp ****                 {
 3566              		.loc 20 1242 23 view .LVU969
 3567 0144 3A4A     		ldr	r2, .L220+64
1242:Veno-Echo.cpp ****                 {
 3568              		.loc 20 1242 17 view .LVU970
 3569 0146 9FED3B7A 		vldr.32	s14, .L220+68
1242:Veno-Echo.cpp ****                 {
 3570              		.loc 20 1242 23 view .LVU971
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 160


 3571 014a D2ED007A 		vldr.32	s15, [r2]
 3572 014e 70EE677A 		vsub.f32	s15, s0, s15
 3573              	.LBB1131:
 3574              	.LBB1130:
 3575              		.loc 21 76 31 view .LVU972
 3576 0152 F0EEE77A 		vabs.f32	s15, s15
 3577              	.LBE1130:
 3578              	.LBE1131:
1242:Veno-Echo.cpp ****                 {
 3579              		.loc 20 1242 17 view .LVU973
 3580 0156 F4EEC77A 		vcmpe.f32	s15, s14
 3581 015a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3582 015e 9CDD     		ble	.L187
1244:Veno-Echo.cpp ****                 }
 3583              		.loc 20 1244 21 is_stmt 1 view .LVU974
1244:Veno-Echo.cpp ****                 }
 3584              		.loc 20 1244 32 is_stmt 0 view .LVU975
 3585 0160 0122     		movs	r2, #1
 3586 0162 1A70     		strb	r2, [r3]
 3587              	.L204:
1249:Veno-Echo.cpp ****         {
 3588              		.loc 20 1249 9 is_stmt 1 view .LVU976
 3589              	.LBB1132:
 3590              	.LBB1133:
1251:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
 3591              		.loc 20 1251 13 view .LVU977
 3592              	.LVL164:
1252:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3593              		.loc 20 1252 13 view .LVU978
1252:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3594              		.loc 20 1252 24 is_stmt 0 view .LVU979
 3595 0164 B6EE001A 		vmov.f32	s2, #5.0e-1
 3596 0168 DFED330A 		vldr.32	s1, .L220+72
 3597 016c 0020     		movs	r0, #0
 3598 016e FFF7FEFF 		bl	_Z5scalefff9CurveType
 3599              	.LVL165:
1252:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3600              		.loc 20 1252 24 view .LVU980
 3601 0172 B0EE408A 		vmov.f32	s16, s0
 3602              	.LVL166:
1253:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 3603              		.loc 20 1253 13 is_stmt 1 view .LVU981
1253:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 3604              		.loc 20 1253 25 is_stmt 0 view .LVU982
 3605 0176 3148     		ldr	r0, .L220+76
 3606 0178 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3607              	.LVL167:
1254:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 3608              		.loc 20 1254 13 is_stmt 1 view .LVU983
1254:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 3609              		.loc 20 1254 25 is_stmt 0 view .LVU984
 3610 017c 3048     		ldr	r0, .L220+80
 3611 017e B0EE480A 		vmov.f32	s0, s16
 3612 0182 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3613              	.LVL168:
1255:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 3614              		.loc 20 1255 13 is_stmt 1 view .LVU985
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 161


1255:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 3615              		.loc 20 1255 25 is_stmt 0 view .LVU986
 3616 0186 B0EE480A 		vmov.f32	s0, s16
 3617 018a 2E48     		ldr	r0, .L220+84
 3618 018c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3619              	.LVL169:
1256:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 3620              		.loc 20 1256 13 is_stmt 1 view .LVU987
1256:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 3621              		.loc 20 1256 25 is_stmt 0 view .LVU988
 3622 0190 B0EE480A 		vmov.f32	s0, s16
 3623 0194 2C48     		ldr	r0, .L220+88
 3624 0196 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3625              	.LVL170:
1257:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 3626              		.loc 20 1257 13 is_stmt 1 view .LVU989
1257:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 3627              		.loc 20 1257 30 is_stmt 0 view .LVU990
 3628 019a B0EE480A 		vmov.f32	s0, s16
 3629 019e 2B48     		ldr	r0, .L220+92
 3630 01a0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3631              	.LVL171:
1258:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 3632              		.loc 20 1258 13 is_stmt 1 view .LVU991
1258:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 3633              		.loc 20 1258 30 is_stmt 0 view .LVU992
 3634 01a4 B0EE480A 		vmov.f32	s0, s16
 3635 01a8 2948     		ldr	r0, .L220+96
 3636 01aa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3637              	.LVL172:
1259:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 3638              		.loc 20 1259 13 is_stmt 1 view .LVU993
1259:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 3639              		.loc 20 1259 30 is_stmt 0 view .LVU994
 3640 01ae B0EE480A 		vmov.f32	s0, s16
 3641 01b2 2848     		ldr	r0, .L220+100
 3642 01b4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3643              	.LVL173:
1260:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 3644              		.loc 20 1260 13 is_stmt 1 view .LVU995
1260:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 3645              		.loc 20 1260 30 is_stmt 0 view .LVU996
 3646 01b8 B0EE480A 		vmov.f32	s0, s16
 3647 01bc 2648     		ldr	r0, .L220+104
 3648 01be FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3649              	.LVL174:
1261:Veno-Echo.cpp ****         }
 3650              		.loc 20 1261 13 is_stmt 1 view .LVU997
1261:Veno-Echo.cpp ****         }
 3651              		.loc 20 1261 35 is_stmt 0 view .LVU998
 3652 01c2 264B     		ldr	r3, .L220+108
 3653 01c4 83ED068A 		vstr.32	s16, [r3, #24]
 3654              	.LBE1133:
 3655              	.LBE1132:
 3656              	.LBE1135:
 3657              	.LBE1140:
1264:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 162


 3658              		.loc 20 1264 1 view .LVU999
 3659 01c8 BDEC028B 		vldm	sp!, {d8}
 3660              		.cfi_remember_state
 3661              		.cfi_restore 80
 3662              		.cfi_restore 81
 3663              		.cfi_def_cfa_offset 8
 3664              	.LVL175:
1264:Veno-Echo.cpp **** 
 3665              		.loc 20 1264 1 view .LVU1000
 3666 01cc 10BD     		pop	{r4, pc}
 3667              	.LVL176:
 3668              	.L207:
 3669              		.cfi_restore_state
 3670              	.LBB1141:
 3671              	.LBB1136:
1217:Veno-Echo.cpp ****         }
 3672              		.loc 20 1217 26 view .LVU1001
 3673 01ce 9FED1A0A 		vldr.32	s0, .L220+72
 3674              	.LVL177:
1217:Veno-Echo.cpp ****         }
 3675              		.loc 20 1217 26 view .LVU1002
 3676 01d2 4AE7     		b	.L197
 3677              	.LVL178:
 3678              	.L218:
 3679              	.LBB1124:
 3680              	.LBB1122:
1217:Veno-Echo.cpp ****         }
 3681              		.loc 20 1217 26 view .LVU1003
 3682 01d4 9FED0A6B 		vldr.64	d6, .L220+16
 3683              	.LVL179:
1860:Veno-Echo.cpp ****     }
 3684              		.loc 20 1860 16 view .LVU1004
 3685 01d8 DFED177A 		vldr.32	s15, .L220+72
 3686              	.LVL180:
1860:Veno-Echo.cpp ****     }
 3687              		.loc 20 1860 16 view .LVU1005
 3688 01dc 94E7     		b	.L193
 3689              	.LVL181:
 3690              	.L219:
1860:Veno-Echo.cpp ****     }
 3691              		.loc 20 1860 16 view .LVU1006
 3692 01de B7EEE76A 		vcvt.f64.f32	d6, s15
 3693              	.LVL182:
1860:Veno-Echo.cpp ****     }
 3694              		.loc 20 1860 16 view .LVU1007
 3695 01e2 91E7     		b	.L193
 3696              	.LVL183:
 3697              	.L213:
1860:Veno-Echo.cpp ****     }
 3698              		.loc 20 1860 16 view .LVU1008
 3699 01e4 B7EEE76A 		vcvt.f64.f32	d6, s15
 3700 01e8 91E7     		b	.L194
 3701              	.L221:
 3702 01ea 00BFAFF3 		.align	3
 3702      0080
 3703              	.L220:
 3704 01f0 5C8FC2F5 		.word	4123168604
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 163


 3705 01f4 285CEF3F 		.word	1072651304
 3706 01f8 7B14AE47 		.word	1202590843
 3707 01fc E17A943F 		.word	1066695393
 3708 0200 00000000 		.word	0
 3709 0204 00000000 		.word	0
 3710 0208 18000000 		.word	.LANCHOR4+24
 3711 020c 00000000 		.word	.LANCHOR7
 3712 0210 00000000 		.word	.LANCHOR51
 3713 0214 00000000 		.word	.LANCHOR52
 3714 0218 00000000 		.word	.LANCHOR53
 3715 021c 00000000 		.word	.LANCHOR50
 3716 0220 00000000 		.word	.LANCHOR54
 3717 0224 00000000 		.word	.LANCHOR55
 3718 0228 6F12833C 		.word	1015222895
 3719 022c 00000000 		.word	.LANCHOR56
 3720 0230 00000000 		.word	.LANCHOR57
 3721 0234 0AD7A33B 		.word	1000593162
 3722 0238 00000000 		.word	0
 3723 023c 00000000 		.word	.LANCHOR46
 3724 0240 00000000 		.word	.LANCHOR47
 3725 0244 00000000 		.word	.LANCHOR34
 3726 0248 00000000 		.word	.LANCHOR35
 3727 024c 00000000 		.word	.LANCHOR48
 3728 0250 00000000 		.word	.LANCHOR49
 3729 0254 00000000 		.word	.LANCHOR36
 3730 0258 00000000 		.word	.LANCHOR37
 3731 025c 00000000 		.word	.LANCHOR16
 3732              	.LBE1122:
 3733              	.LBE1124:
 3734              	.LBE1136:
 3735              	.LBE1141:
 3736              		.cfi_endproc
 3737              	.LFE4321:
 3739              		.section	.text._Z15Update_width_CVv,"ax",%progbits
 3740              		.align	1
 3741              		.p2align 2,,3
 3742              		.global	_Z15Update_width_CVv
 3743              		.syntax unified
 3744              		.thumb
 3745              		.thumb_func
 3746              		.fpu fpv5-d16
 3748              	_Z15Update_width_CVv:
 3749              	.LFB4322:
1267:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 3750              		.loc 20 1267 1 is_stmt 1 view -0
 3751              		.cfi_startproc
 3752              		@ args = 0, pretend = 0, frame = 0
 3753              		@ frame_needed = 0, uses_anonymous_args = 0
1268:Veno-Echo.cpp **** }
 3754              		.loc 20 1268 5 view .LVU1010
1267:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 3755              		.loc 20 1267 1 is_stmt 0 view .LVU1011
 3756 0000 08B5     		push	{r3, lr}
 3757              		.cfi_def_cfa_offset 8
 3758              		.cfi_offset 3, -8
 3759              		.cfi_offset 14, -4
1268:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 164


 3760              		.loc 20 1268 30 view .LVU1012
 3761 0002 0521     		movs	r1, #5
 3762 0004 0348     		ldr	r0, .L224
 3763 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3764              	.LVL184:
1268:Veno-Echo.cpp **** }
 3765              		.loc 20 1268 13 view .LVU1013
 3766 000a 034B     		ldr	r3, .L224+4
 3767 000c 83ED000A 		vstr.32	s0, [r3]
1269:Veno-Echo.cpp **** 
 3768              		.loc 20 1269 1 view .LVU1014
 3769 0010 08BD     		pop	{r3, pc}
 3770              	.L225:
 3771 0012 00BF     		.align	2
 3772              	.L224:
 3773 0014 18000000 		.word	.LANCHOR4+24
 3774 0018 00000000 		.word	.LANCHOR58
 3775              		.cfi_endproc
 3776              	.LFE4322:
 3778              		.section	.text._Z12Update_widthv,"ax",%progbits
 3779              		.align	1
 3780              		.p2align 2,,3
 3781              		.global	_Z12Update_widthv
 3782              		.syntax unified
 3783              		.thumb
 3784              		.thumb_func
 3785              		.fpu fpv5-d16
 3787              	_Z12Update_widthv:
 3788              	.LFB4323:
1272:Veno-Echo.cpp ****     static bool lastShift{};
 3789              		.loc 20 1272 1 is_stmt 1 view -0
 3790              		.cfi_startproc
 3791              		@ args = 0, pretend = 0, frame = 0
 3792              		@ frame_needed = 0, uses_anonymous_args = 0
1273:Veno-Echo.cpp ****     static bool width_pickup{};
 3793              		.loc 20 1273 5 view .LVU1016
1274:Veno-Echo.cpp ****     static bool ModDepth_pickup{};
 3794              		.loc 20 1274 5 view .LVU1017
1275:Veno-Echo.cpp **** 
 3795              		.loc 20 1275 5 view .LVU1018
1277:Veno-Echo.cpp **** 
 3796              		.loc 20 1277 5 view .LVU1019
1280:Veno-Echo.cpp **** 
 3797              		.loc 20 1280 5 view .LVU1020
1280:Veno-Echo.cpp **** 
 3798              		.loc 20 1280 39 is_stmt 0 view .LVU1021
 3799 0000 0722     		movs	r2, #7
 3800 0002 5F48     		ldr	r0, .L255
 3801 0004 1146     		mov	r1, r2
1272:Veno-Echo.cpp ****     static bool lastShift{};
 3802              		.loc 20 1272 1 view .LVU1022
 3803 0006 10B5     		push	{r4, lr}
 3804              		.cfi_def_cfa_offset 8
 3805              		.cfi_offset 4, -8
 3806              		.cfi_offset 14, -4
 3807 0008 2DED028B 		vpush.64	{d8}
 3808              		.cfi_def_cfa_offset 16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 165


 3809              		.cfi_offset 80, -16
 3810              		.cfi_offset 81, -12
1280:Veno-Echo.cpp **** 
 3811              		.loc 20 1280 39 view .LVU1023
 3812 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3813              	.LVL185:
 3814              	.LBB1142:
1282:Veno-Echo.cpp ****     {   
 3815              		.loc 20 1282 9 view .LVU1024
 3816 0010 5C4B     		ldr	r3, .L255+4
 3817              	.LBE1142:
1280:Veno-Echo.cpp **** 
 3818              		.loc 20 1280 39 view .LVU1025
 3819 0012 B0EE408A 		vmov.f32	s16, s0
 3820              	.LVL186:
1282:Veno-Echo.cpp ****     {   
 3821              		.loc 20 1282 5 is_stmt 1 view .LVU1026
 3822              	.LBB1182:
 3823              	.LBB1143:
1286:Veno-Echo.cpp ****         {
 3824              		.loc 20 1286 19 is_stmt 0 view .LVU1027
 3825 0016 5C4A     		ldr	r2, .L255+8
 3826              	.LBE1143:
1282:Veno-Echo.cpp ****     {   
 3827              		.loc 20 1282 5 view .LVU1028
 3828 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3829 001a 002B     		cmp	r3, #0
 3830 001c 3ED1     		bne	.L227
 3831              	.LBB1172:
1284:Veno-Echo.cpp ****         //update pickup
 3832              		.loc 20 1284 9 is_stmt 1 view .LVU1029
1286:Veno-Echo.cpp ****         {
 3833              		.loc 20 1286 9 view .LVU1030
 3834 001e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3835 0020 0029     		cmp	r1, #0
 3836 0022 48D0     		beq	.L228
1288:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
 3837              		.loc 20 1288 13 view .LVU1031
1289:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3838              		.loc 20 1289 26 is_stmt 0 view .LVU1032
 3839 0024 5948     		ldr	r0, .L255+12
1290:Veno-Echo.cpp ****         }
 3840              		.loc 20 1290 23 view .LVU1033
 3841 0026 5A49     		ldr	r1, .L255+16
1288:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
 3842              		.loc 20 1288 23 view .LVU1034
 3843 0028 1370     		strb	r3, [r2]
1289:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3844              		.loc 20 1289 13 is_stmt 1 view .LVU1035
1289:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3845              		.loc 20 1289 26 is_stmt 0 view .LVU1036
 3846 002a 0370     		strb	r3, [r0]
1290:Veno-Echo.cpp ****         }
 3847              		.loc 20 1290 13 is_stmt 1 view .LVU1037
1290:Veno-Echo.cpp ****         }
 3848              		.loc 20 1290 23 is_stmt 0 view .LVU1038
 3849 002c 81ED000A 		vstr.32	s0, [r1]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 166


 3850              	.L229:
1305:Veno-Echo.cpp **** 
 3851              		.loc 20 1305 9 is_stmt 1 view .LVU1039
 3852              	.LVL187:
1307:Veno-Echo.cpp ****         {
 3853              		.loc 20 1307 9 view .LVU1040
1315:Veno-Echo.cpp ****         }
 3854              		.loc 20 1315 13 view .LVU1041
 3855              	.LBB1144:
 3856              	.LBI1144:
1853:Veno-Echo.cpp **** {
 3857              		.loc 20 1853 7 view .LVU1042
 3858              	.LBB1145:
1855:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3859              		.loc 20 1855 5 view .LVU1043
1856:Veno-Echo.cpp **** 
 3860              		.loc 20 1856 5 view .LVU1044
 3861              	.LBE1145:
 3862              	.LBE1144:
1315:Veno-Echo.cpp ****         }
 3863              		.loc 20 1315 32 is_stmt 0 view .LVU1045
 3864 0030 584A     		ldr	r2, .L255+20
 3865              	.LBB1149:
 3866              	.LBB1146:
1856:Veno-Echo.cpp **** 
 3867              		.loc 20 1856 39 view .LVU1046
 3868 0032 B7EE007A 		vmov.f32	s14, #1.0e+0
1856:Veno-Echo.cpp **** 
 3869              		.loc 20 1856 49 view .LVU1047
 3870 0036 B6EE006A 		vmov.f32	s12, #5.0e-1
 3871              	.LBE1146:
 3872              	.LBE1149:
1315:Veno-Echo.cpp ****         }
 3873              		.loc 20 1315 32 view .LVU1048
 3874 003a 574B     		ldr	r3, .L255+24
 3875              	.LBB1150:
 3876              	.LBB1147:
1856:Veno-Echo.cpp **** 
 3877              		.loc 20 1856 39 view .LVU1049
 3878 003c D2ED007A 		vldr.32	s15, [r2]
1856:Veno-Echo.cpp **** 
 3879              		.loc 20 1856 12 view .LVU1050
 3880 0040 F0EE006A 		vmov.f32	s13, #2.0e+0
 3881 0044 93ED000A 		vldr.32	s0, [r3]
 3882              	.LVL188:
1856:Veno-Echo.cpp **** 
 3883              		.loc 20 1856 39 view .LVU1051
 3884 0048 77EE677A 		vsub.f32	s15, s14, s15
1856:Veno-Echo.cpp **** 
 3885              		.loc 20 1856 49 view .LVU1052
 3886 004c 77EEC67A 		vsub.f32	s15, s15, s12
1856:Veno-Echo.cpp **** 
 3887              		.loc 20 1856 12 view .LVU1053
 3888 0050 A7EEA60A 		vfma.f32	s0, s15, s13
 3889              	.LVL189:
1858:Veno-Echo.cpp ****     {
 3890              		.loc 20 1858 5 is_stmt 1 view .LVU1054
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 167


 3891 0054 B5EEC00A 		vcmpe.f32	s0, #0
 3892 0058 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3893 005c 00F18A80 		bmi	.L253
1863:Veno-Echo.cpp ****     {
 3894              		.loc 20 1863 5 view .LVU1055
1865:Veno-Echo.cpp ****     }
 3895              		.loc 20 1865 16 is_stmt 0 view .LVU1056
 3896 0060 B4EE470A 		vcmp.f32	s0, s14
 3897 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3898 0068 37FE000A 		vselgt.f32	s0, s14, s0
 3899              	.LVL190:
 3900              	.L235:
1868:Veno-Echo.cpp **** }
 3901              		.loc 20 1868 5 is_stmt 1 view .LVU1057
1868:Veno-Echo.cpp **** }
 3902              		.loc 20 1868 5 is_stmt 0 view .LVU1058
 3903              	.LBE1147:
 3904              	.LBE1150:
1315:Veno-Echo.cpp ****         }
 3905              		.loc 20 1315 32 view .LVU1059
 3906 006c F6EE000A 		vmov.f32	s1, #5.0e-1
 3907 0070 0020     		movs	r0, #0
 3908 0072 9FED4A1A 		vldr.32	s2, .L255+28
 3909 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 3910              	.LVL191:
 3911              	.L234:
1318:Veno-Echo.cpp ****             WidthXfade.SetPos(width);
 3912              		.loc 20 1318 13 is_stmt 1 view .LVU1060
 3913              	.LBB1151:
 3914              	.LBI1151:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3915              		.loc 23 135 13 view .LVU1061
 3916              	.LBB1152:
 3917              		.loc 23 137 5 view .LVU1062
 3918              		.loc 23 137 9 is_stmt 0 view .LVU1063
 3919 007a 494B     		ldr	r3, .L255+32
 3920 007c 9FED497A 		vldr.32	s14, .L255+36
 3921 0080 D3ED007A 		vldr.32	s15, [r3]
 3922              	.LBE1152:
 3923              	.LBE1151:
 3924              	.LBB1155:
 3925              	.LBB1156:
  38:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initializes CrossFade module
  39:../DaisySP/Source/Dynamics/crossfade.h ****         Defaults
  40:../DaisySP/Source/Dynamics/crossfade.h ****         - current position = .5
  41:../DaisySP/Source/Dynamics/crossfade.h ****         - curve = linear
  42:../DaisySP/Source/Dynamics/crossfade.h ****     */
  43:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init(int curve)
  44:../DaisySP/Source/Dynamics/crossfade.h ****     {
  45:../DaisySP/Source/Dynamics/crossfade.h ****         pos_   = 0.5f;
  46:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
  47:../DaisySP/Source/Dynamics/crossfade.h ****     }
  48:../DaisySP/Source/Dynamics/crossfade.h **** 
  49:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initialize with default linear curve 
  50:../DaisySP/Source/Dynamics/crossfade.h ****     */
  51:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init() { Init(CROSSFADE_LIN); }
  52:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 168


  53:../DaisySP/Source/Dynamics/crossfade.h ****     */
  54:../DaisySP/Source/Dynamics/crossfade.h ****     float Process(float &in1, float &in2);
  55:../DaisySP/Source/Dynamics/crossfade.h **** 
  56:../DaisySP/Source/Dynamics/crossfade.h **** 
  57:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets position of CrossFade between two input signals
  58:../DaisySP/Source/Dynamics/crossfade.h ****         Input range: 0 to 1
  59:../DaisySP/Source/Dynamics/crossfade.h ****     */
  60:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetPos(float pos) { pos_ = pos; }
 3926              		.loc 10 60 42 view .LVU1064
 3927 0084 484A     		ldr	r2, .L255+40
 3928              	.LBE1156:
 3929              	.LBE1155:
 3930              	.LBB1158:
 3931              	.LBB1153:
 3932              		.loc 23 137 24 view .LVU1065
 3933 0086 30EE670A 		vsub.f32	s0, s0, s15
 3934              	.LVL192:
 3935              		.loc 23 137 24 view .LVU1066
 3936              	.LBE1153:
 3937              	.LBE1158:
 3938              	.LBE1172:
 3939              	.LBE1182:
1350:Veno-Echo.cpp **** 
 3940              		.loc 20 1350 1 view .LVU1067
 3941 008a BDEC028B 		vldm	sp!, {d8}
 3942              		.cfi_remember_state
 3943              		.cfi_restore 80
 3944              		.cfi_restore 81
 3945              		.cfi_def_cfa_offset 8
 3946              	.LVL193:
 3947              	.LBB1183:
 3948              	.LBB1173:
 3949              	.LBB1159:
 3950              	.LBB1154:
 3951              		.loc 23 137 9 view .LVU1068
 3952 008e E0EE077A 		vfma.f32	s15, s0, s14
 3953 0092 C3ED007A 		vstr.32	s15, [r3]
 3954              	.LVL194:
 3955              		.loc 23 137 9 view .LVU1069
 3956              	.LBE1154:
 3957              	.LBE1159:
1319:Veno-Echo.cpp ****     }
 3958              		.loc 20 1319 13 is_stmt 1 view .LVU1070
 3959              	.LBB1160:
 3960              	.LBI1155:
 3961              		.loc 10 60 17 view .LVU1071
 3962              	.LBB1157:
 3963              		.loc 10 60 37 view .LVU1072
 3964              		.loc 10 60 42 is_stmt 0 view .LVU1073
 3965 0096 C2ED007A 		vstr.32	s15, [r2]
 3966              	.LBE1157:
 3967              	.LBE1160:
 3968              	.LBE1173:
 3969              	.LBE1183:
1350:Veno-Echo.cpp **** 
 3970              		.loc 20 1350 1 view .LVU1074
 3971 009a 10BD     		pop	{r4, pc}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 169


 3972              	.LVL195:
 3973              	.L227:
 3974              		.cfi_restore_state
 3975              	.LBB1184:
 3976              	.LBB1174:
1324:Veno-Echo.cpp **** 
 3977              		.loc 20 1324 9 is_stmt 1 view .LVU1075
1326:Veno-Echo.cpp ****         {
 3978              		.loc 20 1326 9 view .LVU1076
 3979 009c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3980 009e 002B     		cmp	r3, #0
 3981 00a0 43D1     		bne	.L238
1328:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 3982              		.loc 20 1328 13 view .LVU1077
1328:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 3983              		.loc 20 1328 23 is_stmt 0 view .LVU1078
 3984 00a2 0124     		movs	r4, #1
1329:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 3985              		.loc 20 1329 29 view .LVU1079
 3986 00a4 4148     		ldr	r0, .L255+44
1330:Veno-Echo.cpp ****         }
 3987              		.loc 20 1330 26 view .LVU1080
 3988 00a6 4249     		ldr	r1, .L255+48
1328:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 3989              		.loc 20 1328 23 view .LVU1081
 3990 00a8 1470     		strb	r4, [r2]
1329:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 3991              		.loc 20 1329 13 is_stmt 1 view .LVU1082
1329:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 3992              		.loc 20 1329 29 is_stmt 0 view .LVU1083
 3993 00aa 0370     		strb	r3, [r0]
1330:Veno-Echo.cpp ****         }
 3994              		.loc 20 1330 13 is_stmt 1 view .LVU1084
1330:Veno-Echo.cpp ****         }
 3995              		.loc 20 1330 26 is_stmt 0 view .LVU1085
 3996 00ac 81ED000A 		vstr.32	s0, [r1]
 3997              	.L226:
1330:Veno-Echo.cpp ****         }
 3998              		.loc 20 1330 26 view .LVU1086
 3999              	.LBE1174:
 4000              	.LBE1184:
1350:Veno-Echo.cpp **** 
 4001              		.loc 20 1350 1 view .LVU1087
 4002 00b0 BDEC028B 		vldm	sp!, {d8}
 4003              		.cfi_remember_state
 4004              		.cfi_restore 80
 4005              		.cfi_restore 81
 4006              		.cfi_def_cfa_offset 8
 4007 00b4 10BD     		pop	{r4, pc}
 4008              	.L228:
 4009              		.cfi_restore_state
 4010              	.LBB1185:
 4011              	.LBB1179:
1295:Veno-Echo.cpp ****             {
 4012              		.loc 20 1295 13 is_stmt 1 view .LVU1088
1295:Veno-Echo.cpp ****             {
 4013              		.loc 20 1295 16 is_stmt 0 view .LVU1089
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 170


 4014 00b6 354B     		ldr	r3, .L255+12
1295:Veno-Echo.cpp ****             {
 4015              		.loc 20 1295 13 view .LVU1090
 4016 00b8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4017 00ba 7AB9     		cbnz	r2, .L230
1297:Veno-Echo.cpp ****                 {
 4018              		.loc 20 1297 17 is_stmt 1 view .LVU1091
 4019              	.LVL196:
 4020              	.LBB1161:
 4021              	.LBI1161:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4022              		.loc 21 75 3 view .LVU1092
 4023              	.LBB1162:
 4024              		.loc 21 76 5 view .LVU1093
 4025              		.loc 21 76 5 is_stmt 0 view .LVU1094
 4026              	.LBE1162:
 4027              	.LBE1161:
1297:Veno-Echo.cpp ****                 {
 4028              		.loc 20 1297 23 view .LVU1095
 4029 00bc 344A     		ldr	r2, .L255+16
1297:Veno-Echo.cpp ****                 {
 4030              		.loc 20 1297 17 view .LVU1096
 4031 00be 9FED3D7A 		vldr.32	s14, .L255+52
1297:Veno-Echo.cpp ****                 {
 4032              		.loc 20 1297 23 view .LVU1097
 4033 00c2 D2ED007A 		vldr.32	s15, [r2]
 4034 00c6 70EE677A 		vsub.f32	s15, s0, s15
 4035              	.LBB1164:
 4036              	.LBB1163:
 4037              		.loc 21 76 31 view .LVU1098
 4038 00ca F0EEE77A 		vabs.f32	s15, s15
 4039              	.LBE1163:
 4040              	.LBE1164:
1297:Veno-Echo.cpp ****                 {
 4041              		.loc 20 1297 17 view .LVU1099
 4042 00ce F4EEC77A 		vcmpe.f32	s15, s14
 4043 00d2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4044 00d6 ABDD     		ble	.L229
1299:Veno-Echo.cpp ****                 }
 4045              		.loc 20 1299 21 is_stmt 1 view .LVU1100
1299:Veno-Echo.cpp ****                 }
 4046              		.loc 20 1299 34 is_stmt 0 view .LVU1101
 4047 00d8 0122     		movs	r2, #1
 4048 00da 1A70     		strb	r2, [r3]
 4049              	.L230:
1305:Veno-Echo.cpp **** 
 4050              		.loc 20 1305 9 is_stmt 1 view .LVU1102
 4051              	.LVL197:
1307:Veno-Echo.cpp ****         {
 4052              		.loc 20 1307 9 view .LVU1103
1309:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4053              		.loc 20 1309 13 view .LVU1104
 4054              	.LBB1165:
 4055              	.LBI1165:
1853:Veno-Echo.cpp **** {
 4056              		.loc 20 1853 7 view .LVU1105
 4057              	.LBB1166:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 171


1855:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4058              		.loc 20 1855 5 view .LVU1106
1856:Veno-Echo.cpp **** 
 4059              		.loc 20 1856 5 view .LVU1107
 4060              	.LBE1166:
 4061              	.LBE1165:
1309:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4062              		.loc 20 1309 32 is_stmt 0 view .LVU1108
 4063 00dc 2D4B     		ldr	r3, .L255+20
 4064              	.LBB1169:
 4065              	.LBB1167:
1856:Veno-Echo.cpp **** 
 4066              		.loc 20 1856 39 view .LVU1109
 4067 00de B7EE007A 		vmov.f32	s14, #1.0e+0
1856:Veno-Echo.cpp **** 
 4068              		.loc 20 1856 49 view .LVU1110
 4069 00e2 B6EE006A 		vmov.f32	s12, #5.0e-1
1856:Veno-Echo.cpp **** 
 4070              		.loc 20 1856 39 view .LVU1111
 4071 00e6 D3ED007A 		vldr.32	s15, [r3]
1856:Veno-Echo.cpp **** 
 4072              		.loc 20 1856 12 view .LVU1112
 4073 00ea F0EE006A 		vmov.f32	s13, #2.0e+0
 4074 00ee B0EE480A 		vmov.f32	s0, s16
 4075              	.LVL198:
1856:Veno-Echo.cpp **** 
 4076              		.loc 20 1856 39 view .LVU1113
 4077 00f2 77EE677A 		vsub.f32	s15, s14, s15
1856:Veno-Echo.cpp **** 
 4078              		.loc 20 1856 49 view .LVU1114
 4079 00f6 77EEC67A 		vsub.f32	s15, s15, s12
1856:Veno-Echo.cpp **** 
 4080              		.loc 20 1856 12 view .LVU1115
 4081 00fa A7EEA60A 		vfma.f32	s0, s15, s13
 4082              	.LVL199:
1858:Veno-Echo.cpp ****     {
 4083              		.loc 20 1858 5 is_stmt 1 view .LVU1116
 4084 00fe B5EEC00A 		vcmpe.f32	s0, #0
 4085 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4086 0106 38D4     		bmi	.L254
1863:Veno-Echo.cpp ****     {
 4087              		.loc 20 1863 5 view .LVU1117
1865:Veno-Echo.cpp ****     }
 4088              		.loc 20 1865 16 is_stmt 0 view .LVU1118
 4089 0108 B4EE470A 		vcmp.f32	s0, s14
 4090 010c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4091 0110 37FE000A 		vselgt.f32	s0, s14, s0
 4092              	.LVL200:
 4093              	.L232:
1868:Veno-Echo.cpp **** }
 4094              		.loc 20 1868 5 is_stmt 1 view .LVU1119
1868:Veno-Echo.cpp **** }
 4095              		.loc 20 1868 5 is_stmt 0 view .LVU1120
 4096              	.LBE1167:
 4097              	.LBE1169:
1309:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4098              		.loc 20 1309 32 view .LVU1121
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 172


 4099 0114 F6EE000A 		vmov.f32	s1, #5.0e-1
 4100 0118 0020     		movs	r0, #0
 4101 011a 9FED201A 		vldr.32	s2, .L255+28
 4102 011e FFF7FEFF 		bl	_Z5scalefff9CurveType
 4103              	.LVL201:
1310:Veno-Echo.cpp ****         }
 4104              		.loc 20 1310 24 view .LVU1122
 4105 0122 1D4B     		ldr	r3, .L255+24
 4106              	.LVL202:
1310:Veno-Echo.cpp ****         }
 4107              		.loc 20 1310 13 is_stmt 1 view .LVU1123
1310:Veno-Echo.cpp ****         }
 4108              		.loc 20 1310 24 is_stmt 0 view .LVU1124
 4109 0124 83ED008A 		vstr.32	s16, [r3]
 4110 0128 A7E7     		b	.L234
 4111              	.LVL203:
 4112              	.L238:
1310:Veno-Echo.cpp ****         }
 4113              		.loc 20 1310 24 view .LVU1125
 4114              	.LBE1179:
 4115              	.LBB1180:
1335:Veno-Echo.cpp ****             {
 4116              		.loc 20 1335 13 is_stmt 1 view .LVU1126
1335:Veno-Echo.cpp ****             {
 4117              		.loc 20 1335 16 is_stmt 0 view .LVU1127
 4118 012a 204B     		ldr	r3, .L255+44
1335:Veno-Echo.cpp ****             {
 4119              		.loc 20 1335 13 view .LVU1128
 4120 012c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4121 012e 7AB9     		cbnz	r2, .L240
1337:Veno-Echo.cpp ****                 {
 4122              		.loc 20 1337 17 is_stmt 1 view .LVU1129
 4123              	.LVL204:
 4124              	.LBB1175:
 4125              	.LBI1175:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4126              		.loc 21 75 3 view .LVU1130
 4127              	.LBB1176:
 4128              		.loc 21 76 5 view .LVU1131
 4129              		.loc 21 76 5 is_stmt 0 view .LVU1132
 4130              	.LBE1176:
 4131              	.LBE1175:
1337:Veno-Echo.cpp ****                 {
 4132              		.loc 20 1337 23 view .LVU1133
 4133 0130 1F4A     		ldr	r2, .L255+48
1337:Veno-Echo.cpp ****                 {
 4134              		.loc 20 1337 17 view .LVU1134
 4135 0132 9FED207A 		vldr.32	s14, .L255+52
1337:Veno-Echo.cpp ****                 {
 4136              		.loc 20 1337 23 view .LVU1135
 4137 0136 D2ED007A 		vldr.32	s15, [r2]
 4138 013a 70EE677A 		vsub.f32	s15, s0, s15
 4139              	.LBB1178:
 4140              	.LBB1177:
 4141              		.loc 21 76 31 view .LVU1136
 4142 013e F0EEE77A 		vabs.f32	s15, s15
 4143              	.LBE1177:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 173


 4144              	.LBE1178:
1337:Veno-Echo.cpp ****                 {
 4145              		.loc 20 1337 17 view .LVU1137
 4146 0142 F4EEC77A 		vcmpe.f32	s15, s14
 4147 0146 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4148 014a B1DD     		ble	.L226
1339:Veno-Echo.cpp ****                 }
 4149              		.loc 20 1339 21 is_stmt 1 view .LVU1138
1339:Veno-Echo.cpp ****                 }
 4150              		.loc 20 1339 37 is_stmt 0 view .LVU1139
 4151 014c 0122     		movs	r2, #1
 4152 014e 1A70     		strb	r2, [r3]
 4153              	.L240:
1344:Veno-Echo.cpp ****         {
 4154              		.loc 20 1344 9 is_stmt 1 view .LVU1140
1346:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4155              		.loc 20 1346 13 view .LVU1141
1346:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4156              		.loc 20 1346 29 is_stmt 0 view .LVU1142
 4157 0150 B0EE480A 		vmov.f32	s0, s16
 4158              	.LVL205:
1346:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4159              		.loc 20 1346 29 view .LVU1143
 4160 0154 0020     		movs	r0, #0
 4161 0156 9FED181A 		vldr.32	s2, .L255+56
 4162 015a DFED100A 		vldr.32	s1, .L255+28
 4163 015e FFF7FEFF 		bl	_Z5scalefff9CurveType
 4164              	.LVL206:
1346:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4165              		.loc 20 1346 22 view .LVU1144
 4166 0162 164A     		ldr	r2, .L255+60
1347:Veno-Echo.cpp ****         }
 4167              		.loc 20 1347 34 view .LVU1145
 4168 0164 164B     		ldr	r3, .L255+64
1346:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4169              		.loc 20 1346 22 view .LVU1146
 4170 0166 82ED000A 		vstr.32	s0, [r2]
1347:Veno-Echo.cpp ****         }
 4171              		.loc 20 1347 13 is_stmt 1 view .LVU1147
1347:Veno-Echo.cpp ****         }
 4172              		.loc 20 1347 34 is_stmt 0 view .LVU1148
 4173 016a 83ED020A 		vstr.32	s0, [r3, #8]
 4174              	.LBE1180:
 4175              	.LBE1185:
1350:Veno-Echo.cpp **** 
 4176              		.loc 20 1350 1 view .LVU1149
 4177 016e BDEC028B 		vldm	sp!, {d8}
 4178              		.cfi_remember_state
 4179              		.cfi_restore 80
 4180              		.cfi_restore 81
 4181              		.cfi_def_cfa_offset 8
 4182              	.LVL207:
1350:Veno-Echo.cpp **** 
 4183              		.loc 20 1350 1 view .LVU1150
 4184 0172 10BD     		pop	{r4, pc}
 4185              	.LVL208:
 4186              	.L253:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 174


 4187              		.cfi_restore_state
 4188              	.LBB1186:
 4189              	.LBB1181:
 4190              	.LBB1170:
 4191              	.LBB1148:
1860:Veno-Echo.cpp ****     }
 4192              		.loc 20 1860 16 view .LVU1151
 4193 0174 9FED090A 		vldr.32	s0, .L255+28
 4194              	.LVL209:
1860:Veno-Echo.cpp ****     }
 4195              		.loc 20 1860 16 view .LVU1152
 4196 0178 78E7     		b	.L235
 4197              	.LVL210:
 4198              	.L254:
1860:Veno-Echo.cpp ****     }
 4199              		.loc 20 1860 16 view .LVU1153
 4200              	.LBE1148:
 4201              	.LBE1170:
 4202              	.LBB1171:
 4203              	.LBB1168:
 4204 017a 9FED080A 		vldr.32	s0, .L255+28
 4205              	.LVL211:
1860:Veno-Echo.cpp ****     }
 4206              		.loc 20 1860 16 view .LVU1154
 4207 017e C9E7     		b	.L232
 4208              	.L256:
 4209              		.align	2
 4210              	.L255:
 4211 0180 18000000 		.word	.LANCHOR4+24
 4212 0184 00000000 		.word	.LANCHOR7
 4213 0188 00000000 		.word	.LANCHOR59
 4214 018c 00000000 		.word	.LANCHOR60
 4215 0190 00000000 		.word	.LANCHOR61
 4216 0194 00000000 		.word	.LANCHOR58
 4217 0198 00000000 		.word	.LANCHOR62
 4218 019c 00000000 		.word	0
 4219 01a0 00000000 		.word	.LANCHOR63
 4220 01a4 6F12033D 		.word	1023611503
 4221 01a8 00000000 		.word	.LANCHOR64
 4222 01ac 00000000 		.word	.LANCHOR65
 4223 01b0 00000000 		.word	.LANCHOR66
 4224 01b4 0AD7A33B 		.word	1000593162
 4225 01b8 0000FA43 		.word	1140457472
 4226 01bc 00000000 		.word	.LANCHOR67
 4227 01c0 00000000 		.word	.LANCHOR16
 4228              	.LBE1168:
 4229              	.LBE1171:
 4230              	.LBE1181:
 4231              	.LBE1186:
 4232              		.cfi_endproc
 4233              	.LFE4323:
 4235              		.section	.text._Z20Update_crossfeedbackv,"ax",%progbits
 4236              		.align	1
 4237              		.p2align 2,,3
 4238              		.global	_Z20Update_crossfeedbackv
 4239              		.syntax unified
 4240              		.thumb
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 175


 4241              		.thumb_func
 4242              		.fpu fpv5-d16
 4244              	_Z20Update_crossfeedbackv:
 4245              	.LFB4324:
1353:Veno-Echo.cpp ****     static bool lastShift{};
 4246              		.loc 20 1353 1 is_stmt 1 view -0
 4247              		.cfi_startproc
 4248              		@ args = 0, pretend = 0, frame = 0
 4249              		@ frame_needed = 0, uses_anonymous_args = 0
1354:Veno-Echo.cpp ****     static bool crossfeedback_pickup{};
 4250              		.loc 20 1354 5 view .LVU1156
1355:Veno-Echo.cpp ****     static bool modRate_pickup{};
 4251              		.loc 20 1355 5 view .LVU1157
1356:Veno-Echo.cpp **** 
 4252              		.loc 20 1356 5 view .LVU1158
1358:Veno-Echo.cpp **** 
 4253              		.loc 20 1358 5 view .LVU1159
1361:Veno-Echo.cpp **** 
 4254              		.loc 20 1361 5 view .LVU1160
1361:Veno-Echo.cpp **** 
 4255              		.loc 20 1361 47 is_stmt 0 view .LVU1161
 4256 0000 0022     		movs	r2, #0
 4257 0002 0721     		movs	r1, #7
 4258 0004 4148     		ldr	r0, .L272
1353:Veno-Echo.cpp ****     static bool lastShift{};
 4259              		.loc 20 1353 1 view .LVU1162
 4260 0006 10B5     		push	{r4, lr}
 4261              		.cfi_def_cfa_offset 8
 4262              		.cfi_offset 4, -8
 4263              		.cfi_offset 14, -4
 4264 0008 2DED028B 		vpush.64	{d8}
 4265              		.cfi_def_cfa_offset 16
 4266              		.cfi_offset 80, -16
 4267              		.cfi_offset 81, -12
1361:Veno-Echo.cpp **** 
 4268              		.loc 20 1361 47 view .LVU1163
 4269 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 4270              	.LVL212:
 4271              	.LBB1187:
1363:Veno-Echo.cpp ****     {   
 4272              		.loc 20 1363 9 view .LVU1164
 4273 0010 3F4B     		ldr	r3, .L272+4
 4274              	.LBE1187:
1361:Veno-Echo.cpp **** 
 4275              		.loc 20 1361 47 view .LVU1165
 4276 0012 B0EE408A 		vmov.f32	s16, s0
 4277              	.LVL213:
1363:Veno-Echo.cpp ****     {   
 4278              		.loc 20 1363 5 is_stmt 1 view .LVU1166
 4279              	.LBB1216:
 4280              	.LBB1188:
1367:Veno-Echo.cpp ****         {
 4281              		.loc 20 1367 19 is_stmt 0 view .LVU1167
 4282 0016 3F4A     		ldr	r2, .L272+8
 4283              	.LBE1188:
1363:Veno-Echo.cpp ****     {   
 4284              		.loc 20 1363 5 view .LVU1168
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 176


 4285 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4286 001a FBB9     		cbnz	r3, .L258
 4287              	.LBB1197:
1365:Veno-Echo.cpp ****         //update pickup
 4288              		.loc 20 1365 9 is_stmt 1 view .LVU1169
1367:Veno-Echo.cpp ****         {
 4289              		.loc 20 1367 9 view .LVU1170
 4290 001c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4291 001e 49B3     		cbz	r1, .L259
1369:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
 4292              		.loc 20 1369 13 view .LVU1171
1370:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4293              		.loc 20 1370 34 is_stmt 0 view .LVU1172
 4294 0020 3D48     		ldr	r0, .L272+12
1371:Veno-Echo.cpp ****         }
 4295              		.loc 20 1371 31 view .LVU1173
 4296 0022 3E49     		ldr	r1, .L272+16
1369:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
 4297              		.loc 20 1369 23 view .LVU1174
 4298 0024 1370     		strb	r3, [r2]
1370:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4299              		.loc 20 1370 13 is_stmt 1 view .LVU1175
1370:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4300              		.loc 20 1370 34 is_stmt 0 view .LVU1176
 4301 0026 0370     		strb	r3, [r0]
1371:Veno-Echo.cpp ****         }
 4302              		.loc 20 1371 13 is_stmt 1 view .LVU1177
1371:Veno-Echo.cpp ****         }
 4303              		.loc 20 1371 31 is_stmt 0 view .LVU1178
 4304 0028 81ED000A 		vstr.32	s0, [r1]
 4305              	.L260:
1384:Veno-Echo.cpp **** 
 4306              		.loc 20 1384 9 is_stmt 1 view .LVU1179
 4307              	.LVL214:
1386:Veno-Echo.cpp ****         {
 4308              		.loc 20 1386 9 view .LVU1180
1394:Veno-Echo.cpp ****         }
 4309              		.loc 20 1394 13 view .LVU1181
1394:Veno-Echo.cpp ****         }
 4310              		.loc 20 1394 40 is_stmt 0 view .LVU1182
 4311 002c 3C4B     		ldr	r3, .L272+20
 4312 002e B7EE001A 		vmov.f32	s2, #1.0e+0
 4313 0032 0020     		movs	r0, #0
 4314 0034 DFED3B0A 		vldr.32	s1, .L272+24
 4315 0038 93ED000A 		vldr.32	s0, [r3]
 4316              	.LVL215:
1394:Veno-Echo.cpp ****         }
 4317              		.loc 20 1394 40 view .LVU1183
 4318 003c FFF7FEFF 		bl	_Z5scalefff9CurveType
 4319              	.LVL216:
 4320              	.L268:
1397:Veno-Echo.cpp ****     }
 4321              		.loc 20 1397 9 is_stmt 1 view .LVU1184
 4322              	.LBB1189:
 4323              	.LBI1189:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4324              		.loc 23 135 13 view .LVU1185
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 177


 4325              	.LBB1190:
 4326              		.loc 23 137 5 view .LVU1186
 4327              		.loc 23 137 9 is_stmt 0 view .LVU1187
 4328 0040 394B     		ldr	r3, .L272+28
 4329 0042 9FED3A7A 		vldr.32	s14, .L272+32
 4330 0046 D3ED007A 		vldr.32	s15, [r3]
 4331              		.loc 23 137 24 view .LVU1188
 4332 004a 30EE670A 		vsub.f32	s0, s0, s15
 4333              	.LVL217:
 4334              		.loc 23 137 24 view .LVU1189
 4335              	.LBE1190:
 4336              	.LBE1189:
 4337              	.LBE1197:
 4338              	.LBE1216:
1428:Veno-Echo.cpp **** 
 4339              		.loc 20 1428 1 view .LVU1190
 4340 004e BDEC028B 		vldm	sp!, {d8}
 4341              		.cfi_remember_state
 4342              		.cfi_restore 80
 4343              		.cfi_restore 81
 4344              		.cfi_def_cfa_offset 8
 4345              	.LVL218:
 4346              	.LBB1217:
 4347              	.LBB1198:
 4348              	.LBB1192:
 4349              	.LBB1191:
 4350              		.loc 23 137 9 view .LVU1191
 4351 0052 E0EE077A 		vfma.f32	s15, s0, s14
 4352 0056 C3ED007A 		vstr.32	s15, [r3]
 4353              	.LBE1191:
 4354              	.LBE1192:
 4355              	.LBE1198:
 4356              	.LBE1217:
1428:Veno-Echo.cpp **** 
 4357              		.loc 20 1428 1 view .LVU1192
 4358 005a 10BD     		pop	{r4, pc}
 4359              	.LVL219:
 4360              	.L258:
 4361              		.cfi_restore_state
 4362              	.LBB1218:
 4363              	.LBB1199:
1401:Veno-Echo.cpp **** 
 4364              		.loc 20 1401 9 is_stmt 1 view .LVU1193
1403:Veno-Echo.cpp ****         {
 4365              		.loc 20 1403 9 view .LVU1194
 4366 005c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4367 005e 4BBB     		cbnz	r3, .L264
1405:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4368              		.loc 20 1405 13 view .LVU1195
1405:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4369              		.loc 20 1405 23 is_stmt 0 view .LVU1196
 4370 0060 0124     		movs	r4, #1
1406:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4371              		.loc 20 1406 28 view .LVU1197
 4372 0062 3348     		ldr	r0, .L272+36
1407:Veno-Echo.cpp ****         }
 4373              		.loc 20 1407 25 view .LVU1198
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 178


 4374 0064 3349     		ldr	r1, .L272+40
1405:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4375              		.loc 20 1405 23 view .LVU1199
 4376 0066 1470     		strb	r4, [r2]
1406:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4377              		.loc 20 1406 13 is_stmt 1 view .LVU1200
1406:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4378              		.loc 20 1406 28 is_stmt 0 view .LVU1201
 4379 0068 0370     		strb	r3, [r0]
1407:Veno-Echo.cpp ****         }
 4380              		.loc 20 1407 13 is_stmt 1 view .LVU1202
1407:Veno-Echo.cpp ****         }
 4381              		.loc 20 1407 25 is_stmt 0 view .LVU1203
 4382 006a 81ED000A 		vstr.32	s0, [r1]
 4383              	.L257:
1407:Veno-Echo.cpp ****         }
 4384              		.loc 20 1407 25 view .LVU1204
 4385              	.LBE1199:
 4386              	.LBE1218:
1428:Veno-Echo.cpp **** 
 4387              		.loc 20 1428 1 view .LVU1205
 4388 006e BDEC028B 		vldm	sp!, {d8}
 4389              		.cfi_remember_state
 4390              		.cfi_restore 80
 4391              		.cfi_restore 81
 4392              		.cfi_def_cfa_offset 8
 4393 0072 10BD     		pop	{r4, pc}
 4394              	.L259:
 4395              		.cfi_restore_state
 4396              	.LBB1219:
 4397              	.LBB1214:
1376:Veno-Echo.cpp ****             {
 4398              		.loc 20 1376 13 is_stmt 1 view .LVU1206
1376:Veno-Echo.cpp ****             {
 4399              		.loc 20 1376 16 is_stmt 0 view .LVU1207
 4400 0074 284B     		ldr	r3, .L272+12
1376:Veno-Echo.cpp ****             {
 4401              		.loc 20 1376 13 view .LVU1208
 4402 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4403 0078 7AB9     		cbnz	r2, .L261
1378:Veno-Echo.cpp ****                 {
 4404              		.loc 20 1378 17 is_stmt 1 view .LVU1209
 4405              	.LVL220:
 4406              	.LBB1193:
 4407              	.LBI1193:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4408              		.loc 21 75 3 view .LVU1210
 4409              	.LBB1194:
 4410              		.loc 21 76 5 view .LVU1211
 4411              		.loc 21 76 5 is_stmt 0 view .LVU1212
 4412              	.LBE1194:
 4413              	.LBE1193:
1378:Veno-Echo.cpp ****                 {
 4414              		.loc 20 1378 23 view .LVU1213
 4415 007a 284A     		ldr	r2, .L272+16
1378:Veno-Echo.cpp ****                 {
 4416              		.loc 20 1378 17 view .LVU1214
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 179


 4417 007c 9FED2E7A 		vldr.32	s14, .L272+44
1378:Veno-Echo.cpp ****                 {
 4418              		.loc 20 1378 23 view .LVU1215
 4419 0080 D2ED007A 		vldr.32	s15, [r2]
 4420 0084 70EE677A 		vsub.f32	s15, s0, s15
 4421              	.LBB1196:
 4422              	.LBB1195:
 4423              		.loc 21 76 31 view .LVU1216
 4424 0088 F0EEE77A 		vabs.f32	s15, s15
 4425              	.LBE1195:
 4426              	.LBE1196:
1378:Veno-Echo.cpp ****                 {
 4427              		.loc 20 1378 17 view .LVU1217
 4428 008c F4EEC77A 		vcmpe.f32	s15, s14
 4429 0090 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4430 0094 CADD     		ble	.L260
1380:Veno-Echo.cpp ****                 }
 4431              		.loc 20 1380 21 is_stmt 1 view .LVU1218
1380:Veno-Echo.cpp ****                 }
 4432              		.loc 20 1380 42 is_stmt 0 view .LVU1219
 4433 0096 0122     		movs	r2, #1
 4434 0098 1A70     		strb	r2, [r3]
 4435              	.L261:
1384:Veno-Echo.cpp **** 
 4436              		.loc 20 1384 9 is_stmt 1 view .LVU1220
 4437              	.LVL221:
1386:Veno-Echo.cpp ****         {
 4438              		.loc 20 1386 9 view .LVU1221
1388:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4439              		.loc 20 1388 13 view .LVU1222
1388:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4440              		.loc 20 1388 40 is_stmt 0 view .LVU1223
 4441 009a B7EE001A 		vmov.f32	s2, #1.0e+0
 4442 009e 0020     		movs	r0, #0
 4443 00a0 B0EE480A 		vmov.f32	s0, s16
 4444              	.LVL222:
1388:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4445              		.loc 20 1388 40 view .LVU1224
 4446 00a4 DFED1F0A 		vldr.32	s1, .L272+24
 4447 00a8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4448              	.LVL223:
1389:Veno-Echo.cpp ****         }
 4449              		.loc 20 1389 32 view .LVU1225
 4450 00ac 1C4B     		ldr	r3, .L272+20
 4451              	.LVL224:
1389:Veno-Echo.cpp ****         }
 4452              		.loc 20 1389 13 is_stmt 1 view .LVU1226
1389:Veno-Echo.cpp ****         }
 4453              		.loc 20 1389 32 is_stmt 0 view .LVU1227
 4454 00ae 83ED008A 		vstr.32	s16, [r3]
 4455 00b2 C5E7     		b	.L268
 4456              	.LVL225:
 4457              	.L264:
1389:Veno-Echo.cpp ****         }
 4458              		.loc 20 1389 32 view .LVU1228
 4459              	.LBE1214:
 4460              	.LBB1215:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 180


1412:Veno-Echo.cpp ****             {
 4461              		.loc 20 1412 13 is_stmt 1 view .LVU1229
1412:Veno-Echo.cpp ****             {
 4462              		.loc 20 1412 16 is_stmt 0 view .LVU1230
 4463 00b4 1E4B     		ldr	r3, .L272+36
1412:Veno-Echo.cpp ****             {
 4464              		.loc 20 1412 13 view .LVU1231
 4465 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4466 00b8 7AB9     		cbnz	r2, .L266
1414:Veno-Echo.cpp ****                 {
 4467              		.loc 20 1414 17 is_stmt 1 view .LVU1232
 4468              	.LVL226:
 4469              	.LBB1200:
 4470              	.LBI1200:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4471              		.loc 21 75 3 view .LVU1233
 4472              	.LBB1201:
 4473              		.loc 21 76 5 view .LVU1234
 4474              		.loc 21 76 5 is_stmt 0 view .LVU1235
 4475              	.LBE1201:
 4476              	.LBE1200:
1414:Veno-Echo.cpp ****                 {
 4477              		.loc 20 1414 23 view .LVU1236
 4478 00ba 1E4A     		ldr	r2, .L272+40
1414:Veno-Echo.cpp ****                 {
 4479              		.loc 20 1414 17 view .LVU1237
 4480 00bc 9FED1E7A 		vldr.32	s14, .L272+44
1414:Veno-Echo.cpp ****                 {
 4481              		.loc 20 1414 23 view .LVU1238
 4482 00c0 D2ED007A 		vldr.32	s15, [r2]
 4483 00c4 70EE677A 		vsub.f32	s15, s0, s15
 4484              	.LBB1203:
 4485              	.LBB1202:
 4486              		.loc 21 76 31 view .LVU1239
 4487 00c8 F0EEE77A 		vabs.f32	s15, s15
 4488              	.LBE1202:
 4489              	.LBE1203:
1414:Veno-Echo.cpp ****                 {
 4490              		.loc 20 1414 17 view .LVU1240
 4491 00cc F4EEC77A 		vcmpe.f32	s15, s14
 4492 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4493 00d4 CBDD     		ble	.L257
1416:Veno-Echo.cpp ****                 }
 4494              		.loc 20 1416 21 is_stmt 1 view .LVU1241
1416:Veno-Echo.cpp ****                 }
 4495              		.loc 20 1416 36 is_stmt 0 view .LVU1242
 4496 00d6 0122     		movs	r2, #1
 4497 00d8 1A70     		strb	r2, [r3]
 4498              	.L266:
1421:Veno-Echo.cpp ****         {
 4499              		.loc 20 1421 9 is_stmt 1 view .LVU1243
 4500              	.LBB1204:
 4501              	.LBB1205:
1423:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4502              		.loc 20 1423 13 view .LVU1244
 4503              	.LBB1206:
 4504              	.LBB1207:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 181


  17:../DaisySP/Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:../DaisySP/Source/Synthesis/oscillator.h ****     */
  19:../DaisySP/Source/Synthesis/oscillator.h ****     enum
  20:../DaisySP/Source/Synthesis/oscillator.h ****     {
  21:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SIN,
  22:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_TRI,
  23:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SAW,
  24:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  25:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  26:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  27:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  28:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  29:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_LAST,
  30:../DaisySP/Source/Synthesis/oscillator.h ****     };
  31:../DaisySP/Source/Synthesis/oscillator.h **** 
  32:../DaisySP/Source/Synthesis/oscillator.h **** 
  33:../DaisySP/Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  34:../DaisySP/Source/Synthesis/oscillator.h **** 
  35:../DaisySP/Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:../DaisySP/Source/Synthesis/oscillator.h **** 
  37:../DaisySP/Source/Synthesis/oscillator.h ****         Defaults:
  38:../DaisySP/Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
  39:../DaisySP/Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  40:../DaisySP/Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  41:../DaisySP/Source/Synthesis/oscillator.h ****     */
  42:../DaisySP/Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  43:../DaisySP/Source/Synthesis/oscillator.h ****     {
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
  45:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  46:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  47:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
  49:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
  52:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
  53:../DaisySP/Source/Synthesis/oscillator.h ****     }
  54:../DaisySP/Source/Synthesis/oscillator.h **** 
  55:../DaisySP/Source/Synthesis/oscillator.h **** 
  56:../DaisySP/Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:../DaisySP/Source/Synthesis/oscillator.h ****     */
  58:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
  59:../DaisySP/Source/Synthesis/oscillator.h ****     {
  60:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = f;
 4505              		.loc 8 60 20 is_stmt 0 view .LVU1245
 4506 00da 184C     		ldr	r4, .L272+48
 4507              	.LBE1207:
 4508              	.LBE1206:
1423:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4509              		.loc 20 1423 32 view .LVU1246
 4510 00dc B0EE480A 		vmov.f32	s0, s16
 4511              	.LVL227:
1423:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4512              		.loc 20 1423 32 view .LVU1247
 4513 00e0 B2EE041A 		vmov.f32	s2, #1.0e+1
 4514 00e4 0020     		movs	r0, #0
 4515 00e6 DFED160A 		vldr.32	s1, .L272+52
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 182


 4516 00ea FFF7FEFF 		bl	_Z5scalefff9CurveType
 4517              	.LVL228:
 4518              	.LBB1211:
 4519              	.LBB1208:
  61:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4520              		.loc 8 61 34 view .LVU1248
 4521 00ee 2046     		mov	r0, r4
 4522              	.LBE1208:
 4523              	.LBE1211:
1423:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4524              		.loc 20 1423 32 view .LVU1249
 4525 00f0 B0EE408A 		vmov.f32	s16, s0
 4526              	.LVL229:
1424:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
 4527              		.loc 20 1424 13 is_stmt 1 view .LVU1250
 4528              	.LBB1212:
 4529              	.LBI1206:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 4530              		.loc 8 58 17 view .LVU1251
 4531              	.LBB1209:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4532              		.loc 8 60 9 view .LVU1252
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4533              		.loc 8 60 20 is_stmt 0 view .LVU1253
 4534 00f4 84ED020A 		vstr.32	s0, [r4, #8]
 4535              		.loc 8 61 9 is_stmt 1 view .LVU1254
 4536              		.loc 8 61 34 is_stmt 0 view .LVU1255
 4537 00f8 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 4538              	.LVL230:
 4539              		.loc 8 61 34 view .LVU1256
 4540              	.LBE1209:
 4541              	.LBE1212:
1425:Veno-Echo.cpp ****         }
 4542              		.loc 20 1425 33 view .LVU1257
 4543 00fc 114B     		ldr	r3, .L272+56
 4544              	.LBB1213:
 4545              	.LBB1210:
 4546              		.loc 8 61 20 view .LVU1258
 4547 00fe 84ED060A 		vstr.32	s0, [r4, #24]
 4548              	.LVL231:
 4549              		.loc 8 61 20 view .LVU1259
 4550              	.LBE1210:
 4551              	.LBE1213:
1425:Veno-Echo.cpp ****         }
 4552              		.loc 20 1425 13 is_stmt 1 view .LVU1260
1425:Veno-Echo.cpp ****         }
 4553              		.loc 20 1425 33 is_stmt 0 view .LVU1261
 4554 0102 83ED038A 		vstr.32	s16, [r3, #12]
 4555              	.LBE1205:
 4556              	.LBE1204:
 4557              	.LBE1215:
 4558              	.LBE1219:
1428:Veno-Echo.cpp **** 
 4559              		.loc 20 1428 1 view .LVU1262
 4560 0106 BDEC028B 		vldm	sp!, {d8}
 4561              		.cfi_restore 80
 4562              		.cfi_restore 81
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 183


 4563              		.cfi_def_cfa_offset 8
 4564              	.LVL232:
1428:Veno-Echo.cpp **** 
 4565              		.loc 20 1428 1 view .LVU1263
 4566 010a 10BD     		pop	{r4, pc}
 4567              	.L273:
 4568              		.align	2
 4569              	.L272:
 4570 010c 18000000 		.word	.LANCHOR4+24
 4571 0110 00000000 		.word	.LANCHOR7
 4572 0114 00000000 		.word	.LANCHOR68
 4573 0118 00000000 		.word	.LANCHOR69
 4574 011c 00000000 		.word	.LANCHOR70
 4575 0120 00000000 		.word	.LANCHOR74
 4576 0124 00000000 		.word	0
 4577 0128 00000000 		.word	.LANCHOR71
 4578 012c 6F12033D 		.word	1023611503
 4579 0130 00000000 		.word	.LANCHOR72
 4580 0134 00000000 		.word	.LANCHOR73
 4581 0138 0AD7A33B 		.word	1000593162
 4582 013c 00000000 		.word	.LANCHOR75
 4583 0140 CDCCCC3D 		.word	1036831949
 4584 0144 00000000 		.word	.LANCHOR16
 4585              		.cfi_endproc
 4586              	.LFE4324:
 4588              		.section	.text._Z18Update_filterXfadev,"ax",%progbits
 4589              		.align	1
 4590              		.p2align 2,,3
 4591              		.global	_Z18Update_filterXfadev
 4592              		.syntax unified
 4593              		.thumb
 4594              		.thumb_func
 4595              		.fpu fpv5-d16
 4597              	_Z18Update_filterXfadev:
 4598              	.LFB4325:
1431:Veno-Echo.cpp ****     static bool lastShift{};
 4599              		.loc 20 1431 1 is_stmt 1 view -0
 4600              		.cfi_startproc
 4601              		@ args = 0, pretend = 0, frame = 0
 4602              		@ frame_needed = 0, uses_anonymous_args = 0
1432:Veno-Echo.cpp ****     static bool filterXfade_pickup{};
 4603              		.loc 20 1432 5 view .LVU1265
1433:Veno-Echo.cpp ****     static bool PostFilters_pickup{};
 4604              		.loc 20 1433 5 view .LVU1266
1434:Veno-Echo.cpp **** 
 4605              		.loc 20 1434 5 view .LVU1267
1436:Veno-Echo.cpp **** 
 4606              		.loc 20 1436 5 view .LVU1268
1439:Veno-Echo.cpp **** 
 4607              		.loc 20 1439 5 view .LVU1269
1439:Veno-Echo.cpp **** 
 4608              		.loc 20 1439 45 is_stmt 0 view .LVU1270
 4609 0000 0322     		movs	r2, #3
 4610 0002 0721     		movs	r1, #7
 4611 0004 4248     		ldr	r0, .L296
1431:Veno-Echo.cpp ****     static bool lastShift{};
 4612              		.loc 20 1431 1 view .LVU1271
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 184


 4613 0006 10B5     		push	{r4, lr}
 4614              		.cfi_def_cfa_offset 8
 4615              		.cfi_offset 4, -8
 4616              		.cfi_offset 14, -4
 4617 0008 2DED028B 		vpush.64	{d8}
 4618              		.cfi_def_cfa_offset 16
 4619              		.cfi_offset 80, -16
 4620              		.cfi_offset 81, -12
1439:Veno-Echo.cpp **** 
 4621              		.loc 20 1439 45 view .LVU1272
 4622 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 4623              	.LVL233:
 4624              	.LBB1220:
1441:Veno-Echo.cpp ****     {   
 4625              		.loc 20 1441 9 view .LVU1273
 4626 0010 404B     		ldr	r3, .L296+4
 4627              	.LBE1220:
1439:Veno-Echo.cpp **** 
 4628              		.loc 20 1439 45 view .LVU1274
 4629 0012 B0EE408A 		vmov.f32	s16, s0
 4630              	.LVL234:
1441:Veno-Echo.cpp ****     {   
 4631              		.loc 20 1441 5 is_stmt 1 view .LVU1275
 4632              	.LBB1240:
 4633              	.LBB1221:
1445:Veno-Echo.cpp ****         {
 4634              		.loc 20 1445 19 is_stmt 0 view .LVU1276
 4635 0016 404A     		ldr	r2, .L296+8
 4636              	.LBE1221:
1441:Veno-Echo.cpp ****     {   
 4637              		.loc 20 1441 5 view .LVU1277
 4638 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4639 001a FBB9     		cbnz	r3, .L275
 4640              	.LBB1230:
1443:Veno-Echo.cpp ****         //update pickup
 4641              		.loc 20 1443 9 is_stmt 1 view .LVU1278
1445:Veno-Echo.cpp ****         {
 4642              		.loc 20 1445 9 view .LVU1279
 4643 001c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4644 001e 49B3     		cbz	r1, .L276
1447:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
 4645              		.loc 20 1447 13 view .LVU1280
1448:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4646              		.loc 20 1448 32 is_stmt 0 view .LVU1281
 4647 0020 3E48     		ldr	r0, .L296+12
1449:Veno-Echo.cpp ****         }
 4648              		.loc 20 1449 29 view .LVU1282
 4649 0022 3F49     		ldr	r1, .L296+16
1447:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
 4650              		.loc 20 1447 23 view .LVU1283
 4651 0024 1370     		strb	r3, [r2]
1448:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4652              		.loc 20 1448 13 is_stmt 1 view .LVU1284
1448:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4653              		.loc 20 1448 32 is_stmt 0 view .LVU1285
 4654 0026 0370     		strb	r3, [r0]
1449:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 185


 4655              		.loc 20 1449 13 is_stmt 1 view .LVU1286
1449:Veno-Echo.cpp ****         }
 4656              		.loc 20 1449 29 is_stmt 0 view .LVU1287
 4657 0028 81ED000A 		vstr.32	s0, [r1]
 4658              	.L277:
1463:Veno-Echo.cpp **** 
 4659              		.loc 20 1463 9 is_stmt 1 view .LVU1288
 4660              	.LVL235:
1465:Veno-Echo.cpp ****         {
 4661              		.loc 20 1465 9 view .LVU1289
1473:Veno-Echo.cpp ****         }
 4662              		.loc 20 1473 13 view .LVU1290
1473:Veno-Echo.cpp ****         }
 4663              		.loc 20 1473 38 is_stmt 0 view .LVU1291
 4664 002c 3D4B     		ldr	r3, .L296+20
 4665 002e B7EE001A 		vmov.f32	s2, #1.0e+0
 4666 0032 0120     		movs	r0, #1
 4667 0034 DFED3C0A 		vldr.32	s1, .L296+24
 4668 0038 93ED000A 		vldr.32	s0, [r3]
 4669              	.LVL236:
1473:Veno-Echo.cpp ****         }
 4670              		.loc 20 1473 38 view .LVU1292
 4671 003c FFF7FEFF 		bl	_Z5scalefff9CurveType
 4672              	.LVL237:
 4673              	.L287:
1476:Veno-Echo.cpp ****     }
 4674              		.loc 20 1476 9 is_stmt 1 view .LVU1293
 4675              	.LBB1222:
 4676              	.LBI1222:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4677              		.loc 23 135 13 view .LVU1294
 4678              	.LBB1223:
 4679              		.loc 23 137 5 view .LVU1295
 4680              		.loc 23 137 9 is_stmt 0 view .LVU1296
 4681 0040 3A4B     		ldr	r3, .L296+28
 4682 0042 9FED3B7A 		vldr.32	s14, .L296+32
 4683 0046 D3ED007A 		vldr.32	s15, [r3]
 4684              		.loc 23 137 24 view .LVU1297
 4685 004a 30EE670A 		vsub.f32	s0, s0, s15
 4686              	.LVL238:
 4687              		.loc 23 137 24 view .LVU1298
 4688              	.LBE1223:
 4689              	.LBE1222:
 4690              	.LBE1230:
 4691              	.LBE1240:
1518:Veno-Echo.cpp **** 
 4692              		.loc 20 1518 1 view .LVU1299
 4693 004e BDEC028B 		vldm	sp!, {d8}
 4694              		.cfi_remember_state
 4695              		.cfi_restore 80
 4696              		.cfi_restore 81
 4697              		.cfi_def_cfa_offset 8
 4698              	.LVL239:
 4699              	.LBB1241:
 4700              	.LBB1231:
 4701              	.LBB1225:
 4702              	.LBB1224:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 186


 4703              		.loc 23 137 9 view .LVU1300
 4704 0052 E0EE077A 		vfma.f32	s15, s0, s14
 4705 0056 C3ED007A 		vstr.32	s15, [r3]
 4706              	.LBE1224:
 4707              	.LBE1225:
 4708              	.LBE1231:
 4709              	.LBE1241:
1518:Veno-Echo.cpp **** 
 4710              		.loc 20 1518 1 view .LVU1301
 4711 005a 10BD     		pop	{r4, pc}
 4712              	.LVL240:
 4713              	.L275:
 4714              		.cfi_restore_state
 4715              	.LBB1242:
 4716              	.LBB1232:
1481:Veno-Echo.cpp **** 
 4717              		.loc 20 1481 9 is_stmt 1 view .LVU1302
1483:Veno-Echo.cpp ****         {
 4718              		.loc 20 1483 9 view .LVU1303
 4719 005c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4720 005e 4BBB     		cbnz	r3, .L281
1485:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4721              		.loc 20 1485 13 view .LVU1304
1485:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4722              		.loc 20 1485 23 is_stmt 0 view .LVU1305
 4723 0060 0124     		movs	r4, #1
1486:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4724              		.loc 20 1486 32 view .LVU1306
 4725 0062 3448     		ldr	r0, .L296+36
1487:Veno-Echo.cpp ****         }
 4726              		.loc 20 1487 29 view .LVU1307
 4727 0064 3449     		ldr	r1, .L296+40
1485:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4728              		.loc 20 1485 23 view .LVU1308
 4729 0066 1470     		strb	r4, [r2]
1486:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4730              		.loc 20 1486 13 is_stmt 1 view .LVU1309
1486:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4731              		.loc 20 1486 32 is_stmt 0 view .LVU1310
 4732 0068 0370     		strb	r3, [r0]
1487:Veno-Echo.cpp ****         }
 4733              		.loc 20 1487 13 is_stmt 1 view .LVU1311
1487:Veno-Echo.cpp ****         }
 4734              		.loc 20 1487 29 is_stmt 0 view .LVU1312
 4735 006a 81ED000A 		vstr.32	s0, [r1]
 4736              	.L274:
1487:Veno-Echo.cpp ****         }
 4737              		.loc 20 1487 29 view .LVU1313
 4738              	.LBE1232:
 4739              	.LBE1242:
1518:Veno-Echo.cpp **** 
 4740              		.loc 20 1518 1 view .LVU1314
 4741 006e BDEC028B 		vldm	sp!, {d8}
 4742              		.cfi_remember_state
 4743              		.cfi_restore 80
 4744              		.cfi_restore 81
 4745              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 187


 4746 0072 10BD     		pop	{r4, pc}
 4747              	.L276:
 4748              		.cfi_restore_state
 4749              	.LBB1243:
 4750              	.LBB1237:
1454:Veno-Echo.cpp ****             {
 4751              		.loc 20 1454 13 is_stmt 1 view .LVU1315
1454:Veno-Echo.cpp ****             {
 4752              		.loc 20 1454 16 is_stmt 0 view .LVU1316
 4753 0074 294B     		ldr	r3, .L296+12
1454:Veno-Echo.cpp ****             {
 4754              		.loc 20 1454 13 view .LVU1317
 4755 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4756 0078 7AB9     		cbnz	r2, .L278
1456:Veno-Echo.cpp ****                 {
 4757              		.loc 20 1456 17 is_stmt 1 view .LVU1318
 4758              	.LVL241:
 4759              	.LBB1226:
 4760              	.LBI1226:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4761              		.loc 21 75 3 view .LVU1319
 4762              	.LBB1227:
 4763              		.loc 21 76 5 view .LVU1320
 4764              		.loc 21 76 5 is_stmt 0 view .LVU1321
 4765              	.LBE1227:
 4766              	.LBE1226:
1456:Veno-Echo.cpp ****                 {
 4767              		.loc 20 1456 23 view .LVU1322
 4768 007a 294A     		ldr	r2, .L296+16
1456:Veno-Echo.cpp ****                 {
 4769              		.loc 20 1456 17 view .LVU1323
 4770 007c 9FED2F7A 		vldr.32	s14, .L296+44
1456:Veno-Echo.cpp ****                 {
 4771              		.loc 20 1456 23 view .LVU1324
 4772 0080 D2ED007A 		vldr.32	s15, [r2]
 4773 0084 70EE677A 		vsub.f32	s15, s0, s15
 4774              	.LBB1229:
 4775              	.LBB1228:
 4776              		.loc 21 76 31 view .LVU1325
 4777 0088 F0EEE77A 		vabs.f32	s15, s15
 4778              	.LBE1228:
 4779              	.LBE1229:
1456:Veno-Echo.cpp ****                 {
 4780              		.loc 20 1456 17 view .LVU1326
 4781 008c F4EEC77A 		vcmpe.f32	s15, s14
 4782 0090 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4783 0094 CADD     		ble	.L277
1458:Veno-Echo.cpp ****                 }
 4784              		.loc 20 1458 21 is_stmt 1 view .LVU1327
1458:Veno-Echo.cpp ****                 }
 4785              		.loc 20 1458 40 is_stmt 0 view .LVU1328
 4786 0096 0122     		movs	r2, #1
 4787 0098 1A70     		strb	r2, [r3]
 4788              	.L278:
1463:Veno-Echo.cpp **** 
 4789              		.loc 20 1463 9 is_stmt 1 view .LVU1329
 4790              	.LVL242:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 188


1465:Veno-Echo.cpp ****         {
 4791              		.loc 20 1465 9 view .LVU1330
1467:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 4792              		.loc 20 1467 13 view .LVU1331
1467:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 4793              		.loc 20 1467 38 is_stmt 0 view .LVU1332
 4794 009a B7EE001A 		vmov.f32	s2, #1.0e+0
 4795 009e 0120     		movs	r0, #1
 4796 00a0 B0EE480A 		vmov.f32	s0, s16
 4797              	.LVL243:
1467:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 4798              		.loc 20 1467 38 view .LVU1333
 4799 00a4 DFED200A 		vldr.32	s1, .L296+24
 4800 00a8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4801              	.LVL244:
1468:Veno-Echo.cpp ****         }
 4802              		.loc 20 1468 30 view .LVU1334
 4803 00ac 1D4B     		ldr	r3, .L296+20
 4804              	.LVL245:
1468:Veno-Echo.cpp ****         }
 4805              		.loc 20 1468 13 is_stmt 1 view .LVU1335
1468:Veno-Echo.cpp ****         }
 4806              		.loc 20 1468 30 is_stmt 0 view .LVU1336
 4807 00ae 83ED008A 		vstr.32	s16, [r3]
 4808 00b2 C5E7     		b	.L287
 4809              	.LVL246:
 4810              	.L281:
1468:Veno-Echo.cpp ****         }
 4811              		.loc 20 1468 30 view .LVU1337
 4812              	.LBE1237:
 4813              	.LBB1238:
1492:Veno-Echo.cpp ****             {
 4814              		.loc 20 1492 13 is_stmt 1 view .LVU1338
1492:Veno-Echo.cpp ****             {
 4815              		.loc 20 1492 16 is_stmt 0 view .LVU1339
 4816 00b4 1F4B     		ldr	r3, .L296+36
1492:Veno-Echo.cpp ****             {
 4817              		.loc 20 1492 13 view .LVU1340
 4818 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4819 00b8 7AB9     		cbnz	r2, .L283
1494:Veno-Echo.cpp ****                 {
 4820              		.loc 20 1494 17 is_stmt 1 view .LVU1341
 4821              	.LVL247:
 4822              	.LBB1233:
 4823              	.LBI1233:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4824              		.loc 21 75 3 view .LVU1342
 4825              	.LBB1234:
 4826              		.loc 21 76 5 view .LVU1343
 4827              		.loc 21 76 5 is_stmt 0 view .LVU1344
 4828              	.LBE1234:
 4829              	.LBE1233:
1494:Veno-Echo.cpp ****                 {
 4830              		.loc 20 1494 23 view .LVU1345
 4831 00ba 1F4A     		ldr	r2, .L296+40
1494:Veno-Echo.cpp ****                 {
 4832              		.loc 20 1494 17 view .LVU1346
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 189


 4833 00bc 9FED1F7A 		vldr.32	s14, .L296+44
1494:Veno-Echo.cpp ****                 {
 4834              		.loc 20 1494 23 view .LVU1347
 4835 00c0 D2ED007A 		vldr.32	s15, [r2]
 4836 00c4 70EE677A 		vsub.f32	s15, s0, s15
 4837              	.LBB1236:
 4838              	.LBB1235:
 4839              		.loc 21 76 31 view .LVU1348
 4840 00c8 F0EEE77A 		vabs.f32	s15, s15
 4841              	.LBE1235:
 4842              	.LBE1236:
1494:Veno-Echo.cpp ****                 {
 4843              		.loc 20 1494 17 view .LVU1349
 4844 00cc F4EEC77A 		vcmpe.f32	s15, s14
 4845 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4846 00d4 CBDD     		ble	.L274
1496:Veno-Echo.cpp ****                 }
 4847              		.loc 20 1496 21 is_stmt 1 view .LVU1350
1496:Veno-Echo.cpp ****                 }
 4848              		.loc 20 1496 40 is_stmt 0 view .LVU1351
 4849 00d6 0122     		movs	r2, #1
 4850 00d8 1A70     		strb	r2, [r3]
 4851              	.L283:
1501:Veno-Echo.cpp ****         {
 4852              		.loc 20 1501 9 is_stmt 1 view .LVU1352
1503:Veno-Echo.cpp ****             {
 4853              		.loc 20 1503 13 view .LVU1353
 4854 00da DFED197A 		vldr.32	s15, .L296+48
 4855 00de B4EEE78A 		vcmpe.f32	s16, s15
 4856 00e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4857 00e6 08D5     		bpl	.L295
1505:Veno-Echo.cpp ****             }
 4858              		.loc 20 1505 17 view .LVU1354
1505:Veno-Echo.cpp ****             }
 4859              		.loc 20 1505 29 is_stmt 0 view .LVU1355
 4860 00e8 164B     		ldr	r3, .L296+52
 4861 00ea 0022     		movs	r2, #0
 4862 00ec 1A70     		strb	r2, [r3]
 4863              	.L285:
1515:Veno-Echo.cpp ****         }  
 4864              		.loc 20 1515 13 is_stmt 1 view .LVU1356
1515:Veno-Echo.cpp ****         }  
 4865              		.loc 20 1515 39 is_stmt 0 view .LVU1357
 4866 00ee 164B     		ldr	r3, .L296+56
 4867 00f0 83ED078A 		vstr.32	s16, [r3, #28]
 4868              	.LBE1238:
 4869              	.LBE1243:
1518:Veno-Echo.cpp **** 
 4870              		.loc 20 1518 1 view .LVU1358
 4871 00f4 BDEC028B 		vldm	sp!, {d8}
 4872              		.cfi_remember_state
 4873              		.cfi_restore 80
 4874              		.cfi_restore 81
 4875              		.cfi_def_cfa_offset 8
 4876 00f8 10BD     		pop	{r4, pc}
 4877              	.L295:
 4878              		.cfi_restore_state
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 190


 4879              	.LBB1244:
 4880              	.LBB1239:
1507:Veno-Echo.cpp ****             {
 4881              		.loc 20 1507 18 is_stmt 1 view .LVU1359
 4882 00fa DFED147A 		vldr.32	s15, .L296+60
 4883 00fe B4EEE78A 		vcmpe.f32	s16, s15
 4884 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4885 0106 F2DD     		ble	.L285
1509:Veno-Echo.cpp ****             }
 4886              		.loc 20 1509 17 view .LVU1360
1509:Veno-Echo.cpp ****             }
 4887              		.loc 20 1509 29 is_stmt 0 view .LVU1361
 4888 0108 0E4B     		ldr	r3, .L296+52
 4889 010a 0122     		movs	r2, #1
 4890 010c 1A70     		strb	r2, [r3]
 4891 010e EEE7     		b	.L285
 4892              	.L297:
 4893              		.align	2
 4894              	.L296:
 4895 0110 18000000 		.word	.LANCHOR4+24
 4896 0114 00000000 		.word	.LANCHOR7
 4897 0118 00000000 		.word	.LANCHOR76
 4898 011c 00000000 		.word	.LANCHOR77
 4899 0120 00000000 		.word	.LANCHOR78
 4900 0124 00000000 		.word	.LANCHOR83
 4901 0128 00000000 		.word	0
 4902 012c 00000000 		.word	.LANCHOR79
 4903 0130 6F12033D 		.word	1023611503
 4904 0134 00000000 		.word	.LANCHOR80
 4905 0138 00000000 		.word	.LANCHOR81
 4906 013c 0AD7A33B 		.word	1000593162
 4907 0140 6666E63E 		.word	1055286886
 4908 0144 00000000 		.word	.LANCHOR82
 4909 0148 00000000 		.word	.LANCHOR16
 4910 014c CDCC0C3F 		.word	1057803469
 4911              	.LBE1239:
 4912              	.LBE1244:
 4913              		.cfi_endproc
 4914              	.LFE4325:
 4916              		.section	.text._Z8GetModCVv,"ax",%progbits
 4917              		.align	1
 4918              		.p2align 2,,3
 4919              		.global	_Z8GetModCVv
 4920              		.syntax unified
 4921              		.thumb
 4922              		.thumb_func
 4923              		.fpu fpv5-d16
 4925              	_Z8GetModCVv:
 4926              	.LFB4326:
1521:Veno-Echo.cpp ****     //get modulation CV input
 4927              		.loc 20 1521 1 is_stmt 1 view -0
 4928              		.cfi_startproc
 4929              		@ args = 0, pretend = 0, frame = 0
 4930              		@ frame_needed = 0, uses_anonymous_args = 0
1523:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 4931              		.loc 20 1523 5 view .LVU1363
1521:Veno-Echo.cpp ****     //get modulation CV input
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 191


 4932              		.loc 20 1521 1 is_stmt 0 view .LVU1364
 4933 0000 08B5     		push	{r3, lr}
 4934              		.cfi_def_cfa_offset 8
 4935              		.cfi_offset 3, -8
 4936              		.cfi_offset 14, -4
1523:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 4937              		.loc 20 1523 30 view .LVU1365
 4938 0002 0621     		movs	r1, #6
 4939 0004 0648     		ldr	r0, .L300
 4940 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 4941              	.LVL248:
 4942 000a 0020     		movs	r0, #0
 4943 000c 9FED051A 		vldr.32	s2, .L300+4
 4944 0010 DFED050A 		vldr.32	s1, .L300+8
 4945 0014 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4946              	.LVL249:
1523:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 4947              		.loc 20 1523 23 view .LVU1366
 4948 0018 044B     		ldr	r3, .L300+12
 4949 001a 83ED000A 		vstr.32	s0, [r3]
1525:Veno-Echo.cpp **** 
 4950              		.loc 20 1525 1 view .LVU1367
 4951 001e 08BD     		pop	{r3, pc}
 4952              	.L301:
 4953              		.align	2
 4954              	.L300:
 4955 0020 18000000 		.word	.LANCHOR4+24
 4956 0024 00004843 		.word	1128792064
 4957 0028 000048C3 		.word	3276275712
 4958 002c 00000000 		.word	.LANCHOR84
 4959              		.cfi_endproc
 4960              	.LFE4326:
 4962              		.section	.text._Z10Update_Modv,"ax",%progbits
 4963              		.align	1
 4964              		.p2align 2,,3
 4965              		.global	_Z10Update_Modv
 4966              		.syntax unified
 4967              		.thumb
 4968              		.thumb_func
 4969              		.fpu fpv5-d16
 4971              	_Z10Update_Modv:
 4972              	.LFB4327:
1528:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 4973              		.loc 20 1528 1 is_stmt 1 view -0
 4974              		.cfi_startproc
 4975              		@ args = 0, pretend = 0, frame = 0
 4976              		@ frame_needed = 0, uses_anonymous_args = 0
1529:Veno-Echo.cpp ****     static float modulation_CV{};
 4977              		.loc 20 1529 5 view .LVU1369
1530:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
 4978              		.loc 20 1530 5 view .LVU1370
1531:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 4979              		.loc 20 1531 5 view .LVU1371
 4980              	.LVL250:
 4981              	.LBB1245:
 4982              	.LBI1245:
 135:../DaisySP/Source/Utility/dsp.h **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 192


 4983              		.loc 23 135 13 view .LVU1372
 4984              	.LBB1246:
 4985              		.loc 23 137 5 view .LVU1373
 4986              	.LBE1246:
 4987              	.LBE1245:
1528:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 4988              		.loc 20 1528 1 is_stmt 0 view .LVU1374
 4989 0000 38B5     		push	{r3, r4, r5, lr}
 4990              		.cfi_def_cfa_offset 16
 4991              		.cfi_offset 3, -16
 4992              		.cfi_offset 4, -12
 4993              		.cfi_offset 5, -8
 4994              		.cfi_offset 14, -4
1531:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 4995              		.loc 20 1531 13 view .LVU1375
 4996 0002 154A     		ldr	r2, .L304
 4997              	.LBB1253:
 4998              	.LBB1247:
 4999              		.loc 23 137 9 view .LVU1376
 5000 0004 154C     		ldr	r4, .L304+4
 5001              	.LBE1247:
 5002              	.LBE1253:
 5003              	.LBB1254:
 5004              	.LBB1255:
 5005 0006 164D     		ldr	r5, .L304+8
 5006              	.LBE1255:
 5007              	.LBE1254:
1532:Veno-Echo.cpp ****     //calculate InternalMod
 5008              		.loc 20 1532 13 view .LVU1377
 5009 0008 164B     		ldr	r3, .L304+12
 5010              	.LBB1261:
 5011              	.LBB1248:
 5012              		.loc 23 137 9 view .LVU1378
 5013 000a 94ED007A 		vldr.32	s14, [r4]
 5014              	.LBE1248:
 5015              	.LBE1261:
 5016              	.LBB1262:
 5017              	.LBB1256:
 5018 000e D5ED007A 		vldr.32	s15, [r5]
 5019              	.LBE1256:
 5020              	.LBE1262:
 5021              	.LBB1263:
 5022              	.LBB1249:
 5023              		.loc 23 137 24 view .LVU1379
 5024 0012 92ED006A 		vldr.32	s12, [r2]
 5025              	.LBE1249:
 5026              	.LBE1263:
 5027              	.LBB1264:
 5028              	.LBB1257:
 5029 0016 D3ED006A 		vldr.32	s13, [r3]
 5030              	.LBE1257:
 5031              	.LBE1264:
 5032              	.LBB1265:
 5033              	.LBB1250:
 5034 001a 36EE476A 		vsub.f32	s12, s12, s14
 5035              		.loc 23 137 9 view .LVU1380
 5036 001e DFED125A 		vldr.32	s11, .L304+16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 193


 5037              	.LBE1250:
 5038              	.LBE1265:
 5039              	.LBB1266:
 5040              	.LBB1258:
 5041              		.loc 23 137 24 view .LVU1381
 5042 0022 76EEE76A 		vsub.f32	s13, s13, s15
 5043              	.LBE1258:
 5044              	.LBE1266:
1534:Veno-Echo.cpp ****     //apply modulation to delay lines
 5045              		.loc 20 1534 34 view .LVU1382
 5046 0026 1148     		ldr	r0, .L304+20
 5047              	.LBB1267:
 5048              	.LBB1251:
 5049              		.loc 23 137 9 view .LVU1383
 5050 0028 A6EE257A 		vfma.f32	s14, s12, s11
 5051              	.LBE1251:
 5052              	.LBE1267:
 5053              	.LBB1268:
 5054              	.LBB1259:
 5055 002c E6EEA57A 		vfma.f32	s15, s13, s11
 5056              	.LBE1259:
 5057              	.LBE1268:
 5058              	.LBB1269:
 5059              	.LBB1252:
 5060 0030 84ED007A 		vstr.32	s14, [r4]
 5061              	.LVL251:
 5062              		.loc 23 137 9 view .LVU1384
 5063              	.LBE1252:
 5064              	.LBE1269:
1532:Veno-Echo.cpp ****     //calculate InternalMod
 5065              		.loc 20 1532 5 is_stmt 1 view .LVU1385
 5066              	.LBB1270:
 5067              	.LBI1254:
 135:../DaisySP/Source/Utility/dsp.h **** {
 5068              		.loc 23 135 13 view .LVU1386
 5069              	.LBB1260:
 5070              		.loc 23 137 5 view .LVU1387
 5071              		.loc 23 137 9 is_stmt 0 view .LVU1388
 5072 0034 C5ED007A 		vstr.32	s15, [r5]
 5073              	.LVL252:
 5074              		.loc 23 137 9 view .LVU1389
 5075              	.LBE1260:
 5076              	.LBE1270:
1534:Veno-Echo.cpp ****     //apply modulation to delay lines
 5077              		.loc 20 1534 5 is_stmt 1 view .LVU1390
1534:Veno-Echo.cpp ****     //apply modulation to delay lines
 5078              		.loc 20 1534 34 is_stmt 0 view .LVU1391
 5079 0038 FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 5080              	.LVL253:
1536:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5081              		.loc 20 1536 5 is_stmt 1 view .LVU1392
1536:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5082              		.loc 20 1536 40 is_stmt 0 view .LVU1393
 5083 003c 95ED007A 		vldr.32	s14, [r5]
 5084 0040 D4ED007A 		vldr.32	s15, [r4]
 5085              	.LBB1271:
 5086              	.LBB1272:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 194


  51:DelayMulti.h  **** 
  52:DelayMulti.h  **** //functions:
  53:DelayMulti.h  **** 
  54:DelayMulti.h  **** //initialises delay class
  55:DelayMulti.h  **** void init(dsy_gpio_pin ledpin, float samplerate);
  56:DelayMulti.h  **** 
  57:DelayMulti.h  **** //Updates delay time from pot value and base tempo (set ratio)
  58:DelayMulti.h  **** bool SetDelayTime(float delaytime_pot, float baseTempo, bool syncMode);
  59:DelayMulti.h  **** 
  60:DelayMulti.h  **** //Updates xfades, updates delayline with delayTime[] + modulation and 
  61:DelayMulti.h  **** //returns combined output from delay heads, and updates LEDs. 
  62:DelayMulti.h  **** //Call at audio samplerate
  63:DelayMulti.h  **** const float& GetOutput();
  64:DelayMulti.h  **** 
  65:DelayMulti.h  **** //Writes to delayline
  66:DelayMulti.h  **** void Write(const float& in);
  67:DelayMulti.h  **** 
  68:DelayMulti.h  **** //this must be called once per sample
  69:DelayMulti.h  **** void SetModulation(const float& mod){mod_ = mod;}
 5087              		.loc 17 69 43 view .LVU1394
 5088 0044 0A4A     		ldr	r2, .L304+24
 5089              	.LBE1272:
 5090              	.LBE1271:
1536:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5091              		.loc 20 1536 40 view .LVU1395
 5092 0046 E0EE077A 		vfma.f32	s15, s0, s14
 5093              	.LBB1275:
 5094              	.LBI1271:
 5095              		.loc 17 69 6 is_stmt 1 view .LVU1396
 5096              	.LVL254:
 5097              	.LBB1273:
 5098              		.loc 17 69 38 view .LVU1397
 5099              	.LBE1273:
 5100              	.LBE1275:
 5101              	.LBB1276:
 5102              	.LBB1277:
 5103              		.loc 17 69 43 is_stmt 0 view .LVU1398
 5104 004a 0A4B     		ldr	r3, .L304+28
 5105              	.LBE1277:
 5106              	.LBE1276:
 5107              	.LBB1279:
 5108              	.LBB1274:
 5109 004c C2ED3F7A 		vstr.32	s15, [r2, #252]
 5110              	.LBE1274:
 5111              	.LBE1279:
1537:Veno-Echo.cpp **** }
 5112              		.loc 20 1537 5 is_stmt 1 view .LVU1399
 5113              	.LVL255:
 5114              	.LBB1280:
 5115              	.LBI1276:
 5116              		.loc 17 69 6 view .LVU1400
 5117              	.LBB1278:
 5118              		.loc 17 69 38 view .LVU1401
 5119              		.loc 17 69 43 is_stmt 0 view .LVU1402
 5120 0050 C3ED3F7A 		vstr.32	s15, [r3, #252]
 5121              	.LBE1278:
 5122              	.LBE1280:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 195


1538:Veno-Echo.cpp **** 
 5123              		.loc 20 1538 1 view .LVU1403
 5124 0054 38BD     		pop	{r3, r4, r5, pc}
 5125              	.L305:
 5126 0056 00BF     		.align	2
 5127              	.L304:
 5128 0058 00000000 		.word	.LANCHOR84
 5129 005c 00000000 		.word	.LANCHOR85
 5130 0060 00000000 		.word	.LANCHOR86
 5131 0064 00000000 		.word	.LANCHOR67
 5132 0068 0AD7233C 		.word	1008981770
 5133 006c 00000000 		.word	.LANCHOR75
 5134 0070 00000000 		.word	.LANCHOR0
 5135 0074 00000000 		.word	.LANCHOR1
 5136              		.cfi_endproc
 5137              	.LFE4327:
 5139              		.section	.text._Z11UpdateClockv,"ax",%progbits
 5140              		.align	1
 5141              		.p2align 2,,3
 5142              		.global	_Z11UpdateClockv
 5143              		.syntax unified
 5144              		.thumb
 5145              		.thumb_func
 5146              		.fpu fpv5-d16
 5148              	_Z11UpdateClockv:
 5149              	.LFB4328:
1541:Veno-Echo.cpp ****     static int divCounter{};
 5150              		.loc 20 1541 1 is_stmt 1 view -0
 5151              		.cfi_startproc
 5152              		@ args = 0, pretend = 0, frame = 0
 5153              		@ frame_needed = 0, uses_anonymous_args = 0
1542:Veno-Echo.cpp ****     ClockIn.Debounce();
 5154              		.loc 20 1542 5 view .LVU1405
1543:Veno-Echo.cpp **** 
 5155              		.loc 20 1543 5 view .LVU1406
1541:Veno-Echo.cpp ****     static int divCounter{};
 5156              		.loc 20 1541 1 is_stmt 0 view .LVU1407
 5157 0000 10B5     		push	{r4, lr}
 5158              		.cfi_def_cfa_offset 8
 5159              		.cfi_offset 4, -8
 5160              		.cfi_offset 14, -4
1543:Veno-Echo.cpp **** 
 5161              		.loc 20 1543 21 view .LVU1408
 5162 0002 0A4C     		ldr	r4, .L315
 5163 0004 2046     		mov	r0, r4
 5164 0006 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 5165              	.LVL256:
1546:Veno-Echo.cpp ****     {   
 5166              		.loc 20 1546 5 is_stmt 1 view .LVU1409
  42:../libdaisy/src/hid/switch.h **** 
  43:../libdaisy/src/hid/switch.h ****     /** 
  44:../libdaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  45:../libdaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  46:../libdaisy/src/hid/switch.h ****     \param update_rate the rate at which the Debounce() function will be called. (used for timing).
  47:../libdaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  48:../libdaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  49:../libdaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 196


  50:../libdaisy/src/hid/switch.h ****     */
  51:../libdaisy/src/hid/switch.h ****     void
  52:../libdaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  53:../libdaisy/src/hid/switch.h **** 
  54:../libdaisy/src/hid/switch.h ****     /**
  55:../libdaisy/src/hid/switch.h ****        Simplified Init.
  56:../libdaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  57:../libdaisy/src/hid/switch.h ****        \param update_rate the rate at which the Debounce() function will be called. (used for timin
  58:../libdaisy/src/hid/switch.h ****     */
  59:../libdaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate);
  60:../libdaisy/src/hid/switch.h **** 
  61:../libdaisy/src/hid/switch.h ****     /** 
  62:../libdaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  63:../libdaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  64:../libdaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  65:../libdaisy/src/hid/switch.h ****     */
  66:../libdaisy/src/hid/switch.h ****     void Debounce();
  67:../libdaisy/src/hid/switch.h **** 
  68:../libdaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  69:../libdaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return state_ == 0x7f; }
 5167              		.loc 1 69 38 view .LVU1410
1546:Veno-Echo.cpp ****     {   
 5168              		.loc 20 1546 5 is_stmt 0 view .LVU1411
 5169 000a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 5170 000c 7F2B     		cmp	r3, #127
 5171 000e 00D0     		beq	.L314
 5172              	.L306:
1559:Veno-Echo.cpp **** 
 5173              		.loc 20 1559 1 view .LVU1412
 5174 0010 10BD     		pop	{r4, pc}
 5175              	.L314:
1548:Veno-Echo.cpp ****         //tempoLED_BASE.resetPhase();
 5176              		.loc 20 1548 9 is_stmt 1 view .LVU1413
1550:Veno-Echo.cpp ****         {
 5177              		.loc 20 1550 9 view .LVU1414
1552:Veno-Echo.cpp ****             {
 5178              		.loc 20 1552 13 view .LVU1415
1552:Veno-Echo.cpp ****             {
 5179              		.loc 20 1552 29 is_stmt 0 view .LVU1416
 5180 0012 0748     		ldr	r0, .L315+4
 5181 0014 FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 5182              	.LVL257:
1552:Veno-Echo.cpp ****             {
 5183              		.loc 20 1552 13 view .LVU1417
 5184 0018 0028     		cmp	r0, #0
 5185 001a F9D0     		beq	.L306
 5186              	.LBB1285:
 5187              	.LBI1285:
1540:Veno-Echo.cpp **** {
 5188              		.loc 20 1540 6 is_stmt 1 view .LVU1418
 5189              	.LBB1286:
1554:Veno-Echo.cpp ****             }
 5190              		.loc 20 1554 17 view .LVU1419
1554:Veno-Echo.cpp ****             }
 5191              		.loc 20 1554 39 is_stmt 0 view .LVU1420
 5192 001c 0448     		ldr	r0, .L315+4
 5193 001e FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 197


 5194              	.LVL258:
 5195 0022 0448     		ldr	r0, .L315+8
 5196              	.LBE1286:
 5197              	.LBE1285:
1559:Veno-Echo.cpp **** 
 5198              		.loc 20 1559 1 view .LVU1421
 5199 0024 BDE81040 		pop	{r4, lr}
 5200              		.cfi_restore 14
 5201              		.cfi_restore 4
 5202              		.cfi_def_cfa_offset 0
 5203              	.LBB1288:
 5204              	.LBB1287:
1554:Veno-Echo.cpp ****             }
 5205              		.loc 20 1554 39 view .LVU1422
 5206 0028 FFF7FEBF 		b	_ZN8TempoLED8setTempoEf
 5207              	.LVL259:
 5208              	.L316:
 5209              		.align	2
 5210              	.L315:
 5211 002c 00000000 		.word	.LANCHOR87
 5212 0030 00000000 		.word	.LANCHOR12
 5213 0034 00000000 		.word	.LANCHOR88
 5214              	.LBE1287:
 5215              	.LBE1288:
 5216              		.cfi_endproc
 5217              	.LFE4328:
 5219              		.section	.text._Z19Update_BaseTempoLEDv,"ax",%progbits
 5220              		.align	1
 5221              		.p2align 2,,3
 5222              		.global	_Z19Update_BaseTempoLEDv
 5223              		.syntax unified
 5224              		.thumb
 5225              		.thumb_func
 5226              		.fpu fpv5-d16
 5228              	_Z19Update_BaseTempoLEDv:
 5229              	.LFB4330:
1679:Veno-Echo.cpp ****     tempoLED_BASE.update();
 5230              		.loc 20 1679 1 is_stmt 1 view -0
 5231              		.cfi_startproc
 5232              		@ args = 0, pretend = 0, frame = 0
 5233              		@ frame_needed = 0, uses_anonymous_args = 0
1680:Veno-Echo.cpp **** 
 5234              		.loc 20 1680 5 view .LVU1424
1680:Veno-Echo.cpp **** 
 5235              		.loc 20 1680 25 is_stmt 0 view .LVU1425
 5236 0000 1648     		ldr	r0, .L321
1679:Veno-Echo.cpp ****     tempoLED_BASE.update();
 5237              		.loc 20 1679 1 view .LVU1426
 5238 0002 08B5     		push	{r3, lr}
 5239              		.cfi_def_cfa_offset 8
 5240              		.cfi_offset 3, -8
 5241              		.cfi_offset 14, -4
1680:Veno-Echo.cpp **** 
 5242              		.loc 20 1680 25 view .LVU1427
 5243 0004 FFF7FEFF 		bl	_ZN8TempoLED6updateEv
 5244              	.LVL260:
1682:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 198


 5245              		.loc 20 1682 5 is_stmt 1 view .LVU1428
1684:Veno-Echo.cpp ****     {
 5246              		.loc 20 1684 5 view .LVU1429
1684:Veno-Echo.cpp ****     {
 5247              		.loc 20 1684 27 is_stmt 0 view .LVU1430
 5248 0008 1448     		ldr	r0, .L321
 5249 000a FFF7FEFF 		bl	_ZN8TempoLED5isEOCEv
 5250              	.LVL261:
1684:Veno-Echo.cpp ****     {
 5251              		.loc 20 1684 5 view .LVU1431
 5252 000e B8B9     		cbnz	r0, .L318
 5253 0010 134B     		ldr	r3, .L321+4
 5254 0012 1B68     		ldr	r3, [r3]
 5255              	.L319:
1689:Veno-Echo.cpp ****     //update base phase for both delay lines
 5256              		.loc 20 1689 5 is_stmt 1 view .LVU1432
 5257              	.LVL262:
 5258              	.LBB1289:
 5259              	.LBI1289:
  71:LEDs.h        **** 
 5260              		.loc 14 71 7 view .LVU1433
 5261              	.LBB1290:
  71:LEDs.h        **** 
 5262              		.loc 14 71 20 view .LVU1434
  71:LEDs.h        **** 
 5263              		.loc 14 71 20 is_stmt 0 view .LVU1435
 5264              	.LBE1290:
 5265              	.LBE1289:
  17:oscillator_p.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:oscillator_p.h ****     */
  19:oscillator_p.h ****     enum
  20:oscillator_p.h ****     {
  21:oscillator_p.h ****         WAVE_SIN,
  22:oscillator_p.h ****         WAVE_TRI,
  23:oscillator_p.h ****         WAVE_SAW,
  24:oscillator_p.h ****         WAVE_RAMP,
  25:oscillator_p.h ****         WAVE_SQUARE,
  26:oscillator_p.h ****         WAVE_POLYBLEP_TRI,
  27:oscillator_p.h ****         WAVE_POLYBLEP_SAW,
  28:oscillator_p.h ****         WAVE_POLYBLEP_SQUARE,
  29:oscillator_p.h ****         WAVE_LAST,
  30:oscillator_p.h ****     };
  31:oscillator_p.h **** 
  32:oscillator_p.h **** 
  33:oscillator_p.h ****     /** Initializes the Oscillator
  34:oscillator_p.h **** 
  35:oscillator_p.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:oscillator_p.h **** 
  37:oscillator_p.h ****         Defaults:
  38:oscillator_p.h ****         - freq_ = 100 Hz
  39:oscillator_p.h ****         - amp_ = 0.5
  40:oscillator_p.h ****         - waveform_ = sine wave.
  41:oscillator_p.h ****     */
  42:oscillator_p.h ****     void Init(float sample_rate)
  43:oscillator_p.h ****     {
  44:oscillator_p.h ****         sr_        = sample_rate;
  45:oscillator_p.h ****         sr_recip_  = 1.0f / sample_rate;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 199


  46:oscillator_p.h ****         freq_      = 100.0f;
  47:oscillator_p.h ****         amp_       = 0.5f;
  48:oscillator_p.h ****         phase_     = 0.0f;
  49:oscillator_p.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:oscillator_p.h ****         waveform_  = WAVE_SIN;
  51:oscillator_p.h ****         eoc_       = true;
  52:oscillator_p.h ****         eor_       = true;
  53:oscillator_p.h ****     }
  54:oscillator_p.h **** 
  55:oscillator_p.h **** 
  56:oscillator_p.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:oscillator_p.h ****     */
  58:oscillator_p.h ****     inline void SetFreq(const float f)
  59:oscillator_p.h ****     {
  60:oscillator_p.h ****         freq_      = f;
  61:oscillator_p.h ****         phase_inc_ = CalcPhaseInc(f);
  62:oscillator_p.h ****     }
  63:oscillator_p.h **** 
  64:oscillator_p.h **** 
  65:oscillator_p.h ****     /** Sets the amplitude of the waveform.
  66:oscillator_p.h ****     */
  67:oscillator_p.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:oscillator_p.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:oscillator_p.h ****     */
  70:oscillator_p.h ****     inline void SetWaveform(const uint8_t wf)
  71:oscillator_p.h ****     {
  72:oscillator_p.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
  73:oscillator_p.h ****     }
  74:oscillator_p.h **** 
  75:oscillator_p.h ****     /** Returns true if cycle is at end of rise. Set during call to Process.
  76:oscillator_p.h ****     */
  77:oscillator_p.h ****     inline bool IsEOR() { return eor_; }
  78:oscillator_p.h **** 
  79:oscillator_p.h ****     /** Returns true if cycle is at end of cycle. Set during call to Process.
  80:oscillator_p.h ****     */
  81:oscillator_p.h ****     inline bool IsEOC() { return eoc_; }
  82:oscillator_p.h **** 
  83:oscillator_p.h ****     /** Returns true if cycle rising.
  84:oscillator_p.h ****     */
  85:oscillator_p.h ****     inline bool IsRising() { return phase_ < PI_F; }
  86:oscillator_p.h **** 
  87:oscillator_p.h ****     /** Returns true if cycle falling.
  88:oscillator_p.h ****     */
  89:oscillator_p.h ****     inline bool IsFalling() { return phase_ >= PI_F; }
  90:oscillator_p.h **** 
  91:oscillator_p.h ****     //Returns phase angle
  92:oscillator_p.h ****     inline float GetPhase() { return phase_; }
 5266              		.loc 15 92 31 is_stmt 1 view .LVU1436
 5267              	.LBB1292:
 5268              	.LBB1291:
  71:LEDs.h        **** 
 5269              		.loc 14 71 41 is_stmt 0 view .LVU1437
 5270 0014 114A     		ldr	r2, .L321
 5271              	.LBE1291:
 5272              	.LBE1292:
1689:Veno-Echo.cpp ****     //update base phase for both delay lines
 5273              		.loc 20 1689 50 view .LVU1438
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 200


 5274 0016 B1EE086A 		vmov.f32	s12, #6.0e+0
1689:Veno-Echo.cpp ****     //update base phase for both delay lines
 5275              		.loc 20 1689 73 view .LVU1439
 5276 001a 07EE903A 		vmov	s15, r3	@ int
1689:Veno-Echo.cpp ****     //update base phase for both delay lines
 5277              		.loc 20 1689 55 view .LVU1440
 5278 001e DFED116A 		vldr.32	s13, .L321+8
1689:Veno-Echo.cpp ****     //update base phase for both delay lines
 5279              		.loc 20 1689 50 view .LVU1441
 5280 0022 D2ED0C5A 		vldr.32	s11, [r2, #48]
1689:Veno-Echo.cpp ****     //update base phase for both delay lines
 5281              		.loc 20 1689 73 view .LVU1442
 5282 0026 F8EEE77A 		vcvt.f32.s32	s15, s15
 5283              	.LBB1293:
 5284              	.LBB1294:
  70:DelayMulti.h  **** void SetSync(const bool& syncMode){syncMode_ = syncMode;}
  71:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 5285              		.loc 17 71 54 view .LVU1443
 5286 002a 0F4A     		ldr	r2, .L321+12
 5287              	.LBE1294:
 5288              	.LBE1293:
1689:Veno-Echo.cpp ****     //update base phase for both delay lines
 5289              		.loc 20 1689 50 view .LVU1444
 5290 002c 85EE867A 		vdiv.f32	s14, s11, s12
 5291              	.LBB1296:
 5292              	.LBB1297:
 5293              		.loc 17 71 54 view .LVU1445
 5294 0030 0E4B     		ldr	r3, .L321+16
 5295              	.LBE1297:
 5296              	.LBE1296:
1689:Veno-Echo.cpp ****     //update base phase for both delay lines
 5297              		.loc 20 1689 55 view .LVU1446
 5298 0032 A7EEA67A 		vfma.f32	s14, s15, s13
 5299              	.LVL263:
1691:Veno-Echo.cpp ****     delayR.SetBasePhase( dividedPhase );
 5300              		.loc 20 1691 5 is_stmt 1 view .LVU1447
 5301              	.LBB1299:
 5302              	.LBI1293:
 5303              		.loc 17 71 6 view .LVU1448
 5304              	.LBB1295:
 5305              		.loc 17 71 43 view .LVU1449
 5306              		.loc 17 71 54 is_stmt 0 view .LVU1450
 5307 0036 82ED487A 		vstr.32	s14, [r2, #288]
 5308              	.LBE1295:
 5309              	.LBE1299:
1692:Veno-Echo.cpp **** }
 5310              		.loc 20 1692 5 is_stmt 1 view .LVU1451
 5311              	.LVL264:
 5312              	.LBB1300:
 5313              	.LBI1296:
 5314              		.loc 17 71 6 view .LVU1452
 5315              	.LBB1298:
 5316              		.loc 17 71 43 view .LVU1453
 5317              		.loc 17 71 54 is_stmt 0 view .LVU1454
 5318 003a 83ED487A 		vstr.32	s14, [r3, #288]
 5319              	.LVL265:
 5320              		.loc 17 71 54 view .LVU1455
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 201


 5321              	.LBE1298:
 5322              	.LBE1300:
1693:Veno-Echo.cpp **** 
 5323              		.loc 20 1693 1 view .LVU1456
 5324 003e 08BD     		pop	{r3, pc}
 5325              	.LVL266:
 5326              	.L318:
1686:Veno-Echo.cpp ****     }
 5327              		.loc 20 1686 9 is_stmt 1 view .LVU1457
1686:Veno-Echo.cpp ****     }
 5328              		.loc 20 1686 38 is_stmt 0 view .LVU1458
 5329 0040 0749     		ldr	r1, .L321+4
1686:Veno-Echo.cpp ****     }
 5330              		.loc 20 1686 43 view .LVU1459
 5331 0042 0B4B     		ldr	r3, .L321+20
1686:Veno-Echo.cpp ****     }
 5332              		.loc 20 1686 38 view .LVU1460
 5333 0044 0A68     		ldr	r2, [r1]
 5334 0046 0132     		adds	r2, r2, #1
1686:Veno-Echo.cpp ****     }
 5335              		.loc 20 1686 43 view .LVU1461
 5336 0048 83FB0203 		smull	r0, r3, r3, r2
 5337 004c A3EBE273 		sub	r3, r3, r2, asr #31
 5338 0050 03EB4303 		add	r3, r3, r3, lsl #1
 5339 0054 A2EB4303 		sub	r3, r2, r3, lsl #1
1686:Veno-Echo.cpp ****     }
 5340              		.loc 20 1686 22 view .LVU1462
 5341 0058 0B60     		str	r3, [r1]
 5342 005a DBE7     		b	.L319
 5343              	.L322:
 5344              		.align	2
 5345              	.L321:
 5346 005c 00000000 		.word	.LANCHOR88
 5347 0060 00000000 		.word	.LANCHOR89
 5348 0064 920A863F 		.word	1065749138
 5349 0068 00000000 		.word	.LANCHOR0
 5350 006c 00000000 		.word	.LANCHOR1
 5351 0070 ABAAAA2A 		.word	715827883
 5352              		.cfi_endproc
 5353              	.LFE4330:
 5355              		.section	.text._Z13ApplySettingsRK8Settings,"ax",%progbits
 5356              		.align	1
 5357              		.p2align 2,,3
 5358              		.global	_Z13ApplySettingsRK8Settings
 5359              		.syntax unified
 5360              		.thumb
 5361              		.thumb_func
 5362              		.fpu fpv5-d16
 5364              	_Z13ApplySettingsRK8Settings:
 5365              	.LVL267:
 5366              	.LFB4331:
1697:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5367              		.loc 20 1697 1 is_stmt 1 view -0
 5368              		.cfi_startproc
 5369              		@ args = 0, pretend = 0, frame = 0
 5370              		@ frame_needed = 0, uses_anonymous_args = 0
1698:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 202


 5371              		.loc 20 1698 5 view .LVU1464
 5372 0000 9FEDCF7A 		vldr.32	s14, .L391
1698:Veno-Echo.cpp ****     {
 5373              		.loc 20 1698 17 is_stmt 0 view .LVU1465
 5374 0004 D0ED007A 		vldr.32	s15, [r0]
1698:Veno-Echo.cpp ****     {
 5375              		.loc 20 1698 5 view .LVU1466
 5376 0008 F4EEC77A 		vcmpe.f32	s15, s14
1697:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5377              		.loc 20 1697 1 view .LVU1467
 5378 000c 38B5     		push	{r3, r4, r5, lr}
 5379              		.cfi_def_cfa_offset 16
 5380              		.cfi_offset 3, -16
 5381              		.cfi_offset 4, -12
 5382              		.cfi_offset 5, -8
 5383              		.cfi_offset 14, -4
1698:Veno-Echo.cpp ****     {
 5384              		.loc 20 1698 5 view .LVU1468
 5385 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1697:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5386              		.loc 20 1697 1 view .LVU1469
 5387 0012 0446     		mov	r4, r0
 5388              	.LBB1301:
 5389              	.LBB1302:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5390              		.loc 20 70 28 view .LVU1470
 5391 0014 CB4B     		ldr	r3, .L391+4
 5392              	.LBE1302:
 5393              	.LBE1301:
1698:Veno-Echo.cpp ****     {
 5394              		.loc 20 1698 5 view .LVU1471
 5395 0016 C0F2FD80 		blt	.L324
1698:Veno-Echo.cpp ****     {
 5396              		.loc 20 1698 43 discriminator 1 view .LVU1472
 5397 001a 9FEDCB7A 		vldr.32	s14, .L391+8
 5398 001e F4EEC77A 		vcmpe.f32	s15, s14
 5399 0022 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5400 0026 00F2F580 		bhi	.L324
1700:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5401              		.loc 20 1700 9 is_stmt 1 view .LVU1473
 5402              	.LVL268:
 5403              	.LBB1316:
 5404              	.LBI1301:
  68:Veno-Echo.cpp ****     {
 5405              		.loc 20 68 10 view .LVU1474
 5406              	.LBB1314:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5407              		.loc 20 70 9 view .LVU1475
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5408              		.loc 20 70 28 is_stmt 0 view .LVU1476
 5409 002a 93ED017A 		vldr.32	s14, [r3, #4]
 5410              	.LVL269:
 5411              	.LBB1303:
 5412              	.LBI1303:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5413              		.loc 21 75 3 is_stmt 1 view .LVU1477
 5414              	.LBB1304:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 203


 5415              		.loc 21 76 5 view .LVU1478
 5416              		.loc 21 76 5 is_stmt 0 view .LVU1479
 5417              	.LBE1304:
 5418              	.LBE1303:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5419              		.loc 20 70 53 view .LVU1480
 5420 002e 9FEDC76A 		vldr.32	s12, .L391+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5421              		.loc 20 70 15 view .LVU1481
 5422 0032 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5423              		.loc 20 70 53 view .LVU1482
 5424 0036 27EE067A 		vmul.f32	s14, s14, s12
 5425              	.LBB1306:
 5426              	.LBB1305:
 5427              		.loc 21 76 31 view .LVU1483
 5428 003a F0EEE66A 		vabs.f32	s13, s13
 5429              	.LBE1305:
 5430              	.LBE1306:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5431              		.loc 20 70 9 view .LVU1484
 5432 003e F4EEC76A 		vcmpe.f32	s13, s14
 5433 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5434 0046 0FDD     		ble	.L327
  74:Veno-Echo.cpp ****             //del -> Reset();
 5435              		.loc 20 74 29 view .LVU1485
 5436 0048 BCEEE77A 		vcvt.u32.f32	s14, s15
 5437              	.LBB1307:
 5438              	.LBB1308:
 5439              		.loc 19 72 9 view .LVU1486
 5440 004c C04D     		ldr	r5, .L391+16
 5441              	.LBE1308:
 5442              	.LBE1307:
 5443              	.LBE1314:
 5444              	.LBE1316:
1700:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5445              		.loc 20 1700 33 view .LVU1487
 5446 004e 1968     		ldr	r1, [r3]
 5447              	.LBB1317:
 5448              	.LBB1315:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5449              		.loc 20 73 13 is_stmt 1 view .LVU1488
 5450              	.LBB1311:
 5451              	.LBB1309:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5452              		.loc 19 71 9 is_stmt 0 view .LVU1489
 5453 0050 0020     		movs	r0, #0
 5454              	.LVL270:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5455              		.loc 19 71 9 view .LVU1490
 5456              	.LBE1309:
 5457              	.LBE1311:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5458              		.loc 20 73 27 view .LVU1491
 5459 0052 C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5460              		.loc 20 74 13 is_stmt 1 view .LVU1492
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 204


 5461              	.LVL271:
 5462              	.LBB1312:
 5463              	.LBI1307:
  69:delayline_reverse.h ****     {
 5464              		.loc 19 69 17 view .LVU1493
  69:delayline_reverse.h ****     {
 5465              		.loc 19 69 17 is_stmt 0 view .LVU1494
 5466              	.LBE1312:
  74:Veno-Echo.cpp ****             //del -> Reset();
 5467              		.loc 20 74 29 view .LVU1495
 5468 0056 17EE102A 		vmov	r2, s14	@ int
 5469              	.LBB1313:
 5470              	.LBB1310:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5471              		.loc 19 71 9 view .LVU1496
 5472 005a 0860     		str	r0, [r1]	@ float
 5473 005c D4ED007A 		vldr.32	s15, [r4]
 5474              	.LVL272:
 5475              		.loc 19 72 9 view .LVU1497
 5476 0060 AA42     		cmp	r2, r5
 5477 0062 28BF     		it	cs
 5478 0064 2A46     		movcs	r2, r5
 5479 0066 0A61     		str	r2, [r1, #16]
 5480              	.LVL273:
 5481              	.L327:
 5482              		.loc 19 72 9 view .LVU1498
 5483              	.LBE1310:
 5484              	.LBE1313:
 5485              	.LBE1315:
 5486              	.LBE1317:
1701:Veno-Echo.cpp ****     }
 5487              		.loc 20 1701 9 is_stmt 1 view .LVU1499
 5488              	.LBB1318:
 5489              	.LBI1318:
  68:Veno-Echo.cpp ****     {
 5490              		.loc 20 68 10 view .LVU1500
 5491              	.LBB1319:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5492              		.loc 20 70 9 view .LVU1501
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5493              		.loc 20 70 28 is_stmt 0 view .LVU1502
 5494 0068 BA4B     		ldr	r3, .L391+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5495              		.loc 20 70 53 view .LVU1503
 5496 006a 9FEDB86A 		vldr.32	s12, .L391+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5497              		.loc 20 70 28 view .LVU1504
 5498 006e 93ED017A 		vldr.32	s14, [r3, #4]
 5499              	.LVL274:
 5500              	.LBB1320:
 5501              	.LBI1320:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5502              		.loc 21 75 3 is_stmt 1 view .LVU1505
 5503              	.LBB1321:
 5504              		.loc 21 76 5 view .LVU1506
 5505              		.loc 21 76 5 is_stmt 0 view .LVU1507
 5506              	.LBE1321:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 205


 5507              	.LBE1320:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5508              		.loc 20 70 15 view .LVU1508
 5509 0072 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5510              		.loc 20 70 53 view .LVU1509
 5511 0076 27EE067A 		vmul.f32	s14, s14, s12
 5512              	.LBB1323:
 5513              	.LBB1322:
 5514              		.loc 21 76 31 view .LVU1510
 5515 007a F0EEE66A 		vabs.f32	s13, s13
 5516              	.LBE1322:
 5517              	.LBE1323:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5518              		.loc 20 70 9 view .LVU1511
 5519 007e F4EEC76A 		vcmpe.f32	s13, s14
 5520 0082 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5521 0086 00F34B81 		bgt	.L387
 5522              	.LVL275:
 5523              	.L330:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5524              		.loc 20 70 9 view .LVU1512
 5525              	.LBE1319:
 5526              	.LBE1318:
1709:Veno-Echo.cpp ****     {
 5527              		.loc 20 1709 5 is_stmt 1 view .LVU1513
 5528 008a F7EE007A 		vmov.f32	s15, #1.0e+0
1709:Veno-Echo.cpp ****     {
 5529              		.loc 20 1709 17 is_stmt 0 view .LVU1514
 5530 008e 94ED010A 		vldr.32	s0, [r4, #4]
1709:Veno-Echo.cpp ****     {
 5531              		.loc 20 1709 5 view .LVU1515
 5532 0092 B4EEE70A 		vcmpe.f32	s0, s15
 5533 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5534 009a 06DB     		blt	.L335
1709:Veno-Echo.cpp ****     {
 5535              		.loc 20 1709 35 discriminator 1 view .LVU1516
 5536 009c F0EE087A 		vmov.f32	s15, #3.0e+0
 5537 00a0 B4EEE70A 		vcmpe.f32	s0, s15
 5538 00a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5539 00a8 01D9     		bls	.L385
 5540              	.L335:
1715:Veno-Echo.cpp ****     }
 5541              		.loc 20 1715 9 is_stmt 1 view .LVU1517
1715:Veno-Echo.cpp ****     }
 5542              		.loc 20 1715 30 is_stmt 0 view .LVU1518
 5543 00aa B7EE000A 		vmov.f32	s0, #1.0e+0
 5544              	.L385:
 5545 00ae AA48     		ldr	r0, .L391+24
 5546 00b0 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 5547              	.LVL276:
1718:Veno-Echo.cpp ****     {
 5548              		.loc 20 1718 5 is_stmt 1 view .LVU1519
1718:Veno-Echo.cpp ****     {
 5549              		.loc 20 1718 17 is_stmt 0 view .LVU1520
 5550 00b4 D4ED027A 		vldr.32	s15, [r4, #8]
1718:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 206


 5551              		.loc 20 1718 5 view .LVU1521
 5552 00b8 F5EEC07A 		vcmpe.f32	s15, #0
 5553 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5554 00c0 C0F22B81 		blt	.L382
1718:Veno-Echo.cpp ****     {
 5555              		.loc 20 1718 42 discriminator 1 view .LVU1522
 5556 00c4 DFEDA56A 		vldr.32	s13, .L391+28
1724:Veno-Echo.cpp ****     }
 5557              		.loc 20 1724 18 discriminator 1 view .LVU1523
 5558 00c8 9FEDA57A 		vldr.32	s14, .L391+32
 5559 00cc F4EEE67A 		vcmpe.f32	s15, s13
 5560 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5561 00d4 88BF     		it	hi
 5562 00d6 F0EE477A 		vmovhi.f32	s15, s14
 5563              	.L339:
1727:Veno-Echo.cpp ****     {
 5564              		.loc 20 1727 17 view .LVU1524
 5565 00da 94ED030A 		vldr.32	s0, [r4, #12]
1727:Veno-Echo.cpp ****     {
 5566              		.loc 20 1727 5 view .LVU1525
 5567 00de 9FEDA17A 		vldr.32	s14, .L391+36
 5568 00e2 A14B     		ldr	r3, .L391+40
 5569 00e4 B4EEC70A 		vcmpe.f32	s0, s14
 5570              	.LBB1334:
 5571              	.LBB1335:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 5572              		.loc 8 60 20 view .LVU1526
 5573 00e8 A04D     		ldr	r5, .L391+44
 5574 00ea C3ED007A 		vstr.32	s15, [r3]
 5575              	.LBE1335:
 5576              	.LBE1334:
1727:Veno-Echo.cpp ****     {
 5577              		.loc 20 1727 5 is_stmt 1 view .LVU1527
 5578 00ee F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5579 00f2 06DB     		blt	.L342
1727:Veno-Echo.cpp ****     {
 5580              		.loc 20 1727 40 is_stmt 0 discriminator 1 view .LVU1528
 5581 00f4 F2EE047A 		vmov.f32	s15, #1.0e+1
 5582 00f8 B4EEE70A 		vcmpe.f32	s0, s15
 5583 00fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5584 0100 01D9     		bls	.L386
 5585              	.L342:
1733:Veno-Echo.cpp ****     }
 5586              		.loc 20 1733 9 is_stmt 1 view .LVU1529
 5587              	.LVL277:
 5588              	.LBB1336:
 5589              	.LBI1336:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 5590              		.loc 8 58 17 view .LVU1530
 5591              	.LBB1337:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 5592              		.loc 8 60 9 view .LVU1531
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 5593              		.loc 8 60 20 is_stmt 0 view .LVU1532
 5594 0102 9FED9B0A 		vldr.32	s0, .L391+48
 5595              	.LVL278:
 5596              	.L386:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 207


 5597              		.loc 8 61 34 view .LVU1533
 5598 0106 2846     		mov	r0, r5
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 5599              		.loc 8 60 20 view .LVU1534
 5600 0108 85ED020A 		vstr.32	s0, [r5, #8]
 5601              		.loc 8 61 9 is_stmt 1 view .LVU1535
 5602              		.loc 8 61 34 is_stmt 0 view .LVU1536
 5603 010c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 5604              	.LVL279:
 5605              	.LBE1337:
 5606              	.LBE1336:
1736:Veno-Echo.cpp ****     {
 5607              		.loc 20 1736 5 view .LVU1537
 5608 0110 DFED987A 		vldr.32	s15, .L391+52
 5609              	.LBB1339:
 5610              	.LBB1338:
 5611              		.loc 8 61 20 view .LVU1538
 5612 0114 85ED060A 		vstr.32	s0, [r5, #24]
 5613              	.LBE1338:
 5614              	.LBE1339:
1736:Veno-Echo.cpp ****     {
 5615              		.loc 20 1736 5 is_stmt 1 view .LVU1539
1736:Veno-Echo.cpp ****     {
 5616              		.loc 20 1736 17 is_stmt 0 view .LVU1540
 5617 0118 94ED050A 		vldr.32	s0, [r4, #20]
1736:Veno-Echo.cpp ****     {
 5618              		.loc 20 1736 5 view .LVU1541
 5619 011c B4EEE70A 		vcmpe.f32	s0, s15
 5620 0120 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5621 0124 07DB     		blt	.L346
1736:Veno-Echo.cpp ****     {
 5622              		.loc 20 1736 40 discriminator 1 view .LVU1542
 5623 0126 DFED947A 		vldr.32	s15, .L391+56
 5624 012a B4EEE70A 		vcmpe.f32	s0, s15
 5625 012e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5626 0132 40F2DF80 		bls	.L388
 5627              	.L346:
1745:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 5628              		.loc 20 1745 9 is_stmt 1 view .LVU1543
1745:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 5629              		.loc 20 1745 22 is_stmt 0 view .LVU1544
 5630 0136 9FED900A 		vldr.32	s0, .L391+56
 5631 013a 9048     		ldr	r0, .L391+60
 5632 013c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5633              	.LVL280:
1746:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 5634              		.loc 20 1746 9 is_stmt 1 view .LVU1545
1746:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 5635              		.loc 20 1746 22 is_stmt 0 view .LVU1546
 5636 0140 9FED8D0A 		vldr.32	s0, .L391+56
 5637 0144 8E48     		ldr	r0, .L391+64
 5638 0146 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5639              	.LVL281:
1747:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 5640              		.loc 20 1747 9 is_stmt 1 view .LVU1547
1747:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 5641              		.loc 20 1747 27 is_stmt 0 view .LVU1548
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 208


 5642 014a 9FED8B0A 		vldr.32	s0, .L391+56
 5643 014e 8D48     		ldr	r0, .L391+68
 5644 0150 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5645              	.LVL282:
1748:Veno-Echo.cpp ****     }
 5646              		.loc 20 1748 9 is_stmt 1 view .LVU1549
1748:Veno-Echo.cpp ****     }
 5647              		.loc 20 1748 27 is_stmt 0 view .LVU1550
 5648 0154 9FED880A 		vldr.32	s0, .L391+56
 5649 0158 8B48     		ldr	r0, .L391+72
 5650 015a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5651              	.LVL283:
 5652              	.L349:
1751:Veno-Echo.cpp ****     {
 5653              		.loc 20 1751 5 is_stmt 1 view .LVU1551
1751:Veno-Echo.cpp ****     {
 5654              		.loc 20 1751 17 is_stmt 0 view .LVU1552
 5655 015e 94ED040A 		vldr.32	s0, [r4, #16]
1751:Veno-Echo.cpp ****     {
 5656              		.loc 20 1751 5 view .LVU1553
 5657 0162 DFED8A7A 		vldr.32	s15, .L391+76
 5658 0166 B4EEE70A 		vcmpe.f32	s0, s15
 5659 016a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5660 016e 07DB     		blt	.L350
1751:Veno-Echo.cpp ****     {
 5661              		.loc 20 1751 40 discriminator 1 view .LVU1554
 5662 0170 DFED877A 		vldr.32	s15, .L391+80
 5663 0174 B4EEE70A 		vcmpe.f32	s0, s15
 5664 0178 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5665 017c 40F2A780 		bls	.L389
 5666              	.L350:
1760:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 5667              		.loc 20 1760 9 is_stmt 1 view .LVU1555
1760:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 5668              		.loc 20 1760 22 is_stmt 0 view .LVU1556
 5669 0180 9FED840A 		vldr.32	s0, .L391+84
 5670 0184 8448     		ldr	r0, .L391+88
 5671 0186 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5672              	.LVL284:
1761:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 5673              		.loc 20 1761 9 is_stmt 1 view .LVU1557
1761:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 5674              		.loc 20 1761 22 is_stmt 0 view .LVU1558
 5675 018a 9FED820A 		vldr.32	s0, .L391+84
 5676 018e 8348     		ldr	r0, .L391+92
 5677 0190 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5678              	.LVL285:
1762:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 5679              		.loc 20 1762 9 is_stmt 1 view .LVU1559
1762:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 5680              		.loc 20 1762 27 is_stmt 0 view .LVU1560
 5681 0194 9FED7F0A 		vldr.32	s0, .L391+84
 5682 0198 8148     		ldr	r0, .L391+96
 5683 019a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5684              	.LVL286:
1763:Veno-Echo.cpp **** 
 5685              		.loc 20 1763 9 is_stmt 1 view .LVU1561
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 209


1763:Veno-Echo.cpp **** 
 5686              		.loc 20 1763 27 is_stmt 0 view .LVU1562
 5687 019e 9FED7D0A 		vldr.32	s0, .L391+84
 5688 01a2 8048     		ldr	r0, .L391+100
 5689 01a4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5690              	.LVL287:
 5691              	.L353:
1767:Veno-Echo.cpp ****     {
 5692              		.loc 20 1767 5 is_stmt 1 view .LVU1563
1767:Veno-Echo.cpp ****     {
 5693              		.loc 20 1767 17 is_stmt 0 view .LVU1564
 5694 01a8 94ED060A 		vldr.32	s0, [r4, #24]
1767:Veno-Echo.cpp ****     {
 5695              		.loc 20 1767 5 view .LVU1565
 5696 01ac B5EEC00A 		vcmpe.f32	s0, #0
 5697 01b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5698 01b4 06DB     		blt	.L354
1767:Veno-Echo.cpp ****     {
 5699              		.loc 20 1767 38 discriminator 1 view .LVU1566
 5700 01b6 F6EE007A 		vmov.f32	s15, #5.0e-1
 5701 01ba B4EEE70A 		vcmpe.f32	s0, s15
 5702 01be F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5703 01c2 5DD9     		bls	.L390
 5704              	.L354:
1781:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 5705              		.loc 20 1781 9 is_stmt 1 view .LVU1567
1781:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 5706              		.loc 20 1781 26 is_stmt 0 view .LVU1568
 5707 01c4 9FED660A 		vldr.32	s0, .L391+32
 5708 01c8 6E48     		ldr	r0, .L391+68
 5709 01ca FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5710              	.LVL288:
1782:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 5711              		.loc 20 1782 9 is_stmt 1 view .LVU1569
1782:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 5712              		.loc 20 1782 26 is_stmt 0 view .LVU1570
 5713 01ce 9FED640A 		vldr.32	s0, .L391+32
 5714 01d2 7348     		ldr	r0, .L391+96
 5715 01d4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5716              	.LVL289:
1783:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 5717              		.loc 20 1783 9 is_stmt 1 view .LVU1571
1783:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 5718              		.loc 20 1783 26 is_stmt 0 view .LVU1572
 5719 01d8 9FED610A 		vldr.32	s0, .L391+32
 5720 01dc 6A48     		ldr	r0, .L391+72
 5721 01de FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5722              	.LVL290:
1784:Veno-Echo.cpp ****     }
 5723              		.loc 20 1784 9 is_stmt 1 view .LVU1573
1784:Veno-Echo.cpp ****     }
 5724              		.loc 20 1784 26 is_stmt 0 view .LVU1574
 5725 01e2 9FED5F0A 		vldr.32	s0, .L391+32
 5726 01e6 6F48     		ldr	r0, .L391+100
 5727 01e8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5728              	.LVL291:
 5729              	.L357:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 210


1787:Veno-Echo.cpp ****     {
 5730              		.loc 20 1787 5 is_stmt 1 view .LVU1575
1787:Veno-Echo.cpp ****     {
 5731              		.loc 20 1787 16 is_stmt 0 view .LVU1576
 5732 01ec D4ED077A 		vldr.32	s15, [r4, #28]
1787:Veno-Echo.cpp ****     {
 5733              		.loc 20 1787 5 view .LVU1577
 5734 01f0 9FED6D7A 		vldr.32	s14, .L391+104
1793:Veno-Echo.cpp ****     }
 5735              		.loc 20 1793 21 view .LVU1578
 5736 01f4 6D4B     		ldr	r3, .L391+108
1787:Veno-Echo.cpp ****     {
 5737              		.loc 20 1787 5 view .LVU1579
 5738 01f6 F4EEC77A 		vcmpe.f32	s15, s14
 5739 01fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5740 01fe 3CD4     		bmi	.L361
1791:Veno-Echo.cpp ****     {
 5741              		.loc 20 1791 14 is_stmt 1 view .LVU1580
 5742 0200 9FED6B7A 		vldr.32	s14, .L391+112
 5743 0204 F4EEC77A 		vcmpe.f32	s15, s14
 5744 0208 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5745 020c 35DD     		ble	.L361
1793:Veno-Echo.cpp ****     }
 5746              		.loc 20 1793 9 view .LVU1581
1793:Veno-Echo.cpp ****     }
 5747              		.loc 20 1793 21 is_stmt 0 view .LVU1582
 5748 020e 0122     		movs	r2, #1
 5749 0210 1A70     		strb	r2, [r3]
1800:Veno-Echo.cpp **** 
 5750              		.loc 20 1800 1 view .LVU1583
 5751 0212 38BD     		pop	{r3, r4, r5, pc}
 5752              	.LVL292:
 5753              	.L324:
1705:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 5754              		.loc 20 1705 9 is_stmt 1 view .LVU1584
 5755              	.LBB1340:
 5756              	.LBI1340:
  68:Veno-Echo.cpp ****     {
 5757              		.loc 20 68 10 view .LVU1585
 5758              	.LBB1341:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5759              		.loc 20 70 9 view .LVU1586
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5760              		.loc 20 70 28 is_stmt 0 view .LVU1587
 5761 0214 D3ED017A 		vldr.32	s15, [r3, #4]
 5762              	.LVL293:
 5763              	.LBB1342:
 5764              	.LBI1342:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5765              		.loc 21 75 3 is_stmt 1 view .LVU1588
 5766              	.LBB1343:
 5767              		.loc 21 76 5 view .LVU1589
 5768              		.loc 21 76 5 is_stmt 0 view .LVU1590
 5769              	.LBE1343:
 5770              	.LBE1342:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5771              		.loc 20 70 15 view .LVU1591
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 211


 5772 0218 DFED666A 		vldr.32	s13, .L391+116
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5773              		.loc 20 70 53 view .LVU1592
 5774 021c 9FED4B6A 		vldr.32	s12, .L391+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5775              		.loc 20 70 15 view .LVU1593
 5776 0220 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5777              		.loc 20 70 53 view .LVU1594
 5778 0224 67EE867A 		vmul.f32	s15, s15, s12
 5779              	.LBB1345:
 5780              	.LBB1344:
 5781              		.loc 21 76 31 view .LVU1595
 5782 0228 B0EEC77A 		vabs.f32	s14, s14
 5783              	.LBE1344:
 5784              	.LBE1345:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5785              		.loc 20 70 9 view .LVU1596
 5786 022c B4EEE77A 		vcmpe.f32	s14, s15
 5787 0230 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5788 0234 06DD     		ble	.L331
 5789              	.LBE1341:
 5790              	.LBE1340:
1705:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 5791              		.loc 20 1705 33 view .LVU1597
 5792 0236 1A68     		ldr	r2, [r3]
 5793              	.LBB1351:
 5794              	.LBB1350:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5795              		.loc 20 73 13 is_stmt 1 view .LVU1598
 5796              	.LBB1346:
 5797              	.LBB1347:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5798              		.loc 19 71 9 is_stmt 0 view .LVU1599
 5799 0238 0021     		movs	r1, #0
 5800              		.loc 19 72 9 view .LVU1600
 5801 023a 5F48     		ldr	r0, .L391+120
 5802              	.LVL294:
 5803              		.loc 19 72 9 view .LVU1601
 5804              	.LBE1347:
 5805              	.LBE1346:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5806              		.loc 20 73 27 view .LVU1602
 5807 023c C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5808              		.loc 20 74 13 is_stmt 1 view .LVU1603
 5809              	.LVL295:
 5810              	.LBB1349:
 5811              	.LBI1346:
  69:delayline_reverse.h ****     {
 5812              		.loc 19 69 17 view .LVU1604
 5813              	.LBB1348:
 5814              		.loc 19 72 9 is_stmt 0 view .LVU1605
 5815 0240 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5816              		.loc 19 71 9 view .LVU1606
 5817 0242 1160     		str	r1, [r2]	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 212


 5818              	.LVL296:
 5819              	.L331:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5820              		.loc 19 71 9 view .LVU1607
 5821              	.LBE1348:
 5822              	.LBE1349:
 5823              	.LBE1350:
 5824              	.LBE1351:
1706:Veno-Echo.cpp ****     }
 5825              		.loc 20 1706 9 is_stmt 1 view .LVU1608
 5826              	.LBB1352:
 5827              	.LBI1352:
  68:Veno-Echo.cpp ****     {
 5828              		.loc 20 68 10 view .LVU1609
 5829              	.LBB1353:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5830              		.loc 20 70 9 view .LVU1610
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5831              		.loc 20 70 28 is_stmt 0 view .LVU1611
 5832 0244 434B     		ldr	r3, .L391+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5833              		.loc 20 70 15 view .LVU1612
 5834 0246 DFED5B6A 		vldr.32	s13, .L391+116
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5835              		.loc 20 70 28 view .LVU1613
 5836 024a D3ED017A 		vldr.32	s15, [r3, #4]
 5837              	.LVL297:
 5838              	.LBB1354:
 5839              	.LBI1354:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5840              		.loc 21 75 3 is_stmt 1 view .LVU1614
 5841              	.LBB1355:
 5842              		.loc 21 76 5 view .LVU1615
 5843              		.loc 21 76 5 is_stmt 0 view .LVU1616
 5844              	.LBE1355:
 5845              	.LBE1354:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5846              		.loc 20 70 53 view .LVU1617
 5847 024e 9FED3F6A 		vldr.32	s12, .L391+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5848              		.loc 20 70 15 view .LVU1618
 5849 0252 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5850              		.loc 20 70 53 view .LVU1619
 5851 0256 67EE867A 		vmul.f32	s15, s15, s12
 5852              	.LBB1357:
 5853              	.LBB1356:
 5854              		.loc 21 76 31 view .LVU1620
 5855 025a B0EEC77A 		vabs.f32	s14, s14
 5856              	.LBE1356:
 5857              	.LBE1357:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5858              		.loc 20 70 9 view .LVU1621
 5859 025e B4EEE77A 		vcmpe.f32	s14, s15
 5860 0262 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5861 0266 7FF710AF 		ble	.L330
 5862              	.LBE1353:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 213


 5863              	.LBE1352:
1706:Veno-Echo.cpp ****     }
 5864              		.loc 20 1706 33 view .LVU1622
 5865 026a 1A68     		ldr	r2, [r3]
 5866              	.LBB1363:
 5867              	.LBB1362:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5868              		.loc 20 73 13 is_stmt 1 view .LVU1623
 5869              	.LBB1358:
 5870              	.LBB1359:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5871              		.loc 19 71 9 is_stmt 0 view .LVU1624
 5872 026c 0021     		movs	r1, #0
 5873              		.loc 19 72 9 view .LVU1625
 5874 026e 5248     		ldr	r0, .L391+120
 5875              	.LBE1359:
 5876              	.LBE1358:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5877              		.loc 20 73 27 view .LVU1626
 5878 0270 C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5879              		.loc 20 74 13 is_stmt 1 view .LVU1627
 5880              	.LVL298:
 5881              	.LBB1361:
 5882              	.LBI1358:
  69:delayline_reverse.h ****     {
 5883              		.loc 19 69 17 view .LVU1628
 5884              	.LBB1360:
 5885              		.loc 19 72 9 is_stmt 0 view .LVU1629
 5886 0274 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5887              		.loc 19 71 9 view .LVU1630
 5888 0276 1160     		str	r1, [r2]	@ float
  73:delayline_reverse.h ****     }
 5889              		.loc 19 73 5 view .LVU1631
 5890 0278 07E7     		b	.L330
 5891              	.LVL299:
 5892              	.L361:
 5893              		.loc 19 73 5 view .LVU1632
 5894              	.LBE1360:
 5895              	.LBE1361:
 5896              	.LBE1362:
 5897              	.LBE1363:
1789:Veno-Echo.cpp ****     }
 5898              		.loc 20 1789 9 is_stmt 1 view .LVU1633
1789:Veno-Echo.cpp ****     }
 5899              		.loc 20 1789 21 is_stmt 0 view .LVU1634
 5900 027a 0022     		movs	r2, #0
 5901 027c 1A70     		strb	r2, [r3]
1800:Veno-Echo.cpp **** 
 5902              		.loc 20 1800 1 view .LVU1635
 5903 027e 38BD     		pop	{r3, r4, r5, pc}
 5904              	.LVL300:
 5905              	.L390:
1769:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 5906              		.loc 20 1769 9 is_stmt 1 view .LVU1636
1769:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 214


 5907              		.loc 20 1769 21 is_stmt 0 view .LVU1637
 5908 0280 3E48     		ldr	r0, .L391+60
 5909 0282 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5910              	.LVL301:
1770:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 5911              		.loc 20 1770 9 is_stmt 1 view .LVU1638
1770:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 5912              		.loc 20 1770 21 is_stmt 0 view .LVU1639
 5913 0286 94ED060A 		vldr.32	s0, [r4, #24]
 5914 028a 4348     		ldr	r0, .L391+88
 5915 028c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5916              	.LVL302:
1771:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 5917              		.loc 20 1771 9 is_stmt 1 view .LVU1640
1771:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 5918              		.loc 20 1771 21 is_stmt 0 view .LVU1641
 5919 0290 94ED060A 		vldr.32	s0, [r4, #24]
 5920 0294 3A48     		ldr	r0, .L391+64
 5921 0296 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5922              	.LVL303:
1772:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 5923              		.loc 20 1772 9 is_stmt 1 view .LVU1642
1772:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 5924              		.loc 20 1772 21 is_stmt 0 view .LVU1643
 5925 029a 94ED060A 		vldr.32	s0, [r4, #24]
 5926 029e 3F48     		ldr	r0, .L391+92
 5927 02a0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5928              	.LVL304:
1773:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 5929              		.loc 20 1773 9 is_stmt 1 view .LVU1644
1773:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 5930              		.loc 20 1773 26 is_stmt 0 view .LVU1645
 5931 02a4 94ED060A 		vldr.32	s0, [r4, #24]
 5932 02a8 3648     		ldr	r0, .L391+68
 5933 02aa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5934              	.LVL305:
1774:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 5935              		.loc 20 1774 9 is_stmt 1 view .LVU1646
1774:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 5936              		.loc 20 1774 26 is_stmt 0 view .LVU1647
 5937 02ae 94ED060A 		vldr.32	s0, [r4, #24]
 5938 02b2 3B48     		ldr	r0, .L391+96
 5939 02b4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5940              	.LVL306:
1775:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 5941              		.loc 20 1775 9 is_stmt 1 view .LVU1648
1775:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 5942              		.loc 20 1775 26 is_stmt 0 view .LVU1649
 5943 02b8 94ED060A 		vldr.32	s0, [r4, #24]
 5944 02bc 3248     		ldr	r0, .L391+72
 5945 02be FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5946              	.LVL307:
1776:Veno-Echo.cpp ****     }
 5947              		.loc 20 1776 9 is_stmt 1 view .LVU1650
1776:Veno-Echo.cpp ****     }
 5948              		.loc 20 1776 26 is_stmt 0 view .LVU1651
 5949 02c2 94ED060A 		vldr.32	s0, [r4, #24]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 215


 5950 02c6 3748     		ldr	r0, .L391+100
 5951 02c8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5952              	.LVL308:
 5953 02cc 8EE7     		b	.L357
 5954              	.L389:
1753:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 5955              		.loc 20 1753 9 is_stmt 1 view .LVU1652
1753:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 5956              		.loc 20 1753 22 is_stmt 0 view .LVU1653
 5957 02ce 3248     		ldr	r0, .L391+88
 5958 02d0 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5959              	.LVL309:
1754:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 5960              		.loc 20 1754 9 is_stmt 1 view .LVU1654
1754:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 5961              		.loc 20 1754 22 is_stmt 0 view .LVU1655
 5962 02d4 94ED040A 		vldr.32	s0, [r4, #16]
 5963 02d8 3048     		ldr	r0, .L391+92
 5964 02da FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5965              	.LVL310:
1755:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 5966              		.loc 20 1755 9 is_stmt 1 view .LVU1656
1755:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 5967              		.loc 20 1755 27 is_stmt 0 view .LVU1657
 5968 02de 94ED040A 		vldr.32	s0, [r4, #16]
 5969 02e2 2F48     		ldr	r0, .L391+96
 5970 02e4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5971              	.LVL311:
1756:Veno-Echo.cpp ****     }
 5972              		.loc 20 1756 9 is_stmt 1 view .LVU1658
1756:Veno-Echo.cpp ****     }
 5973              		.loc 20 1756 27 is_stmt 0 view .LVU1659
 5974 02e8 94ED040A 		vldr.32	s0, [r4, #16]
 5975 02ec 2D48     		ldr	r0, .L391+100
 5976 02ee FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5977              	.LVL312:
 5978 02f2 59E7     		b	.L353
 5979              	.L388:
1738:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 5980              		.loc 20 1738 9 is_stmt 1 view .LVU1660
1738:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 5981              		.loc 20 1738 22 is_stmt 0 view .LVU1661
 5982 02f4 2148     		ldr	r0, .L391+60
 5983 02f6 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5984              	.LVL313:
1739:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 5985              		.loc 20 1739 9 is_stmt 1 view .LVU1662
1739:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 5986              		.loc 20 1739 22 is_stmt 0 view .LVU1663
 5987 02fa 94ED050A 		vldr.32	s0, [r4, #20]
 5988 02fe 2048     		ldr	r0, .L391+64
 5989 0300 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5990              	.LVL314:
1740:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 5991              		.loc 20 1740 9 is_stmt 1 view .LVU1664
1740:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 5992              		.loc 20 1740 27 is_stmt 0 view .LVU1665
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 216


 5993 0304 94ED050A 		vldr.32	s0, [r4, #20]
 5994 0308 1E48     		ldr	r0, .L391+68
 5995 030a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5996              	.LVL315:
1741:Veno-Echo.cpp ****     }
 5997              		.loc 20 1741 9 is_stmt 1 view .LVU1666
1741:Veno-Echo.cpp ****     }
 5998              		.loc 20 1741 27 is_stmt 0 view .LVU1667
 5999 030e 94ED050A 		vldr.32	s0, [r4, #20]
 6000 0312 1D48     		ldr	r0, .L391+72
 6001 0314 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6002              	.LVL316:
 6003 0318 21E7     		b	.L349
 6004              	.L382:
1724:Veno-Echo.cpp ****     }
 6005              		.loc 20 1724 18 view .LVU1668
 6006 031a DFED117A 		vldr.32	s15, .L391+32
 6007 031e DCE6     		b	.L339
 6008              	.LVL317:
 6009              	.L387:
 6010              	.LBB1364:
 6011              	.LBB1332:
  74:Veno-Echo.cpp ****             //del -> Reset();
 6012              		.loc 20 74 29 view .LVU1669
 6013 0320 BCEEE77A 		vcvt.u32.f32	s14, s15
 6014              	.LBB1324:
 6015              	.LBB1325:
  72:delayline_reverse.h ****     }
 6016              		.loc 19 72 9 view .LVU1670
 6017 0324 0A4D     		ldr	r5, .L391+16
 6018              	.LBE1325:
 6019              	.LBE1324:
 6020              	.LBE1332:
 6021              	.LBE1364:
1701:Veno-Echo.cpp ****     }
 6022              		.loc 20 1701 33 view .LVU1671
 6023 0326 1968     		ldr	r1, [r3]
 6024              	.LBB1365:
 6025              	.LBB1333:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6026              		.loc 20 73 13 is_stmt 1 view .LVU1672
 6027              	.LBB1329:
 6028              	.LBB1326:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6029              		.loc 19 71 9 is_stmt 0 view .LVU1673
 6030 0328 0020     		movs	r0, #0
 6031              	.LBE1326:
 6032              	.LBE1329:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6033              		.loc 20 73 27 view .LVU1674
 6034 032a C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6035              		.loc 20 74 29 view .LVU1675
 6036 032e 17EE102A 		vmov	r2, s14	@ int
 6037              	.LBB1330:
 6038              	.LBB1327:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 217


 6039              		.loc 19 71 9 view .LVU1676
 6040 0332 0860     		str	r0, [r1]	@ float
 6041              	.LVL318:
  72:delayline_reverse.h ****     }
 6042              		.loc 19 72 9 view .LVU1677
 6043 0334 AA42     		cmp	r2, r5
 6044 0336 28BF     		it	cs
 6045 0338 2A46     		movcs	r2, r5
 6046              	.LBE1327:
 6047              	.LBE1330:
  74:Veno-Echo.cpp ****             //del -> Reset();
 6048              		.loc 20 74 13 is_stmt 1 view .LVU1678
 6049              	.LVL319:
 6050              	.LBB1331:
 6051              	.LBI1324:
  69:delayline_reverse.h ****     {
 6052              		.loc 19 69 17 view .LVU1679
 6053              	.LBB1328:
  72:delayline_reverse.h ****     }
 6054              		.loc 19 72 9 is_stmt 0 view .LVU1680
 6055 033a 0A61     		str	r2, [r1, #16]
 6056              		.loc 19 73 5 view .LVU1681
 6057 033c A5E6     		b	.L330
 6058              	.L392:
 6059 033e 00BF     		.align	2
 6060              	.L391:
 6061 0340 0050C346 		.word	1187205120
 6062 0344 00000000 		.word	.LANCHOR2
 6063 0348 00606A48 		.word	1214930944
 6064 034c 0AD7A33B 		.word	1000593162
 6065 0350 BF270900 		.word	599999
 6066 0354 00000000 		.word	.LANCHOR3
 6067 0358 00000000 		.word	.LANCHOR12
 6068 035c 0000FA43 		.word	1140457472
 6069 0360 00000000 		.word	0
 6070 0364 CDCCCC3D 		.word	1036831949
 6071 0368 00000000 		.word	.LANCHOR67
 6072 036c 00000000 		.word	.LANCHOR75
 6073 0370 9A99A140 		.word	1084332442
 6074 0374 0080BB44 		.word	1153138688
 6075 0378 00803B46 		.word	1178304512
 6076 037c 00000000 		.word	.LANCHOR46
 6077 0380 00000000 		.word	.LANCHOR47
 6078 0384 00000000 		.word	.LANCHOR48
 6079 0388 00000000 		.word	.LANCHOR49
 6080 038c 0000C842 		.word	1120403456
 6081 0390 00004844 		.word	1145569280
 6082 0394 00004843 		.word	1128792064
 6083 0398 00000000 		.word	.LANCHOR34
 6084 039c 00000000 		.word	.LANCHOR35
 6085 03a0 00000000 		.word	.LANCHOR36
 6086 03a4 00000000 		.word	.LANCHOR37
 6087 03a8 6666E63E 		.word	1055286886
 6088 03ac 00000000 		.word	.LANCHOR82
 6089 03b0 CDCC0C3F 		.word	1057803469
 6090 03b4 00650148 		.word	1208050944
 6091 03b8 94050200 		.word	132500
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 218


 6092              	.LBE1328:
 6093              	.LBE1331:
 6094              	.LBE1333:
 6095              	.LBE1365:
 6096              		.cfi_endproc
 6097              	.LFE4331:
 6099              		.section	.text.startup.main,"ax",%progbits
 6100              		.align	1
 6101              		.p2align 2,,3
 6102              		.global	main
 6103              		.syntax unified
 6104              		.thumb
 6105              		.thumb_func
 6106              		.fpu fpv5-d16
 6108              	main:
 6109              	.LFB4311:
 609:Veno-Echo.cpp ****     // initialize hardware.
 6110              		.loc 20 609 1 is_stmt 1 view -0
 6111              		.cfi_startproc
 6112              		@ Volatile: function does not return.
 6113              		@ args = 0, pretend = 0, frame = 240
 6114              		@ frame_needed = 0, uses_anonymous_args = 0
 611:Veno-Echo.cpp ****     hw.Init();
 6115              		.loc 20 611 5 view .LVU1683
 609:Veno-Echo.cpp ****     // initialize hardware.
 6116              		.loc 20 609 1 is_stmt 0 view .LVU1684
 6117 0000 80B5     		push	{r7, lr}
 6118              		.cfi_def_cfa_offset 8
 6119              		.cfi_offset 7, -8
 6120              		.cfi_offset 14, -4
 611:Veno-Echo.cpp ****     hw.Init();
 6121              		.loc 20 611 17 view .LVU1685
 6122 0002 D148     		ldr	r0, .L396
 609:Veno-Echo.cpp ****     // initialize hardware.
 6123              		.loc 20 609 1 view .LVU1686
 6124 0004 BEB0     		sub	sp, sp, #248
 6125              		.cfi_def_cfa_offset 256
 611:Veno-Echo.cpp ****     hw.Init();
 6126              		.loc 20 611 17 view .LVU1687
 6127 0006 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 6128              	.LVL320:
 612:Veno-Echo.cpp ****     
 6129              		.loc 20 612 5 is_stmt 1 view .LVU1688
 612:Veno-Echo.cpp ****     
 6130              		.loc 20 612 12 is_stmt 0 view .LVU1689
 6131 000a 0021     		movs	r1, #0
 6132 000c CE48     		ldr	r0, .L396
 616:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6133              		.loc 20 616 16 view .LVU1690
 6134 000e B2EE088A 		vmov.f32	s16, #1.2e+1
 612:Veno-Echo.cpp ****     
 6135              		.loc 20 612 12 view .LVU1691
 6136 0012 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 6137              	.LVL321:
 616:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6138              		.loc 20 616 5 is_stmt 1 view .LVU1692
 616:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 219


 6139              		.loc 20 616 16 is_stmt 0 view .LVU1693
 6140 0016 1D20     		movs	r0, #29
 6141 0018 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6142              	.LVL322:
 6143 001c 0346     		mov	r3, r0	@ movhi
 6144 001e 0620     		movs	r0, #6
 623:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6145              		.loc 20 623 22 view .LVU1694
 6146 0020 0224     		movs	r4, #2
 616:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6147              		.loc 20 616 16 view .LVU1695
 6148 0022 ADF80830 		strh	r3, [sp, #8]	@ movhi
 6149 0026 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6150              	.LVL323:
 6151 002a 0346     		mov	r3, r0	@ movhi
 616:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6152              		.loc 20 616 80 view .LVU1696
 6153 002c C648     		ldr	r0, .L396
 623:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6154              		.loc 20 623 22 view .LVU1697
 6155 002e 9FEDC79A 		vldr.32	s18, .L396+4
 6156              	.LBB1366:
 6157              	.LBB1367:
  40:../DaisySP/Source/Control/adsr.h ****     /** Initializes the Adsr module.
  41:../DaisySP/Source/Control/adsr.h ****         \param sample_rate - The sample rate of the audio engine being run. 
  42:../DaisySP/Source/Control/adsr.h ****     */
  43:../DaisySP/Source/Control/adsr.h ****     void Init(float sample_rate);
  44:../DaisySP/Source/Control/adsr.h **** 
  45:../DaisySP/Source/Control/adsr.h **** 
  46:../DaisySP/Source/Control/adsr.h ****     /** Processes one sample through the filter and returns one sample.
  47:../DaisySP/Source/Control/adsr.h ****         \param gate - trigger the envelope, hold it to sustain 
  48:../DaisySP/Source/Control/adsr.h ****     */
  49:../DaisySP/Source/Control/adsr.h ****     float Process(bool gate);
  50:../DaisySP/Source/Control/adsr.h **** 
  51:../DaisySP/Source/Control/adsr.h ****     /** Sets time
  52:../DaisySP/Source/Control/adsr.h ****         Set time per segment in seconds
  53:../DaisySP/Source/Control/adsr.h ****     */
  54:../DaisySP/Source/Control/adsr.h ****     inline void SetTime(int seg, float time) { seg_time_[seg] = time; }
  55:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
  56:../DaisySP/Source/Control/adsr.h ****         \param sus_level - sets sustain level
  57:../DaisySP/Source/Control/adsr.h ****     */
  58:../DaisySP/Source/Control/adsr.h ****     inline void SetSustainLevel(float sus_level) { sus_ = sus_level; }
 6158              		.loc 7 58 57 view .LVU1698
 6159 0032 F7EE008A 		vmov.f32	s17, #1.0e+0
 6160              	.LBE1367:
 6161              	.LBE1366:
 616:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6162              		.loc 20 616 16 view .LVU1699
 6163 0036 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 616:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6164              		.loc 20 616 80 view .LVU1700
 6165 003a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6166              	.LVL324:
 616:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6167              		.loc 20 616 16 view .LVU1701
 6168 003e 0123     		movs	r3, #1
 6169 0040 80EE080A 		vdiv.f32	s0, s0, s16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 220


 6170 0044 039A     		ldr	r2, [sp, #12]
 6171              	.LBB1370:
 6172              	.LBB1371:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6173              		.loc 7 54 63 view .LVU1702
 6174 0046 4FF07C55 		mov	r5, #1056964608
 6175              	.LBE1371:
 6176              	.LBE1370:
 616:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6177              		.loc 20 616 16 view .LVU1703
 6178 004a 0299     		ldr	r1, [sp, #8]
 6179              	.LBB1374:
 6180              	.LBB1375:
  61:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
  62:../DaisySP/Source/Dynamics/crossfade.h ****     Expected input: See [Curve Options](##curve-options)
  63:../DaisySP/Source/Dynamics/crossfade.h ****     */
  64:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetCurve(uint8_t curve) { curve_ = curve; }
 6181              		.loc 10 64 50 view .LVU1704
 6182 004c 1F46     		mov	r7, r3
 6183              	.LBE1375:
 6184              	.LBE1374:
 616:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ 12.f);
 6185              		.loc 20 616 16 view .LVU1705
 6186 004e C048     		ldr	r0, .L396+8
 6187 0050 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6188              	.LVL325:
 617:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6189              		.loc 20 617 5 is_stmt 1 view .LVU1706
 617:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6190              		.loc 20 617 16 is_stmt 0 view .LVU1707
 6191 0054 1E20     		movs	r0, #30
 6192 0056 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6193              	.LVL326:
 6194 005a 0346     		mov	r3, r0	@ movhi
 6195 005c 0720     		movs	r0, #7
 630:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6196              		.loc 20 630 20 view .LVU1708
 6197 005e DFF85483 		ldr	r8, .L396+108
 617:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6198              		.loc 20 617 16 view .LVU1709
 6199 0062 ADF81030 		strh	r3, [sp, #16]	@ movhi
 6200 0066 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6201              	.LVL327:
 6202 006a 0346     		mov	r3, r0	@ movhi
 617:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6203              		.loc 20 617 80 view .LVU1710
 6204 006c B648     		ldr	r0, .L396
 6205              	.LBB1378:
 6206              	.LBB1379:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6207              		.loc 7 54 63 view .LVU1711
 6208 006e B94E     		ldr	r6, .L396+12
 6209              	.LBE1379:
 6210              	.LBE1378:
 617:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6211              		.loc 20 617 16 view .LVU1712
 6212 0070 ADF81430 		strh	r3, [sp, #20]	@ movhi
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 221


 617:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6213              		.loc 20 617 80 view .LVU1713
 6214 0074 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6215              	.LVL328:
 617:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6216              		.loc 20 617 16 view .LVU1714
 6217 0078 059A     		ldr	r2, [sp, #20]
 6218 007a 80EE080A 		vdiv.f32	s0, s0, s16
 6219 007e 0499     		ldr	r1, [sp, #16]
 6220 0080 3B46     		mov	r3, r7
 6221 0082 B548     		ldr	r0, .L396+16
 6222 0084 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6223              	.LVL329:
 618:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6224              		.loc 20 618 5 is_stmt 1 view .LVU1715
 618:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6225              		.loc 20 618 18 is_stmt 0 view .LVU1716
 6226 0088 0A20     		movs	r0, #10
 6227 008a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6228              	.LVL330:
 6229 008e 0346     		mov	r3, r0	@ movhi
 6230 0090 2046     		mov	r0, r4
 636:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6231              		.loc 20 636 20 view .LVU1717
 6232 0092 DFF82493 		ldr	r9, .L396+112
 618:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6233              		.loc 20 618 18 view .LVU1718
 6234 0096 ADF81830 		strh	r3, [sp, #24]	@ movhi
 6235 009a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6236              	.LVL331:
 6237 009e 0346     		mov	r3, r0	@ movhi
 618:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6238              		.loc 20 618 85 view .LVU1719
 6239 00a0 A948     		ldr	r0, .L396
 618:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6240              		.loc 20 618 18 view .LVU1720
 6241 00a2 ADF81C30 		strh	r3, [sp, #28]	@ movhi
 618:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6242              		.loc 20 618 85 view .LVU1721
 6243 00a6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6244              	.LVL332:
 618:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / 12.f);
 6245              		.loc 20 618 18 view .LVU1722
 6246 00aa 079A     		ldr	r2, [sp, #28]
 6247 00ac 80EE080A 		vdiv.f32	s0, s0, s16
 6248 00b0 0699     		ldr	r1, [sp, #24]
 6249 00b2 0023     		movs	r3, #0
 6250 00b4 A948     		ldr	r0, .L396+20
 6251 00b6 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6252              	.LVL333:
 619:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6253              		.loc 20 619 5 is_stmt 1 view .LVU1723
 619:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6254              		.loc 20 619 18 is_stmt 0 view .LVU1724
 6255 00ba 0B20     		movs	r0, #11
 6256 00bc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6257              	.LVL334:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 222


 6258 00c0 0346     		mov	r3, r0	@ movhi
 6259 00c2 0320     		movs	r0, #3
 6260 00c4 ADF82030 		strh	r3, [sp, #32]	@ movhi
 6261 00c8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6262              	.LVL335:
 6263 00cc 0346     		mov	r3, r0	@ movhi
 619:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6264              		.loc 20 619 85 view .LVU1725
 6265 00ce 9E48     		ldr	r0, .L396
 619:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6266              		.loc 20 619 18 view .LVU1726
 6267 00d0 ADF82430 		strh	r3, [sp, #36]	@ movhi
 619:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6268              		.loc 20 619 85 view .LVU1727
 6269 00d4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6270              	.LVL336:
 619:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / 12
 6271              		.loc 20 619 18 view .LVU1728
 6272 00d8 099A     		ldr	r2, [sp, #36]
 6273 00da 80EE080A 		vdiv.f32	s0, s0, s16
 6274 00de 0899     		ldr	r1, [sp, #32]
 6275 00e0 0023     		movs	r3, #0
 6276 00e2 9F48     		ldr	r0, .L396+24
 6277 00e4 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6278              	.LVL337:
 620:Veno-Echo.cpp **** 
 6279              		.loc 20 620 5 is_stmt 1 view .LVU1729
 620:Veno-Echo.cpp **** 
 6280              		.loc 20 620 20 is_stmt 0 view .LVU1730
 6281 00e8 1820     		movs	r0, #24
 6282 00ea FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6283              	.LVL338:
 6284 00ee 0346     		mov	r3, r0	@ movhi
 6285 00f0 0420     		movs	r0, #4
 6286 00f2 ADF82830 		strh	r3, [sp, #40]	@ movhi
 6287 00f6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6288              	.LVL339:
 6289 00fa 0346     		mov	r3, r0	@ movhi
 620:Veno-Echo.cpp **** 
 6290              		.loc 20 620 93 view .LVU1731
 6291 00fc 9248     		ldr	r0, .L396
 620:Veno-Echo.cpp **** 
 6292              		.loc 20 620 20 view .LVU1732
 6293 00fe ADF82C30 		strh	r3, [sp, #44]	@ movhi
 620:Veno-Echo.cpp **** 
 6294              		.loc 20 620 93 view .LVU1733
 6295 0102 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6296              	.LVL340:
 620:Veno-Echo.cpp **** 
 6297              		.loc 20 620 20 view .LVU1734
 6298 0106 2346     		mov	r3, r4
 6299 0108 80EE080A 		vdiv.f32	s0, s0, s16
 6300 010c 0B9A     		ldr	r2, [sp, #44]
 6301 010e 0A99     		ldr	r1, [sp, #40]
 6302 0110 9448     		ldr	r0, .L396+28
 6303 0112 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6304              	.LVL341:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 223


 623:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6305              		.loc 20 623 5 is_stmt 1 view .LVU1735
 623:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6306              		.loc 20 623 22 is_stmt 0 view .LVU1736
 6307 0116 0020     		movs	r0, #0
 6308 0118 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6309              	.LVL342:
 6310 011c 0346     		mov	r3, r0	@ movhi
 623:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6311              		.loc 20 623 55 view .LVU1737
 6312 011e 8A48     		ldr	r0, .L396
 623:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6313              		.loc 20 623 22 view .LVU1738
 6314 0120 ADF83030 		strh	r3, [sp, #48]	@ movhi
 623:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6315              		.loc 20 623 55 view .LVU1739
 6316 0124 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6317              	.LVL343:
 623:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / 48.f,Switch::TYPE_MOMENTARY,Switch::POLA
 6318              		.loc 20 623 22 view .LVU1740
 6319 0128 3A46     		mov	r2, r7
 6320 012a 0C99     		ldr	r1, [sp, #48]
 6321 012c 80EE090A 		vdiv.f32	s0, s0, s18
 6322 0130 3B46     		mov	r3, r7
 6323 0132 8D48     		ldr	r0, .L396+32
 6324 0134 0094     		str	r4, [sp]
 6325 0136 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6326              	.LVL344:
 624:Veno-Echo.cpp **** 
 6327              		.loc 20 624 5 is_stmt 1 view .LVU1741
 624:Veno-Echo.cpp **** 
 6328              		.loc 20 624 22 is_stmt 0 view .LVU1742
 6329 013a 3846     		mov	r0, r7
 6330 013c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6331              	.LVL345:
 6332 0140 0346     		mov	r3, r0	@ movhi
 624:Veno-Echo.cpp **** 
 6333              		.loc 20 624 55 view .LVU1743
 6334 0142 8148     		ldr	r0, .L396
 624:Veno-Echo.cpp **** 
 6335              		.loc 20 624 22 view .LVU1744
 6336 0144 ADF83430 		strh	r3, [sp, #52]	@ movhi
 624:Veno-Echo.cpp **** 
 6337              		.loc 20 624 55 view .LVU1745
 6338 0148 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6339              	.LVL346:
 624:Veno-Echo.cpp **** 
 6340              		.loc 20 624 22 view .LVU1746
 6341 014c 3A46     		mov	r2, r7
 6342 014e 0D99     		ldr	r1, [sp, #52]
 6343 0150 80EE090A 		vdiv.f32	s0, s0, s18
 6344 0154 3B46     		mov	r3, r7
 6345 0156 8548     		ldr	r0, .L396+36
 6346 0158 0094     		str	r4, [sp]
 6347 015a FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6348              	.LVL347:
 627:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 224


 6349              		.loc 20 627 5 is_stmt 1 view .LVU1747
 627:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6350              		.loc 20 627 14 is_stmt 0 view .LVU1748
 6351 015e 1720     		movs	r0, #23
 6352 0160 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6353              	.LVL348:
 6354 0164 0346     		mov	r3, r0	@ movhi
 627:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6355              		.loc 20 627 48 view .LVU1749
 6356 0166 7848     		ldr	r0, .L396
 627:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6357              		.loc 20 627 14 view .LVU1750
 6358 0168 ADF83830 		strh	r3, [sp, #56]	@ movhi
 627:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6359              		.loc 20 627 48 view .LVU1751
 6360 016c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6361              	.LVL349:
 627:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6362              		.loc 20 627 14 view .LVU1752
 6363 0170 0E99     		ldr	r1, [sp, #56]
 6364 0172 80EE090A 		vdiv.f32	s0, s0, s18
 6365 0176 7E48     		ldr	r0, .L396+40
 6366 0178 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 6367              	.LVL350:
 628:Veno-Echo.cpp ****     
 6368              		.loc 20 628 5 is_stmt 1 view .LVU1753
 628:Veno-Echo.cpp ****     
 6369              		.loc 20 628 17 is_stmt 0 view .LVU1754
 6370 017c 0520     		movs	r0, #5
 6371 017e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6372              	.LVL351:
 6373 0182 0346     		mov	r3, r0	@ movhi
 6374 0184 7048     		ldr	r0, .L396
 6375 0186 ADF83C30 		strh	r3, [sp, #60]	@ movhi
 6376 018a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6377              	.LVL352:
 6378 018e 0F99     		ldr	r1, [sp, #60]
 6379 0190 7848     		ldr	r0, .L396+44
 6380 0192 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 6381              	.LVL353:
 630:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6382              		.loc 20 630 5 is_stmt 1 view .LVU1755
 630:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6383              		.loc 20 630 20 is_stmt 0 view .LVU1756
 6384 0196 6C48     		ldr	r0, .L396
 6385 0198 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6386              	.LVL354:
 6387 019c 4046     		mov	r0, r8
 6388 019e FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6389              	.LVL355:
 631:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 6390              		.loc 20 631 5 is_stmt 1 view .LVU1757
 6391              	.LBB1382:
 6392              	.LBI1370:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6393              		.loc 7 54 17 view .LVU1758
 6394              	.LBB1372:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 225


  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6395              		.loc 7 54 48 view .LVU1759
 6396              	.LBE1372:
 6397              	.LBE1382:
 636:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6398              		.loc 20 636 20 is_stmt 0 view .LVU1760
 6399 01a2 6948     		ldr	r0, .L396
 6400              	.LBB1383:
 6401              	.LBB1368:
 6402              		.loc 7 58 57 view .LVU1761
 6403 01a4 C8ED008A 		vstr.32	s17, [r8]
 6404              	.LBE1368:
 6405              	.LBE1383:
 642:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6406              		.loc 20 642 17 view .LVU1762
 6407 01a8 734C     		ldr	r4, .L396+48
 6408              	.LBB1384:
 6409              	.LBB1373:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6410              		.loc 7 54 63 view .LVU1763
 6411 01aa C8F80850 		str	r5, [r8, #8]	@ float
 6412              	.LVL356:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6413              		.loc 7 54 63 view .LVU1764
 6414              	.LBE1373:
 6415              	.LBE1384:
 632:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 6416              		.loc 20 632 5 is_stmt 1 view .LVU1765
 6417              	.LBB1385:
 6418              	.LBI1378:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6419              		.loc 7 54 17 view .LVU1766
 6420              	.LBB1380:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6421              		.loc 7 54 48 view .LVU1767
 6422              	.LBE1380:
 6423              	.LBE1385:
 6424              	.LBB1386:
 6425              	.LBB1387:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6426              		.loc 7 54 63 is_stmt 0 view .LVU1768
 6427 01ae C8F81450 		str	r5, [r8, #20]	@ float
 6428              	.LBE1387:
 6429              	.LBE1386:
 6430              	.LBB1389:
 6431              	.LBB1381:
 6432 01b2 C8F80C60 		str	r6, [r8, #12]	@ float
 6433              	.LVL357:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6434              		.loc 7 54 63 view .LVU1769
 6435              	.LBE1381:
 6436              	.LBE1389:
 633:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 6437              		.loc 20 633 5 is_stmt 1 view .LVU1770
 6438              	.LBB1390:
 6439              	.LBI1386:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 226


 6440              		.loc 7 54 17 view .LVU1771
 6441              	.LBB1388:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6442              		.loc 7 54 48 view .LVU1772
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6443              		.loc 7 54 48 is_stmt 0 view .LVU1773
 6444              	.LBE1388:
 6445              	.LBE1390:
 634:Veno-Echo.cpp **** 
 6446              		.loc 20 634 5 is_stmt 1 view .LVU1774
 6447              	.LBB1391:
 6448              	.LBI1366:
 6449              		.loc 7 58 17 view .LVU1775
 6450              	.LBB1369:
 6451              		.loc 7 58 52 view .LVU1776
 6452              		.loc 7 58 52 is_stmt 0 view .LVU1777
 6453              	.LBE1369:
 6454              	.LBE1391:
 636:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6455              		.loc 20 636 5 is_stmt 1 view .LVU1778
 636:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6456              		.loc 20 636 20 is_stmt 0 view .LVU1779
 6457 01b6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6458              	.LVL358:
 6459 01ba 4846     		mov	r0, r9
 648:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6460              		.loc 20 648 17 view .LVU1780
 6461 01bc DFF8FC81 		ldr	r8, .L396+116
 636:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6462              		.loc 20 636 20 view .LVU1781
 6463 01c0 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6464              	.LVL359:
 637:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 6465              		.loc 20 637 5 is_stmt 1 view .LVU1782
 6466              	.LBB1392:
 6467              	.LBI1392:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6468              		.loc 7 54 17 view .LVU1783
 6469              	.LBB1393:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6470              		.loc 7 54 48 view .LVU1784
 6471              	.LBE1393:
 6472              	.LBE1392:
 642:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6473              		.loc 20 642 17 is_stmt 0 view .LVU1785
 6474 01c4 6048     		ldr	r0, .L396
 6475              	.LBB1395:
 6476              	.LBB1394:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6477              		.loc 7 54 63 view .LVU1786
 6478 01c6 C9F80850 		str	r5, [r9, #8]	@ float
 6479              	.LVL360:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6480              		.loc 7 54 63 view .LVU1787
 6481              	.LBE1394:
 6482              	.LBE1395:
 638:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 227


 6483              		.loc 20 638 5 is_stmt 1 view .LVU1788
 6484              	.LBB1396:
 6485              	.LBI1396:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6486              		.loc 7 54 17 view .LVU1789
 6487              	.LBB1397:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6488              		.loc 7 54 48 view .LVU1790
 6489              	.LBE1397:
 6490              	.LBE1396:
 6491              	.LBB1399:
 6492              	.LBB1400:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6493              		.loc 7 54 63 is_stmt 0 view .LVU1791
 6494 01ca C9F81450 		str	r5, [r9, #20]	@ float
 6495              	.LBE1400:
 6496              	.LBE1399:
 6497              	.LBB1402:
 6498              	.LBB1398:
 6499 01ce C9F80C60 		str	r6, [r9, #12]	@ float
 6500              	.LVL361:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6501              		.loc 7 54 63 view .LVU1792
 6502              	.LBE1398:
 6503              	.LBE1402:
 639:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 6504              		.loc 20 639 5 is_stmt 1 view .LVU1793
 6505              	.LBB1403:
 6506              	.LBI1399:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6507              		.loc 7 54 17 view .LVU1794
 6508              	.LBB1401:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6509              		.loc 7 54 48 view .LVU1795
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6510              		.loc 7 54 48 is_stmt 0 view .LVU1796
 6511              	.LBE1401:
 6512              	.LBE1403:
 640:Veno-Echo.cpp **** 
 6513              		.loc 20 640 5 is_stmt 1 view .LVU1797
 6514              	.LBB1404:
 6515              	.LBI1404:
 6516              		.loc 7 58 17 view .LVU1798
 6517              	.LBB1405:
 6518              		.loc 7 58 52 view .LVU1799
 6519              		.loc 7 58 57 is_stmt 0 view .LVU1800
 6520 01d2 C9ED008A 		vstr.32	s17, [r9]
 6521              	.LVL362:
 6522              		.loc 7 58 57 view .LVU1801
 6523              	.LBE1405:
 6524              	.LBE1404:
 642:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6525              		.loc 20 642 5 is_stmt 1 view .LVU1802
 642:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6526              		.loc 20 642 17 is_stmt 0 view .LVU1803
 6527 01d6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6528              	.LVL363:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 228


 6529 01da 2046     		mov	r0, r4
 667:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 6530              		.loc 20 667 17 view .LVU1804
 6531 01dc 9FED678A 		vldr.32	s16, .L396+52
 642:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6532              		.loc 20 642 17 view .LVU1805
 6533 01e0 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6534              	.LVL364:
 643:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 6535              		.loc 20 643 5 is_stmt 1 view .LVU1806
 6536              	.LBB1406:
 6537              	.LBI1406:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6538              		.loc 7 54 17 view .LVU1807
 6539              	.LBB1407:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6540              		.loc 7 54 48 view .LVU1808
 6541              	.LBE1407:
 6542              	.LBE1406:
 648:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6543              		.loc 20 648 17 is_stmt 0 view .LVU1809
 6544 01e4 5848     		ldr	r0, .L396
 6545              	.LBB1409:
 6546              	.LBB1410:
 6547              		.loc 7 58 57 view .LVU1810
 6548 01e6 C4ED008A 		vstr.32	s17, [r4]
 6549              	.LBE1410:
 6550              	.LBE1409:
 6551              	.LBB1412:
 6552              	.LBB1408:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6553              		.loc 7 54 63 view .LVU1811
 6554 01ea A660     		str	r6, [r4, #8]	@ float
 6555              	.LVL365:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6556              		.loc 7 54 63 view .LVU1812
 6557              	.LBE1408:
 6558              	.LBE1412:
 644:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 6559              		.loc 20 644 5 is_stmt 1 view .LVU1813
 6560              	.LBB1413:
 6561              	.LBI1413:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6562              		.loc 7 54 17 view .LVU1814
 6563              	.LBB1414:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6564              		.loc 7 54 48 view .LVU1815
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6565              		.loc 7 54 63 is_stmt 0 view .LVU1816
 6566 01ec E660     		str	r6, [r4, #12]	@ float
 6567              	.LVL366:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6568              		.loc 7 54 63 view .LVU1817
 6569              	.LBE1414:
 6570              	.LBE1413:
 645:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 6571              		.loc 20 645 5 is_stmt 1 view .LVU1818
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 229


 6572              	.LBB1415:
 6573              	.LBI1415:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6574              		.loc 7 54 17 view .LVU1819
 6575              	.LBB1416:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6576              		.loc 7 54 48 view .LVU1820
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6577              		.loc 7 54 63 is_stmt 0 view .LVU1821
 6578 01ee 6661     		str	r6, [r4, #20]	@ float
 6579              	.LVL367:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6580              		.loc 7 54 63 view .LVU1822
 6581              	.LBE1416:
 6582              	.LBE1415:
 646:Veno-Echo.cpp **** 
 6583              		.loc 20 646 5 is_stmt 1 view .LVU1823
 6584              	.LBB1417:
 6585              	.LBI1409:
 6586              		.loc 7 58 17 view .LVU1824
 6587              	.LBB1411:
 6588              		.loc 7 58 52 view .LVU1825
 6589              		.loc 7 58 52 is_stmt 0 view .LVU1826
 6590              	.LBE1411:
 6591              	.LBE1417:
 648:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6592              		.loc 20 648 5 is_stmt 1 view .LVU1827
 648:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6593              		.loc 20 648 17 is_stmt 0 view .LVU1828
 6594 01f0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6595              	.LVL368:
 6596 01f4 4046     		mov	r0, r8
 6597              	.LBB1418:
 6598              	.LBB1419:
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 6599              		.loc 8 44 20 view .LVU1829
 6600 01f6 624C     		ldr	r4, .L396+56
 6601              	.LBE1419:
 6602              	.LBE1418:
 648:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6603              		.loc 20 648 17 view .LVU1830
 6604 01f8 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6605              	.LVL369:
 649:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 6606              		.loc 20 649 5 is_stmt 1 view .LVU1831
 6607              	.LBB1424:
 6608              	.LBI1424:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6609              		.loc 7 54 17 view .LVU1832
 6610              	.LBB1425:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6611              		.loc 7 54 48 view .LVU1833
 6612              	.LBE1425:
 6613              	.LBE1424:
 6614              	.LBB1427:
 6615              	.LBB1428:
 6616              	.LBB1429:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 230


  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 6617              		.loc 10 45 16 is_stmt 0 view .LVU1834
 6618 01fc 6149     		ldr	r1, .L396+60
 6619              	.LBE1429:
 6620              	.LBE1428:
 6621              	.LBE1427:
 6622              	.LBB1434:
 6623              	.LBB1435:
 6624              	.LBB1436:
 6625 01fe 624A     		ldr	r2, .L396+64
 6626              	.LBE1436:
 6627              	.LBE1435:
 6628              	.LBE1434:
 6629              	.LBB1441:
 6630              	.LBB1442:
 6631              	.LBB1443:
 6632 0200 624B     		ldr	r3, .L396+68
 6633              	.LBE1443:
 6634              	.LBE1442:
 6635              	.LBE1441:
 6636              	.LBB1448:
 6637              	.LBB1432:
 6638              	.LBB1430:
 6639 0202 0D60     		str	r5, [r1]	@ float
 6640              	.LBE1430:
 6641              	.LBE1432:
 6642              	.LBE1448:
 6643              	.LBB1449:
 6644              	.LBB1439:
 6645              	.LBB1437:
 6646 0204 1560     		str	r5, [r2]	@ float
 6647              	.LBE1437:
 6648              	.LBE1439:
 6649              	.LBE1449:
 6650              	.LBB1450:
 6651              	.LBB1446:
 6652              	.LBB1444:
 6653 0206 1D60     		str	r5, [r3]	@ float
 6654              	.LBE1444:
 6655              	.LBE1446:
 6656              	.LBE1450:
 6657              	.LBB1451:
 6658              	.LBB1376:
 6659              		.loc 10 64 50 view .LVU1835
 6660 0208 0F71     		strb	r7, [r1, #4]
 6661              	.LBE1376:
 6662              	.LBE1451:
 6663              	.LBB1452:
 6664              	.LBB1453:
 6665 020a 1771     		strb	r7, [r2, #4]
 6666              	.LBE1453:
 6667              	.LBE1452:
 6668              	.LBB1455:
 6669              	.LBB1456:
 6670 020c 1F71     		strb	r7, [r3, #4]
 6671              	.LBE1456:
 6672              	.LBE1455:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 231


 663:Veno-Echo.cpp **** 
 6673              		.loc 20 663 15 view .LVU1836
 6674 020e 4E48     		ldr	r0, .L396
 6675              	.LBB1458:
 6676              	.LBB1459:
 6677              		.loc 7 58 57 view .LVU1837
 6678 0210 C8ED008A 		vstr.32	s17, [r8]
 6679              	.LBE1459:
 6680              	.LBE1458:
 6681              	.LBB1461:
 6682              	.LBB1426:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6683              		.loc 7 54 63 view .LVU1838
 6684 0214 C8F80860 		str	r6, [r8, #8]	@ float
 6685              	.LVL370:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6686              		.loc 7 54 63 view .LVU1839
 6687              	.LBE1426:
 6688              	.LBE1461:
 650:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 6689              		.loc 20 650 5 is_stmt 1 view .LVU1840
 6690              	.LBB1462:
 6691              	.LBI1462:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6692              		.loc 7 54 17 view .LVU1841
 6693              	.LBB1463:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6694              		.loc 7 54 48 view .LVU1842
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6695              		.loc 7 54 63 is_stmt 0 view .LVU1843
 6696 0218 C8F80C60 		str	r6, [r8, #12]	@ float
 6697              	.LVL371:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6698              		.loc 7 54 63 view .LVU1844
 6699              	.LBE1463:
 6700              	.LBE1462:
 651:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 6701              		.loc 20 651 5 is_stmt 1 view .LVU1845
 6702              	.LBB1464:
 6703              	.LBI1464:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6704              		.loc 7 54 17 view .LVU1846
 6705              	.LBB1465:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6706              		.loc 7 54 48 view .LVU1847
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6707              		.loc 7 54 63 is_stmt 0 view .LVU1848
 6708 021c C8F81460 		str	r6, [r8, #20]	@ float
 6709              	.LVL372:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6710              		.loc 7 54 63 view .LVU1849
 6711              	.LBE1465:
 6712              	.LBE1464:
 652:Veno-Echo.cpp **** 
 6713              		.loc 20 652 5 is_stmt 1 view .LVU1850
 6714              	.LBB1466:
 6715              	.LBI1458:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 232


 6716              		.loc 7 58 17 view .LVU1851
 6717              	.LBB1460:
 6718              		.loc 7 58 52 view .LVU1852
 6719              		.loc 7 58 52 is_stmt 0 view .LVU1853
 6720              	.LBE1460:
 6721              	.LBE1466:
 655:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 6722              		.loc 20 655 5 is_stmt 1 view .LVU1854
 6723              	.LBB1467:
 6724              	.LBI1427:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6725              		.loc 10 51 17 view .LVU1855
 6726              	.LBE1467:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6727              		.loc 10 51 26 view .LVU1856
 6728              	.LBB1468:
 6729              	.LBB1433:
 6730              	.LBI1428:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 6731              		.loc 10 43 17 view .LVU1857
 6732              	.LBB1431:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 6733              		.loc 10 45 9 view .LVU1858
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6734              		.loc 10 46 9 view .LVU1859
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6735              		.loc 10 46 9 is_stmt 0 view .LVU1860
 6736              	.LBE1431:
 6737              	.LBE1433:
 6738              	.LBE1468:
 656:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 6739              		.loc 20 656 5 is_stmt 1 view .LVU1861
 6740              	.LBB1469:
 6741              	.LBI1374:
 6742              		.loc 10 64 17 view .LVU1862
 6743              	.LBB1377:
 6744              		.loc 10 64 43 view .LVU1863
 6745              		.loc 10 64 43 is_stmt 0 view .LVU1864
 6746              	.LBE1377:
 6747              	.LBE1469:
 657:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 6748              		.loc 20 657 5 is_stmt 1 view .LVU1865
 6749              	.LBB1470:
 6750              	.LBI1434:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6751              		.loc 10 51 17 view .LVU1866
 6752              	.LBE1470:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6753              		.loc 10 51 26 view .LVU1867
 6754              	.LBB1471:
 6755              	.LBB1440:
 6756              	.LBI1435:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 6757              		.loc 10 43 17 view .LVU1868
 6758              	.LBB1438:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 6759              		.loc 10 45 9 view .LVU1869
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 233


  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6760              		.loc 10 46 9 view .LVU1870
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6761              		.loc 10 46 9 is_stmt 0 view .LVU1871
 6762              	.LBE1438:
 6763              	.LBE1440:
 6764              	.LBE1471:
 658:Veno-Echo.cpp **** 
 6765              		.loc 20 658 5 is_stmt 1 view .LVU1872
 6766              	.LBB1472:
 6767              	.LBI1452:
 6768              		.loc 10 64 17 view .LVU1873
 6769              	.LBB1454:
 6770              		.loc 10 64 43 view .LVU1874
 6771              		.loc 10 64 43 is_stmt 0 view .LVU1875
 6772              	.LBE1454:
 6773              	.LBE1472:
 660:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 6774              		.loc 20 660 5 is_stmt 1 view .LVU1876
 6775              	.LBB1473:
 6776              	.LBI1441:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6777              		.loc 10 51 17 view .LVU1877
 6778              	.LBE1473:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6779              		.loc 10 51 26 view .LVU1878
 6780              	.LBB1474:
 6781              	.LBB1447:
 6782              	.LBI1442:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 6783              		.loc 10 43 17 view .LVU1879
 6784              	.LBB1445:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 6785              		.loc 10 45 9 view .LVU1880
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6786              		.loc 10 46 9 view .LVU1881
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6787              		.loc 10 46 9 is_stmt 0 view .LVU1882
 6788              	.LBE1445:
 6789              	.LBE1447:
 6790              	.LBE1474:
 661:Veno-Echo.cpp **** 
 6791              		.loc 20 661 5 is_stmt 1 view .LVU1883
 6792              	.LBB1475:
 6793              	.LBI1455:
 6794              		.loc 10 64 17 view .LVU1884
 6795              	.LBB1457:
 6796              		.loc 10 64 43 view .LVU1885
 6797              		.loc 10 64 43 is_stmt 0 view .LVU1886
 6798              	.LBE1457:
 6799              	.LBE1475:
 663:Veno-Echo.cpp **** 
 6800              		.loc 20 663 5 is_stmt 1 view .LVU1887
 663:Veno-Echo.cpp **** 
 6801              		.loc 20 663 15 is_stmt 0 view .LVU1888
 6802 0220 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6803              	.LVL373:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 234


 6804 0224 FFF7FEFF 		bl	_Z10InitDelaysf
 6805              	.LVL374:
 666:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 6806              		.loc 20 666 5 is_stmt 1 view .LVU1889
 666:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 6807              		.loc 20 666 15 is_stmt 0 view .LVU1890
 6808 0228 4748     		ldr	r0, .L396
 6809 022a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6810              	.LVL375:
 6811 022e 5848     		ldr	r0, .L396+72
 6812 0230 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6813              	.LVL376:
 667:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 6814              		.loc 20 667 5 is_stmt 1 view .LVU1891
 667:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 6815              		.loc 20 667 17 is_stmt 0 view .LVU1892
 6816 0234 B0EE480A 		vmov.f32	s0, s16
 6817 0238 5548     		ldr	r0, .L396+72
 6818 023a FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6819              	.LVL377:
 668:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 6820              		.loc 20 668 5 is_stmt 1 view .LVU1893
 668:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 6821              		.loc 20 668 18 is_stmt 0 view .LVU1894
 6822 023e 9FED550A 		vldr.32	s0, .L396+76
 6823 0242 5348     		ldr	r0, .L396+72
 6824 0244 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6825              	.LVL378:
 669:Veno-Echo.cpp **** 
 6826              		.loc 20 669 5 is_stmt 1 view .LVU1895
 669:Veno-Echo.cpp **** 
 6827              		.loc 20 669 19 is_stmt 0 view .LVU1896
 6828 0248 9FED5D0A 		vldr.32	s0, .L396+120
 6829 024c 5048     		ldr	r0, .L396+72
 6830 024e FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6831              	.LVL379:
 671:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 6832              		.loc 20 671 5 is_stmt 1 view .LVU1897
 671:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 6833              		.loc 20 671 15 is_stmt 0 view .LVU1898
 6834 0252 3D48     		ldr	r0, .L396
 6835 0254 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6836              	.LVL380:
 6837 0258 4F48     		ldr	r0, .L396+80
 6838 025a FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6839              	.LVL381:
 672:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 6840              		.loc 20 672 5 is_stmt 1 view .LVU1899
 672:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 6841              		.loc 20 672 17 is_stmt 0 view .LVU1900
 6842 025e B0EE480A 		vmov.f32	s0, s16
 6843 0262 4D48     		ldr	r0, .L396+80
 6844 0264 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6845              	.LVL382:
 673:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 6846              		.loc 20 673 5 is_stmt 1 view .LVU1901
 673:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 235


 6847              		.loc 20 673 18 is_stmt 0 view .LVU1902
 6848 0268 9FED4A0A 		vldr.32	s0, .L396+76
 6849 026c 4A48     		ldr	r0, .L396+80
 6850 026e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6851              	.LVL383:
 674:Veno-Echo.cpp **** 
 6852              		.loc 20 674 5 is_stmt 1 view .LVU1903
 674:Veno-Echo.cpp **** 
 6853              		.loc 20 674 19 is_stmt 0 view .LVU1904
 6854 0272 9FED530A 		vldr.32	s0, .L396+120
 6855 0276 4848     		ldr	r0, .L396+80
 6856 0278 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6857              	.LVL384:
 677:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 6858              		.loc 20 677 5 is_stmt 1 view .LVU1905
 677:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 6859              		.loc 20 677 15 is_stmt 0 view .LVU1906
 6860 027c 3248     		ldr	r0, .L396
 6861 027e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6862              	.LVL385:
 6863 0282 4648     		ldr	r0, .L396+84
 6864 0284 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6865              	.LVL386:
 678:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 6866              		.loc 20 678 5 is_stmt 1 view .LVU1907
 678:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 6867              		.loc 20 678 17 is_stmt 0 view .LVU1908
 6868 0288 B0EE480A 		vmov.f32	s0, s16
 6869 028c 4348     		ldr	r0, .L396+84
 6870 028e FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6871              	.LVL387:
 679:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 6872              		.loc 20 679 5 is_stmt 1 view .LVU1909
 679:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 6873              		.loc 20 679 18 is_stmt 0 view .LVU1910
 6874 0292 9FED430A 		vldr.32	s0, .L396+88
 6875 0296 4148     		ldr	r0, .L396+84
 6876 0298 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6877              	.LVL388:
 680:Veno-Echo.cpp **** 
 6878              		.loc 20 680 5 is_stmt 1 view .LVU1911
 680:Veno-Echo.cpp **** 
 6879              		.loc 20 680 19 is_stmt 0 view .LVU1912
 6880 029c 9FED480A 		vldr.32	s0, .L396+120
 6881 02a0 3E48     		ldr	r0, .L396+84
 6882 02a2 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6883              	.LVL389:
 682:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 6884              		.loc 20 682 5 is_stmt 1 view .LVU1913
 682:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 6885              		.loc 20 682 15 is_stmt 0 view .LVU1914
 6886 02a6 2848     		ldr	r0, .L396
 6887 02a8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6888              	.LVL390:
 6889 02ac 3D48     		ldr	r0, .L396+92
 6890 02ae FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6891              	.LVL391:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 236


 683:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 6892              		.loc 20 683 5 is_stmt 1 view .LVU1915
 683:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 6893              		.loc 20 683 17 is_stmt 0 view .LVU1916
 6894 02b2 B0EE480A 		vmov.f32	s0, s16
 6895 02b6 3B48     		ldr	r0, .L396+92
 6896 02b8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6897              	.LVL392:
 684:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 6898              		.loc 20 684 5 is_stmt 1 view .LVU1917
 684:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 6899              		.loc 20 684 18 is_stmt 0 view .LVU1918
 6900 02bc 9FED380A 		vldr.32	s0, .L396+88
 6901 02c0 3848     		ldr	r0, .L396+92
 6902 02c2 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6903              	.LVL393:
 685:Veno-Echo.cpp **** 
 6904              		.loc 20 685 5 is_stmt 1 view .LVU1919
 685:Veno-Echo.cpp **** 
 6905              		.loc 20 685 19 is_stmt 0 view .LVU1920
 6906 02c6 9FED3E0A 		vldr.32	s0, .L396+120
 6907 02ca 3648     		ldr	r0, .L396+92
 6908 02cc FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6909              	.LVL394:
 688:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 6910              		.loc 20 688 5 is_stmt 1 view .LVU1921
 688:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 6911              		.loc 20 688 20 is_stmt 0 view .LVU1922
 6912 02d0 1D48     		ldr	r0, .L396
 6913 02d2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6914              	.LVL395:
 6915 02d6 3448     		ldr	r0, .L396+96
 6916 02d8 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6917              	.LVL396:
 689:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 6918              		.loc 20 689 5 is_stmt 1 view .LVU1923
 689:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 6919              		.loc 20 689 22 is_stmt 0 view .LVU1924
 6920 02dc B0EE480A 		vmov.f32	s0, s16
 6921 02e0 3148     		ldr	r0, .L396+96
 6922 02e2 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6923              	.LVL397:
 690:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 6924              		.loc 20 690 5 is_stmt 1 view .LVU1925
 690:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 6925              		.loc 20 690 23 is_stmt 0 view .LVU1926
 6926 02e6 9FED2B0A 		vldr.32	s0, .L396+76
 6927 02ea 2F48     		ldr	r0, .L396+96
 6928 02ec FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6929              	.LVL398:
 691:Veno-Echo.cpp **** 
 6930              		.loc 20 691 5 is_stmt 1 view .LVU1927
 691:Veno-Echo.cpp **** 
 6931              		.loc 20 691 24 is_stmt 0 view .LVU1928
 6932 02f0 9FED330A 		vldr.32	s0, .L396+120
 6933 02f4 2C48     		ldr	r0, .L396+96
 6934 02f6 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 237


 6935              	.LVL399:
 693:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 6936              		.loc 20 693 5 is_stmt 1 view .LVU1929
 693:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 6937              		.loc 20 693 20 is_stmt 0 view .LVU1930
 6938 02fa 1348     		ldr	r0, .L396
 6939 02fc FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6940              	.LVL400:
 6941 0300 2A48     		ldr	r0, .L396+100
 6942 0302 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6943              	.LVL401:
 694:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 6944              		.loc 20 694 5 is_stmt 1 view .LVU1931
 694:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 6945              		.loc 20 694 22 is_stmt 0 view .LVU1932
 6946 0306 B0EE480A 		vmov.f32	s0, s16
 6947 030a 2848     		ldr	r0, .L396+100
 6948 030c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6949              	.LVL402:
 695:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 6950              		.loc 20 695 5 is_stmt 1 view .LVU1933
 695:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 6951              		.loc 20 695 23 is_stmt 0 view .LVU1934
 6952 0310 9FED200A 		vldr.32	s0, .L396+76
 6953 0314 2548     		ldr	r0, .L396+100
 6954 0316 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6955              	.LVL403:
 696:Veno-Echo.cpp **** 
 6956              		.loc 20 696 5 is_stmt 1 view .LVU1935
 696:Veno-Echo.cpp **** 
 6957              		.loc 20 696 24 is_stmt 0 view .LVU1936
 6958 031a 9FED290A 		vldr.32	s0, .L396+120
 6959 031e 2348     		ldr	r0, .L396+100
 6960 0320 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6961              	.LVL404:
 699:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 6962              		.loc 20 699 5 is_stmt 1 view .LVU1937
 699:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 6963              		.loc 20 699 20 is_stmt 0 view .LVU1938
 6964 0324 0848     		ldr	r0, .L396
 6965 0326 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6966              	.LVL405:
 6967 032a 2148     		ldr	r0, .L396+104
 6968 032c FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6969              	.LVL406:
 700:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 6970              		.loc 20 700 5 is_stmt 1 view .LVU1939
 700:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 6971              		.loc 20 700 22 is_stmt 0 view .LVU1940
 6972 0330 B0EE480A 		vmov.f32	s0, s16
 6973 0334 1E48     		ldr	r0, .L396+104
 6974 0336 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6975              	.LVL407:
 701:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 6976              		.loc 20 701 5 is_stmt 1 view .LVU1941
 701:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 6977              		.loc 20 701 23 is_stmt 0 view .LVU1942
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 238


 6978 033a 9FED190A 		vldr.32	s0, .L396+88
 6979 033e 1C48     		ldr	r0, .L396+104
 6980 0340 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6981              	.LVL408:
 6982 0344 3EE0     		b	.L397
 6983              	.L398:
 6984 0346 00BF     		.align	2
 6985              	.L396:
 6986 0348 00000000 		.word	.LANCHOR4
 6987 034c 00004042 		.word	1111490560
 6988 0350 00000000 		.word	.LANCHOR90
 6989 0354 0AD7233C 		.word	1008981770
 6990 0358 00000000 		.word	.LANCHOR91
 6991 035c 00000000 		.word	.LANCHOR92
 6992 0360 00000000 		.word	.LANCHOR93
 6993 0364 00000000 		.word	.LANCHOR94
 6994 0368 00000000 		.word	.LANCHOR95
 6995 036c 00000000 		.word	.LANCHOR96
 6996 0370 00000000 		.word	.LANCHOR97
 6997 0374 00000000 		.word	.LANCHOR87
 6998 0378 00000000 		.word	.LANCHOR100
 6999 037c 00000000 		.word	0
 7000 0380 00000000 		.word	.LANCHOR75
 7001 0384 00000000 		.word	.LANCHOR102
 7002 0388 00000000 		.word	.LANCHOR103
 7003 038c 00000000 		.word	.LANCHOR64
 7004 0390 00000000 		.word	.LANCHOR46
 7005 0394 00803B46 		.word	1178304512
 7006 0398 00000000 		.word	.LANCHOR47
 7007 039c 00000000 		.word	.LANCHOR34
 7008 03a0 00004843 		.word	1128792064
 7009 03a4 00000000 		.word	.LANCHOR35
 7010 03a8 00000000 		.word	.LANCHOR48
 7011 03ac 00000000 		.word	.LANCHOR49
 7012 03b0 00000000 		.word	.LANCHOR36
 7013 03b4 00000000 		.word	.LANCHOR98
 7014 03b8 00000000 		.word	.LANCHOR99
 7015 03bc 00000000 		.word	.LANCHOR101
 7016 03c0 3333333F 		.word	1060320051
 7017              	.L397:
 702:Veno-Echo.cpp **** 
 7018              		.loc 20 702 5 is_stmt 1 view .LVU1943
 702:Veno-Echo.cpp **** 
 7019              		.loc 20 702 24 is_stmt 0 view .LVU1944
 7020 03c4 1FED020A 		vldr.32	s0, .L396+120
 7021 03c8 7B48     		ldr	r0, .L399
 7022 03ca FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7023              	.LVL409:
 704:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 7024              		.loc 20 704 5 is_stmt 1 view .LVU1945
 704:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 7025              		.loc 20 704 20 is_stmt 0 view .LVU1946
 7026 03ce 7B48     		ldr	r0, .L399+4
 7027 03d0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7028              	.LVL410:
 7029 03d4 7A48     		ldr	r0, .L399+8
 7030 03d6 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 239


 7031              	.LVL411:
 705:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 7032              		.loc 20 705 5 is_stmt 1 view .LVU1947
 705:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 7033              		.loc 20 705 22 is_stmt 0 view .LVU1948
 7034 03da B0EE480A 		vmov.f32	s0, s16
 7035 03de 7848     		ldr	r0, .L399+8
 7036 03e0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7037              	.LVL412:
 706:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 7038              		.loc 20 706 5 is_stmt 1 view .LVU1949
 706:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 7039              		.loc 20 706 23 is_stmt 0 view .LVU1950
 7040 03e4 9FED770A 		vldr.32	s0, .L399+12
 7041 03e8 7548     		ldr	r0, .L399+8
 7042 03ea FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7043              	.LVL413:
 707:Veno-Echo.cpp **** 
 7044              		.loc 20 707 5 is_stmt 1 view .LVU1951
 707:Veno-Echo.cpp **** 
 7045              		.loc 20 707 24 is_stmt 0 view .LVU1952
 7046 03ee 9FED760A 		vldr.32	s0, .L399+16
 7047 03f2 7348     		ldr	r0, .L399+8
 7048 03f4 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7049              	.LVL414:
 709:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 7050              		.loc 20 709 5 is_stmt 1 view .LVU1953
 709:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 7051              		.loc 20 709 21 is_stmt 0 view .LVU1954
 7052 03f8 7048     		ldr	r0, .L399+4
 7053 03fa FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7054              	.LVL415:
 7055 03fe 7348     		ldr	r0, .L399+20
 7056 0400 FFF7FEFF 		bl	_ZN7daisysp7DcBlock4InitEf
 7057              	.LVL416:
 710:Veno-Echo.cpp **** 
 7058              		.loc 20 710 5 is_stmt 1 view .LVU1955
 710:Veno-Echo.cpp **** 
 7059              		.loc 20 710 21 is_stmt 0 view .LVU1956
 7060 0404 6D48     		ldr	r0, .L399+4
 7061 0406 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7062              	.LVL417:
 7063 040a 7148     		ldr	r0, .L399+24
 7064 040c FFF7FEFF 		bl	_ZN7daisysp7DcBlock4InitEf
 7065              	.LVL418:
 713:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 7066              		.loc 20 713 5 is_stmt 1 view .LVU1957
 713:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 7067              		.loc 20 713 13 is_stmt 0 view .LVU1958
 7068 0410 6A48     		ldr	r0, .L399+4
 7069 0412 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7070              	.LVL419:
 7071 0416 F0EE407A 		vmov.f32	s15, s0
 7072              	.LVL420:
 7073              	.LBB1476:
 7074              	.LBI1418:
  42:../DaisySP/Source/Synthesis/oscillator.h ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 240


 7075              		.loc 8 42 10 is_stmt 1 view .LVU1959
 7076              	.LBB1420:
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7077              		.loc 8 44 9 view .LVU1960
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7078              		.loc 8 46 20 is_stmt 0 view .LVU1961
 7079 041a 9FED6E7A 		vldr.32	s14, .L399+28
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7080              		.loc 8 49 34 view .LVU1962
 7081 041e 2046     		mov	r0, r4
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 7082              		.loc 8 47 20 view .LVU1963
 7083 0420 6560     		str	r5, [r4, #4]	@ float
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7084              		.loc 8 45 27 view .LVU1964
 7085 0422 C8EEA76A 		vdiv.f32	s13, s17, s15
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7086              		.loc 8 46 20 view .LVU1965
 7087 0426 84ED027A 		vstr.32	s14, [r4, #8]
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7088              		.loc 8 44 20 view .LVU1966
 7089 042a C4ED037A 		vstr.32	s15, [r4, #12]
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7090              		.loc 8 45 9 is_stmt 1 view .LVU1967
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 7091              		.loc 8 48 20 is_stmt 0 view .LVU1968
 7092 042e 84ED058A 		vstr.32	s16, [r4, #20]
 7093              	.LBE1420:
 7094              	.LBE1476:
 730:Veno-Echo.cpp **** 
 7095              		.loc 20 730 17 view .LVU1969
 7096 0432 694D     		ldr	r5, .L399+32
 7097              	.LBB1477:
 7098              	.LBB1421:
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7099              		.loc 8 49 34 view .LVU1970
 7100 0434 B0EE470A 		vmov.f32	s0, s14
 7101              	.LVL421:
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7102              		.loc 8 45 20 view .LVU1971
 7103 0438 C4ED046A 		vstr.32	s13, [r4, #16]
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7104              		.loc 8 46 9 is_stmt 1 view .LVU1972
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 7105              		.loc 8 47 9 view .LVU1973
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 7106              		.loc 8 48 9 view .LVU1974
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7107              		.loc 8 49 9 view .LVU1975
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7108              		.loc 8 49 34 is_stmt 0 view .LVU1976
 7109 043c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 7110              	.LVL422:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7111              		.loc 8 52 20 view .LVU1977
 7112 0440 40F20113 		movw	r3, #257
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 241


 7113              		.loc 8 49 34 view .LVU1978
 7114 0444 F0EE407A 		vmov.f32	s15, s0
 7115              	.LBE1421:
 7116              	.LBE1477:
 7117              	.LBB1478:
 7118              	.LBB1479:
 7119              		.loc 8 61 34 view .LVU1979
 7120 0448 2046     		mov	r0, r4
 7121              	.LBE1479:
 7122              	.LBE1478:
 7123              	.LBB1483:
 7124              	.LBB1484:
  62:../DaisySP/Source/Synthesis/oscillator.h ****     }
  63:../DaisySP/Source/Synthesis/oscillator.h **** 
  64:../DaisySP/Source/Synthesis/oscillator.h **** 
  65:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  66:../DaisySP/Source/Synthesis/oscillator.h ****     */
  67:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:../DaisySP/Source/Synthesis/oscillator.h ****     */
  70:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  71:../DaisySP/Source/Synthesis/oscillator.h ****     {
  72:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 7125              		.loc 8 72 19 view .LVU1980
 7126 044a 2770     		strb	r7, [r4]
 7127              	.LBE1484:
 7128              	.LBE1483:
 7129              	.LBB1486:
 7130              	.LBB1422:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7131              		.loc 8 52 20 view .LVU1981
 7132 044c A384     		strh	r3, [r4, #36]	@ movhi
 7133              	.LBE1422:
 7134              	.LBE1486:
 7135              	.LBB1487:
 7136              	.LBB1480:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7137              		.loc 8 61 34 view .LVU1982
 7138 044e B0EE680A 		vmov.f32	s0, s17
 7139              	.LBE1480:
 7140              	.LBE1487:
 7141              	.LBB1488:
 7142              	.LBB1423:
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7143              		.loc 8 49 20 view .LVU1983
 7144 0452 C4ED067A 		vstr.32	s15, [r4, #24]
  50:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
 7145              		.loc 8 50 9 is_stmt 1 view .LVU1984
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
 7146              		.loc 8 51 9 view .LVU1985
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7147              		.loc 8 52 9 view .LVU1986
 7148              	.LVL423:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7149              		.loc 8 52 9 is_stmt 0 view .LVU1987
 7150              	.LBE1423:
 7151              	.LBE1488:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 242


 714:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 7152              		.loc 20 714 5 is_stmt 1 view .LVU1988
 7153              	.LBB1489:
 7154              	.LBI1483:
  70:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7155              		.loc 8 70 17 view .LVU1989
 7156              	.LBB1485:
 7157              		.loc 8 72 9 view .LVU1990
 7158              		.loc 8 72 9 is_stmt 0 view .LVU1991
 7159              	.LBE1485:
 7160              	.LBE1489:
 715:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 7161              		.loc 20 715 5 is_stmt 1 view .LVU1992
 7162              	.LBB1490:
 7163              	.LBI1478:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7164              		.loc 8 58 17 view .LVU1993
 7165              	.LBB1481:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 7166              		.loc 8 60 9 view .LVU1994
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7167              		.loc 8 61 9 view .LVU1995
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 7168              		.loc 8 60 20 is_stmt 0 view .LVU1996
 7169 0456 C4ED028A 		vstr.32	s17, [r4, #8]
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7170              		.loc 8 61 34 view .LVU1997
 7171 045a FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 7172              	.LVL424:
 7173 045e F0EE407A 		vmov.f32	s15, s0
 7174              	.LBE1481:
 7175              	.LBE1490:
 718:Veno-Echo.cpp **** 
 7176              		.loc 20 718 19 view .LVU1998
 7177 0462 41F27072 		movw	r2, #6000
 7178 0466 5021     		movs	r1, #80
 7179 0468 B7EE040A 		vmov.f32	s0, #1.25e+0
 7180 046c 5B48     		ldr	r0, .L399+36
 7181              	.LBB1491:
 7182              	.LBB1492:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7183              		.loc 8 67 46 view .LVU1999
 7184 046e C4ED018A 		vstr.32	s17, [r4, #4]
 7185              	.LBE1492:
 7186              	.LBE1491:
 7187              	.LBB1494:
 7188              	.LBB1482:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7189              		.loc 8 61 20 view .LVU2000
 7190 0472 C4ED067A 		vstr.32	s15, [r4, #24]
 7191              	.LVL425:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7192              		.loc 8 61 20 view .LVU2001
 7193              	.LBE1482:
 7194              	.LBE1494:
 716:Veno-Echo.cpp **** 
 7195              		.loc 20 716 5 is_stmt 1 view .LVU2002
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 243


 7196              	.LBB1495:
 7197              	.LBI1491:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7198              		.loc 8 67 17 view .LVU2003
 7199              	.LBB1493:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7200              		.loc 8 67 41 view .LVU2004
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7201              		.loc 8 67 41 is_stmt 0 view .LVU2005
 7202              	.LBE1493:
 7203              	.LBE1495:
 718:Veno-Echo.cpp **** 
 7204              		.loc 20 718 5 is_stmt 1 view .LVU2006
 718:Veno-Echo.cpp **** 
 7205              		.loc 20 718 19 is_stmt 0 view .LVU2007
 7206 0476 FFF7FEFF 		bl	_ZN8Taptempo4initEiif
 7207              	.LVL426:
 722:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7208              		.loc 20 722 5 is_stmt 1 view .LVU2008
 722:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7209              		.loc 20 722 23 is_stmt 0 view .LVU2009
 7210 047a 1820     		movs	r0, #24
 730:Veno-Echo.cpp **** 
 7211              		.loc 20 730 17 view .LVU2010
 7212 047c 584C     		ldr	r4, .L399+40
 722:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7213              		.loc 20 722 23 view .LVU2011
 7214 047e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7215              	.LVL427:
 7216 0482 0346     		mov	r3, r0	@ movhi
 7217 0484 4D48     		ldr	r0, .L399+4
 7218 0486 ADF84030 		strh	r3, [sp, #64]	@ movhi
 7219 048a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7220              	.LVL428:
 7221 048e 1099     		ldr	r1, [sp, #64]
 7222 0490 5448     		ldr	r0, .L399+44
 7223 0492 FFF7FEFF 		bl	_ZN8TempoLED4initE12dsy_gpio_pinf
 7224              	.LVL429:
 723:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7225              		.loc 20 723 5 is_stmt 1 view .LVU2012
 723:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7226              		.loc 20 723 27 is_stmt 0 view .LVU2013
 7227 0496 5148     		ldr	r0, .L399+36
 7228 0498 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 7229              	.LVL430:
 7230 049c 5148     		ldr	r0, .L399+44
 7231 049e FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 7232              	.LVL431:
 724:Veno-Echo.cpp **** 
 7233              		.loc 20 724 5 is_stmt 1 view .LVU2014
 724:Veno-Echo.cpp **** 
 7234              		.loc 20 724 29 is_stmt 0 view .LVU2015
 7235 04a2 5048     		ldr	r0, .L399+44
 7236 04a4 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 7237              	.LVL432:
 729:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 7238              		.loc 20 729 5 is_stmt 1 view .LVU2016
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 244


 729:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 7239              		.loc 20 729 18 is_stmt 0 view .LVU2017
 7240 04a8 4B48     		ldr	r0, .L399+32
 7241 04aa FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 7242              	.LVL433:
 730:Veno-Echo.cpp **** 
 7243              		.loc 20 730 5 is_stmt 1 view .LVU2018
 730:Veno-Echo.cpp **** 
 7244              		.loc 20 730 17 is_stmt 0 view .LVU2019
 7245 04ae 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7246 04b0 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7247 04b2 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 7248 04b6 84E80F00 		stm	r4, {r0, r1, r2, r3}
 735:Veno-Echo.cpp **** 
 7249              		.loc 20 735 5 is_stmt 1 view .LVU2020
 737:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 7250              		.loc 20 737 5 view .LVU2021
 737:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 7251              		.loc 20 737 28 is_stmt 0 view .LVU2022
 7252 04ba 0F20     		movs	r0, #15
 7253 04bc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7254              	.LVL434:
 7255 04c0 0346     		mov	r3, r0	@ movhi
 7256 04c2 1CA8     		add	r0, sp, #112
 7257 04c4 ADF84430 		strh	r3, [sp, #68]	@ movhi
 7258 04c8 1199     		ldr	r1, [sp, #68]
 7259 04ca FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7260              	.LVL435:
 738:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 7261              		.loc 20 738 5 is_stmt 1 view .LVU2023
 738:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 7262              		.loc 20 738 28 is_stmt 0 view .LVU2024
 7263 04ce 1020     		movs	r0, #16
 7264 04d0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7265              	.LVL436:
 7266 04d4 0346     		mov	r3, r0	@ movhi
 7267 04d6 0DF18100 		add	r0, sp, #129
 7268 04da ADF84830 		strh	r3, [sp, #72]	@ movhi
 7269 04de 1299     		ldr	r1, [sp, #72]
 7270 04e0 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7271              	.LVL437:
 739:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 7272              		.loc 20 739 5 is_stmt 1 view .LVU2025
 739:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 7273              		.loc 20 739 28 is_stmt 0 view .LVU2026
 7274 04e4 1120     		movs	r0, #17
 7275 04e6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7276              	.LVL438:
 7277 04ea 0346     		mov	r3, r0	@ movhi
 7278 04ec 0DF19200 		add	r0, sp, #146
 7279 04f0 ADF84C30 		strh	r3, [sp, #76]	@ movhi
 7280 04f4 1399     		ldr	r1, [sp, #76]
 7281 04f6 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7282              	.LVL439:
 740:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 7283              		.loc 20 740 5 is_stmt 1 view .LVU2027
 740:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 245


 7284              		.loc 20 740 28 is_stmt 0 view .LVU2028
 7285 04fa 1220     		movs	r0, #18
 7286 04fc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7287              	.LVL440:
 7288 0500 0346     		mov	r3, r0	@ movhi
 7289 0502 0DF1A300 		add	r0, sp, #163
 7290 0506 ADF85030 		strh	r3, [sp, #80]	@ movhi
 7291 050a 1499     		ldr	r1, [sp, #80]
 7292 050c FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7293              	.LVL441:
 741:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 7294              		.loc 20 741 5 is_stmt 1 view .LVU2029
 741:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 7295              		.loc 20 741 28 is_stmt 0 view .LVU2030
 7296 0510 1320     		movs	r0, #19
 7297 0512 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7298              	.LVL442:
 7299 0516 0346     		mov	r3, r0	@ movhi
 7300 0518 2DA8     		add	r0, sp, #180
 7301 051a ADF85430 		strh	r3, [sp, #84]	@ movhi
 7302 051e 1599     		ldr	r1, [sp, #84]
 7303 0520 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7304              	.LVL443:
 742:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 7305              		.loc 20 742 5 is_stmt 1 view .LVU2031
 742:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 7306              		.loc 20 742 28 is_stmt 0 view .LVU2032
 7307 0524 1420     		movs	r0, #20
 7308 0526 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7309              	.LVL444:
 7310 052a 0346     		mov	r3, r0	@ movhi
 7311 052c 0DF1C500 		add	r0, sp, #197
 7312 0530 ADF85830 		strh	r3, [sp, #88]	@ movhi
 7313 0534 1699     		ldr	r1, [sp, #88]
 7314 0536 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7315              	.LVL445:
 744:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 7316              		.loc 20 744 5 is_stmt 1 view .LVU2033
 744:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 7317              		.loc 20 744 28 is_stmt 0 view .LVU2034
 7318 053a 1620     		movs	r0, #22
 7319 053c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7320              	.LVL446:
 7321 0540 0346     		mov	r3, r0	@ movhi
 7322 0542 0DF1D600 		add	r0, sp, #214
 7323 0546 ADF85C30 		strh	r3, [sp, #92]	@ movhi
 7324 054a 1799     		ldr	r1, [sp, #92]
 7325 054c FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7326              	.LVL447:
 745:Veno-Echo.cpp **** 
 7327              		.loc 20 745 5 is_stmt 1 view .LVU2035
 745:Veno-Echo.cpp **** 
 7328              		.loc 20 745 25 is_stmt 0 view .LVU2036
 7329 0550 1920     		movs	r0, #25
 7330 0552 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7331              	.LVL448:
 7332 0556 0346     		mov	r3, r0	@ movhi
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 246


 7333 0558 0E20     		movs	r0, #14
 7334 055a ADF86030 		strh	r3, [sp, #96]	@ movhi
 7335 055e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7336              	.LVL449:
 7337 0562 0346     		mov	r3, r0	@ movhi
 7338 0564 0D20     		movs	r0, #13
 7339 0566 ADF86430 		strh	r3, [sp, #100]	@ movhi
 7340 056a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7341              	.LVL450:
 7342 056e 0346     		mov	r3, r0	@ movhi
 7343 0570 0C20     		movs	r0, #12
 7344 0572 ADF86830 		strh	r3, [sp, #104]	@ movhi
 7345 0576 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7346              	.LVL451:
 7347 057a BDF86810 		ldrh	r1, [sp, #104]
 7348 057e 0822     		movs	r2, #8
 7349 0580 199B     		ldr	r3, [sp, #100]
 7350 0582 ADF80400 		strh	r0, [sp, #4]	@ movhi
 7351 0586 0DF1E700 		add	r0, sp, #231
 7352 058a ADF80010 		strh	r1, [sp]	@ movhi
 7353 058e 1899     		ldr	r1, [sp, #96]
 7354 0590 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
 7355              	.LVL452:
 748:Veno-Echo.cpp ****     hw.adc.Start();
 7356              		.loc 20 748 5 is_stmt 1 view .LVU2037
 748:Veno-Echo.cpp ****     hw.adc.Start();
 7357              		.loc 20 748 16 is_stmt 0 view .LVU2038
 7358 0594 1CA9     		add	r1, sp, #112
 7359 0596 0623     		movs	r3, #6
 7360 0598 0822     		movs	r2, #8
 7361 059a 1348     		ldr	r0, .L399+48
 7362 059c FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 7363              	.LVL453:
 749:Veno-Echo.cpp **** 
 7364              		.loc 20 749 5 is_stmt 1 view .LVU2039
 749:Veno-Echo.cpp **** 
 7365              		.loc 20 749 17 is_stmt 0 view .LVU2040
 7366 05a0 1148     		ldr	r0, .L399+48
 7367 05a2 FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 7368              	.LVL454:
 752:Veno-Echo.cpp ****     // start audio callback
 7369              		.loc 20 752 5 is_stmt 1 view .LVU2041
 752:Veno-Echo.cpp ****     // start audio callback
 7370              		.loc 20 752 25 is_stmt 0 view .LVU2042
 7371 05a6 3946     		mov	r1, r7
 7372 05a8 0448     		ldr	r0, .L399+4
 7373 05aa FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 7374              	.LVL455:
 754:Veno-Echo.cpp **** 
 7375              		.loc 20 754 5 is_stmt 1 view .LVU2043
 754:Veno-Echo.cpp **** 
 7376              		.loc 20 754 18 is_stmt 0 view .LVU2044
 7377 05ae 0F49     		ldr	r1, .L399+52
 7378 05b0 0248     		ldr	r0, .L399+4
 7379 05b2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
 7380              	.LVL456:
 7381              	.L394:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 247


 758:Veno-Echo.cpp ****      {
 7382              		.loc 20 758 6 is_stmt 1 discriminator 1 view .LVU2045
 758:Veno-Echo.cpp ****      {
 7383              		.loc 20 758 6 discriminator 1 view .LVU2046
 758:Veno-Echo.cpp ****      {
 7384              		.loc 20 758 6 discriminator 1 view .LVU2047
 758:Veno-Echo.cpp ****      {
 7385              		.loc 20 758 6 discriminator 1 view .LVU2048
 7386 05b6 FEE7     		b	.L394
 7387              	.L400:
 7388              		.align	2
 7389              	.L399:
 7390 05b8 00000000 		.word	.LANCHOR36
 7391 05bc 00000000 		.word	.LANCHOR4
 7392 05c0 00000000 		.word	.LANCHOR37
 7393 05c4 00004843 		.word	1128792064
 7394 05c8 3333333F 		.word	1060320051
 7395 05cc 00000000 		.word	.LANCHOR104
 7396 05d0 00000000 		.word	.LANCHOR105
 7397 05d4 0000C842 		.word	1120403456
 7398 05d8 00000000 		.word	.LANCHOR106
 7399 05dc 00000000 		.word	.LANCHOR12
 7400 05e0 00000000 		.word	.LANCHOR16
 7401 05e4 00000000 		.word	.LANCHOR88
 7402 05e8 18000000 		.word	.LANCHOR4+24
 7403 05ec 00000000 		.word	_ZL13AudioCallbackPfS_j
 7404              		.cfi_endproc
 7405              	.LFE4311:
 7407              		.section	.text._Z13TurnOnAllLEDsv,"ax",%progbits
 7408              		.align	1
 7409              		.p2align 2,,3
 7410              		.global	_Z13TurnOnAllLEDsv
 7411              		.syntax unified
 7412              		.thumb
 7413              		.thumb_func
 7414              		.fpu fpv5-d16
 7416              	_Z13TurnOnAllLEDsv:
 7417              	.LFB4332:
1803:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 7418              		.loc 20 1803 1 view -0
 7419              		.cfi_startproc
 7420              		@ args = 0, pretend = 0, frame = 0
 7421              		@ frame_needed = 0, uses_anonymous_args = 0
1804:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 7422              		.loc 20 1804 5 view .LVU2050
1803:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 7423              		.loc 20 1803 1 is_stmt 0 view .LVU2051
 7424 0000 08B5     		push	{r3, lr}
 7425              		.cfi_def_cfa_offset 8
 7426              		.cfi_offset 3, -8
 7427              		.cfi_offset 14, -4
1804:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 7428              		.loc 20 1804 26 view .LVU2052
 7429 0002 B7EE000A 		vmov.f32	s0, #1.0e+0
 7430 0006 1148     		ldr	r0, .L403
 7431 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7432              	.LVL457:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 248


1805:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 7433              		.loc 20 1805 5 is_stmt 1 view .LVU2053
1805:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 7434              		.loc 20 1805 28 is_stmt 0 view .LVU2054
 7435 000c B7EE000A 		vmov.f32	s0, #1.0e+0
 7436 0010 0F48     		ldr	r0, .L403+4
 7437 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7438              	.LVL458:
1806:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 7439              		.loc 20 1806 5 is_stmt 1 view .LVU2055
1806:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 7440              		.loc 20 1806 28 is_stmt 0 view .LVU2056
 7441 0016 B7EE000A 		vmov.f32	s0, #1.0e+0
 7442 001a 0E48     		ldr	r0, .L403+8
 7443 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7444              	.LVL459:
1807:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 7445              		.loc 20 1807 5 is_stmt 1 view .LVU2057
1807:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 7446              		.loc 20 1807 21 is_stmt 0 view .LVU2058
 7447 0020 B7EE000A 		vmov.f32	s0, #1.0e+0
 7448 0024 0C48     		ldr	r0, .L403+12
 7449 0026 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7450              	.LVL460:
1808:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 7451              		.loc 20 1808 5 is_stmt 1 view .LVU2059
1808:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 7452              		.loc 20 1808 21 is_stmt 0 view .LVU2060
 7453 002a B7EE000A 		vmov.f32	s0, #1.0e+0
 7454 002e 0B48     		ldr	r0, .L403+16
 7455 0030 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7456              	.LVL461:
1809:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 7457              		.loc 20 1809 5 is_stmt 1 view .LVU2061
1809:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 7458              		.loc 20 1809 19 is_stmt 0 view .LVU2062
 7459 0034 B7EE000A 		vmov.f32	s0, #1.0e+0
 7460 0038 0948     		ldr	r0, .L403+20
 7461 003a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7462              	.LVL462:
1810:Veno-Echo.cpp **** }
 7463              		.loc 20 1810 5 is_stmt 1 view .LVU2063
1810:Veno-Echo.cpp **** }
 7464              		.loc 20 1810 19 is_stmt 0 view .LVU2064
 7465 003e B7EE000A 		vmov.f32	s0, #1.0e+0
 7466 0042 0848     		ldr	r0, .L403+24
1811:Veno-Echo.cpp **** 
 7467              		.loc 20 1811 1 view .LVU2065
 7468 0044 BDE80840 		pop	{r3, lr}
 7469              		.cfi_restore 14
 7470              		.cfi_restore 3
 7471              		.cfi_def_cfa_offset 0
1810:Veno-Echo.cpp **** }
 7472              		.loc 20 1810 19 view .LVU2066
 7473 0048 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 7474              	.LVL463:
 7475              	.L404:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 249


 7476              		.align	2
 7477              	.L403:
 7478 004c 00000000 		.word	.LANCHOR88
 7479 0050 04000000 		.word	.LANCHOR0+4
 7480 0054 04000000 		.word	.LANCHOR1+4
 7481 0058 00000000 		.word	.LANCHOR92
 7482 005c 00000000 		.word	.LANCHOR93
 7483 0060 00000000 		.word	.LANCHOR90
 7484 0064 00000000 		.word	.LANCHOR91
 7485              		.cfi_endproc
 7486              	.LFE4332:
 7488              		.section	.text._Z12ResetAllLEDsv,"ax",%progbits
 7489              		.align	1
 7490              		.p2align 2,,3
 7491              		.global	_Z12ResetAllLEDsv
 7492              		.syntax unified
 7493              		.thumb
 7494              		.thumb_func
 7495              		.fpu fpv5-d16
 7497              	_Z12ResetAllLEDsv:
 7498              	.LFB4333:
1814:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 7499              		.loc 20 1814 1 is_stmt 1 view -0
 7500              		.cfi_startproc
 7501              		@ args = 0, pretend = 0, frame = 0
 7502              		@ frame_needed = 0, uses_anonymous_args = 0
1815:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 7503              		.loc 20 1815 5 view .LVU2068
1814:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 7504              		.loc 20 1814 1 is_stmt 0 view .LVU2069
 7505 0000 08B5     		push	{r3, lr}
 7506              		.cfi_def_cfa_offset 8
 7507              		.cfi_offset 3, -8
 7508              		.cfi_offset 14, -4
1815:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 7509              		.loc 20 1815 26 view .LVU2070
 7510 0002 9FED1E0A 		vldr.32	s0, .L412
 7511 0006 1E48     		ldr	r0, .L412+4
 7512 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7513              	.LVL464:
1816:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 7514              		.loc 20 1816 5 is_stmt 1 view .LVU2071
1816:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 7515              		.loc 20 1816 28 is_stmt 0 view .LVU2072
 7516 000c 9FED1B0A 		vldr.32	s0, .L412
 7517 0010 1C48     		ldr	r0, .L412+8
 7518 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7519              	.LVL465:
1817:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 7520              		.loc 20 1817 5 is_stmt 1 view .LVU2073
1817:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 7521              		.loc 20 1817 28 is_stmt 0 view .LVU2074
 7522 0016 1C48     		ldr	r0, .L412+12
 7523 0018 9FED180A 		vldr.32	s0, .L412
 7524 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7525              	.LVL466:
1818:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 250


 7526              		.loc 20 1818 5 is_stmt 1 view .LVU2075
1818:Veno-Echo.cpp ****     {
 7527              		.loc 20 1818 26 is_stmt 0 view .LVU2076
 7528 0020 1A48     		ldr	r0, .L412+16
 7529 0022 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7530              	.LVL467:
1818:Veno-Echo.cpp ****     {
 7531              		.loc 20 1818 5 view .LVU2077
 7532 0026 C8B9     		cbnz	r0, .L406
1820:Veno-Echo.cpp ****     }
 7533              		.loc 20 1820 9 is_stmt 1 view .LVU2078
1820:Veno-Echo.cpp ****     }
 7534              		.loc 20 1820 25 is_stmt 0 view .LVU2079
 7535 0028 1848     		ldr	r0, .L412+16
 7536 002a 9FED140A 		vldr.32	s0, .L412
 7537 002e FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7538              	.LVL468:
1827:Veno-Echo.cpp ****     {
 7539              		.loc 20 1827 5 is_stmt 1 view .LVU2080
1827:Veno-Echo.cpp ****     {
 7540              		.loc 20 1827 26 is_stmt 0 view .LVU2081
 7541 0032 1748     		ldr	r0, .L412+20
 7542 0034 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7543              	.LVL469:
1827:Veno-Echo.cpp ****     {
 7544              		.loc 20 1827 5 view .LVU2082
 7545 0038 D0B9     		cbnz	r0, .L408
 7546              	.L411:
1829:Veno-Echo.cpp ****     }
 7547              		.loc 20 1829 9 is_stmt 1 view .LVU2083
1829:Veno-Echo.cpp ****     }
 7548              		.loc 20 1829 25 is_stmt 0 view .LVU2084
 7549 003a 9FED100A 		vldr.32	s0, .L412
 7550 003e 1448     		ldr	r0, .L412+20
 7551 0040 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7552              	.LVL470:
 7553              	.L409:
1836:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 7554              		.loc 20 1836 5 is_stmt 1 view .LVU2085
1836:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 7555              		.loc 20 1836 19 is_stmt 0 view .LVU2086
 7556 0044 9FED0D0A 		vldr.32	s0, .L412
 7557 0048 1248     		ldr	r0, .L412+24
 7558 004a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7559              	.LVL471:
1837:Veno-Echo.cpp **** }
 7560              		.loc 20 1837 5 is_stmt 1 view .LVU2087
1837:Veno-Echo.cpp **** }
 7561              		.loc 20 1837 19 is_stmt 0 view .LVU2088
 7562 004e 9FED0B0A 		vldr.32	s0, .L412
 7563 0052 1148     		ldr	r0, .L412+28
1838:Veno-Echo.cpp **** 
 7564              		.loc 20 1838 1 view .LVU2089
 7565 0054 BDE80840 		pop	{r3, lr}
 7566              		.cfi_remember_state
 7567              		.cfi_restore 14
 7568              		.cfi_restore 3
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 251


 7569              		.cfi_def_cfa_offset 0
1837:Veno-Echo.cpp **** }
 7570              		.loc 20 1837 19 view .LVU2090
 7571 0058 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 7572              	.LVL472:
 7573              	.L406:
 7574              		.cfi_restore_state
1824:Veno-Echo.cpp ****     }
 7575              		.loc 20 1824 8 is_stmt 1 view .LVU2091
1824:Veno-Echo.cpp ****     }
 7576              		.loc 20 1824 24 is_stmt 0 view .LVU2092
 7577 005c 0B48     		ldr	r0, .L412+16
 7578 005e B7EE000A 		vmov.f32	s0, #1.0e+0
 7579 0062 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7580              	.LVL473:
1827:Veno-Echo.cpp ****     {
 7581              		.loc 20 1827 5 is_stmt 1 view .LVU2093
1827:Veno-Echo.cpp ****     {
 7582              		.loc 20 1827 26 is_stmt 0 view .LVU2094
 7583 0066 0A48     		ldr	r0, .L412+20
 7584 0068 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7585              	.LVL474:
1827:Veno-Echo.cpp ****     {
 7586              		.loc 20 1827 5 view .LVU2095
 7587 006c 0028     		cmp	r0, #0
 7588 006e E4D0     		beq	.L411
 7589              	.L408:
1833:Veno-Echo.cpp ****     }
 7590              		.loc 20 1833 9 is_stmt 1 view .LVU2096
1833:Veno-Echo.cpp ****     }
 7591              		.loc 20 1833 25 is_stmt 0 view .LVU2097
 7592 0070 B7EE000A 		vmov.f32	s0, #1.0e+0
 7593 0074 0648     		ldr	r0, .L412+20
 7594 0076 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7595              	.LVL475:
 7596 007a E3E7     		b	.L409
 7597              	.L413:
 7598              		.align	2
 7599              	.L412:
 7600 007c 00000000 		.word	0
 7601 0080 00000000 		.word	.LANCHOR88
 7602 0084 04000000 		.word	.LANCHOR0+4
 7603 0088 04000000 		.word	.LANCHOR1+4
 7604 008c 00000000 		.word	.LANCHOR92
 7605 0090 00000000 		.word	.LANCHOR93
 7606 0094 00000000 		.word	.LANCHOR90
 7607 0098 00000000 		.word	.LANCHOR91
 7608              		.cfi_endproc
 7609              	.LFE4333:
 7611              		.section	.text._Z14Update_Buttonsv,"ax",%progbits
 7612              		.align	1
 7613              		.p2align 2,,3
 7614              		.global	_Z14Update_Buttonsv
 7615              		.syntax unified
 7616              		.thumb
 7617              		.thumb_func
 7618              		.fpu fpv5-d16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 252


 7620              	_Z14Update_Buttonsv:
 7621              	.LFB4329:
1562:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 7622              		.loc 20 1562 1 is_stmt 1 view -0
 7623              		.cfi_startproc
 7624              		@ args = 0, pretend = 0, frame = 0
 7625              		@ frame_needed = 0, uses_anonymous_args = 0
1563:Veno-Echo.cpp ****     static uint32_t resetTime{};
 7626              		.loc 20 1563 5 view .LVU2099
1564:Veno-Echo.cpp ****     static int buttonstate{};
 7627              		.loc 20 1564 5 view .LVU2100
1565:Veno-Echo.cpp **** 
 7628              		.loc 20 1565 5 view .LVU2101
1567:Veno-Echo.cpp ****     Rev_R_sw.update();
 7629              		.loc 20 1567 5 view .LVU2102
1562:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 7630              		.loc 20 1562 1 is_stmt 0 view .LVU2103
 7631 0000 70B5     		push	{r4, r5, r6, lr}
 7632              		.cfi_def_cfa_offset 16
 7633              		.cfi_offset 4, -16
 7634              		.cfi_offset 5, -12
 7635              		.cfi_offset 6, -8
 7636              		.cfi_offset 14, -4
1567:Veno-Echo.cpp ****     Rev_R_sw.update();
 7637              		.loc 20 1567 20 view .LVU2104
 7638 0002 6748     		ldr	r0, .L457
 7639 0004 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 7640              	.LVL476:
1568:Veno-Echo.cpp ****     LPF_sw.update();
 7641              		.loc 20 1568 5 is_stmt 1 view .LVU2105
1568:Veno-Echo.cpp ****     LPF_sw.update();
 7642              		.loc 20 1568 20 is_stmt 0 view .LVU2106
 7643 0008 6648     		ldr	r0, .L457+4
 7644 000a FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 7645              	.LVL477:
1569:Veno-Echo.cpp ****     HPF_sw.update();
 7646              		.loc 20 1569 5 is_stmt 1 view .LVU2107
1569:Veno-Echo.cpp ****     HPF_sw.update();
 7647              		.loc 20 1569 18 is_stmt 0 view .LVU2108
 7648 000e 6648     		ldr	r0, .L457+8
 7649 0010 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 7650              	.LVL478:
1570:Veno-Echo.cpp ****     Tap_Button.update();
 7651              		.loc 20 1570 5 is_stmt 1 view .LVU2109
1573:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 7652              		.loc 20 1573 26 is_stmt 0 view .LVU2110
 7653 0014 654C     		ldr	r4, .L457+12
1570:Veno-Echo.cpp ****     Tap_Button.update();
 7654              		.loc 20 1570 18 view .LVU2111
 7655 0016 6648     		ldr	r0, .L457+16
 7656 0018 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 7657              	.LVL479:
1571:Veno-Echo.cpp **** 
 7658              		.loc 20 1571 5 is_stmt 1 view .LVU2112
1571:Veno-Echo.cpp **** 
 7659              		.loc 20 1571 22 is_stmt 0 view .LVU2113
 7660 001c 6548     		ldr	r0, .L457+20
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 253


 7661 001e FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 7662              	.LVL480:
1573:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 7663              		.loc 20 1573 5 is_stmt 1 view .LVU2114
1573:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 7664              		.loc 20 1573 26 is_stmt 0 view .LVU2115
 7665 0022 2046     		mov	r0, r4
 7666 0024 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 7667              	.LVL481:
1574:Veno-Echo.cpp ****     //TapButton.Debounce();
 7668              		.loc 20 1574 5 is_stmt 1 view .LVU2116
1574:Veno-Echo.cpp ****     //TapButton.Debounce();
 7669              		.loc 20 1574 26 is_stmt 0 view .LVU2117
 7670 0028 6348     		ldr	r0, .L457+24
 7671 002a FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 7672              	.LVL482:
1576:Veno-Echo.cpp ****     ClockIn.Debounce();
 7673              		.loc 20 1576 5 is_stmt 1 view .LVU2118
1576:Veno-Echo.cpp ****     ClockIn.Debounce();
 7674              		.loc 20 1576 18 is_stmt 0 view .LVU2119
 7675 002e 6348     		ldr	r0, .L457+28
 7676 0030 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 7677              	.LVL483:
1577:Veno-Echo.cpp ****     //gate inputs
 7678              		.loc 20 1577 5 is_stmt 1 view .LVU2120
1577:Veno-Echo.cpp ****     //gate inputs
 7679              		.loc 20 1577 21 is_stmt 0 view .LVU2121
 7680 0034 6248     		ldr	r0, .L457+32
 7681 0036 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 7682              	.LVL484:
1579:Veno-Echo.cpp ****     {
 7683              		.loc 20 1579 5 is_stmt 1 view .LVU2122
 7684              		.loc 1 69 38 view .LVU2123
1579:Veno-Echo.cpp ****     {
 7685              		.loc 20 1579 5 is_stmt 0 view .LVU2124
 7686 003a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 7687 003c 7F2B     		cmp	r3, #127
 7688 003e 00F09980 		beq	.L449
 7689              	.L415:
1585:Veno-Echo.cpp ****     {
 7690              		.loc 20 1585 5 is_stmt 1 view .LVU2125
 7691              	.LVL485:
 7692              		.loc 1 69 38 view .LVU2126
1585:Veno-Echo.cpp ****     {
 7693              		.loc 20 1585 32 is_stmt 0 view .LVU2127
 7694 0042 5D4B     		ldr	r3, .L457+24
1585:Veno-Echo.cpp ****     {
 7695              		.loc 20 1585 5 view .LVU2128
 7696 0044 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 7697 0046 7F2B     		cmp	r3, #127
 7698 0048 00F09080 		beq	.L450
 7699              	.L416:
1593:Veno-Echo.cpp ****     {
 7700              		.loc 20 1593 5 is_stmt 1 view .LVU2129
1593:Veno-Echo.cpp ****     {
 7701              		.loc 20 1593 28 is_stmt 0 view .LVU2130
 7702 004c 5448     		ldr	r0, .L457
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 254


1595:Veno-Echo.cpp ****         if (buttonstate == 3)
 7703              		.loc 20 1595 21 view .LVU2131
 7704 004e 5D4C     		ldr	r4, .L457+36
1593:Veno-Echo.cpp ****     {
 7705              		.loc 20 1593 28 view .LVU2132
 7706 0050 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 7707              	.LVL486:
1593:Veno-Echo.cpp ****     {
 7708              		.loc 20 1593 5 view .LVU2133
 7709 0054 28B1     		cbz	r0, .L418
1595:Veno-Echo.cpp ****         if (buttonstate == 3)
 7710              		.loc 20 1595 9 is_stmt 1 view .LVU2134
1595:Veno-Echo.cpp ****         if (buttonstate == 3)
 7711              		.loc 20 1595 21 is_stmt 0 view .LVU2135
 7712 0056 2368     		ldr	r3, [r4]
 7713 0058 0133     		adds	r3, r3, #1
1596:Veno-Echo.cpp ****         {
 7714              		.loc 20 1596 9 view .LVU2136
 7715 005a 032B     		cmp	r3, #3
1595:Veno-Echo.cpp ****         if (buttonstate == 3)
 7716              		.loc 20 1595 21 view .LVU2137
 7717 005c 2360     		str	r3, [r4]
1596:Veno-Echo.cpp ****         {
 7718              		.loc 20 1596 9 is_stmt 1 view .LVU2138
 7719 005e 00F08D80 		beq	.L451
 7720              	.L418:
1602:Veno-Echo.cpp ****     {
 7721              		.loc 20 1602 5 view .LVU2139
1602:Veno-Echo.cpp ****     {
 7722              		.loc 20 1602 29 is_stmt 0 view .LVU2140
 7723 0062 4F48     		ldr	r0, .L457
 7724 0064 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 7725              	.LVL487:
1602:Veno-Echo.cpp ****     {
 7726              		.loc 20 1602 5 view .LVU2141
 7727 0068 10B1     		cbz	r0, .L420
1604:Veno-Echo.cpp ****     }
 7728              		.loc 20 1604 9 is_stmt 1 view .LVU2142
1604:Veno-Echo.cpp ****     }
 7729              		.loc 20 1604 21 is_stmt 0 view .LVU2143
 7730 006a 2368     		ldr	r3, [r4]
 7731 006c 013B     		subs	r3, r3, #1
 7732 006e 2360     		str	r3, [r4]
 7733              	.L420:
1607:Veno-Echo.cpp ****     {
 7734              		.loc 20 1607 5 is_stmt 1 view .LVU2144
1607:Veno-Echo.cpp ****     {
 7735              		.loc 20 1607 28 is_stmt 0 view .LVU2145
 7736 0070 4C48     		ldr	r0, .L457+4
 7737 0072 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 7738              	.LVL488:
1607:Veno-Echo.cpp ****     {
 7739              		.loc 20 1607 5 view .LVU2146
 7740 0076 28B1     		cbz	r0, .L422
1609:Veno-Echo.cpp ****         if (buttonstate == 3)
 7741              		.loc 20 1609 9 is_stmt 1 view .LVU2147
1609:Veno-Echo.cpp ****         if (buttonstate == 3)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 255


 7742              		.loc 20 1609 21 is_stmt 0 view .LVU2148
 7743 0078 2368     		ldr	r3, [r4]
 7744 007a 0133     		adds	r3, r3, #1
1610:Veno-Echo.cpp ****         {
 7745              		.loc 20 1610 9 view .LVU2149
 7746 007c 032B     		cmp	r3, #3
1609:Veno-Echo.cpp ****         if (buttonstate == 3)
 7747              		.loc 20 1609 21 view .LVU2150
 7748 007e 2360     		str	r3, [r4]
1610:Veno-Echo.cpp ****         {
 7749              		.loc 20 1610 9 is_stmt 1 view .LVU2151
 7750 0080 00F08180 		beq	.L452
 7751              	.L422:
1616:Veno-Echo.cpp ****     {
 7752              		.loc 20 1616 5 view .LVU2152
1616:Veno-Echo.cpp ****     {
 7753              		.loc 20 1616 29 is_stmt 0 view .LVU2153
 7754 0084 4748     		ldr	r0, .L457+4
 7755 0086 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 7756              	.LVL489:
1616:Veno-Echo.cpp ****     {
 7757              		.loc 20 1616 5 view .LVU2154
 7758 008a 10B1     		cbz	r0, .L424
1618:Veno-Echo.cpp ****     }
 7759              		.loc 20 1618 9 is_stmt 1 view .LVU2155
1618:Veno-Echo.cpp ****     }
 7760              		.loc 20 1618 21 is_stmt 0 view .LVU2156
 7761 008c 2368     		ldr	r3, [r4]
 7762 008e 013B     		subs	r3, r3, #1
 7763 0090 2360     		str	r3, [r4]
 7764              	.L424:
1621:Veno-Echo.cpp ****     {
 7765              		.loc 20 1621 5 is_stmt 1 view .LVU2157
1621:Veno-Echo.cpp ****     {
 7766              		.loc 20 1621 30 is_stmt 0 view .LVU2158
 7767 0092 4848     		ldr	r0, .L457+20
 7768 0094 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 7769              	.LVL490:
1621:Veno-Echo.cpp ****     {
 7770              		.loc 20 1621 5 view .LVU2159
 7771 0098 0028     		cmp	r0, #0
 7772 009a 52D1     		bne	.L453
 7773              	.L426:
1640:Veno-Echo.cpp ****     {
 7774              		.loc 20 1640 5 is_stmt 1 view .LVU2160
1640:Veno-Echo.cpp ****     {
 7775              		.loc 20 1640 31 is_stmt 0 view .LVU2161
 7776 009c 4548     		ldr	r0, .L457+20
 7777 009e FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 7778              	.LVL491:
1640:Veno-Echo.cpp ****     {
 7779              		.loc 20 1640 5 view .LVU2162
 7780 00a2 38B1     		cbz	r0, .L429
1642:Veno-Echo.cpp ****         buttonstate -= 1;
 7781              		.loc 20 1642 9 is_stmt 1 view .LVU2163
1643:Veno-Echo.cpp ****         mute = false;
 7782              		.loc 20 1643 21 is_stmt 0 view .LVU2164
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 256


 7783 00a4 2368     		ldr	r3, [r4]
1642:Veno-Echo.cpp ****         buttonstate -= 1;
 7784              		.loc 20 1642 15 view .LVU2165
 7785 00a6 0022     		movs	r2, #0
 7786 00a8 4748     		ldr	r0, .L457+40
1643:Veno-Echo.cpp ****         mute = false;
 7787              		.loc 20 1643 21 view .LVU2166
 7788 00aa 013B     		subs	r3, r3, #1
1644:Veno-Echo.cpp ****     }
 7789              		.loc 20 1644 14 view .LVU2167
 7790 00ac 4749     		ldr	r1, .L457+44
1642:Veno-Echo.cpp ****         buttonstate -= 1;
 7791              		.loc 20 1642 15 view .LVU2168
 7792 00ae 0270     		strb	r2, [r0]
1643:Veno-Echo.cpp ****         mute = false;
 7793              		.loc 20 1643 9 is_stmt 1 view .LVU2169
1643:Veno-Echo.cpp ****         mute = false;
 7794              		.loc 20 1643 21 is_stmt 0 view .LVU2170
 7795 00b0 2360     		str	r3, [r4]
1644:Veno-Echo.cpp ****     }
 7796              		.loc 20 1644 9 is_stmt 1 view .LVU2171
1644:Veno-Echo.cpp ****     }
 7797              		.loc 20 1644 14 is_stmt 0 view .LVU2172
 7798 00b2 0A70     		strb	r2, [r1]
 7799              	.L429:
1647:Veno-Echo.cpp ****     {
 7800              		.loc 20 1647 5 is_stmt 1 view .LVU2173
1647:Veno-Echo.cpp ****     {
 7801              		.loc 20 1647 28 is_stmt 0 view .LVU2174
 7802 00b4 3F48     		ldr	r0, .L457+20
 7803 00b6 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7804              	.LVL492:
1647:Veno-Echo.cpp ****     {
 7805              		.loc 20 1647 5 view .LVU2175
 7806 00ba 90B9     		cbnz	r0, .L454
 7807              	.L431:
1655:Veno-Echo.cpp ****     {
 7808              		.loc 20 1655 5 is_stmt 1 view .LVU2176
 7809 00bc 2368     		ldr	r3, [r4]
 7810 00be 032B     		cmp	r3, #3
 7811 00c0 1CD0     		beq	.L455
 7812              	.L434:
1671:Veno-Echo.cpp **** 
 7813              		.loc 20 1671 5 view .LVU2177
 7814              	.LBB1496:
 7815              	.LBI1496:
  70:../libdaisy/src/hid/switch.h **** 
  71:../libdaisy/src/hid/switch.h ****     /** \return true if the button was just released */
  72:../libdaisy/src/hid/switch.h ****     inline bool FallingEdge() const { return state_ == 0x80; }
  73:../libdaisy/src/hid/switch.h **** 
  74:../libdaisy/src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  75:../libdaisy/src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 7816              		.loc 1 75 17 view .LVU2178
 7817              	.LVL493:
 7818              	.LBB1497:
 7819              		.loc 1 75 35 view .LVU2179
 7820              	.LBE1497:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 257


 7821              	.LBE1496:
1671:Veno-Echo.cpp **** 
 7822              		.loc 20 1671 31 is_stmt 0 view .LVU2180
 7823 00c2 3E4B     		ldr	r3, .L457+28
1671:Veno-Echo.cpp **** 
 7824              		.loc 20 1671 14 view .LVU2181
 7825 00c4 4248     		ldr	r0, .L457+48
 7826              	.LBB1501:
 7827              	.LBB1498:
 7828              		.loc 1 75 52 view .LVU2182
 7829 00c6 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 7830              	.LBE1498:
 7831              	.LBE1501:
 7832              	.LBB1502:
 7833              	.LBB1503:
  70:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 7834              		.loc 17 70 46 view .LVU2183
 7835 00c8 4249     		ldr	r1, .L457+52
 7836              	.LBE1503:
 7837              	.LBE1502:
 7838              	.LBB1505:
 7839              	.LBB1499:
 7840              		.loc 1 75 52 view .LVU2184
 7841 00ca A3F1FF03 		sub	r3, #255
 7842              	.LBE1499:
 7843              	.LBE1505:
 7844              	.LBB1506:
 7845              	.LBB1507:
  70:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 7846              		.loc 17 70 46 view .LVU2185
 7847 00ce 424A     		ldr	r2, .L457+56
 7848              	.LBE1507:
 7849              	.LBE1506:
 7850              	.LBB1509:
 7851              	.LBB1500:
 7852              		.loc 1 75 52 view .LVU2186
 7853 00d0 B3FA83F3 		clz	r3, r3
 7854 00d4 5B09     		lsrs	r3, r3, #5
 7855              	.LBE1500:
 7856              	.LBE1509:
1671:Veno-Echo.cpp **** 
 7857              		.loc 20 1671 14 view .LVU2187
 7858 00d6 0370     		strb	r3, [r0]
1674:Veno-Echo.cpp ****     delayR.SetSync(syncMode);
 7859              		.loc 20 1674 5 is_stmt 1 view .LVU2188
 7860              	.LBB1510:
 7861              	.LBI1502:
  70:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 7862              		.loc 17 70 6 view .LVU2189
 7863              	.LVL494:
 7864              	.LBB1504:
  70:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 7865              		.loc 17 70 36 view .LVU2190
  70:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 7866              		.loc 17 70 46 is_stmt 0 view .LVU2191
 7867 00d8 81F81E31 		strb	r3, [r1, #286]
 7868              	.LBE1504:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 258


 7869              	.LBE1510:
1675:Veno-Echo.cpp **** }
 7870              		.loc 20 1675 5 is_stmt 1 view .LVU2192
 7871              	.LVL495:
 7872              	.LBB1511:
 7873              	.LBI1506:
  70:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 7874              		.loc 17 70 6 view .LVU2193
 7875              	.LBB1508:
  70:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 7876              		.loc 17 70 36 view .LVU2194
  70:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 7877              		.loc 17 70 46 is_stmt 0 view .LVU2195
 7878 00dc 82F81E31 		strb	r3, [r2, #286]
 7879              	.LBE1508:
 7880              	.LBE1511:
1676:Veno-Echo.cpp **** 
 7881              		.loc 20 1676 1 view .LVU2196
 7882 00e0 70BD     		pop	{r4, r5, r6, pc}
 7883              	.LVL496:
 7884              	.L454:
1649:Veno-Echo.cpp ****         {
 7885              		.loc 20 1649 9 is_stmt 1 view .LVU2197
1649:Veno-Echo.cpp ****         {
 7886              		.loc 20 1649 29 is_stmt 0 view .LVU2198
 7887 00e2 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7888              	.LVL497:
1649:Veno-Echo.cpp ****         {
 7889              		.loc 20 1649 32 view .LVU2199
 7890 00e6 3D4B     		ldr	r3, .L457+60
 7891 00e8 1B68     		ldr	r3, [r3]
 7892 00ea C01A     		subs	r0, r0, r3
1649:Veno-Echo.cpp ****         {
 7893              		.loc 20 1649 9 view .LVU2200
 7894 00ec 3228     		cmp	r0, #50
 7895 00ee E5D9     		bls	.L431
1651:Veno-Echo.cpp ****         } 
 7896              		.loc 20 1651 13 is_stmt 1 view .LVU2201
1651:Veno-Echo.cpp ****         } 
 7897              		.loc 20 1651 19 is_stmt 0 view .LVU2202
 7898 00f0 354B     		ldr	r3, .L457+40
 7899 00f2 0122     		movs	r2, #1
 7900 00f4 1A70     		strb	r2, [r3]
1655:Veno-Echo.cpp ****     {
 7901              		.loc 20 1655 5 is_stmt 1 view .LVU2203
 7902 00f6 2368     		ldr	r3, [r4]
 7903 00f8 032B     		cmp	r3, #3
 7904 00fa E2D1     		bne	.L434
 7905              	.L455:
1658:Veno-Echo.cpp ****             {
 7906              		.loc 20 1658 13 view .LVU2204
1658:Veno-Echo.cpp ****             {
 7907              		.loc 20 1658 36 is_stmt 0 view .LVU2205
 7908 00fc 384E     		ldr	r6, .L457+64
1658:Veno-Echo.cpp ****             {
 7909              		.loc 20 1658 33 view .LVU2206
 7910 00fe FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 259


 7911              	.LVL498:
1658:Veno-Echo.cpp ****             {
 7912              		.loc 20 1658 13 view .LVU2207
 7913 0102 40F6B833 		movw	r3, #3000
1658:Veno-Echo.cpp ****             {
 7914              		.loc 20 1658 36 view .LVU2208
 7915 0106 3268     		ldr	r2, [r6]
 7916 0108 801A     		subs	r0, r0, r2
1658:Veno-Echo.cpp ****             {
 7917              		.loc 20 1658 13 view .LVU2209
 7918 010a 9842     		cmp	r0, r3
 7919 010c D9D9     		bls	.L434
1660:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 7920              		.loc 20 1660 17 is_stmt 1 view .LVU2210
1660:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 7921              		.loc 20 1660 32 is_stmt 0 view .LVU2211
 7922 010e 2448     		ldr	r0, .L457
 7923 0110 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 7924              	.LVL499:
1661:Veno-Echo.cpp ****                 ResetAllLEDs();
 7925              		.loc 20 1661 17 is_stmt 1 view .LVU2212
1661:Veno-Echo.cpp ****                 ResetAllLEDs();
 7926              		.loc 20 1661 32 is_stmt 0 view .LVU2213
 7927 0114 2348     		ldr	r0, .L457+4
 7928 0116 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 7929              	.LVL500:
1662:Veno-Echo.cpp ****                 //don't let reset or shift update
 7930              		.loc 20 1662 17 is_stmt 1 view .LVU2214
1666:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 7931              		.loc 20 1666 29 is_stmt 0 view .LVU2215
 7932 011a 324D     		ldr	r5, .L457+68
1662:Veno-Echo.cpp ****                 //don't let reset or shift update
 7933              		.loc 20 1662 29 view .LVU2216
 7934 011c FFF7FEFF 		bl	_Z12ResetAllLEDsv
 7935              	.LVL501:
1664:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 7936              		.loc 20 1664 17 is_stmt 1 view .LVU2217
1664:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 7937              		.loc 20 1664 23 is_stmt 0 view .LVU2218
 7938 0120 294B     		ldr	r3, .L457+40
 7939 0122 0022     		movs	r2, #0
1665:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 7940              		.loc 20 1665 30 view .LVU2219
 7941 0124 2F48     		ldr	r0, .L457+68
1666:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 7942              		.loc 20 1666 29 view .LVU2220
 7943 0126 304C     		ldr	r4, .L457+72
1664:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 7944              		.loc 20 1664 23 view .LVU2221
 7945 0128 1A70     		strb	r2, [r3]
1665:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 7946              		.loc 20 1665 17 is_stmt 1 view .LVU2222
1665:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 7947              		.loc 20 1665 30 is_stmt 0 view .LVU2223
 7948 012a FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 7949              	.LVL502:
1666:Veno-Echo.cpp ****                 resetTime = System::GetNow();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 260


 7950              		.loc 20 1666 17 is_stmt 1 view .LVU2224
1666:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 7951              		.loc 20 1666 29 is_stmt 0 view .LVU2225
 7952 012e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7953 0130 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7954 0132 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 7955 0136 84E80F00 		stm	r4, {r0, r1, r2, r3}
1667:Veno-Echo.cpp ****             }
 7956              		.loc 20 1667 17 is_stmt 1 view .LVU2226
1667:Veno-Echo.cpp ****             }
 7957              		.loc 20 1667 43 is_stmt 0 view .LVU2227
 7958 013a FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7959              	.LVL503:
1667:Veno-Echo.cpp ****             }
 7960              		.loc 20 1667 27 view .LVU2228
 7961 013e 3060     		str	r0, [r6]
 7962 0140 BFE7     		b	.L434
 7963              	.L453:
1623:Veno-Echo.cpp ****         {
 7964              		.loc 20 1623 9 is_stmt 1 view .LVU2229
1623:Veno-Echo.cpp ****         {
 7965              		.loc 20 1623 25 is_stmt 0 view .LVU2230
 7966 0142 2A48     		ldr	r0, .L457+76
 7967 0144 FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 7968              	.LVL504:
1623:Veno-Echo.cpp ****         {
 7969              		.loc 20 1623 9 view .LVU2231
 7970 0148 10BB     		cbnz	r0, .L456
 7971              	.L427:
1627:Veno-Echo.cpp ****         
 7972              		.loc 20 1627 9 is_stmt 1 view .LVU2232
1627:Veno-Echo.cpp ****         
 7973              		.loc 20 1627 33 is_stmt 0 view .LVU2233
 7974 014a 2948     		ldr	r0, .L457+80
 7975 014c FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 7976              	.LVL505:
1630:Veno-Echo.cpp ****         buttonstate += 1;
 7977              		.loc 20 1630 9 is_stmt 1 view .LVU2234
1630:Veno-Echo.cpp ****         buttonstate += 1;
 7978              		.loc 20 1630 35 is_stmt 0 view .LVU2235
 7979 0150 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7980              	.LVL506:
1631:Veno-Echo.cpp ****         
 7981              		.loc 20 1631 21 view .LVU2236
 7982 0154 2368     		ldr	r3, [r4]
1630:Veno-Echo.cpp ****         buttonstate += 1;
 7983              		.loc 20 1630 19 view .LVU2237
 7984 0156 214A     		ldr	r2, .L457+60
1631:Veno-Echo.cpp ****         
 7985              		.loc 20 1631 21 view .LVU2238
 7986 0158 0133     		adds	r3, r3, #1
1630:Veno-Echo.cpp ****         buttonstate += 1;
 7987              		.loc 20 1630 19 view .LVU2239
 7988 015a 1060     		str	r0, [r2]
1631:Veno-Echo.cpp ****         
 7989              		.loc 20 1631 9 is_stmt 1 view .LVU2240
1633:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 261


 7990              		.loc 20 1633 9 is_stmt 0 view .LVU2241
 7991 015c 032B     		cmp	r3, #3
1631:Veno-Echo.cpp ****         
 7992              		.loc 20 1631 21 view .LVU2242
 7993 015e 2360     		str	r3, [r4]
1633:Veno-Echo.cpp ****         {
 7994              		.loc 20 1633 9 is_stmt 1 view .LVU2243
 7995 0160 9CD1     		bne	.L426
1635:Veno-Echo.cpp ****         }
 7996              		.loc 20 1635 13 view .LVU2244
1635:Veno-Echo.cpp ****         }
 7997              		.loc 20 1635 39 is_stmt 0 view .LVU2245
 7998 0162 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7999              	.LVL507:
1635:Veno-Echo.cpp ****         }
 8000              		.loc 20 1635 23 view .LVU2246
 8001 0166 1E4B     		ldr	r3, .L457+64
 8002 0168 1860     		str	r0, [r3]
 8003 016a 97E7     		b	.L426
 8004              	.L450:
1587:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 8005              		.loc 20 1587 9 is_stmt 1 view .LVU2247
1587:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 8006              		.loc 20 1587 24 is_stmt 0 view .LVU2248
 8007 016c 0D48     		ldr	r0, .L457+4
 8008 016e FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8009              	.LVL508:
 8010 0172 6BE7     		b	.L416
 8011              	.LVL509:
 8012              	.L449:
1581:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 8013              		.loc 20 1581 9 is_stmt 1 view .LVU2249
1581:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 8014              		.loc 20 1581 24 is_stmt 0 view .LVU2250
 8015 0174 0A48     		ldr	r0, .L457
 8016 0176 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8017              	.LVL510:
 8018 017a 62E7     		b	.L415
 8019              	.LVL511:
 8020              	.L451:
1598:Veno-Echo.cpp ****         }
 8021              		.loc 20 1598 13 is_stmt 1 view .LVU2251
1598:Veno-Echo.cpp ****         }
 8022              		.loc 20 1598 39 is_stmt 0 view .LVU2252
 8023 017c FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8024              	.LVL512:
1598:Veno-Echo.cpp ****         }
 8025              		.loc 20 1598 23 view .LVU2253
 8026 0180 174B     		ldr	r3, .L457+64
 8027 0182 1860     		str	r0, [r3]
 8028 0184 6DE7     		b	.L418
 8029              	.L452:
1612:Veno-Echo.cpp ****         }
 8030              		.loc 20 1612 13 is_stmt 1 view .LVU2254
1612:Veno-Echo.cpp ****         }
 8031              		.loc 20 1612 39 is_stmt 0 view .LVU2255
 8032 0186 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 262


 8033              	.LVL513:
1612:Veno-Echo.cpp ****         }
 8034              		.loc 20 1612 23 view .LVU2256
 8035 018a 154B     		ldr	r3, .L457+64
 8036 018c 1860     		str	r0, [r3]
 8037 018e 79E7     		b	.L422
 8038              	.L456:
1625:Veno-Echo.cpp ****         }
 8039              		.loc 20 1625 13 is_stmt 1 view .LVU2257
1625:Veno-Echo.cpp ****         }
 8040              		.loc 20 1625 35 is_stmt 0 view .LVU2258
 8041 0190 1648     		ldr	r0, .L457+76
 8042 0192 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 8043              	.LVL514:
 8044 0196 1648     		ldr	r0, .L457+80
 8045 0198 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 8046              	.LVL515:
 8047 019c D5E7     		b	.L427
 8048              	.L458:
 8049 019e 00BF     		.align	2
 8050              	.L457:
 8051 01a0 00000000 		.word	.LANCHOR92
 8052 01a4 00000000 		.word	.LANCHOR93
 8053 01a8 00000000 		.word	.LANCHOR90
 8054 01ac 00000000 		.word	.LANCHOR95
 8055 01b0 00000000 		.word	.LANCHOR91
 8056 01b4 00000000 		.word	.LANCHOR94
 8057 01b8 00000000 		.word	.LANCHOR96
 8058 01bc 00000000 		.word	.LANCHOR97
 8059 01c0 00000000 		.word	.LANCHOR87
 8060 01c4 00000000 		.word	.LANCHOR107
 8061 01c8 00000000 		.word	.LANCHOR7
 8062 01cc 00000000 		.word	.LANCHOR110
 8063 01d0 00000000 		.word	.LANCHOR13
 8064 01d4 00000000 		.word	.LANCHOR0
 8065 01d8 00000000 		.word	.LANCHOR1
 8066 01dc 00000000 		.word	.LANCHOR109
 8067 01e0 00000000 		.word	.LANCHOR108
 8068 01e4 00000000 		.word	.LANCHOR106
 8069 01e8 00000000 		.word	.LANCHOR16
 8070 01ec 00000000 		.word	.LANCHOR12
 8071 01f0 00000000 		.word	.LANCHOR88
 8072              		.cfi_endproc
 8073              	.LFE4329:
 8075              		.section	.text._ZL13AudioCallbackPfS_j,"ax",%progbits
 8076              		.align	1
 8077              		.p2align 2,,3
 8078              		.syntax unified
 8079              		.thumb
 8080              		.thumb_func
 8081              		.fpu fpv5-d16
 8083              	_ZL13AudioCallbackPfS_j:
 8084              	.LVL516:
 8085              	.LFB4309:
 237:Veno-Echo.cpp **** 
 8086              		.loc 20 237 1 is_stmt 1 view -0
 8087              		.cfi_startproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 263


 8088              		@ args = 0, pretend = 0, frame = 72
 8089              		@ frame_needed = 0, uses_anonymous_args = 0
 248:Veno-Echo.cpp **** 
 8090              		.loc 20 248 1 view .LVU2260
 266:Veno-Echo.cpp **** 
 8091              		.loc 20 266 1 view .LVU2261
 266:Veno-Echo.cpp **** 
 8092              		.loc 20 266 9 is_stmt 0 view .LVU2262
 8093 0000 DFF894C0 		ldr	ip, .L576+8
 266:Veno-Echo.cpp **** 
 8094              		.loc 20 266 20 view .LVU2263
 8095 0004 DCF80030 		ldr	r3, [ip]
 237:Veno-Echo.cpp **** 
 8096              		.loc 20 237 1 view .LVU2264
 8097 0008 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8098              		.cfi_def_cfa_offset 36
 8099              		.cfi_offset 4, -36
 8100              		.cfi_offset 5, -32
 8101              		.cfi_offset 6, -28
 8102              		.cfi_offset 7, -24
 8103              		.cfi_offset 8, -20
 8104              		.cfi_offset 9, -16
 8105              		.cfi_offset 10, -12
 8106              		.cfi_offset 11, -8
 8107              		.cfi_offset 14, -4
 266:Veno-Echo.cpp **** 
 8108              		.loc 20 266 20 view .LVU2265
 8109 000c 0133     		adds	r3, r3, #1
 266:Veno-Echo.cpp **** 
 8110              		.loc 20 266 25 view .LVU2266
 8111 000e 204C     		ldr	r4, .L576
 237:Veno-Echo.cpp **** 
 8112              		.loc 20 237 1 view .LVU2267
 8113 0010 0646     		mov	r6, r0
 8114 0012 1546     		mov	r5, r2
 266:Veno-Echo.cpp **** 
 8115              		.loc 20 266 25 view .LVU2268
 8116 0014 84FB0302 		smull	r0, r2, r4, r3
 8117              	.LVL517:
 266:Veno-Echo.cpp **** 
 8118              		.loc 20 266 25 view .LVU2269
 8119 0018 DC17     		asrs	r4, r3, #31
 237:Veno-Echo.cpp **** 
 8120              		.loc 20 237 1 view .LVU2270
 8121 001a 0F46     		mov	r7, r1
 8122              	.LBB1601:
 8123              	.LBB1602:
 8124              	.LBB1603:
 8125              		.file 24 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Free Software Foundation; either version 3, or (at your option)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 264


   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** /** @file bits/atomic_base.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  Do not attempt to use it directly. @headername{atomic}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ATOMIC_BASE_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ATOMIC_BASE_H 1
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <stdint.h>
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/atomic_lockfree_defines.h>
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** namespace std _GLIBCXX_VISIBILITY(default)
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** {
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @defgroup atomics Atomics
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * Components for performing atomic operations.
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @{
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    */
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Enumeration for memory_order
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __cplusplus > 201703L
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum class memory_order : int
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       relaxed,
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       consume,
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acquire,
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       release,
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acq_rel,
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       seq_cst
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 265


  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_relaxed = memory_order::relaxed;
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_consume = memory_order::consume;
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acquire = memory_order::acquire;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_release = memory_order::release;
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acq_rel = memory_order::acq_rel;
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_seq_cst = memory_order::seq_cst;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   typedef enum memory_order
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_relaxed,
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_consume,
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acquire,
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_release,
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acq_rel,
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_seq_cst
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     } memory_order;
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum __memory_order_modifier
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_mask          = 0x0ffff,
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_modifier_mask = 0xffff0000,
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_acquire   = 0x10000,
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_release   = 0x20000
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator|(memory_order __m, __memory_order_modifier __mod)
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) | int(__mod));
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator&(memory_order __m, __memory_order_modifier __mod)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) & int(__mod));
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Drop release ordering as per [atomics.types.operations.req]/21
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order2(memory_order __m) noexcept
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return __m == memory_order_acq_rel ? memory_order_acquire
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __m == memory_order_release ? memory_order_relaxed : __m;
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order(memory_order __m) noexcept
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(__cmpexch_failure_order2(__m & __memory_order_mask)
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       | __memory_order_modifier(__m & __memory_order_modifier_mask));
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_thread_fence(memory_order __m) noexcept
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_thread_fence(int(__m)); }
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 266


 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_signal_fence(memory_order __m) noexcept
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_signal_fence(int(__m)); }
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// kill_dependency
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     inline _Tp
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     kill_dependency(_Tp __y) noexcept
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _Tp __ret(__y);
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __ret;
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Base types for atomics.
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _IntTp>
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base;
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_VAR_INIT(_VI) { _VI }
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic;
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic<_Tp*>;
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     /* The target's "set" value for test-and-set may not be exactly 1.  */
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __GCC_ATOMIC_TEST_AND_SET_TRUEVAL == 1
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef bool __atomic_flag_data_type;
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef unsigned char __atomic_flag_data_type;
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  @brief Base type for atomic_flag.
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  Base type is POD with data, allowing atomic_flag to derive from
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  it and meet the standard layout type requirement. In addition to
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  compatibility with a C interface, this allows different
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  implementations of atomic_flag to use the same atomic operation
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  functions, via a standard conversion to the __atomic_flag_base
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  argument.
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   */
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_BEGIN_EXTERN_C
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct __atomic_flag_base
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     __atomic_flag_data_type _M_i;
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_END_EXTERN_C
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_FLAG_INIT { 0 }
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// atomic_flag
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct atomic_flag : public __atomic_flag_base
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 267


 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag() noexcept = default;
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     ~atomic_flag() noexcept = default;
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag(const atomic_flag&) = delete;
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) = delete;
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) volatile = delete;
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     // Conversion to ATOMIC_FLAG_INIT.
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     constexpr atomic_flag(bool __i) noexcept
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __atomic_flag_base{ _S_init(__i) }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { }
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) noexcept
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) volatile noexcept
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) noexcept
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) volatile noexcept
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   private:
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     static constexpr __atomic_flag_data_type
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _S_init(bool __i)
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { return __i ? __GCC_ATOMIC_TEST_AND_SET_TRUEVAL : 0; }
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Base class for atomic integrals.
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // For each of the integral types, define atomic_[integral type] struct
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 268


 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_bool     bool
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char     char
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_schar    signed char
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uchar    unsigned char
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_short    short
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ushort   unsigned short
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_int      int
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uint     unsigned int
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_long     long
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ulong    unsigned long
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_llong    long long
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ullong   unsigned long long
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char8_t  char8_t
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char16_t char16_t
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char32_t char32_t
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_wchar_t  wchar_t
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // NB: Assuming _ITp is an integral scalar type that is 1, 2, 4, or
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // 8 bytes, since that is what GCC built-in functions for atomic
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // memory access expect.
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _ITp>
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using value_type = _ITp;
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using difference_type = value_type;
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     private:
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       typedef _ITp 	__int_type;
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       static constexpr int _S_alignment =
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	sizeof(_ITp) > alignof(_ITp) ? sizeof(_ITp) : alignof(_ITp);
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       alignas(_S_alignment) __int_type _M_i;
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     public:
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base() noexcept = default;
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       ~__atomic_base() noexcept = default;
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base(const __atomic_base&) = delete;
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) = delete;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) volatile = delete;
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       // Requires __int_type convertible to _M_i.
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       constexpr __atomic_base(__int_type __i) noexcept : _M_i (__i) { }
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const noexcept
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const volatile noexcept
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) noexcept
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 269


 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) volatile noexcept
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) noexcept
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) volatile noexcept
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) noexcept
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) volatile noexcept
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() noexcept
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() volatile noexcept
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() noexcept
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() volatile noexcept
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) noexcept
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) volatile noexcept
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) noexcept
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) volatile noexcept
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) noexcept
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 270


 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) volatile noexcept
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) noexcept
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) volatile noexcept
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) noexcept
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) volatile noexcept
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const noexcept
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const volatile noexcept
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i, memory_order __m = memory_order_seq_cst) noexcept
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i,
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    memory_order __m = memory_order_seq_cst) volatile noexcept
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 271


 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE __int_type
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       load(memory_order __m = memory_order_seq_cst) const noexcept
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_release);
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_load_n(&_M_i, int(__m));
 8126              		.loc 24 419 24 view .LVU2271
 8127 001c 1D49     		ldr	r1, .L576+4
 8128              	.LVL518:
 8129              		.loc 24 419 24 view .LVU2272
 8130              	.LBE1603:
 8131              	.LBE1602:
 8132              	.LBE1601:
 266:Veno-Echo.cpp **** 
 8133              		.loc 20 266 25 view .LVU2273
 8134 001e 1A44     		add	r2, r2, r3
 8135 0020 C4EBE204 		rsb	r4, r4, r2, asr #3
 8136 0024 C4EB0414 		rsb	r4, r4, r4, lsl #4
 8137 0028 1B1B     		subs	r3, r3, r4
 237:Veno-Echo.cpp **** 
 8138              		.loc 20 237 1 view .LVU2274
 8139 002a 2DED0E8B 		vpush.64	{d8, d9, d10, d11, d12, d13, d14}
 8140              		.cfi_def_cfa_offset 92
 8141              		.cfi_offset 80, -92
 8142              		.cfi_offset 81, -88
 8143              		.cfi_offset 82, -84
 8144              		.cfi_offset 83, -80
 8145              		.cfi_offset 84, -76
 8146              		.cfi_offset 85, -72
 8147              		.cfi_offset 86, -68
 8148              		.cfi_offset 87, -64
 8149              		.cfi_offset 88, -60
 8150              		.cfi_offset 89, -56
 8151              		.cfi_offset 90, -52
 8152              		.cfi_offset 91, -48
 8153              		.cfi_offset 92, -44
 8154              		.cfi_offset 93, -40
 266:Veno-Echo.cpp **** 
 8155              		.loc 20 266 9 view .LVU2275
 8156 002e CCF80030 		str	r3, [ip]
 268:Veno-Echo.cpp **** {
 8157              		.loc 20 268 1 is_stmt 1 view .LVU2276
 8158              	.LVL519:
 8159              	.LBB1608:
 8160              	.LBI1601:
 8161              		.file 25 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This file is part of the GNU ISO C++ Library.  This library is free
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 272


   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** /** @file include/atomic
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  *  This is a Standard C++ Library header.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  */
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Based on "C++ Atomic Types and Operations" by Hans Boehm and Lawrence Crowl.
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2427.html
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #ifndef _GLIBCXX_ATOMIC
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #define _GLIBCXX_ATOMIC 1
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #pragma GCC system_header
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus < 201103L
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # include <bits/c++0x_warning.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #else
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/atomic_base.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/move.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** namespace std _GLIBCXX_VISIBILITY(default)
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** {
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /**
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @addtogroup atomics
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @{
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    */
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus >= 201703L
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # define __cpp_lib_atomic_is_always_lock_free 201603
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #endif
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<typename _Tp>
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     struct atomic;
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /// atomic<bool>
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   // NB: No operators or fetch-operations for this type.
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 273


  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   struct atomic<bool>
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   {
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     using value_type = bool;
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   private:
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     __atomic_base<bool>	_M_base;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   public:
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic() noexcept = default;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     ~atomic() noexcept = default;
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic(const atomic&) = delete;
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) = delete;
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) volatile = delete;
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     constexpr atomic(bool __i) noexcept : _M_base(__i) { }
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) noexcept
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) volatile noexcept
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator bool() const noexcept
 8162              		.loc 25 87 5 view .LVU2277
 8163              	.LBE1608:
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.load(); }
 8164              		.loc 25 88 7 view .LVU2278
 8165              	.LBB1609:
 8166              	.LBB1606:
 8167              	.LBI1602:
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8168              		.loc 24 413 7 view .LVU2279
 8169              	.LBB1604:
 8170              		.loc 24 419 24 is_stmt 0 view .LVU2280
 8171 0032 BFF35B8F 		dmb	ish
 8172 0036 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 8173              	.LBE1604:
 8174              	.LBE1606:
 8175              	.LBE1609:
 237:Veno-Echo.cpp **** 
 8176              		.loc 20 237 1 view .LVU2281
 8177 0038 93B0     		sub	sp, sp, #76
 8178              		.cfi_def_cfa_offset 168
 8179              	.LBB1610:
 8180              	.LBB1607:
 8181              	.LBB1605:
 8182              		.loc 24 419 24 view .LVU2282
 8183 003a BFF35B8F 		dmb	ish
 8184              	.LBE1605:
 8185              	.LBE1607:
 8186              	.LBE1610:
 268:Veno-Echo.cpp **** {
 8187              		.loc 20 268 1 view .LVU2283
 8188 003e B3B9     		cbnz	r3, .L460
 281:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 274


 8189              		.loc 20 281 9 is_stmt 1 view .LVU2284
 8190 0040 DCF80030 		ldr	r3, [ip]
 8191 0044 0E2B     		cmp	r3, #14
 8192 0046 12D8     		bhi	.L460
 8193 0048 DFE813F0 		tbh	[pc, r3, lsl #1]
 8194              	.L462:
 8195 004c 2606     		.2byte	(.L476-.L462)/2
 8196 004e 1D06     		.2byte	(.L475-.L462)/2
 8197 0050 1906     		.2byte	(.L474-.L462)/2
 8198 0052 1006     		.2byte	(.L473-.L462)/2
 8199 0054 0C06     		.2byte	(.L472-.L462)/2
 8200 0056 0306     		.2byte	(.L471-.L462)/2
 8201 0058 FF05     		.2byte	(.L470-.L462)/2
 8202 005a F605     		.2byte	(.L469-.L462)/2
 8203 005c F205     		.2byte	(.L468-.L462)/2
 8204 005e E905     		.2byte	(.L467-.L462)/2
 8205 0060 E505     		.2byte	(.L466-.L462)/2
 8206 0062 DC05     		.2byte	(.L465-.L462)/2
 8207 0064 D805     		.2byte	(.L464-.L462)/2
 8208 0066 0F00     		.2byte	(.L463-.L462)/2
 8209 0068 D405     		.2byte	(.L461-.L462)/2
 8210              		.p2align 1
 8211              	.L463:
 336:Veno-Echo.cpp ****                 Update_crossfeedback();
 8212              		.loc 20 336 13 view .LVU2285
 337:Veno-Echo.cpp ****             break;
 8213              		.loc 20 337 17 view .LVU2286
 337:Veno-Echo.cpp ****             break;
 8214              		.loc 20 337 37 is_stmt 0 view .LVU2287
 8215 006a FFF7FEFF 		bl	_Z20Update_crossfeedbackv
 8216              	.LVL520:
 338:Veno-Echo.cpp **** 
 8217              		.loc 20 338 13 is_stmt 1 view .LVU2288
 8218              	.L460:
 8219              	.LBB1611:
 346:Veno-Echo.cpp ****     {   
 8220              		.loc 20 346 25 discriminator 1 view .LVU2289
 8221 006e 002D     		cmp	r5, #0
 8222 0070 00F0A885 		beq	.L459
 346:Veno-Echo.cpp ****     {   
 8223              		.loc 20 346 25 is_stmt 0 view .LVU2290
 8224 0074 0023     		movs	r3, #0
 8225 0076 013D     		subs	r5, r5, #1
 8226              	.LVL521:
 346:Veno-Echo.cpp ****     {   
 8227              		.loc 20 346 25 view .LVU2291
 8228 0078 DFF82080 		ldr	r8, .L576+12
 8229 007c B346     		mov	fp, r6
 8230 007e 0293     		str	r3, [sp, #8]
 8231 0080 25F00103 		bic	r3, r5, #1
 8232 0084 DFF81890 		ldr	r9, .L576+16
 8233 0088 0097     		str	r7, [sp]
 8234 008a 0593     		str	r3, [sp, #20]
 8235 008c 8FE0     		b	.L532
 8236              	.L577:
 8237 008e 00BF     		.align	2
 8238              	.L576:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 275


 8239 0090 89888888 		.word	-2004318071
 8240 0094 00000000 		.word	.LANCHOR112
 8241 0098 00000000 		.word	.LANCHOR111
 8242 009c 00000000 		.word	.LANCHOR127
 8243 00a0 00000000 		.word	.LANCHOR128
 8244              	.LVL522:
 8245              	.L575:
 8246              	.LBB1612:
 8247              	.LBB1613:
 8248              	.LBB1614:
1845:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8249              		.loc 20 1845 10 is_stmt 1 view .LVU2292
 8250 00a4 F8EE007A 		vmov.f32	s15, #-2.0e+0
1846:Veno-Echo.cpp ****     else
 8251              		.loc 20 1846 19 is_stmt 0 view .LVU2293
 8252 00a8 B4EE678A 		vcmp.f32	s16, s15
 8253 00ac F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8254 00b0 48BF     		it	mi
 8255 00b2 B0EE678A 		vmovmi.f32	s16, s15
 8256              	.LVL523:
 8257              	.L514:
1850:Veno-Echo.cpp **** }
 8258              		.loc 20 1850 5 is_stmt 1 view .LVU2294
1850:Veno-Echo.cpp **** }
 8259              		.loc 20 1850 5 is_stmt 0 view .LVU2295
 8260              	.LBE1614:
 8261              	.LBE1613:
 487:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8262              		.loc 20 487 9 is_stmt 1 view .LVU2296
 487:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8263              		.loc 20 487 42 is_stmt 0 view .LVU2297
 8264 00b6 D848     		ldr	r0, .L578
 8265 00b8 FFF7FEFF 		bl	_ZN7daisysp7DcBlock7ProcessEf
 8266              	.LVL524:
 487:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8267              		.loc 20 487 21 view .LVU2298
 8268 00bc 11A9     		add	r1, sp, #68
 8269 00be D748     		ldr	r0, .L578+4
 487:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8270              		.loc 20 487 42 view .LVU2299
 8271 00c0 8DED110A 		vstr.32	s0, [sp, #68]
 487:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8272              		.loc 20 487 21 view .LVU2300
 8273 00c4 FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 8274              	.LVL525:
 488:Veno-Echo.cpp **** 
 8275              		.loc 20 488 9 is_stmt 1 view .LVU2301
 488:Veno-Echo.cpp **** 
 8276              		.loc 20 488 42 is_stmt 0 view .LVU2302
 8277 00c8 D548     		ldr	r0, .L578+8
 8278 00ca B0EE480A 		vmov.f32	s0, s16
 8279 00ce FFF7FEFF 		bl	_ZN7daisysp7DcBlock7ProcessEf
 8280              	.LVL526:
 488:Veno-Echo.cpp **** 
 8281              		.loc 20 488 21 view .LVU2303
 8282 00d2 11A9     		add	r1, sp, #68
 8283 00d4 D348     		ldr	r0, .L578+12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 276


 488:Veno-Echo.cpp **** 
 8284              		.loc 20 488 42 view .LVU2304
 8285 00d6 8DED110A 		vstr.32	s0, [sp, #68]
 488:Veno-Echo.cpp **** 
 8286              		.loc 20 488 21 view .LVU2305
 8287 00da FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 8288              	.LVL527:
 491:Veno-Echo.cpp ****         float mixR;
 8289              		.loc 20 491 9 is_stmt 1 view .LVU2306
 492:Veno-Echo.cpp **** 
 8290              		.loc 20 492 9 view .LVU2307
 494:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 8291              		.loc 20 494 9 view .LVU2308
 494:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 8292              		.loc 20 494 53 is_stmt 0 view .LVU2309
 8293 00de 09AA     		add	r2, sp, #36
 8294 00e0 08A9     		add	r1, sp, #32
 8295 00e2 D148     		ldr	r0, .L578+16
 8296 00e4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 8297              	.LVL528:
 495:Veno-Echo.cpp **** 
 8298              		.loc 20 495 53 view .LVU2310
 8299 00e8 08AA     		add	r2, sp, #32
 8300 00ea 09A9     		add	r1, sp, #36
 8301 00ec CE48     		ldr	r0, .L578+16
 494:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 8302              		.loc 20 494 81 view .LVU2311
 8303 00ee 8DED0A0A 		vstr.32	s0, [sp, #40]
 495:Veno-Echo.cpp **** 
 8304              		.loc 20 495 9 is_stmt 1 view .LVU2312
 495:Veno-Echo.cpp **** 
 8305              		.loc 20 495 53 is_stmt 0 view .LVU2313
 8306 00f2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 8307              	.LVL529:
 8308              	.LBB1616:
 8309              	.LBB1617:
1843:Veno-Echo.cpp ****         returnval = limit;
 8310              		.loc 20 1843 5 view .LVU2314
 8311 00f6 B0EE007A 		vmov.f32	s14, #2.0e+0
 8312              	.LBE1617:
 8313              	.LBE1616:
 498:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 8314              		.loc 20 498 38 view .LVU2315
 8315 00fa DDED0A7A 		vldr.32	s15, [sp, #40]
 498:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 8316              		.loc 20 498 9 is_stmt 1 view .LVU2316
 8317              	.LVL530:
 8318              	.LBB1620:
 8319              	.LBI1616:
1840:Veno-Echo.cpp **** {
 8320              		.loc 20 1840 7 view .LVU2317
 8321              	.LBB1618:
1842:Veno-Echo.cpp ****     if (input > limit)
 8322              		.loc 20 1842 5 view .LVU2318
1843:Veno-Echo.cpp ****         returnval = limit;
 8323              		.loc 20 1843 5 view .LVU2319
 8324 00fe F4EEC77A 		vcmpe.f32	s15, s14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 277


 8325 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8326 0106 00F30285 		bgt	.L544
1845:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8327              		.loc 20 1845 10 view .LVU2320
 8328 010a B8EE007A 		vmov.f32	s14, #-2.0e+0
1846:Veno-Echo.cpp ****     else
 8329              		.loc 20 1846 19 is_stmt 0 view .LVU2321
 8330 010e F4EE477A 		vcmp.f32	s15, s14
 8331 0112 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8332 0116 48BF     		it	mi
 8333 0118 F0EE477A 		vmovmi.f32	s15, s14
 8334              	.LVL531:
 8335              	.L516:
1850:Veno-Echo.cpp **** }
 8336              		.loc 20 1850 5 is_stmt 1 view .LVU2322
1850:Veno-Echo.cpp **** }
 8337              		.loc 20 1850 5 is_stmt 0 view .LVU2323
 8338              	.LBE1618:
 8339              	.LBE1620:
 8340              	.LBB1621:
 8341              	.LBB1622:
1843:Veno-Echo.cpp ****         returnval = limit;
 8342              		.loc 20 1843 5 view .LVU2324
 8343 011c B0EE007A 		vmov.f32	s14, #2.0e+0
 8344              	.LBE1622:
 8345              	.LBE1621:
 498:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 8346              		.loc 20 498 27 view .LVU2325
 8347 0120 CDED0A7A 		vstr.32	s15, [sp, #40]
 499:Veno-Echo.cpp **** 
 8348              		.loc 20 499 9 is_stmt 1 view .LVU2326
 8349              	.LVL532:
 8350              	.LBB1626:
 8351              	.LBI1621:
1840:Veno-Echo.cpp **** {
 8352              		.loc 20 1840 7 view .LVU2327
 8353              	.LBB1623:
1842:Veno-Echo.cpp ****     if (input > limit)
 8354              		.loc 20 1842 5 view .LVU2328
1843:Veno-Echo.cpp ****         returnval = limit;
 8355              		.loc 20 1843 5 view .LVU2329
 8356 0124 B4EEC70A 		vcmpe.f32	s0, s14
 8357 0128 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8358 012c 00F35784 		bgt	.L545
1845:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8359              		.loc 20 1845 10 view .LVU2330
 8360 0130 B8EE007A 		vmov.f32	s14, #-2.0e+0
 8361              	.LBE1623:
 8362              	.LBE1626:
 8363              	.LBB1627:
 501:Veno-Echo.cpp **** {
 8364              		.loc 20 501 1 is_stmt 0 view .LVU2331
 8365 0134 BD4B     		ldr	r3, .L578+20
 8366 0136 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8367              	.LBE1627:
 8368              	.LBB1649:
 8369              	.LBB1624:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 278


1846:Veno-Echo.cpp ****     else
 8370              		.loc 20 1846 19 view .LVU2332
 8371 0138 B4EE470A 		vcmp.f32	s0, s14
 8372 013c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8373 0140 48BF     		it	mi
 8374 0142 B0EE470A 		vmovmi.f32	s0, s14
 8375              	.LVL533:
1850:Veno-Echo.cpp **** }
 8376              		.loc 20 1850 5 is_stmt 1 view .LVU2333
1850:Veno-Echo.cpp **** }
 8377              		.loc 20 1850 5 is_stmt 0 view .LVU2334
 8378              	.LBE1624:
 8379              	.LBE1649:
 499:Veno-Echo.cpp **** 
 8380              		.loc 20 499 27 view .LVU2335
 8381 0146 8DED0B0A 		vstr.32	s0, [sp, #44]
 501:Veno-Echo.cpp **** {
 8382              		.loc 20 501 1 is_stmt 1 view .LVU2336
 8383              	.LBB1650:
 8384 014a 002B     		cmp	r3, #0
 8385 014c 40F05084 		bne	.L572
 8386              	.LVL534:
 8387              	.L520:
 501:Veno-Echo.cpp **** {
 8388              		.loc 20 501 1 is_stmt 0 view .LVU2337
 8389              	.LBE1650:
 542:Veno-Echo.cpp ****         {
 8390              		.loc 20 542 9 is_stmt 1 view .LVU2338
 542:Veno-Echo.cpp ****         {
 8391              		.loc 20 542 19 is_stmt 0 view .LVU2339
 8392 0150 B74B     		ldr	r3, .L578+24
 542:Veno-Echo.cpp ****         {
 8393              		.loc 20 542 9 view .LVU2340
 8394 0152 F6EE006A 		vmov.f32	s13, #5.0e-1
 542:Veno-Echo.cpp ****         {
 8395              		.loc 20 542 19 view .LVU2341
 8396 0156 93ED007A 		vldr.32	s14, [r3]
 542:Veno-Echo.cpp ****         {
 8397              		.loc 20 542 9 view .LVU2342
 8398 015a B4EEE67A 		vcmpe.f32	s14, s13
 8399 015e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8400 0162 40F12A84 		bpl	.L566
 544:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8401              		.loc 20 544 13 is_stmt 1 view .LVU2343
 544:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8402              		.loc 20 544 34 is_stmt 0 view .LVU2344
 8403 0166 37EE077A 		vadd.f32	s14, s14, s14
 544:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8404              		.loc 20 544 18 view .LVU2345
 8405 016a 9BED006A 		vldr.32	s12, [fp]
 545:Veno-Echo.cpp ****         }
 8406              		.loc 20 545 18 view .LVU2346
 8407 016e DBED016A 		vldr.32	s13, [fp, #4]
 544:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8408              		.loc 20 544 18 view .LVU2347
 8409 0172 A7EE276A 		vfma.f32	s12, s14, s15
 545:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 279


 8410              		.loc 20 545 18 view .LVU2348
 8411 0176 E7EE006A 		vfma.f32	s13, s14, s0
 544:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8412              		.loc 20 544 18 view .LVU2349
 8413 017a F0EE467A 		vmov.f32	s15, s12
 8414              	.LVL535:
 545:Veno-Echo.cpp ****         }
 8415              		.loc 20 545 13 is_stmt 1 view .LVU2350
 545:Veno-Echo.cpp ****         }
 8416              		.loc 20 545 18 is_stmt 0 view .LVU2351
 8417 017e B0EE660A 		vmov.f32	s0, s13
 8418              	.LVL536:
 8419              	.L526:
 559:Veno-Echo.cpp ****         {
 8420              		.loc 20 559 9 is_stmt 1 view .LVU2352
 8421 0182 AC4B     		ldr	r3, .L578+28
 8422 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8423 0186 002B     		cmp	r3, #0
 8424 0188 00F01084 		beq	.L529
 561:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 8425              		.loc 20 561 13 view .LVU2353
 561:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 8426              		.loc 20 561 20 is_stmt 0 view .LVU2354
 8427 018c 0023     		movs	r3, #0
 8428 018e 009A     		ldr	r2, [sp]
 8429 0190 1360     		str	r3, [r2]	@ float
 562:Veno-Echo.cpp ****         }
 8430              		.loc 20 562 13 is_stmt 1 view .LVU2355
 562:Veno-Echo.cpp ****         }
 8431              		.loc 20 562 22 is_stmt 0 view .LVU2356
 8432 0192 5360     		str	r3, [r2, #4]	@ float
 8433              	.L530:
 8434              	.LBE1612:
 346:Veno-Echo.cpp ****     {   
 8435              		.loc 20 346 5 is_stmt 1 discriminator 2 view .LVU2357
 8436 0194 009B     		ldr	r3, [sp]
 8437 0196 0BF1080B 		add	fp, fp, #8
 346:Veno-Echo.cpp ****     {   
 8438              		.loc 20 346 35 is_stmt 0 discriminator 2 view .LVU2358
 8439 019a 029A     		ldr	r2, [sp, #8]
 346:Veno-Echo.cpp ****     {   
 8440              		.loc 20 346 25 discriminator 2 view .LVU2359
 8441 019c 0599     		ldr	r1, [sp, #20]
 8442 019e 0833     		adds	r3, r3, #8
 8443 01a0 8A42     		cmp	r2, r1
 8444 01a2 0093     		str	r3, [sp]
 346:Veno-Echo.cpp ****     {   
 8445              		.loc 20 346 35 discriminator 2 view .LVU2360
 8446 01a4 02F10203 		add	r3, r2, #2
 8447              	.LVL537:
 346:Veno-Echo.cpp ****     {   
 8448              		.loc 20 346 25 is_stmt 1 discriminator 2 view .LVU2361
 8449 01a8 00F00C85 		beq	.L459
 8450 01ac 0293     		str	r3, [sp, #8]
 8451              	.LVL538:
 8452              	.L532:
 8453              	.LBB1986:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 280


 348:Veno-Echo.cpp ****         Update_Mod();
 8454              		.loc 20 348 9 view .LVU2362
 348:Veno-Echo.cpp ****         Update_Mod();
 8455              		.loc 20 348 20 is_stmt 0 view .LVU2363
 8456 01ae FFF7FEFF 		bl	_Z11UpdateClockv
 8457              	.LVL539:
 349:Veno-Echo.cpp **** 
 8458              		.loc 20 349 9 is_stmt 1 view .LVU2364
 8459              	.LBB1651:
 8460              	.LBB1652:
 8461              	.LBB1653:
 8462              	.LBB1654:
  74:delayline_reverse.h **** 
  75:delayline_reverse.h ****     /** sets the delay time in samples
  76:delayline_reverse.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  77:delayline_reverse.h ****     */
  78:delayline_reverse.h ****     inline void SetDelay1(float delay)
  79:delayline_reverse.h ****     {
  80:delayline_reverse.h ****         int32_t int_delay = static_cast<int32_t>(delay);
  81:delayline_reverse.h ****         frac1_             = delay - static_cast<float>(int_delay);
  82:delayline_reverse.h ****         delay1_ = static_cast<size_t>(int_delay) < max_size ? int_delay
  83:delayline_reverse.h ****                                                            : max_size - 1;
  84:delayline_reverse.h ****     }
  85:delayline_reverse.h **** 
  86:delayline_reverse.h ****     /** writes the sample of type T to the delay line, and advances the write ptr
  87:delayline_reverse.h ****     */
  88:delayline_reverse.h ****     inline void Write(const T sample)
  89:delayline_reverse.h ****     {
  90:delayline_reverse.h ****         line_[write_ptr_] = sample;
  91:delayline_reverse.h ****         //advance write ptr in forward direction
  92:delayline_reverse.h ****         write_ptr_        = (write_ptr_ + 1 + max_size) % max_size; //increment forwards
  93:delayline_reverse.h ****         
  94:delayline_reverse.h ****         //increment head difference
  95:delayline_reverse.h ****         headDiff_        = (headDiff_ + 1 + delay1_) % delay1_;   
  96:delayline_reverse.h **** 
  97:delayline_reverse.h ****         //advance read ptrs in reverse direction
  98:delayline_reverse.h ****         read_ptr1_ = (read_ptr1_ - 1 + max_size) % max_size;
  99:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 100:delayline_reverse.h ****  
 101:delayline_reverse.h ****         if (headDiff_ > (delay1_ - fadetime - 1))  //start cross fade region
 102:delayline_reverse.h ****         {
 103:delayline_reverse.h ****             if(!fading_)
 104:delayline_reverse.h ****             {
 105:delayline_reverse.h ****                 fading_ = true; //start fading
 106:delayline_reverse.h ****                 
 107:delayline_reverse.h ****                 if(!playinghead_) 
 108:delayline_reverse.h ****                 {
 109:delayline_reverse.h ****                     //jump ptr2 to fadetime beyond write position
 110:delayline_reverse.h ****                     read_ptr2_ = write_ptr_ - 1;
 111:delayline_reverse.h ****                 }
 112:delayline_reverse.h ****     
 113:delayline_reverse.h ****                 else
 114:delayline_reverse.h ****                 {
 115:delayline_reverse.h ****                     //jump ptr1 to fadetime beyond write position
 116:delayline_reverse.h ****                     read_ptr1_ = write_ptr_ - 1; 
 117:delayline_reverse.h ****                 }
 118:delayline_reverse.h ****             }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 281


 119:delayline_reverse.h **** 
 120:delayline_reverse.h ****             else
 121:delayline_reverse.h ****             {
 122:delayline_reverse.h ****                 //continue fading
 123:delayline_reverse.h ****             }
 124:delayline_reverse.h ****         }
 125:delayline_reverse.h **** 
 126:delayline_reverse.h ****         if(fading_)
 127:delayline_reverse.h ****         {
 128:delayline_reverse.h ****             if(!playinghead_)   //head1 playing
 129:delayline_reverse.h ****             {
 130:delayline_reverse.h ****                 fadepos_ = fadepos_ + (1.0f / (fadetime) ); //increment up to 1.
 131:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 132:delayline_reverse.h ****                 {
 133:delayline_reverse.h ****                     fadepos_ = 1.0f;
 134:delayline_reverse.h ****                     fading_ = false;    //stop fading
 135:delayline_reverse.h ****                     playinghead_ = true;
 136:delayline_reverse.h ****                 }
 137:delayline_reverse.h ****             }
 138:delayline_reverse.h **** 
 139:delayline_reverse.h ****             else    //head2 playing
 140:delayline_reverse.h ****             {
 141:delayline_reverse.h ****                 fadepos_ = fadepos_ - (1.0f / (fadetime) ); //increment down to 0
 142:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 143:delayline_reverse.h ****                 {
 144:delayline_reverse.h ****                     fadepos_ = 0.0f;
 145:delayline_reverse.h ****                     fading_ = false;    //stop fading
 146:delayline_reverse.h ****                     playinghead_ = false;
 147:delayline_reverse.h ****                 }
 148:delayline_reverse.h ****             }
 149:delayline_reverse.h ****         }
 150:delayline_reverse.h ****         else    //not fading
 151:delayline_reverse.h ****         {
 152:delayline_reverse.h ****         }
 153:delayline_reverse.h **** 
 154:delayline_reverse.h ****         
 155:delayline_reverse.h ****     }
 156:delayline_reverse.h **** 
 157:delayline_reverse.h ****     /** returns the next sample of type T in the delay line, interpolated if necessary.
 158:delayline_reverse.h ****     */
 159:delayline_reverse.h ****     inline const T ReadRev() const
 160:delayline_reverse.h ****     {
 161:delayline_reverse.h ****         T a1 = line_[read_ptr1_];
 162:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 163:delayline_reverse.h **** 
 164:delayline_reverse.h ****         float read1 = a1;
 165:delayline_reverse.h ****         float read2 = a2;
 166:delayline_reverse.h **** 
 167:delayline_reverse.h ****         float scalar_1, scalar_2;
 168:delayline_reverse.h **** 
 169:delayline_reverse.h ****         //hann
 170:delayline_reverse.h ****         //scalar_1 = sinf(fadepos_ * ((float)M_PI * 0.5f));
 171:delayline_reverse.h ****         //scalar_2 = sinf((1.0f - fadepos_) * ((float)M_PI * 0.5f));
 172:delayline_reverse.h **** 
 173:delayline_reverse.h ****         //flattenned hann
 174:delayline_reverse.h ****         scalar_1 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*fadepos_)  +   (1.0f/16.0f)*s
 8463              		.loc 19 174 71 is_stmt 0 view .LVU2365
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 282


 8464 01b2 DFF808A3 		ldr	r10, .L578+164
 8465              	.LBE1654:
 8466              	.LBE1653:
 8467              	.LBE1652:
 8468              	.LBE1651:
 349:Veno-Echo.cpp **** 
 8469              		.loc 20 349 19 view .LVU2366
 8470 01b6 FFF7FEFF 		bl	_Z10Update_Modv
 8471              	.LVL540:
 352:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 8472              		.loc 20 352 9 is_stmt 1 view .LVU2367
 352:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 8473              		.loc 20 352 51 is_stmt 0 view .LVU2368
 8474 01ba 9F48     		ldr	r0, .L578+32
 8475 01bc FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8476              	.LVL541:
 8477 01c0 0146     		mov	r1, r0
 8478 01c2 9E48     		ldr	r0, .L578+36
 8479              	.LBB1706:
 8480              	.LBB1689:
 8481              	.LBB1672:
 8482              	.LBB1655:
 175:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8483              		.loc 19 175 77 view .LVU2369
 8484 01c4 F7EE00AA 		vmov.f32	s21, #1.0e+0
 8485              	.LBE1655:
 8486              	.LBE1672:
 8487              	.LBE1689:
 8488              	.LBE1706:
 352:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 8489              		.loc 20 352 51 view .LVU2370
 8490 01c8 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 8491              	.LVL542:
 353:Veno-Echo.cpp ****         
 8492              		.loc 20 353 51 view .LVU2371
 8493 01cc 9C48     		ldr	r0, .L578+40
 352:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 8494              		.loc 20 352 51 view .LVU2372
 8495 01ce F0EE40BA 		vmov.f32	s23, s0
 8496              	.LVL543:
 353:Veno-Echo.cpp ****         
 8497              		.loc 20 353 9 is_stmt 1 view .LVU2373
 353:Veno-Echo.cpp ****         
 8498              		.loc 20 353 51 is_stmt 0 view .LVU2374
 8499 01d2 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8500              	.LVL544:
 353:Veno-Echo.cpp ****         
 8501              		.loc 20 353 51 view .LVU2375
 8502 01d6 0146     		mov	r1, r0
 8503 01d8 9A48     		ldr	r0, .L578+44
 8504 01da FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 8505              	.LVL545:
 355:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8506              		.loc 20 355 44 view .LVU2376
 8507 01de 9A48     		ldr	r0, .L578+48
 353:Veno-Echo.cpp ****         
 8508              		.loc 20 353 51 view .LVU2377
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 283


 8509 01e0 B0EE409A 		vmov.f32	s18, s0
 8510              	.LVL546:
 355:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8511              		.loc 20 355 9 is_stmt 1 view .LVU2378
 355:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8512              		.loc 20 355 44 is_stmt 0 view .LVU2379
 8513 01e4 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8514              	.LVL547:
 355:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8515              		.loc 20 355 44 view .LVU2380
 8516 01e8 0146     		mov	r1, r0
 8517 01ea 9848     		ldr	r0, .L578+52
 8518 01ec FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 8519              	.LVL548:
 356:Veno-Echo.cpp **** 
 8520              		.loc 20 356 44 view .LVU2381
 8521 01f0 9748     		ldr	r0, .L578+56
 355:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8522              		.loc 20 355 44 view .LVU2382
 8523 01f2 B0EE408A 		vmov.f32	s16, s0
 8524              	.LVL549:
 356:Veno-Echo.cpp **** 
 8525              		.loc 20 356 9 is_stmt 1 view .LVU2383
 356:Veno-Echo.cpp **** 
 8526              		.loc 20 356 44 is_stmt 0 view .LVU2384
 8527 01f6 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8528              	.LVL550:
 356:Veno-Echo.cpp **** 
 8529              		.loc 20 356 44 view .LVU2385
 8530 01fa 0146     		mov	r1, r0
 8531 01fc 9548     		ldr	r0, .L578+60
 8532 01fe FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 8533              	.LVL551:
 8534              	.LBB1707:
 8535              	.LBB1708:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8536              		.loc 10 60 42 view .LVU2386
 8537 0202 9548     		ldr	r0, .L578+64
 8538              	.LBE1708:
 8539              	.LBE1707:
 379:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 8540              		.loc 20 379 49 view .LVU2387
 8541 0204 954B     		ldr	r3, .L578+68
 356:Veno-Echo.cpp **** 
 8542              		.loc 20 356 44 view .LVU2388
 8543 0206 F0EE407A 		vmov.f32	s15, s0
 8544              	.LVL552:
 359:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 8545              		.loc 20 359 9 is_stmt 1 view .LVU2389
 8546              	.LBB1710:
 8547              	.LBI1707:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8548              		.loc 10 60 17 view .LVU2390
 8549              	.LBB1709:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8550              		.loc 10 60 37 view .LVU2391
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 284


 8551              		.loc 10 60 42 is_stmt 0 view .LVU2392
 8552 020a C0ED00BA 		vstr.32	s23, [r0]
 8553              	.LVL553:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8554              		.loc 10 60 42 view .LVU2393
 8555              	.LBE1709:
 8556              	.LBE1710:
 360:Veno-Echo.cpp ****         
 8557              		.loc 20 360 9 is_stmt 1 view .LVU2394
 8558              	.LBB1711:
 8559              	.LBI1711:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8560              		.loc 10 60 17 view .LVU2395
 8561              	.LBB1712:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8562              		.loc 10 60 37 view .LVU2396
 8563              	.LBE1712:
 8564              	.LBE1711:
 8565              	.LBB1715:
 8566              	.LBB1690:
 8567              	.LBB1673:
 8568              	.LBB1656:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8569              		.loc 19 174 82 is_stmt 0 view .LVU2397
 8570 020e F6EE028A 		vmov.f32	s17, #5.625e-1
 8571              	.LBE1656:
 8572              	.LBE1673:
 8573              	.LBE1690:
 8574              	.LBE1715:
 8575              	.LBB1716:
 8576              	.LBB1713:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8577              		.loc 10 60 42 view .LVU2398
 8578 0212 9348     		ldr	r0, .L578+72
 8579              	.LBE1713:
 8580              	.LBE1716:
 379:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 8581              		.loc 20 379 49 view .LVU2399
 8582 0214 1D68     		ldr	r5, [r3]
 8583              	.LBB1717:
 8584              	.LBB1714:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8585              		.loc 10 60 42 view .LVU2400
 8586 0216 80ED009A 		vstr.32	s18, [r0]
 8587              	.LVL554:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8588              		.loc 10 60 42 view .LVU2401
 8589              	.LBE1714:
 8590              	.LBE1717:
 362:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 8591              		.loc 20 362 9 is_stmt 1 view .LVU2402
 8592              	.LBB1718:
 8593              	.LBI1718:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8594              		.loc 10 60 17 view .LVU2403
 8595              	.LBB1719:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 285


 8596              		.loc 10 60 37 view .LVU2404
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8597              		.loc 10 60 42 is_stmt 0 view .LVU2405
 8598 021a 9248     		ldr	r0, .L578+76
 8599              	.LBE1719:
 8600              	.LBE1718:
 8601              	.LBB1721:
 8602              	.LBB1691:
 8603              	.LBB1674:
 8604              	.LBB1657:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8605              		.loc 19 174 71 view .LVU2406
 8606 021c 05EB0A03 		add	r3, r5, r10
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8607              		.loc 19 174 46 view .LVU2407
 8608 0220 9FED91AA 		vldr.32	s20, .L578+80
 8609              	.LBE1657:
 8610              	.LBE1674:
 8611              	.LBE1691:
 8612              	.LBE1721:
 8613              	.LBB1722:
 8614              	.LBB1720:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8615              		.loc 10 60 42 view .LVU2408
 8616 0224 80ED008A 		vstr.32	s16, [r0]
 8617              	.LVL555:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8618              		.loc 10 60 42 view .LVU2409
 8619              	.LBE1720:
 8620              	.LBE1722:
 363:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 8621              		.loc 20 363 9 is_stmt 1 view .LVU2410
 8622              	.LBB1723:
 8623              	.LBI1723:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8624              		.loc 10 60 17 view .LVU2411
 8625              	.LBB1724:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8626              		.loc 10 60 37 view .LVU2412
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8627              		.loc 10 60 42 is_stmt 0 view .LVU2413
 8628 0228 9048     		ldr	r0, .L578+84
 8629              	.LBE1724:
 8630              	.LBE1723:
 8631              	.LBB1726:
 8632              	.LBB1692:
 8633              	.LBB1675:
 8634              	.LBB1658:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8635              		.loc 19 174 71 view .LVU2414
 8636 022a 93ED00BA 		vldr.32	s22, [r3]
 8637              	.LBE1658:
 8638              	.LBE1675:
 8639              	.LBE1692:
 8640              	.LBE1726:
 8641              	.LBB1727:
 8642              	.LBB1725:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 286


  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8643              		.loc 10 60 42 view .LVU2415
 8644 022e 80ED008A 		vstr.32	s16, [r0]
 8645              	.LVL556:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8646              		.loc 10 60 42 view .LVU2416
 8647              	.LBE1725:
 8648              	.LBE1727:
 364:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 8649              		.loc 20 364 9 is_stmt 1 view .LVU2417
 8650              	.LBB1728:
 8651              	.LBI1728:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8652              		.loc 10 60 17 view .LVU2418
 8653              	.LBB1729:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8654              		.loc 10 60 37 view .LVU2419
 8655              	.LBE1729:
 8656              	.LBE1728:
 8657              	.LBB1732:
 8658              	.LBB1733:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8659              		.loc 10 60 42 is_stmt 0 view .LVU2420
 8660 0232 8F48     		ldr	r0, .L578+88
 8661              	.LBE1733:
 8662              	.LBE1732:
 8663              	.LBB1736:
 8664              	.LBB1693:
 8665              	.LBB1676:
 8666              	.LBB1659:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8667              		.loc 19 174 46 view .LVU2421
 8668 0234 2BEE0A0A 		vmul.f32	s0, s22, s20
 8669              	.LVL557:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8670              		.loc 19 174 71 view .LVU2422
 8671 0238 0493     		str	r3, [sp, #16]
 8672              		.loc 19 175 77 view .LVU2423
 8673 023a 3AEECBCA 		vsub.f32	s24, s21, s22
 8674              	.LBE1659:
 8675              	.LBE1676:
 8676              	.LBE1693:
 8677              	.LBE1736:
 8678              	.LBB1737:
 8679              	.LBB1734:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8680              		.loc 10 60 42 view .LVU2424
 8681 023e 80ED008A 		vstr.32	s16, [r0]
 8682              	.LBE1734:
 8683              	.LBE1737:
 372:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 8684              		.loc 20 372 27 view .LVU2425
 8685 0242 8C4B     		ldr	r3, .L578+92
 8686              	.LBB1738:
 8687              	.LBB1739:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8688              		.loc 10 60 42 view .LVU2426
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 287


 8689 0244 8C48     		ldr	r0, .L578+96
 8690              	.LBE1739:
 8691              	.LBE1738:
 372:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 8692              		.loc 20 372 27 view .LVU2427
 8693 0246 1B68     		ldr	r3, [r3]	@ float
 8694              	.LBB1742:
 8695              	.LBB1740:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8696              		.loc 10 60 42 view .LVU2428
 8697 0248 80ED008A 		vstr.32	s16, [r0]
 8698              	.LBE1740:
 8699              	.LBE1742:
 8700              	.LBB1743:
 8701              	.LBB1730:
 8702 024c 8B48     		ldr	r0, .L578+100
 8703              	.LBE1730:
 8704              	.LBE1743:
 8705              	.LBB1744:
 8706              	.LBB1694:
 8707              	.LBB1677:
 8708              	.LBB1660:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8709              		.loc 19 174 103 view .LVU2429
 8710 024e DFED8C9A 		vldr.32	s19, .L578+104
 8711              	.LBE1660:
 8712              	.LBE1677:
 8713              	.LBE1694:
 8714              	.LBE1744:
 8715              	.LBB1745:
 8716              	.LBB1731:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8717              		.loc 10 60 42 view .LVU2430
 8718 0252 C0ED007A 		vstr.32	s15, [r0]
 8719              	.LVL558:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8720              		.loc 10 60 42 view .LVU2431
 8721              	.LBE1731:
 8722              	.LBE1745:
 365:Veno-Echo.cpp **** 
 8723              		.loc 20 365 9 is_stmt 1 view .LVU2432
 8724              	.LBB1746:
 8725              	.LBI1746:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8726              		.loc 10 60 17 view .LVU2433
 8727              	.LBB1747:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8728              		.loc 10 60 37 view .LVU2434
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8729              		.loc 10 60 42 is_stmt 0 view .LVU2435
 8730 0256 8B48     		ldr	r0, .L578+108
 8731              	.LBE1747:
 8732              	.LBE1746:
 8733              	.LBB1749:
 8734              	.LBB1695:
 8735              	.LBB1678:
 8736              	.LBB1661:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 288


 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8737              		.loc 19 174 98 view .LVU2436
 8738 0258 9FED8B9A 		vldr.32	s18, .L578+112
 8739              	.LVL559:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8740              		.loc 19 174 98 view .LVU2437
 8741              	.LBE1661:
 8742              	.LBE1678:
 8743              	.LBE1695:
 8744              	.LBE1749:
 8745              	.LBB1750:
 8746              	.LBB1748:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8747              		.loc 10 60 42 view .LVU2438
 8748 025c C0ED007A 		vstr.32	s15, [r0]
 8749              	.LVL560:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8750              		.loc 10 60 42 view .LVU2439
 8751              	.LBE1748:
 8752              	.LBE1750:
 367:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 8753              		.loc 20 367 9 is_stmt 1 view .LVU2440
 8754              	.LBB1751:
 8755              	.LBI1732:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8756              		.loc 10 60 17 view .LVU2441
 8757              	.LBB1735:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8758              		.loc 10 60 37 view .LVU2442
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8759              		.loc 10 60 37 is_stmt 0 view .LVU2443
 8760              	.LBE1735:
 8761              	.LBE1751:
 368:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 8762              		.loc 20 368 9 is_stmt 1 view .LVU2444
 8763              	.LBB1752:
 8764              	.LBI1738:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8765              		.loc 10 60 17 view .LVU2445
 8766              	.LBB1741:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8767              		.loc 10 60 37 view .LVU2446
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8768              		.loc 10 60 37 is_stmt 0 view .LVU2447
 8769              	.LBE1741:
 8770              	.LBE1752:
 369:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 8771              		.loc 20 369 9 is_stmt 1 view .LVU2448
 8772              	.LBB1753:
 8773              	.LBI1753:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8774              		.loc 10 60 17 view .LVU2449
 8775              	.LBB1754:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8776              		.loc 10 60 37 view .LVU2450
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8777              		.loc 10 60 42 is_stmt 0 view .LVU2451
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 289


 8778 0260 8A48     		ldr	r0, .L578+116
 8779              	.LBE1754:
 8780              	.LBE1753:
 8781              	.LBB1756:
 8782              	.LBB1696:
 8783              	.LBB1679:
 8784              	.LBB1662:
 162:delayline_reverse.h **** 
 8785              		.loc 19 162 23 view .LVU2452
 8786 0262 D5E90267 		ldrd	r6, r7, [r5, #8]
 8787              	.LBE1662:
 8788              	.LBE1679:
 8789              	.LBE1696:
 8790              	.LBE1756:
 8791              	.LBB1757:
 8792              	.LBB1755:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8793              		.loc 10 60 42 view .LVU2453
 8794 0266 C0ED007A 		vstr.32	s15, [r0]
 8795              	.LVL561:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8796              		.loc 10 60 42 view .LVU2454
 8797              	.LBE1755:
 8798              	.LBE1757:
 370:Veno-Echo.cpp **** 
 8799              		.loc 20 370 9 is_stmt 1 view .LVU2455
 8800              	.LBB1758:
 8801              	.LBI1758:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8802              		.loc 10 60 17 view .LVU2456
 8803              	.LBB1759:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8804              		.loc 10 60 37 view .LVU2457
 8805              	.LBE1759:
 8806              	.LBE1758:
 8807              	.LBB1762:
 8808              	.LBB1697:
 8809              	.LBB1680:
 8810              	.LBB1663:
 162:delayline_reverse.h **** 
 8811              		.loc 19 162 11 is_stmt 0 view .LVU2458
 8812 026a 05EB8702 		add	r2, r5, r7, lsl #2
 8813              	.LBE1663:
 8814              	.LBE1680:
 8815              	.LBE1697:
 8816              	.LBE1762:
 8817              	.LBB1763:
 8818              	.LBB1760:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8819              		.loc 10 60 42 view .LVU2459
 8820 026e 8848     		ldr	r0, .L578+120
 8821              	.LBE1760:
 8822              	.LBE1763:
 8823              	.LBB1764:
 8824              	.LBB1698:
 8825              	.LBB1681:
 8826              	.LBB1664:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 290


 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 8827              		.loc 19 161 11 view .LVU2460
 8828 0270 05EB8601 		add	r1, r5, r6, lsl #2
 162:delayline_reverse.h **** 
 8829              		.loc 19 162 11 view .LVU2461
 8830 0274 D2ED06DA 		vldr.32	s27, [r2, #24]
 8831              	.LBE1664:
 8832              	.LBE1681:
 8833              	.LBE1698:
 8834              	.LBE1764:
 8835              	.LBB1765:
 8836              	.LBB1766:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8837              		.loc 10 60 42 view .LVU2462
 8838 0278 864A     		ldr	r2, .L578+124
 8839              	.LBE1766:
 8840              	.LBE1765:
 8841              	.LBB1768:
 8842              	.LBB1761:
 8843 027a C0ED007A 		vstr.32	s15, [r0]
 8844              	.LVL562:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8845              		.loc 10 60 42 view .LVU2463
 8846              	.LBE1761:
 8847              	.LBE1768:
 372:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 8848              		.loc 20 372 9 is_stmt 1 view .LVU2464
 8849              	.LBB1769:
 8850              	.LBI1765:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8851              		.loc 10 60 17 view .LVU2465
 8852              	.LBB1767:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8853              		.loc 10 60 37 view .LVU2466
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8854              		.loc 10 60 42 is_stmt 0 view .LVU2467
 8855 027e 1360     		str	r3, [r2]	@ float
 8856              	.LVL563:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8857              		.loc 10 60 42 view .LVU2468
 8858              	.LBE1767:
 8859              	.LBE1769:
 373:Veno-Echo.cpp **** 
 8860              		.loc 20 373 9 is_stmt 1 view .LVU2469
 8861              	.LBB1770:
 8862              	.LBI1770:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8863              		.loc 10 60 17 view .LVU2470
 8864              	.LBB1771:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8865              		.loc 10 60 37 view .LVU2471
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8866              		.loc 10 60 42 is_stmt 0 view .LVU2472
 8867 0280 854A     		ldr	r2, .L578+128
 8868              	.LBE1771:
 8869              	.LBE1770:
 8870              	.LBB1773:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 291


 8871              	.LBB1699:
 8872              	.LBB1682:
 8873              	.LBB1665:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 8874              		.loc 19 161 11 view .LVU2473
 8875 0282 91ED06EA 		vldr.32	s28, [r1, #24]
 8876              	.LBE1665:
 8877              	.LBE1682:
 8878              	.LBE1699:
 8879              	.LBE1773:
 8880              	.LBB1774:
 8881              	.LBB1772:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8882              		.loc 10 60 42 view .LVU2474
 8883 0286 1360     		str	r3, [r2]	@ float
 8884              	.LVL564:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8885              		.loc 10 60 42 view .LVU2475
 8886              	.LBE1772:
 8887              	.LBE1774:
 375:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 8888              		.loc 20 375 9 is_stmt 1 view .LVU2476
 8889              	.LBB1775:
 8890              	.LBI1775:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8891              		.loc 10 60 17 view .LVU2477
 8892              	.LBB1776:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8893              		.loc 10 60 37 view .LVU2478
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8894              		.loc 10 60 42 is_stmt 0 view .LVU2479
 8895 0288 844A     		ldr	r2, .L578+132
 8896 028a 1360     		str	r3, [r2]	@ float
 8897              	.LVL565:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8898              		.loc 10 60 42 view .LVU2480
 8899              	.LBE1776:
 8900              	.LBE1775:
 376:Veno-Echo.cpp **** 
 8901              		.loc 20 376 9 is_stmt 1 view .LVU2481
 8902              	.LBB1777:
 8903              	.LBI1777:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8904              		.loc 10 60 17 view .LVU2482
 8905              	.LBB1778:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8906              		.loc 10 60 37 view .LVU2483
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8907              		.loc 10 60 42 is_stmt 0 view .LVU2484
 8908 028c 844A     		ldr	r2, .L578+136
 8909 028e 1360     		str	r3, [r2]	@ float
 8910              	.LVL566:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8911              		.loc 10 60 42 view .LVU2485
 8912              	.LBE1778:
 8913              	.LBE1777:
 379:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 292


 8914              		.loc 20 379 9 is_stmt 1 view .LVU2486
 8915              	.LBB1779:
 8916              	.LBI1651:
  79:Veno-Echo.cpp ****     {
 8917              		.loc 20 79 11 view .LVU2487
 8918              	.LBB1700:
  82:Veno-Echo.cpp ****         return read;
 8919              		.loc 20 82 9 view .LVU2488
 8920              	.LBB1683:
 8921              	.LBI1653:
 159:delayline_reverse.h ****     {
 8922              		.loc 19 159 20 view .LVU2489
 8923              	.LBB1666:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8924              		.loc 19 174 46 is_stmt 0 view .LVU2490
 8925 0290 FFF7FEFF 		bl	sinf
 8926              	.LVL567:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8927              		.loc 19 174 46 view .LVU2491
 8928 0294 F0EE40BA 		vmov.f32	s23, s0
 8929              	.LVL568:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8930              		.loc 19 174 103 view .LVU2492
 8931 0298 2BEE290A 		vmul.f32	s0, s22, s19
 8932 029c FFF7FEFF 		bl	sinf
 8933              	.LVL569:
 8934 02a0 B0EE408A 		vmov.f32	s16, s0
 8935              	.LVL570:
 8936              		.loc 19 175 46 view .LVU2493
 8937 02a4 2CEE0A0A 		vmul.f32	s0, s24, s20
 8938 02a8 FFF7FEFF 		bl	sinf
 8939              	.LVL571:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8940              		.loc 19 174 98 view .LVU2494
 8941 02ac 28EE098A 		vmul.f32	s16, s16, s18
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8942              		.loc 19 174 82 view .LVU2495
 8943 02b0 ABEEA88A 		vfma.f32	s16, s23, s17
 8944              	.LVL572:
 8945              		.loc 19 175 46 view .LVU2496
 8946 02b4 F0EE40BA 		vmov.f32	s23, s0
 8947              		.loc 19 175 112 view .LVU2497
 8948 02b8 2CEE290A 		vmul.f32	s0, s24, s19
 8949 02bc FFF7FEFF 		bl	sinf
 8950              	.LVL573:
 8951              		.loc 19 175 107 view .LVU2498
 8952 02c0 60EE097A 		vmul.f32	s15, s0, s18
 8953              	.LBE1666:
 8954              	.LBE1683:
 8955              	.LBE1700:
 8956              	.LBE1779:
 380:Veno-Echo.cpp **** 
 8957              		.loc 20 380 49 view .LVU2499
 8958 02c4 774B     		ldr	r3, .L578+140
 8959              	.LBB1780:
 8960              	.LBB1701:
 8961              	.LBB1684:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 293


 8962              	.LBB1667:
 8963              		.loc 19 175 91 view .LVU2500
 8964 02c6 EBEEA87A 		vfma.f32	s15, s23, s17
 8965              	.LVL574:
 8966              		.loc 19 175 91 view .LVU2501
 8967              	.LBE1667:
 8968              	.LBE1684:
 8969              	.LBE1701:
 8970              	.LBE1780:
 380:Veno-Echo.cpp **** 
 8971              		.loc 20 380 49 view .LVU2502
 8972 02ca 1C68     		ldr	r4, [r3]
 8973              	.LBB1781:
 8974              	.LBB1702:
 8975              	.LBB1685:
 8976              	.LBB1668:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8977              		.loc 19 174 9 view .LVU2503
 8978 02cc 38EE088A 		vadd.f32	s16, s16, s16
 8979              	.LVL575:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8980              		.loc 19 174 9 view .LVU2504
 8981              	.LBE1668:
 8982              	.LBE1685:
 8983              	.LBE1702:
 8984              	.LBE1781:
 8985              	.LBB1782:
 8986              	.LBB1783:
 8987              	.LBB1784:
 8988              	.LBB1785:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8989              		.loc 19 174 71 view .LVU2505
 8990 02d0 04EB0A01 		add	r1, r4, r10
 162:delayline_reverse.h **** 
 8991              		.loc 19 162 11 view .LVU2506
 8992 02d4 D4E90223 		ldrd	r2, r3, [r4, #8]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8993              		.loc 19 174 71 view .LVU2507
 8994 02d8 91ED00CA 		vldr.32	s24, [r1]
 8995              	.LBE1785:
 8996              	.LBE1784:
 8997              	.LBE1783:
 8998              	.LBE1782:
 8999              	.LBB1816:
 9000              	.LBB1703:
 9001              	.LBB1686:
 9002              	.LBB1669:
 9003              		.loc 19 175 9 view .LVU2508
 9004 02dc 77EEA77A 		vadd.f32	s15, s15, s15
 9005              	.LVL576:
 9006              		.loc 19 175 9 view .LVU2509
 9007              	.LBE1669:
 9008              	.LBE1686:
 9009              	.LBE1703:
 9010              	.LBE1816:
 9011              	.LBB1817:
 9012              	.LBB1806:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 294


 9013              	.LBB1796:
 9014              	.LBB1786:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 9015              		.loc 19 161 11 view .LVU2510
 9016 02e0 04EB8202 		add	r2, r4, r2, lsl #2
 162:delayline_reverse.h **** 
 9017              		.loc 19 162 11 view .LVU2511
 9018 02e4 04EB8303 		add	r3, r4, r3, lsl #2
 9019              		.loc 19 175 77 view .LVU2512
 9020 02e8 7AEECCAA 		vsub.f32	s21, s21, s24
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9021              		.loc 19 174 46 view .LVU2513
 9022 02ec 2CEE0A0A 		vmul.f32	s0, s24, s20
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 9023              		.loc 19 161 11 view .LVU2514
 9024 02f0 92ED06DA 		vldr.32	s26, [r2, #24]
 9025              	.LBE1786:
 9026              	.LBE1796:
 9027              	.LBE1806:
 9028              	.LBE1817:
 9029              	.LBB1818:
 9030              	.LBB1704:
 9031              	.LBB1687:
 9032              	.LBB1670:
 176:delayline_reverse.h **** 
 177:delayline_reverse.h ****         return (read2 * scalar_1) + (read1 * scalar_2); 
 9033              		.loc 19 177 44 view .LVU2515
 9034 02f4 67EE8E7A 		vmul.f32	s15, s15, s28
 9035              	.LVL577:
 9036              		.loc 19 177 44 view .LVU2516
 9037              	.LBE1670:
 9038              	.LBE1687:
 9039              	.LBE1704:
 9040              	.LBE1818:
 9041              	.LBB1819:
 9042              	.LBB1807:
 9043              	.LBB1797:
 9044              	.LBB1787:
 162:delayline_reverse.h **** 
 9045              		.loc 19 162 11 view .LVU2517
 9046 02f8 D3ED06CA 		vldr.32	s25, [r3, #24]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9047              		.loc 19 174 71 view .LVU2518
 9048 02fc 0391     		str	r1, [sp, #12]
 9049              	.LBE1787:
 9050              	.LBE1797:
 9051              	.LBE1807:
 9052              	.LBE1819:
 9053              	.LBB1820:
 9054              	.LBB1705:
 9055              	.LBB1688:
 9056              	.LBB1671:
 9057              		.loc 19 177 54 view .LVU2519
 9058 02fe EDEE887A 		vfma.f32	s15, s27, s16
 9059              	.LVL578:
 9060              		.loc 19 177 54 view .LVU2520
 9061              	.LBE1671:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 295


 9062              	.LBE1688:
  83:Veno-Echo.cpp ****     }
 9063              		.loc 20 83 9 is_stmt 1 view .LVU2521
  83:Veno-Echo.cpp ****     }
 9064              		.loc 20 83 9 is_stmt 0 view .LVU2522
 9065              	.LBE1705:
 9066              	.LBE1820:
 379:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9067              		.loc 20 379 50 view .LVU2523
 9068 0302 CDED067A 		vstr.32	s15, [sp, #24]
 380:Veno-Echo.cpp **** 
 9069              		.loc 20 380 9 is_stmt 1 view .LVU2524
 9070              	.LVL579:
 9071              	.LBB1821:
 9072              	.LBI1782:
  79:Veno-Echo.cpp ****     {
 9073              		.loc 20 79 11 view .LVU2525
 9074              	.LBB1808:
  82:Veno-Echo.cpp ****         return read;
 9075              		.loc 20 82 9 view .LVU2526
 9076              	.LBB1798:
 9077              	.LBI1784:
 159:delayline_reverse.h ****     {
 9078              		.loc 19 159 20 view .LVU2527
 9079              	.LBB1788:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9080              		.loc 19 174 46 is_stmt 0 view .LVU2528
 9081 0306 FFF7FEFF 		bl	sinf
 9082              	.LVL580:
 9083 030a F0EE40BA 		vmov.f32	s23, s0
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9084              		.loc 19 174 103 view .LVU2529
 9085 030e 2CEE290A 		vmul.f32	s0, s24, s19
 9086 0312 FFF7FEFF 		bl	sinf
 9087              	.LVL581:
 9088 0316 B0EE408A 		vmov.f32	s16, s0
 175:delayline_reverse.h **** 
 9089              		.loc 19 175 46 view .LVU2530
 9090 031a 2AEE8A0A 		vmul.f32	s0, s21, s20
 9091 031e FFF7FEFF 		bl	sinf
 9092              	.LVL582:
 9093 0322 F0EE407A 		vmov.f32	s15, s0
 175:delayline_reverse.h **** 
 9094              		.loc 19 175 112 view .LVU2531
 9095 0326 2AEEA90A 		vmul.f32	s0, s21, s19
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9096              		.loc 19 174 98 view .LVU2532
 9097 032a 28EE098A 		vmul.f32	s16, s16, s18
 175:delayline_reverse.h **** 
 9098              		.loc 19 175 46 view .LVU2533
 9099 032e F0EE679A 		vmov.f32	s19, s15
 175:delayline_reverse.h **** 
 9100              		.loc 19 175 112 view .LVU2534
 9101 0332 FFF7FEFF 		bl	sinf
 9102              	.LVL583:
 9103              	.LBE1788:
 9104              	.LBE1798:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 296


 9105              	.LBE1808:
 9106              	.LBE1821:
 9107              	.LBB1822:
 9108              	.LBB1823:
 9109              	.LBB1824:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9110              		.loc 19 98 38 view .LVU2535
 9111 0336 5C48     		ldr	r0, .L578+144
 9112              	.LBE1824:
 9113              	.LBE1823:
 9114              	.LBE1822:
 9115              	.LBB1847:
 9116              	.LBB1809:
 9117              	.LBB1799:
 9118              	.LBB1789:
 175:delayline_reverse.h **** 
 9119              		.loc 19 175 107 view .LVU2536
 9120 0338 60EE097A 		vmul.f32	s15, s0, s18
 9121              	.LBE1789:
 9122              	.LBE1799:
 9123              	.LBE1809:
 9124              	.LBE1847:
 9125              	.LBB1848:
 9126              	.LBB1836:
 9127              	.LBB1825:
  92:delayline_reverse.h ****         
 9128              		.loc 19 92 57 view .LVU2537
 9129 033c 5B4B     		ldr	r3, .L578+148
 9130              	.LBE1825:
 9131              	.LBE1836:
 9132              	.LBE1848:
 9133              	.LBB1849:
 9134              	.LBB1810:
 9135              	.LBB1800:
 9136              	.LBB1790:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9137              		.loc 19 174 82 view .LVU2538
 9138 033e ABEEA88A 		vfma.f32	s16, s23, s17
 9139              	.LVL584:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9140              		.loc 19 174 82 view .LVU2539
 9141              	.LBE1790:
 9142              	.LBE1800:
 9143              	.LBE1810:
 9144              	.LBE1849:
 9145              	.LBB1850:
 9146              	.LBB1837:
 9147              	.LBB1826:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9148              		.loc 19 98 38 view .LVU2540
 9149 0342 0644     		add	r6, r6, r0
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9150              		.loc 19 90 15 view .LVU2541
 9151 0344 D5F804E0 		ldr	lr, [r5, #4]
 9152              	.LBE1826:
 9153              	.LBE1837:
 9154              	.LBE1850:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 297


 9155              	.LBB1851:
 9156              	.LBB1811:
 9157              	.LBB1801:
 9158              	.LBB1791:
 175:delayline_reverse.h **** 
 9159              		.loc 19 175 91 view .LVU2542
 9160 0348 E9EEA87A 		vfma.f32	s15, s19, s17
 9161              	.LVL585:
 175:delayline_reverse.h **** 
 9162              		.loc 19 175 91 view .LVU2543
 9163              	.LBE1791:
 9164              	.LBE1801:
 9165              	.LBE1811:
 9166              	.LBE1851:
 9167              	.LBB1852:
 9168              	.LBB1838:
 9169              	.LBB1827:
  99:delayline_reverse.h ****  
 9170              		.loc 19 99 38 view .LVU2544
 9171 034c 3844     		add	r0, r0, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9172              		.loc 19 98 50 view .LVU2545
 9173 034e A3FB06C1 		umull	ip, r1, r3, r6
  92:delayline_reverse.h ****         
 9174              		.loc 19 92 57 view .LVU2546
 9175 0352 DFF86CC1 		ldr	ip, .L578+168
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9176              		.loc 19 90 9 view .LVU2547
 9177 0356 05EB8E0A 		add	r10, r5, lr, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9178              		.loc 19 98 50 view .LVU2548
 9179 035a 890C     		lsrs	r1, r1, #18
 9180              	.LBE1827:
 9181              	.LBE1838:
 9182              	.LBE1852:
 9183              	.LBB1853:
 9184              	.LBB1812:
 9185              	.LBB1802:
 9186              	.LBB1792:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9187              		.loc 19 174 9 view .LVU2549
 9188 035c 38EE088A 		vadd.f32	s16, s16, s16
 9189              	.LVL586:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9190              		.loc 19 174 9 view .LVU2550
 9191              	.LBE1792:
 9192              	.LBE1802:
 9193              	.LBE1812:
 9194              	.LBE1853:
 9195              	.LBB1854:
 9196              	.LBB1839:
 9197              	.LBB1828:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9198              		.loc 19 98 50 view .LVU2551
 9199 0360 0CFB1161 		mls	r1, ip, r1, r6
  92:delayline_reverse.h ****         
 9200              		.loc 19 92 45 view .LVU2552
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 298


 9201 0364 524E     		ldr	r6, .L578+152
 9202              	.LBE1828:
 9203              	.LBE1839:
 9204              	.LBE1854:
 9205              	.LBB1855:
 9206              	.LBB1813:
 9207              	.LBB1803:
 9208              	.LBB1793:
 175:delayline_reverse.h **** 
 9209              		.loc 19 175 9 view .LVU2553
 9210 0366 37EEA70A 		vadd.f32	s0, s15, s15
 9211              	.LVL587:
 175:delayline_reverse.h **** 
 9212              		.loc 19 175 9 view .LVU2554
 9213              	.LBE1793:
 9214              	.LBE1803:
 9215              	.LBE1813:
 9216              	.LBE1855:
 383:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 9217              		.loc 20 383 26 view .LVU2555
 9218 036a DBED007A 		vldr.32	s15, [fp]
 9219              	.LBB1856:
 9220              	.LBB1840:
 9221              	.LBB1829:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9222              		.loc 19 98 50 view .LVU2556
 9223 036e 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 9224              		.loc 19 92 45 view .LVU2557
 9225 0370 7644     		add	r6, r6, lr
  99:delayline_reverse.h ****  
 9226              		.loc 19 99 50 view .LVU2558
 9227 0372 A3FB001E 		umull	r1, lr, r3, r0
  92:delayline_reverse.h ****         
 9228              		.loc 19 92 57 view .LVU2559
 9229 0376 A3FB0613 		umull	r1, r3, r3, r6
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9230              		.loc 19 98 9 view .LVU2560
 9231 037a 0199     		ldr	r1, [sp, #4]
  99:delayline_reverse.h ****  
 9232              		.loc 19 99 50 view .LVU2561
 9233 037c 4FEA9E4E 		lsr	lr, lr, #18
 9234              	.LBE1829:
 9235              	.LBE1840:
 9236              	.LBE1856:
 9237              	.LBB1857:
 9238              	.LBB1814:
 9239              	.LBB1804:
 9240              	.LBB1794:
 9241              		.loc 19 177 44 view .LVU2562
 9242 0380 20EE0D0A 		vmul.f32	s0, s0, s26
 9243              	.LVL588:
 9244              		.loc 19 177 44 view .LVU2563
 9245              	.LBE1794:
 9246              	.LBE1804:
 9247              	.LBE1814:
 9248              	.LBE1857:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 299


 9249              	.LBB1858:
 9250              	.LBB1841:
 9251              	.LBB1830:
  92:delayline_reverse.h ****         
 9252              		.loc 19 92 57 view .LVU2564
 9253 0384 9B0C     		lsrs	r3, r3, #18
  99:delayline_reverse.h ****  
 9254              		.loc 19 99 50 view .LVU2565
 9255 0386 0CFB1E00 		mls	r0, ip, lr, r0
 9256              	.LBE1830:
 9257              	.LBE1841:
 9258              	.LBE1858:
 9259              	.LBB1859:
 9260              	.LBB1815:
 9261              	.LBB1805:
 9262              	.LBB1795:
 9263              		.loc 19 177 54 view .LVU2566
 9264 038a ACEE880A 		vfma.f32	s0, s25, s16
 9265              	.LVL589:
 9266              		.loc 19 177 54 view .LVU2567
 9267              	.LBE1795:
 9268              	.LBE1805:
  83:Veno-Echo.cpp ****     }
 9269              		.loc 20 83 9 is_stmt 1 view .LVU2568
  83:Veno-Echo.cpp ****     }
 9270              		.loc 20 83 9 is_stmt 0 view .LVU2569
 9271              	.LBE1815:
 9272              	.LBE1859:
 9273              	.LBB1860:
 9274              	.LBB1842:
 9275              	.LBB1831:
  92:delayline_reverse.h ****         
 9276              		.loc 19 92 57 view .LVU2570
 9277 038e 0CFB1363 		mls	r3, ip, r3, r6
  95:delayline_reverse.h **** 
 9278              		.loc 19 95 43 view .LVU2571
 9279 0392 D5E90472 		ldrd	r7, r2, [r5, #16]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9280              		.loc 19 90 9 view .LVU2572
 9281 0396 CAED067A 		vstr.32	s15, [r10, #24]
  95:delayline_reverse.h **** 
 9282              		.loc 19 95 43 view .LVU2573
 9283 039a 3A44     		add	r2, r2, r7
 101:delayline_reverse.h ****         {
 9284              		.loc 19 101 36 view .LVU2574
 9285 039c DFF824A1 		ldr	r10, .L578+172
  95:delayline_reverse.h **** 
 9286              		.loc 19 95 43 view .LVU2575
 9287 03a0 0132     		adds	r2, r2, #1
 101:delayline_reverse.h ****         {
 9288              		.loc 19 101 36 view .LVU2576
 9289 03a2 55F80AE0 		ldr	lr, [r5, r10]
 101:delayline_reverse.h ****         {
 9290              		.loc 19 101 45 view .LVU2577
 9291 03a6 07F1FF3A 		add	r10, r7, #-1
 9292              	.LBE1831:
 9293              	.LBE1842:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 300


 9294              	.LBE1860:
 380:Veno-Echo.cpp **** 
 9295              		.loc 20 380 50 view .LVU2578
 9296 03aa 8DED070A 		vstr.32	s0, [sp, #28]
 383:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 9297              		.loc 20 383 9 is_stmt 1 view .LVU2579
 9298              	.LVL590:
 9299              	.LBB1861:
 9300              	.LBI1822:
  92:Veno-Echo.cpp ****     {
 9301              		.loc 20 92 10 view .LVU2580
  92:Veno-Echo.cpp ****     {
 9302              		.loc 20 92 10 is_stmt 0 view .LVU2581
 9303              	.LBE1861:
 9304              	.LBE1986:
 9305              	.LBE1611:
  94:Veno-Echo.cpp ****     }
 9306              		.loc 20 94 9 is_stmt 1 view .LVU2582
 9307              	.LBB1998:
 9308              	.LBB1987:
 9309              	.LBB1862:
 9310              	.LBB1843:
 9311              	.LBI1823:
  88:delayline_reverse.h ****     {
 9312              		.loc 19 88 17 view .LVU2583
 9313              	.LBB1832:
  99:delayline_reverse.h ****  
 9314              		.loc 19 99 9 is_stmt 0 view .LVU2584
 9315 03ae C5E90210 		strd	r1, r0, [r5, #8]
  95:delayline_reverse.h **** 
 9316              		.loc 19 95 54 view .LVU2585
 9317 03b2 B2FBF7F1 		udiv	r1, r2, r7
 101:delayline_reverse.h ****         {
 9318              		.loc 19 101 45 view .LVU2586
 9319 03b6 AAEB0E0A 		sub	r10, r10, lr
  95:delayline_reverse.h **** 
 9320              		.loc 19 95 54 view .LVU2587
 9321 03ba 07FB1122 		mls	r2, r7, r1, r2
  92:delayline_reverse.h ****         
 9322              		.loc 19 92 9 view .LVU2588
 9323 03be 6B60     		str	r3, [r5, #4]
 101:delayline_reverse.h ****         {
 9324              		.loc 19 101 9 view .LVU2589
 9325 03c0 5245     		cmp	r2, r10
  95:delayline_reverse.h **** 
 9326              		.loc 19 95 9 view .LVU2590
 9327 03c2 6A61     		str	r2, [r5, #20]
 101:delayline_reverse.h ****         {
 9328              		.loc 19 101 9 view .LVU2591
 9329 03c4 40F2CF82 		bls	.L478
 103:delayline_reverse.h ****             {
 9330              		.loc 19 103 17 view .LVU2592
 9331 03c8 3A49     		ldr	r1, .L578+156
 103:delayline_reverse.h ****             {
 9332              		.loc 19 103 13 view .LVU2593
 9333 03ca 685C     		ldrb	r0, [r5, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 301


 9334              		.loc 19 103 17 view .LVU2594
 9335 03cc 6A18     		adds	r2, r5, r1
 103:delayline_reverse.h ****             {
 9336              		.loc 19 103 13 view .LVU2595
 9337 03ce 0028     		cmp	r0, #0
 9338 03d0 40F0CF82 		bne	.L569
 107:delayline_reverse.h ****                 {
 9339              		.loc 19 107 21 view .LVU2596
 9340 03d4 3848     		ldr	r0, .L578+160
 105:delayline_reverse.h ****                 
 9341              		.loc 19 105 17 view .LVU2597
 9342 03d6 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 9343              		.loc 19 110 45 view .LVU2598
 9344 03d8 013B     		subs	r3, r3, #1
 107:delayline_reverse.h ****                 {
 9345              		.loc 19 107 17 view .LVU2599
 9346 03da 2E5C     		ldrb	r6, [r5, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 9347              		.loc 19 107 21 view .LVU2600
 9348 03dc 2844     		add	r0, r0, r5
 105:delayline_reverse.h ****                 
 9349              		.loc 19 105 17 view .LVU2601
 9350 03de 6F54     		strb	r7, [r5, r1]
 107:delayline_reverse.h ****                 {
 9351              		.loc 19 107 17 view .LVU2602
 9352 03e0 002E     		cmp	r6, #0
 9353 03e2 40F0EB83 		bne	.L480
 110:delayline_reverse.h ****                 }
 9354              		.loc 19 110 21 view .LVU2603
 9355 03e6 EB60     		str	r3, [r5, #12]
 9356              	.L481:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9357              		.loc 19 130 45 view .LVU2604
 9358 03e8 07EE90EA 		vmov	s15, lr	@ int
 9359              	.LVL591:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9360              		.loc 19 130 45 view .LVU2605
 9361 03ec B7EE007A 		vmov.f32	s14, #1.0e+0
 9362 03f0 F8EE676A 		vcvt.f32.u32	s13, s15
 9363 03f4 C7EE267A 		vdiv.f32	s15, s14, s13
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9364              		.loc 19 130 37 view .LVU2606
 9365 03f8 37EE8BBA 		vadd.f32	s22, s15, s22
 131:delayline_reverse.h ****                 {
 9366              		.loc 19 131 17 view .LVU2607
 9367 03fc B4EEC7BA 		vcmpe.f32	s22, s14
 9368 0400 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9369 0404 40F39183 		ble	.L570
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9370              		.loc 19 133 21 view .LVU2608
 9371 0408 049B     		ldr	r3, [sp, #16]
 134:delayline_reverse.h ****                     playinghead_ = true;
 9372              		.loc 19 134 21 view .LVU2609
 9373 040a 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9374              		.loc 19 133 21 view .LVU2610
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 302


 9375 040c 83ED007A 		vstr.32	s14, [r3]
 135:delayline_reverse.h ****                 }
 9376              		.loc 19 135 21 view .LVU2611
 9377 0410 0123     		movs	r3, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 9378              		.loc 19 134 21 view .LVU2612
 9379 0412 1170     		strb	r1, [r2]
 135:delayline_reverse.h ****                 }
 9380              		.loc 19 135 21 view .LVU2613
 9381 0414 0370     		strb	r3, [r0]
 9382 0416 57E0     		b	.L579
 9383              	.L580:
 9384              		.align	2
 9385              	.L578:
 9386 0418 00000000 		.word	.LANCHOR104
 9387 041c 00000000 		.word	.LANCHOR0
 9388 0420 00000000 		.word	.LANCHOR105
 9389 0424 00000000 		.word	.LANCHOR1
 9390 0428 00000000 		.word	.LANCHOR64
 9391 042c 00000000 		.word	.LANCHOR82
 9392 0430 00000000 		.word	.LANCHOR55
 9393 0434 00000000 		.word	.LANCHOR110
 9394 0438 00000000 		.word	.LANCHOR92
 9395 043c 00000000 		.word	.LANCHOR98
 9396 0440 00000000 		.word	.LANCHOR93
 9397 0444 00000000 		.word	.LANCHOR99
 9398 0448 00000000 		.word	.LANCHOR91
 9399 044c 00000000 		.word	.LANCHOR101
 9400 0450 00000000 		.word	.LANCHOR90
 9401 0454 00000000 		.word	.LANCHOR100
 9402 0458 00000000 		.word	.LANCHOR102
 9403 045c 00000000 		.word	.LANCHOR2
 9404 0460 00000000 		.word	.LANCHOR103
 9405 0464 00000000 		.word	.LANCHOR113
 9406 0468 DB0FC93F 		.word	1070141403
 9407 046c 00000000 		.word	.LANCHOR114
 9408 0470 00000000 		.word	.LANCHOR117
 9409 0474 00000000 		.word	.LANCHOR79
 9410 0478 00000000 		.word	.LANCHOR118
 9411 047c 00000000 		.word	.LANCHOR115
 9412 0480 E4CB9640 		.word	1083624420
 9413 0484 00000000 		.word	.LANCHOR116
 9414 0488 0000803D 		.word	1031798784
 9415 048c 00000000 		.word	.LANCHOR119
 9416 0490 00000000 		.word	.LANCHOR120
 9417 0494 00000000 		.word	.LANCHOR121
 9418 0498 00000000 		.word	.LANCHOR122
 9419 049c 00000000 		.word	.LANCHOR123
 9420 04a0 00000000 		.word	.LANCHOR124
 9421 04a4 00000000 		.word	.LANCHOR3
 9422 04a8 BF270900 		.word	599999
 9423 04ac 851DD96F 		.word	1876499845
 9424 04b0 C1270900 		.word	600001
 9425 04b4 249F2400 		.word	2400036
 9426 04b8 1C9F2400 		.word	2400028
 9427 04bc 209F2400 		.word	2400032
 9428 04c0 C0270900 		.word	600000
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 303


 9429 04c4 189F2400 		.word	2400024
 9430              	.L579:
 9431              	.LVL592:
 9432              	.L484:
 135:delayline_reverse.h ****                 }
 9433              		.loc 19 135 21 view .LVU2614
 9434              	.LBE1832:
 9435              	.LBE1843:
 9436              	.LBE1862:
 384:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 9437              		.loc 20 384 9 is_stmt 1 view .LVU2615
 9438              	.LBB1863:
 9439              	.LBB1864:
 9440              	.LBB1865:
  95:delayline_reverse.h **** 
 9441              		.loc 19 95 45 is_stmt 0 view .LVU2616
 9442 04c8 2169     		ldr	r1, [r4, #16]
 9443 04ca 0BF10403 		add	r3, fp, #4
  95:delayline_reverse.h **** 
 9444              		.loc 19 95 43 view .LVU2617
 9445 04ce 6069     		ldr	r0, [r4, #20]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9446              		.loc 19 90 15 view .LVU2618
 9447 04d0 6568     		ldr	r5, [r4, #4]
 9448 04d2 08EE103A 		vmov	s16, r3	@ int
  95:delayline_reverse.h **** 
 9449              		.loc 19 95 43 view .LVU2619
 9450 04d6 0844     		add	r0, r0, r1
  92:delayline_reverse.h ****         
 9451              		.loc 19 92 45 view .LVU2620
 9452 04d8 B14F     		ldr	r7, .L581
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9453              		.loc 19 90 9 view .LVU2621
 9454 04da 04EB850E 		add	lr, r4, r5, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9455              		.loc 19 98 38 view .LVU2622
 9456 04de B14B     		ldr	r3, .L581+4
  95:delayline_reverse.h **** 
 9457              		.loc 19 95 43 view .LVU2623
 9458 04e0 421C     		adds	r2, r0, #1
  92:delayline_reverse.h ****         
 9459              		.loc 19 92 45 view .LVU2624
 9460 04e2 2F44     		add	r7, r7, r5
 101:delayline_reverse.h ****         {
 9461              		.loc 19 101 45 view .LVU2625
 9462 04e4 01F1FF3C 		add	ip, r1, #-1
 9463              	.LBE1865:
 9464              	.LBE1864:
 9465              	.LBE1863:
 384:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 9466              		.loc 20 384 26 view .LVU2626
 9467 04e8 DBED017A 		vldr.32	s15, [fp, #4]
 9468              	.LVL593:
 9469              	.LBB1874:
 9470              	.LBI1863:
  92:Veno-Echo.cpp ****     {
 9471              		.loc 20 92 10 is_stmt 1 view .LVU2627
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 304


  92:Veno-Echo.cpp ****     {
 9472              		.loc 20 92 10 is_stmt 0 view .LVU2628
 9473              	.LBE1874:
 9474              	.LBE1987:
 9475              	.LBE1998:
  94:Veno-Echo.cpp ****     }
 9476              		.loc 20 94 9 is_stmt 1 view .LVU2629
 9477              	.LBB1999:
 9478              	.LBB1988:
 9479              	.LBB1875:
 9480              	.LBB1870:
 9481              	.LBI1864:
  88:delayline_reverse.h ****     {
 9482              		.loc 19 88 17 view .LVU2630
 9483              	.LBB1866:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9484              		.loc 19 98 38 is_stmt 0 view .LVU2631
 9485 04ec D4E90205 		ldrd	r0, r5, [r4, #8]
 9486 04f0 00EB030A 		add	r10, r0, r3
  99:delayline_reverse.h ****  
 9487              		.loc 19 99 38 view .LVU2632
 9488 04f4 1D44     		add	r5, r5, r3
  92:delayline_reverse.h ****         
 9489              		.loc 19 92 57 view .LVU2633
 9490 04f6 03F1E043 		add	r3, r3, #1879048192
  95:delayline_reverse.h **** 
 9491              		.loc 19 95 54 view .LVU2634
 9492 04fa B2FBF1F0 		udiv	r0, r2, r1
 9493 04fe 01FB1020 		mls	r0, r1, r0, r2
 101:delayline_reverse.h ****         {
 9494              		.loc 19 101 36 view .LVU2635
 9495 0502 A949     		ldr	r1, .L581+8
  92:delayline_reverse.h ****         
 9496              		.loc 19 92 57 view .LVU2636
 9497 0504 A3F54013 		sub	r3, r3, #3145728
 101:delayline_reverse.h ****         {
 9498              		.loc 19 101 36 view .LVU2637
 9499 0508 6158     		ldr	r1, [r4, r1]
  92:delayline_reverse.h ****         
 9500              		.loc 19 92 57 view .LVU2638
 9501 050a A3F63A23 		subw	r3, r3, #2618
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9502              		.loc 19 90 9 view .LVU2639
 9503 050e CEED067A 		vstr.32	s15, [lr, #24]
 101:delayline_reverse.h ****         {
 9504              		.loc 19 101 36 view .LVU2640
 9505 0512 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 9506              		.loc 19 92 57 view .LVU2641
 9507 0514 A3FB0762 		umull	r6, r2, r3, r7
 9508 0518 DFF8C8E2 		ldr	lr, .L581+68
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9509              		.loc 19 98 50 view .LVU2642
 9510 051c A3FB0A61 		umull	r6, r1, r3, r10
  99:delayline_reverse.h ****  
 9511              		.loc 19 99 50 view .LVU2643
 9512 0520 A3FB0563 		umull	r6, r3, r3, r5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 305


 101:delayline_reverse.h ****         {
 9513              		.loc 19 101 45 view .LVU2644
 9514 0524 019E     		ldr	r6, [sp, #4]
  92:delayline_reverse.h ****         
 9515              		.loc 19 92 57 view .LVU2645
 9516 0526 920C     		lsrs	r2, r2, #18
  95:delayline_reverse.h **** 
 9517              		.loc 19 95 9 view .LVU2646
 9518 0528 6061     		str	r0, [r4, #20]
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9519              		.loc 19 98 50 view .LVU2647
 9520 052a 890C     		lsrs	r1, r1, #18
 101:delayline_reverse.h ****         {
 9521              		.loc 19 101 45 view .LVU2648
 9522 052c ACEB060C 		sub	ip, ip, r6
  99:delayline_reverse.h ****  
 9523              		.loc 19 99 50 view .LVU2649
 9524 0530 9B0C     		lsrs	r3, r3, #18
  92:delayline_reverse.h ****         
 9525              		.loc 19 92 57 view .LVU2650
 9526 0532 0EFB1272 		mls	r2, lr, r2, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9527              		.loc 19 98 50 view .LVU2651
 9528 0536 0EFB11A1 		mls	r1, lr, r1, r10
 101:delayline_reverse.h ****         {
 9529              		.loc 19 101 9 view .LVU2652
 9530 053a 6045     		cmp	r0, ip
  99:delayline_reverse.h ****  
 9531              		.loc 19 99 50 view .LVU2653
 9532 053c 0EFB1353 		mls	r3, lr, r3, r5
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9533              		.loc 19 98 9 view .LVU2654
 9534 0540 C4E90121 		strd	r2, r1, [r4, #4]
  99:delayline_reverse.h ****  
 9535              		.loc 19 99 9 view .LVU2655
 9536 0544 E360     		str	r3, [r4, #12]
 101:delayline_reverse.h ****         {
 9537              		.loc 19 101 9 view .LVU2656
 9538 0546 40F2EB81 		bls	.L488
 103:delayline_reverse.h ****             {
 9539              		.loc 19 103 17 view .LVU2657
 9540 054a 9849     		ldr	r1, .L581+12
 103:delayline_reverse.h ****             {
 9541              		.loc 19 103 13 view .LVU2658
 9542 054c 605C     		ldrb	r0, [r4, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 9543              		.loc 19 103 17 view .LVU2659
 9544 054e 6318     		adds	r3, r4, r1
 103:delayline_reverse.h ****             {
 9545              		.loc 19 103 13 view .LVU2660
 9546 0550 0028     		cmp	r0, #0
 9547 0552 40F0EB81 		bne	.L571
 107:delayline_reverse.h ****                 {
 9548              		.loc 19 107 21 view .LVU2661
 9549 0556 9648     		ldr	r0, .L581+16
 105:delayline_reverse.h ****                 
 9550              		.loc 19 105 17 view .LVU2662
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 306


 9551 0558 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 9552              		.loc 19 110 45 view .LVU2663
 9553 055a 013A     		subs	r2, r2, #1
 107:delayline_reverse.h ****                 {
 9554              		.loc 19 107 17 view .LVU2664
 9555 055c 255C     		ldrb	r5, [r4, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 9556              		.loc 19 107 21 view .LVU2665
 9557 055e 2044     		add	r0, r0, r4
 105:delayline_reverse.h ****                 
 9558              		.loc 19 105 17 view .LVU2666
 9559 0560 6754     		strb	r7, [r4, r1]
 107:delayline_reverse.h ****                 {
 9560              		.loc 19 107 17 view .LVU2667
 9561 0562 002D     		cmp	r5, #0
 9562 0564 40F02C83 		bne	.L490
 110:delayline_reverse.h ****                 }
 9563              		.loc 19 110 21 view .LVU2668
 9564 0568 E260     		str	r2, [r4, #12]
 9565              	.L491:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9566              		.loc 19 130 45 view .LVU2669
 9567 056a DDED017A 		vldr.32	s15, [sp, #4]	@ int
 9568              	.LVL594:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9569              		.loc 19 130 45 view .LVU2670
 9570 056e B7EE007A 		vmov.f32	s14, #1.0e+0
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9571              		.loc 19 130 37 view .LVU2671
 9572 0572 039A     		ldr	r2, [sp, #12]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9573              		.loc 19 130 45 view .LVU2672
 9574 0574 B8EE676A 		vcvt.f32.u32	s12, s15
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9575              		.loc 19 130 37 view .LVU2673
 9576 0578 D2ED006A 		vldr.32	s13, [r2]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9577              		.loc 19 130 45 view .LVU2674
 9578 057c C7EE067A 		vdiv.f32	s15, s14, s12
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9579              		.loc 19 130 37 view .LVU2675
 9580 0580 77EEA67A 		vadd.f32	s15, s15, s13
 131:delayline_reverse.h ****                 {
 9581              		.loc 19 131 17 view .LVU2676
 9582 0584 F4EEC77A 		vcmpe.f32	s15, s14
 9583 0588 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9584 058c 40F31F83 		ble	.L573
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9585              		.loc 19 133 21 view .LVU2677
 9586 0590 039A     		ldr	r2, [sp, #12]
 134:delayline_reverse.h ****                     playinghead_ = true;
 9587              		.loc 19 134 21 view .LVU2678
 9588 0592 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9589              		.loc 19 133 21 view .LVU2679
 9590 0594 82ED007A 		vstr.32	s14, [r2]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 307


 135:delayline_reverse.h ****                 }
 9591              		.loc 19 135 21 view .LVU2680
 9592 0598 0122     		movs	r2, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 9593              		.loc 19 134 21 view .LVU2681
 9594 059a 1970     		strb	r1, [r3]
 135:delayline_reverse.h ****                 }
 9595              		.loc 19 135 21 view .LVU2682
 9596 059c 0270     		strb	r2, [r0]
 9597              	.LVL595:
 9598              	.L494:
 135:delayline_reverse.h ****                 }
 9599              		.loc 19 135 21 view .LVU2683
 9600              	.LBE1866:
 9601              	.LBE1870:
 9602              	.LBE1875:
 389:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 9603              		.loc 20 389 9 is_stmt 1 view .LVU2684
 389:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 9604              		.loc 20 389 56 is_stmt 0 view .LVU2685
 9605 059e 06AA     		add	r2, sp, #24
 9606 05a0 5946     		mov	r1, fp
 9607 05a2 8448     		ldr	r0, .L581+20
 9608 05a4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9609              	.LVL596:
 390:Veno-Echo.cpp **** 
 9610              		.loc 20 390 56 view .LVU2686
 9611 05a8 18EE101A 		vmov	r1, s16	@ int
 9612 05ac 07AA     		add	r2, sp, #28
 9613 05ae 8248     		ldr	r0, .L581+24
 389:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 9614              		.loc 20 389 56 view .LVU2687
 9615 05b0 F0EE408A 		vmov.f32	s17, s0
 9616              	.LVL597:
 390:Veno-Echo.cpp **** 
 9617              		.loc 20 390 9 is_stmt 1 view .LVU2688
 390:Veno-Echo.cpp **** 
 9618              		.loc 20 390 56 is_stmt 0 view .LVU2689
 9619 05b4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9620              	.LVL598:
 393:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 9621              		.loc 20 393 46 view .LVU2690
 9622 05b8 8048     		ldr	r0, .L581+28
 390:Veno-Echo.cpp **** 
 9623              		.loc 20 390 56 view .LVU2691
 9624 05ba B0EE408A 		vmov.f32	s16, s0
 9625              	.LVL599:
 393:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 9626              		.loc 20 393 9 is_stmt 1 view .LVU2692
 393:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 9627              		.loc 20 393 46 is_stmt 0 view .LVU2693
 9628 05be FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 9629              	.LVL600:
 393:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 9630              		.loc 20 393 46 view .LVU2694
 9631 05c2 0346     		mov	r3, r0
 394:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 308


 9632              		.loc 20 394 46 view .LVU2695
 9633 05c4 7E48     		ldr	r0, .L581+32
 393:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 9634              		.loc 20 393 45 view .LVU2696
 9635 05c6 1B68     		ldr	r3, [r3]	@ float
 393:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 9636              		.loc 20 393 47 view .LVU2697
 9637 05c8 0893     		str	r3, [sp, #32]	@ float
 394:Veno-Echo.cpp **** 
 9638              		.loc 20 394 9 is_stmt 1 view .LVU2698
 394:Veno-Echo.cpp **** 
 9639              		.loc 20 394 46 is_stmt 0 view .LVU2699
 9640 05ca FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 9641              	.LVL601:
 394:Veno-Echo.cpp **** 
 9642              		.loc 20 394 45 view .LVU2700
 9643 05ce 0368     		ldr	r3, [r0]	@ float
 394:Veno-Echo.cpp **** 
 9644              		.loc 20 394 47 view .LVU2701
 9645 05d0 0993     		str	r3, [sp, #36]	@ float
 397:Veno-Echo.cpp **** 
 9646              		.loc 20 397 9 is_stmt 1 view .LVU2702
 397:Veno-Echo.cpp **** 
 9647              		.loc 20 397 28 is_stmt 0 view .LVU2703
 9648 05d2 FFF7FEFF 		bl	_Z19Update_BaseTempoLEDv
 9649              	.LVL602:
 400:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 9650              		.loc 20 400 9 is_stmt 1 view .LVU2704
 9651              	.LBB1876:
 9652              	.LBB1877:
1843:Veno-Echo.cpp ****         returnval = limit;
 9653              		.loc 20 1843 5 is_stmt 0 view .LVU2705
 9654 05d6 B0EE007A 		vmov.f32	s14, #2.0e+0
 9655              	.LBE1877:
 9656              	.LBE1876:
 400:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 9657              		.loc 20 400 34 view .LVU2706
 9658 05da DDED087A 		vldr.32	s15, [sp, #32]
 9659              	.LVL603:
 9660              	.LBB1880:
 9661              	.LBI1876:
1840:Veno-Echo.cpp **** {
 9662              		.loc 20 1840 7 is_stmt 1 view .LVU2707
 9663              	.LBB1878:
1842:Veno-Echo.cpp ****     if (input > limit)
 9664              		.loc 20 1842 5 view .LVU2708
1843:Veno-Echo.cpp ****         returnval = limit;
 9665              		.loc 20 1843 5 view .LVU2709
 9666 05de F4EEC77A 		vcmpe.f32	s15, s14
 9667 05e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9668 05e6 00F39881 		bgt	.L535
1845:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9669              		.loc 20 1845 10 view .LVU2710
 9670 05ea B8EE007A 		vmov.f32	s14, #-2.0e+0
1846:Veno-Echo.cpp ****     else
 9671              		.loc 20 1846 19 is_stmt 0 view .LVU2711
 9672 05ee F4EE477A 		vcmp.f32	s15, s14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 309


 9673 05f2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9674 05f6 48BF     		it	mi
 9675 05f8 F0EE477A 		vmovmi.f32	s15, s14
 9676              	.LVL604:
 9677              	.L498:
1850:Veno-Echo.cpp **** }
 9678              		.loc 20 1850 5 is_stmt 1 view .LVU2712
1850:Veno-Echo.cpp **** }
 9679              		.loc 20 1850 5 is_stmt 0 view .LVU2713
 9680              	.LBE1878:
 9681              	.LBE1880:
 9682              	.LBB1881:
 9683              	.LBB1882:
1843:Veno-Echo.cpp ****         returnval = limit;
 9684              		.loc 20 1843 5 view .LVU2714
 9685 05fc B0EE007A 		vmov.f32	s14, #2.0e+0
 9686              	.LBE1882:
 9687              	.LBE1881:
 401:Veno-Echo.cpp **** 
 9688              		.loc 20 401 34 view .LVU2715
 9689 0600 9DED090A 		vldr.32	s0, [sp, #36]
 400:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 9690              		.loc 20 400 23 view .LVU2716
 9691 0604 CDED087A 		vstr.32	s15, [sp, #32]
 401:Veno-Echo.cpp **** 
 9692              		.loc 20 401 9 is_stmt 1 view .LVU2717
 9693              	.LVL605:
 9694              	.LBB1886:
 9695              	.LBI1881:
1840:Veno-Echo.cpp **** {
 9696              		.loc 20 1840 7 view .LVU2718
 9697              	.LBB1883:
1842:Veno-Echo.cpp ****     if (input > limit)
 9698              		.loc 20 1842 5 view .LVU2719
1843:Veno-Echo.cpp ****         returnval = limit;
 9699              		.loc 20 1843 5 view .LVU2720
 9700 0608 B4EEC70A 		vcmpe.f32	s0, s14
 9701 060c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9702 0610 00F3EA80 		bgt	.L536
1845:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9703              		.loc 20 1845 10 view .LVU2721
 9704 0614 B8EE007A 		vmov.f32	s14, #-2.0e+0
 9705              	.LBE1883:
 9706              	.LBE1886:
 9707              	.LBB1887:
 403:Veno-Echo.cpp **** {
 9708              		.loc 20 403 1 is_stmt 0 view .LVU2722
 9709 0618 6A4B     		ldr	r3, .L581+36
 9710 061a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9711              	.LBE1887:
 9712              	.LBB1909:
 9713              	.LBB1884:
1846:Veno-Echo.cpp ****     else
 9714              		.loc 20 1846 19 view .LVU2723
 9715 061c B4EE470A 		vcmp.f32	s0, s14
 9716 0620 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9717 0624 48BF     		it	mi
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 310


 9718 0626 B0EE470A 		vmovmi.f32	s0, s14
 9719              	.LVL606:
1850:Veno-Echo.cpp **** }
 9720              		.loc 20 1850 5 is_stmt 1 view .LVU2724
1850:Veno-Echo.cpp **** }
 9721              		.loc 20 1850 5 is_stmt 0 view .LVU2725
 9722              	.LBE1884:
 9723              	.LBE1909:
 401:Veno-Echo.cpp **** 
 9724              		.loc 20 401 23 view .LVU2726
 9725 062a 8DED090A 		vstr.32	s0, [sp, #36]
 403:Veno-Echo.cpp **** {
 9726              		.loc 20 403 1 is_stmt 1 view .LVU2727
 9727              	.LBB1910:
 9728 062e 002B     		cmp	r3, #0
 9729 0630 00F0E380 		beq	.L574
 9730              	.L502:
 9731              	.LBE1910:
 447:Veno-Echo.cpp ****         static float RNegFB{};
 9732              		.loc 20 447 9 view .LVU2728
 448:Veno-Echo.cpp **** 
 9733              		.loc 20 448 9 view .LVU2729
 451:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9734              		.loc 20 451 9 view .LVU2730
 451:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9735              		.loc 20 451 22 is_stmt 0 view .LVU2731
 9736 0634 644B     		ldr	r3, .L581+40
 9737              	.LBB1911:
 9738              	.LBB1912:
  53:envFollow.h   **** 
  54:envFollow.h   ****     float GetEnv(float sample)
  55:envFollow.h   ****     {
  56:envFollow.h   ****         //remove average DC offset:
  57:envFollow.h   ****         avg = (w * sample) + ((1-w) * avg);
 9739              		.loc 12 57 16 view .LVU2732
 9740 0636 D8ED042A 		vldr.32	s5, [r8, #16]
 9741              	.LBE1912:
 9742              	.LBE1911:
 451:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9743              		.loc 20 451 22 view .LVU2733
 9744 063a D3ED004A 		vldr.32	s9, [r3]
 9745 063e 634B     		ldr	r3, .L581+44
 9746              	.LBB1924:
 9747              	.LBB1913:
 9748              		.loc 12 57 37 view .LVU2734
 9749 0640 98ED006A 		vldr.32	s12, [r8]
 9750              	.LBE1913:
 9751              	.LBE1924:
 451:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9752              		.loc 20 451 22 view .LVU2735
 9753 0644 93ED007A 		vldr.32	s14, [r3]
 454:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9754              		.loc 20 454 22 view .LVU2736
 9755 0648 614B     		ldr	r3, .L581+48
 451:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9756              		.loc 20 451 9 view .LVU2737
 9757 064a F4EEC74A 		vcmpe.f32	s9, s14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 311


 9758              	.LBB1925:
 9759              	.LBB1926:
 9760              		.loc 12 57 16 view .LVU2738
 9761 064e D9ED043A 		vldr.32	s7, [r9, #16]
  58:envFollow.h   ****         sample_noDC = sample - avg;
  59:envFollow.h   **** 
  60:envFollow.h   ****         //take absolute
  61:envFollow.h   ****         pos_sample = fabsf(sample_noDC);
  62:envFollow.h   ****         //return static_cast<int>(pos_sample);
  63:envFollow.h   **** 
  64:envFollow.h   ****         //remove ripple
  65:envFollow.h   ****         avg_env = (w_env * pos_sample) + ((1-w_env) * avg_env);
 9762              		.loc 12 65 20 view .LVU2739
 9763 0652 99ED054A 		vldr.32	s8, [r9, #20]
 9764              		.loc 12 65 53 view .LVU2740
 9765 0656 99ED032A 		vldr.32	s4, [r9, #12]
 9766              	.LBE1926:
 9767              	.LBE1925:
 451:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9768              		.loc 20 451 9 view .LVU2741
 9769 065a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9770              	.LBB1935:
 9771              	.LBB1914:
 9772              		.loc 12 65 20 view .LVU2742
 9773 065e 98ED053A 		vldr.32	s6, [r8, #20]
 9774              		.loc 12 65 53 view .LVU2743
 9775 0662 98ED031A 		vldr.32	s2, [r8, #12]
 9776              	.LBE1914:
 9777              	.LBE1935:
 470:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9778              		.loc 20 470 13 view .LVU2744
 9779 0666 DFED5B1A 		vldr.32	s3, .L581+52
 9780 066a 58BF     		it	pl
 9781 066c 74EEC74A 		vsubpl.f32	s9, s9, s14
 454:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9782              		.loc 20 454 9 is_stmt 1 view .LVU2745
 454:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9783              		.loc 20 454 22 is_stmt 0 view .LVU2746
 9784 0670 93ED007A 		vldr.32	s14, [r3]
 9785 0674 584B     		ldr	r3, .L581+56
 9786 0676 D3ED006A 		vldr.32	s13, [r3]
 457:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 9787              		.loc 20 457 15 view .LVU2747
 9788 067a 67EEA44A 		vmul.f32	s9, s15, s9
 9789              	.LBB1936:
 9790              	.LBB1927:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9791              		.loc 12 57 37 view .LVU2748
 9792 067e D9ED007A 		vldr.32	s15, [r9]
 9793              	.LBE1927:
 9794              	.LBE1936:
 454:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9795              		.loc 20 454 9 view .LVU2749
 9796 0682 B4EEE67A 		vcmpe.f32	s14, s13
 461:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9797              		.loc 20 461 36 view .LVU2750
 9798 0686 554B     		ldr	r3, .L581+60
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 312


 454:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9799              		.loc 20 454 9 view .LVU2751
 9800 0688 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9801 068c 58BF     		it	pl
 9802 068e 37EE667A 		vsubpl.f32	s14, s14, s13
 457:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 9803              		.loc 20 457 9 is_stmt 1 view .LVU2752
 9804              	.LVL607:
 458:Veno-Echo.cpp **** 
 9805              		.loc 20 458 9 view .LVU2753
 461:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9806              		.loc 20 461 36 is_stmt 0 view .LVU2754
 9807 0692 F7EE006A 		vmov.f32	s13, #1.0e+0
 458:Veno-Echo.cpp **** 
 9808              		.loc 20 458 15 view .LVU2755
 9809 0696 20EE070A 		vmul.f32	s0, s0, s14
 9810              	.LVL608:
 461:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9811              		.loc 20 461 9 is_stmt 1 view .LVU2756
 9812              	.LBB1937:
 9813              	.LBB1915:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9814              		.loc 12 57 33 is_stmt 0 view .LVU2757
 9815 069a 36EEE25A 		vsub.f32	s10, s13, s5
 9816              	.LBE1915:
 9817              	.LBE1937:
 9818              	.LBB1938:
 9819              	.LBB1928:
 9820 069e 76EEE35A 		vsub.f32	s11, s13, s7
 9821              	.LBE1928:
 9822              	.LBE1938:
 9823              	.LBB1939:
 9824              	.LBB1916:
 9825              		.loc 12 65 45 view .LVU2758
 9826 06a2 36EEC37A 		vsub.f32	s14, s13, s6
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9827              		.loc 12 57 37 view .LVU2759
 9828 06a6 25EE065A 		vmul.f32	s10, s10, s12
 9829              	.LBE1916:
 9830              	.LBE1939:
 461:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9831              		.loc 20 461 36 view .LVU2760
 9832 06aa 93ED006A 		vldr.32	s12, [r3]
 9833              	.LBB1940:
 9834              	.LBB1929:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9835              		.loc 12 57 37 view .LVU2761
 9836 06ae 65EEA75A 		vmul.f32	s11, s11, s15
 9837              		.loc 12 65 45 view .LVU2762
 9838 06b2 76EEC47A 		vsub.f32	s15, s13, s8
 9839              	.LBE1929:
 9840              	.LBE1940:
 9841              	.LBB1941:
 9842              	.LBB1917:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9843              		.loc 12 57 28 view .LVU2763
 9844 06b6 A4EEA25A 		vfma.f32	s10, s9, s5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 313


 9845              	.LBE1917:
 9846              	.LBE1941:
 9847              	.LBB1942:
 9848              	.LBB1930:
 9849 06ba E0EE235A 		vfma.f32	s11, s0, s7
 9850              		.loc 12 65 53 view .LVU2764
 9851 06be 67EE827A 		vmul.f32	s15, s15, s4
 9852              	.LBE1930:
 9853              	.LBE1942:
 9854              	.LBB1943:
 9855              	.LBB1918:
 9856 06c2 27EE017A 		vmul.f32	s14, s14, s2
 9857              	.LBE1918:
 9858              	.LBE1943:
 461:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9859              		.loc 20 461 36 view .LVU2765
 9860 06c6 76EEC66A 		vsub.f32	s13, s13, s12
 9861              	.LBB1944:
 9862              	.LBB1919:
  58:envFollow.h   **** 
 9863              		.loc 12 58 30 view .LVU2766
 9864 06ca 34EEC52A 		vsub.f32	s4, s9, s10
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9865              		.loc 12 57 13 view .LVU2767
 9866 06ce 88ED005A 		vstr.32	s10, [r8]
 9867              	.LBE1919:
 9868              	.LBE1944:
 9869              	.LBB1945:
 9870              	.LBB1931:
  58:envFollow.h   **** 
 9871              		.loc 12 58 30 view .LVU2768
 9872 06d2 70EE652A 		vsub.f32	s5, s0, s11
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9873              		.loc 12 57 13 view .LVU2769
 9874 06d6 C9ED005A 		vstr.32	s11, [r9]
 9875              	.LBE1931:
 9876              	.LBE1945:
 461:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9877              		.loc 20 461 89 view .LVU2770
 9878 06da 66EE005A 		vmul.f32	s11, s12, s0
 9879              	.LBB1946:
 9880              	.LBB1920:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9881              		.loc 12 61 27 view .LVU2771
 9882 06de F0EEC23A 		vabs.f32	s7, s4
  58:envFollow.h   **** 
 9883              		.loc 12 58 21 view .LVU2772
 9884 06e2 88ED022A 		vstr.32	s4, [r8, #8]
 9885              	.LBE1920:
 9886              	.LBE1946:
 9887              	.LBB1947:
 9888              	.LBB1932:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9889              		.loc 12 61 27 view .LVU2773
 9890 06e6 B0EEE25A 		vabs.f32	s10, s5
  58:envFollow.h   **** 
 9891              		.loc 12 58 21 view .LVU2774
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 314


 9892 06ea C9ED022A 		vstr.32	s5, [r9, #8]
 9893              	.LBE1932:
 9894              	.LBE1947:
 462:Veno-Echo.cpp **** 
 9895              		.loc 20 462 89 view .LVU2775
 9896 06ee 26EE246A 		vmul.f32	s12, s12, s9
 9897              	.LBB1948:
 9898              	.LBB1921:
 9899              		.loc 12 65 40 view .LVU2776
 9900 06f2 A3EE837A 		vfma.f32	s14, s7, s6
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9901              		.loc 12 61 20 view .LVU2777
 9902 06f6 C8ED013A 		vstr.32	s7, [r8, #4]
 9903              	.LBE1921:
 9904              	.LBE1948:
 9905              	.LBB1949:
 9906              	.LBB1933:
 9907              		.loc 12 65 40 view .LVU2778
 9908 06fa E5EE047A 		vfma.f32	s15, s10, s8
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9909              		.loc 12 61 20 view .LVU2779
 9910 06fe 89ED015A 		vstr.32	s10, [r9, #4]
 9911              	.LBE1933:
 9912              	.LBE1949:
 461:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9913              		.loc 20 461 15 view .LVU2780
 9914 0702 E6EEA45A 		vfma.f32	s11, s13, s9
 9915              	.LVL609:
 462:Veno-Echo.cpp **** 
 9916              		.loc 20 462 9 is_stmt 1 view .LVU2781
 462:Veno-Echo.cpp **** 
 9917              		.loc 20 462 15 is_stmt 0 view .LVU2782
 9918 0706 A6EE806A 		vfma.f32	s12, s13, s0
 9919              	.LVL610:
 466:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 9920              		.loc 20 466 9 is_stmt 1 view .LVU2783
 9921              	.LBB1950:
 9922              	.LBI1911:
  54:envFollow.h   ****     {
 9923              		.loc 12 54 11 view .LVU2784
 9924              	.LBB1922:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9925              		.loc 12 57 9 view .LVU2785
  58:envFollow.h   **** 
 9926              		.loc 12 58 9 view .LVU2786
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9927              		.loc 12 61 9 view .LVU2787
 9928              		.loc 12 65 9 view .LVU2788
 9929              	.LBE1922:
 9930              	.LBE1950:
 470:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9931              		.loc 20 470 13 is_stmt 0 view .LVU2789
 9932 070a B4EEE17A 		vcmpe.f32	s14, s3
 9933              	.LBB1951:
 9934              	.LBB1923:
 9935              		.loc 12 65 17 view .LVU2790
 9936 070e 88ED037A 		vstr.32	s14, [r8, #12]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 315


  66:envFollow.h   **** 
  67:envFollow.h   ****         return avg_env;
 9937              		.loc 12 67 9 is_stmt 1 view .LVU2791
 9938              	.LVL611:
 9939              		.loc 12 67 9 is_stmt 0 view .LVU2792
 9940              	.LBE1923:
 9941              	.LBE1951:
 467:Veno-Echo.cpp **** 
 9942              		.loc 20 467 9 is_stmt 1 view .LVU2793
 9943              	.LBB1952:
 9944              	.LBI1925:
  54:envFollow.h   ****     {
 9945              		.loc 12 54 11 view .LVU2794
 9946              	.LBB1934:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9947              		.loc 12 57 9 view .LVU2795
  58:envFollow.h   **** 
 9948              		.loc 12 58 9 view .LVU2796
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9949              		.loc 12 61 9 view .LVU2797
  65:envFollow.h   **** 
 9950              		.loc 12 65 9 view .LVU2798
  65:envFollow.h   **** 
 9951              		.loc 12 65 17 is_stmt 0 view .LVU2799
 9952 0712 C9ED037A 		vstr.32	s15, [r9, #12]
 9953              		.loc 12 67 9 is_stmt 1 view .LVU2800
 9954              	.LVL612:
 9955              		.loc 12 67 9 is_stmt 0 view .LVU2801
 9956              	.LBE1934:
 9957              	.LBE1952:
 470:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9958              		.loc 20 470 13 is_stmt 1 view .LVU2802
 9959 0716 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9960 071a 3DDB     		blt	.L564
 471:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9961              		.loc 20 471 17 view .LVU2803
 471:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9962              		.loc 20 471 32 is_stmt 0 view .LVU2804
 9963 071c 37EE617A 		vsub.f32	s14, s14, s3
 9964              	.LVL613:
 471:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9965              		.loc 20 471 47 view .LVU2805
 9966 0720 F0EE086A 		vmov.f32	s13, #3.0e+0
 9967 0724 27EE267A 		vmul.f32	s14, s14, s13
 9968              	.L508:
 475:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 9969              		.loc 20 475 13 view .LVU2806
 9970 0728 DFED2A6A 		vldr.32	s13, .L581+52
 9971 072c 274B     		ldr	r3, .L581+44
 9972 072e F4EEE67A 		vcmpe.f32	s15, s13
 9973 0732 83ED007A 		vstr.32	s14, [r3]
 475:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 9974              		.loc 20 475 13 is_stmt 1 view .LVU2807
 9975 0736 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9976 073a 2ADB     		blt	.L565
 476:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9977              		.loc 20 476 17 view .LVU2808
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 316


 476:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9978              		.loc 20 476 32 is_stmt 0 view .LVU2809
 9979 073c 77EEE67A 		vsub.f32	s15, s15, s13
 9980              	.LVL614:
 476:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9981              		.loc 20 476 47 view .LVU2810
 9982 0740 B0EE087A 		vmov.f32	s14, #3.0e+0
 9983 0744 67EE877A 		vmul.f32	s15, s15, s14
 9984              	.L510:
 9985 0748 234B     		ldr	r3, .L581+56
 480:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 9986              		.loc 20 480 15 view .LVU2811
 9987 074a 38EEA50A 		vadd.f32	s0, s17, s11
 9988              	.LVL615:
 481:Veno-Echo.cpp ****  
 9989              		.loc 20 481 15 view .LVU2812
 9990 074e 38EE068A 		vadd.f32	s16, s16, s12
 9991              	.LVL616:
 481:Veno-Echo.cpp ****  
 9992              		.loc 20 481 15 view .LVU2813
 9993 0752 C3ED007A 		vstr.32	s15, [r3]
 480:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 9994              		.loc 20 480 9 is_stmt 1 view .LVU2814
 9995              	.LVL617:
 481:Veno-Echo.cpp ****  
 9996              		.loc 20 481 9 view .LVU2815
 484:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 9997              		.loc 20 484 9 view .LVU2816
 9998              	.LBB1953:
 9999              	.LBI1953:
1840:Veno-Echo.cpp **** {
 10000              		.loc 20 1840 7 view .LVU2817
 10001              	.LBB1954:
1842:Veno-Echo.cpp ****     if (input > limit)
 10002              		.loc 20 1842 5 view .LVU2818
1843:Veno-Echo.cpp ****         returnval = limit;
 10003              		.loc 20 1843 5 view .LVU2819
 10004 0756 F0EE007A 		vmov.f32	s15, #2.0e+0
 10005 075a B4EEE70A 		vcmpe.f32	s0, s15
 10006 075e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10007 0762 13DC     		bgt	.L542
1845:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10008              		.loc 20 1845 10 view .LVU2820
 10009 0764 F8EE007A 		vmov.f32	s15, #-2.0e+0
1846:Veno-Echo.cpp ****     else
 10010              		.loc 20 1846 19 is_stmt 0 view .LVU2821
 10011 0768 B4EE670A 		vcmp.f32	s0, s15
 10012 076c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10013 0770 48BF     		it	mi
 10014 0772 B0EE670A 		vmovmi.f32	s0, s15
 10015              	.LVL618:
 10016              	.L512:
1850:Veno-Echo.cpp **** }
 10017              		.loc 20 1850 5 is_stmt 1 view .LVU2822
1850:Veno-Echo.cpp **** }
 10018              		.loc 20 1850 5 is_stmt 0 view .LVU2823
 10019              	.LBE1954:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 317


 10020              	.LBE1953:
 485:Veno-Echo.cpp **** 
 10021              		.loc 20 485 9 is_stmt 1 view .LVU2824
 10022              	.LBB1956:
 10023              	.LBI1613:
1840:Veno-Echo.cpp **** {
 10024              		.loc 20 1840 7 view .LVU2825
 10025              	.LBB1615:
1842:Veno-Echo.cpp ****     if (input > limit)
 10026              		.loc 20 1842 5 view .LVU2826
1843:Veno-Echo.cpp ****         returnval = limit;
 10027              		.loc 20 1843 5 view .LVU2827
 10028 0776 F0EE007A 		vmov.f32	s15, #2.0e+0
 10029 077a B4EEE78A 		vcmpe.f32	s16, s15
 10030 077e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10031 0782 7FF78FAC 		ble	.L575
1844:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10032              		.loc 20 1844 19 is_stmt 0 view .LVU2828
 10033 0786 B0EE678A 		vmov.f32	s16, s15
 10034              	.LVL619:
1844:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10035              		.loc 20 1844 19 view .LVU2829
 10036 078a 94E4     		b	.L514
 10037              	.LVL620:
 10038              	.L542:
1844:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10039              		.loc 20 1844 19 view .LVU2830
 10040              	.LBE1615:
 10041              	.LBE1956:
 10042              	.LBB1957:
 10043              	.LBB1955:
 10044 078c B0EE670A 		vmov.f32	s0, s15
 10045              	.LVL621:
1844:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10046              		.loc 20 1844 19 view .LVU2831
 10047 0790 F1E7     		b	.L512
 10048              	.LVL622:
 10049              	.L565:
1844:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10050              		.loc 20 1844 19 view .LVU2832
 10051              	.LBE1955:
 10052              	.LBE1957:
 477:Veno-Echo.cpp **** 
 10053              		.loc 20 477 25 view .LVU2833
 10054 0792 DFED137A 		vldr.32	s15, .L581+64
 10055              	.LVL623:
 477:Veno-Echo.cpp **** 
 10056              		.loc 20 477 25 view .LVU2834
 10057 0796 D7E7     		b	.L510
 10058              	.LVL624:
 10059              	.L564:
 473:Veno-Echo.cpp ****             
 10060              		.loc 20 473 25 view .LVU2835
 10061 0798 9FED117A 		vldr.32	s14, .L581+64
 10062              	.LVL625:
 473:Veno-Echo.cpp ****             
 10063              		.loc 20 473 25 view .LVU2836
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 318


 10064 079c C4E7     		b	.L508
 10065              	.L582:
 10066 079e 00BF     		.align	2
 10067              	.L581:
 10068 07a0 C1270900 		.word	600001
 10069 07a4 BF270900 		.word	599999
 10070 07a8 189F2400 		.word	2400024
 10071 07ac 249F2400 		.word	2400036
 10072 07b0 1C9F2400 		.word	2400028
 10073 07b4 00000000 		.word	.LANCHOR102
 10074 07b8 00000000 		.word	.LANCHOR103
 10075 07bc 00000000 		.word	.LANCHOR0
 10076 07c0 00000000 		.word	.LANCHOR1
 10077 07c4 00000000 		.word	.LANCHOR82
 10078 07c8 00000000 		.word	.LANCHOR31
 10079 07cc 00000000 		.word	.LANCHOR125
 10080 07d0 00000000 		.word	.LANCHOR43
 10081 07d4 CDCCCC3E 		.word	1053609165
 10082 07d8 00000000 		.word	.LANCHOR126
 10083 07dc 00000000 		.word	.LANCHOR71
 10084 07e0 00000000 		.word	0
 10085 07e4 C0270900 		.word	600000
 10086              	.LVL626:
 10087              	.L536:
 10088              	.LBB1958:
 403:Veno-Echo.cpp **** {
 10089              		.loc 20 403 1 view .LVU2837
 10090 07e8 D64B     		ldr	r3, .L583
 10091              	.LBE1958:
 10092              	.LBB1959:
 10093              	.LBB1885:
1844:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10094              		.loc 20 1844 19 view .LVU2838
 10095 07ea B0EE470A 		vmov.f32	s0, s14
 10096              	.LVL627:
1850:Veno-Echo.cpp **** }
 10097              		.loc 20 1850 5 is_stmt 1 view .LVU2839
1850:Veno-Echo.cpp **** }
 10098              		.loc 20 1850 5 is_stmt 0 view .LVU2840
 10099              	.LBE1885:
 10100              	.LBE1959:
 10101              	.LBB1960:
 403:Veno-Echo.cpp **** {
 10102              		.loc 20 403 1 view .LVU2841
 10103 07ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10104              	.LBE1960:
 401:Veno-Echo.cpp **** 
 10105              		.loc 20 401 23 view .LVU2842
 10106 07f0 8DED090A 		vstr.32	s0, [sp, #36]
 403:Veno-Echo.cpp **** {
 10107              		.loc 20 403 1 is_stmt 1 view .LVU2843
 10108              	.LBB1961:
 10109 07f4 002B     		cmp	r3, #0
 10110 07f6 7FF41DAF 		bne	.L502
 10111              	.L574:
 10112              	.LBB1888:
 409:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 319


 10113              		.loc 20 409 9 view .LVU2844
 409:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 10114              		.loc 20 409 22 is_stmt 0 view .LVU2845
 10115 07fa 9FEDD39A 		vldr.32	s18, .L583+4
 10116 07fe D34D     		ldr	r5, .L583+8
 10117 0800 27EE890A 		vmul.f32	s0, s15, s18
 410:Veno-Echo.cpp **** 
 10118              		.loc 20 410 22 view .LVU2846
 10119 0804 D24C     		ldr	r4, .L583+12
 409:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 10120              		.loc 20 409 22 view .LVU2847
 10121 0806 2846     		mov	r0, r5
 10122 0808 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10123              	.LVL628:
 410:Veno-Echo.cpp **** 
 10124              		.loc 20 410 9 is_stmt 1 view .LVU2848
 410:Veno-Echo.cpp **** 
 10125              		.loc 20 410 22 is_stmt 0 view .LVU2849
 10126 080c 9DED090A 		vldr.32	s0, [sp, #36]
 10127 0810 2046     		mov	r0, r4
 10128 0812 20EE090A 		vmul.f32	s0, s0, s18
 10129 0816 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10130              	.LVL629:
 413:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10131              		.loc 20 413 9 is_stmt 1 view .LVU2850
 413:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10132              		.loc 20 413 9 is_stmt 0 view .LVU2851
 10133              	.LBE1888:
 10134              	.LBE1961:
 10135              	.LBE1988:
 10136              	.LBE1999:
  23:../DaisySP/Source/Filters/svf.h ****     /** Initializes the filter
  24:../DaisySP/Source/Filters/svf.h ****         float sample_rate - sample rate of the audio engine being run, and the frequency that the P
  25:../DaisySP/Source/Filters/svf.h ****     */
  26:../DaisySP/Source/Filters/svf.h ****     void Init(float sample_rate);
  27:../DaisySP/Source/Filters/svf.h **** 
  28:../DaisySP/Source/Filters/svf.h **** 
  29:../DaisySP/Source/Filters/svf.h ****     /** 
  30:../DaisySP/Source/Filters/svf.h ****         Process the input signal, updating all of the outputs.
  31:../DaisySP/Source/Filters/svf.h ****     */
  32:../DaisySP/Source/Filters/svf.h ****     void Process(float in);
  33:../DaisySP/Source/Filters/svf.h **** 
  34:../DaisySP/Source/Filters/svf.h **** 
  35:../DaisySP/Source/Filters/svf.h ****     /** sets the frequency of the cutoff frequency. 
  36:../DaisySP/Source/Filters/svf.h ****         f must be between 0.0 and sample_rate / 3
  37:../DaisySP/Source/Filters/svf.h ****     */
  38:../DaisySP/Source/Filters/svf.h ****     void SetFreq(float f);
  39:../DaisySP/Source/Filters/svf.h **** 
  40:../DaisySP/Source/Filters/svf.h ****     /** sets the resonance of the filter.
  41:../DaisySP/Source/Filters/svf.h ****         Must be between 0.0 and 1.0 to ensure stability.
  42:../DaisySP/Source/Filters/svf.h ****     */
  43:../DaisySP/Source/Filters/svf.h ****     void SetRes(float r);
  44:../DaisySP/Source/Filters/svf.h **** 
  45:../DaisySP/Source/Filters/svf.h ****     /** sets the drive of the filter 
  46:../DaisySP/Source/Filters/svf.h ****         affects the response of the resonance of the filter
  47:../DaisySP/Source/Filters/svf.h ****     */
  48:../DaisySP/Source/Filters/svf.h ****     void SetDrive(float d);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 320


  49:../DaisySP/Source/Filters/svf.h ****     /** lowpass output
  50:../DaisySP/Source/Filters/svf.h ****         \return low pass output of the filter
  51:../DaisySP/Source/Filters/svf.h ****     */
  52:../DaisySP/Source/Filters/svf.h ****     inline float Low() { return out_low_; }
 10137              		.loc 9 52 26 is_stmt 1 view .LVU2852
 10138              	.LBB2000:
 10139              	.LBB1989:
 10140              	.LBB1962:
 10141              	.LBB1903:
 413:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10142              		.loc 20 413 40 is_stmt 0 view .LVU2853
 10143 081a F2EE046A 		vmov.f32	s13, #1.0e+1
 10144 081e 95ED0C7A 		vldr.32	s14, [r5, #48]
 417:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10145              		.loc 20 417 49 view .LVU2854
 10146 0822 0CAA     		add	r2, sp, #48
 414:Veno-Echo.cpp ****         
 10147              		.loc 20 414 40 view .LVU2855
 10148 0824 D4ED0C7A 		vldr.32	s15, [r4, #48]
 417:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10149              		.loc 20 417 49 view .LVU2856
 10150 0828 08A9     		add	r1, sp, #32
 413:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10151              		.loc 20 413 40 view .LVU2857
 10152 082a 27EE267A 		vmul.f32	s14, s14, s13
 417:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10153              		.loc 20 417 49 view .LVU2858
 10154 082e C948     		ldr	r0, .L583+16
 414:Veno-Echo.cpp ****         
 10155              		.loc 20 414 40 view .LVU2859
 10156 0830 67EEA67A 		vmul.f32	s15, s15, s13
 413:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10157              		.loc 20 413 47 view .LVU2860
 10158 0834 8DED0C7A 		vstr.32	s14, [sp, #48]
 414:Veno-Echo.cpp ****         
 10159              		.loc 20 414 9 is_stmt 1 view .LVU2861
 10160              	.LVL630:
 414:Veno-Echo.cpp ****         
 10161              		.loc 20 414 9 is_stmt 0 view .LVU2862
 10162              	.LBE1903:
 10163              	.LBE1962:
 10164              	.LBE1989:
 10165              	.LBE2000:
 10166              		.loc 9 52 26 is_stmt 1 view .LVU2863
 10167              	.LBB2001:
 10168              	.LBB1990:
 10169              	.LBB1963:
 10170              	.LBB1904:
 414:Veno-Echo.cpp ****         
 10171              		.loc 20 414 47 is_stmt 0 view .LVU2864
 10172 0838 CDED0D7A 		vstr.32	s15, [sp, #52]
 417:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10173              		.loc 20 417 9 is_stmt 1 view .LVU2865
 417:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10174              		.loc 20 417 49 is_stmt 0 view .LVU2866
 10175 083c FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10176              	.LVL631:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 321


 418:Veno-Echo.cpp **** 
 10177              		.loc 20 418 49 view .LVU2867
 10178 0840 0DAA     		add	r2, sp, #52
 10179 0842 09A9     		add	r1, sp, #36
 10180 0844 C448     		ldr	r0, .L583+20
 417:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10181              		.loc 20 417 78 view .LVU2868
 10182 0846 8DED0E0A 		vstr.32	s0, [sp, #56]
 418:Veno-Echo.cpp **** 
 10183              		.loc 20 418 9 is_stmt 1 view .LVU2869
 418:Veno-Echo.cpp **** 
 10184              		.loc 20 418 49 is_stmt 0 view .LVU2870
 10185 084a FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10186              	.LVL632:
 10187              	.LBB1889:
 10188              	.LBB1890:
1843:Veno-Echo.cpp ****         returnval = limit;
 10189              		.loc 20 1843 5 view .LVU2871
 10190 084e F0EE006A 		vmov.f32	s13, #2.0e+0
 10191              	.LBE1890:
 10192              	.LBE1889:
 421:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 10193              		.loc 20 421 36 view .LVU2872
 10194 0852 9DED0E7A 		vldr.32	s14, [sp, #56]
 418:Veno-Echo.cpp **** 
 10195              		.loc 20 418 49 view .LVU2873
 10196 0856 F0EE407A 		vmov.f32	s15, s0
 421:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 10197              		.loc 20 421 9 is_stmt 1 view .LVU2874
 10198              	.LVL633:
 10199              	.LBB1894:
 10200              	.LBI1889:
1840:Veno-Echo.cpp **** {
 10201              		.loc 20 1840 7 view .LVU2875
 10202              	.LBB1891:
1842:Veno-Echo.cpp ****     if (input > limit)
 10203              		.loc 20 1842 5 view .LVU2876
1843:Veno-Echo.cpp ****         returnval = limit;
 10204              		.loc 20 1843 5 view .LVU2877
 10205 085a B4EEE67A 		vcmpe.f32	s14, s13
 10206 085e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10207 0862 00F3A681 		bgt	.L537
1845:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10208              		.loc 20 1845 10 view .LVU2878
 10209 0866 F8EE006A 		vmov.f32	s13, #-2.0e+0
 10210 086a B4EEE67A 		vcmpe.f32	s14, s13
 10211 086e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10212 0872 00F1B581 		bmi	.L538
 10213 0876 27EE090A 		vmul.f32	s0, s14, s18
 10214              	.LVL634:
 10215              	.L503:
1850:Veno-Echo.cpp **** }
 10216              		.loc 20 1850 5 view .LVU2879
1850:Veno-Echo.cpp **** }
 10217              		.loc 20 1850 5 is_stmt 0 view .LVU2880
 10218              	.LBE1891:
 10219              	.LBE1894:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 322


 10220              	.LBB1895:
 10221              	.LBB1896:
1843:Veno-Echo.cpp ****         returnval = limit;
 10222              		.loc 20 1843 5 view .LVU2881
 10223 087a F0EE006A 		vmov.f32	s13, #2.0e+0
 10224              	.LBE1896:
 10225              	.LBE1895:
 421:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 10226              		.loc 20 421 25 view .LVU2882
 10227 087e 8DED0E7A 		vstr.32	s14, [sp, #56]
 422:Veno-Echo.cpp **** 
 10228              		.loc 20 422 9 is_stmt 1 view .LVU2883
 10229              	.LVL635:
 10230              	.LBB1899:
 10231              	.LBI1895:
1840:Veno-Echo.cpp **** {
 10232              		.loc 20 1840 7 view .LVU2884
 10233              	.LBB1897:
1842:Veno-Echo.cpp ****     if (input > limit)
 10234              		.loc 20 1842 5 view .LVU2885
1843:Veno-Echo.cpp ****         returnval = limit;
 10235              		.loc 20 1843 5 view .LVU2886
 10236 0882 F4EEE67A 		vcmpe.f32	s15, s13
 10237 0886 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10238 088a 00F38F81 		bgt	.L539
1845:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10239              		.loc 20 1845 10 view .LVU2887
 10240 088e B8EE007A 		vmov.f32	s14, #-2.0e+0
1846:Veno-Echo.cpp ****     else
 10241              		.loc 20 1846 19 is_stmt 0 view .LVU2888
 10242 0892 F4EE477A 		vcmp.f32	s15, s14
 10243 0896 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10244 089a 48BF     		it	mi
 10245 089c F0EE477A 		vmovmi.f32	s15, s14
 10246              	.LVL636:
 10247              	.L504:
1850:Veno-Echo.cpp **** }
 10248              		.loc 20 1850 5 is_stmt 1 view .LVU2889
1850:Veno-Echo.cpp **** }
 10249              		.loc 20 1850 5 is_stmt 0 view .LVU2890
 10250              	.LBE1897:
 10251              	.LBE1899:
 425:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10252              		.loc 20 425 22 view .LVU2891
 10253 08a0 AE4D     		ldr	r5, .L583+24
 426:Veno-Echo.cpp **** 
 10254              		.loc 20 426 22 view .LVU2892
 10255 08a2 AF4C     		ldr	r4, .L583+28
 425:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10256              		.loc 20 425 22 view .LVU2893
 10257 08a4 2846     		mov	r0, r5
 422:Veno-Echo.cpp **** 
 10258              		.loc 20 422 25 view .LVU2894
 10259 08a6 CDED0F7A 		vstr.32	s15, [sp, #60]
 425:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10260              		.loc 20 425 9 is_stmt 1 view .LVU2895
 425:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 323


 10261              		.loc 20 425 22 is_stmt 0 view .LVU2896
 10262 08aa FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10263              	.LVL637:
 426:Veno-Echo.cpp **** 
 10264              		.loc 20 426 9 is_stmt 1 view .LVU2897
 426:Veno-Echo.cpp **** 
 10265              		.loc 20 426 22 is_stmt 0 view .LVU2898
 10266 08ae DFEDA67A 		vldr.32	s15, .L583+4
 10267 08b2 9DED0F0A 		vldr.32	s0, [sp, #60]
 10268 08b6 2046     		mov	r0, r4
 10269 08b8 20EE270A 		vmul.f32	s0, s0, s15
 10270 08bc FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10271              	.LVL638:
 428:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10272              		.loc 20 428 9 is_stmt 1 view .LVU2899
 428:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10273              		.loc 20 428 9 is_stmt 0 view .LVU2900
 10274              	.LBE1904:
 10275              	.LBE1963:
 10276              	.LBE1990:
 10277              	.LBE2001:
  53:../DaisySP/Source/Filters/svf.h ****     /** highpass output
  54:../DaisySP/Source/Filters/svf.h ****         \return high pass output of the filter
  55:../DaisySP/Source/Filters/svf.h ****     */
  56:../DaisySP/Source/Filters/svf.h ****     inline float High() { return out_high_; }
 10278              		.loc 9 56 27 is_stmt 1 view .LVU2901
 10279              	.LBB2002:
 10280              	.LBB1991:
 10281              	.LBB1964:
 10282              	.LBB1905:
 428:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10283              		.loc 20 428 41 is_stmt 0 view .LVU2902
 10284 08c0 F2EE046A 		vmov.f32	s13, #1.0e+1
 10285 08c4 95ED0D7A 		vldr.32	s14, [r5, #52]
 431:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10286              		.loc 20 431 45 view .LVU2903
 10287 08c8 0EA9     		add	r1, sp, #56
 429:Veno-Echo.cpp **** 
 10288              		.loc 20 429 41 view .LVU2904
 10289 08ca D4ED0D7A 		vldr.32	s15, [r4, #52]
 431:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10290              		.loc 20 431 45 view .LVU2905
 10291 08ce 10AA     		add	r2, sp, #64
 428:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10292              		.loc 20 428 41 view .LVU2906
 10293 08d0 27EE267A 		vmul.f32	s14, s14, s13
 431:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10294              		.loc 20 431 45 view .LVU2907
 10295 08d4 A348     		ldr	r0, .L583+32
 429:Veno-Echo.cpp **** 
 10296              		.loc 20 429 41 view .LVU2908
 10297 08d6 67EEA67A 		vmul.f32	s15, s15, s13
 428:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10298              		.loc 20 428 48 view .LVU2909
 10299 08da 8DED107A 		vstr.32	s14, [sp, #64]
 429:Veno-Echo.cpp **** 
 10300              		.loc 20 429 9 is_stmt 1 view .LVU2910
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 324


 10301              	.LVL639:
 429:Veno-Echo.cpp **** 
 10302              		.loc 20 429 9 is_stmt 0 view .LVU2911
 10303              	.LBE1905:
 10304              	.LBE1964:
 10305              	.LBE1991:
 10306              	.LBE2002:
 10307              		.loc 9 56 27 is_stmt 1 view .LVU2912
 10308              	.LBB2003:
 10309              	.LBB1992:
 10310              	.LBB1965:
 10311              	.LBB1906:
 429:Veno-Echo.cpp **** 
 10312              		.loc 20 429 48 is_stmt 0 view .LVU2913
 10313 08de CDED117A 		vstr.32	s15, [sp, #68]
 431:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10314              		.loc 20 431 9 is_stmt 1 view .LVU2914
 431:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10315              		.loc 20 431 45 is_stmt 0 view .LVU2915
 10316 08e2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10317              	.LVL640:
 432:Veno-Echo.cpp **** 
 10318              		.loc 20 432 45 view .LVU2916
 10319 08e6 0FA9     		add	r1, sp, #60
 10320 08e8 11AA     		add	r2, sp, #68
 10321 08ea 9F48     		ldr	r0, .L583+36
 431:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10322              		.loc 20 431 25 view .LVU2917
 10323 08ec 8DED0E0A 		vstr.32	s0, [sp, #56]
 432:Veno-Echo.cpp **** 
 10324              		.loc 20 432 9 is_stmt 1 view .LVU2918
 432:Veno-Echo.cpp **** 
 10325              		.loc 20 432 45 is_stmt 0 view .LVU2919
 10326 08f0 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10327              	.LVL641:
 436:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10328              		.loc 20 436 44 view .LVU2920
 10329 08f4 0EAA     		add	r2, sp, #56
 10330 08f6 08A9     		add	r1, sp, #32
 10331 08f8 9C48     		ldr	r0, .L583+40
 432:Veno-Echo.cpp **** 
 10332              		.loc 20 432 25 view .LVU2921
 10333 08fa 8DED0F0A 		vstr.32	s0, [sp, #60]
 436:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10334              		.loc 20 436 9 is_stmt 1 view .LVU2922
 436:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10335              		.loc 20 436 44 is_stmt 0 view .LVU2923
 10336 08fe FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10337              	.LVL642:
 437:Veno-Echo.cpp **** 
 10338              		.loc 20 437 44 view .LVU2924
 10339 0902 0FAA     		add	r2, sp, #60
 10340 0904 09A9     		add	r1, sp, #36
 10341 0906 9A48     		ldr	r0, .L583+44
 436:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10342              		.loc 20 436 23 view .LVU2925
 10343 0908 8DED080A 		vstr.32	s0, [sp, #32]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 325


 437:Veno-Echo.cpp **** 
 10344              		.loc 20 437 9 is_stmt 1 view .LVU2926
 437:Veno-Echo.cpp **** 
 10345              		.loc 20 437 44 is_stmt 0 view .LVU2927
 10346 090c FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10347              	.LVL643:
 10348 0910 DDED087A 		vldr.32	s15, [sp, #32]
 437:Veno-Echo.cpp **** 
 10349              		.loc 20 437 23 view .LVU2928
 10350 0914 8DED090A 		vstr.32	s0, [sp, #36]
 10351              	.LBE1906:
 10352 0918 8CE6     		b	.L502
 10353              	.LVL644:
 10354              	.L535:
 437:Veno-Echo.cpp **** 
 10355              		.loc 20 437 23 view .LVU2929
 10356              	.LBE1965:
 10357              	.LBB1966:
 10358              	.LBB1879:
1844:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10359              		.loc 20 1844 19 view .LVU2930
 10360 091a F0EE477A 		vmov.f32	s15, s14
 10361              	.LVL645:
1844:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10362              		.loc 20 1844 19 view .LVU2931
 10363 091e 6DE6     		b	.L498
 10364              	.LVL646:
 10365              	.L488:
1844:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10366              		.loc 20 1844 19 view .LVU2932
 10367              	.LBE1879:
 10368              	.LBE1966:
 10369              	.LBB1967:
 10370              	.LBB1871:
 10371              	.LBB1867:
 126:delayline_reverse.h ****         {
 10372              		.loc 19 126 12 view .LVU2933
 10373 0920 944B     		ldr	r3, .L583+48
 126:delayline_reverse.h ****         {
 10374              		.loc 19 126 9 view .LVU2934
 10375 0922 E25C     		ldrb	r2, [r4, r3]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 10376              		.loc 19 126 12 view .LVU2935
 10377 0924 2344     		add	r3, r3, r4
 126:delayline_reverse.h ****         {
 10378              		.loc 19 126 9 view .LVU2936
 10379 0926 002A     		cmp	r2, #0
 10380 0928 3FF439AE 		beq	.L494
 10381              	.L571:
 126:delayline_reverse.h ****         {
 10382              		.loc 19 126 9 view .LVU2937
 10383 092c 924A     		ldr	r2, .L583+52
 10384 092e A018     		adds	r0, r4, r2
 10385 0930 A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 10386              		.loc 19 128 13 view .LVU2938
 10387 0932 002A     		cmp	r2, #0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 326


 10388 0934 3FF419AE 		beq	.L491
 10389              	.L492:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10390              		.loc 19 141 45 view .LVU2939
 10391 0938 DDED017A 		vldr.32	s15, [sp, #4]	@ int
 10392              	.LVL647:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10393              		.loc 19 141 45 view .LVU2940
 10394 093c B7EE006A 		vmov.f32	s12, #1.0e+0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10395              		.loc 19 141 37 view .LVU2941
 10396 0940 0399     		ldr	r1, [sp, #12]
 142:delayline_reverse.h ****                 {
 10397              		.loc 19 142 17 view .LVU2942
 10398 0942 0022     		movs	r2, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10399              		.loc 19 141 45 view .LVU2943
 10400 0944 F8EE676A 		vcvt.f32.u32	s13, s15
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10401              		.loc 19 141 37 view .LVU2944
 10402 0948 D1ED007A 		vldr.32	s15, [r1]
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10403              		.loc 19 141 45 view .LVU2945
 10404 094c 86EE267A 		vdiv.f32	s14, s12, s13
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10405              		.loc 19 141 37 view .LVU2946
 10406 0950 77EEC77A 		vsub.f32	s15, s15, s14
 142:delayline_reverse.h ****                 {
 10407              		.loc 19 142 17 view .LVU2947
 10408 0954 F5EEC07A 		vcmpe.f32	s15, #0
 10409 0958 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10410 095c 00F13A81 		bmi	.L497
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10411              		.loc 19 141 17 view .LVU2948
 10412 0960 C1ED007A 		vstr.32	s15, [r1]
 10413 0964 1BE6     		b	.L494
 10414              	.LVL648:
 10415              	.L478:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10416              		.loc 19 141 17 view .LVU2949
 10417              	.LBE1867:
 10418              	.LBE1871:
 10419              	.LBE1967:
 10420              	.LBB1968:
 10421              	.LBB1844:
 10422              	.LBB1833:
 126:delayline_reverse.h ****         {
 10423              		.loc 19 126 12 view .LVU2950
 10424 0966 834A     		ldr	r2, .L583+48
 126:delayline_reverse.h ****         {
 10425              		.loc 19 126 9 view .LVU2951
 10426 0968 AB5C     		ldrb	r3, [r5, r2]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 10427              		.loc 19 126 12 view .LVU2952
 10428 096a 2A44     		add	r2, r2, r5
 126:delayline_reverse.h ****         {
 10429              		.loc 19 126 9 view .LVU2953
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 327


 10430 096c 002B     		cmp	r3, #0
 10431 096e 3FF4ABAD 		beq	.L484
 10432              	.L569:
 126:delayline_reverse.h ****         {
 10433              		.loc 19 126 9 view .LVU2954
 10434 0972 814B     		ldr	r3, .L583+52
 10435 0974 E818     		adds	r0, r5, r3
 10436 0976 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 10437              		.loc 19 128 13 view .LVU2955
 10438 0978 002B     		cmp	r3, #0
 10439 097a 3FF435AD 		beq	.L481
 10440              	.L482:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10441              		.loc 19 141 45 view .LVU2956
 10442 097e 07EE90EA 		vmov	s15, lr	@ int
 10443              	.LVL649:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10444              		.loc 19 141 45 view .LVU2957
 10445 0982 F7EE006A 		vmov.f32	s13, #1.0e+0
 142:delayline_reverse.h ****                 {
 10446              		.loc 19 142 17 view .LVU2958
 10447 0986 0023     		movs	r3, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10448              		.loc 19 141 45 view .LVU2959
 10449 0988 B8EE677A 		vcvt.f32.u32	s14, s15
 10450 098c C6EE877A 		vdiv.f32	s15, s13, s14
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10451              		.loc 19 141 37 view .LVU2960
 10452 0990 3BEE67BA 		vsub.f32	s22, s22, s15
 142:delayline_reverse.h ****                 {
 10453              		.loc 19 142 17 view .LVU2961
 10454 0994 B5EEC0BA 		vcmpe.f32	s22, #0
 10455 0998 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10456 099c 40F1C580 		bpl	.L570
 145:delayline_reverse.h ****                     playinghead_ = false;
 10457              		.loc 19 145 21 view .LVU2962
 10458 09a0 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10459              		.loc 19 144 21 view .LVU2963
 10460 09a2 049D     		ldr	r5, [sp, #16]
 10461              	.LVL650:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10462              		.loc 19 144 21 view .LVU2964
 10463 09a4 2B60     		str	r3, [r5]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 10464              		.loc 19 145 21 view .LVU2965
 10465 09a6 1170     		strb	r1, [r2]
 146:delayline_reverse.h ****                 }
 10466              		.loc 19 146 21 view .LVU2966
 10467 09a8 0170     		strb	r1, [r0]
 10468 09aa 8DE5     		b	.L484
 10469              	.LVL651:
 10470              	.L529:
 146:delayline_reverse.h ****                 }
 10471              		.loc 19 146 21 view .LVU2967
 10472              	.LBE1833:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 328


 10473              	.LBE1844:
 10474              	.LBE1968:
 566:Veno-Echo.cpp ****             out[i+1] = mixR;
 10475              		.loc 20 566 13 is_stmt 1 view .LVU2968
 566:Veno-Echo.cpp ****             out[i+1] = mixR;
 10476              		.loc 20 566 20 is_stmt 0 view .LVU2969
 10477 09ac 009B     		ldr	r3, [sp]
 10478 09ae C3ED007A 		vstr.32	s15, [r3]
 567:Veno-Echo.cpp ****         }
 10479              		.loc 20 567 13 is_stmt 1 view .LVU2970
 567:Veno-Echo.cpp ****         }
 10480              		.loc 20 567 22 is_stmt 0 view .LVU2971
 10481 09b2 83ED010A 		vstr.32	s0, [r3, #4]
 10482 09b6 FFF7EDBB 		b	.L530
 10483              	.LVL652:
 10484              	.L566:
 547:Veno-Echo.cpp ****         {
 10485              		.loc 20 547 14 is_stmt 1 view .LVU2972
 10486 09ba 40F3AC80 		ble	.L567
 549:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10487              		.loc 20 549 13 view .LVU2973
 549:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10488              		.loc 20 549 24 is_stmt 0 view .LVU2974
 10489 09be F7EE006A 		vmov.f32	s13, #1.0e+0
 549:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10490              		.loc 20 549 18 view .LVU2975
 10491 09c2 DBED005A 		vldr.32	s11, [fp]
 550:Veno-Echo.cpp ****         }
 10492              		.loc 20 550 18 view .LVU2976
 10493 09c6 9BED016A 		vldr.32	s12, [fp, #4]
 549:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10494              		.loc 20 549 24 view .LVU2977
 10495 09ca 36EEC77A 		vsub.f32	s14, s13, s14
 549:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10496              		.loc 20 549 33 view .LVU2978
 10497 09ce 37EE077A 		vadd.f32	s14, s14, s14
 549:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10498              		.loc 20 549 18 view .LVU2979
 10499 09d2 E7EE257A 		vfma.f32	s15, s14, s11
 10500              	.LVL653:
 550:Veno-Echo.cpp ****         }
 10501              		.loc 20 550 13 is_stmt 1 view .LVU2980
 550:Veno-Echo.cpp ****         }
 10502              		.loc 20 550 18 is_stmt 0 view .LVU2981
 10503 09d6 A7EE060A 		vfma.f32	s0, s14, s12
 10504              	.LVL654:
 550:Veno-Echo.cpp ****         }
 10505              		.loc 20 550 18 view .LVU2982
 10506 09da FFF7D2BB 		b	.L526
 10507              	.LVL655:
 10508              	.L545:
 10509              	.LBB1969:
 501:Veno-Echo.cpp **** {
 10510              		.loc 20 501 1 view .LVU2983
 10511 09de 594B     		ldr	r3, .L583
 10512              	.LBE1969:
 10513              	.LBB1970:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 329


 10514              	.LBB1625:
1844:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10515              		.loc 20 1844 19 view .LVU2984
 10516 09e0 B0EE470A 		vmov.f32	s0, s14
 10517              	.LVL656:
1850:Veno-Echo.cpp **** }
 10518              		.loc 20 1850 5 is_stmt 1 view .LVU2985
1850:Veno-Echo.cpp **** }
 10519              		.loc 20 1850 5 is_stmt 0 view .LVU2986
 10520              	.LBE1625:
 10521              	.LBE1970:
 10522              	.LBB1971:
 501:Veno-Echo.cpp **** {
 10523              		.loc 20 501 1 view .LVU2987
 10524 09e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10525              	.LBE1971:
 499:Veno-Echo.cpp **** 
 10526              		.loc 20 499 27 view .LVU2988
 10527 09e6 8DED0B0A 		vstr.32	s0, [sp, #44]
 501:Veno-Echo.cpp **** {
 10528              		.loc 20 501 1 is_stmt 1 view .LVU2989
 10529              	.LBB1972:
 10530 09ea 002B     		cmp	r3, #0
 10531 09ec 3FF4B0AB 		beq	.L520
 10532              	.L572:
 10533              	.LBB1628:
 507:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 10534              		.loc 20 507 9 view .LVU2990
 507:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 10535              		.loc 20 507 27 is_stmt 0 view .LVU2991
 10536 09f0 9FED558A 		vldr.32	s16, .L583+4
 10537              	.LVL657:
 507:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 10538              		.loc 20 507 27 view .LVU2992
 10539 09f4 614D     		ldr	r5, .L583+56
 10540 09f6 27EE880A 		vmul.f32	s0, s15, s16
 508:Veno-Echo.cpp **** 
 10541              		.loc 20 508 27 view .LVU2993
 10542 09fa 614C     		ldr	r4, .L583+60
 507:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 10543              		.loc 20 507 27 view .LVU2994
 10544 09fc 2846     		mov	r0, r5
 10545 09fe FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10546              	.LVL658:
 508:Veno-Echo.cpp **** 
 10547              		.loc 20 508 9 is_stmt 1 view .LVU2995
 508:Veno-Echo.cpp **** 
 10548              		.loc 20 508 27 is_stmt 0 view .LVU2996
 10549 0a02 9DED0B0A 		vldr.32	s0, [sp, #44]
 10550 0a06 2046     		mov	r0, r4
 10551 0a08 20EE080A 		vmul.f32	s0, s0, s16
 10552 0a0c FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10553              	.LVL659:
 511:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10554              		.loc 20 511 9 is_stmt 1 view .LVU2997
 511:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10555              		.loc 20 511 9 is_stmt 0 view .LVU2998
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 330


 10556              	.LBE1628:
 10557              	.LBE1972:
 10558              	.LBE1992:
 10559              	.LBE2003:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 10560              		.loc 9 52 26 is_stmt 1 view .LVU2999
 10561              	.LBB2004:
 10562              	.LBB1993:
 10563              	.LBB1973:
 10564              	.LBB1643:
 511:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10565              		.loc 20 511 50 is_stmt 0 view .LVU3000
 10566 0a10 F2EE046A 		vmov.f32	s13, #1.0e+1
 10567 0a14 95ED0C7A 		vldr.32	s14, [r5, #48]
 515:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10568              		.loc 20 515 59 view .LVU3001
 10569 0a18 0AA9     		add	r1, sp, #40
 512:Veno-Echo.cpp ****         
 10570              		.loc 20 512 50 view .LVU3002
 10571 0a1a D4ED0C7A 		vldr.32	s15, [r4, #48]
 515:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10572              		.loc 20 515 59 view .LVU3003
 10573 0a1e 0CAA     		add	r2, sp, #48
 511:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10574              		.loc 20 511 50 view .LVU3004
 10575 0a20 27EE267A 		vmul.f32	s14, s14, s13
 515:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10576              		.loc 20 515 59 view .LVU3005
 10577 0a24 5748     		ldr	r0, .L583+64
 512:Veno-Echo.cpp ****         
 10578              		.loc 20 512 50 view .LVU3006
 10579 0a26 67EEA67A 		vmul.f32	s15, s15, s13
 511:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10580              		.loc 20 511 57 view .LVU3007
 10581 0a2a 8DED0C7A 		vstr.32	s14, [sp, #48]
 512:Veno-Echo.cpp ****         
 10582              		.loc 20 512 9 is_stmt 1 view .LVU3008
 10583              	.LVL660:
 512:Veno-Echo.cpp ****         
 10584              		.loc 20 512 9 is_stmt 0 view .LVU3009
 10585              	.LBE1643:
 10586              	.LBE1973:
 10587              	.LBE1993:
 10588              	.LBE2004:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 10589              		.loc 9 52 26 is_stmt 1 view .LVU3010
 10590              	.LBB2005:
 10591              	.LBB1994:
 10592              	.LBB1974:
 10593              	.LBB1644:
 512:Veno-Echo.cpp ****         
 10594              		.loc 20 512 57 is_stmt 0 view .LVU3011
 10595 0a2e CDED0D7A 		vstr.32	s15, [sp, #52]
 515:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10596              		.loc 20 515 9 is_stmt 1 view .LVU3012
 515:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10597              		.loc 20 515 59 is_stmt 0 view .LVU3013
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 331


 10598 0a32 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10599              	.LVL661:
 516:Veno-Echo.cpp **** 
 10600              		.loc 20 516 59 view .LVU3014
 10601 0a36 0BA9     		add	r1, sp, #44
 10602 0a38 0DAA     		add	r2, sp, #52
 10603 0a3a 5348     		ldr	r0, .L583+68
 515:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10604              		.loc 20 515 97 view .LVU3015
 10605 0a3c 8DED0E0A 		vstr.32	s0, [sp, #56]
 516:Veno-Echo.cpp **** 
 10606              		.loc 20 516 9 is_stmt 1 view .LVU3016
 516:Veno-Echo.cpp **** 
 10607              		.loc 20 516 59 is_stmt 0 view .LVU3017
 10608 0a40 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10609              	.LVL662:
 10610              	.LBB1629:
 10611              	.LBB1630:
1843:Veno-Echo.cpp ****         returnval = limit;
 10612              		.loc 20 1843 5 view .LVU3018
 10613 0a44 F0EE006A 		vmov.f32	s13, #2.0e+0
 10614              	.LBE1630:
 10615              	.LBE1629:
 519:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 10616              		.loc 20 519 41 view .LVU3019
 10617 0a48 9DED0E7A 		vldr.32	s14, [sp, #56]
 516:Veno-Echo.cpp **** 
 10618              		.loc 20 516 59 view .LVU3020
 10619 0a4c F0EE407A 		vmov.f32	s15, s0
 519:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 10620              		.loc 20 519 9 is_stmt 1 view .LVU3021
 10621              	.LVL663:
 10622              	.LBB1634:
 10623              	.LBI1629:
1840:Veno-Echo.cpp **** {
 10624              		.loc 20 1840 7 view .LVU3022
 10625              	.LBB1631:
1842:Veno-Echo.cpp ****     if (input > limit)
 10626              		.loc 20 1842 5 view .LVU3023
1843:Veno-Echo.cpp ****         returnval = limit;
 10627              		.loc 20 1843 5 view .LVU3024
 10628 0a50 B4EEE67A 		vcmpe.f32	s14, s13
 10629 0a54 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10630 0a58 6EDC     		bgt	.L546
1845:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10631              		.loc 20 1845 10 view .LVU3025
 10632 0a5a F8EE006A 		vmov.f32	s13, #-2.0e+0
 10633 0a5e B4EEE67A 		vcmpe.f32	s14, s13
 10634 0a62 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10635 0a66 00F1C080 		bmi	.L547
 10636 0a6a 27EE080A 		vmul.f32	s0, s14, s16
 10637              	.LVL664:
 10638              	.L521:
1850:Veno-Echo.cpp **** }
 10639              		.loc 20 1850 5 view .LVU3026
1850:Veno-Echo.cpp **** }
 10640              		.loc 20 1850 5 is_stmt 0 view .LVU3027
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 332


 10641              	.LBE1631:
 10642              	.LBE1634:
 10643              	.LBB1635:
 10644              	.LBB1636:
1843:Veno-Echo.cpp ****         returnval = limit;
 10645              		.loc 20 1843 5 view .LVU3028
 10646 0a6e F0EE006A 		vmov.f32	s13, #2.0e+0
 10647              	.LBE1636:
 10648              	.LBE1635:
 519:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 10649              		.loc 20 519 30 view .LVU3029
 10650 0a72 8DED0E7A 		vstr.32	s14, [sp, #56]
 520:Veno-Echo.cpp **** 
 10651              		.loc 20 520 9 is_stmt 1 view .LVU3030
 10652              	.LVL665:
 10653              	.LBB1639:
 10654              	.LBI1635:
1840:Veno-Echo.cpp **** {
 10655              		.loc 20 1840 7 view .LVU3031
 10656              	.LBB1637:
1842:Veno-Echo.cpp ****     if (input > limit)
 10657              		.loc 20 1842 5 view .LVU3032
1843:Veno-Echo.cpp ****         returnval = limit;
 10658              		.loc 20 1843 5 view .LVU3033
 10659 0a76 F4EEE67A 		vcmpe.f32	s15, s13
 10660 0a7a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10661 0a7e 58DC     		bgt	.L548
1845:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10662              		.loc 20 1845 10 view .LVU3034
 10663 0a80 B8EE007A 		vmov.f32	s14, #-2.0e+0
1846:Veno-Echo.cpp ****     else
 10664              		.loc 20 1846 19 is_stmt 0 view .LVU3035
 10665 0a84 F4EE477A 		vcmp.f32	s15, s14
 10666 0a88 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10667 0a8c 48BF     		it	mi
 10668 0a8e F0EE477A 		vmovmi.f32	s15, s14
 10669              	.LVL666:
 10670              	.L522:
1850:Veno-Echo.cpp **** }
 10671              		.loc 20 1850 5 is_stmt 1 view .LVU3036
1850:Veno-Echo.cpp **** }
 10672              		.loc 20 1850 5 is_stmt 0 view .LVU3037
 10673              	.LBE1637:
 10674              	.LBE1639:
 523:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 10675              		.loc 20 523 27 view .LVU3038
 10676 0a92 3E4D     		ldr	r5, .L583+72
 524:Veno-Echo.cpp **** 
 10677              		.loc 20 524 27 view .LVU3039
 10678 0a94 3E4C     		ldr	r4, .L583+76
 523:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 10679              		.loc 20 523 27 view .LVU3040
 10680 0a96 2846     		mov	r0, r5
 520:Veno-Echo.cpp **** 
 10681              		.loc 20 520 30 view .LVU3041
 10682 0a98 CDED0F7A 		vstr.32	s15, [sp, #60]
 523:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 333


 10683              		.loc 20 523 9 is_stmt 1 view .LVU3042
 523:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 10684              		.loc 20 523 27 is_stmt 0 view .LVU3043
 10685 0a9c FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10686              	.LVL667:
 524:Veno-Echo.cpp **** 
 10687              		.loc 20 524 9 is_stmt 1 view .LVU3044
 524:Veno-Echo.cpp **** 
 10688              		.loc 20 524 27 is_stmt 0 view .LVU3045
 10689 0aa0 DFED297A 		vldr.32	s15, .L583+4
 10690 0aa4 9DED0F0A 		vldr.32	s0, [sp, #60]
 10691 0aa8 2046     		mov	r0, r4
 10692 0aaa 20EE270A 		vmul.f32	s0, s0, s15
 10693 0aae FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10694              	.LVL668:
 526:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 10695              		.loc 20 526 9 is_stmt 1 view .LVU3046
 526:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 10696              		.loc 20 526 9 is_stmt 0 view .LVU3047
 10697              	.LBE1644:
 10698              	.LBE1974:
 10699              	.LBE1994:
 10700              	.LBE2005:
 10701              		.loc 9 56 27 is_stmt 1 view .LVU3048
 10702              	.LBB2006:
 10703              	.LBB1995:
 10704              	.LBB1975:
 10705              	.LBB1645:
 526:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 10706              		.loc 20 526 51 is_stmt 0 view .LVU3049
 10707 0ab2 F2EE046A 		vmov.f32	s13, #1.0e+1
 10708 0ab6 95ED0D7A 		vldr.32	s14, [r5, #52]
 529:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10709              		.loc 20 529 55 view .LVU3050
 10710 0aba 0EA9     		add	r1, sp, #56
 527:Veno-Echo.cpp **** 
 10711              		.loc 20 527 51 view .LVU3051
 10712 0abc D4ED0D7A 		vldr.32	s15, [r4, #52]
 529:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10713              		.loc 20 529 55 view .LVU3052
 10714 0ac0 10AA     		add	r2, sp, #64
 526:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 10715              		.loc 20 526 51 view .LVU3053
 10716 0ac2 27EE267A 		vmul.f32	s14, s14, s13
 529:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10717              		.loc 20 529 55 view .LVU3054
 10718 0ac6 3348     		ldr	r0, .L583+80
 527:Veno-Echo.cpp **** 
 10719              		.loc 20 527 51 view .LVU3055
 10720 0ac8 67EEA67A 		vmul.f32	s15, s15, s13
 526:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 10721              		.loc 20 526 58 view .LVU3056
 10722 0acc 8DED107A 		vstr.32	s14, [sp, #64]
 527:Veno-Echo.cpp **** 
 10723              		.loc 20 527 9 is_stmt 1 view .LVU3057
 10724              	.LVL669:
 527:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 334


 10725              		.loc 20 527 9 is_stmt 0 view .LVU3058
 10726              	.LBE1645:
 10727              	.LBE1975:
 10728              	.LBE1995:
 10729              	.LBE2006:
 10730              		.loc 9 56 27 is_stmt 1 view .LVU3059
 10731              	.LBB2007:
 10732              	.LBB1996:
 10733              	.LBB1976:
 10734              	.LBB1646:
 527:Veno-Echo.cpp **** 
 10735              		.loc 20 527 58 is_stmt 0 view .LVU3060
 10736 0ad0 CDED117A 		vstr.32	s15, [sp, #68]
 529:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10737              		.loc 20 529 9 is_stmt 1 view .LVU3061
 529:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10738              		.loc 20 529 55 is_stmt 0 view .LVU3062
 10739 0ad4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10740              	.LVL670:
 530:Veno-Echo.cpp **** 
 10741              		.loc 20 530 55 view .LVU3063
 10742 0ad8 0FA9     		add	r1, sp, #60
 10743 0ada 11AA     		add	r2, sp, #68
 10744 0adc 2E48     		ldr	r0, .L583+84
 529:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10745              		.loc 20 529 30 view .LVU3064
 10746 0ade 8DED0E0A 		vstr.32	s0, [sp, #56]
 530:Veno-Echo.cpp **** 
 10747              		.loc 20 530 9 is_stmt 1 view .LVU3065
 530:Veno-Echo.cpp **** 
 10748              		.loc 20 530 55 is_stmt 0 view .LVU3066
 10749 0ae2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10750              	.LVL671:
 533:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 10751              		.loc 20 533 53 view .LVU3067
 10752 0ae6 0EAA     		add	r2, sp, #56
 10753 0ae8 0AA9     		add	r1, sp, #40
 10754 0aea 2C48     		ldr	r0, .L583+88
 530:Veno-Echo.cpp **** 
 10755              		.loc 20 530 30 view .LVU3068
 10756 0aec 8DED0F0A 		vstr.32	s0, [sp, #60]
 533:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 10757              		.loc 20 533 9 is_stmt 1 view .LVU3069
 533:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 10758              		.loc 20 533 53 is_stmt 0 view .LVU3070
 10759 0af0 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10760              	.LVL672:
 534:Veno-Echo.cpp **** 
 10761              		.loc 20 534 53 view .LVU3071
 10762 0af4 0FAA     		add	r2, sp, #60
 10763 0af6 0BA9     		add	r1, sp, #44
 10764 0af8 2948     		ldr	r0, .L583+92
 533:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 10765              		.loc 20 533 27 view .LVU3072
 10766 0afa 8DED0A0A 		vstr.32	s0, [sp, #40]
 534:Veno-Echo.cpp **** 
 10767              		.loc 20 534 9 is_stmt 1 view .LVU3073
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 335


 534:Veno-Echo.cpp **** 
 10768              		.loc 20 534 53 is_stmt 0 view .LVU3074
 10769 0afe FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10770              	.LVL673:
 10771 0b02 DDED0A7A 		vldr.32	s15, [sp, #40]
 534:Veno-Echo.cpp **** 
 10772              		.loc 20 534 27 view .LVU3075
 10773 0b06 8DED0B0A 		vstr.32	s0, [sp, #44]
 10774              	.LBE1646:
 10775 0b0a FFF721BB 		b	.L520
 10776              	.LVL674:
 10777              	.L544:
 534:Veno-Echo.cpp **** 
 10778              		.loc 20 534 27 view .LVU3076
 10779              	.LBE1976:
 10780              	.LBB1977:
 10781              	.LBB1619:
1844:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10782              		.loc 20 1844 19 view .LVU3077
 10783 0b0e F0EE477A 		vmov.f32	s15, s14
 10784              	.LVL675:
1844:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10785              		.loc 20 1844 19 view .LVU3078
 10786 0b12 FFF703BB 		b	.L516
 10787              	.LVL676:
 10788              	.L567:
1844:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10789              		.loc 20 1844 19 view .LVU3079
 10790              	.LBE1619:
 10791              	.LBE1977:
 554:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 10792              		.loc 20 554 13 is_stmt 1 view .LVU3080
 554:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 10793              		.loc 20 554 18 is_stmt 0 view .LVU3081
 10794 0b16 DBED006A 		vldr.32	s13, [fp]
 555:Veno-Echo.cpp ****         }
 10795              		.loc 20 555 18 view .LVU3082
 10796 0b1a 9BED017A 		vldr.32	s14, [fp, #4]
 554:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 10797              		.loc 20 554 18 view .LVU3083
 10798 0b1e 77EEA67A 		vadd.f32	s15, s15, s13
 10799              	.LVL677:
 555:Veno-Echo.cpp ****         }
 10800              		.loc 20 555 13 is_stmt 1 view .LVU3084
 555:Veno-Echo.cpp ****         }
 10801              		.loc 20 555 18 is_stmt 0 view .LVU3085
 10802 0b22 30EE070A 		vadd.f32	s0, s0, s14
 10803              	.LVL678:
 555:Veno-Echo.cpp ****         }
 10804              		.loc 20 555 18 view .LVU3086
 10805 0b26 FFF72CBB 		b	.L526
 10806              	.LVL679:
 10807              	.L570:
 10808              	.LBB1978:
 10809              	.LBB1845:
 10810              	.LBB1834:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 336


 10811              		.loc 19 141 17 view .LVU3087
 10812 0b2a 049B     		ldr	r3, [sp, #16]
 10813 0b2c 83ED00BA 		vstr.32	s22, [r3]
 10814 0b30 CAE4     		b	.L484
 10815              	.LVL680:
 10816              	.L548:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10817              		.loc 19 141 17 view .LVU3088
 10818              	.LBE1834:
 10819              	.LBE1845:
 10820              	.LBE1978:
 10821              	.LBB1979:
 10822              	.LBB1647:
 10823              	.LBB1640:
 10824              	.LBB1638:
1844:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10825              		.loc 20 1844 19 view .LVU3089
 10826 0b32 F0EE667A 		vmov.f32	s15, s13
 10827              	.LVL681:
1844:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10828              		.loc 20 1844 19 view .LVU3090
 10829 0b36 ACE7     		b	.L522
 10830              	.LVL682:
 10831              	.L546:
1844:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10832              		.loc 20 1844 19 view .LVU3091
 10833              	.LBE1638:
 10834              	.LBE1640:
 10835              	.LBB1641:
 10836              	.LBB1632:
 10837 0b38 B0EE667A 		vmov.f32	s14, s13
 10838              	.LVL683:
1844:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10839              		.loc 20 1844 19 view .LVU3092
 10840 0b3c 9FED190A 		vldr.32	s0, .L583+96
 10841 0b40 95E7     		b	.L521
 10842              	.L584:
 10843 0b42 00BF     		.align	2
 10844              	.L583:
 10845 0b44 00000000 		.word	.LANCHOR82
 10846 0b48 CDCCCC3D 		.word	1036831949
 10847 0b4c 00000000 		.word	.LANCHOR46
 10848 0b50 00000000 		.word	.LANCHOR47
 10849 0b54 00000000 		.word	.LANCHOR115
 10850 0b58 00000000 		.word	.LANCHOR116
 10851 0b5c 00000000 		.word	.LANCHOR34
 10852 0b60 00000000 		.word	.LANCHOR35
 10853 0b64 00000000 		.word	.LANCHOR113
 10854 0b68 00000000 		.word	.LANCHOR114
 10855 0b6c 00000000 		.word	.LANCHOR121
 10856 0b70 00000000 		.word	.LANCHOR122
 10857 0b74 249F2400 		.word	2400036
 10858 0b78 1C9F2400 		.word	2400028
 10859 0b7c 00000000 		.word	.LANCHOR48
 10860 0b80 00000000 		.word	.LANCHOR49
 10861 0b84 00000000 		.word	.LANCHOR119
 10862 0b88 00000000 		.word	.LANCHOR120
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 337


 10863 0b8c 00000000 		.word	.LANCHOR36
 10864 0b90 00000000 		.word	.LANCHOR37
 10865 0b94 00000000 		.word	.LANCHOR117
 10866 0b98 00000000 		.word	.LANCHOR118
 10867 0b9c 00000000 		.word	.LANCHOR123
 10868 0ba0 00000000 		.word	.LANCHOR124
 10869 0ba4 CDCC4C3E 		.word	1045220557
 10870 0ba8 CDCC4CBE 		.word	3192704205
 10871              	.LVL684:
 10872              	.L539:
1844:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10873              		.loc 20 1844 19 view .LVU3093
 10874              	.LBE1632:
 10875              	.LBE1641:
 10876              	.LBE1647:
 10877              	.LBE1979:
 10878              	.LBB1980:
 10879              	.LBB1907:
 10880              	.LBB1900:
 10881              	.LBB1898:
 10882 0bac F0EE667A 		vmov.f32	s15, s13
 10883              	.LVL685:
1844:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10884              		.loc 20 1844 19 view .LVU3094
 10885 0bb0 76E6     		b	.L504
 10886              	.LVL686:
 10887              	.L537:
1844:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10888              		.loc 20 1844 19 view .LVU3095
 10889              	.LBE1898:
 10890              	.LBE1900:
 10891              	.LBB1901:
 10892              	.LBB1892:
 10893 0bb2 B0EE667A 		vmov.f32	s14, s13
 10894              	.LVL687:
1844:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10895              		.loc 20 1844 19 view .LVU3096
 10896 0bb6 1FED050A 		vldr.32	s0, .L583+96
 10897 0bba 5EE6     		b	.L503
 10898              	.LVL688:
 10899              	.L480:
1844:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10900              		.loc 20 1844 19 view .LVU3097
 10901              	.LBE1892:
 10902              	.LBE1901:
 10903              	.LBE1907:
 10904              	.LBE1980:
 10905              	.LBB1981:
 10906              	.LBB1846:
 10907              	.LBB1835:
 116:delayline_reverse.h ****                 }
 10908              		.loc 19 116 21 view .LVU3098
 10909 0bbc AB60     		str	r3, [r5, #8]
 10910 0bbe DEE6     		b	.L482
 10911              	.LVL689:
 10912              	.L490:
 116:delayline_reverse.h ****                 }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 338


 10913              		.loc 19 116 21 view .LVU3099
 10914              	.LBE1835:
 10915              	.LBE1846:
 10916              	.LBE1981:
 10917              	.LBB1982:
 10918              	.LBB1872:
 10919              	.LBB1868:
 10920 0bc0 A260     		str	r2, [r4, #8]
 10921 0bc2 B9E6     		b	.L492
 10922              	.LVL690:
 10923              	.L459:
 116:delayline_reverse.h ****                 }
 10924              		.loc 19 116 21 view .LVU3100
 10925              	.LBE1868:
 10926              	.LBE1872:
 10927              	.LBE1982:
 10928              	.LBE1996:
 10929              	.LBE2007:
 575:Veno-Echo.cpp **** 
 10930              		.loc 20 575 1 view .LVU3101
 10931 0bc4 13B0     		add	sp, sp, #76
 10932              		.cfi_remember_state
 10933              		.cfi_def_cfa_offset 92
 10934              		@ sp needed
 10935 0bc6 BDEC0E8B 		vldm	sp!, {d8-d14}
 10936              		.cfi_restore 92
 10937              		.cfi_restore 93
 10938              		.cfi_restore 90
 10939              		.cfi_restore 91
 10940              		.cfi_restore 88
 10941              		.cfi_restore 89
 10942              		.cfi_restore 86
 10943              		.cfi_restore 87
 10944              		.cfi_restore 84
 10945              		.cfi_restore 85
 10946              		.cfi_restore 82
 10947              		.cfi_restore 83
 10948              		.cfi_restore 80
 10949              		.cfi_restore 81
 10950              		.cfi_def_cfa_offset 36
 10951 0bca BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 10952              	.LVL691:
 10953              	.L573:
 10954              		.cfi_restore_state
 10955              	.LBB2008:
 10956              	.LBB1997:
 10957              	.LBB1983:
 10958              	.LBB1873:
 10959              	.LBB1869:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10960              		.loc 19 130 17 view .LVU3102
 10961 0bce C2ED007A 		vstr.32	s15, [r2]
 10962 0bd2 E4E4     		b	.L494
 10963              	.L497:
 145:delayline_reverse.h ****                     playinghead_ = false;
 10964              		.loc 19 145 21 view .LVU3103
 10965 0bd4 0021     		movs	r1, #0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 339


 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10966              		.loc 19 144 21 view .LVU3104
 10967 0bd6 039C     		ldr	r4, [sp, #12]
 10968              	.LVL692:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10969              		.loc 19 144 21 view .LVU3105
 10970 0bd8 2260     		str	r2, [r4]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 10971              		.loc 19 145 21 view .LVU3106
 10972 0bda 1970     		strb	r1, [r3]
 146:delayline_reverse.h ****                 }
 10973              		.loc 19 146 21 view .LVU3107
 10974 0bdc 0170     		strb	r1, [r0]
 10975 0bde DEE4     		b	.L494
 10976              	.LVL693:
 10977              	.L538:
 146:delayline_reverse.h ****                 }
 10978              		.loc 19 146 21 view .LVU3108
 10979              	.LBE1869:
 10980              	.LBE1873:
 10981              	.LBE1983:
 10982              	.LBB1984:
 10983              	.LBB1908:
 10984              	.LBB1902:
 10985              	.LBB1893:
1846:Veno-Echo.cpp ****     else
 10986              		.loc 20 1846 19 view .LVU3109
 10987 0be0 B0EE667A 		vmov.f32	s14, s13
 10988              	.LVL694:
1846:Veno-Echo.cpp ****     else
 10989              		.loc 20 1846 19 view .LVU3110
 10990 0be4 1FED100A 		vldr.32	s0, .L583+100
 10991 0be8 47E6     		b	.L503
 10992              	.LVL695:
 10993              	.L547:
1846:Veno-Echo.cpp ****     else
 10994              		.loc 20 1846 19 view .LVU3111
 10995              	.LBE1893:
 10996              	.LBE1902:
 10997              	.LBE1908:
 10998              	.LBE1984:
 10999              	.LBB1985:
 11000              	.LBB1648:
 11001              	.LBB1642:
 11002              	.LBB1633:
 11003 0bea B0EE667A 		vmov.f32	s14, s13
 11004              	.LVL696:
1846:Veno-Echo.cpp ****     else
 11005              		.loc 20 1846 19 view .LVU3112
 11006 0bee 1FED120A 		vldr.32	s0, .L583+100
 11007 0bf2 3CE7     		b	.L521
 11008              	.LVL697:
 11009              	.L461:
1846:Veno-Echo.cpp ****     else
 11010              		.loc 20 1846 19 view .LVU3113
 11011              	.LBE1633:
 11012              	.LBE1642:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 340


 11013              	.LBE1648:
 11014              	.LBE1985:
 11015              	.LBE1997:
 11016              	.LBE2008:
 340:Veno-Echo.cpp ****                 Update_filterXfade();
 11017              		.loc 20 340 13 is_stmt 1 view .LVU3114
 341:Veno-Echo.cpp ****             break;
 11018              		.loc 20 341 17 view .LVU3115
 341:Veno-Echo.cpp ****             break;
 11019              		.loc 20 341 35 is_stmt 0 view .LVU3116
 11020 0bf4 FFF7FEFF 		bl	_Z18Update_filterXfadev
 11021              	.LVL698:
 342:Veno-Echo.cpp ****         }
 11022              		.loc 20 342 13 is_stmt 1 view .LVU3117
 11023 0bf8 FFF739BA 		b	.L460
 11024              	.L464:
 332:Veno-Echo.cpp ****                 Update_width();
 11025              		.loc 20 332 13 view .LVU3118
 333:Veno-Echo.cpp ****             break;
 11026              		.loc 20 333 17 view .LVU3119
 333:Veno-Echo.cpp ****             break;
 11027              		.loc 20 333 29 is_stmt 0 view .LVU3120
 11028 0bfc FFF7FEFF 		bl	_Z12Update_widthv
 11029              	.LVL699:
 334:Veno-Echo.cpp **** 
 11030              		.loc 20 334 13 is_stmt 1 view .LVU3121
 11031 0c00 FFF735BA 		b	.L460
 11032              	.L465:
 328:Veno-Echo.cpp ****                 Update_width_CV();
 11033              		.loc 20 328 13 view .LVU3122
 329:Veno-Echo.cpp ****             break;
 11034              		.loc 20 329 17 view .LVU3123
 11035              	.LBB2009:
 11036              	.LBI2009:
1266:Veno-Echo.cpp **** {
 11037              		.loc 20 1266 6 view .LVU3124
 11038              	.LBB2010:
1268:Veno-Echo.cpp **** }
 11039              		.loc 20 1268 5 view .LVU3125
1268:Veno-Echo.cpp **** }
 11040              		.loc 20 1268 30 is_stmt 0 view .LVU3126
 11041 0c04 0521     		movs	r1, #5
 11042 0c06 2748     		ldr	r0, .L585
 11043 0c08 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11044              	.LVL700:
1268:Veno-Echo.cpp **** }
 11045              		.loc 20 1268 13 view .LVU3127
 11046 0c0c 264B     		ldr	r3, .L585+4
 11047 0c0e 83ED000A 		vstr.32	s0, [r3]
1269:Veno-Echo.cpp **** 
 11048              		.loc 20 1269 1 view .LVU3128
 11049 0c12 FFF72CBA 		b	.L460
 11050              	.L466:
 11051              	.LBE2010:
 11052              	.LBE2009:
 324:Veno-Echo.cpp ****                 Update_drywet();
 11053              		.loc 20 324 13 is_stmt 1 view .LVU3129
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 341


 325:Veno-Echo.cpp ****             break;
 11054              		.loc 20 325 17 view .LVU3130
 325:Veno-Echo.cpp ****             break;
 11055              		.loc 20 325 30 is_stmt 0 view .LVU3131
 11056 0c16 FFF7FEFF 		bl	_Z13Update_drywetv
 11057              	.LVL701:
 326:Veno-Echo.cpp **** 
 11058              		.loc 20 326 13 is_stmt 1 view .LVU3132
 11059 0c1a FFF728BA 		b	.L460
 11060              	.L467:
 320:Veno-Echo.cpp ****                 Update_drywet_CV();
 11061              		.loc 20 320 13 view .LVU3133
 321:Veno-Echo.cpp ****             break;
 11062              		.loc 20 321 17 view .LVU3134
 11063              	.LBB2011:
 11064              	.LBI2011:
1152:Veno-Echo.cpp **** {
 11065              		.loc 20 1152 6 view .LVU3135
 11066              	.LBB2012:
1154:Veno-Echo.cpp **** }
 11067              		.loc 20 1154 5 view .LVU3136
1154:Veno-Echo.cpp **** }
 11068              		.loc 20 1154 32 is_stmt 0 view .LVU3137
 11069 0c1e 0421     		movs	r1, #4
 11070 0c20 2048     		ldr	r0, .L585
 11071 0c22 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11072              	.LVL702:
1154:Veno-Echo.cpp **** }
 11073              		.loc 20 1154 15 view .LVU3138
 11074 0c26 214B     		ldr	r3, .L585+8
 11075 0c28 83ED000A 		vstr.32	s0, [r3]
1155:Veno-Echo.cpp **** 
 11076              		.loc 20 1155 1 view .LVU3139
 11077 0c2c FFF71FBA 		b	.L460
 11078              	.L468:
 11079              	.LBE2012:
 11080              	.LBE2011:
 316:Veno-Echo.cpp ****                 Update_feedbackR();
 11081              		.loc 20 316 13 is_stmt 1 view .LVU3140
 317:Veno-Echo.cpp ****             break;
 11082              		.loc 20 317 17 view .LVU3141
 317:Veno-Echo.cpp ****             break;
 11083              		.loc 20 317 33 is_stmt 0 view .LVU3142
 11084 0c30 FFF7FEFF 		bl	_Z16Update_feedbackRv
 11085              	.LVL703:
 318:Veno-Echo.cpp **** 
 11086              		.loc 20 318 13 is_stmt 1 view .LVU3143
 11087 0c34 FFF71BBA 		b	.L460
 11088              	.L469:
 312:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 11089              		.loc 20 312 13 view .LVU3144
 313:Veno-Echo.cpp ****             break;
 11090              		.loc 20 313 17 view .LVU3145
 11091              	.LBB2013:
 11092              	.LBI2013:
1062:Veno-Echo.cpp **** {
 11093              		.loc 20 1062 6 view .LVU3146
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 342


 11094              	.LBB2014:
1064:Veno-Echo.cpp **** }
 11095              		.loc 20 1064 5 view .LVU3147
1064:Veno-Echo.cpp **** }
 11096              		.loc 20 1064 35 is_stmt 0 view .LVU3148
 11097 0c38 0321     		movs	r1, #3
 11098 0c3a 1A48     		ldr	r0, .L585
 11099 0c3c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11100              	.LVL704:
1064:Veno-Echo.cpp **** }
 11101              		.loc 20 1064 18 view .LVU3149
 11102 0c40 1B4B     		ldr	r3, .L585+12
 11103 0c42 83ED000A 		vstr.32	s0, [r3]
1065:Veno-Echo.cpp **** 
 11104              		.loc 20 1065 1 view .LVU3150
 11105 0c46 FFF712BA 		b	.L460
 11106              	.L470:
 11107              	.LBE2014:
 11108              	.LBE2013:
 308:Veno-Echo.cpp ****                 Update_feedbackL();
 11109              		.loc 20 308 13 is_stmt 1 view .LVU3151
 309:Veno-Echo.cpp ****             break;
 11110              		.loc 20 309 17 view .LVU3152
 309:Veno-Echo.cpp ****             break;
 11111              		.loc 20 309 33 is_stmt 0 view .LVU3153
 11112 0c4a FFF7FEFF 		bl	_Z16Update_feedbackLv
 11113              	.LVL705:
 310:Veno-Echo.cpp **** 
 11114              		.loc 20 310 13 is_stmt 1 view .LVU3154
 11115 0c4e FFF70EBA 		b	.L460
 11116              	.L471:
 304:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 11117              		.loc 20 304 13 view .LVU3155
 305:Veno-Echo.cpp ****             break;
 11118              		.loc 20 305 17 view .LVU3156
 11119              	.LBB2015:
 11120              	.LBI2015:
 974:Veno-Echo.cpp **** {
 11121              		.loc 20 974 6 view .LVU3157
 11122              	.LBB2016:
 976:Veno-Echo.cpp **** }
 11123              		.loc 20 976 5 view .LVU3158
 976:Veno-Echo.cpp **** }
 11124              		.loc 20 976 35 is_stmt 0 view .LVU3159
 11125 0c52 0221     		movs	r1, #2
 11126 0c54 1348     		ldr	r0, .L585
 11127 0c56 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11128              	.LVL706:
 976:Veno-Echo.cpp **** }
 11129              		.loc 20 976 18 view .LVU3160
 11130 0c5a 164B     		ldr	r3, .L585+16
 11131 0c5c 83ED000A 		vstr.32	s0, [r3]
 977:Veno-Echo.cpp **** void Update_feedbackL()
 11132              		.loc 20 977 1 view .LVU3161
 11133 0c60 FFF705BA 		b	.L460
 11134              	.L472:
 11135              	.LBE2016:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 343


 11136              	.LBE2015:
 300:Veno-Echo.cpp ****                 Update_DelayTimeR();
 11137              		.loc 20 300 13 is_stmt 1 view .LVU3162
 301:Veno-Echo.cpp ****             break;
 11138              		.loc 20 301 17 view .LVU3163
 301:Veno-Echo.cpp ****             break;
 11139              		.loc 20 301 34 is_stmt 0 view .LVU3164
 11140 0c64 FFF7FEFF 		bl	_Z17Update_DelayTimeRv
 11141              	.LVL707:
 302:Veno-Echo.cpp **** 
 11142              		.loc 20 302 13 is_stmt 1 view .LVU3165
 11143 0c68 FFF701BA 		b	.L460
 11144              	.L473:
 296:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 11145              		.loc 20 296 13 view .LVU3166
 297:Veno-Echo.cpp ****             break;
 11146              		.loc 20 297 17 view .LVU3167
 11147              	.LBB2017:
 11148              	.LBI2017:
 876:Veno-Echo.cpp **** {
 11149              		.loc 20 876 6 view .LVU3168
 11150              	.LBB2018:
 878:Veno-Echo.cpp **** }
 11151              		.loc 20 878 5 view .LVU3169
 878:Veno-Echo.cpp **** }
 11152              		.loc 20 878 36 is_stmt 0 view .LVU3170
 11153 0c6c 0121     		movs	r1, #1
 11154 0c6e 0D48     		ldr	r0, .L585
 11155 0c70 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11156              	.LVL708:
 878:Veno-Echo.cpp **** }
 11157              		.loc 20 878 19 view .LVU3171
 11158 0c74 104B     		ldr	r3, .L585+20
 11159 0c76 83ED000A 		vstr.32	s0, [r3]
 879:Veno-Echo.cpp **** 
 11160              		.loc 20 879 1 view .LVU3172
 11161 0c7a FFF7F8B9 		b	.L460
 11162              	.L474:
 11163              	.LBE2018:
 11164              	.LBE2017:
 292:Veno-Echo.cpp ****                 Update_DelayTimeL();
 11165              		.loc 20 292 13 is_stmt 1 view .LVU3173
 293:Veno-Echo.cpp ****             break;
 11166              		.loc 20 293 17 view .LVU3174
 293:Veno-Echo.cpp ****             break;
 11167              		.loc 20 293 34 is_stmt 0 view .LVU3175
 11168 0c7e FFF7FEFF 		bl	_Z17Update_DelayTimeLv
 11169              	.LVL709:
 294:Veno-Echo.cpp **** 
 11170              		.loc 20 294 13 is_stmt 1 view .LVU3176
 11171 0c82 FFF7F4B9 		b	.L460
 11172              	.L475:
 288:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 11173              		.loc 20 288 13 view .LVU3177
 289:Veno-Echo.cpp ****             break;
 11174              		.loc 20 289 17 view .LVU3178
 11175              	.LBB2019:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 344


 11176              	.LBI2019:
 778:Veno-Echo.cpp **** {
 11177              		.loc 20 778 6 view .LVU3179
 11178              	.LBB2020:
 780:Veno-Echo.cpp **** }
 11179              		.loc 20 780 5 view .LVU3180
 780:Veno-Echo.cpp **** }
 11180              		.loc 20 780 36 is_stmt 0 view .LVU3181
 11181 0c86 0021     		movs	r1, #0
 11182 0c88 0648     		ldr	r0, .L585
 11183 0c8a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11184              	.LVL710:
 780:Veno-Echo.cpp **** }
 11185              		.loc 20 780 19 view .LVU3182
 11186 0c8e 0B4B     		ldr	r3, .L585+24
 11187 0c90 83ED000A 		vstr.32	s0, [r3]
 781:Veno-Echo.cpp **** 
 11188              		.loc 20 781 1 view .LVU3183
 11189 0c94 FFF7EBB9 		b	.L460
 11190              	.L476:
 11191              	.LBE2020:
 11192              	.LBE2019:
 283:Veno-Echo.cpp ****                 Update_Buttons();
 11193              		.loc 20 283 13 is_stmt 1 view .LVU3184
 284:Veno-Echo.cpp ****                 GetModCV();
 11194              		.loc 20 284 17 view .LVU3185
 284:Veno-Echo.cpp ****                 GetModCV();
 11195              		.loc 20 284 31 is_stmt 0 view .LVU3186
 11196 0c98 FFF7FEFF 		bl	_Z14Update_Buttonsv
 11197              	.LVL711:
 285:Veno-Echo.cpp ****             break;
 11198              		.loc 20 285 17 is_stmt 1 view .LVU3187
 285:Veno-Echo.cpp ****             break;
 11199              		.loc 20 285 25 is_stmt 0 view .LVU3188
 11200 0c9c FFF7FEFF 		bl	_Z8GetModCVv
 11201              	.LVL712:
 286:Veno-Echo.cpp **** 
 11202              		.loc 20 286 13 is_stmt 1 view .LVU3189
 11203 0ca0 FFF7E5B9 		b	.L460
 11204              	.L586:
 11205              		.align	2
 11206              	.L585:
 11207 0ca4 18000000 		.word	.LANCHOR4+24
 11208 0ca8 00000000 		.word	.LANCHOR58
 11209 0cac 00000000 		.word	.LANCHOR50
 11210 0cb0 00000000 		.word	.LANCHOR38
 11211 0cb4 00000000 		.word	.LANCHOR26
 11212 0cb8 00000000 		.word	.LANCHOR17
 11213 0cbc 00000000 		.word	.LANCHOR5
 11214              		.cfi_endproc
 11215              	.LFE4309:
 11217              		.section	.text._Z9HardLimitff,"ax",%progbits
 11218              		.align	1
 11219              		.p2align 2,,3
 11220              		.global	_Z9HardLimitff
 11221              		.syntax unified
 11222              		.thumb
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 345


 11223              		.thumb_func
 11224              		.fpu fpv5-d16
 11226              	_Z9HardLimitff:
 11227              	.LVL713:
 11228              	.LFB4334:
1841:Veno-Echo.cpp ****     float returnval{};
 11229              		.loc 20 1841 1 view -0
 11230              		.cfi_startproc
 11231              		@ args = 0, pretend = 0, frame = 0
 11232              		@ frame_needed = 0, uses_anonymous_args = 0
 11233              		@ link register save eliminated.
1842:Veno-Echo.cpp ****     if (input > limit)
 11234              		.loc 20 1842 5 view .LVU3191
1843:Veno-Echo.cpp ****         returnval = limit;
 11235              		.loc 20 1843 5 view .LVU3192
 11236 0000 B4EEE00A 		vcmpe.f32	s0, s1
 11237 0004 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11238 0008 07DC     		bgt	.L588
1845:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11239              		.loc 20 1845 10 view .LVU3193
1845:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11240              		.loc 20 1845 28 is_stmt 0 view .LVU3194
 11241 000a F1EE600A 		vneg.f32	s1, s1
 11242              	.LVL714:
1845:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11243              		.loc 20 1845 10 view .LVU3195
 11244 000e F4EEC00A 		vcmpe.f32	s1, s0
 11245 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1848:Veno-Echo.cpp **** 
 11246              		.loc 20 1848 19 view .LVU3196
 11247 0016 70FE800A 		vselgt.f32	s1, s1, s0
 11248              	.L588:
 11249              	.LVL715:
1850:Veno-Echo.cpp **** }
 11250              		.loc 20 1850 5 is_stmt 1 view .LVU3197
1851:Veno-Echo.cpp **** 
 11251              		.loc 20 1851 1 is_stmt 0 view .LVU3198
 11252 001a B0EE600A 		vmov.f32	s0, s1
 11253              	.LVL716:
1851:Veno-Echo.cpp **** 
 11254              		.loc 20 1851 1 view .LVU3199
 11255 001e 7047     		bx	lr
 11256              		.cfi_endproc
 11257              	.LFE4334:
 11259              		.section	.text._Z10PotCVComboff,"ax",%progbits
 11260              		.align	1
 11261              		.p2align 2,,3
 11262              		.global	_Z10PotCVComboff
 11263              		.syntax unified
 11264              		.thumb
 11265              		.thumb_func
 11266              		.fpu fpv5-d16
 11268              	_Z10PotCVComboff:
 11269              	.LVL717:
 11270              	.LFB4335:
1854:Veno-Echo.cpp ****     float output{};
 11271              		.loc 20 1854 1 is_stmt 1 view -0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 346


 11272              		.cfi_startproc
 11273              		@ args = 0, pretend = 0, frame = 0
 11274              		@ frame_needed = 0, uses_anonymous_args = 0
 11275              		@ link register save eliminated.
1855:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 11276              		.loc 20 1855 5 view .LVU3201
1856:Veno-Echo.cpp **** 
 11277              		.loc 20 1856 5 view .LVU3202
1856:Veno-Echo.cpp **** 
 11278              		.loc 20 1856 39 is_stmt 0 view .LVU3203
 11279 0000 F7EE007A 		vmov.f32	s15, #1.0e+0
1856:Veno-Echo.cpp **** 
 11280              		.loc 20 1856 49 view .LVU3204
 11281 0004 F6EE006A 		vmov.f32	s13, #5.0e-1
1856:Veno-Echo.cpp **** 
 11282              		.loc 20 1856 12 view .LVU3205
 11283 0008 B0EE007A 		vmov.f32	s14, #2.0e+0
1856:Veno-Echo.cpp **** 
 11284              		.loc 20 1856 39 view .LVU3206
 11285 000c 77EEE00A 		vsub.f32	s1, s15, s1
 11286              	.LVL718:
1856:Veno-Echo.cpp **** 
 11287              		.loc 20 1856 49 view .LVU3207
 11288 0010 70EEE60A 		vsub.f32	s1, s1, s13
1856:Veno-Echo.cpp **** 
 11289              		.loc 20 1856 12 view .LVU3208
 11290 0014 A0EE870A 		vfma.f32	s0, s1, s14
 11291              	.LVL719:
1858:Veno-Echo.cpp ****     {
 11292              		.loc 20 1858 5 is_stmt 1 view .LVU3209
 11293 0018 B5EEC00A 		vcmpe.f32	s0, #0
 11294 001c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11295 0020 06D4     		bmi	.L594
1863:Veno-Echo.cpp ****     {
 11296              		.loc 20 1863 5 view .LVU3210
1865:Veno-Echo.cpp ****     }
 11297              		.loc 20 1865 16 is_stmt 0 view .LVU3211
 11298 0022 B4EE670A 		vcmp.f32	s0, s15
 11299 0026 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11300 002a 37FE800A 		vselgt.f32	s0, s15, s0
 11301              	.LVL720:
1865:Veno-Echo.cpp ****     }
 11302              		.loc 20 1865 16 view .LVU3212
 11303 002e 7047     		bx	lr
 11304              	.LVL721:
 11305              	.L594:
1860:Veno-Echo.cpp ****     }
 11306              		.loc 20 1860 16 view .LVU3213
 11307 0030 9FED010A 		vldr.32	s0, .L596
 11308              	.LVL722:
1868:Veno-Echo.cpp **** }
 11309              		.loc 20 1868 5 is_stmt 1 view .LVU3214
1869:Veno-Echo.cpp **** 
 11310              		.loc 20 1869 1 is_stmt 0 view .LVU3215
 11311 0034 7047     		bx	lr
 11312              	.L597:
 11313 0036 00BF     		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 347


 11314              	.L596:
 11315 0038 00000000 		.word	0
 11316              		.cfi_endproc
 11317              	.LFE4335:
 11319              		.section	.text._Z16checkPickupStateffbb,"ax",%progbits
 11320              		.align	1
 11321              		.p2align 2,,3
 11322              		.global	_Z16checkPickupStateffbb
 11323              		.syntax unified
 11324              		.thumb
 11325              		.thumb_func
 11326              		.fpu fpv5-d16
 11328              	_Z16checkPickupStateffbb:
 11329              	.LVL723:
 11330              	.LFB4336:
1873:Veno-Echo.cpp ****     bool retval{};
 11331              		.loc 20 1873 1 is_stmt 1 view -0
 11332              		.cfi_startproc
 11333              		@ args = 0, pretend = 0, frame = 0
 11334              		@ frame_needed = 0, uses_anonymous_args = 0
 11335              		@ link register save eliminated.
1874:Veno-Echo.cpp ****     
 11336              		.loc 20 1874 5 view .LVU3217
1876:Veno-Echo.cpp ****     {
 11337              		.loc 20 1876 5 view .LVU3218
 11338 0000 69B1     		cbz	r1, .L599
1878:Veno-Echo.cpp ****         {
 11339              		.loc 20 1878 9 view .LVU3219
 11340              	.LVL724:
 11341              	.LBB2021:
 11342              	.LBI2021:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 11343              		.loc 21 75 3 view .LVU3220
 11344              	.LBB2022:
 11345              		.loc 21 76 5 view .LVU3221
 11346              		.loc 21 76 5 is_stmt 0 view .LVU3222
 11347              	.LBE2022:
 11348              	.LBE2021:
1878:Veno-Echo.cpp ****         {
 11349              		.loc 20 1878 15 view .LVU3223
 11350 0002 70EE600A 		vsub.f32	s1, s0, s1
 11351              	.LVL725:
1878:Veno-Echo.cpp ****         {
 11352              		.loc 20 1878 9 view .LVU3224
 11353 0006 DFED0D7A 		vldr.32	s15, .L602
 11354              	.LBB2024:
 11355              	.LBB2023:
 11356              		.loc 21 76 31 view .LVU3225
 11357 000a B0EEE00A 		vabs.f32	s0, s1
 11358              	.LVL726:
 11359              		.loc 21 76 31 view .LVU3226
 11360              	.LBE2023:
 11361              	.LBE2024:
1878:Veno-Echo.cpp ****         {
 11362              		.loc 20 1878 9 view .LVU3227
 11363 000e B4EEE70A 		vcmpe.f32	s0, s15
 11364 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 348


 11365 0016 D4BF     		ite	le
 11366 0018 0120     		movle	r0, #1
 11367              	.LVL727:
1878:Veno-Echo.cpp ****         {
 11368              		.loc 20 1878 9 view .LVU3228
 11369 001a 0020     		movgt	r0, #0
 11370 001c 7047     		bx	lr
 11371              	.LVL728:
 11372              	.L599:
1890:Veno-Echo.cpp ****     {
 11373              		.loc 20 1890 5 is_stmt 1 view .LVU3229
 11374 001e 60B9     		cbnz	r0, .L600
1892:Veno-Echo.cpp ****         {
 11375              		.loc 20 1892 9 view .LVU3230
 11376              	.LVL729:
 11377              	.LBB2025:
 11378              	.LBI2025:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 11379              		.loc 21 75 3 view .LVU3231
 11380              	.LBB2026:
 11381              		.loc 21 76 5 view .LVU3232
 11382              		.loc 21 76 5 is_stmt 0 view .LVU3233
 11383              	.LBE2026:
 11384              	.LBE2025:
1892:Veno-Echo.cpp ****         {
 11385              		.loc 20 1892 15 view .LVU3234
 11386 0020 30EE600A 		vsub.f32	s0, s0, s1
 11387              	.LVL730:
1892:Veno-Echo.cpp ****         {
 11388              		.loc 20 1892 9 view .LVU3235
 11389 0024 DFED057A 		vldr.32	s15, .L602
 11390              	.LBB2028:
 11391              	.LBB2027:
 11392              		.loc 21 76 31 view .LVU3236
 11393 0028 B0EEC00A 		vabs.f32	s0, s0
 11394              	.LBE2027:
 11395              	.LBE2028:
1892:Veno-Echo.cpp ****         {
 11396              		.loc 20 1892 9 view .LVU3237
 11397 002c B4EEE70A 		vcmpe.f32	s0, s15
 11398 0030 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11399 0034 CCBF     		ite	gt
 11400 0036 0120     		movgt	r0, #1
 11401              	.LVL731:
1892:Veno-Echo.cpp ****         {
 11402              		.loc 20 1892 9 view .LVU3238
 11403 0038 0020     		movle	r0, #0
 11404              	.L600:
 11405              	.LVL732:
1909:Veno-Echo.cpp **** 
 11406              		.loc 20 1909 5 is_stmt 1 view .LVU3239
1911:Veno-Echo.cpp **** 
 11407              		.loc 20 1911 1 is_stmt 0 view .LVU3240
 11408 003a 7047     		bx	lr
 11409              	.L603:
 11410              		.align	2
 11411              	.L602:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 349


 11412 003c 0AD7A33B 		.word	1000593162
 11413              		.cfi_endproc
 11414              	.LFE4336:
 11416              		.section	.text._Z20checkPickupState_altff11pickupStateb,"ax",%progbits
 11417              		.align	1
 11418              		.p2align 2,,3
 11419              		.global	_Z20checkPickupState_altff11pickupStateb
 11420              		.syntax unified
 11421              		.thumb
 11422              		.thumb_func
 11423              		.fpu fpv5-d16
 11425              	_Z20checkPickupState_altff11pickupStateb:
 11426              	.LVL733:
 11427              	.LFB4337:
1915:Veno-Echo.cpp ****     pickupState retval{};
 11428              		.loc 20 1915 1 is_stmt 1 view -0
 11429              		.cfi_startproc
 11430              		@ args = 0, pretend = 0, frame = 0
 11431              		@ frame_needed = 0, uses_anonymous_args = 0
 11432              		@ link register save eliminated.
1916:Veno-Echo.cpp **** 
 11433              		.loc 20 1916 5 view .LVU3242
1918:Veno-Echo.cpp ****     {
 11434              		.loc 20 1918 5 view .LVU3243
 11435 0000 A1B1     		cbz	r1, .L605
1920:Veno-Echo.cpp ****         {
 11436              		.loc 20 1920 9 view .LVU3244
1920:Veno-Echo.cpp ****         {
 11437              		.loc 20 1920 31 is_stmt 0 view .LVU3245
 11438 0002 DFED1A7A 		vldr.32	s15, .L622
 11439 0006 30EEE77A 		vsub.f32	s14, s1, s15
1920:Veno-Echo.cpp ****         {
 11440              		.loc 20 1920 9 view .LVU3246
 11441 000a B4EEC07A 		vcmpe.f32	s14, s0
 11442 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11443 0012 01DD     		ble	.L620
 11444 0014 0020     		movs	r0, #0
 11445              	.LVL734:
1920:Veno-Echo.cpp ****         {
 11446              		.loc 20 1920 9 view .LVU3247
 11447 0016 7047     		bx	lr
 11448              	.LVL735:
 11449              	.L620:
1925:Veno-Echo.cpp ****         {
 11450              		.loc 20 1925 14 is_stmt 1 view .LVU3248
1925:Veno-Echo.cpp ****         {
 11451              		.loc 20 1925 36 is_stmt 0 view .LVU3249
 11452 0018 70EEA70A 		vadd.f32	s1, s1, s15
 11453              	.LVL736:
1925:Veno-Echo.cpp ****         {
 11454              		.loc 20 1925 14 view .LVU3250
 11455 001c F4EEC00A 		vcmpe.f32	s1, s0
 11456 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1932:Veno-Echo.cpp ****         }
 11457              		.loc 20 1932 20 view .LVU3251
 11458 0024 4CBF     		ite	mi
 11459 0026 0120     		movmi	r0, #1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 350


 11460              	.LVL737:
1932:Veno-Echo.cpp ****         }
 11461              		.loc 20 1932 20 view .LVU3252
 11462 0028 0220     		movpl	r0, #2
 11463 002a 7047     		bx	lr
 11464              	.LVL738:
 11465              	.L605:
1938:Veno-Echo.cpp ****         {
 11466              		.loc 20 1938 9 is_stmt 1 view .LVU3253
 11467 002c 0128     		cmp	r0, #1
 11468 002e 04D0     		beq	.L608
 11469 0030 0228     		cmp	r0, #2
 11470 0032 01D0     		beq	.L606
 11471 0034 68B1     		cbz	r0, .L621
 11472 0036 0846     		mov	r0, r1
 11473              	.LVL739:
 11474              	.L606:
1959:Veno-Echo.cpp **** }
 11475              		.loc 20 1959 5 view .LVU3254
1960:Veno-Echo.cpp **** 
 11476              		.loc 20 1960 1 is_stmt 0 view .LVU3255
 11477 0038 7047     		bx	lr
 11478              	.LVL740:
 11479              	.L608:
1947:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
 11480              		.loc 20 1947 13 is_stmt 1 view .LVU3256
1948:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11481              		.loc 20 1948 13 view .LVU3257
1948:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11482              		.loc 20 1948 35 is_stmt 0 view .LVU3258
 11483 003a DFED0C7A 		vldr.32	s15, .L622
 11484 003e 70EEA70A 		vadd.f32	s1, s1, s15
 11485              	.LVL741:
1948:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11486              		.loc 20 1948 13 view .LVU3259
 11487 0042 F4EEC00A 		vcmpe.f32	s1, s0
 11488 0046 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11489 004a CCBF     		ite	gt
 11490 004c 0220     		movgt	r0, #2
 11491              	.LVL742:
1948:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11492              		.loc 20 1948 13 view .LVU3260
 11493 004e 0120     		movle	r0, #1
 11494 0050 7047     		bx	lr
 11495              	.LVL743:
 11496              	.L621:
1940:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
 11497              		.loc 20 1940 13 is_stmt 1 view .LVU3261
1941:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11498              		.loc 20 1941 13 view .LVU3262
1941:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11499              		.loc 20 1941 35 is_stmt 0 view .LVU3263
 11500 0052 DFED067A 		vldr.32	s15, .L622
 11501 0056 70EEE70A 		vsub.f32	s1, s1, s15
 11502              	.LVL744:
1941:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11503              		.loc 20 1941 13 view .LVU3264
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 351


 11504 005a F4EEC00A 		vcmpe.f32	s1, s0
 11505 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11506 0062 4CBF     		ite	mi
 11507 0064 0220     		movmi	r0, #2
 11508              	.LVL745:
1941:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11509              		.loc 20 1941 13 view .LVU3265
 11510 0066 0020     		movpl	r0, #0
 11511 0068 7047     		bx	lr
 11512              	.L623:
 11513 006a 00BF     		.align	2
 11514              	.L622:
 11515 006c 0AD7A33B 		.word	1000593162
 11516              		.cfi_endproc
 11517              	.LFE4337:
 11519              		.section	.text._Z11GetTapRatio9TapRatios,"ax",%progbits
 11520              		.align	1
 11521              		.p2align 2,,3
 11522              		.global	_Z11GetTapRatio9TapRatios
 11523              		.syntax unified
 11524              		.thumb
 11525              		.thumb_func
 11526              		.fpu fpv5-d16
 11528              	_Z11GetTapRatio9TapRatios:
 11529              	.LVL746:
 11530              	.LFB4338:
1963:Veno-Echo.cpp **** float retVal{};
 11531              		.loc 20 1963 1 is_stmt 1 view -0
 11532              		.cfi_startproc
 11533              		@ args = 0, pretend = 0, frame = 0
 11534              		@ frame_needed = 0, uses_anonymous_args = 0
 11535              		@ link register save eliminated.
1964:Veno-Echo.cpp ****     switch(ratio)
 11536              		.loc 20 1964 1 view .LVU3267
1965:Veno-Echo.cpp ****     {
 11537              		.loc 20 1965 5 view .LVU3268
 11538 0000 0138     		subs	r0, r0, #1
 11539              	.LVL747:
1965:Veno-Echo.cpp ****     {
 11540              		.loc 20 1965 5 is_stmt 0 view .LVU3269
 11541 0002 C0B2     		uxtb	r0, r0
 11542 0004 0228     		cmp	r0, #2
 11543 0006 05D8     		bhi	.L626
 11544 0008 044B     		ldr	r3, .L627
 11545 000a 03EB8000 		add	r0, r3, r0, lsl #2
 11546 000e 90ED000A 		vldr.32	s0, [r0]
 11547 0012 7047     		bx	lr
 11548              	.L626:
1963:Veno-Echo.cpp **** float retVal{};
 11549              		.loc 20 1963 1 view .LVU3270
 11550 0014 B7EE000A 		vmov.f32	s0, #1.0e+0
 11551              	.LVL748:
 11552              		.loc 20 1988 1 is_stmt 1 view .LVU3271
1989:Veno-Echo.cpp **** }
 11553              		.loc 20 1989 1 is_stmt 0 view .LVU3272
 11554 0018 7047     		bx	lr
 11555              	.L628:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 352


 11556 001a 00BF     		.align	2
 11557              	.L627:
 11558 001c 00000000 		.word	.LANCHOR25
 11559              		.cfi_endproc
 11560              	.LFE4338:
 11562              		.section	.text.startup._GLOBAL__sub_I_delMemsL,"ax",%progbits
 11563              		.align	1
 11564              		.p2align 2,,3
 11565              		.syntax unified
 11566              		.thumb
 11567              		.thumb_func
 11568              		.fpu fpv5-d16
 11570              	_GLOBAL__sub_I_delMemsL:
 11571              	.LFB4917:
 11572              		.loc 20 1989 1 is_stmt 1 view -0
 11573              		.cfi_startproc
 11574              		@ args = 0, pretend = 0, frame = 0
 11575              		@ frame_needed = 0, uses_anonymous_args = 0
 11576              	.LBB2185:
 11577              	.LBI2185:
 11578              		.loc 20 1989 1 view .LVU3274
 11579              	.LVL749:
 11580              	.LBB2186:
 11581              	.LBB2187:
 11582              	.LBI2187:
  21:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 11583              		.loc 2 21 5 view .LVU3275
 11584              	.LBB2188:
 11585              	.LBB2189:
 11586              	.LBI2189:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 11587              		.loc 6 36 5 view .LVU3276
 11588              	.LBE2189:
 11589              	.LBE2188:
 11590              	.LBE2187:
 11591              	.LBE2186:
 11592              	.LBE2185:
 11593              		.loc 20 1989 1 is_stmt 0 view .LVU3277
 11594 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 11595              		.cfi_def_cfa_offset 24
 11596              		.cfi_offset 4, -24
 11597              		.cfi_offset 5, -20
 11598              		.cfi_offset 6, -16
 11599              		.cfi_offset 7, -12
 11600              		.cfi_offset 8, -8
 11601              		.cfi_offset 14, -4
 11602              	.LBB2308:
 11603              	.LBB2304:
 11604              	.LBB2204:
 11605              	.LBB2202:
 11606              	.LBB2194:
 11607              	.LBB2190:
 11608              	.LBB2191:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 11609              		.loc 6 36 35 view .LVU3278
 11610 0004 9648     		ldr	r0, .L631
 11611 0006 0026     		movs	r6, #0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 353


 11612              	.LBE2191:
 11613              	.LBE2190:
 11614              	.LBE2194:
 11615              	.LBE2202:
 11616              	.LBE2204:
 11617              		.file 26 "Veno-Echo.h"
   1:Veno-Echo.h   **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.h   **** // 
   3:Veno-Echo.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.h   **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.h   **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.h   **** // 
  10:Veno-Echo.h   **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.h   **** // all copies or substantial portions of the Software.
  12:Veno-Echo.h   **** // 
  13:Veno-Echo.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.h   **** // THE SOFTWARE.
  20:Veno-Echo.h   **** // 
  21:Veno-Echo.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.h   **** 
  23:Veno-Echo.h   **** #ifndef VENO_ECHO_H
  24:Veno-Echo.h   **** #define VENO_ECHO_H
  25:Veno-Echo.h   **** 
  26:Veno-Echo.h   **** //defines for HW pins:
  27:Veno-Echo.h   **** 
  28:Veno-Echo.h   **** 
  29:Veno-Echo.h   **** 
  30:Veno-Echo.h   **** #include "daisy_seed.h"
  31:Veno-Echo.h   **** using namespace daisy;
  32:Veno-Echo.h   **** 
  33:Veno-Echo.h   **** static DaisySeed hw;
 11618              		.loc 26 33 18 view .LVU3279
 11619 0008 964C     		ldr	r4, .L631+4
  40:Veno-Echo.cpp **** static Svf LPF_R;
 11620              		.loc 20 40 12 view .LVU3280
 11621 000a 974D     		ldr	r5, .L631+8
 11622              		.loc 26 33 18 view .LVU3281
 11623 000c 2246     		mov	r2, r4
 11624 000e 9749     		ldr	r1, .L631+12
 11625              	.LBB2205:
 11626              	.LBB2203:
 11627              	.LBB2195:
 11628              	.LBB2193:
 11629              	.LBB2192:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 11630              		.loc 6 36 35 view .LVU3282
 11631 0010 4661     		str	r6, [r0, #20]
 11632              	.LVL750:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 354


 11633              		.loc 6 36 35 view .LVU3283
 11634              	.LBE2192:
 11635              	.LBE2193:
 11636              	.LBE2195:
 11637              	.LBB2196:
 11638              	.LBI2196:
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 11639              		.loc 5 84 5 is_stmt 1 view .LVU3284
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 11640              		.loc 5 84 5 is_stmt 0 view .LVU3285
 11641              	.LBE2196:
 11642              	.LBB2197:
 11643              	.LBI2197:
 11644              		.file 27 "../libdaisy/src/per/dac.h"
   1:../libdaisy/src/per/dac.h **** #pragma once
   2:../libdaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../libdaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../libdaisy/src/per/dac.h **** 
   5:../libdaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../libdaisy/src/per/dac.h **** 
   7:../libdaisy/src/per/dac.h **** namespace daisy
   8:../libdaisy/src/per/dac.h **** {
   9:../libdaisy/src/per/dac.h **** /** DAC handle for Built-in DAC Peripheral 
  10:../libdaisy/src/per/dac.h ****  ** 
  11:../libdaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  12:../libdaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  13:../libdaisy/src/per/dac.h ****  **
  14:../libdaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal periphearls is also not supported.
  15:../libdaisy/src/per/dac.h ****  **
  16:../libdaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  17:../libdaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  18:../libdaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  19:../libdaisy/src/per/dac.h ****  ***/
  20:../libdaisy/src/per/dac.h **** class DacHandle
  21:../libdaisy/src/per/dac.h **** {
  22:../libdaisy/src/per/dac.h ****   public:
  23:../libdaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  24:../libdaisy/src/per/dac.h ****     enum class Result
  25:../libdaisy/src/per/dac.h ****     {
  26:../libdaisy/src/per/dac.h ****         OK,
  27:../libdaisy/src/per/dac.h ****         ERR,
  28:../libdaisy/src/per/dac.h ****     };
  29:../libdaisy/src/per/dac.h **** 
  30:../libdaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  31:../libdaisy/src/per/dac.h ****     enum class Channel
  32:../libdaisy/src/per/dac.h ****     {
  33:../libdaisy/src/per/dac.h ****         ONE,
  34:../libdaisy/src/per/dac.h ****         TWO,
  35:../libdaisy/src/per/dac.h ****         BOTH,
  36:../libdaisy/src/per/dac.h ****     };
  37:../libdaisy/src/per/dac.h **** 
  38:../libdaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  39:../libdaisy/src/per/dac.h ****      **
  40:../libdaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  41:../libdaisy/src/per/dac.h ****      **
  42:../libdaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  43:../libdaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 355


  44:../libdaisy/src/per/dac.h ****      ***/
  45:../libdaisy/src/per/dac.h ****     enum class Mode
  46:../libdaisy/src/per/dac.h ****     {
  47:../libdaisy/src/per/dac.h ****         POLLING,
  48:../libdaisy/src/per/dac.h ****         DMA,
  49:../libdaisy/src/per/dac.h ****     };
  50:../libdaisy/src/per/dac.h **** 
  51:../libdaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  52:../libdaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  53:../libdaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  54:../libdaisy/src/per/dac.h ****      ***/
  55:../libdaisy/src/per/dac.h ****     enum class BitDepth
  56:../libdaisy/src/per/dac.h ****     {
  57:../libdaisy/src/per/dac.h ****         BITS_8,
  58:../libdaisy/src/per/dac.h ****         BITS_12
  59:../libdaisy/src/per/dac.h ****     };
  60:../libdaisy/src/per/dac.h **** 
  61:../libdaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  62:../libdaisy/src/per/dac.h ****     enum class BufferState
  63:../libdaisy/src/per/dac.h ****     {
  64:../libdaisy/src/per/dac.h ****         ENABLED,
  65:../libdaisy/src/per/dac.h ****         DISABLED,
  66:../libdaisy/src/per/dac.h ****     };
  67:../libdaisy/src/per/dac.h **** 
  68:../libdaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  69:../libdaisy/src/per/dac.h ****     struct Config
  70:../libdaisy/src/per/dac.h ****     {
  71:../libdaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  72:../libdaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  73:../libdaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  74:../libdaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  75:../libdaisy/src/per/dac.h ****         uint32_t target_samplerate;
  76:../libdaisy/src/per/dac.h **** 
  77:../libdaisy/src/per/dac.h ****         Channel     chn;
  78:../libdaisy/src/per/dac.h ****         Mode        mode;
  79:../libdaisy/src/per/dac.h ****         BitDepth    bitdepth;
  80:../libdaisy/src/per/dac.h ****         BufferState buff_state;
  81:../libdaisy/src/per/dac.h ****     };
  82:../libdaisy/src/per/dac.h **** 
  83:../libdaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 11645              		.loc 27 83 5 is_stmt 1 view .LVU3286
 11646              	.LBB2198:
 11647              	.LBB2199:
 11648              		.loc 27 83 33 is_stmt 0 view .LVU3287
 11649 0012 0662     		str	r6, [r0, #32]
 11650              	.LVL751:
 11651              		.loc 27 83 33 view .LVU3288
 11652              	.LBE2199:
 11653              	.LBE2198:
 11654              	.LBE2197:
 11655              	.LBB2200:
 11656              	.LBI2200:
  40:../libdaisy/src/hid/usb.h **** 
 11657              		.loc 4 40 5 is_stmt 1 view .LVU3289
  40:../libdaisy/src/hid/usb.h **** 
 11658              		.loc 4 40 5 is_stmt 0 view .LVU3290
 11659              	.LBE2200:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 356


 11660              	.LBB2201:
 11661              	.LBI2201:
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 11662              		.loc 3 56 5 is_stmt 1 view .LVU3291
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 11663              		.loc 3 56 5 is_stmt 0 view .LVU3292
 11664              	.LBE2201:
 11665              	.LBE2203:
 11666              	.LBE2205:
 11667              		.loc 26 33 18 view .LVU3293
 11668 0014 FFF7FEFF 		bl	__aeabi_atexit
 11669              	.LVL752:
 11670              	.LBB2206:
 11671              	.LBI2206:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11672              		.loc 9 21 5 is_stmt 1 view .LVU3294
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11673              		.loc 9 21 5 is_stmt 0 view .LVU3295
 11674              	.LBE2206:
  40:Veno-Echo.cpp **** static Svf LPF_R;
 11675              		.loc 20 40 12 view .LVU3296
 11676 0018 2246     		mov	r2, r4
 11677 001a 2946     		mov	r1, r5
 11678 001c 9448     		ldr	r0, .L631+16
 11679 001e FFF7FEFF 		bl	__aeabi_atexit
 11680              	.LVL753:
 11681              	.LBB2207:
 11682              	.LBI2207:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11683              		.loc 9 21 5 is_stmt 1 view .LVU3297
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11684              		.loc 9 21 5 is_stmt 0 view .LVU3298
 11685              	.LBE2207:
  41:Veno-Echo.cpp **** static Svf HPF_L;
 11686              		.loc 20 41 12 view .LVU3299
 11687 0022 2246     		mov	r2, r4
 11688 0024 2946     		mov	r1, r5
 11689 0026 9348     		ldr	r0, .L631+20
 11690 0028 FFF7FEFF 		bl	__aeabi_atexit
 11691              	.LVL754:
 11692              	.LBB2208:
 11693              	.LBI2208:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11694              		.loc 9 21 5 is_stmt 1 view .LVU3300
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11695              		.loc 9 21 5 is_stmt 0 view .LVU3301
 11696              	.LBE2208:
  42:Veno-Echo.cpp **** static Svf HPF_R;
 11697              		.loc 20 42 12 view .LVU3302
 11698 002c 2246     		mov	r2, r4
 11699 002e 2946     		mov	r1, r5
 11700 0030 9148     		ldr	r0, .L631+24
 11701 0032 FFF7FEFF 		bl	__aeabi_atexit
 11702              	.LVL755:
 11703              	.LBB2209:
 11704              	.LBI2209:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 357


 11705              		.loc 9 21 5 is_stmt 1 view .LVU3303
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11706              		.loc 9 21 5 is_stmt 0 view .LVU3304
 11707              	.LBE2209:
  43:Veno-Echo.cpp **** 
 11708              		.loc 20 43 12 view .LVU3305
 11709 0036 2246     		mov	r2, r4
 11710 0038 2946     		mov	r1, r5
 11711 003a 9048     		ldr	r0, .L631+28
 11712 003c FFF7FEFF 		bl	__aeabi_atexit
 11713              	.LVL756:
 11714              	.LBB2210:
 11715              	.LBI2210:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11716              		.loc 9 21 5 is_stmt 1 view .LVU3306
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11717              		.loc 9 21 5 is_stmt 0 view .LVU3307
 11718              	.LBE2210:
  45:Veno-Echo.cpp **** static Svf LPF_R_post;
 11719              		.loc 20 45 12 view .LVU3308
 11720 0040 2246     		mov	r2, r4
 11721 0042 2946     		mov	r1, r5
 11722 0044 8E48     		ldr	r0, .L631+32
 11723 0046 FFF7FEFF 		bl	__aeabi_atexit
 11724              	.LVL757:
 11725              	.LBB2211:
 11726              	.LBI2211:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11727              		.loc 9 21 5 is_stmt 1 view .LVU3309
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11728              		.loc 9 21 5 is_stmt 0 view .LVU3310
 11729              	.LBE2211:
  46:Veno-Echo.cpp **** static Svf HPF_L_post;
 11730              		.loc 20 46 12 view .LVU3311
 11731 004a 2246     		mov	r2, r4
 11732 004c 2946     		mov	r1, r5
 11733 004e 8D48     		ldr	r0, .L631+36
 11734 0050 FFF7FEFF 		bl	__aeabi_atexit
 11735              	.LVL758:
 11736              	.LBB2212:
 11737              	.LBI2212:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11738              		.loc 9 21 5 is_stmt 1 view .LVU3312
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11739              		.loc 9 21 5 is_stmt 0 view .LVU3313
 11740              	.LBE2212:
  47:Veno-Echo.cpp **** static Svf HPF_R_post;
 11741              		.loc 20 47 12 view .LVU3314
 11742 0054 2246     		mov	r2, r4
 11743 0056 2946     		mov	r1, r5
 11744 0058 8B48     		ldr	r0, .L631+40
 11745 005a FFF7FEFF 		bl	__aeabi_atexit
 11746              	.LVL759:
 11747              	.LBB2213:
 11748              	.LBI2213:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11749              		.loc 9 21 5 is_stmt 1 view .LVU3315
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 358


  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11750              		.loc 9 21 5 is_stmt 0 view .LVU3316
 11751              	.LBE2213:
  48:Veno-Echo.cpp **** 
 11752              		.loc 20 48 12 view .LVU3317
 11753 005e 2246     		mov	r2, r4
 11754 0060 2946     		mov	r1, r5
 11755 0062 8A48     		ldr	r0, .L631+44
 11756 0064 FFF7FEFF 		bl	__aeabi_atexit
 11757              	.LVL760:
 11758              	.LBB2214:
 11759              	.LBI2214:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 11760              		.loc 8 15 5 is_stmt 1 view .LVU3318
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 11761              		.loc 8 15 5 is_stmt 0 view .LVU3319
 11762              	.LBE2214:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 11763              		.loc 20 50 19 view .LVU3320
 11764 0068 2246     		mov	r2, r4
 11765 006a 8949     		ldr	r1, .L631+48
 11766              	.LBB2215:
 11767              	.LBB2216:
 11768              	.LBB2217:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11769              		.loc 12 45 13 view .LVU3321
 11770 006c 0025     		movs	r5, #0
 11771              	.LBE2217:
 11772              	.LBE2216:
 11773              	.LBE2215:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 11774              		.loc 20 50 19 view .LVU3322
 11775 006e 8948     		ldr	r0, .L631+52
 11776 0070 FFF7FEFF 		bl	__aeabi_atexit
 11777              	.LVL761:
 11778              	.LBB2222:
 11779              	.LBI2215:
  43:envFollow.h   ****     {
 11780              		.loc 12 43 5 is_stmt 1 view .LVU3323
 11781              	.LBB2220:
 11782              	.LBB2218:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11783              		.loc 12 45 9 view .LVU3324
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 11784              		.loc 12 48 11 is_stmt 0 view .LVU3325
 11785 0074 884F     		ldr	r7, .L631+56
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11786              		.loc 12 45 13 view .LVU3326
 11787 0076 8948     		ldr	r0, .L631+60
 11788              	.LBE2218:
 11789              	.LBE2220:
 11790              	.LBE2222:
  51:Veno-Echo.cpp **** 
 11791              		.loc 20 51 18 view .LVU3327
 11792 0078 2246     		mov	r2, r4
 11793 007a 8949     		ldr	r1, .L631+64
 11794              	.LBB2223:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 359


 11795              	.LBB2221:
 11796              	.LBB2219:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11797              		.loc 12 45 13 view .LVU3328
 11798 007c 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 11799              		.loc 12 46 9 is_stmt 1 view .LVU3329
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 11800              		.loc 12 46 20 is_stmt 0 view .LVU3330
 11801 007e 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 11802              		.loc 12 47 9 is_stmt 1 view .LVU3331
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 11803              		.loc 12 47 17 is_stmt 0 view .LVU3332
 11804 0080 C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 11805              		.loc 12 48 9 is_stmt 1 view .LVU3333
  50:envFollow.h   ****     }  
 11806              		.loc 12 50 21 is_stmt 0 view .LVU3334
 11807 0082 8560     		str	r5, [r0, #8]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 11808              		.loc 12 48 11 view .LVU3335
 11809 0084 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 11810              		.loc 12 49 9 is_stmt 1 view .LVU3336
  49:envFollow.h   ****         sample_noDC = 0.0f;
 11811              		.loc 12 49 15 is_stmt 0 view .LVU3337
 11812 0086 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 11813              		.loc 12 50 9 is_stmt 1 view .LVU3338
 11814              	.LVL762:
  50:envFollow.h   ****     }  
 11815              		.loc 12 50 9 is_stmt 0 view .LVU3339
 11816              	.LBE2219:
 11817              	.LBE2221:
 11818              	.LBE2223:
  51:Veno-Echo.cpp **** 
 11819              		.loc 20 51 18 view .LVU3340
 11820 0088 FFF7FEFF 		bl	__aeabi_atexit
 11821              	.LVL763:
 11822              	.LBB2224:
 11823              	.LBI2224:
  43:envFollow.h   ****     {
 11824              		.loc 12 43 5 is_stmt 1 view .LVU3341
 11825              	.LBB2225:
 11826              	.LBB2226:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11827              		.loc 12 45 9 view .LVU3342
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11828              		.loc 12 45 13 is_stmt 0 view .LVU3343
 11829 008c 8548     		ldr	r0, .L631+68
 11830              	.LBE2226:
 11831              	.LBE2225:
 11832              	.LBE2224:
  53:Veno-Echo.cpp **** 
 11833              		.loc 20 53 16 view .LVU3344
 11834 008e DFF8DC82 		ldr	r8, .L631+268
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 360


  51:Veno-Echo.cpp **** 
 11835              		.loc 20 51 27 view .LVU3345
 11836 0092 2246     		mov	r2, r4
 11837 0094 8249     		ldr	r1, .L631+64
 11838              	.LBB2229:
 11839              	.LBB2228:
 11840              	.LBB2227:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11841              		.loc 12 45 13 view .LVU3346
 11842 0096 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 11843              		.loc 12 46 9 is_stmt 1 view .LVU3347
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 11844              		.loc 12 46 20 is_stmt 0 view .LVU3348
 11845 0098 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 11846              		.loc 12 47 9 is_stmt 1 view .LVU3349
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 11847              		.loc 12 47 17 is_stmt 0 view .LVU3350
 11848 009a C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 11849              		.loc 12 48 9 is_stmt 1 view .LVU3351
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 11850              		.loc 12 48 11 is_stmt 0 view .LVU3352
 11851 009c 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 11852              		.loc 12 49 9 is_stmt 1 view .LVU3353
  49:envFollow.h   ****         sample_noDC = 0.0f;
 11853              		.loc 12 49 15 is_stmt 0 view .LVU3354
 11854 009e 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 11855              		.loc 12 50 9 is_stmt 1 view .LVU3355
  50:envFollow.h   ****     }  
 11856              		.loc 12 50 21 is_stmt 0 view .LVU3356
 11857 00a0 8560     		str	r5, [r0, #8]	@ float
 11858              	.LVL764:
  50:envFollow.h   ****     }  
 11859              		.loc 12 50 21 view .LVU3357
 11860              	.LBE2227:
 11861              	.LBE2228:
 11862              	.LBE2229:
  51:Veno-Echo.cpp **** 
 11863              		.loc 20 51 27 view .LVU3358
 11864 00a2 FFF7FEFF 		bl	__aeabi_atexit
 11865              	.LVL765:
 11866              	.LBB2230:
 11867              	.LBI2230:
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 11868              		.loc 11 14 5 is_stmt 1 view .LVU3359
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 11869              		.loc 11 14 5 is_stmt 0 view .LVU3360
 11870              	.LBE2230:
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 11871              		.loc 20 56 76 view .LVU3361
 11872 00a6 804F     		ldr	r7, .L631+72
  53:Veno-Echo.cpp **** 
 11873              		.loc 20 53 16 view .LVU3362
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 361


 11874 00a8 2246     		mov	r2, r4
 11875 00aa 4146     		mov	r1, r8
 11876 00ac 7F48     		ldr	r0, .L631+76
 11877 00ae FFF7FEFF 		bl	__aeabi_atexit
 11878              	.LVL766:
 11879              	.LBB2231:
 11880              	.LBI2231:
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 11881              		.loc 11 14 5 is_stmt 1 view .LVU3363
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 11882              		.loc 11 14 5 is_stmt 0 view .LVU3364
 11883              	.LBE2231:
  53:Veno-Echo.cpp **** 
 11884              		.loc 20 53 29 view .LVU3365
 11885 00b2 2246     		mov	r2, r4
 11886 00b4 4146     		mov	r1, r8
 11887 00b6 7E48     		ldr	r0, .L631+80
 11888 00b8 FFF7FEFF 		bl	__aeabi_atexit
 11889              	.LVL767:
 11890              	.LBB2232:
 11891              	.LBI2232:
  48:delayline_multitap.h ****     {
 11892              		.loc 18 48 5 is_stmt 1 view .LVU3366
  48:delayline_multitap.h ****     {
 11893              		.loc 18 48 5 is_stmt 0 view .LVU3367
 11894              	.LBE2232:
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 11895              		.loc 20 59 80 view .LVU3368
 11896 00bc 7D4D     		ldr	r5, .L631+84
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 11897              		.loc 20 56 76 view .LVU3369
 11898 00be 2246     		mov	r2, r4
 11899 00c0 3946     		mov	r1, r7
 11900 00c2 7D48     		ldr	r0, .L631+88
 11901 00c4 FFF7FEFF 		bl	__aeabi_atexit
 11902              	.LVL768:
 11903              	.LBB2233:
 11904              	.LBI2233:
  48:delayline_multitap.h ****     {
 11905              		.loc 18 48 5 is_stmt 1 view .LVU3370
  48:delayline_multitap.h ****     {
 11906              		.loc 18 48 5 is_stmt 0 view .LVU3371
 11907              	.LBE2233:
  57:Veno-Echo.cpp **** 
 11908              		.loc 20 57 76 view .LVU3372
 11909 00c8 2246     		mov	r2, r4
 11910 00ca 3946     		mov	r1, r7
 11911 00cc 7B48     		ldr	r0, .L631+92
 11912 00ce FFF7FEFF 		bl	__aeabi_atexit
 11913              	.LVL769:
 11914              	.LBB2234:
 11915              	.LBI2234:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 11916              		.loc 19 38 5 is_stmt 1 view .LVU3373
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 11917              		.loc 19 38 5 is_stmt 0 view .LVU3374
 11918              	.LBE2234:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 362


  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 11919              		.loc 20 98 12 view .LVU3375
 11920 00d2 7B4F     		ldr	r7, .L631+96
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 11921              		.loc 20 59 80 view .LVU3376
 11922 00d4 2246     		mov	r2, r4
 11923 00d6 2946     		mov	r1, r5
 11924 00d8 7A48     		ldr	r0, .L631+100
 11925 00da FFF7FEFF 		bl	__aeabi_atexit
 11926              	.LVL770:
 11927              	.LBB2235:
 11928              	.LBI2235:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 11929              		.loc 19 38 5 is_stmt 1 view .LVU3377
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 11930              		.loc 19 38 5 is_stmt 0 view .LVU3378
 11931              	.LBE2235:
  60:Veno-Echo.cpp **** 
 11932              		.loc 20 60 80 view .LVU3379
 11933 00de 2246     		mov	r2, r4
 11934 00e0 2946     		mov	r1, r5
 11935 00e2 7948     		ldr	r0, .L631+104
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 11936              		.loc 20 102 11 view .LVU3380
 11937 00e4 794D     		ldr	r5, .L631+108
  60:Veno-Echo.cpp **** 
 11938              		.loc 20 60 80 view .LVU3381
 11939 00e6 FFF7FEFF 		bl	__aeabi_atexit
 11940              	.LVL771:
 11941              	.LBB2236:
 11942              	.LBI2236:
  49:DelayMulti.h  **** ~DelayMulti() {}
 11943              		.loc 17 49 1 is_stmt 1 view .LVU3382
 11944              	.LBB2237:
 11945              	.LBB2238:
 11946              	.LBI2238:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 11947              		.loc 14 47 1 view .LVU3383
 11948              	.LBB2239:
 11949              	.LBB2240:
 11950              	.LBI2240:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11951              		.loc 16 24 5 view .LVU3384
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11952              		.loc 16 24 5 is_stmt 0 view .LVU3385
 11953              	.LBE2240:
 11954              	.LBB2241:
 11955              	.LBI2241:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 11956              		.loc 15 15 5 is_stmt 1 view .LVU3386
  15:oscillator_p.h ****     ~Oscillator_p() {}
 11957              		.loc 15 15 5 is_stmt 0 view .LVU3387
 11958              	.LBE2241:
 11959              	.LBE2239:
 11960              	.LBE2238:
 11961              	.LBE2237:
 11962              	.LBE2236:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 363


 11963              	.LBE2304:
 11964              	.LBE2308:
  49:DelayMulti.h  **** ~DelayMulti() {}
 11965              		.loc 17 49 14 is_stmt 1 view .LVU3388
  49:DelayMulti.h  **** ~DelayMulti() {}
 11966              		.loc 17 49 14 view .LVU3389
 11967              	.LBB2309:
 11968              	.LBB2305:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 11969              		.loc 20 98 12 is_stmt 0 view .LVU3390
 11970 00ea 2246     		mov	r2, r4
 11971 00ec 3946     		mov	r1, r7
 11972 00ee 7848     		ldr	r0, .L631+112
 11973 00f0 FFF7FEFF 		bl	__aeabi_atexit
 11974              	.LVL772:
 11975              	.LBB2242:
 11976              	.LBI2242:
  49:DelayMulti.h  **** ~DelayMulti() {}
 11977              		.loc 17 49 1 is_stmt 1 view .LVU3391
 11978              	.LBB2243:
 11979              	.LBB2244:
 11980              	.LBI2244:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 11981              		.loc 14 47 1 view .LVU3392
 11982              	.LBB2245:
 11983              	.LBB2246:
 11984              	.LBI2246:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11985              		.loc 16 24 5 view .LVU3393
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11986              		.loc 16 24 5 is_stmt 0 view .LVU3394
 11987              	.LBE2246:
 11988              	.LBB2247:
 11989              	.LBI2247:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 11990              		.loc 15 15 5 is_stmt 1 view .LVU3395
  15:oscillator_p.h ****     ~Oscillator_p() {}
 11991              		.loc 15 15 5 is_stmt 0 view .LVU3396
 11992              	.LBE2247:
 11993              	.LBE2245:
 11994              	.LBE2244:
 11995              	.LBE2243:
 11996              	.LBE2242:
 11997              	.LBE2305:
 11998              	.LBE2309:
  49:DelayMulti.h  **** ~DelayMulti() {}
 11999              		.loc 17 49 14 is_stmt 1 view .LVU3397
  49:DelayMulti.h  **** ~DelayMulti() {}
 12000              		.loc 17 49 14 view .LVU3398
 12001              	.LBB2310:
 12002              	.LBB2306:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 12003              		.loc 20 98 19 is_stmt 0 view .LVU3399
 12004 00f4 2246     		mov	r2, r4
 12005 00f6 3946     		mov	r1, r7
 12006 00f8 7648     		ldr	r0, .L631+116
 12007 00fa FFF7FEFF 		bl	__aeabi_atexit
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 364


 12008              	.LVL773:
 12009              	.LBB2248:
 12010              	.LBI2248:
  78:LEDs.h        ****     ~ButtonLED() {}
 12011              		.loc 14 78 5 is_stmt 1 view .LVU3400
 12012              	.LBB2249:
 12013              	.LBB2250:
 12014              	.LBI2250:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12015              		.loc 1 40 5 view .LVU3401
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12016              		.loc 1 40 5 is_stmt 0 view .LVU3402
 12017              	.LBE2250:
 12018              	.LBB2251:
 12019              	.LBI2251:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12020              		.loc 16 24 5 is_stmt 1 view .LVU3403
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12021              		.loc 16 24 5 is_stmt 0 view .LVU3404
 12022              	.LBE2251:
 12023              	.LBE2249:
 12024              	.LBE2248:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12025              		.loc 20 102 11 view .LVU3405
 12026 00fe 2246     		mov	r2, r4
 12027 0100 2946     		mov	r1, r5
 12028 0102 7548     		ldr	r0, .L631+120
 12029 0104 FFF7FEFF 		bl	__aeabi_atexit
 12030              	.LVL774:
 12031              	.LBB2252:
 12032              	.LBI2252:
  78:LEDs.h        ****     ~ButtonLED() {}
 12033              		.loc 14 78 5 is_stmt 1 view .LVU3406
 12034              	.LBB2253:
 12035              	.LBB2254:
 12036              	.LBI2254:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12037              		.loc 1 40 5 view .LVU3407
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12038              		.loc 1 40 5 is_stmt 0 view .LVU3408
 12039              	.LBE2254:
 12040              	.LBB2255:
 12041              	.LBI2255:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12042              		.loc 16 24 5 is_stmt 1 view .LVU3409
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12043              		.loc 16 24 5 is_stmt 0 view .LVU3410
 12044              	.LBE2255:
 12045              	.LBE2253:
 12046              	.LBE2252:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12047              		.loc 20 102 18 view .LVU3411
 12048 0108 2246     		mov	r2, r4
 12049 010a 2946     		mov	r1, r5
 12050 010c 7348     		ldr	r0, .L631+124
 12051 010e FFF7FEFF 		bl	__aeabi_atexit
 12052              	.LVL775:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 365


 12053              	.LBB2256:
 12054              	.LBI2256:
  78:LEDs.h        ****     ~ButtonLED() {}
 12055              		.loc 14 78 5 is_stmt 1 view .LVU3412
 12056              	.LBB2257:
 12057              	.LBB2258:
 12058              	.LBI2258:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12059              		.loc 1 40 5 view .LVU3413
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12060              		.loc 1 40 5 is_stmt 0 view .LVU3414
 12061              	.LBE2258:
 12062              	.LBB2259:
 12063              	.LBI2259:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12064              		.loc 16 24 5 is_stmt 1 view .LVU3415
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12065              		.loc 16 24 5 is_stmt 0 view .LVU3416
 12066              	.LBE2259:
 12067              	.LBE2257:
 12068              	.LBE2256:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12069              		.loc 20 102 25 view .LVU3417
 12070 0112 2246     		mov	r2, r4
 12071 0114 2946     		mov	r1, r5
 12072 0116 7248     		ldr	r0, .L631+128
 12073 0118 FFF7FEFF 		bl	__aeabi_atexit
 12074              	.LVL776:
 12075              	.LBB2260:
 12076              	.LBI2260:
  78:LEDs.h        ****     ~ButtonLED() {}
 12077              		.loc 14 78 5 is_stmt 1 view .LVU3418
 12078              	.LBB2261:
 12079              	.LBB2262:
 12080              	.LBI2262:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12081              		.loc 1 40 5 view .LVU3419
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12082              		.loc 1 40 5 is_stmt 0 view .LVU3420
 12083              	.LBE2262:
 12084              	.LBB2263:
 12085              	.LBI2263:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12086              		.loc 16 24 5 is_stmt 1 view .LVU3421
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12087              		.loc 16 24 5 is_stmt 0 view .LVU3422
 12088              	.LBE2263:
 12089              	.LBE2261:
 12090              	.LBE2260:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12091              		.loc 20 102 34 view .LVU3423
 12092 011c 2246     		mov	r2, r4
 12093 011e 2946     		mov	r1, r5
 12094 0120 7048     		ldr	r0, .L631+132
 12095 0122 FFF7FEFF 		bl	__aeabi_atexit
 12096              	.LVL777:
 12097              	.LBB2264:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 366


 12098              	.LBI2264:
  78:LEDs.h        ****     ~ButtonLED() {}
 12099              		.loc 14 78 5 is_stmt 1 view .LVU3424
 12100              	.LBB2265:
 12101              	.LBB2266:
 12102              	.LBI2266:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12103              		.loc 1 40 5 view .LVU3425
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12104              		.loc 1 40 5 is_stmt 0 view .LVU3426
 12105              	.LBE2266:
 12106              	.LBB2267:
 12107              	.LBI2267:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12108              		.loc 16 24 5 is_stmt 1 view .LVU3427
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12109              		.loc 16 24 5 is_stmt 0 view .LVU3428
 12110              	.LBE2267:
 12111              	.LBE2265:
 12112              	.LBE2264:
 144:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 12113              		.loc 20 144 13 view .LVU3429
 12114 0126 704F     		ldr	r7, .L631+136
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12115              		.loc 20 102 44 view .LVU3430
 12116 0128 2246     		mov	r2, r4
 12117 012a 2946     		mov	r1, r5
 12118 012c 6F48     		ldr	r0, .L631+140
 12119 012e FFF7FEFF 		bl	__aeabi_atexit
 12120              	.LVL778:
 12121              	.LBB2268:
 12122              	.LBI2268:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 12123              		.loc 14 47 1 is_stmt 1 view .LVU3431
 12124              	.LBB2269:
 12125              	.LBB2270:
 12126              	.LBI2270:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12127              		.loc 16 24 5 view .LVU3432
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12128              		.loc 16 24 5 is_stmt 0 view .LVU3433
 12129              	.LBE2270:
 12130              	.LBB2271:
 12131              	.LBI2271:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 12132              		.loc 15 15 5 is_stmt 1 view .LVU3434
  15:oscillator_p.h ****     ~Oscillator_p() {}
 12133              		.loc 15 15 5 is_stmt 0 view .LVU3435
 12134              	.LBE2271:
 12135              	.LBE2269:
 12136              	.LBE2268:
 103:Veno-Echo.cpp **** 
 12137              		.loc 20 103 10 view .LVU3436
 12138 0132 2246     		mov	r2, r4
 12139 0134 6E49     		ldr	r1, .L631+144
 12140 0136 6F48     		ldr	r0, .L631+148
 12141 0138 FFF7FEFF 		bl	__aeabi_atexit
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 367


 12142              	.LVL779:
 12143              	.LBB2272:
 12144              	.LBI2272:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12145              		.loc 7 38 5 is_stmt 1 view .LVU3437
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12146              		.loc 7 38 5 is_stmt 0 view .LVU3438
 12147              	.LBE2272:
 144:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 12148              		.loc 20 144 13 view .LVU3439
 12149 013c 2246     		mov	r2, r4
 12150 013e 3946     		mov	r1, r7
 12151 0140 6D48     		ldr	r0, .L631+152
 12152 0142 FFF7FEFF 		bl	__aeabi_atexit
 12153              	.LVL780:
 12154              	.LBB2273:
 12155              	.LBI2273:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12156              		.loc 7 38 5 is_stmt 1 view .LVU3440
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12157              		.loc 7 38 5 is_stmt 0 view .LVU3441
 12158              	.LBE2273:
 145:Veno-Echo.cpp **** 
 12159              		.loc 20 145 13 view .LVU3442
 12160 0146 2246     		mov	r2, r4
 12161 0148 3946     		mov	r1, r7
 12162 014a 6C48     		ldr	r0, .L631+156
 150:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 12163              		.loc 20 150 18 view .LVU3443
 12164 014c 6C4D     		ldr	r5, .L631+160
 145:Veno-Echo.cpp **** 
 12165              		.loc 20 145 13 view .LVU3444
 12166 014e FFF7FEFF 		bl	__aeabi_atexit
 12167              	.LVL781:
 12168              	.LBB2274:
 12169              	.LBI2274:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12170              		.loc 7 38 5 is_stmt 1 view .LVU3445
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12171              		.loc 7 38 5 is_stmt 0 view .LVU3446
 12172              	.LBE2274:
 147:Veno-Echo.cpp **** static Adsr HPF_Env;
 12173              		.loc 20 147 13 view .LVU3447
 12174 0152 2246     		mov	r2, r4
 12175 0154 3946     		mov	r1, r7
 12176 0156 6B48     		ldr	r0, .L631+164
 12177 0158 FFF7FEFF 		bl	__aeabi_atexit
 12178              	.LVL782:
 12179              	.LBB2275:
 12180              	.LBI2275:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12181              		.loc 7 38 5 is_stmt 1 view .LVU3448
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12182              		.loc 7 38 5 is_stmt 0 view .LVU3449
 12183              	.LBE2275:
 148:Veno-Echo.cpp **** 
 12184              		.loc 20 148 13 view .LVU3450
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 368


 12185 015c 2246     		mov	r2, r4
 12186 015e 3946     		mov	r1, r7
 12187 0160 6948     		ldr	r0, .L631+168
 12188 0162 FFF7FEFF 		bl	__aeabi_atexit
 12189              	.LVL783:
 12190              	.LBB2276:
 12191              	.LBI2276:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12192              		.loc 10 36 5 is_stmt 1 view .LVU3451
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12193              		.loc 10 36 5 is_stmt 0 view .LVU3452
 12194              	.LBE2276:
 150:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 12195              		.loc 20 150 18 view .LVU3453
 12196 0166 2246     		mov	r2, r4
 12197 0168 2946     		mov	r1, r5
 12198 016a 6848     		ldr	r0, .L631+172
 12199 016c FFF7FEFF 		bl	__aeabi_atexit
 12200              	.LVL784:
 12201              	.LBB2277:
 12202              	.LBI2277:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12203              		.loc 10 36 5 is_stmt 1 view .LVU3454
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12204              		.loc 10 36 5 is_stmt 0 view .LVU3455
 12205              	.LBE2277:
 151:Veno-Echo.cpp **** 
 12206              		.loc 20 151 18 view .LVU3456
 12207 0170 2246     		mov	r2, r4
 12208 0172 2946     		mov	r1, r5
 12209 0174 6648     		ldr	r0, .L631+176
 12210 0176 FFF7FEFF 		bl	__aeabi_atexit
 12211              	.LVL785:
 12212              	.LBB2278:
 12213              	.LBI2278:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12214              		.loc 10 36 5 is_stmt 1 view .LVU3457
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12215              		.loc 10 36 5 is_stmt 0 view .LVU3458
 12216              	.LBE2278:
 153:Veno-Echo.cpp **** 
 12217              		.loc 20 153 18 view .LVU3459
 12218 017a 2246     		mov	r2, r4
 12219 017c 2946     		mov	r1, r5
 12220 017e 6548     		ldr	r0, .L631+180
 12221 0180 FFF7FEFF 		bl	__aeabi_atexit
 12222              	.LVL786:
 12223              	.LBB2279:
 12224              	.LBI2279:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12225              		.loc 10 36 5 is_stmt 1 view .LVU3460
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12226              		.loc 10 36 5 is_stmt 0 view .LVU3461
 12227              	.LBE2279:
 156:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 12228              		.loc 20 156 18 view .LVU3462
 12229 0184 2246     		mov	r2, r4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 369


 12230 0186 2946     		mov	r1, r5
 12231 0188 6348     		ldr	r0, .L631+184
 12232 018a FFF7FEFF 		bl	__aeabi_atexit
 12233              	.LVL787:
 12234              	.LBB2280:
 12235              	.LBI2280:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12236              		.loc 10 36 5 is_stmt 1 view .LVU3463
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12237              		.loc 10 36 5 is_stmt 0 view .LVU3464
 12238              	.LBE2280:
 157:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 12239              		.loc 20 157 18 view .LVU3465
 12240 018e 2246     		mov	r2, r4
 12241 0190 2946     		mov	r1, r5
 12242 0192 6248     		ldr	r0, .L631+188
 12243 0194 FFF7FEFF 		bl	__aeabi_atexit
 12244              	.LVL788:
 12245              	.LBB2281:
 12246              	.LBI2281:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12247              		.loc 10 36 5 is_stmt 1 view .LVU3466
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12248              		.loc 10 36 5 is_stmt 0 view .LVU3467
 12249              	.LBE2281:
 158:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 12250              		.loc 20 158 18 view .LVU3468
 12251 0198 2246     		mov	r2, r4
 12252 019a 2946     		mov	r1, r5
 12253 019c 6048     		ldr	r0, .L631+192
 12254 019e FFF7FEFF 		bl	__aeabi_atexit
 12255              	.LVL789:
 12256              	.LBB2282:
 12257              	.LBI2282:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12258              		.loc 10 36 5 is_stmt 1 view .LVU3469
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12259              		.loc 10 36 5 is_stmt 0 view .LVU3470
 12260              	.LBE2282:
 159:Veno-Echo.cpp **** 
 12261              		.loc 20 159 18 view .LVU3471
 12262 01a2 2246     		mov	r2, r4
 12263 01a4 2946     		mov	r1, r5
 12264 01a6 5F48     		ldr	r0, .L631+196
 12265 01a8 FFF7FEFF 		bl	__aeabi_atexit
 12266              	.LVL790:
 12267              	.LBB2283:
 12268              	.LBI2283:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12269              		.loc 10 36 5 is_stmt 1 view .LVU3472
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12270              		.loc 10 36 5 is_stmt 0 view .LVU3473
 12271              	.LBE2283:
 162:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 12272              		.loc 20 162 18 view .LVU3474
 12273 01ac 2246     		mov	r2, r4
 12274 01ae 2946     		mov	r1, r5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 370


 12275 01b0 5D48     		ldr	r0, .L631+200
 12276 01b2 FFF7FEFF 		bl	__aeabi_atexit
 12277              	.LVL791:
 12278              	.LBB2284:
 12279              	.LBI2284:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12280              		.loc 10 36 5 is_stmt 1 view .LVU3475
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12281              		.loc 10 36 5 is_stmt 0 view .LVU3476
 12282              	.LBE2284:
 163:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 12283              		.loc 20 163 18 view .LVU3477
 12284 01b6 2246     		mov	r2, r4
 12285 01b8 2946     		mov	r1, r5
 12286 01ba 5C48     		ldr	r0, .L631+204
 12287 01bc FFF7FEFF 		bl	__aeabi_atexit
 12288              	.LVL792:
 12289              	.LBB2285:
 12290              	.LBI2285:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12291              		.loc 10 36 5 is_stmt 1 view .LVU3478
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12292              		.loc 10 36 5 is_stmt 0 view .LVU3479
 12293              	.LBE2285:
 164:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 12294              		.loc 20 164 18 view .LVU3480
 12295 01c0 2246     		mov	r2, r4
 12296 01c2 2946     		mov	r1, r5
 12297 01c4 5A48     		ldr	r0, .L631+208
 12298 01c6 FFF7FEFF 		bl	__aeabi_atexit
 12299              	.LVL793:
 12300              	.LBB2286:
 12301              	.LBI2286:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12302              		.loc 10 36 5 is_stmt 1 view .LVU3481
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12303              		.loc 10 36 5 is_stmt 0 view .LVU3482
 12304              	.LBE2286:
 165:Veno-Echo.cpp **** 
 12305              		.loc 20 165 18 view .LVU3483
 12306 01ca 2246     		mov	r2, r4
 12307 01cc 2946     		mov	r1, r5
 12308 01ce 5948     		ldr	r0, .L631+212
 12309 01d0 FFF7FEFF 		bl	__aeabi_atexit
 12310              	.LVL794:
 12311              	.LBB2287:
 12312              	.LBI2287:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12313              		.loc 10 36 5 is_stmt 1 view .LVU3484
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12314              		.loc 10 36 5 is_stmt 0 view .LVU3485
 12315              	.LBE2287:
 168:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 12316              		.loc 20 168 18 view .LVU3486
 12317 01d4 2246     		mov	r2, r4
 12318 01d6 2946     		mov	r1, r5
 12319 01d8 5748     		ldr	r0, .L631+216
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 371


 12320 01da FFF7FEFF 		bl	__aeabi_atexit
 12321              	.LVL795:
 12322              	.LBB2288:
 12323              	.LBI2288:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12324              		.loc 10 36 5 is_stmt 1 view .LVU3487
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12325              		.loc 10 36 5 is_stmt 0 view .LVU3488
 12326              	.LBE2288:
 169:Veno-Echo.cpp **** 
 12327              		.loc 20 169 18 view .LVU3489
 12328 01de 2246     		mov	r2, r4
 12329 01e0 2946     		mov	r1, r5
 12330 01e2 5648     		ldr	r0, .L631+220
 12331 01e4 FFF7FEFF 		bl	__aeabi_atexit
 12332              	.LVL796:
 12333              	.LBB2289:
 12334              	.LBI2289:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12335              		.loc 10 36 5 is_stmt 1 view .LVU3490
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12336              		.loc 10 36 5 is_stmt 0 view .LVU3491
 12337              	.LBE2289:
 175:Veno-Echo.cpp **** Switch ReverseGateR;
 12338              		.loc 20 175 8 view .LVU3492
 12339 01e8 554F     		ldr	r7, .L631+224
 171:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 12340              		.loc 20 171 18 view .LVU3493
 12341 01ea 2246     		mov	r2, r4
 12342 01ec 2946     		mov	r1, r5
 12343 01ee 5548     		ldr	r0, .L631+228
 12344 01f0 FFF7FEFF 		bl	__aeabi_atexit
 12345              	.LVL797:
 12346              	.LBB2290:
 12347              	.LBI2290:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12348              		.loc 10 36 5 is_stmt 1 view .LVU3494
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12349              		.loc 10 36 5 is_stmt 0 view .LVU3495
 12350              	.LBE2290:
 172:Veno-Echo.cpp **** 
 12351              		.loc 20 172 18 view .LVU3496
 12352 01f4 2246     		mov	r2, r4
 12353 01f6 2946     		mov	r1, r5
 12354 01f8 5348     		ldr	r0, .L631+232
 12355 01fa FFF7FEFF 		bl	__aeabi_atexit
 12356              	.LVL798:
 12357              	.LBB2291:
 12358              	.LBI2291:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12359              		.loc 1 40 5 is_stmt 1 view .LVU3497
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12360              		.loc 1 40 5 is_stmt 0 view .LVU3498
 12361              	.LBE2291:
 175:Veno-Echo.cpp **** Switch ReverseGateR;
 12362              		.loc 20 175 8 view .LVU3499
 12363 01fe 2246     		mov	r2, r4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 372


 12364 0200 3946     		mov	r1, r7
 12365 0202 5248     		ldr	r0, .L631+236
 12366 0204 FFF7FEFF 		bl	__aeabi_atexit
 12367              	.LVL799:
 12368              	.LBB2292:
 12369              	.LBI2292:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12370              		.loc 1 40 5 is_stmt 1 view .LVU3500
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12371              		.loc 1 40 5 is_stmt 0 view .LVU3501
 12372              	.LBE2292:
 176:Veno-Echo.cpp **** 
 12373              		.loc 20 176 8 view .LVU3502
 12374 0208 2246     		mov	r2, r4
 12375 020a 3946     		mov	r1, r7
 12376 020c 5048     		ldr	r0, .L631+240
 12377 020e FFF7FEFF 		bl	__aeabi_atexit
 12378              	.LVL800:
 12379              	.LBB2293:
 12380              	.LBI2293:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12381              		.loc 1 40 5 is_stmt 1 view .LVU3503
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12382              		.loc 1 40 5 is_stmt 0 view .LVU3504
 12383              	.LBE2293:
 179:Veno-Echo.cpp **** Switch ClockIn;
 12384              		.loc 20 179 8 view .LVU3505
 12385 0212 2246     		mov	r2, r4
 12386 0214 3946     		mov	r1, r7
 12387 0216 4F48     		ldr	r0, .L631+244
 12388 0218 FFF7FEFF 		bl	__aeabi_atexit
 12389              	.LVL801:
 12390              	.LBB2294:
 12391              	.LBI2294:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12392              		.loc 1 40 5 is_stmt 1 view .LVU3506
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12393              		.loc 1 40 5 is_stmt 0 view .LVU3507
 12394              	.LBE2294:
 180:Veno-Echo.cpp **** 
 12395              		.loc 20 180 8 view .LVU3508
 12396 021c 2246     		mov	r2, r4
 12397 021e 3946     		mov	r1, r7
 12398 0220 4D48     		ldr	r0, .L631+248
 12399 0222 FFF7FEFF 		bl	__aeabi_atexit
 12400              	.LVL802:
 12401              	.LBB2295:
 12402              	.LBI2295:
  42:taptempo.h    ****     {
 12403              		.loc 13 42 5 is_stmt 1 view .LVU3509
 12404              	.LBB2296:
 12405              	.LBB2297:
  44:taptempo.h    ****         tap_tolerance_ = 1.25f;
 12406              		.loc 13 44 9 view .LVU3510
  52:taptempo.h    ****         clockLength_ = 0;
 12407              		.loc 13 52 19 is_stmt 0 view .LVU3511
 12408 0226 4FF07E55 		mov	r5, #1065353216
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 373


  44:taptempo.h    ****         tap_tolerance_ = 1.25f;
 12409              		.loc 13 44 18 view .LVU3512
 12410 022a 4C48     		ldr	r0, .L631+252
  46:taptempo.h    ****         mintap_ = 80;
 12411              		.loc 13 46 17 view .LVU3513
 12412 022c 4FF4FA6E 		mov	lr, #2000
  45:taptempo.h    ****         maxtap_ = 2000;
 12413              		.loc 13 45 24 view .LVU3514
 12414 0230 4B49     		ldr	r1, .L631+256
  47:taptempo.h    ****         lastTapLength_ = 0;
 12415              		.loc 13 47 17 view .LVU3515
 12416 0232 4FF0500C 		mov	ip, #80
  49:taptempo.h    ****         lastTime_ = 0;
 12417              		.loc 13 49 16 view .LVU3516
 12418 0236 4B4F     		ldr	r7, .L631+260
  55:taptempo.h    ****     }
 12419              		.loc 13 55 22 view .LVU3517
 12420 0238 0A23     		movs	r3, #10
 12421              	.LBE2297:
 12422              	.LBE2296:
 12423              	.LBE2295:
 183:Veno-Echo.cpp **** 
 12424              		.loc 20 183 10 view .LVU3518
 12425 023a 2246     		mov	r2, r4
 12426              	.LBB2302:
 12427              	.LBB2300:
 12428              	.LBB2298:
  44:taptempo.h    ****         tap_tolerance_ = 1.25f;
 12429              		.loc 13 44 18 view .LVU3519
 12430 023c 80F82460 		strb	r6, [r0, #36]
  45:taptempo.h    ****         maxtap_ = 2000;
 12431              		.loc 13 45 9 is_stmt 1 view .LVU3520
  51:taptempo.h    ****         tapRatio_ = 1.0f;
 12432              		.loc 13 51 22 is_stmt 0 view .LVU3521
 12433 0240 8660     		str	r6, [r0, #8]
  45:taptempo.h    ****         maxtap_ = 2000;
 12434              		.loc 13 45 24 view .LVU3522
 12435 0242 8162     		str	r1, [r0, #40]	@ float
  46:taptempo.h    ****         mintap_ = 80;
 12436              		.loc 13 46 9 is_stmt 1 view .LVU3523
  49:taptempo.h    ****         lastTime_ = 0;
 12437              		.loc 13 49 16 is_stmt 0 view .LVU3524
 12438 0244 C762     		str	r7, [r0, #44]	@ float
  52:taptempo.h    ****         clockLength_ = 0;
 12439              		.loc 13 52 19 view .LVU3525
 12440 0246 0563     		str	r5, [r0, #48]	@ float
 12441              	.LBE2298:
 12442              	.LBE2300:
 12443              	.LBE2302:
 183:Veno-Echo.cpp **** 
 12444              		.loc 20 183 10 view .LVU3526
 12445 0248 4749     		ldr	r1, .L631+264
 12446              	.LBB2303:
 12447              	.LBB2301:
 12448              	.LBB2299:
  55:taptempo.h    ****     }
 12449              		.loc 13 55 22 view .LVU3527
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 374


 12450 024a 0362     		str	r3, [r0, #32]
  50:taptempo.h    ****         currentTime_ = 0;
 12451              		.loc 13 50 19 view .LVU3528
 12452 024c C0E90366 		strd	r6, r6, [r0, #12]
  54:taptempo.h    ****         clockThresh_ = 10; //ms change
 12453              		.loc 13 54 26 view .LVU3529
 12454 0250 C0E90666 		strd	r6, r6, [r0, #24]
  47:taptempo.h    ****         lastTapLength_ = 0;
 12455              		.loc 13 47 17 view .LVU3530
 12456 0254 C0E900CE 		strd	ip, lr, [r0]
  48:taptempo.h    ****         tempo_ = 500.0f;
 12457              		.loc 13 48 9 is_stmt 1 view .LVU3531
  49:taptempo.h    ****         lastTime_ = 0;
 12458              		.loc 13 49 9 view .LVU3532
  50:taptempo.h    ****         currentTime_ = 0;
 12459              		.loc 13 50 9 view .LVU3533
  51:taptempo.h    ****         tapRatio_ = 1.0f;
 12460              		.loc 13 51 9 view .LVU3534
  52:taptempo.h    ****         clockLength_ = 0;
 12461              		.loc 13 52 9 view .LVU3535
  53:taptempo.h    ****         lastClockLength_ = 0;
 12462              		.loc 13 53 9 view .LVU3536
  54:taptempo.h    ****         clockThresh_ = 10; //ms change
 12463              		.loc 13 54 9 view .LVU3537
  55:taptempo.h    ****     }
 12464              		.loc 13 55 9 view .LVU3538
 12465              	.LVL803:
  55:taptempo.h    ****     }
 12466              		.loc 13 55 9 is_stmt 0 view .LVU3539
 12467              	.LBE2299:
 12468              	.LBE2301:
 12469              	.LBE2303:
 12470              	.LBE2306:
 12471              	.LBE2310:
 12472              		.loc 20 1989 1 view .LVU3540
 12473 0258 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 12474              		.cfi_restore 14
 12475              		.cfi_restore 8
 12476              		.cfi_restore 7
 12477              		.cfi_restore 6
 12478              		.cfi_restore 5
 12479              		.cfi_restore 4
 12480              		.cfi_def_cfa_offset 0
 12481              	.LBB2311:
 12482              	.LBB2307:
 183:Veno-Echo.cpp **** 
 12483              		.loc 20 183 10 view .LVU3541
 12484 025c FFF7FEBF 		b	__aeabi_atexit
 12485              	.LVL804:
 12486              	.L632:
 12487              		.align	2
 12488              	.L631:
 12489 0260 00000000 		.word	.LANCHOR4
 12490 0264 00000000 		.word	__dso_handle
 12491 0268 00000000 		.word	_ZN7daisysp3SvfD1Ev
 12492 026c 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 12493 0270 00000000 		.word	.LANCHOR46
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 375


 12494 0274 00000000 		.word	.LANCHOR47
 12495 0278 00000000 		.word	.LANCHOR34
 12496 027c 00000000 		.word	.LANCHOR35
 12497 0280 00000000 		.word	.LANCHOR48
 12498 0284 00000000 		.word	.LANCHOR49
 12499 0288 00000000 		.word	.LANCHOR36
 12500 028c 00000000 		.word	.LANCHOR37
 12501 0290 00000000 		.word	_ZN7daisysp10OscillatorD1Ev
 12502 0294 00000000 		.word	.LANCHOR75
 12503 0298 17B7D138 		.word	953267991
 12504 029c 00000000 		.word	.LANCHOR127
 12505 02a0 00000000 		.word	_ZN7daisysp9EnvFollowD1Ev
 12506 02a4 00000000 		.word	.LANCHOR128
 12507 02a8 00000000 		.word	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 12508 02ac 00000000 		.word	.LANCHOR104
 12509 02b0 00000000 		.word	.LANCHOR105
 12510 02b4 00000000 		.word	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 12511 02b8 00000000 		.word	delMemsL
 12512 02bc 00000000 		.word	delMemsR
 12513 02c0 00000000 		.word	_ZN10DelayMultiD1Ev
 12514 02c4 00000000 		.word	delMemsL_REV
 12515 02c8 00000000 		.word	delMemsR_REV
 12516 02cc 00000000 		.word	_ZN9ButtonLEDD1Ev
 12517 02d0 00000000 		.word	.LANCHOR0
 12518 02d4 00000000 		.word	.LANCHOR1
 12519 02d8 00000000 		.word	.LANCHOR90
 12520 02dc 00000000 		.word	.LANCHOR91
 12521 02e0 00000000 		.word	.LANCHOR92
 12522 02e4 00000000 		.word	.LANCHOR93
 12523 02e8 00000000 		.word	_ZN7daisysp4AdsrD1Ev
 12524 02ec 00000000 		.word	.LANCHOR94
 12525 02f0 00000000 		.word	_ZN8TempoLEDD1Ev
 12526 02f4 00000000 		.word	.LANCHOR88
 12527 02f8 00000000 		.word	.LANCHOR98
 12528 02fc 00000000 		.word	.LANCHOR99
 12529 0300 00000000 		.word	_ZN7daisysp9CrossFadeD1Ev
 12530 0304 00000000 		.word	.LANCHOR100
 12531 0308 00000000 		.word	.LANCHOR101
 12532 030c 00000000 		.word	.LANCHOR102
 12533 0310 00000000 		.word	.LANCHOR103
 12534 0314 00000000 		.word	.LANCHOR64
 12535 0318 00000000 		.word	.LANCHOR115
 12536 031c 00000000 		.word	.LANCHOR116
 12537 0320 00000000 		.word	.LANCHOR113
 12538 0324 00000000 		.word	.LANCHOR114
 12539 0328 00000000 		.word	.LANCHOR119
 12540 032c 00000000 		.word	.LANCHOR120
 12541 0330 00000000 		.word	.LANCHOR117
 12542 0334 00000000 		.word	.LANCHOR118
 12543 0338 00000000 		.word	.LANCHOR121
 12544 033c 00000000 		.word	.LANCHOR122
 12545 0340 00000000 		.word	_ZN5daisy6SwitchD1Ev
 12546 0344 00000000 		.word	.LANCHOR123
 12547 0348 00000000 		.word	.LANCHOR124
 12548 034c 00000000 		.word	.LANCHOR95
 12549 0350 00000000 		.word	.LANCHOR96
 12550 0354 00000000 		.word	.LANCHOR97
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 376


 12551 0358 00000000 		.word	.LANCHOR87
 12552 035c 00000000 		.word	.LANCHOR12
 12553 0360 0000A03F 		.word	1067450368
 12554 0364 0000FA43 		.word	1140457472
 12555 0368 00000000 		.word	_ZN8TaptempoD1Ev
 12556 036c 00000000 		.word	_ZN7daisysp7DcBlockD1Ev
 12557              	.LBE2307:
 12558              	.LBE2311:
 12559              		.cfi_endproc
 12560              	.LFE4917:
 12562              		.section	.init_array,"aw",%init_array
 12563              		.align	2
 12564 0000 00000000 		.word	_GLOBAL__sub_I_delMemsL(target1)
 12565              		.global	AltControls
 12566              		.global	BaseTempo
 12567              		.global	ClockIn
 12568              		.global	Sync
 12569              		.global	ReverseGateR
 12570              		.global	ReverseGateL
 12571              		.global	save_flag
 12572              		.global	PostFilters
 12573              		.global	ClockInFlag
 12574              		.global	mute
 12575              		.global	shift
 12576              		.global	syncMode
 12577              		.global	modulation_CV_Raw
 12578              		.global	ModDepth
 12579              		.global	div_R
 12580              		.global	div_L
 12581              		.global	filterXfade
 12582              		.global	width_CV
 12583              		.global	width
 12584              		.global	drywet_CV
 12585              		.global	drywet
 12586              		.global	crossfeedback_CV
 12587              		.global	crossfeedback
 12588              		.global	feedbackR_CV
 12589              		.global	feedbackR
 12590              		.global	feedbackL_CV
 12591              		.global	feedbackL
 12592              		.global	delayTimeR_CV
 12593              		.global	delayTimeL_CV
 12594              		.global	tempoLED_BASE
 12595              		.global	Tap_Button
 12596              		.global	Rev_R_sw
 12597              		.global	Rev_L_sw
 12598              		.global	HPF_sw
 12599              		.global	LPF_sw
 12600              		.global	delaysR_REV
 12601              		.global	delaysL_REV
 12602              		.global	delayR
 12603              		.global	delayL
 12604              		.global	delMemsR_REV
 12605              		.global	delMemsL_REV
 12606              		.global	delMemsR
 12607              		.global	delMemsL
 12608              		.section	.bss.AltControls,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 377


 12609              		.align	2
 12610              		.set	.LANCHOR16,. + 0
 12613              	AltControls:
 12614 0000 00000000 		.space	32
 12614      00000000 
 12614      00000000 
 12614      00000000 
 12614      00000000 
 12615              		.section	.bss.BaseTempo,"aw",%nobits
 12616              		.align	2
 12617              		.set	.LANCHOR12,. + 0
 12620              	BaseTempo:
 12621 0000 00000000 		.space	52
 12621      00000000 
 12621      00000000 
 12621      00000000 
 12621      00000000 
 12622              		.section	.bss.ClockIn,"aw",%nobits
 12623              		.align	2
 12624              		.set	.LANCHOR87,. + 0
 12627              	ClockIn:
 12628 0000 00000000 		.space	16
 12628      00000000 
 12628      00000000 
 12628      00000000 
 12629              		.section	.bss.ClockInFlag,"aw",%nobits
 12632              	ClockInFlag:
 12633 0000 00       		.space	1
 12634              		.section	.bss.HPF_sw,"aw",%nobits
 12635              		.align	2
 12636              		.set	.LANCHOR91,. + 0
 12639              	HPF_sw:
 12640 0000 00000000 		.space	52
 12640      00000000 
 12640      00000000 
 12640      00000000 
 12640      00000000 
 12641              		.section	.bss.LPF_sw,"aw",%nobits
 12642              		.align	2
 12643              		.set	.LANCHOR90,. + 0
 12646              	LPF_sw:
 12647 0000 00000000 		.space	52
 12647      00000000 
 12647      00000000 
 12647      00000000 
 12647      00000000 
 12648              		.section	.bss.ModDepth,"aw",%nobits
 12649              		.align	2
 12650              		.set	.LANCHOR67,. + 0
 12653              	ModDepth:
 12654 0000 00000000 		.space	4
 12655              		.section	.bss.PostFilters,"aw",%nobits
 12656              		.set	.LANCHOR82,. + 0
 12659              	PostFilters:
 12660 0000 00       		.space	1
 12661              		.section	.bss.Rev_L_sw,"aw",%nobits
 12662              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 378


 12663              		.set	.LANCHOR92,. + 0
 12666              	Rev_L_sw:
 12667 0000 00000000 		.space	52
 12667      00000000 
 12667      00000000 
 12667      00000000 
 12667      00000000 
 12668              		.section	.bss.Rev_R_sw,"aw",%nobits
 12669              		.align	2
 12670              		.set	.LANCHOR93,. + 0
 12673              	Rev_R_sw:
 12674 0000 00000000 		.space	52
 12674      00000000 
 12674      00000000 
 12674      00000000 
 12674      00000000 
 12675              		.section	.bss.ReverseGateL,"aw",%nobits
 12676              		.align	2
 12677              		.set	.LANCHOR95,. + 0
 12680              	ReverseGateL:
 12681 0000 00000000 		.space	16
 12681      00000000 
 12681      00000000 
 12681      00000000 
 12682              		.section	.bss.ReverseGateR,"aw",%nobits
 12683              		.align	2
 12684              		.set	.LANCHOR96,. + 0
 12687              	ReverseGateR:
 12688 0000 00000000 		.space	16
 12688      00000000 
 12688      00000000 
 12688      00000000 
 12689              		.section	.bss.Sync,"aw",%nobits
 12690              		.align	2
 12691              		.set	.LANCHOR97,. + 0
 12694              	Sync:
 12695 0000 00000000 		.space	16
 12695      00000000 
 12695      00000000 
 12695      00000000 
 12696              		.section	.bss.Tap_Button,"aw",%nobits
 12697              		.align	2
 12698              		.set	.LANCHOR94,. + 0
 12701              	Tap_Button:
 12702 0000 00000000 		.space	52
 12702      00000000 
 12702      00000000 
 12702      00000000 
 12702      00000000 
 12703              		.section	.bss._ZL10FwdRevLEnv,"aw",%nobits
 12704              		.align	2
 12705              		.set	.LANCHOR98,. + 0
 12708              	_ZL10FwdRevLEnv:
 12709 0000 00000000 		.space	56
 12709      00000000 
 12709      00000000 
 12709      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 379


 12709      00000000 
 12710              		.section	.bss._ZL10FwdRevREnv,"aw",%nobits
 12711              		.align	2
 12712              		.set	.LANCHOR99,. + 0
 12715              	_ZL10FwdRevREnv:
 12716 0000 00000000 		.space	56
 12716      00000000 
 12716      00000000 
 12716      00000000 
 12716      00000000 
 12717              		.section	.bss._ZL10HPF_LXfade,"aw",%nobits
 12718              		.align	2
 12719              		.set	.LANCHOR113,. + 0
 12722              	_ZL10HPF_LXfade:
 12723 0000 00000000 		.space	8
 12723      00000000 
 12724              		.section	.bss._ZL10HPF_L_post,"aw",%nobits
 12725              		.align	2
 12726              		.set	.LANCHOR36,. + 0
 12729              	_ZL10HPF_L_post:
 12730 0000 00000000 		.space	76
 12730      00000000 
 12730      00000000 
 12730      00000000 
 12730      00000000 
 12731              		.section	.bss._ZL10HPF_RXfade,"aw",%nobits
 12732              		.align	2
 12733              		.set	.LANCHOR114,. + 0
 12736              	_ZL10HPF_RXfade:
 12737 0000 00000000 		.space	8
 12737      00000000 
 12738              		.section	.bss._ZL10HPF_R_post,"aw",%nobits
 12739              		.align	2
 12740              		.set	.LANCHOR37,. + 0
 12743              	_ZL10HPF_R_post:
 12744 0000 00000000 		.space	76
 12744      00000000 
 12744      00000000 
 12744      00000000 
 12744      00000000 
 12745              		.section	.bss._ZL10LPF_LXfade,"aw",%nobits
 12746              		.align	2
 12747              		.set	.LANCHOR115,. + 0
 12750              	_ZL10LPF_LXfade:
 12751 0000 00000000 		.space	8
 12751      00000000 
 12752              		.section	.bss._ZL10LPF_L_post,"aw",%nobits
 12753              		.align	2
 12754              		.set	.LANCHOR48,. + 0
 12757              	_ZL10LPF_L_post:
 12758 0000 00000000 		.space	76
 12758      00000000 
 12758      00000000 
 12758      00000000 
 12758      00000000 
 12759              		.section	.bss._ZL10LPF_RXfade,"aw",%nobits
 12760              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 380


 12761              		.set	.LANCHOR116,. + 0
 12764              	_ZL10LPF_RXfade:
 12765 0000 00000000 		.space	8
 12765      00000000 
 12766              		.section	.bss._ZL10LPF_R_post,"aw",%nobits
 12767              		.align	2
 12768              		.set	.LANCHOR49,. + 0
 12771              	_ZL10LPF_R_post:
 12772 0000 00000000 		.space	76
 12772      00000000 
 12772      00000000 
 12772      00000000 
 12772      00000000 
 12773              		.section	.bss._ZL10WidthXfade,"aw",%nobits
 12774              		.align	2
 12775              		.set	.LANCHOR64,. + 0
 12778              	_ZL10WidthXfade:
 12779 0000 00000000 		.space	8
 12779      00000000 
 12780              		.section	.bss._ZL11DcBlock_LFB,"aw",%nobits
 12781              		.align	2
 12782              		.set	.LANCHOR104,. + 0
 12785              	_ZL11DcBlock_LFB:
 12786 0000 00000000 		.space	12
 12786      00000000 
 12786      00000000 
 12787              		.section	.bss._ZL11DcBlock_RFB,"aw",%nobits
 12788              		.align	2
 12789              		.set	.LANCHOR105,. + 0
 12792              	_ZL11DcBlock_RFB:
 12793 0000 00000000 		.space	12
 12793      00000000 
 12793      00000000 
 12794              		.section	.bss._ZL11FilterMix_L,"aw",%nobits
 12795              		.align	2
 12796              		.set	.LANCHOR121,. + 0
 12799              	_ZL11FilterMix_L:
 12800 0000 00000000 		.space	8
 12800      00000000 
 12801              		.section	.bss._ZL11FilterMix_R,"aw",%nobits
 12802              		.align	2
 12803              		.set	.LANCHOR122,. + 0
 12806              	_ZL11FilterMix_R:
 12807 0000 00000000 		.space	8
 12807      00000000 
 12808              		.section	.bss._ZL12FwdRevLXfade,"aw",%nobits
 12809              		.align	2
 12810              		.set	.LANCHOR102,. + 0
 12813              	_ZL12FwdRevLXfade:
 12814 0000 00000000 		.space	8
 12814      00000000 
 12815              		.section	.bss._ZL12FwdRevRXfade,"aw",%nobits
 12816              		.align	2
 12817              		.set	.LANCHOR103,. + 0
 12820              	_ZL12FwdRevRXfade:
 12821 0000 00000000 		.space	8
 12821      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 381


 12822              		.section	.bss._ZL15HPF_LXfade_post,"aw",%nobits
 12823              		.align	2
 12824              		.set	.LANCHOR117,. + 0
 12827              	_ZL15HPF_LXfade_post:
 12828 0000 00000000 		.space	8
 12828      00000000 
 12829              		.section	.bss._ZL15HPF_RXfade_post,"aw",%nobits
 12830              		.align	2
 12831              		.set	.LANCHOR118,. + 0
 12834              	_ZL15HPF_RXfade_post:
 12835 0000 00000000 		.space	8
 12835      00000000 
 12836              		.section	.bss._ZL15LPF_LXfade_post,"aw",%nobits
 12837              		.align	2
 12838              		.set	.LANCHOR119,. + 0
 12841              	_ZL15LPF_LXfade_post:
 12842 0000 00000000 		.space	8
 12842      00000000 
 12843              		.section	.bss._ZL15LPF_RXfade_post,"aw",%nobits
 12844              		.align	2
 12845              		.set	.LANCHOR120,. + 0
 12848              	_ZL15LPF_RXfade_post:
 12849 0000 00000000 		.space	8
 12849      00000000 
 12850              		.section	.bss._ZL16FilterMix_L_post,"aw",%nobits
 12851              		.align	2
 12852              		.set	.LANCHOR123,. + 0
 12855              	_ZL16FilterMix_L_post:
 12856 0000 00000000 		.space	8
 12856      00000000 
 12857              		.section	.bss._ZL16FilterMix_R_post,"aw",%nobits
 12858              		.align	2
 12859              		.set	.LANCHOR124,. + 0
 12862              	_ZL16FilterMix_R_post:
 12863 0000 00000000 		.space	8
 12863      00000000 
 12864              		.section	.bss._ZL2hw,"aw",%nobits
 12865              		.align	2
 12866              		.set	.LANCHOR4,. + 0
 12869              	_ZL2hw:
 12870 0000 00000000 		.space	60
 12870      00000000 
 12870      00000000 
 12870      00000000 
 12870      00000000 
 12871              		.section	.bss._ZL3lfo,"aw",%nobits
 12872              		.align	2
 12873              		.set	.LANCHOR75,. + 0
 12876              	_ZL3lfo:
 12877 0000 00000000 		.space	40
 12877      00000000 
 12877      00000000 
 12877      00000000 
 12877      00000000 
 12878              		.section	.bss._ZL5HPF_L,"aw",%nobits
 12879              		.align	2
 12880              		.set	.LANCHOR34,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 382


 12883              	_ZL5HPF_L:
 12884 0000 00000000 		.space	76
 12884      00000000 
 12884      00000000 
 12884      00000000 
 12884      00000000 
 12885              		.section	.bss._ZL5HPF_R,"aw",%nobits
 12886              		.align	2
 12887              		.set	.LANCHOR35,. + 0
 12890              	_ZL5HPF_R:
 12891 0000 00000000 		.space	76
 12891      00000000 
 12891      00000000 
 12891      00000000 
 12891      00000000 
 12892              		.section	.bss._ZL5LPF_L,"aw",%nobits
 12893              		.align	2
 12894              		.set	.LANCHOR46,. + 0
 12897              	_ZL5LPF_L:
 12898 0000 00000000 		.space	76
 12898      00000000 
 12898      00000000 
 12898      00000000 
 12898      00000000 
 12899              		.section	.bss._ZL5LPF_R,"aw",%nobits
 12900              		.align	2
 12901              		.set	.LANCHOR47,. + 0
 12904              	_ZL5LPF_R:
 12905 0000 00000000 		.space	76
 12905      00000000 
 12905      00000000 
 12905      00000000 
 12905      00000000 
 12906              		.section	.bss._ZL7HPF_Env,"aw",%nobits
 12907              		.align	2
 12908              		.set	.LANCHOR101,. + 0
 12911              	_ZL7HPF_Env:
 12912 0000 00000000 		.space	56
 12912      00000000 
 12912      00000000 
 12912      00000000 
 12912      00000000 
 12913              		.section	.bss._ZL7LPF_Env,"aw",%nobits
 12914              		.align	2
 12915              		.set	.LANCHOR100,. + 0
 12918              	_ZL7LPF_Env:
 12919 0000 00000000 		.space	56
 12919      00000000 
 12919      00000000 
 12919      00000000 
 12919      00000000 
 12920              		.section	.bss._ZL7LeftEnv,"aw",%nobits
 12921              		.align	2
 12922              		.set	.LANCHOR127,. + 0
 12925              	_ZL7LeftEnv:
 12926 0000 00000000 		.space	24
 12926      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 383


 12926      00000000 
 12926      00000000 
 12926      00000000 
 12927              		.section	.bss._ZL8RightEnv,"aw",%nobits
 12928              		.align	2
 12929              		.set	.LANCHOR128,. + 0
 12932              	_ZL8RightEnv:
 12933 0000 00000000 		.space	24
 12933      00000000 
 12933      00000000 
 12933      00000000 
 12933      00000000 
 12934              		.section	.bss._ZZ10Update_ModvE13modulation_CV,"aw",%nobits
 12935              		.align	2
 12936              		.set	.LANCHOR85,. + 0
 12939              	_ZZ10Update_ModvE13modulation_CV:
 12940 0000 00000000 		.space	4
 12941              		.section	.bss._ZZ10Update_ModvE17ModDepth_Filtered,"aw",%nobits
 12942              		.align	2
 12943              		.set	.LANCHOR86,. + 0
 12946              	_ZZ10Update_ModvE17ModDepth_Filtered:
 12947 0000 00000000 		.space	4
 12948              		.section	.bss._ZZ12Update_widthvE10width_Last,"aw",%nobits
 12949              		.align	2
 12950              		.set	.LANCHOR62,. + 0
 12953              	_ZZ12Update_widthvE10width_Last:
 12954 0000 00000000 		.space	4
 12955              		.section	.bss._ZZ12Update_widthvE12ModDepth_new,"aw",%nobits
 12956              		.align	2
 12957              		.set	.LANCHOR66,. + 0
 12960              	_ZZ12Update_widthvE12ModDepth_new:
 12961 0000 00000000 		.space	4
 12962              		.section	.bss._ZZ12Update_widthvE12width_pickup,"aw",%nobits
 12963              		.set	.LANCHOR60,. + 0
 12966              	_ZZ12Update_widthvE12width_pickup:
 12967 0000 00       		.space	1
 12968              		.section	.bss._ZZ12Update_widthvE15ModDepth_pickup,"aw",%nobits
 12969              		.set	.LANCHOR65,. + 0
 12972              	_ZZ12Update_widthvE15ModDepth_pickup:
 12973 0000 00       		.space	1
 12974              		.section	.bss._ZZ12Update_widthvE9lastShift,"aw",%nobits
 12975              		.set	.LANCHOR59,. + 0
 12978              	_ZZ12Update_widthvE9lastShift:
 12979 0000 00       		.space	1
 12980              		.section	.bss._ZZ12Update_widthvE9width_new,"aw",%nobits
 12981              		.align	2
 12982              		.set	.LANCHOR61,. + 0
 12985              	_ZZ12Update_widthvE9width_new:
 12986 0000 00000000 		.space	4
 12987              		.section	.bss._ZZ13Update_drywetvE10Res_pickup,"aw",%nobits
 12988              		.set	.LANCHOR56,. + 0
 12991              	_ZZ13Update_drywetvE10Res_pickup:
 12992 0000 00       		.space	1
 12993              		.section	.bss._ZZ13Update_drywetvE10drywet_new,"aw",%nobits
 12994              		.align	2
 12995              		.set	.LANCHOR53,. + 0
 12998              	_ZZ13Update_drywetvE10drywet_new:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 384


 12999 0000 00000000 		.space	4
 13000              		.section	.bss._ZZ13Update_drywetvE11drywet_Last,"aw",%nobits
 13001              		.align	2
 13002              		.set	.LANCHOR54,. + 0
 13005              	_ZZ13Update_drywetvE11drywet_Last:
 13006 0000 00000000 		.space	4
 13007              		.section	.bss._ZZ13Update_drywetvE13drywet_pickup,"aw",%nobits
 13008              		.set	.LANCHOR52,. + 0
 13011              	_ZZ13Update_drywetvE13drywet_pickup:
 13012 0000 00       		.space	1
 13013              		.section	.bss._ZZ13Update_drywetvE7Res_new,"aw",%nobits
 13014              		.align	2
 13015              		.set	.LANCHOR57,. + 0
 13018              	_ZZ13Update_drywetvE7Res_new:
 13019 0000 00000000 		.space	4
 13020              		.section	.bss._ZZ13Update_drywetvE9lastShift,"aw",%nobits
 13021              		.set	.LANCHOR51,. + 0
 13024              	_ZZ13Update_drywetvE9lastShift:
 13025 0000 00       		.space	1
 13026              		.section	.bss._ZZ14Update_ButtonsvE11buttonstate,"aw",%nobits
 13027              		.align	2
 13028              		.set	.LANCHOR107,. + 0
 13031              	_ZZ14Update_ButtonsvE11buttonstate:
 13032 0000 00000000 		.space	4
 13033              		.section	.bss._ZZ14Update_ButtonsvE9resetTime,"aw",%nobits
 13034              		.align	2
 13035              		.set	.LANCHOR108,. + 0
 13038              	_ZZ14Update_ButtonsvE9resetTime:
 13039 0000 00000000 		.space	4
 13040              		.section	.bss._ZZ14Update_ButtonsvE9shiftTime,"aw",%nobits
 13041              		.align	2
 13042              		.set	.LANCHOR109,. + 0
 13045              	_ZZ14Update_ButtonsvE9shiftTime:
 13046 0000 00000000 		.space	4
 13047              		.section	.bss._ZZ16Update_feedbackLvE12HPCutoff_new,"aw",%nobits
 13048              		.align	2
 13049              		.set	.LANCHOR33,. + 0
 13052              	_ZZ16Update_feedbackLvE12HPCutoff_new:
 13053 0000 00000000 		.space	4
 13054              		.section	.bss._ZZ16Update_feedbackLvE13feedbackL_new,"aw",%nobits
 13055              		.align	2
 13056              		.set	.LANCHOR29,. + 0
 13059              	_ZZ16Update_feedbackLvE13feedbackL_new:
 13060 0000 00000000 		.space	4
 13061              		.section	.bss._ZZ16Update_feedbackLvE14feedbackL_Last,"aw",%nobits
 13062              		.align	2
 13063              		.set	.LANCHOR30,. + 0
 13066              	_ZZ16Update_feedbackLvE14feedbackL_Last:
 13067 0000 00000000 		.space	4
 13068              		.section	.bss._ZZ16Update_feedbackLvE15HPCutoff_pickup,"aw",%nobits
 13069              		.set	.LANCHOR32,. + 0
 13072              	_ZZ16Update_feedbackLvE15HPCutoff_pickup:
 13073 0000 00       		.space	1
 13074              		.section	.bss._ZZ16Update_feedbackLvE16feedbackL_pickup,"aw",%nobits
 13075              		.set	.LANCHOR28,. + 0
 13078              	_ZZ16Update_feedbackLvE16feedbackL_pickup:
 13079 0000 00       		.space	1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 385


 13080              		.section	.bss._ZZ16Update_feedbackLvE9lastShift,"aw",%nobits
 13081              		.set	.LANCHOR27,. + 0
 13084              	_ZZ16Update_feedbackLvE9lastShift:
 13085 0000 00       		.space	1
 13086              		.section	.bss._ZZ16Update_feedbackRvE12LPCutoff_new,"aw",%nobits
 13087              		.align	2
 13088              		.set	.LANCHOR45,. + 0
 13091              	_ZZ16Update_feedbackRvE12LPCutoff_new:
 13092 0000 00000000 		.space	4
 13093              		.section	.bss._ZZ16Update_feedbackRvE13feedbackR_new,"aw",%nobits
 13094              		.align	2
 13095              		.set	.LANCHOR42,. + 0
 13098              	_ZZ16Update_feedbackRvE13feedbackR_new:
 13099 0000 00000000 		.space	4
 13100              		.section	.bss._ZZ16Update_feedbackRvE14feedbackR_Last,"aw",%nobits
 13101              		.align	2
 13102              		.set	.LANCHOR41,. + 0
 13105              	_ZZ16Update_feedbackRvE14feedbackR_Last:
 13106 0000 00000000 		.space	4
 13107              		.section	.bss._ZZ16Update_feedbackRvE15LPCutoff_pickup,"aw",%nobits
 13108              		.set	.LANCHOR44,. + 0
 13111              	_ZZ16Update_feedbackRvE15LPCutoff_pickup:
 13112 0000 00       		.space	1
 13113              		.section	.bss._ZZ16Update_feedbackRvE16feedbackR_pickup,"aw",%nobits
 13114              		.set	.LANCHOR40,. + 0
 13117              	_ZZ16Update_feedbackRvE16feedbackR_pickup:
 13118 0000 00       		.space	1
 13119              		.section	.bss._ZZ16Update_feedbackRvE9lastShift,"aw",%nobits
 13120              		.set	.LANCHOR39,. + 0
 13123              	_ZZ16Update_feedbackRvE9lastShift:
 13124 0000 00       		.space	1
 13125              		.section	.bss._ZZ17Update_DelayTimeLvE14delayTimeL_new,"aw",%nobits
 13126              		.align	2
 13127              		.set	.LANCHOR10,. + 0
 13130              	_ZZ17Update_DelayTimeLvE14delayTimeL_new:
 13131 0000 00000000 		.space	4
 13132              		.section	.bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last,"aw",%nobits
 13133              		.align	2
 13134              		.set	.LANCHOR11,. + 0
 13137              	_ZZ17Update_DelayTimeLvE15delayTimeL_Last:
 13138 0000 00000000 		.space	4
 13139              		.section	.bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new,"aw",%nobits
 13140              		.align	2
 13141              		.set	.LANCHOR15,. + 0
 13144              	_ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:
 13145 0000 00000000 		.space	4
 13146              		.section	.bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup,"aw",%nobits
 13147              		.set	.LANCHOR9,. + 0
 13150              	_ZZ17Update_DelayTimeLvE17delayTimeL_pickup:
 13151 0000 00       		.space	1
 13152              		.section	.bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup,"aw",%nobits
 13153              		.set	.LANCHOR14,. + 0
 13156              	_ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:
 13157 0000 00       		.space	1
 13158              		.section	.bss._ZZ17Update_DelayTimeLvE8counterL,"aw",%nobits
 13159              		.align	2
 13160              		.set	.LANCHOR6,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 386


 13163              	_ZZ17Update_DelayTimeLvE8counterL:
 13164 0000 00000000 		.space	4
 13165              		.section	.bss._ZZ17Update_DelayTimeLvE9lastShift,"aw",%nobits
 13166              		.set	.LANCHOR8,. + 0
 13169              	_ZZ17Update_DelayTimeLvE9lastShift:
 13170 0000 00       		.space	1
 13171              		.section	.bss._ZZ17Update_DelayTimeRvE12tapRatio_new,"aw",%nobits
 13172              		.align	2
 13173              		.set	.LANCHOR24,. + 0
 13176              	_ZZ17Update_DelayTimeRvE12tapRatio_new:
 13177 0000 00000000 		.space	4
 13178              		.section	.bss._ZZ17Update_DelayTimeRvE14delayTimeR_new,"aw",%nobits
 13179              		.align	2
 13180              		.set	.LANCHOR21,. + 0
 13183              	_ZZ17Update_DelayTimeRvE14delayTimeR_new:
 13184 0000 00000000 		.space	4
 13185              		.section	.bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last,"aw",%nobits
 13186              		.align	2
 13187              		.set	.LANCHOR22,. + 0
 13190              	_ZZ17Update_DelayTimeRvE15delayTimeR_Last:
 13191 0000 00000000 		.space	4
 13192              		.section	.bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup,"aw",%nobits
 13193              		.set	.LANCHOR23,. + 0
 13196              	_ZZ17Update_DelayTimeRvE15tapRatio_pickup:
 13197 0000 00       		.space	1
 13198              		.section	.bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup,"aw",%nobits
 13199              		.set	.LANCHOR20,. + 0
 13202              	_ZZ17Update_DelayTimeRvE17delayTimeR_pickup:
 13203 0000 00       		.space	1
 13204              		.section	.bss._ZZ17Update_DelayTimeRvE8counterR,"aw",%nobits
 13205              		.align	2
 13206              		.set	.LANCHOR18,. + 0
 13209              	_ZZ17Update_DelayTimeRvE8counterR:
 13210 0000 00000000 		.space	4
 13211              		.section	.bss._ZZ17Update_DelayTimeRvE9lastShift,"aw",%nobits
 13212              		.set	.LANCHOR19,. + 0
 13215              	_ZZ17Update_DelayTimeRvE9lastShift:
 13216 0000 00       		.space	1
 13217              		.section	.bss._ZZ18Update_filterXfadevE15PostFilters_new,"aw",%nobits
 13218              		.align	2
 13219              		.set	.LANCHOR81,. + 0
 13222              	_ZZ18Update_filterXfadevE15PostFilters_new:
 13223 0000 00000000 		.space	4
 13224              		.section	.bss._ZZ18Update_filterXfadevE15filterXfade_new,"aw",%nobits
 13225              		.align	2
 13226              		.set	.LANCHOR78,. + 0
 13229              	_ZZ18Update_filterXfadevE15filterXfade_new:
 13230 0000 00000000 		.space	4
 13231              		.section	.bss._ZZ18Update_filterXfadevE16filterXfade_last,"aw",%nobits
 13232              		.align	2
 13233              		.set	.LANCHOR83,. + 0
 13236              	_ZZ18Update_filterXfadevE16filterXfade_last:
 13237 0000 00000000 		.space	4
 13238              		.section	.bss._ZZ18Update_filterXfadevE18PostFilters_pickup,"aw",%nobits
 13239              		.set	.LANCHOR80,. + 0
 13242              	_ZZ18Update_filterXfadevE18PostFilters_pickup:
 13243 0000 00       		.space	1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 387


 13244              		.section	.bss._ZZ18Update_filterXfadevE18filterXfade_pickup,"aw",%nobits
 13245              		.set	.LANCHOR77,. + 0
 13248              	_ZZ18Update_filterXfadevE18filterXfade_pickup:
 13249 0000 00       		.space	1
 13250              		.section	.bss._ZZ18Update_filterXfadevE9lastShift,"aw",%nobits
 13251              		.set	.LANCHOR76,. + 0
 13254              	_ZZ18Update_filterXfadevE9lastShift:
 13255 0000 00       		.space	1
 13256              		.section	.bss._ZZ19Update_BaseTempoLEDvE12phaseCounter,"aw",%nobits
 13257              		.align	2
 13258              		.set	.LANCHOR89,. + 0
 13261              	_ZZ19Update_BaseTempoLEDvE12phaseCounter:
 13262 0000 00000000 		.space	4
 13263              		.section	.bss._ZZ20Update_crossfeedbackvE11modRate_new,"aw",%nobits
 13264              		.align	2
 13265              		.set	.LANCHOR73,. + 0
 13268              	_ZZ20Update_crossfeedbackvE11modRate_new:
 13269 0000 00000000 		.space	4
 13270              		.section	.bss._ZZ20Update_crossfeedbackvE14modRate_pickup,"aw",%nobits
 13271              		.set	.LANCHOR72,. + 0
 13274              	_ZZ20Update_crossfeedbackvE14modRate_pickup:
 13275 0000 00       		.space	1
 13276              		.section	.bss._ZZ20Update_crossfeedbackvE17crossfeedback_new,"aw",%nobits
 13277              		.align	2
 13278              		.set	.LANCHOR70,. + 0
 13281              	_ZZ20Update_crossfeedbackvE17crossfeedback_new:
 13282 0000 00000000 		.space	4
 13283              		.section	.bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last,"aw",%nobits
 13284              		.align	2
 13285              		.set	.LANCHOR74,. + 0
 13288              	_ZZ20Update_crossfeedbackvE18crossfeedback_Last:
 13289 0000 00000000 		.space	4
 13290              		.section	.bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup,"aw",%nobits
 13291              		.set	.LANCHOR69,. + 0
 13294              	_ZZ20Update_crossfeedbackvE20crossfeedback_pickup:
 13295 0000 00       		.space	1
 13296              		.section	.bss._ZZ20Update_crossfeedbackvE9lastShift,"aw",%nobits
 13297              		.set	.LANCHOR68,. + 0
 13300              	_ZZ20Update_crossfeedbackvE9lastShift:
 13301 0000 00       		.space	1
 13302              		.section	.bss._ZZL13AudioCallbackPfS_jE6LNegFB,"aw",%nobits
 13303              		.align	2
 13304              		.set	.LANCHOR125,. + 0
 13307              	_ZZL13AudioCallbackPfS_jE6LNegFB:
 13308 0000 00000000 		.space	4
 13309              		.section	.bss._ZZL13AudioCallbackPfS_jE6RNegFB,"aw",%nobits
 13310              		.align	2
 13311              		.set	.LANCHOR126,. + 0
 13314              	_ZZL13AudioCallbackPfS_jE6RNegFB:
 13315 0000 00000000 		.space	4
 13316              		.section	.bss._ZZL13AudioCallbackPfS_jE7Counter,"aw",%nobits
 13317              		.align	2
 13318              		.set	.LANCHOR111,. + 0
 13321              	_ZZL13AudioCallbackPfS_jE7Counter:
 13322 0000 00000000 		.space	4
 13323              		.section	.bss.crossfeedback,"aw",%nobits
 13324              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 388


 13325              		.set	.LANCHOR71,. + 0
 13328              	crossfeedback:
 13329 0000 00000000 		.space	4
 13330              		.section	.bss.crossfeedback_CV,"aw",%nobits
 13331              		.align	2
 13334              	crossfeedback_CV:
 13335 0000 00000000 		.space	4
 13336              		.section	.bss.delayL,"aw",%nobits
 13337              		.align	2
 13338              		.set	.LANCHOR0,. + 0
 13341              	delayL:
 13342 0000 00000000 		.space	292
 13342      00000000 
 13342      00000000 
 13342      00000000 
 13342      00000000 
 13343              		.section	.bss.delayR,"aw",%nobits
 13344              		.align	2
 13345              		.set	.LANCHOR1,. + 0
 13348              	delayR:
 13349 0000 00000000 		.space	292
 13349      00000000 
 13349      00000000 
 13349      00000000 
 13349      00000000 
 13350              		.section	.bss.delayTimeL_CV,"aw",%nobits
 13351              		.align	2
 13352              		.set	.LANCHOR5,. + 0
 13355              	delayTimeL_CV:
 13356 0000 00000000 		.space	4
 13357              		.section	.bss.delayTimeR_CV,"aw",%nobits
 13358              		.align	2
 13359              		.set	.LANCHOR17,. + 0
 13362              	delayTimeR_CV:
 13363 0000 00000000 		.space	4
 13364              		.section	.bss.delaysL_REV,"aw",%nobits
 13365              		.align	2
 13366              		.set	.LANCHOR2,. + 0
 13369              	delaysL_REV:
 13370 0000 00000000 		.space	8
 13370      00000000 
 13371              		.section	.bss.delaysR_REV,"aw",%nobits
 13372              		.align	2
 13373              		.set	.LANCHOR3,. + 0
 13376              	delaysR_REV:
 13377 0000 00000000 		.space	8
 13377      00000000 
 13378              		.section	.bss.div_L,"aw",%nobits
 13381              	div_L:
 13382 0000 00       		.space	1
 13383              		.section	.bss.div_R,"aw",%nobits
 13386              	div_R:
 13387 0000 00       		.space	1
 13388              		.section	.bss.drywet_CV,"aw",%nobits
 13389              		.align	2
 13390              		.set	.LANCHOR50,. + 0
 13393              	drywet_CV:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 389


 13394 0000 00000000 		.space	4
 13395              		.section	.bss.feedbackL,"aw",%nobits
 13396              		.align	2
 13397              		.set	.LANCHOR31,. + 0
 13400              	feedbackL:
 13401 0000 00000000 		.space	4
 13402              		.section	.bss.feedbackL_CV,"aw",%nobits
 13403              		.align	2
 13404              		.set	.LANCHOR26,. + 0
 13407              	feedbackL_CV:
 13408 0000 00000000 		.space	4
 13409              		.section	.bss.feedbackR,"aw",%nobits
 13410              		.align	2
 13411              		.set	.LANCHOR43,. + 0
 13414              	feedbackR:
 13415 0000 00000000 		.space	4
 13416              		.section	.bss.feedbackR_CV,"aw",%nobits
 13417              		.align	2
 13418              		.set	.LANCHOR38,. + 0
 13421              	feedbackR_CV:
 13422 0000 00000000 		.space	4
 13423              		.section	.bss.filterXfade,"aw",%nobits
 13424              		.align	2
 13425              		.set	.LANCHOR79,. + 0
 13428              	filterXfade:
 13429 0000 00000000 		.space	4
 13430              		.section	.bss.modulation_CV_Raw,"aw",%nobits
 13431              		.align	2
 13432              		.set	.LANCHOR84,. + 0
 13435              	modulation_CV_Raw:
 13436 0000 00000000 		.space	4
 13437              		.section	.bss.mute,"aw",%nobits
 13438              		.set	.LANCHOR110,. + 0
 13441              	mute:
 13442 0000 00       		.space	1
 13443              		.section	.bss.save_flag,"aw",%nobits
 13444              		.align	2
 13445              		.set	.LANCHOR112,. + 0
 13448              	save_flag:
 13449 0000 00       		.space	1
 13450              		.section	.bss.shift,"aw",%nobits
 13451              		.set	.LANCHOR7,. + 0
 13454              	shift:
 13455 0000 00       		.space	1
 13456              		.section	.bss.syncMode,"aw",%nobits
 13457              		.set	.LANCHOR13,. + 0
 13460              	syncMode:
 13461 0000 00       		.space	1
 13462              		.section	.bss.tempoLED_BASE,"aw",%nobits
 13463              		.align	2
 13464              		.set	.LANCHOR88,. + 0
 13467              	tempoLED_BASE:
 13468 0000 00000000 		.space	72
 13468      00000000 
 13468      00000000 
 13468      00000000 
 13468      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 390


 13469              		.section	.bss.width_CV,"aw",%nobits
 13470              		.align	2
 13471              		.set	.LANCHOR58,. + 0
 13474              	width_CV:
 13475 0000 00000000 		.space	4
 13476              		.section	.data.drywet,"aw"
 13477              		.align	2
 13478              		.set	.LANCHOR55,. + 0
 13481              	drywet:
 13482 0000 0000003F 		.word	1056964608
 13483              		.section	.data.width,"aw"
 13484              		.align	2
 13485              		.set	.LANCHOR63,. + 0
 13488              	width:
 13489 0000 0000803F 		.word	1065353216
 13490              		.section	.rodata.CSWTCH.351,"a"
 13491              		.align	2
 13492              		.set	.LANCHOR25,. + 0
 13495              	CSWTCH.351:
 13496 0000 0000C03F 		.word	1069547520
 13497 0004 00000040 		.word	1073741824
 13498 0008 00004040 		.word	1077936128
 13499              		.section	.rodata._ZL18defaultAltControls,"a"
 13500              		.align	2
 13501              		.set	.LANCHOR106,. + 0
 13504              	_ZL18defaultAltControls:
 13505 0000 00650148 		.word	1208050944
 13506 0004 0000803F 		.word	1065353216
 13507 0008 00000000 		.word	0
 13508 000c 9A99A140 		.word	1084332442
 13509 0010 00004843 		.word	1128792064
 13510 0014 00803B46 		.word	1178304512
 13511 0018 00000000 		.word	0
 13512 001c 00000000 		.word	0
 13513              		.section	.sdram_bss,"aw"
 13514              		.align	2
 13517              	delMemsR_REV:
 13518 0000 00000000 		.space	2400040
 13518      00000000 
 13518      00000000 
 13518      00000000 
 13518      00000000 
 13521              	delMemsL_REV:
 13522 249f28 00000000 		.space	2400040
 13522      00000000 
 13522      00000000 
 13522      00000000 
 13522      00000000 
 13525              	delMemsR:
 13526 493e50 00000000 		.space	6912136
 13526      00000000 
 13526      00000000 
 13526      00000000 
 13526      00000000 
 13529              	delMemsL:
 13530 b2b6d8 00000000 		.space	6912136
 13530      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 391


 13530      00000000 
 13530      00000000 
 13530      00000000 
 13531              		.text
 13532              	.Letext0:
 13533              		.file 28 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_d
 13534              		.file 29 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdin
 13535              		.file 30 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdint.h"
 13536              		.file 31 "../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 13537              		.file 32 "../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 13538              		.file 33 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 13539              		.file 34 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13540              		.file 35 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13541              		.file 36 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13542              		.file 37 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13543              		.file 38 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13544              		.file 39 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13545              		.file 40 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13546              		.file 41 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13547              		.file 42 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13548              		.file 43 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13549              		.file 44 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13550              		.file 45 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13551              		.file 46 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13552              		.file 47 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13553              		.file 48 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13554              		.file 49 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13555              		.file 50 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13556              		.file 51 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13557              		.file 52 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13558              		.file 53 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13559              		.file 54 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13560              		.file 55 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock.h
 13561              		.file 56 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_types
 13562              		.file 57 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reent.
 13563              		.file 58 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
 13564              		.file 59 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdlib.h"
 13565              		.file 60 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13566              		.file 61 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 13567              		.file 62 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 13568              		.file 63 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13569              		.file 64 "../libdaisy/src/daisy_core.h"
 13570              		.file 65 "../libdaisy/src/per/tim.h"
 13571              		.file 66 "../libdaisy/src/per/sai.h"
 13572              		.file 67 "../libdaisy/src/util/wav_format.h"
 13573              		.file 68 "../libdaisy/src/per/qspi.h"
 13574              		.file 69 "../libdaisy/src/per/gpio.h"
 13575              		.file 70 "../libdaisy/src/dev/sdram.h"
 13576              		.file 71 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 13577              		.file 72 "<built-in>"
 13578              		.file 73 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdio.h"
 13579              		.file 74 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/unistd
 13580              		.file 75 "../libdaisy/src/util/oled_fonts.h"
 13581              		.file 76 "../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 13582              		.file 77 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 13583              		.file 78 "../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 13584              		.file 79 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 392


 13585              		.file 80 "../libdaisy/src/util/sd_diskio.h"
 13586              		.file 81 "../libdaisy/src/sys/fatfs.h"
 13587              		.file 82 "../DaisySP/Source/Control/adenv.h"
 13588              		.file 83 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/wchar.h"
 13589              		.file 84 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/locale.h"
 13590              		.file 85 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/ctype.h"
 13591              		.file 86 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/errno.
 13592              		.file 87 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/string.h"
 13593              		.file 88 "QSPI_Settings.h"
 13594              		.file 89 "scale.h"
 13595              		.file 90 "constants.h"
 13596              		.file 91 "../libdaisy/src/dev/sr_595.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 393


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Veno-Echo.cpp
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:17     .text._ZN5daisy6SwitchD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:43     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:92     .text._ZN7daisysp4AdsrD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:100    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:100    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:117    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:125    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:125    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:142    .text._ZN7daisysp3SvfD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:150    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:150    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:167    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:175    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:175    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:192    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:200    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 _ZN7daisysp7DcBlockD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:200    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 _ZN7daisysp7DcBlockD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:217    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:242    .text._ZN8TaptempoD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:267    .text._ZN8TempoLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:304    .text._ZN9ButtonLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:312    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:312    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:338    .text._ZN10DelayMultiD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:346    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:346    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:377    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:385    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:385    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:402    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:410    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:410    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:427    .text._Z10InitDelaysf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:435    .text._Z10InitDelaysf:0000000000000000 _Z10InitDelaysf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:987    .text._Z10InitDelaysf:0000000000000178 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13529  .sdram_bss:0000000000b2b6d8 delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13525  .sdram_bss:0000000000493e50 delMemsR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13521  .sdram_bss:0000000000249f28 delMemsL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13517  .sdram_bss:0000000000000000 delMemsR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:1012   .text._Z20Update_DelayTimeL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:1020   .text._Z20Update_DelayTimeL_CVv:0000000000000000 _Z20Update_DelayTimeL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:1045   .text._Z20Update_DelayTimeL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:1051   .text._Z17Update_DelayTimeLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:1059   .text._Z17Update_DelayTimeLv:0000000000000000 _Z17Update_DelayTimeLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:1634   .text._Z17Update_DelayTimeLv:00000000000001ec $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 394


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:1664   .text._Z20Update_DelayTimeR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:1672   .text._Z20Update_DelayTimeR_CVv:0000000000000000 _Z20Update_DelayTimeR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:1697   .text._Z20Update_DelayTimeR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:1703   .text._Z17Update_DelayTimeRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:1711   .text._Z17Update_DelayTimeRv:0000000000000000 _Z17Update_DelayTimeRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:2169   .text._Z17Update_DelayTimeRv:00000000000001a0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:2195   .text._Z19Update_feedbackL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:2203   .text._Z19Update_feedbackL_CVv:0000000000000000 _Z19Update_feedbackL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:2228   .text._Z19Update_feedbackL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:2234   .text._Z16Update_feedbackLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:2242   .text._Z16Update_feedbackLv:0000000000000000 _Z16Update_feedbackLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:2660   .text._Z16Update_feedbackLv:0000000000000190 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:2688   .text._Z19Update_feedbackR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:2696   .text._Z19Update_feedbackR_CVv:0000000000000000 _Z19Update_feedbackR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:2721   .text._Z19Update_feedbackR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:2727   .text._Z16Update_feedbackRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:2735   .text._Z16Update_feedbackRv:0000000000000000 _Z16Update_feedbackRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:3157   .text._Z16Update_feedbackRv:000000000000019c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:3185   .text._Z16Update_drywet_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:3193   .text._Z16Update_drywet_CVv:0000000000000000 _Z16Update_drywet_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:3218   .text._Z16Update_drywet_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:3224   .text._Z13Update_drywetv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:3232   .text._Z13Update_drywetv:0000000000000000 _Z13Update_drywetv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:3704   .text._Z13Update_drywetv:00000000000001f0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:3740   .text._Z15Update_width_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:3748   .text._Z15Update_width_CVv:0000000000000000 _Z15Update_width_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:3773   .text._Z15Update_width_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:3779   .text._Z12Update_widthv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:3787   .text._Z12Update_widthv:0000000000000000 _Z12Update_widthv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:4211   .text._Z12Update_widthv:0000000000000180 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:4236   .text._Z20Update_crossfeedbackv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:4244   .text._Z20Update_crossfeedbackv:0000000000000000 _Z20Update_crossfeedbackv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:4570   .text._Z20Update_crossfeedbackv:000000000000010c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:4589   .text._Z18Update_filterXfadev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:4597   .text._Z18Update_filterXfadev:0000000000000000 _Z18Update_filterXfadev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:4895   .text._Z18Update_filterXfadev:0000000000000110 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:4917   .text._Z8GetModCVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:4925   .text._Z8GetModCVv:0000000000000000 _Z8GetModCVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:4955   .text._Z8GetModCVv:0000000000000020 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:4963   .text._Z10Update_Modv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:4971   .text._Z10Update_Modv:0000000000000000 _Z10Update_Modv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:5128   .text._Z10Update_Modv:0000000000000058 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:5140   .text._Z11UpdateClockv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:5148   .text._Z11UpdateClockv:0000000000000000 _Z11UpdateClockv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:5211   .text._Z11UpdateClockv:000000000000002c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:5220   .text._Z19Update_BaseTempoLEDv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:5228   .text._Z19Update_BaseTempoLEDv:0000000000000000 _Z19Update_BaseTempoLEDv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:5346   .text._Z19Update_BaseTempoLEDv:000000000000005c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:5356   .text._Z13ApplySettingsRK8Settings:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:5364   .text._Z13ApplySettingsRK8Settings:0000000000000000 _Z13ApplySettingsRK8Settings
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:6061   .text._Z13ApplySettingsRK8Settings:0000000000000340 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:6100   .text.startup.main:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:6108   .text.startup.main:0000000000000000 main
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:6986   .text.startup.main:0000000000000348 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:7020   .text.startup.main:00000000000003c4 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:7390   .text.startup.main:00000000000005b8 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:8083   .text._ZL13AudioCallbackPfS_j:0000000000000000 _ZL13AudioCallbackPfS_j
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 395


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:7408   .text._Z13TurnOnAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:7416   .text._Z13TurnOnAllLEDsv:0000000000000000 _Z13TurnOnAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:7478   .text._Z13TurnOnAllLEDsv:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:7489   .text._Z12ResetAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:7497   .text._Z12ResetAllLEDsv:0000000000000000 _Z12ResetAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:7600   .text._Z12ResetAllLEDsv:000000000000007c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:7612   .text._Z14Update_Buttonsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:7620   .text._Z14Update_Buttonsv:0000000000000000 _Z14Update_Buttonsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:8051   .text._Z14Update_Buttonsv:00000000000001a0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:8076   .text._ZL13AudioCallbackPfS_j:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:8195   .text._ZL13AudioCallbackPfS_j:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:8210   .text._ZL13AudioCallbackPfS_j:000000000000006a $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:8239   .text._ZL13AudioCallbackPfS_j:0000000000000090 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:8250   .text._ZL13AudioCallbackPfS_j:00000000000000a4 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:9386   .text._ZL13AudioCallbackPfS_j:0000000000000418 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:9442   .text._ZL13AudioCallbackPfS_j:00000000000004c8 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:10068  .text._ZL13AudioCallbackPfS_j:00000000000007a0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:10090  .text._ZL13AudioCallbackPfS_j:00000000000007e8 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:10845  .text._ZL13AudioCallbackPfS_j:0000000000000b44 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:10882  .text._ZL13AudioCallbackPfS_j:0000000000000bac $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:11207  .text._ZL13AudioCallbackPfS_j:0000000000000ca4 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:11218  .text._Z9HardLimitff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:11226  .text._Z9HardLimitff:0000000000000000 _Z9HardLimitff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:11260  .text._Z10PotCVComboff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:11268  .text._Z10PotCVComboff:0000000000000000 _Z10PotCVComboff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:11315  .text._Z10PotCVComboff:0000000000000038 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:11320  .text._Z16checkPickupStateffbb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:11328  .text._Z16checkPickupStateffbb:0000000000000000 _Z16checkPickupStateffbb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:11412  .text._Z16checkPickupStateffbb:000000000000003c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:11417  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:11425  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 _Z20checkPickupState_altff11pickupStateb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:11515  .text._Z20checkPickupState_altff11pickupStateb:000000000000006c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:11520  .text._Z11GetTapRatio9TapRatios:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:11528  .text._Z11GetTapRatio9TapRatios:0000000000000000 _Z11GetTapRatio9TapRatios
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:11558  .text._Z11GetTapRatio9TapRatios:000000000000001c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:11563  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:11570  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 _GLOBAL__sub_I_delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12489  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000260 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12563  .init_array:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12613  .bss.AltControls:0000000000000000 AltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12620  .bss.BaseTempo:0000000000000000 BaseTempo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12627  .bss.ClockIn:0000000000000000 ClockIn
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12694  .bss.Sync:0000000000000000 Sync
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12687  .bss.ReverseGateR:0000000000000000 ReverseGateR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12680  .bss.ReverseGateL:0000000000000000 ReverseGateL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13448  .bss.save_flag:0000000000000000 save_flag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12659  .bss.PostFilters:0000000000000000 PostFilters
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12632  .bss.ClockInFlag:0000000000000000 ClockInFlag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13441  .bss.mute:0000000000000000 mute
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13454  .bss.shift:0000000000000000 shift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13460  .bss.syncMode:0000000000000000 syncMode
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13435  .bss.modulation_CV_Raw:0000000000000000 modulation_CV_Raw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12653  .bss.ModDepth:0000000000000000 ModDepth
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13386  .bss.div_R:0000000000000000 div_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13381  .bss.div_L:0000000000000000 div_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13428  .bss.filterXfade:0000000000000000 filterXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13474  .bss.width_CV:0000000000000000 width_CV
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 396


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13488  .data.width:0000000000000000 width
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13393  .bss.drywet_CV:0000000000000000 drywet_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13481  .data.drywet:0000000000000000 drywet
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13334  .bss.crossfeedback_CV:0000000000000000 crossfeedback_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13328  .bss.crossfeedback:0000000000000000 crossfeedback
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13421  .bss.feedbackR_CV:0000000000000000 feedbackR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13414  .bss.feedbackR:0000000000000000 feedbackR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13407  .bss.feedbackL_CV:0000000000000000 feedbackL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13400  .bss.feedbackL:0000000000000000 feedbackL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13362  .bss.delayTimeR_CV:0000000000000000 delayTimeR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13355  .bss.delayTimeL_CV:0000000000000000 delayTimeL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13467  .bss.tempoLED_BASE:0000000000000000 tempoLED_BASE
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12701  .bss.Tap_Button:0000000000000000 Tap_Button
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12673  .bss.Rev_R_sw:0000000000000000 Rev_R_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12666  .bss.Rev_L_sw:0000000000000000 Rev_L_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12639  .bss.HPF_sw:0000000000000000 HPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12646  .bss.LPF_sw:0000000000000000 LPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13376  .bss.delaysR_REV:0000000000000000 delaysR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13369  .bss.delaysL_REV:0000000000000000 delaysL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13348  .bss.delayR:0000000000000000 delayR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13341  .bss.delayL:0000000000000000 delayL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12609  .bss.AltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12616  .bss.BaseTempo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12623  .bss.ClockIn:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12633  .bss.ClockInFlag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12635  .bss.HPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12642  .bss.LPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12649  .bss.ModDepth:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12660  .bss.PostFilters:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12662  .bss.Rev_L_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12669  .bss.Rev_R_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12676  .bss.ReverseGateL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12683  .bss.ReverseGateR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12690  .bss.Sync:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12697  .bss.Tap_Button:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12704  .bss._ZL10FwdRevLEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12708  .bss._ZL10FwdRevLEnv:0000000000000000 _ZL10FwdRevLEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12711  .bss._ZL10FwdRevREnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12715  .bss._ZL10FwdRevREnv:0000000000000000 _ZL10FwdRevREnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12718  .bss._ZL10HPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12722  .bss._ZL10HPF_LXfade:0000000000000000 _ZL10HPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12725  .bss._ZL10HPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12729  .bss._ZL10HPF_L_post:0000000000000000 _ZL10HPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12732  .bss._ZL10HPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12736  .bss._ZL10HPF_RXfade:0000000000000000 _ZL10HPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12739  .bss._ZL10HPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12743  .bss._ZL10HPF_R_post:0000000000000000 _ZL10HPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12746  .bss._ZL10LPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12750  .bss._ZL10LPF_LXfade:0000000000000000 _ZL10LPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12753  .bss._ZL10LPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12757  .bss._ZL10LPF_L_post:0000000000000000 _ZL10LPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12760  .bss._ZL10LPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12764  .bss._ZL10LPF_RXfade:0000000000000000 _ZL10LPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12767  .bss._ZL10LPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12771  .bss._ZL10LPF_R_post:0000000000000000 _ZL10LPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12774  .bss._ZL10WidthXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12778  .bss._ZL10WidthXfade:0000000000000000 _ZL10WidthXfade
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 397


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12781  .bss._ZL11DcBlock_LFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12785  .bss._ZL11DcBlock_LFB:0000000000000000 _ZL11DcBlock_LFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12788  .bss._ZL11DcBlock_RFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12792  .bss._ZL11DcBlock_RFB:0000000000000000 _ZL11DcBlock_RFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12795  .bss._ZL11FilterMix_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12799  .bss._ZL11FilterMix_L:0000000000000000 _ZL11FilterMix_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12802  .bss._ZL11FilterMix_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12806  .bss._ZL11FilterMix_R:0000000000000000 _ZL11FilterMix_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12809  .bss._ZL12FwdRevLXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12813  .bss._ZL12FwdRevLXfade:0000000000000000 _ZL12FwdRevLXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12816  .bss._ZL12FwdRevRXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12820  .bss._ZL12FwdRevRXfade:0000000000000000 _ZL12FwdRevRXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12823  .bss._ZL15HPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12827  .bss._ZL15HPF_LXfade_post:0000000000000000 _ZL15HPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12830  .bss._ZL15HPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12834  .bss._ZL15HPF_RXfade_post:0000000000000000 _ZL15HPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12837  .bss._ZL15LPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12841  .bss._ZL15LPF_LXfade_post:0000000000000000 _ZL15LPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12844  .bss._ZL15LPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12848  .bss._ZL15LPF_RXfade_post:0000000000000000 _ZL15LPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12851  .bss._ZL16FilterMix_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12855  .bss._ZL16FilterMix_L_post:0000000000000000 _ZL16FilterMix_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12858  .bss._ZL16FilterMix_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12862  .bss._ZL16FilterMix_R_post:0000000000000000 _ZL16FilterMix_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12865  .bss._ZL2hw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12869  .bss._ZL2hw:0000000000000000 _ZL2hw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12872  .bss._ZL3lfo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12876  .bss._ZL3lfo:0000000000000000 _ZL3lfo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12879  .bss._ZL5HPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12883  .bss._ZL5HPF_L:0000000000000000 _ZL5HPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12886  .bss._ZL5HPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12890  .bss._ZL5HPF_R:0000000000000000 _ZL5HPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12893  .bss._ZL5LPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12897  .bss._ZL5LPF_L:0000000000000000 _ZL5LPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12900  .bss._ZL5LPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12904  .bss._ZL5LPF_R:0000000000000000 _ZL5LPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12907  .bss._ZL7HPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12911  .bss._ZL7HPF_Env:0000000000000000 _ZL7HPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12914  .bss._ZL7LPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12918  .bss._ZL7LPF_Env:0000000000000000 _ZL7LPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12921  .bss._ZL7LeftEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12925  .bss._ZL7LeftEnv:0000000000000000 _ZL7LeftEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12928  .bss._ZL8RightEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12932  .bss._ZL8RightEnv:0000000000000000 _ZL8RightEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12935  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12939  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 _ZZ10Update_ModvE13modulation_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12942  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12946  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 _ZZ10Update_ModvE17ModDepth_Filtered
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12949  .bss._ZZ12Update_widthvE10width_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12953  .bss._ZZ12Update_widthvE10width_Last:0000000000000000 _ZZ12Update_widthvE10width_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12956  .bss._ZZ12Update_widthvE12ModDepth_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12960  .bss._ZZ12Update_widthvE12ModDepth_new:0000000000000000 _ZZ12Update_widthvE12ModDepth_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12966  .bss._ZZ12Update_widthvE12width_pickup:0000000000000000 _ZZ12Update_widthvE12width_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12967  .bss._ZZ12Update_widthvE12width_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12972  .bss._ZZ12Update_widthvE15ModDepth_pickup:0000000000000000 _ZZ12Update_widthvE15ModDepth_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12973  .bss._ZZ12Update_widthvE15ModDepth_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12978  .bss._ZZ12Update_widthvE9lastShift:0000000000000000 _ZZ12Update_widthvE9lastShift
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 398


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12979  .bss._ZZ12Update_widthvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12981  .bss._ZZ12Update_widthvE9width_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12985  .bss._ZZ12Update_widthvE9width_new:0000000000000000 _ZZ12Update_widthvE9width_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12991  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 _ZZ13Update_drywetvE10Res_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12992  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12994  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:12998  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 _ZZ13Update_drywetvE10drywet_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13001  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13005  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 _ZZ13Update_drywetvE11drywet_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13011  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 _ZZ13Update_drywetvE13drywet_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13012  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13014  .bss._ZZ13Update_drywetvE7Res_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13018  .bss._ZZ13Update_drywetvE7Res_new:0000000000000000 _ZZ13Update_drywetvE7Res_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13024  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 _ZZ13Update_drywetvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13025  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13027  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13031  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 _ZZ14Update_ButtonsvE11buttonstate
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13034  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13038  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 _ZZ14Update_ButtonsvE9resetTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13041  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13045  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 _ZZ14Update_ButtonsvE9shiftTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13048  .bss._ZZ16Update_feedbackLvE12HPCutoff_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13052  .bss._ZZ16Update_feedbackLvE12HPCutoff_new:0000000000000000 _ZZ16Update_feedbackLvE12HPCutoff_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13055  .bss._ZZ16Update_feedbackLvE13feedbackL_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13059  .bss._ZZ16Update_feedbackLvE13feedbackL_new:0000000000000000 _ZZ16Update_feedbackLvE13feedbackL_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13062  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13066  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 _ZZ16Update_feedbackLvE14feedbackL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13072  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackLvE15HPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13073  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13078  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 _ZZ16Update_feedbackLvE16feedbackL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13079  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13084  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 _ZZ16Update_feedbackLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13085  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13087  .bss._ZZ16Update_feedbackRvE12LPCutoff_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13091  .bss._ZZ16Update_feedbackRvE12LPCutoff_new:0000000000000000 _ZZ16Update_feedbackRvE12LPCutoff_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13094  .bss._ZZ16Update_feedbackRvE13feedbackR_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13098  .bss._ZZ16Update_feedbackRvE13feedbackR_new:0000000000000000 _ZZ16Update_feedbackRvE13feedbackR_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13101  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13105  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 _ZZ16Update_feedbackRvE14feedbackR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13111  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackRvE15LPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13112  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13117  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 _ZZ16Update_feedbackRvE16feedbackR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13118  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13123  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 _ZZ16Update_feedbackRvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13124  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13126  .bss._ZZ17Update_DelayTimeLvE14delayTimeL_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13130  .bss._ZZ17Update_DelayTimeLvE14delayTimeL_new:0000000000000000 _ZZ17Update_DelayTimeLvE14delayTimeL_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13133  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13137  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 _ZZ17Update_DelayTimeLvE15delayTimeL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13140  .bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13144  .bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:0000000000000000 _ZZ17Update_DelayTimeLvE17Rev_DelayTime_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13150  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE17delayTimeL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13151  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13156  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13157  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13159  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13163  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 _ZZ17Update_DelayTimeLvE8counterL
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 399


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13169  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13170  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13172  .bss._ZZ17Update_DelayTimeRvE12tapRatio_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13176  .bss._ZZ17Update_DelayTimeRvE12tapRatio_new:0000000000000000 _ZZ17Update_DelayTimeRvE12tapRatio_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13179  .bss._ZZ17Update_DelayTimeRvE14delayTimeR_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13183  .bss._ZZ17Update_DelayTimeRvE14delayTimeR_new:0000000000000000 _ZZ17Update_DelayTimeRvE14delayTimeR_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13186  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13190  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 _ZZ17Update_DelayTimeRvE15delayTimeR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13196  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE15tapRatio_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13197  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13202  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE17delayTimeR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13203  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13205  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13209  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 _ZZ17Update_DelayTimeRvE8counterR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13215  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeRvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13216  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13218  .bss._ZZ18Update_filterXfadevE15PostFilters_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13222  .bss._ZZ18Update_filterXfadevE15PostFilters_new:0000000000000000 _ZZ18Update_filterXfadevE15PostFilters_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13225  .bss._ZZ18Update_filterXfadevE15filterXfade_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13229  .bss._ZZ18Update_filterXfadevE15filterXfade_new:0000000000000000 _ZZ18Update_filterXfadevE15filterXfade_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13232  .bss._ZZ18Update_filterXfadevE16filterXfade_last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13236  .bss._ZZ18Update_filterXfadevE16filterXfade_last:0000000000000000 _ZZ18Update_filterXfadevE16filterXfade_last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13242  .bss._ZZ18Update_filterXfadevE18PostFilters_pickup:0000000000000000 _ZZ18Update_filterXfadevE18PostFilters_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13243  .bss._ZZ18Update_filterXfadevE18PostFilters_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13248  .bss._ZZ18Update_filterXfadevE18filterXfade_pickup:0000000000000000 _ZZ18Update_filterXfadevE18filterXfade_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13249  .bss._ZZ18Update_filterXfadevE18filterXfade_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13254  .bss._ZZ18Update_filterXfadevE9lastShift:0000000000000000 _ZZ18Update_filterXfadevE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13255  .bss._ZZ18Update_filterXfadevE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13257  .bss._ZZ19Update_BaseTempoLEDvE12phaseCounter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13261  .bss._ZZ19Update_BaseTempoLEDvE12phaseCounter:0000000000000000 _ZZ19Update_BaseTempoLEDvE12phaseCounter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13264  .bss._ZZ20Update_crossfeedbackvE11modRate_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13268  .bss._ZZ20Update_crossfeedbackvE11modRate_new:0000000000000000 _ZZ20Update_crossfeedbackvE11modRate_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13274  .bss._ZZ20Update_crossfeedbackvE14modRate_pickup:0000000000000000 _ZZ20Update_crossfeedbackvE14modRate_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13275  .bss._ZZ20Update_crossfeedbackvE14modRate_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13277  .bss._ZZ20Update_crossfeedbackvE17crossfeedback_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13281  .bss._ZZ20Update_crossfeedbackvE17crossfeedback_new:0000000000000000 _ZZ20Update_crossfeedbackvE17crossfeedback_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13284  .bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13288  .bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last:0000000000000000 _ZZ20Update_crossfeedbackvE18crossfeedback_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13294  .bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup:0000000000000000 _ZZ20Update_crossfeedbackvE20crossfeedback_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13295  .bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13300  .bss._ZZ20Update_crossfeedbackvE9lastShift:0000000000000000 _ZZ20Update_crossfeedbackvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13301  .bss._ZZ20Update_crossfeedbackvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13303  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13307  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6LNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13310  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13314  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6RNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13317  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13321  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 _ZZL13AudioCallbackPfS_jE7Counter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13324  .bss.crossfeedback:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13331  .bss.crossfeedback_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13337  .bss.delayL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13344  .bss.delayR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13351  .bss.delayTimeL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13358  .bss.delayTimeR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13365  .bss.delaysL_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13372  .bss.delaysR_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13382  .bss.div_L:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 400


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13387  .bss.div_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13389  .bss.drywet_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13396  .bss.feedbackL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13403  .bss.feedbackL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13410  .bss.feedbackR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13417  .bss.feedbackR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13424  .bss.filterXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13431  .bss.modulation_CV_Raw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13442  .bss.mute:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13444  .bss.save_flag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13455  .bss.shift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13461  .bss.syncMode:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13463  .bss.tempoLED_BASE:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13470  .bss.width_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13477  .data.drywet:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13484  .data.width:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13491  .rodata.CSWTCH.351:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13495  .rodata.CSWTCH.351:0000000000000000 CSWTCH.351
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13500  .rodata._ZL18defaultAltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13504  .rodata._ZL18defaultAltControls:0000000000000000 _ZL18defaultAltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s:13514  .sdram_bss:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy6SwitchD5Ev
                           .group:0000000000000000 _ZN5daisy9DaisySeedD5Ev
                           .group:0000000000000000 _ZN7daisysp4AdsrD5Ev
                           .group:0000000000000000 _ZN7daisysp10OscillatorD5Ev
                           .group:0000000000000000 _ZN7daisysp3SvfD5Ev
                           .group:0000000000000000 _ZN7daisysp9CrossFadeD5Ev
                           .group:0000000000000000 _ZN7daisysp7DcBlockD5Ev
                           .group:0000000000000000 _ZN7daisysp9EnvFollowD5Ev
                           .group:0000000000000000 _ZN8TaptempoD5Ev
                           .group:0000000000000000 _ZN8TempoLEDD5Ev
                           .group:0000000000000000 _ZN9ButtonLEDD5Ev
                           .group:0000000000000000 _ZN10DelayMultiD5Ev
                           .group:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED5Ev
                           .group:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED5Ev

UNDEFINED SYMBOLS
_ZN5daisy9DaisySeed6GetPinEh
_ZN10DelayMulti4initE12dsy_gpio_pinf
_ZNK5daisy9AdcHandle8GetFloatEh
_ZNK5daisy9AdcHandle11GetMuxFloatEhh
_ZN8Taptempo12getTapLengthEv
_ZN10DelayMulti12SetDelayTimeEffb
_Z5scalefff9CurveType
_ZN8Taptempo11setTapRatioEf
_ZN7daisysp3Svf7SetFreqEf
_ZN7daisysp3Svf6SetResEf
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN7daisysp10Oscillator7ProcessEv
_ZN5daisy6Switch8DebounceEv
_ZN8Taptempo3tapEv
_ZN8Taptempo10getTapFreqEv
_ZN8TempoLED8setTempoEf
_ZN8TempoLED6updateEv
_ZN8TempoLED5isEOCEv
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccIxeG8t.s 			page 401


_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN7daisysp4Adsr4InitEf
_ZN7daisysp3Svf4InitEf
_ZN7daisysp3Svf8SetDriveEf
_ZN7daisysp7DcBlock4InitEf
_ZN8Taptempo4initEiif
_ZN8TempoLED4initE12dsy_gpio_pinf
_ZN8TempoLED10resetPhaseEv
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
_ZN8TempoLED7LED_setEf
_ZN9ButtonLED7LED_setEf
_ZN9ButtonLED8getStateEv
_ZN9ButtonLED6updateEv
_ZN9ButtonLED10RisingEdgeEv
_ZN9ButtonLED11FallingEdgeEv
_ZN5daisy6System6GetNowEv
_ZN9ButtonLED6toggleEv
_ZN7daisysp7DcBlock7ProcessEf
_ZN10DelayMulti5WriteERKf
_ZN7daisysp9CrossFade7ProcessERfS1_
_ZN7daisysp4Adsr7ProcessEb
sinf
_ZN10DelayMulti9GetOutputEv
_ZN7daisysp3Svf7ProcessEf
__aeabi_atexit
__dso_handle
