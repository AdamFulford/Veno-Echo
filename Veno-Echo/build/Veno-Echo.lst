ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Veno-Echo.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy6SwitchD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy6SwitchD2Ev:
  27              	.LVL0:
  28              	.LFB1523:
  29              		.file 1 "../libdaisy/src/hid/switch.h"
   1:../libdaisy/src/hid/switch.h **** #pragma once
   2:../libdaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../libdaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../libdaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../libdaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../libdaisy/src/hid/switch.h **** 
   7:../libdaisy/src/hid/switch.h **** namespace daisy
   8:../libdaisy/src/hid/switch.h **** {
   9:../libdaisy/src/hid/switch.h **** /** 
  10:../libdaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  11:../libdaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  12:../libdaisy/src/hid/switch.h ****     @author Stephen Hensley
  13:../libdaisy/src/hid/switch.h ****     @date December 2019
  14:../libdaisy/src/hid/switch.h ****     @ingroup controls
  15:../libdaisy/src/hid/switch.h **** */
  16:../libdaisy/src/hid/switch.h **** class Switch
  17:../libdaisy/src/hid/switch.h **** {
  18:../libdaisy/src/hid/switch.h ****   public:
  19:../libdaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  20:../libdaisy/src/hid/switch.h ****     enum Type
  21:../libdaisy/src/hid/switch.h ****     {
  22:../libdaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  23:../libdaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  24:../libdaisy/src/hid/switch.h ****     };
  25:../libdaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  26:../libdaisy/src/hid/switch.h ****     enum Polarity
  27:../libdaisy/src/hid/switch.h ****     {
  28:../libdaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
  29:../libdaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 2


  30:../libdaisy/src/hid/switch.h ****     };
  31:../libdaisy/src/hid/switch.h **** 
  32:../libdaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  33:../libdaisy/src/hid/switch.h ****     enum Pull
  34:../libdaisy/src/hid/switch.h ****     {
  35:../libdaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  36:../libdaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  37:../libdaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  38:../libdaisy/src/hid/switch.h ****     };
  39:../libdaisy/src/hid/switch.h **** 
  40:../libdaisy/src/hid/switch.h ****     Switch() {}
  41:../libdaisy/src/hid/switch.h ****     ~Switch() {}
  30              		.loc 1 41 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 41 16 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE1523:
  40              		.weak	_ZN5daisy6SwitchD1Ev
  41              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
  42 0002 00BF     		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN5daisy9DaisySeedD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN5daisy9DaisySeedD2Ev:
  52              	.LVL1:
  53              	.LFB1703:
  54              		.file 2 "../libdaisy/src/daisy_seed.h"
   1:../libdaisy/src/daisy_seed.h **** #pragma once
   2:../libdaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../libdaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../libdaisy/src/daisy_seed.h **** 
   5:../libdaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../libdaisy/src/daisy_seed.h **** 
   7:../libdaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../libdaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../libdaisy/src/daisy_seed.h **** 
  10:../libdaisy/src/daisy_seed.h **** namespace daisy
  11:../libdaisy/src/daisy_seed.h **** {
  12:../libdaisy/src/daisy_seed.h **** /**
  13:../libdaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../libdaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../libdaisy/src/daisy_seed.h **** 
  16:../libdaisy/src/daisy_seed.h ****    @ingroup boards
  17:../libdaisy/src/daisy_seed.h **** */
  18:../libdaisy/src/daisy_seed.h **** class DaisySeed
  19:../libdaisy/src/daisy_seed.h **** {
  20:../libdaisy/src/daisy_seed.h ****   public:
  21:../libdaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 3


  55              		.loc 2 22 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LBB789:
  61              	.LBI789:
  62              		.file 3 "../libdaisy/src/sys/system.h"
   1:../libdaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../libdaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../libdaisy/src/sys/system.h **** 
   4:../libdaisy/src/sys/system.h **** #include <cstdint>
   5:../libdaisy/src/sys/system.h **** #include "per/tim.h"
   6:../libdaisy/src/sys/system.h **** 
   7:../libdaisy/src/sys/system.h **** namespace daisy
   8:../libdaisy/src/sys/system.h **** {
   9:../libdaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  10:../libdaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  11:../libdaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  12:../libdaisy/src/sys/system.h ****  **
  13:../libdaisy/src/sys/system.h ****  ** @author shensley
  14:../libdaisy/src/sys/system.h ****  ** @addtogroup system
  15:../libdaisy/src/sys/system.h ****  */
  16:../libdaisy/src/sys/system.h **** class System
  17:../libdaisy/src/sys/system.h **** {
  18:../libdaisy/src/sys/system.h ****   public:
  19:../libdaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  20:../libdaisy/src/sys/system.h ****     struct Config
  21:../libdaisy/src/sys/system.h ****     {
  22:../libdaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  23:../libdaisy/src/sys/system.h ****         enum class SysClkFreq
  24:../libdaisy/src/sys/system.h ****         {
  25:../libdaisy/src/sys/system.h ****             FREQ_400MHZ,
  26:../libdaisy/src/sys/system.h ****             FREQ_480MHZ,
  27:../libdaisy/src/sys/system.h ****         };
  28:../libdaisy/src/sys/system.h **** 
  29:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  30:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  31:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  32:../libdaisy/src/sys/system.h ****          ** */
  33:../libdaisy/src/sys/system.h ****         void Defaults()
  34:../libdaisy/src/sys/system.h ****         {
  35:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_400MHZ;
  36:../libdaisy/src/sys/system.h ****             use_dcache = true;
  37:../libdaisy/src/sys/system.h ****             use_icache = true;
  38:../libdaisy/src/sys/system.h ****         }
  39:../libdaisy/src/sys/system.h **** 
  40:../libdaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  41:../libdaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  42:../libdaisy/src/sys/system.h ****          ** Cache Enabled 
  43:../libdaisy/src/sys/system.h ****          ** */
  44:../libdaisy/src/sys/system.h ****         void Boost()
  45:../libdaisy/src/sys/system.h ****         {
  46:../libdaisy/src/sys/system.h ****             cpu_freq   = SysClkFreq::FREQ_480MHZ;
  47:../libdaisy/src/sys/system.h ****             use_dcache = true;
  48:../libdaisy/src/sys/system.h ****             use_icache = true;
  49:../libdaisy/src/sys/system.h ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 4


  50:../libdaisy/src/sys/system.h **** 
  51:../libdaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  52:../libdaisy/src/sys/system.h ****         bool       use_dcache;
  53:../libdaisy/src/sys/system.h ****         bool       use_icache;
  54:../libdaisy/src/sys/system.h ****     };
  55:../libdaisy/src/sys/system.h **** 
  56:../libdaisy/src/sys/system.h ****     System() {}
  57:../libdaisy/src/sys/system.h ****     ~System() {}
  63              		.loc 3 57 5 view .LVU3
  64              		.loc 3 57 5 is_stmt 0 view .LVU4
  65              	.LBE789:
  66              	.LBB790:
  67              	.LBI790:
  68              		.file 4 "../libdaisy/src/hid/usb.h"
   1:../libdaisy/src/hid/usb.h **** #pragma once
   2:../libdaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../libdaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../libdaisy/src/hid/usb.h **** #include <stdint.h>
   5:../libdaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../libdaisy/src/hid/usb.h **** 
   7:../libdaisy/src/hid/usb.h **** namespace daisy
   8:../libdaisy/src/hid/usb.h **** /** @addtogroup externals
   9:../libdaisy/src/hid/usb.h ****     @{
  10:../libdaisy/src/hid/usb.h **** */
  11:../libdaisy/src/hid/usb.h **** 
  12:../libdaisy/src/hid/usb.h **** {
  13:../libdaisy/src/hid/usb.h **** /** 
  14:../libdaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../libdaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../libdaisy/src/hid/usb.h ****     @date December 2019
  17:../libdaisy/src/hid/usb.h **** */
  18:../libdaisy/src/hid/usb.h **** class UsbHandle
  19:../libdaisy/src/hid/usb.h **** {
  20:../libdaisy/src/hid/usb.h ****   public:
  21:../libdaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../libdaisy/src/hid/usb.h ****     enum class Result
  23:../libdaisy/src/hid/usb.h ****     {
  24:../libdaisy/src/hid/usb.h ****         OK,
  25:../libdaisy/src/hid/usb.h ****         ERR,
  26:../libdaisy/src/hid/usb.h ****     };
  27:../libdaisy/src/hid/usb.h **** 
  28:../libdaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../libdaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../libdaisy/src/hid/usb.h ****     {
  31:../libdaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../libdaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../libdaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../libdaisy/src/hid/usb.h ****     };
  35:../libdaisy/src/hid/usb.h **** 
  36:../libdaisy/src/hid/usb.h **** 
  37:../libdaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../libdaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../libdaisy/src/hid/usb.h **** 
  40:../libdaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../libdaisy/src/hid/usb.h **** 
  42:../libdaisy/src/hid/usb.h ****     ~UsbHandle() {}
  69              		.loc 4 42 5 is_stmt 1 view .LVU5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 5


  70              		.loc 4 42 5 is_stmt 0 view .LVU6
  71              	.LBE790:
  72              	.LBB791:
  73              	.LBI791:
  74              		.file 5 "../libdaisy/src/per/adc.h"
   1:../libdaisy/src/per/adc.h **** #pragma once
   2:../libdaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../libdaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../libdaisy/src/per/adc.h **** #include <stdint.h>
   5:../libdaisy/src/per/adc.h **** #include <stdlib.h>
   6:../libdaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../libdaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../libdaisy/src/per/adc.h **** 
   9:../libdaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 14 /**< Maximum number of ADC channels */
  10:../libdaisy/src/per/adc.h **** 
  11:../libdaisy/src/per/adc.h **** namespace daisy
  12:../libdaisy/src/per/adc.h **** {
  13:../libdaisy/src/per/adc.h **** /** @addtogroup analog_digital_conversion
  14:../libdaisy/src/per/adc.h ****     @{
  15:../libdaisy/src/per/adc.h **** */
  16:../libdaisy/src/per/adc.h **** 
  17:../libdaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../libdaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../libdaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../libdaisy/src/per/adc.h **** */
  21:../libdaisy/src/per/adc.h **** 
  22:../libdaisy/src/per/adc.h **** /** Configuration Structure for a given channel */
  23:../libdaisy/src/per/adc.h **** struct AdcChannelConfig
  24:../libdaisy/src/per/adc.h **** {
  25:../libdaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  26:../libdaisy/src/per/adc.h ****     enum MuxPin
  27:../libdaisy/src/per/adc.h ****     {
  28:../libdaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  29:../libdaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  30:../libdaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  31:../libdaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  32:../libdaisy/src/per/adc.h ****     };
  33:../libdaisy/src/per/adc.h **** 
  34:../libdaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  35:../libdaisy/src/per/adc.h ****     \param pin Pin to init.
  36:../libdaisy/src/per/adc.h ****      */
  37:../libdaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  38:../libdaisy/src/per/adc.h **** 
  39:../libdaisy/src/per/adc.h ****     /** 
  40:../libdaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  41:../libdaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  42:../libdaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  43:../libdaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  44:../libdaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  45:../libdaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  46:../libdaisy/src/per/adc.h ****     \param mux_0 First mux pin
  47:../libdaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  48:../libdaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  49:../libdaisy/src/per/adc.h ****     \param adc_pin &
  50:../libdaisy/src/per/adc.h ****     */
  51:../libdaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  52:../libdaisy/src/per/adc.h ****                  size_t       mux_channels,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 6


  53:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  54:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  55:../libdaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  56:../libdaisy/src/per/adc.h **** 
  57:../libdaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  58:../libdaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  59:../libdaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  60:../libdaisy/src/per/adc.h **** };
  61:../libdaisy/src/per/adc.h **** 
  62:../libdaisy/src/per/adc.h **** /**
  63:../libdaisy/src/per/adc.h ****    Handler for analog to digital conversion
  64:../libdaisy/src/per/adc.h **** */
  65:../libdaisy/src/per/adc.h **** class AdcHandle
  66:../libdaisy/src/per/adc.h **** {
  67:../libdaisy/src/per/adc.h ****   public:
  68:../libdaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  69:../libdaisy/src/per/adc.h ****     enum OverSampling
  70:../libdaisy/src/per/adc.h ****     {
  71:../libdaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  72:../libdaisy/src/per/adc.h ****         OVS_4,    /**< & */
  73:../libdaisy/src/per/adc.h ****         OVS_8,    /**< & */
  74:../libdaisy/src/per/adc.h ****         OVS_16,   /**< & */
  75:../libdaisy/src/per/adc.h ****         OVS_32,   /**< & */
  76:../libdaisy/src/per/adc.h ****         OVS_64,   /**< & */
  77:../libdaisy/src/per/adc.h ****         OVS_128,  /**< & */
  78:../libdaisy/src/per/adc.h ****         OVS_256,  /**< & */
  79:../libdaisy/src/per/adc.h ****         OVS_512,  /**< & */
  80:../libdaisy/src/per/adc.h ****         OVS_1024, /**< & */
  81:../libdaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  82:../libdaisy/src/per/adc.h ****     };
  83:../libdaisy/src/per/adc.h **** 
  84:../libdaisy/src/per/adc.h ****     AdcHandle() {}
  85:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
  75              		.loc 5 85 5 is_stmt 1 view .LVU7
  76              		.loc 5 85 5 is_stmt 0 view .LVU8
  77              	.LBE791:
  78              	.LBB792:
  79              	.LBI792:
  80              		.file 6 "../libdaisy/src/hid/audio.h"
   1:../libdaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../libdaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../libdaisy/src/hid/audio.h **** 
   4:../libdaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../libdaisy/src/hid/audio.h **** 
   6:../libdaisy/src/hid/audio.h **** namespace daisy
   7:../libdaisy/src/hid/audio.h **** {
   8:../libdaisy/src/hid/audio.h **** class AudioHandle
   9:../libdaisy/src/hid/audio.h **** {
  10:../libdaisy/src/hid/audio.h ****   public:
  11:../libdaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  12:../libdaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  13:../libdaisy/src/hid/audio.h ****     struct Config
  14:../libdaisy/src/hid/audio.h ****     {
  15:../libdaisy/src/hid/audio.h ****         size_t                        blocksize;
  16:../libdaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  17:../libdaisy/src/hid/audio.h ****         float                         postgain;
  18:../libdaisy/src/hid/audio.h ****     };
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 7


  19:../libdaisy/src/hid/audio.h **** 
  20:../libdaisy/src/hid/audio.h ****     enum class Result
  21:../libdaisy/src/hid/audio.h ****     {
  22:../libdaisy/src/hid/audio.h ****         OK,
  23:../libdaisy/src/hid/audio.h ****         ERR,
  24:../libdaisy/src/hid/audio.h ****     };
  25:../libdaisy/src/hid/audio.h **** 
  26:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. Both arrays arranged by float[chn][sample] */
  27:../libdaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(float** in, float** out, size_t size);
  28:../libdaisy/src/hid/audio.h **** 
  29:../libdaisy/src/hid/audio.h ****     /** Non-Interleaving Callback format. 
  30:../libdaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  31:../libdaisy/src/hid/audio.h ****      */
  32:../libdaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(float* in,
  33:../libdaisy/src/hid/audio.h ****                                               float* out,
  34:../libdaisy/src/hid/audio.h ****                                               size_t size);
  35:../libdaisy/src/hid/audio.h **** 
  36:../libdaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  37:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
  81              		.loc 6 37 5 is_stmt 1 view .LVU9
  82              		.loc 6 37 5 is_stmt 0 view .LVU10
  83              	.LBE792:
  84              		.loc 2 22 19 view .LVU11
  85 0000 7047     		bx	lr
  86              		.cfi_endproc
  87              	.LFE1703:
  89              		.weak	_ZN5daisy9DaisySeedD1Ev
  90              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  91 0002 00BF     		.section	.text._ZN7daisysp4AdsrD2Ev,"axG",%progbits,_ZN7daisysp4AdsrD5Ev,comdat
  92              		.align	1
  93              		.p2align 2,,3
  94              		.weak	_ZN7daisysp4AdsrD2Ev
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv5-d16
 100              	_ZN7daisysp4AdsrD2Ev:
 101              	.LVL2:
 102              	.LFB1726:
 103              		.file 7 "../DaisySP/Source/Control/adsr.h"
   1:../DaisySP/Source/Control/adsr.h **** #pragma once
   2:../DaisySP/Source/Control/adsr.h **** #ifndef DSY_ADSR_H
   3:../DaisySP/Source/Control/adsr.h **** #define DSY_ADSR_H
   4:../DaisySP/Source/Control/adsr.h **** 
   5:../DaisySP/Source/Control/adsr.h **** #include <stdint.h>
   6:../DaisySP/Source/Control/adsr.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Control/adsr.h **** 
   8:../DaisySP/Source/Control/adsr.h **** namespace daisysp
   9:../DaisySP/Source/Control/adsr.h **** {
  10:../DaisySP/Source/Control/adsr.h **** /** Distinct stages that the phase of the envelope can be located in.
  11:../DaisySP/Source/Control/adsr.h **** - IDLE   = located at phase location 0, and not currently running
  12:../DaisySP/Source/Control/adsr.h **** - ATTACK  = First segment of envelope where phase moves from 0 to 1
  13:../DaisySP/Source/Control/adsr.h **** - DECAY   = Second segment of envelope where phase moves from 1 to SUSTAIN value
  14:../DaisySP/Source/Control/adsr.h **** - SUSTAIN = Third segment of envelope, stays at SUSTAIN level until GATE is released
  15:../DaisySP/Source/Control/adsr.h **** - RELEASE =     Fourth segment of envelop where phase moves from SUSTAIN to 0
  16:../DaisySP/Source/Control/adsr.h **** - LAST    =  Last segment, aka release
  17:../DaisySP/Source/Control/adsr.h **** */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 8


  18:../DaisySP/Source/Control/adsr.h **** enum
  19:../DaisySP/Source/Control/adsr.h **** {
  20:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_IDLE,
  21:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_ATTACK,
  22:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_DECAY,
  23:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_SUSTAIN,
  24:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_RELEASE,
  25:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_LAST,
  26:../DaisySP/Source/Control/adsr.h **** };
  27:../DaisySP/Source/Control/adsr.h **** 
  28:../DaisySP/Source/Control/adsr.h **** 
  29:../DaisySP/Source/Control/adsr.h **** /** adsr envelope module
  30:../DaisySP/Source/Control/adsr.h **** 
  31:../DaisySP/Source/Control/adsr.h **** Original author(s) : Paul Batchelor
  32:../DaisySP/Source/Control/adsr.h **** 
  33:../DaisySP/Source/Control/adsr.h **** Ported from Soundpipe by Ben Sergentanis, May 2020
  34:../DaisySP/Source/Control/adsr.h **** */
  35:../DaisySP/Source/Control/adsr.h **** class Adsr
  36:../DaisySP/Source/Control/adsr.h **** {
  37:../DaisySP/Source/Control/adsr.h ****   public:
  38:../DaisySP/Source/Control/adsr.h ****     Adsr() {}
  39:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 104              		.loc 7 39 5 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109              		.loc 7 39 14 is_stmt 0 view .LVU13
 110 0000 7047     		bx	lr
 111              		.cfi_endproc
 112              	.LFE1726:
 114              		.weak	_ZN7daisysp4AdsrD1Ev
 115              		.thumb_set _ZN7daisysp4AdsrD1Ev,_ZN7daisysp4AdsrD2Ev
 116 0002 00BF     		.section	.text._ZN7daisysp10OscillatorD2Ev,"axG",%progbits,_ZN7daisysp10OscillatorD5Ev,comdat
 117              		.align	1
 118              		.p2align 2,,3
 119              		.weak	_ZN7daisysp10OscillatorD2Ev
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv5-d16
 125              	_ZN7daisysp10OscillatorD2Ev:
 126              	.LVL3:
 127              	.LFB3340:
 128              		.file 8 "../DaisySP/Source/Synthesis/oscillator.h"
   1:../DaisySP/Source/Synthesis/oscillator.h **** #pragma once
   2:../DaisySP/Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
   3:../DaisySP/Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
   4:../DaisySP/Source/Synthesis/oscillator.h **** #include <stdint.h>
   5:../DaisySP/Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
   6:../DaisySP/Source/Synthesis/oscillator.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Synthesis/oscillator.h **** 
   8:../DaisySP/Source/Synthesis/oscillator.h **** namespace daisysp
   9:../DaisySP/Source/Synthesis/oscillator.h **** {
  10:../DaisySP/Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:../DaisySP/Source/Synthesis/oscillator.h **** */
  12:../DaisySP/Source/Synthesis/oscillator.h **** class Oscillator
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 9


  13:../DaisySP/Source/Synthesis/oscillator.h **** {
  14:../DaisySP/Source/Synthesis/oscillator.h ****   public:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     Oscillator() {}
  16:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 129              		.loc 8 16 5 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134              		.loc 8 16 20 is_stmt 0 view .LVU15
 135 0000 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE3340:
 139              		.weak	_ZN7daisysp10OscillatorD1Ev
 140              		.thumb_set _ZN7daisysp10OscillatorD1Ev,_ZN7daisysp10OscillatorD2Ev
 141 0002 00BF     		.section	.text._ZN7daisysp3SvfD2Ev,"axG",%progbits,_ZN7daisysp3SvfD5Ev,comdat
 142              		.align	1
 143              		.p2align 2,,3
 144              		.weak	_ZN7daisysp3SvfD2Ev
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv5-d16
 150              	_ZN7daisysp3SvfD2Ev:
 151              	.LVL4:
 152              	.LFB3356:
 153              		.file 9 "../DaisySP/Source/Filters/svf.h"
   1:../DaisySP/Source/Filters/svf.h **** #pragma once
   2:../DaisySP/Source/Filters/svf.h **** #ifndef DSY_SVF_H
   3:../DaisySP/Source/Filters/svf.h **** #define DSY_SVF_H
   4:../DaisySP/Source/Filters/svf.h **** 
   5:../DaisySP/Source/Filters/svf.h **** namespace daisysp
   6:../DaisySP/Source/Filters/svf.h **** {
   7:../DaisySP/Source/Filters/svf.h **** /**      Double Sampled, Stable State Variable Filter
   8:../DaisySP/Source/Filters/svf.h **** 
   9:../DaisySP/Source/Filters/svf.h **** Credit to Andrew Simper from musicdsp.org
  10:../DaisySP/Source/Filters/svf.h **** 
  11:../DaisySP/Source/Filters/svf.h **** This is his "State Variable Filter (Double Sampled, Stable)"
  12:../DaisySP/Source/Filters/svf.h **** 
  13:../DaisySP/Source/Filters/svf.h **** Additional thanks to Laurent de Soras for stability limit, and 
  14:../DaisySP/Source/Filters/svf.h **** Stefan Diedrichsen for the correct notch output
  15:../DaisySP/Source/Filters/svf.h **** 
  16:../DaisySP/Source/Filters/svf.h **** Ported by: Stephen Hensley
  17:../DaisySP/Source/Filters/svf.h **** */
  18:../DaisySP/Source/Filters/svf.h **** class Svf
  19:../DaisySP/Source/Filters/svf.h **** {
  20:../DaisySP/Source/Filters/svf.h ****   public:
  21:../DaisySP/Source/Filters/svf.h ****     Svf() {}
  22:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 154              		.loc 9 22 5 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 159              		.loc 9 22 13 is_stmt 0 view .LVU17
 160 0000 7047     		bx	lr
 161              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 10


 162              	.LFE3356:
 164              		.weak	_ZN7daisysp3SvfD1Ev
 165              		.thumb_set _ZN7daisysp3SvfD1Ev,_ZN7daisysp3SvfD2Ev
 166 0002 00BF     		.section	.text._ZN7daisysp9CrossFadeD2Ev,"axG",%progbits,_ZN7daisysp9CrossFadeD5Ev,comdat
 167              		.align	1
 168              		.p2align 2,,3
 169              		.weak	_ZN7daisysp9CrossFadeD2Ev
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv5-d16
 175              	_ZN7daisysp9CrossFadeD2Ev:
 176              	.LVL5:
 177              	.LFB3461:
 178              		.file 10 "../DaisySP/Source/Dynamics/crossfade.h"
   1:../DaisySP/Source/Dynamics/crossfade.h **** #pragma once
   2:../DaisySP/Source/Dynamics/crossfade.h **** #ifndef DSY_CROSSFADE_H
   3:../DaisySP/Source/Dynamics/crossfade.h **** #define DSY_CROSSFADE_H
   4:../DaisySP/Source/Dynamics/crossfade.h **** #include <stdint.h>
   5:../DaisySP/Source/Dynamics/crossfade.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Dynamics/crossfade.h **** 
   7:../DaisySP/Source/Dynamics/crossfade.h **** namespace daisysp
   8:../DaisySP/Source/Dynamics/crossfade.h **** {
   9:../DaisySP/Source/Dynamics/crossfade.h **** /** Curve applied to the CrossFade
  10:../DaisySP/Source/Dynamics/crossfade.h **** - LIN = linear
  11:../DaisySP/Source/Dynamics/crossfade.h **** - CPOW = constant power
  12:../DaisySP/Source/Dynamics/crossfade.h **** - LOG = logarithmic
  13:../DaisySP/Source/Dynamics/crossfade.h **** - EXP  exponential
  14:../DaisySP/Source/Dynamics/crossfade.h **** - LAST = end of enum (used for array indexing)
  15:../DaisySP/Source/Dynamics/crossfade.h **** */
  16:../DaisySP/Source/Dynamics/crossfade.h **** enum
  17:../DaisySP/Source/Dynamics/crossfade.h **** {
  18:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LIN,
  19:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_CPOW,
  20:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LOG,
  21:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_EXP,
  22:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LAST,
  23:../DaisySP/Source/Dynamics/crossfade.h **** };
  24:../DaisySP/Source/Dynamics/crossfade.h **** 
  25:../DaisySP/Source/Dynamics/crossfade.h **** /** Performs a CrossFade between two signals
  26:../DaisySP/Source/Dynamics/crossfade.h **** 
  27:../DaisySP/Source/Dynamics/crossfade.h ****     Original author: Paul Batchelor
  28:../DaisySP/Source/Dynamics/crossfade.h **** 
  29:../DaisySP/Source/Dynamics/crossfade.h ****     Ported from Soundpipe by Andrew Ikenberry
  30:../DaisySP/Source/Dynamics/crossfade.h **** 
  31:../DaisySP/Source/Dynamics/crossfade.h ****     added curve option for constant power, etc.
  32:../DaisySP/Source/Dynamics/crossfade.h **** */
  33:../DaisySP/Source/Dynamics/crossfade.h **** class CrossFade
  34:../DaisySP/Source/Dynamics/crossfade.h **** {
  35:../DaisySP/Source/Dynamics/crossfade.h ****   public:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     CrossFade() {}
  37:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 179              		.loc 10 37 5 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 11


 184              		.loc 10 37 19 is_stmt 0 view .LVU19
 185 0000 7047     		bx	lr
 186              		.cfi_endproc
 187              	.LFE3461:
 189              		.weak	_ZN7daisysp9CrossFadeD1Ev
 190              		.thumb_set _ZN7daisysp9CrossFadeD1Ev,_ZN7daisysp9CrossFadeD2Ev
 191 0002 00BF     		.section	.text._ZN7daisysp7DcBlockD2Ev,"axG",%progbits,_ZN7daisysp7DcBlockD5Ev,comdat
 192              		.align	1
 193              		.p2align 2,,3
 194              		.weak	_ZN7daisysp7DcBlockD2Ev
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu fpv5-d16
 200              	_ZN7daisysp7DcBlockD2Ev:
 201              	.LVL6:
 202              	.LFB3753:
 203              		.file 11 "../DaisySP/Source/Utility/dcblock.h"
   1:../DaisySP/Source/Utility/dcblock.h **** 
   2:../DaisySP/Source/Utility/dcblock.h **** #pragma once
   3:../DaisySP/Source/Utility/dcblock.h **** #ifndef DSY_DCBLOCK_H
   4:../DaisySP/Source/Utility/dcblock.h **** #define DSY_DCBLOCK_H
   5:../DaisySP/Source/Utility/dcblock.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Utility/dcblock.h **** 
   7:../DaisySP/Source/Utility/dcblock.h **** namespace daisysp
   8:../DaisySP/Source/Utility/dcblock.h **** {
   9:../DaisySP/Source/Utility/dcblock.h **** /** Removes DC component of a signal
  10:../DaisySP/Source/Utility/dcblock.h ****     */
  11:../DaisySP/Source/Utility/dcblock.h **** class DcBlock
  12:../DaisySP/Source/Utility/dcblock.h **** {
  13:../DaisySP/Source/Utility/dcblock.h ****   public:
  14:../DaisySP/Source/Utility/dcblock.h ****     DcBlock(){};
  15:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 204              		.loc 11 15 5 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 209              		.loc 11 15 16 is_stmt 0 view .LVU21
 210 0000 7047     		bx	lr
 211              		.cfi_endproc
 212              	.LFE3753:
 214              		.weak	_ZN7daisysp7DcBlockD1Ev
 215              		.thumb_set _ZN7daisysp7DcBlockD1Ev,_ZN7daisysp7DcBlockD2Ev
 216 0002 00BF     		.section	.text._ZN7daisysp9EnvFollowD2Ev,"axG",%progbits,_ZN7daisysp9EnvFollowD5Ev,comdat
 217              		.align	1
 218              		.p2align 2,,3
 219              		.weak	_ZN7daisysp9EnvFollowD2Ev
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu fpv5-d16
 225              	_ZN7daisysp9EnvFollowD2Ev:
 226              	.LVL7:
 227              	.LFB3940:
 228              		.file 12 "envFollow.h"
   1:envFollow.h   **** // Copyright 2021 Adam Fulford
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 12


   2:envFollow.h   **** // 
   3:envFollow.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:envFollow.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:envFollow.h   **** // in the Software without restriction, including without limitation the rights
   6:envFollow.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:envFollow.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:envFollow.h   **** // furnished to do so, subject to the following conditions:
   9:envFollow.h   **** // 
  10:envFollow.h   **** // The above copyright notice and this permission notice shall be included in
  11:envFollow.h   **** // all copies or substantial portions of the Software.
  12:envFollow.h   **** // 
  13:envFollow.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:envFollow.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:envFollow.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:envFollow.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:envFollow.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:envFollow.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:envFollow.h   **** // THE SOFTWARE.
  20:envFollow.h   **** // 
  21:envFollow.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:envFollow.h   **** 
  23:envFollow.h   **** #ifndef ENV_FOLLOW_H
  24:envFollow.h   **** #define ENV_FOLLOW_H
  25:envFollow.h   **** #include <math.h>
  26:envFollow.h   **** 
  27:envFollow.h   **** namespace daisysp
  28:envFollow.h   **** {
  29:envFollow.h   **** 
  30:envFollow.h   **** class EnvFollow
  31:envFollow.h   **** {
  32:envFollow.h   ****     private:
  33:envFollow.h   ****     
  34:envFollow.h   ****     float avg;      //exp average of input
  35:envFollow.h   ****     float pos_sample;   //positive sample
  36:envFollow.h   ****     float sample_noDC;  //no DC sample
  37:envFollow.h   ****     float avg_env;  //average envelope
  38:envFollow.h   ****     float w;        //weighting
  39:envFollow.h   ****     float w_env;    //envelope weighting
  40:envFollow.h   **** 
  41:envFollow.h   ****     public:
  42:envFollow.h   **** 
  43:envFollow.h   ****     EnvFollow() //default constructor
  44:envFollow.h   ****     {
  45:envFollow.h   ****         avg = 0.0f;      //exp average of input
  46:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
  47:envFollow.h   ****         avg_env = 0.0f;  //average envelope
  48:envFollow.h   ****         w = 0.0001f;        //weighting
  49:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
  50:envFollow.h   ****         sample_noDC = 0.0f;
  51:envFollow.h   ****     }  
  52:envFollow.h   ****     ~EnvFollow() {}
 229              		.loc 12 52 5 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              		.loc 12 52 19 is_stmt 0 view .LVU23
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 13


 235 0000 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE3940:
 239              		.weak	_ZN7daisysp9EnvFollowD1Ev
 240              		.thumb_set _ZN7daisysp9EnvFollowD1Ev,_ZN7daisysp9EnvFollowD2Ev
 241 0002 00BF     		.section	.text._ZN8TaptempoD2Ev,"axG",%progbits,_ZN8TaptempoD5Ev,comdat
 242              		.align	1
 243              		.p2align 2,,3
 244              		.weak	_ZN8TaptempoD2Ev
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu fpv5-d16
 250              	_ZN8TaptempoD2Ev:
 251              	.LVL8:
 252              	.LFB3947:
 253              		.file 13 "taptempo.h"
   1:taptempo.h    **** // Copyright 2021 Adam Fulford
   2:taptempo.h    **** // 
   3:taptempo.h    **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:taptempo.h    **** // of this software and associated documentation files (the "Software"), to deal
   5:taptempo.h    **** // in the Software without restriction, including without limitation the rights
   6:taptempo.h    **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:taptempo.h    **** // copies of the Software, and to permit persons to whom the Software is
   8:taptempo.h    **** // furnished to do so, subject to the following conditions:
   9:taptempo.h    **** // 
  10:taptempo.h    **** // The above copyright notice and this permission notice shall be included in
  11:taptempo.h    **** // all copies or substantial portions of the Software.
  12:taptempo.h    **** // 
  13:taptempo.h    **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:taptempo.h    **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:taptempo.h    **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:taptempo.h    **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:taptempo.h    **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:taptempo.h    **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:taptempo.h    **** // THE SOFTWARE.
  20:taptempo.h    **** // 
  21:taptempo.h    **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:taptempo.h    **** 
  23:taptempo.h    **** #ifndef TAP_TEMPO_H
  24:taptempo.h    **** #define TAP_TEMPO_H
  25:taptempo.h    **** 
  26:taptempo.h    **** #include "daisysp.h"
  27:taptempo.h    **** #include "daisy_seed.h"
  28:taptempo.h    **** 
  29:taptempo.h    **** using namespace daisy;
  30:taptempo.h    **** 
  31:taptempo.h    **** class Taptempo
  32:taptempo.h    **** {
  33:taptempo.h    ****     private:
  34:taptempo.h    ****         uint32_t mintap_,maxtap_;
  35:taptempo.h    ****         uint32_t currentTime_,lastTime_,lastTapLength_,tapLength_;
  36:taptempo.h    ****         uint32_t clockLength_, lastClockLength_, clockThresh_;
  37:taptempo.h    ****         bool tapflag_;
  38:taptempo.h    ****         float tap_tolerance_,tempo_,tapRatio_;
  39:taptempo.h    **** 
  40:taptempo.h    ****     public:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 14


  41:taptempo.h    **** 
  42:taptempo.h    ****     Taptempo()  //default constructor
  43:taptempo.h    ****     {
  44:taptempo.h    ****         tapflag_ = false;
  45:taptempo.h    ****         tap_tolerance_ = 1.25f;
  46:taptempo.h    ****         maxtap_ = 2000;
  47:taptempo.h    ****         mintap_ = 80;
  48:taptempo.h    ****         lastTapLength_ = 0;
  49:taptempo.h    ****         tempo_ = 500.0f;
  50:taptempo.h    ****         lastTime_ = 0;
  51:taptempo.h    ****         currentTime_ = 0;
  52:taptempo.h    ****         tapRatio_ = 1.0f;
  53:taptempo.h    ****         clockLength_ = 0;
  54:taptempo.h    ****         lastClockLength_ = 0;
  55:taptempo.h    ****         clockThresh_ = 10; //ms change
  56:taptempo.h    ****     }
  57:taptempo.h    ****     ~Taptempo() {}
 254              		.loc 13 57 5 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259              		.loc 13 57 18 is_stmt 0 view .LVU25
 260 0000 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE3947:
 264              		.weak	_ZN8TaptempoD1Ev
 265              		.thumb_set _ZN8TaptempoD1Ev,_ZN8TaptempoD2Ev
 266 0002 00BF     		.section	.text._ZN8TempoLEDD2Ev,"axG",%progbits,_ZN8TempoLEDD5Ev,comdat
 267              		.align	1
 268              		.p2align 2,,3
 269              		.weak	_ZN8TempoLEDD2Ev
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv5-d16
 275              	_ZN8TempoLEDD2Ev:
 276              	.LVL9:
 277              	.LFB3970:
 278              		.file 14 "LEDs.h"
   1:LEDs.h        **** // Copyright 2021 Adam Fulford
   2:LEDs.h        **** // 
   3:LEDs.h        **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:LEDs.h        **** // of this software and associated documentation files (the "Software"), to deal
   5:LEDs.h        **** // in the Software without restriction, including without limitation the rights
   6:LEDs.h        **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:LEDs.h        **** // copies of the Software, and to permit persons to whom the Software is
   8:LEDs.h        **** // furnished to do so, subject to the following conditions:
   9:LEDs.h        **** // 
  10:LEDs.h        **** // The above copyright notice and this permission notice shall be included in
  11:LEDs.h        **** // all copies or substantial portions of the Software.
  12:LEDs.h        **** // 
  13:LEDs.h        **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:LEDs.h        **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:LEDs.h        **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:LEDs.h        **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:LEDs.h        **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 15


  18:LEDs.h        **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:LEDs.h        **** // THE SOFTWARE.
  20:LEDs.h        **** // 
  21:LEDs.h        **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:LEDs.h        **** 
  23:LEDs.h        **** #ifndef LEDS_H
  24:LEDs.h        **** #define LEDS_H
  25:LEDs.h        **** 
  26:LEDs.h        **** #include "daisysp.h"
  27:LEDs.h        **** #include "daisy_seed.h"
  28:LEDs.h        **** #include "oscillator_p.h"
  29:LEDs.h        **** #include "constants.h"
  30:LEDs.h        **** 
  31:LEDs.h        **** using namespace daisysp;
  32:LEDs.h        **** using namespace daisy;
  33:LEDs.h        **** 
  34:LEDs.h        **** class TempoLED
  35:LEDs.h        **** {
  36:LEDs.h        **** 
  37:LEDs.h        **** Led led;
  38:LEDs.h        **** Oscillator_p blink;
  39:LEDs.h        **** TempoDivs div_last_;
  40:LEDs.h        **** //int phaseCounter_;
  41:LEDs.h        **** //int div_int;
  42:LEDs.h        **** //float phase_last_;
  43:LEDs.h        **** float GetDivInt(TempoDivs div);
  44:LEDs.h        **** 
  45:LEDs.h        **** public:
  46:LEDs.h        **** 
  47:LEDs.h        **** TempoLED(){}
  48:LEDs.h        **** ~TempoLED(){}   //destructor
 279              		.loc 14 48 1 is_stmt 1 view -0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284              	.LBB793:
 285              	.LBI793:
 286              		.file 15 "oscillator_p.h"
   1:oscillator_p.h **** #pragma once
   2:oscillator_p.h **** #ifndef DSY_OSCILLATOR_P_H
   3:oscillator_p.h **** #define DSY_OSCILLATOR_P_H
   4:oscillator_p.h **** #include <stdint.h>
   5:oscillator_p.h **** #include "Utility/dsp.h"
   6:oscillator_p.h **** #ifdef __cplusplus
   7:oscillator_p.h **** 
   8:oscillator_p.h **** namespace daisysp
   9:oscillator_p.h **** {
  10:oscillator_p.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:oscillator_p.h **** */
  12:oscillator_p.h **** class Oscillator_p
  13:oscillator_p.h **** {
  14:oscillator_p.h ****   public:
  15:oscillator_p.h ****     Oscillator_p() {}
  16:oscillator_p.h ****     ~Oscillator_p() {}
 287              		.loc 15 16 5 view .LVU27
 288              		.loc 15 16 5 is_stmt 0 view .LVU28
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 16


 289              	.LBE793:
 290              	.LBB794:
 291              	.LBI794:
 292              		.file 16 "../libdaisy/src/hid/led.h"
   1:../libdaisy/src/hid/led.h **** 
   2:../libdaisy/src/hid/led.h **** #pragma once
   3:../libdaisy/src/hid/led.h **** #ifndef DSY_LED_H
   4:../libdaisy/src/hid/led.h **** #define DSY_LED_H
   5:../libdaisy/src/hid/led.h **** #include "daisy_core.h"
   6:../libdaisy/src/hid/led.h **** #include "per/gpio.h"
   7:../libdaisy/src/hid/led.h **** 
   8:../libdaisy/src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../libdaisy/src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../libdaisy/src/hid/led.h **** */
  11:../libdaisy/src/hid/led.h **** 
  12:../libdaisy/src/hid/led.h **** namespace daisy
  13:../libdaisy/src/hid/led.h **** {
  14:../libdaisy/src/hid/led.h **** /**
  15:../libdaisy/src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../libdaisy/src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../libdaisy/src/hid/led.h ****     @author shensley
  18:../libdaisy/src/hid/led.h ****     @date March 2020
  19:../libdaisy/src/hid/led.h ****     @ingroup feedback
  20:../libdaisy/src/hid/led.h **** */
  21:../libdaisy/src/hid/led.h **** class Led
  22:../libdaisy/src/hid/led.h **** {
  23:../libdaisy/src/hid/led.h ****   public:
  24:../libdaisy/src/hid/led.h ****     Led() {}
  25:../libdaisy/src/hid/led.h ****     ~Led() {}
 293              		.loc 16 25 5 is_stmt 1 view .LVU29
 294              		.loc 16 25 5 is_stmt 0 view .LVU30
 295              	.LBE794:
 296              		.loc 14 48 13 view .LVU31
 297 0000 7047     		bx	lr
 298              		.cfi_endproc
 299              	.LFE3970:
 301              		.weak	_ZN8TempoLEDD1Ev
 302              		.thumb_set _ZN8TempoLEDD1Ev,_ZN8TempoLEDD2Ev
 303 0002 00BF     		.section	.text._ZN9ButtonLEDD2Ev,"axG",%progbits,_ZN9ButtonLEDD5Ev,comdat
 304              		.align	1
 305              		.p2align 2,,3
 306              		.weak	_ZN9ButtonLEDD2Ev
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 310              		.fpu fpv5-d16
 312              	_ZN9ButtonLEDD2Ev:
 313              	.LVL10:
 314              	.LFB3977:
  49:LEDs.h        **** 
  50:LEDs.h        **** void init(dsy_gpio_pin ledpin, float samplerate);  //led pin number
  51:LEDs.h        **** 
  52:LEDs.h        **** void setTempo(float tempo);
  53:LEDs.h        **** 
  54:LEDs.h        **** void resetPhase();
  55:LEDs.h        **** 
  56:LEDs.h        **** void resetPhaseCounter();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 17


  57:LEDs.h        **** 
  58:LEDs.h        **** //update using oscillator
  59:LEDs.h        **** void update();
  60:LEDs.h        **** 
  61:LEDs.h        **** //update using external sync
  62:LEDs.h        **** void update(TempoDivs div, float phase);
  63:LEDs.h        **** 
  64:LEDs.h        **** void LED_set(float brightness);
  65:LEDs.h        **** 
  66:LEDs.h        **** bool isEOC();
  67:LEDs.h        **** 
  68:LEDs.h        **** //high if just had a div change
  69:LEDs.h        **** //bool divChange();
  70:LEDs.h        **** 
  71:LEDs.h        **** float GetPhase() { return blink.GetPhase(); }
  72:LEDs.h        **** 
  73:LEDs.h        **** };
  74:LEDs.h        **** 
  75:LEDs.h        **** class ButtonLED    //button with status LED
  76:LEDs.h        **** {
  77:LEDs.h        ****     public:
  78:LEDs.h        ****     ButtonLED() {}
  79:LEDs.h        ****     ~ButtonLED() {}
 315              		.loc 14 79 5 is_stmt 1 view -0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              		@ link register save eliminated.
 320              	.LBB795:
 321              	.LBI795:
 322              		.loc 16 25 5 view .LVU33
 323              		.loc 16 25 5 is_stmt 0 view .LVU34
 324              	.LBE795:
 325              	.LBB796:
 326              	.LBI796:
 327              		.loc 1 41 5 is_stmt 1 view .LVU35
 328              		.loc 1 41 5 is_stmt 0 view .LVU36
 329              	.LBE796:
 330              		.loc 14 79 19 view .LVU37
 331 0000 7047     		bx	lr
 332              		.cfi_endproc
 333              	.LFE3977:
 335              		.weak	_ZN9ButtonLEDD1Ev
 336              		.thumb_set _ZN9ButtonLEDD1Ev,_ZN9ButtonLEDD2Ev
 337 0002 00BF     		.section	.text._ZN10DelayMultiD2Ev,"axG",%progbits,_ZN10DelayMultiD5Ev,comdat
 338              		.align	1
 339              		.p2align 2,,3
 340              		.weak	_ZN10DelayMultiD2Ev
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu fpv5-d16
 346              	_ZN10DelayMultiD2Ev:
 347              	.LVL11:
 348              	.LFB3983:
 349              		.file 17 "DelayMulti.h"
   1:DelayMulti.h  **** // Copyright 2021 Adam Fulford
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 18


   2:DelayMulti.h  **** // 
   3:DelayMulti.h  **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:DelayMulti.h  **** // of this software and associated documentation files (the "Software"), to deal
   5:DelayMulti.h  **** // in the Software without restriction, including without limitation the rights
   6:DelayMulti.h  **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:DelayMulti.h  **** // copies of the Software, and to permit persons to whom the Software is
   8:DelayMulti.h  **** // furnished to do so, subject to the following conditions:
   9:DelayMulti.h  **** // 
  10:DelayMulti.h  **** // The above copyright notice and this permission notice shall be included in
  11:DelayMulti.h  **** // all copies or substantial portions of the Software.
  12:DelayMulti.h  **** // 
  13:DelayMulti.h  **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:DelayMulti.h  **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:DelayMulti.h  **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:DelayMulti.h  **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:DelayMulti.h  **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:DelayMulti.h  **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:DelayMulti.h  **** // THE SOFTWARE.
  20:DelayMulti.h  **** // 
  21:DelayMulti.h  **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:DelayMulti.h  **** 
  23:DelayMulti.h  **** #ifndef DELAYMULTI_H
  24:DelayMulti.h  **** #define DELAYMULTI_H
  25:DelayMulti.h  **** 
  26:DelayMulti.h  **** #include "daisysp.h"
  27:DelayMulti.h  **** #include "daisy_seed.h"
  28:DelayMulti.h  **** #include "delayline_multitap.h" //modified delayline
  29:DelayMulti.h  **** #include "constants.h"
  30:DelayMulti.h  **** #include "LEDs.h"
  31:DelayMulti.h  **** #include "scale.h"
  32:DelayMulti.h  **** 
  33:DelayMulti.h  **** using namespace daisysp;
  34:DelayMulti.h  **** using namespace daisy;
  35:DelayMulti.h  **** 
  36:DelayMulti.h  **** constexpr size_t numHeads{1};
  37:DelayMulti.h  **** //constexpr size_t numHeadsSets{2};
  38:DelayMulti.h  **** constexpr size_t totalNumHeads{2};
  39:DelayMulti.h  **** 
  40:DelayMulti.h  **** constexpr float delaytime_threshold{50};   //in samples
  41:DelayMulti.h  **** constexpr uint32_t timethresh{25}; //length of wait before triggering xfade (used to be 75)
  42:DelayMulti.h  **** 
  43:DelayMulti.h  **** class DelayMulti
  44:DelayMulti.h  **** {
  45:DelayMulti.h  **** public:
  46:DelayMulti.h  **** DelayLineMultiTap <float, static_cast<size_t>(48000 * 36.0f)>  *del; //36 second buffer
  47:DelayMulti.h  **** //tempoLED
  48:DelayMulti.h  **** TempoLED tempoled;
  49:DelayMulti.h  **** DelayMulti() {}
  50:DelayMulti.h  **** ~DelayMulti() {}
 350              		.loc 17 50 1 is_stmt 1 view -0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354              		@ link register save eliminated.
 355              	.LBB797:
 356              	.LBI797:
  48:LEDs.h        **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 19


 357              		.loc 14 48 1 view .LVU39
 358              	.LBB798:
 359              	.LBI798:
 360              		.loc 15 16 5 view .LVU40
 361              		.loc 15 16 5 is_stmt 0 view .LVU41
 362              	.LBE798:
 363              	.LBB799:
 364              	.LBI799:
 365              		.loc 16 25 5 is_stmt 1 view .LVU42
 366              		.loc 16 25 5 is_stmt 0 view .LVU43
 367              	.LBE799:
 368              	.LBE797:
 369              		.loc 17 50 16 view .LVU44
 370 0000 7047     		bx	lr
 371              		.cfi_endproc
 372              	.LFE3983:
 374              		.weak	_ZN10DelayMultiD1Ev
 375              		.thumb_set _ZN10DelayMultiD1Ev,_ZN10DelayMultiD2Ev
 376 0002 00BF     		.section	.text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev,"axG",%progbits,_ZN7daisysp17DelayL
 377              		.align	1
 378              		.p2align 2,,3
 379              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 383              		.fpu fpv5-d16
 385              	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:
 386              	.LVL12:
 387              	.LFB4912:
 388              		.file 18 "delayline_multitap.h"
   1:delayline_multitap.h **** // Copyright 2021 Adam Fulford
   2:delayline_multitap.h **** // 
   3:delayline_multitap.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_multitap.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_multitap.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_multitap.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_multitap.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_multitap.h **** // furnished to do so, subject to the following conditions:
   9:delayline_multitap.h **** // 
  10:delayline_multitap.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_multitap.h **** // all copies or substantial portions of the Software.
  12:delayline_multitap.h **** // 
  13:delayline_multitap.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_multitap.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_multitap.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_multitap.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_multitap.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_multitap.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_multitap.h **** // THE SOFTWARE.
  20:delayline_multitap.h **** // 
  21:delayline_multitap.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_multitap.h **** 
  23:delayline_multitap.h **** #pragma once
  24:delayline_multitap.h **** #ifndef DSY_DELAY_MULTITAP_H
  25:delayline_multitap.h **** #define DSY_DELAY_MULTITAP_H
  26:delayline_multitap.h **** #include <stdlib.h>
  27:delayline_multitap.h **** #include <stdint.h>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 20


  28:delayline_multitap.h **** #include <array>
  29:delayline_multitap.h **** namespace daisysp
  30:delayline_multitap.h **** {
  31:delayline_multitap.h **** /** Mulitap Delay line.
  32:delayline_multitap.h **** 
  33:delayline_multitap.h **** DelayLine<float, SAMPLE_RATE> del;
  34:delayline_multitap.h **** 
  35:delayline_multitap.h **** By: Adam Fulford
  36:delayline_multitap.h **** */
  37:delayline_multitap.h **** template <typename T, size_t max_size>
  38:delayline_multitap.h **** class DelayLineMultiTap
  39:delayline_multitap.h **** {
  40:delayline_multitap.h **** private:
  41:delayline_multitap.h ****     size_t write_ptr_;
  42:delayline_multitap.h ****     std::array<size_t, 16> delay_;    //array to hold delay times for upto 16 read heads.
  43:delayline_multitap.h ****     std::array<float, 16> frac_;
  44:delayline_multitap.h ****     T      line_[max_size];
  45:delayline_multitap.h ****     size_t num_heads_;
  46:delayline_multitap.h **** 
  47:delayline_multitap.h ****   public:
  48:delayline_multitap.h ****     DelayLineMultiTap() 
  49:delayline_multitap.h ****     {
  50:delayline_multitap.h ****        // num_heads_ = 16; //Why can't I do this in the default constructor?! Compiles but does not
  51:delayline_multitap.h ****     }
  52:delayline_multitap.h ****     ~DelayLineMultiTap() {}
 389              		.loc 18 52 5 is_stmt 1 view -0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              		@ link register save eliminated.
 394              		.loc 18 52 27 is_stmt 0 view .LVU46
 395 0000 7047     		bx	lr
 396              		.cfi_endproc
 397              	.LFE4912:
 399              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 400              		.thumb_set _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev,_ZN7daisysp17DelayLineMultiTapIfLj17280
 401 0002 00BF     		.section	.text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev,"axG",%progbits,_ZN7daisysp16DelayLin
 402              		.align	1
 403              		.p2align 2,,3
 404              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu fpv5-d16
 410              	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:
 411              	.LVL13:
 412              	.LFB4915:
 413              		.file 19 "delayline_reverse.h"
   1:delayline_reverse.h **** // Copyright 2021 Adam Fulford
   2:delayline_reverse.h **** // 
   3:delayline_reverse.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_reverse.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_reverse.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_reverse.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_reverse.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_reverse.h **** // furnished to do so, subject to the following conditions:
   9:delayline_reverse.h **** // 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 21


  10:delayline_reverse.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_reverse.h **** // all copies or substantial portions of the Software.
  12:delayline_reverse.h **** // 
  13:delayline_reverse.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_reverse.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_reverse.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_reverse.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_reverse.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_reverse.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_reverse.h **** // THE SOFTWARE.
  20:delayline_reverse.h **** // 
  21:delayline_reverse.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_reverse.h **** 
  23:delayline_reverse.h **** #pragma once
  24:delayline_reverse.h **** #ifndef DSY_DELAY_REVERSE_H
  25:delayline_reverse.h **** #define DSY_DELAY_REVERSE_H
  26:delayline_reverse.h **** #include <stdlib.h>
  27:delayline_reverse.h **** #include <stdint.h>
  28:delayline_reverse.h **** #include <math.h>
  29:delayline_reverse.h **** namespace daisysp
  30:delayline_reverse.h **** {
  31:delayline_reverse.h **** /** Reverse Delay line
  32:delayline_reverse.h **** By: Adam Fulford
  33:delayline_reverse.h **** */
  34:delayline_reverse.h **** template <typename T, size_t max_size>
  35:delayline_reverse.h **** class DelayLineReverse
  36:delayline_reverse.h **** {
  37:delayline_reverse.h ****   public:
  38:delayline_reverse.h ****     DelayLineReverse() {}
  39:delayline_reverse.h ****     ~DelayLineReverse() {}
 414              		.loc 19 39 5 is_stmt 1 view -0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              		@ link register save eliminated.
 419              		.loc 19 39 26 is_stmt 0 view .LVU48
 420 0000 7047     		bx	lr
 421              		.cfi_endproc
 422              	.LFE4915:
 424              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 425              		.thumb_set _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev,_ZN7daisysp16DelayLineReverseIfLj600000EE
 426 0002 00BF     		.section	.text._Z10InitDelaysf,"ax",%progbits
 427              		.align	1
 428              		.p2align 2,,3
 429              		.global	_Z10InitDelaysf
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 433              		.fpu fpv5-d16
 435              	_Z10InitDelaysf:
 436              	.LVL14:
 437              	.LFB4309:
 438              		.file 20 "Veno-Echo.cpp"
   1:Veno-Echo.cpp **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.cpp **** // 
   3:Veno-Echo.cpp **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.cpp **** // of this software and associated documentation files (the "Software"), to deal
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 22


   5:Veno-Echo.cpp **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.cpp **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.cpp **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.cpp **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.cpp **** // 
  10:Veno-Echo.cpp **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.cpp **** // all copies or substantial portions of the Software.
  12:Veno-Echo.cpp **** // 
  13:Veno-Echo.cpp **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.cpp **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.cpp **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.cpp **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.cpp **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.cpp **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.cpp **** // THE SOFTWARE.
  20:Veno-Echo.cpp **** // 
  21:Veno-Echo.cpp **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.cpp **** 
  23:Veno-Echo.cpp **** #include "Veno-Echo.h"
  24:Veno-Echo.cpp **** #include "QSPI_Settings.h"
  25:Veno-Echo.cpp **** #include "daisysp.h"
  26:Veno-Echo.cpp **** #include "delayline_multitap.h" //modified delayline
  27:Veno-Echo.cpp **** #include "delayline_reverse.h"  //reverse delayline
  28:Veno-Echo.cpp **** #include "envFollow.h"
  29:Veno-Echo.cpp **** #include "scale.h"
  30:Veno-Echo.cpp **** #include "constants.h"
  31:Veno-Echo.cpp **** #include "taptempo.h"
  32:Veno-Echo.cpp **** #include "LEDs.h"
  33:Veno-Echo.cpp **** #include "DelayMulti.h"
  34:Veno-Echo.cpp **** #include <math.h>
  35:Veno-Echo.cpp **** #include <string.h>
  36:Veno-Echo.cpp **** #include <atomic>
  37:Veno-Echo.cpp **** 
  38:Veno-Echo.cpp **** using namespace daisysp;
  39:Veno-Echo.cpp **** 
  40:Veno-Echo.cpp **** static Svf LPF_L;
  41:Veno-Echo.cpp **** static Svf LPF_R;
  42:Veno-Echo.cpp **** static Svf HPF_L;
  43:Veno-Echo.cpp **** static Svf HPF_R;
  44:Veno-Echo.cpp **** 
  45:Veno-Echo.cpp **** static Svf LPF_L_post;
  46:Veno-Echo.cpp **** static Svf LPF_R_post;
  47:Veno-Echo.cpp **** static Svf HPF_L_post;
  48:Veno-Echo.cpp **** static Svf HPF_R_post;
  49:Veno-Echo.cpp **** 
  50:Veno-Echo.cpp **** static Oscillator lfo;
  51:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
  52:Veno-Echo.cpp **** 
  53:Veno-Echo.cpp **** static DcBlock DcBlock_LFB, DcBlock_RFB; //DC blocks
  54:Veno-Echo.cpp **** 
  55:Veno-Echo.cpp **** // Declare a DelayLine of MAX_DELAY number of floats.
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsL;
  57:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
  58:Veno-Echo.cpp **** 
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsL_REV; //10 s
  60:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
  61:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 23


  62:Veno-Echo.cpp **** struct DelayRev
  63:Veno-Echo.cpp **** {
  64:Veno-Echo.cpp ****     DelayLineReverse <float, static_cast<size_t>(maxRevDelay*2.5f)>  *del;
  65:Veno-Echo.cpp ****     float currentDelay_;
  66:Veno-Echo.cpp ****     //float delayTarget;
  67:Veno-Echo.cpp **** 
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
  69:Veno-Echo.cpp ****     {
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
  71:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
  72:Veno-Echo.cpp ****         {
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
  75:Veno-Echo.cpp ****             //del -> Reset();
  76:Veno-Echo.cpp ****         }
  77:Veno-Echo.cpp ****     }
  78:Veno-Echo.cpp **** 
  79:Veno-Echo.cpp ****     float Read()
  80:Veno-Echo.cpp ****     {
  81:Veno-Echo.cpp ****         //read from head1
  82:Veno-Echo.cpp ****         float read = del -> ReadRev();
  83:Veno-Echo.cpp ****         return read;
  84:Veno-Echo.cpp ****     }
  85:Veno-Echo.cpp **** 
  86:Veno-Echo.cpp ****     float FwdFbk()
  87:Veno-Echo.cpp ****     {
  88:Veno-Echo.cpp ****         float read = del -> ReadFwd();
  89:Veno-Echo.cpp ****         return read;
  90:Veno-Echo.cpp ****     }
  91:Veno-Echo.cpp **** 
  92:Veno-Echo.cpp ****     void Write(float in)    //sort out feedback in audiocallback
  93:Veno-Echo.cpp ****     {
  94:Veno-Echo.cpp ****         del -> Write(in);
  95:Veno-Echo.cpp ****     }
  96:Veno-Echo.cpp **** };
  97:Veno-Echo.cpp **** 
  98:Veno-Echo.cpp **** DelayMulti delayL,delayR;
  99:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 100:Veno-Echo.cpp **** 
 101:Veno-Echo.cpp **** //LED objects:
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 103:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 104:Veno-Echo.cpp **** 
 105:Veno-Echo.cpp **** 
 106:Veno-Echo.cpp **** float delayTimeL_CV{};
 107:Veno-Echo.cpp **** float delayTimeR_CV{};
 108:Veno-Echo.cpp **** 
 109:Veno-Echo.cpp **** float feedbackL{};
 110:Veno-Echo.cpp **** float feedbackL_CV{};
 111:Veno-Echo.cpp **** 
 112:Veno-Echo.cpp **** float feedbackR{};
 113:Veno-Echo.cpp **** float feedbackR_CV{};
 114:Veno-Echo.cpp **** 
 115:Veno-Echo.cpp **** float crossfeedback{};
 116:Veno-Echo.cpp **** float crossfeedback_CV{};
 117:Veno-Echo.cpp **** 
 118:Veno-Echo.cpp **** float drywet{0.5};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 24


 119:Veno-Echo.cpp **** float drywet_CV{};
 120:Veno-Echo.cpp **** 
 121:Veno-Echo.cpp **** float width{1.0};
 122:Veno-Echo.cpp **** float width_CV{};
 123:Veno-Echo.cpp **** 
 124:Veno-Echo.cpp **** float filterXfade{};
 125:Veno-Echo.cpp **** 
 126:Veno-Echo.cpp **** TempoDivs div_L{};
 127:Veno-Echo.cpp **** TempoDivs div_R{};
 128:Veno-Echo.cpp **** 
 129:Veno-Echo.cpp **** float ModDepth{0.0f};   //100.0 is a lot!
 130:Veno-Echo.cpp **** 
 131:Veno-Echo.cpp **** //float modulation_CV{};
 132:Veno-Echo.cpp **** float modulation_CV_Raw{};
 133:Veno-Echo.cpp **** 
 134:Veno-Echo.cpp **** bool syncMode{false};
 135:Veno-Echo.cpp **** bool shift{false};  //global variable for secondary shift functions
 136:Veno-Echo.cpp **** bool mute{};
 137:Veno-Echo.cpp **** 
 138:Veno-Echo.cpp **** bool ClockInFlag{false};
 139:Veno-Echo.cpp **** 
 140:Veno-Echo.cpp **** bool PostFilters{false};
 141:Veno-Echo.cpp **** 
 142:Veno-Echo.cpp **** std::atomic<bool> save_flag{};
 143:Veno-Echo.cpp **** 
 144:Veno-Echo.cpp **** static Adsr FwdRevLEnv;
 145:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 146:Veno-Echo.cpp **** 
 147:Veno-Echo.cpp **** static Adsr LPF_Env;
 148:Veno-Echo.cpp **** static Adsr HPF_Env;
 149:Veno-Echo.cpp **** 
 150:Veno-Echo.cpp **** static CrossFade FwdRevLXfade;  //crossfades for reverse delay into fwd delay
 151:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 152:Veno-Echo.cpp **** 
 153:Veno-Echo.cpp **** static CrossFade WidthXfade;
 154:Veno-Echo.cpp **** 
 155:Veno-Echo.cpp **** //crossfades for switching in and out of filters
 156:Veno-Echo.cpp **** static CrossFade LPF_LXfade;
 157:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 158:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 159:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 160:Veno-Echo.cpp **** 
 161:Veno-Echo.cpp **** //crossfades for switching in and out of post filters
 162:Veno-Echo.cpp **** static CrossFade LPF_LXfade_post;
 163:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 164:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 165:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 166:Veno-Echo.cpp **** 
 167:Veno-Echo.cpp **** //cross fades for manual filter crossfading
 168:Veno-Echo.cpp **** static CrossFade FilterMix_L;
 169:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 170:Veno-Echo.cpp **** 
 171:Veno-Echo.cpp **** static CrossFade FilterMix_L_post;
 172:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 173:Veno-Echo.cpp **** 
 174:Veno-Echo.cpp **** //Gate inputs
 175:Veno-Echo.cpp **** Switch ReverseGateL;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 25


 176:Veno-Echo.cpp **** Switch ReverseGateR;
 177:Veno-Echo.cpp **** 
 178:Veno-Echo.cpp **** //Switch TapButton;
 179:Veno-Echo.cpp **** Switch Sync;
 180:Veno-Echo.cpp **** Switch ClockIn;
 181:Veno-Echo.cpp **** 
 182:Veno-Echo.cpp **** //Tap tempo
 183:Veno-Echo.cpp **** Taptempo BaseTempo; 
 184:Veno-Echo.cpp **** 
 185:Veno-Echo.cpp **** Settings AltControls;
 186:Veno-Echo.cpp **** 
 187:Veno-Echo.cpp **** //default alt control values
 188:Veno-Echo.cpp **** constexpr Settings defaultAltControls
 189:Veno-Echo.cpp **** {
 190:Veno-Echo.cpp ****     (minRevDelay + maxRevDelay) / 2.0f, //RevLength
 191:Veno-Echo.cpp ****     1.0f,   //tapRatio
 192:Veno-Echo.cpp ****     0.0f,   //ModDepth
 193:Veno-Echo.cpp ****     (maxModRate + minModRate) / 2.0f,   //ModFreq
 194:Veno-Echo.cpp ****     defaultHPCut,   //HP_Cutoff
 195:Veno-Echo.cpp ****     defaultLPCut,   //LP_Cutoff
 196:Veno-Echo.cpp ****     default_Res,     //Filter Resonance
 197:Veno-Echo.cpp ****     0.0f
 198:Veno-Echo.cpp **** };
 199:Veno-Echo.cpp **** 
 200:Veno-Echo.cpp **** void Update_DelayTimeL_CV();
 201:Veno-Echo.cpp **** void Update_DelayTimeL();
 202:Veno-Echo.cpp **** 
 203:Veno-Echo.cpp **** void Update_DelayTimeR_CV();
 204:Veno-Echo.cpp **** void Update_DelayTimeR();
 205:Veno-Echo.cpp **** 
 206:Veno-Echo.cpp **** void Update_feedbackL_CV();
 207:Veno-Echo.cpp **** void Update_feedbackL();
 208:Veno-Echo.cpp **** 
 209:Veno-Echo.cpp **** void Update_feedbackR_CV();
 210:Veno-Echo.cpp **** void Update_feedbackR();
 211:Veno-Echo.cpp **** 
 212:Veno-Echo.cpp **** void Update_drywet_CV();
 213:Veno-Echo.cpp **** void Update_drywet();
 214:Veno-Echo.cpp **** 
 215:Veno-Echo.cpp **** void Update_width_CV();
 216:Veno-Echo.cpp **** void Update_width();
 217:Veno-Echo.cpp **** 
 218:Veno-Echo.cpp **** void Update_crossfeedback();
 219:Veno-Echo.cpp **** void Update_filterXfade();
 220:Veno-Echo.cpp **** 
 221:Veno-Echo.cpp **** void Update_Buttons();
 222:Veno-Echo.cpp **** void Update_BaseTempoLED();
 223:Veno-Echo.cpp **** void Update_DelayTempoLEDs();
 224:Veno-Echo.cpp **** void Update_Mod();
 225:Veno-Echo.cpp **** void GetModCV();
 226:Veno-Echo.cpp **** float SetTempoDiv(float input, TempoDivs *div);
 227:Veno-Echo.cpp **** void UpdateClock();
 228:Veno-Echo.cpp **** float GetTapRatio(TapRatios ratio);
 229:Veno-Echo.cpp **** void ApplySettings(const Settings &setting);
 230:Veno-Echo.cpp **** void TurnOnAllLEDs();
 231:Veno-Echo.cpp **** void ResetAllLEDs();
 232:Veno-Echo.cpp **** float HardLimit(float input, float limit);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 26


 233:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val);
 234:Veno-Echo.cpp **** bool checkPickupState(float value, float lastvalue, bool lastState, bool ShiftChange);
 235:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
 236:Veno-Echo.cpp **** 
 237:Veno-Echo.cpp **** static void AudioCallback(float *in, float *out, size_t size)
 238:Veno-Echo.cpp **** {
 239:Veno-Echo.cpp **** 
 240:Veno-Echo.cpp **** /*
 241:Veno-Echo.cpp **** static uint32_t funcLength{};
 242:Veno-Echo.cpp **** static uint32_t lastFuncTime{};
 243:Veno-Echo.cpp **** static uint32_t maxFuncLength{};
 244:Veno-Echo.cpp **** static uint32_t minFuncLength{500000000};
 245:Veno-Echo.cpp **** static uint32_t aveFuncLength{};
 246:Veno-Echo.cpp **** 
 247:Veno-Echo.cpp **** */
 248:Veno-Echo.cpp **** 
 249:Veno-Echo.cpp **** static int Counter{};
 250:Veno-Echo.cpp **** 
 251:Veno-Echo.cpp **** /*
 252:Veno-Echo.cpp ****     funcLength = System::GetUs() - lastFuncTime;
 253:Veno-Echo.cpp **** 
 254:Veno-Echo.cpp ****     aveFuncLength = (funcLength + 1023 * aveFuncLength) >> 10;
 255:Veno-Echo.cpp ****     if (funcLength > maxFuncLength)
 256:Veno-Echo.cpp ****     {
 257:Veno-Echo.cpp ****         maxFuncLength = funcLength;
 258:Veno-Echo.cpp ****     }
 259:Veno-Echo.cpp **** 
 260:Veno-Echo.cpp ****     if (funcLength < minFuncLength)
 261:Veno-Echo.cpp ****     {
 262:Veno-Echo.cpp ****         minFuncLength = funcLength;
 263:Veno-Echo.cpp ****     }
 264:Veno-Echo.cpp **** 
 265:Veno-Echo.cpp **** */
 266:Veno-Echo.cpp **** 
 267:Veno-Echo.cpp **** Counter = (Counter + 1) % updateDiv;
 268:Veno-Echo.cpp **** 
 269:Veno-Echo.cpp **** if(!save_flag)  //don't check ADCs if saving!
 270:Veno-Echo.cpp **** {
 271:Veno-Echo.cpp ****     /*
 272:Veno-Echo.cpp ****         //each call generate random dither length between 0 and 14
 273:Veno-Echo.cpp ****         uint16_t randomDither{uint16_t (rand() % 5)};
 274:Veno-Echo.cpp ****         //init timeofCall as current time
 275:Veno-Echo.cpp ****         uint32_t timeofCall{System::GetUs()};
 276:Veno-Echo.cpp **** 
 277:Veno-Echo.cpp ****         //wait for random Dither time
 278:Veno-Echo.cpp ****         while( (System::GetUs() - timeofCall ) < randomDither)
 279:Veno-Echo.cpp ****         {}
 280:Veno-Echo.cpp ****     */
 281:Veno-Echo.cpp **** 
 282:Veno-Echo.cpp ****         switch (Counter)
 283:Veno-Echo.cpp ****         {
 284:Veno-Echo.cpp ****             case 0:
 285:Veno-Echo.cpp ****                 Update_Buttons();
 286:Veno-Echo.cpp ****                 GetModCV();
 287:Veno-Echo.cpp ****                 Update_DelayTempoLEDs();
 288:Veno-Echo.cpp ****             break;
 289:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 27


 290:Veno-Echo.cpp ****             case 1:
 291:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 292:Veno-Echo.cpp ****             break;
 293:Veno-Echo.cpp **** 
 294:Veno-Echo.cpp ****             case 2:
 295:Veno-Echo.cpp ****                 Update_DelayTimeL();
 296:Veno-Echo.cpp ****             break;
 297:Veno-Echo.cpp **** 
 298:Veno-Echo.cpp ****             case 3:
 299:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 300:Veno-Echo.cpp ****             break;
 301:Veno-Echo.cpp **** 
 302:Veno-Echo.cpp ****             case 4:
 303:Veno-Echo.cpp ****                 Update_DelayTimeR();
 304:Veno-Echo.cpp ****             break;
 305:Veno-Echo.cpp **** 
 306:Veno-Echo.cpp ****             case 5:
 307:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 308:Veno-Echo.cpp ****             break;
 309:Veno-Echo.cpp **** 
 310:Veno-Echo.cpp ****             case 6:
 311:Veno-Echo.cpp ****                 Update_feedbackL();
 312:Veno-Echo.cpp ****             break;
 313:Veno-Echo.cpp **** 
 314:Veno-Echo.cpp ****             case 7:
 315:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 316:Veno-Echo.cpp ****             break;
 317:Veno-Echo.cpp **** 
 318:Veno-Echo.cpp ****             case 8:
 319:Veno-Echo.cpp ****                 Update_feedbackR();
 320:Veno-Echo.cpp ****             break;
 321:Veno-Echo.cpp **** 
 322:Veno-Echo.cpp ****             case 9:
 323:Veno-Echo.cpp ****                 Update_drywet_CV();
 324:Veno-Echo.cpp ****             break;
 325:Veno-Echo.cpp **** 
 326:Veno-Echo.cpp ****             case 10:
 327:Veno-Echo.cpp ****                 Update_drywet();
 328:Veno-Echo.cpp ****             break;
 329:Veno-Echo.cpp **** 
 330:Veno-Echo.cpp ****             case 11:
 331:Veno-Echo.cpp ****                 Update_width_CV();
 332:Veno-Echo.cpp ****             break;
 333:Veno-Echo.cpp **** 
 334:Veno-Echo.cpp ****             case 12:
 335:Veno-Echo.cpp ****                 Update_width();
 336:Veno-Echo.cpp ****             break;
 337:Veno-Echo.cpp **** 
 338:Veno-Echo.cpp ****             case 13:
 339:Veno-Echo.cpp ****                 Update_crossfeedback();
 340:Veno-Echo.cpp ****             break;
 341:Veno-Echo.cpp **** 
 342:Veno-Echo.cpp ****             case 14:
 343:Veno-Echo.cpp ****                 Update_filterXfade();
 344:Veno-Echo.cpp ****             break;
 345:Veno-Echo.cpp ****         }
 346:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 28


 347:Veno-Echo.cpp **** 
 348:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i += 2)
 349:Veno-Echo.cpp ****     {   
 350:Veno-Echo.cpp ****         UpdateClock(); 
 351:Veno-Echo.cpp ****         Update_Mod();
 352:Veno-Echo.cpp **** 
 353:Veno-Echo.cpp ****         //get xfade positions from envelopes:
 354:Veno-Echo.cpp ****         float FwdRevLXFadepos = FwdRevLEnv.Process(Rev_L_sw.getState());
 355:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 356:Veno-Echo.cpp ****         
 357:Veno-Echo.cpp ****         float HPFXFadepos = HPF_Env.Process(HPF_sw.getState());
 358:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 359:Veno-Echo.cpp **** 
 360:Veno-Echo.cpp ****         //set xfade positions      
 361:Veno-Echo.cpp ****         FwdRevLXfade.SetPos(FwdRevLXFadepos);
 362:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 363:Veno-Echo.cpp ****         
 364:Veno-Echo.cpp ****         HPF_LXfade.SetPos(HPFXFadepos);
 365:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 366:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 367:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 368:Veno-Echo.cpp **** 
 369:Veno-Echo.cpp ****         HPF_LXfade_post.SetPos(HPFXFadepos);
 370:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 371:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 372:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 373:Veno-Echo.cpp **** 
 374:Veno-Echo.cpp ****         FilterMix_L.SetPos(filterXfade);
 375:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 376:Veno-Echo.cpp **** 
 377:Veno-Echo.cpp ****         FilterMix_L_post.SetPos(filterXfade);
 378:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 379:Veno-Echo.cpp **** 
 380:Veno-Echo.cpp ****         //filter controls, read from reverse delay lines:
 381:Veno-Echo.cpp ****         float delayRevSignalL = delaysL_REV.Read();
 382:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 383:Veno-Echo.cpp **** 
 384:Veno-Echo.cpp ****         //write input to reverse delay (no feedback)
 385:Veno-Echo.cpp ****         delaysL_REV.Write(in[i]);
 386:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 387:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 388:Veno-Echo.cpp ****         //delaysR_REV.Write(Input_R);
 389:Veno-Echo.cpp **** 
 390:Veno-Echo.cpp ****         //process Xfade between reverse and direct input
 391:Veno-Echo.cpp ****         float FwdRevSignalLXFade = FwdRevLXfade.Process(in[i],delayRevSignalL);
 392:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 393:Veno-Echo.cpp **** 
 394:Veno-Echo.cpp ****         //Get combined output from all delay heads
 395:Veno-Echo.cpp ****         float delaySignal_L{delayL.GetOutput()};   
 396:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 397:Veno-Echo.cpp **** 
 398:Veno-Echo.cpp ****         //Update Base Tempo LED
 399:Veno-Echo.cpp ****         Update_BaseTempoLED();
 400:Veno-Echo.cpp **** 
 401:Veno-Echo.cpp ****         //hard limit
 402:Veno-Echo.cpp ****         delaySignal_L = HardLimit(delaySignal_L,AudioLimit);
 403:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 29


 404:Veno-Echo.cpp **** 
 405:Veno-Echo.cpp **** if(!PostFilters)
 406:Veno-Echo.cpp **** {
 407:Veno-Echo.cpp **** //****************************************************************************************
 408:Veno-Echo.cpp ****         //pre filters
 409:Veno-Echo.cpp ****         //process LPF
 410:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 411:Veno-Echo.cpp ****         LPF_L.Process(delaySignal_L * 0.1f);
 412:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 413:Veno-Echo.cpp **** 
 414:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 415:Veno-Echo.cpp ****         float LPF_L_signal{LPF_L.Low() * 10.0f};
 416:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 417:Veno-Echo.cpp ****         
 418:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 419:Veno-Echo.cpp ****         float filteredDelay_L{LPF_LXfade.Process(delaySignal_L, LPF_L_signal)};
 420:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 421:Veno-Echo.cpp **** 
 422:Veno-Echo.cpp ****         //hard limit
 423:Veno-Echo.cpp ****         filteredDelay_L = HardLimit(filteredDelay_L,AudioLimit);
 424:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 425:Veno-Echo.cpp **** 
 426:Veno-Echo.cpp ****         //process HPF
 427:Veno-Echo.cpp ****         HPF_L.Process(filteredDelay_L * 0.1f);
 428:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 429:Veno-Echo.cpp **** 
 430:Veno-Echo.cpp ****         float HPF_L_signal{HPF_L.High() * 10.0f};
 431:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 432:Veno-Echo.cpp **** 
 433:Veno-Echo.cpp ****         filteredDelay_L = HPF_LXfade.Process(filteredDelay_L, HPF_L_signal);
 434:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 435:Veno-Echo.cpp **** 
 436:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 437:Veno-Echo.cpp **** 
 438:Veno-Echo.cpp ****         delaySignal_L = FilterMix_L.Process(delaySignal_L,filteredDelay_L);
 439:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 440:Veno-Echo.cpp **** 
 441:Veno-Echo.cpp **** //****************************************************************************************
 442:Veno-Echo.cpp **** }
 443:Veno-Echo.cpp **** 
 444:Veno-Echo.cpp **** else
 445:Veno-Echo.cpp **** {
 446:Veno-Echo.cpp ****     /* code */
 447:Veno-Echo.cpp **** }
 448:Veno-Echo.cpp **** 
 449:Veno-Echo.cpp ****         static float LNegFB{};  //static so value can be used for next sample
 450:Veno-Echo.cpp ****         static float RNegFB{};
 451:Veno-Echo.cpp **** 
 452:Veno-Echo.cpp ****         //ensure we never get inverse feedback
 453:Veno-Echo.cpp ****         if(feedbackL < LNegFB) 
 454:Veno-Echo.cpp ****             LNegFB = 0.0f;
 455:Veno-Echo.cpp ****         
 456:Veno-Echo.cpp ****         if(feedbackR < RNegFB)
 457:Veno-Echo.cpp ****             RNegFB = 0.0f;
 458:Veno-Echo.cpp **** 
 459:Veno-Echo.cpp ****         float feedbackSignalL{ (feedbackL - LNegFB) * delaySignal_L };
 460:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 30


 461:Veno-Echo.cpp **** 
 462:Veno-Echo.cpp ****         //crossfeedback:
 463:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 464:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 465:Veno-Echo.cpp **** 
 466:Veno-Echo.cpp **** 
 467:Veno-Echo.cpp ****         //get envelopes for feedback signals
 468:Veno-Echo.cpp ****         float EnvL{LeftEnv.GetEnv(feedbackSignalL)};  
 469:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 470:Veno-Echo.cpp **** 
 471:Veno-Echo.cpp ****             //if envelope of feedback signal exceeds threshold calculate negative FB factor
 472:Veno-Echo.cpp ****             if (EnvL >= NegFBOffset)
 473:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 474:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 475:Veno-Echo.cpp ****             else LNegFB = 0.0;
 476:Veno-Echo.cpp ****             
 477:Veno-Echo.cpp ****             if (EnvR >= NegFBOffset)
 478:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 479:Veno-Echo.cpp ****             else RNegFB = 0.0;
 480:Veno-Echo.cpp **** 
 481:Veno-Echo.cpp ****         //write to fwd delay lines, including a DC block and hard limit
 482:Veno-Echo.cpp ****         float combinedL{feedbackSignalLR + FwdRevSignalLXFade};
 483:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 484:Veno-Echo.cpp ****  
 485:Veno-Echo.cpp ****         //hard limit
 486:Veno-Echo.cpp ****         combinedL = HardLimit(combinedL,AudioLimit);
 487:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 488:Veno-Echo.cpp **** 
 489:Veno-Echo.cpp ****         delayL.Write( DcBlock_LFB.Process(combinedL ) );
 490:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 491:Veno-Echo.cpp **** 
 492:Veno-Echo.cpp ****         // floats for wet dry mix
 493:Veno-Echo.cpp ****         float mixL;
 494:Veno-Echo.cpp ****         float mixR;
 495:Veno-Echo.cpp **** 
 496:Veno-Echo.cpp ****         float delaySignal_L_SUM = WidthXfade.Process(delaySignal_L,delaySignal_R);    //mix to mono
 497:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 498:Veno-Echo.cpp **** 
 499:Veno-Echo.cpp ****         //hard limit
 500:Veno-Echo.cpp ****         delaySignal_L_SUM = HardLimit(delaySignal_L_SUM,AudioLimit);
 501:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 502:Veno-Echo.cpp **** 
 503:Veno-Echo.cpp **** if(PostFilters)
 504:Veno-Echo.cpp **** {
 505:Veno-Echo.cpp ****     //****************************************************************************************
 506:Veno-Echo.cpp ****         //post filters
 507:Veno-Echo.cpp ****         //process LPF
 508:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 509:Veno-Echo.cpp ****         LPF_L_post.Process(delaySignal_L_SUM * 0.1f);
 510:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 511:Veno-Echo.cpp **** 
 512:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 513:Veno-Echo.cpp ****         float LPF_L_signal_post{LPF_L_post.Low() * 10.0f};
 514:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 515:Veno-Echo.cpp ****         
 516:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 517:Veno-Echo.cpp ****         float filteredDelay_L_post{LPF_LXfade_post.Process(delaySignal_L_SUM, LPF_L_signal_post)};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 31


 518:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 519:Veno-Echo.cpp **** 
 520:Veno-Echo.cpp ****         //hard limit
 521:Veno-Echo.cpp ****         filteredDelay_L_post = HardLimit(filteredDelay_L_post,AudioLimit);
 522:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 523:Veno-Echo.cpp **** 
 524:Veno-Echo.cpp ****         //process HPF
 525:Veno-Echo.cpp ****         HPF_L_post.Process(filteredDelay_L_post * 0.1f);
 526:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 527:Veno-Echo.cpp **** 
 528:Veno-Echo.cpp ****         float HPF_L_signal_post{HPF_L_post.High() * 10.0f};
 529:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 530:Veno-Echo.cpp **** 
 531:Veno-Echo.cpp ****         filteredDelay_L_post = HPF_LXfade_post.Process(filteredDelay_L_post, HPF_L_signal_post);
 532:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 533:Veno-Echo.cpp **** 
 534:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 535:Veno-Echo.cpp ****         delaySignal_L_SUM = FilterMix_L_post.Process(delaySignal_L_SUM,filteredDelay_L_post);
 536:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 537:Veno-Echo.cpp **** 
 538:Veno-Echo.cpp ****     //****************************************************************************************
 539:Veno-Echo.cpp **** }
 540:Veno-Echo.cpp **** else
 541:Veno-Echo.cpp **** {
 542:Veno-Echo.cpp ****     /* code */
 543:Veno-Echo.cpp **** }
 544:Veno-Echo.cpp ****         if(drywet < 0.5f)
 545:Veno-Echo.cpp ****         {
 546:Veno-Echo.cpp ****             mixL = in[i] + (2.0f * drywet * delaySignal_L_SUM);
 547:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 548:Veno-Echo.cpp ****         }
 549:Veno-Echo.cpp ****         else if(drywet > 0.5f)
 550:Veno-Echo.cpp ****         {
 551:Veno-Echo.cpp ****             mixL = ((1 - drywet)* 2.0f * in[i]) + delaySignal_L_SUM;
 552:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 553:Veno-Echo.cpp ****         }
 554:Veno-Echo.cpp ****         else
 555:Veno-Echo.cpp ****         {
 556:Veno-Echo.cpp ****             mixL = in[i] + delaySignal_L_SUM;
 557:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 558:Veno-Echo.cpp ****         }
 559:Veno-Echo.cpp **** 
 560:Veno-Echo.cpp ****         //send mixes to outputs
 561:Veno-Echo.cpp ****         if(mute)
 562:Veno-Echo.cpp ****         {
 563:Veno-Echo.cpp ****             out[i] = 0.0f;
 564:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 565:Veno-Echo.cpp ****         }
 566:Veno-Echo.cpp ****         else
 567:Veno-Echo.cpp ****         {
 568:Veno-Echo.cpp ****             out[i] = mixL;
 569:Veno-Echo.cpp ****             out[i+1] = mixR;
 570:Veno-Echo.cpp ****         }
 571:Veno-Echo.cpp **** 
 572:Veno-Echo.cpp ****         //write to DAC for debug
 573:Veno-Echo.cpp ****        // dsy_dac_write(DSY_DAC_CHN1, static_cast<int>( EnvL * 4095.0f));
 574:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 32


 575:Veno-Echo.cpp ****     }
 576:Veno-Echo.cpp **** 
 577:Veno-Echo.cpp **** }
 578:Veno-Echo.cpp **** 
 579:Veno-Echo.cpp **** void InitDelays(float samplerate)
 580:Veno-Echo.cpp **** {
 439              		.loc 20 580 1 is_stmt 1 view -0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 16
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 581:Veno-Echo.cpp **** 
 582:Veno-Echo.cpp ****     //Init fwd delays
 583:Veno-Echo.cpp ****     delMemsL.Init(2);    //2 heads
 443              		.loc 20 583 5 view .LVU50
 444              	.LBB800:
 445              	.LBI800:
  53:delayline_multitap.h ****     
  54:delayline_multitap.h ****     /** initializes the delay line by clearing the values within, and setting delay head times to 0
  55:delayline_multitap.h ****     */
  56:delayline_multitap.h ****     void Init( size_t num_heads) 
 446              		.loc 18 56 10 view .LVU51
 447              	.LBB801:
 448              	.LBB802:
  57:delayline_multitap.h ****     {
  58:delayline_multitap.h ****         for(size_t i = 0; i < max_size; i++)
 449              		.loc 18 58 29 view .LVU52
 450 0000 5D4B     		ldr	r3, .L36
 451 0002 5E49     		ldr	r1, .L36+4
 452              	.LBE802:
 453              	.LBE801:
 454              	.LBE800:
 580:Veno-Echo.cpp **** 
 455              		.loc 20 580 1 is_stmt 0 view .LVU53
 456 0004 F0B5     		push	{r4, r5, r6, r7, lr}
 457              		.cfi_def_cfa_offset 20
 458              		.cfi_offset 4, -20
 459              		.cfi_offset 5, -16
 460              		.cfi_offset 6, -12
 461              		.cfi_offset 7, -8
 462              		.cfi_offset 14, -4
 463 0006 A3F18405 		sub	r5, r3, #132
 464 000a 85B0     		sub	sp, sp, #20
 465              		.cfi_def_cfa_offset 40
 466 000c 2846     		mov	r0, r5
 467              	.LVL15:
 468              	.L17:
 469              	.LBB807:
 470              	.LBB806:
 471              	.LBB803:
  59:delayline_multitap.h ****         {
  60:delayline_multitap.h ****             line_[i] = T(0);
 472              		.loc 18 60 13 view .LVU54
 473 000e 0022     		movs	r2, #0
 474 0010 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 475              		.loc 18 58 9 is_stmt 1 view .LVU55
  58:delayline_multitap.h ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 33


 476              		.loc 18 58 29 view .LVU56
 477 0014 8B42     		cmp	r3, r1
 478 0016 FAD1     		bne	.L17
 479              	.LBE803:
  61:delayline_multitap.h ****         }
  62:delayline_multitap.h **** 
  63:delayline_multitap.h ****         write_ptr_ = 0;
 480              		.loc 18 63 9 is_stmt 0 view .LVU57
 481 0018 0022     		movs	r2, #0
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 482              		.loc 18 64 9 view .LVU58
 483 001a 594C     		ldr	r4, .L36+8
 484 001c 0226     		movs	r6, #2
 485              	.LBB804:
  65:delayline_multitap.h **** 
  66:delayline_multitap.h ****         for (size_t i{ 0 }; i < num_heads_; ++i)
 486              		.loc 18 66 21 view .LVU59
 487 001e 1346     		mov	r3, r2
 488              	.LBE804:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 489              		.loc 18 63 9 view .LVU60
 490 0020 2A60     		str	r2, [r5]
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 491              		.loc 18 64 9 view .LVU61
 492 0022 2E51     		str	r6, [r5, r4]
 493              	.LVL16:
 494              	.LBB805:
 495              		.loc 18 66 31 is_stmt 1 view .LVU62
 496              	.L18:
  67:delayline_multitap.h ****         {
  68:delayline_multitap.h ****             delay_[i] = 0;  //set all delay heads to 0 (no delay)
 497              		.loc 18 68 13 is_stmt 0 view .LVU63
 498 0024 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 499              		.loc 18 66 9 view .LVU64
 500 0026 0133     		adds	r3, r3, #1
 501              	.LVL17:
  69:delayline_multitap.h ****             frac_[i] = 0;
 502              		.loc 18 69 13 view .LVU65
 503 0028 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 504              		.loc 18 68 13 view .LVU66
 505 002a 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 506              		.loc 18 66 31 view .LVU67
 507 002e 0A68     		ldr	r2, [r1]
 508              		.loc 18 69 13 view .LVU68
 509 0030 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 510              		.loc 18 66 9 is_stmt 1 view .LVU69
 511              	.LVL18:
  66:delayline_multitap.h ****         {
 512              		.loc 18 66 31 view .LVU70
 513 0032 9A42     		cmp	r2, r3
 514 0034 F6D8     		bhi	.L18
 515 0036 534B     		ldr	r3, .L36+12
 516              	.LVL19:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 34


  66:delayline_multitap.h ****         {
 517              		.loc 18 66 31 is_stmt 0 view .LVU71
 518 0038 5349     		ldr	r1, .L36+16
 519 003a A3F18406 		sub	r6, r3, #132
 520 003e 3046     		mov	r0, r6
 521              	.LVL20:
 522              	.L19:
  66:delayline_multitap.h ****         {
 523              		.loc 18 66 31 view .LVU72
 524              	.LBE805:
 525              	.LBE806:
 526              	.LBE807:
 527              	.LBB808:
 528              	.LBB809:
 529              	.LBB810:
  60:delayline_multitap.h ****         }
 530              		.loc 18 60 13 view .LVU73
 531 0040 0022     		movs	r2, #0
 532 0042 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 533              		.loc 18 58 9 is_stmt 1 view .LVU74
  58:delayline_multitap.h ****         {
 534              		.loc 18 58 29 view .LVU75
 535 0046 8B42     		cmp	r3, r1
 536 0048 FAD1     		bne	.L19
 537              	.LBE810:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 538              		.loc 18 63 9 is_stmt 0 view .LVU76
 539 004a 0022     		movs	r2, #0
  64:delayline_multitap.h **** 
 540              		.loc 18 64 9 view .LVU77
 541 004c 4C4C     		ldr	r4, .L36+8
 542 004e 0227     		movs	r7, #2
 543              	.LBB811:
  66:delayline_multitap.h ****         {
 544              		.loc 18 66 21 view .LVU78
 545 0050 1346     		mov	r3, r2
 546              	.LBE811:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 547              		.loc 18 63 9 view .LVU79
 548 0052 3260     		str	r2, [r6]
  64:delayline_multitap.h **** 
 549              		.loc 18 64 9 view .LVU80
 550 0054 3751     		str	r7, [r6, r4]
 551              	.LVL21:
 552              	.LBB812:
  66:delayline_multitap.h ****         {
 553              		.loc 18 66 31 is_stmt 1 view .LVU81
 554              	.L20:
  68:delayline_multitap.h ****             frac_[i] = 0;
 555              		.loc 18 68 13 is_stmt 0 view .LVU82
 556 0056 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 557              		.loc 18 66 9 view .LVU83
 558 0058 0133     		adds	r3, r3, #1
 559              	.LVL22:
 560              		.loc 18 69 13 view .LVU84
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 35


 561 005a 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 562              		.loc 18 68 13 view .LVU85
 563 005c 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 564              		.loc 18 66 31 view .LVU86
 565 0060 0A68     		ldr	r2, [r1]
 566              		.loc 18 69 13 view .LVU87
 567 0062 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 568              		.loc 18 66 9 is_stmt 1 view .LVU88
 569              	.LVL23:
  66:delayline_multitap.h ****         {
 570              		.loc 18 66 31 view .LVU89
 571 0064 9A42     		cmp	r2, r3
 572 0066 F6D8     		bhi	.L20
 573              	.LVL24:
  66:delayline_multitap.h ****         {
 574              		.loc 18 66 31 is_stmt 0 view .LVU90
 575              	.LBE812:
 576              	.LBE809:
 577              	.LBE808:
 584:Veno-Echo.cpp ****     delMemsR.Init(2);    //2 heads
 585:Veno-Echo.cpp **** 
 586:Veno-Echo.cpp ****     //point del classes at SDRAM buffers
 587:Veno-Echo.cpp ****     delayL.del = &delMemsL; 
 578              		.loc 20 587 5 is_stmt 1 view .LVU91
 588:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 579              		.loc 20 588 16 is_stmt 0 view .LVU92
 580 0068 484C     		ldr	r4, .L36+20
 589:Veno-Echo.cpp **** 
 590:Veno-Echo.cpp ****     delayL.init(hw.GetPin(8),samplerate);
 581              		.loc 20 590 16 view .LVU93
 582 006a 0820     		movs	r0, #8
 587:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 583              		.loc 20 587 16 view .LVU94
 584 006c 484F     		ldr	r7, .L36+24
 585 006e 8DED010A 		vstr.32	s0, [sp, #4]	@ int
 586 0072 3D60     		str	r5, [r7]
 588:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 587              		.loc 20 588 5 is_stmt 1 view .LVU95
 588              	.LBB813:
 589              	.LBB814:
 590              	.LBB815:
  40:delayline_reverse.h ****     /** initializes the delay line by clearing the values within, and setting delay to min time.
  41:delayline_reverse.h ****     */
  42:delayline_reverse.h ****     void Init() 
  43:delayline_reverse.h ****     { 
  44:delayline_reverse.h ****         Reset(); 
  45:delayline_reverse.h ****     }
  46:delayline_reverse.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
  47:delayline_reverse.h ****     */
  48:delayline_reverse.h ****     void Reset()
  49:delayline_reverse.h ****     {
  50:delayline_reverse.h **** 
  51:delayline_reverse.h ****         delay1_  = 25000; //min Reverse delay time
 591              		.loc 19 51 9 is_stmt 0 view .LVU96
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 36


 592 0074 46F2A815 		movw	r5, #25000
 593              	.LBE815:
 594              	.LBE814:
 595              	.LBE813:
 588:Veno-Echo.cpp **** 
 596              		.loc 20 588 16 view .LVU97
 597 0078 2660     		str	r6, [r4]
 598              		.loc 20 590 5 is_stmt 1 view .LVU98
 599              		.loc 20 590 16 is_stmt 0 view .LVU99
 600 007a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 601              	.LVL25:
 602              		.loc 20 590 16 view .LVU100
 603 007e 0346     		mov	r3, r0	@ movhi
 604 0080 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 605 0084 3846     		mov	r0, r7
 606 0086 ADF80830 		strh	r3, [sp, #8]	@ movhi
 607 008a 0299     		ldr	r1, [sp, #8]
 608 008c FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 609              	.LVL26:
 591:Veno-Echo.cpp ****     delayR.init(hw.GetPin(9),samplerate);
 610              		.loc 20 591 5 is_stmt 1 view .LVU101
 611              		.loc 20 591 16 is_stmt 0 view .LVU102
 612 0090 0920     		movs	r0, #9
 613 0092 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 614              	.LVL27:
 615 0096 0346     		mov	r3, r0	@ movhi
 616 0098 2046     		mov	r0, r4
 617              	.LBB827:
 618              	.LBB822:
 619              	.LBB817:
 620              		.loc 19 51 9 view .LVU103
 621 009a 3E4C     		ldr	r4, .L36+28
 622              	.LBE817:
 623              	.LBE822:
 624              	.LBE827:
 625              		.loc 20 591 16 view .LVU104
 626 009c ADF80C30 		strh	r3, [sp, #12]	@ movhi
 627 00a0 0399     		ldr	r1, [sp, #12]
 628 00a2 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 629 00a6 FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 630              	.LVL28:
 592:Veno-Echo.cpp **** 
 593:Veno-Echo.cpp ****     //delayL.SetDelayTime(500.0f);
 594:Veno-Echo.cpp ****     //delayR.SetDelayTime(500.0f);
 595:Veno-Echo.cpp **** 
 596:Veno-Echo.cpp ****     //Init rev delays
 597:Veno-Echo.cpp ****     delMemsL_REV.Init();
 631              		.loc 20 597 5 is_stmt 1 view .LVU105
 632              	.LBB828:
 633              	.LBI813:
  42:delayline_reverse.h ****     { 
 634              		.loc 19 42 10 view .LVU106
 635              	.LBB823:
 636              	.LBI814:
  48:delayline_reverse.h ****     {
 637              		.loc 19 48 10 view .LVU107
 638              	.LBB818:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 37


  52:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 639              		.loc 19 52 9 is_stmt 0 view .LVU108
 640 00aa 3B4A     		ldr	r2, .L36+32
 641 00ac 45F6C050 		movw	r0, #24000
 642 00b0 04F11803 		add	r3, r4, #24
 643 00b4 3949     		ldr	r1, .L36+36
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 644              		.loc 19 51 9 view .LVU109
 645 00b6 2561     		str	r5, [r4, #16]
 646              		.loc 19 52 9 view .LVU110
 647 00b8 A050     		str	r0, [r4, r2]
 648              	.LVL29:
 649              	.LBB816:
  53:delayline_reverse.h ****         
  54:delayline_reverse.h ****         for(size_t i = 0; i < max_size; i++)
 650              		.loc 19 54 29 is_stmt 1 view .LVU111
 651              	.L21:
  55:delayline_reverse.h ****         {
  56:delayline_reverse.h ****             line_[i] = T(0);
 652              		.loc 19 56 13 is_stmt 0 view .LVU112
 653 00ba 0022     		movs	r2, #0
 654 00bc 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 655              		.loc 19 54 9 is_stmt 1 view .LVU113
  54:delayline_reverse.h ****         {
 656              		.loc 19 54 29 view .LVU114
 657 00c0 8B42     		cmp	r3, r1
 658 00c2 FAD1     		bne	.L21
 659              	.LBE816:
 660              	.LBE818:
 661              	.LBE823:
 662              	.LBE828:
 663              	.LBB829:
 664              	.LBB830:
 665              	.LBB831:
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 666              		.loc 19 51 9 is_stmt 0 view .LVU115
 667 00c4 3648     		ldr	r0, .L36+40
 668 00c6 46F2A811 		movw	r1, #25000
  52:delayline_reverse.h ****         
 669              		.loc 19 52 9 view .LVU116
 670 00ca 334D     		ldr	r5, .L36+32
 671 00cc 45F6C056 		movw	r6, #24000
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 672              		.loc 19 51 9 view .LVU117
 673 00d0 0161     		str	r1, [r0, #16]
 674              	.LBE831:
 675              	.LBE830:
 676              	.LBE829:
 677              	.LBB854:
 678              	.LBB824:
 679              	.LBB819:
  57:delayline_reverse.h ****         }
  58:delayline_reverse.h ****         write_ptr_ = 0;
 680              		.loc 19 58 9 view .LVU118
 681 00d2 0021     		movs	r1, #0
 682              	.LBE819:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 38


 683              	.LBE824:
 684              	.LBE854:
 685              	.LBB855:
 686              	.LBB844:
 687              	.LBB834:
  52:delayline_reverse.h ****         
 688              		.loc 19 52 9 view .LVU119
 689 00d4 4651     		str	r6, [r0, r5]
 690              	.LBE834:
 691              	.LBE844:
 692              	.LBE855:
 693              	.LBB856:
 694              	.LBB825:
 695              	.LBB820:
  59:delayline_reverse.h ****         read_ptr1_ = 0;
  60:delayline_reverse.h ****         read_ptr2_ = 0;
  61:delayline_reverse.h ****         headDiff_ = 0;
  62:delayline_reverse.h ****         playinghead_ = false;
 696              		.loc 19 62 9 view .LVU120
 697 00d6 0435     		adds	r5, r5, #4
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
  64:delayline_reverse.h ****         fading_ = false;
 698              		.loc 19 64 9 view .LVU121
 699 00d8 324E     		ldr	r6, .L36+44
 700 00da 00F11803 		add	r3, r0, #24
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 701              		.loc 19 62 9 view .LVU122
 702 00de 6155     		strb	r1, [r4, r5]
  60:delayline_reverse.h ****         headDiff_ = 0;
 703              		.loc 19 60 9 view .LVU123
 704 00e0 E160     		str	r1, [r4, #12]
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
 705              		.loc 19 63 9 view .LVU124
 706 00e2 314D     		ldr	r5, .L36+48
  61:delayline_reverse.h ****         playinghead_ = false;
 707              		.loc 19 61 9 view .LVU125
 708 00e4 6161     		str	r1, [r4, #20]
 709              		.loc 19 64 9 view .LVU126
 710 00e6 A155     		strb	r1, [r4, r6]
 711              	.LVL30:
 712              		.loc 19 64 9 view .LVU127
 713              	.LBE820:
 714              	.LBE825:
 715              	.LBE856:
 598:Veno-Echo.cpp ****     delMemsR_REV.Init();
 716              		.loc 20 598 5 is_stmt 1 view .LVU128
 717              	.LBB857:
 718              	.LBI829:
  42:delayline_reverse.h ****     { 
 719              		.loc 19 42 10 view .LVU129
 720              	.LBB845:
 721              	.LBI830:
  48:delayline_reverse.h ****     {
 722              		.loc 19 48 10 view .LVU130
 723              	.LBB835:
 724              	.LBB832:
  54:delayline_reverse.h ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 39


 725              		.loc 19 54 29 view .LVU131
 726              	.LBE832:
 727              	.LBE835:
 728              	.LBE845:
 729              	.LBE857:
 730              	.LBB858:
 731              	.LBB826:
 732              	.LBB821:
  63:delayline_reverse.h ****         fading_ = false;
 733              		.loc 19 63 9 is_stmt 0 view .LVU132
 734 00e8 2A60     		str	r2, [r5]	@ float
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 735              		.loc 19 59 9 view .LVU133
 736 00ea C4E90111 		strd	r1, r1, [r4, #4]
 737 00ee 2F49     		ldr	r1, .L36+52
 738              	.LVL31:
 739              	.L22:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 740              		.loc 19 59 9 view .LVU134
 741              	.LBE821:
 742              	.LBE826:
 743              	.LBE858:
 744              	.LBB859:
 745              	.LBB846:
 746              	.LBB836:
 747              	.LBB833:
  56:delayline_reverse.h ****         }
 748              		.loc 19 56 13 view .LVU135
 749 00f0 0022     		movs	r2, #0
 750 00f2 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 751              		.loc 19 54 9 is_stmt 1 view .LVU136
  54:delayline_reverse.h ****         {
 752              		.loc 19 54 29 view .LVU137
 753 00f6 8B42     		cmp	r3, r1
 754 00f8 FAD1     		bne	.L22
 755              	.LBE833:
 756              	.LBE836:
 757              	.LBE846:
 758              	.LBE859:
 599:Veno-Echo.cpp **** 
 600:Veno-Echo.cpp ****     //point struct at SDRAM buffers
 601:Veno-Echo.cpp ****     delaysL_REV.del = &delMemsL_REV; 
 759              		.loc 20 601 21 is_stmt 0 view .LVU138
 760 00fa 2D49     		ldr	r1, .L36+56
 761              	.LBB860:
 762              	.LBB847:
 763              	.LBB837:
  58:delayline_reverse.h ****         read_ptr1_ = 0;
 764              		.loc 19 58 9 view .LVU139
 765 00fc 0023     		movs	r3, #0
 766              	.LBE837:
 767              	.LBE847:
 768              	.LBE860:
 769              	.LBB861:
 770              	.LBB862:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 40


 771              		.loc 20 70 15 view .LVU140
 772 00fe DFED2D6A 		vldr.32	s13, .L36+60
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 773              		.loc 20 70 28 view .LVU141
 774 0102 D1ED017A 		vldr.32	s15, [r1, #4]
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 775              		.loc 20 70 53 view .LVU142
 776 0106 9FED2C6A 		vldr.32	s12, .L36+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 777              		.loc 20 70 15 view .LVU143
 778 010a 36EEE77A 		vsub.f32	s14, s13, s15
 779              	.LBE862:
 780              	.LBE861:
 781              	.LBB876:
 782              	.LBB848:
 783              	.LBB838:
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 784              		.loc 19 62 9 view .LVU144
 785 010e 2B4D     		ldr	r5, .L36+68
 786              	.LBE838:
 787              	.LBE848:
 788              	.LBE876:
 789              	.LBB877:
 790              	.LBB871:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 791              		.loc 20 70 53 view .LVU145
 792 0110 67EE867A 		vmul.f32	s15, s15, s12
 793              	.LBE871:
 794              	.LBE877:
 795              	.LBB878:
 796              	.LBB849:
 797              	.LBB839:
 798              		.loc 19 64 9 view .LVU146
 799 0114 234E     		ldr	r6, .L36+44
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 800              		.loc 19 62 9 view .LVU147
 801 0116 4355     		strb	r3, [r0, r5]
 802              	.LBE839:
 803              	.LBE849:
 804              	.LBE878:
 805              	.LBB879:
 806              	.LBB872:
 807              	.LBB863:
 808              	.LBB864:
 809              		.file 21 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Copyright (C) 2016-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 41


  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** /** @file include/bits/std_abs.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include_next <stdlib.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** # include_next <math.h>
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef abs
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** extern "C++"
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   using ::abs;
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long long
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 42


  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(double __x)
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabs(__x); }
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(float __x)
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 810              		.loc 21 76 31 view .LVU148
 811 0118 B0EEC77A 		vabs.f32	s14, s14
 812              	.LBE864:
 813              	.LBE863:
 814              	.LBE872:
 815              	.LBE879:
 816              	.LBB880:
 817              	.LBB850:
 818              	.LBB840:
  63:delayline_reverse.h ****         fading_ = false;
 819              		.loc 19 63 9 view .LVU149
 820 011c 284D     		ldr	r5, .L36+72
  60:delayline_reverse.h ****         headDiff_ = 0;
 821              		.loc 19 60 9 view .LVU150
 822 011e C360     		str	r3, [r0, #12]
  61:delayline_reverse.h ****         playinghead_ = false;
 823              		.loc 19 61 9 view .LVU151
 824 0120 4361     		str	r3, [r0, #20]
 825              	.LBE840:
 826              	.LBE850:
 827              	.LBE880:
 828              	.LBB881:
 829              	.LBB873:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 830              		.loc 20 70 9 view .LVU152
 831 0122 B4EEE77A 		vcmpe.f32	s14, s15
 832              	.LBE873:
 833              	.LBE881:
 834              	.LBB882:
 835              	.LBB851:
 836              	.LBB841:
 837              		.loc 19 64 9 view .LVU153
 838 0126 8355     		strb	r3, [r0, r6]
 839              	.LVL32:
 840              		.loc 19 64 9 view .LVU154
 841              	.LBE841:
 842              	.LBE851:
 843              	.LBE882:
 844              		.loc 20 601 5 is_stmt 1 view .LVU155
 602:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 845              		.loc 20 602 5 view .LVU156
 601:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 846              		.loc 20 601 21 is_stmt 0 view .LVU157
 847 0128 0C60     		str	r4, [r1]
 848              	.LBB883:
 849              	.LBB852:
 850              	.LBB842:
  63:delayline_reverse.h ****         fading_ = false;
 851              		.loc 19 63 9 view .LVU158
 852 012a 2A60     		str	r2, [r5]	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 43


 853              	.LBE842:
 854              	.LBE852:
 855              	.LBE883:
 856              	.LBB884:
 857              	.LBB874:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 858              		.loc 20 70 9 view .LVU159
 859 012c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 860              	.LBE874:
 861              	.LBE884:
 862              	.LBB885:
 863              	.LBB853:
 864              	.LBB843:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 865              		.loc 19 59 9 view .LVU160
 866 0130 C0E90133 		strd	r3, r3, [r0, #4]
 867              	.LBE843:
 868              	.LBE853:
 869              	.LBE885:
 870              		.loc 20 602 21 view .LVU161
 871 0134 234B     		ldr	r3, .L36+76
 872 0136 1860     		str	r0, [r3]
 603:Veno-Echo.cpp **** 
 604:Veno-Echo.cpp ****     //Reverse Delay Length. Setup as static value for now. Will make this a shift function
 605:Veno-Echo.cpp ****     delaysL_REV.SetDelayTime(maxRevDelay / 3.f);
 873              		.loc 20 605 5 is_stmt 1 view .LVU162
 874              	.LVL33:
 875              	.LBB886:
 876              	.LBI861:
  68:Veno-Echo.cpp ****     {
 877              		.loc 20 68 10 view .LVU163
 878              	.LBB875:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 879              		.loc 20 70 9 view .LVU164
 880              	.LBB866:
 881              	.LBI863:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 882              		.loc 21 75 3 view .LVU165
 883              	.LBB865:
 884              		.loc 21 76 5 view .LVU166
 885              		.loc 21 76 5 is_stmt 0 view .LVU167
 886              	.LBE865:
 887              	.LBE866:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 888              		.loc 20 70 9 view .LVU168
 889 0138 04DD     		ble	.L23
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 890              		.loc 20 73 13 is_stmt 1 view .LVU169
 891              	.LBB867:
 892              	.LBB868:
  65:delayline_reverse.h ****     }
  66:delayline_reverse.h **** 
  67:delayline_reverse.h ****     /** sets the delay time in samples
  68:delayline_reverse.h ****     */
  69:delayline_reverse.h ****     inline void SetDelay1(size_t delay)
  70:delayline_reverse.h ****     {
  71:delayline_reverse.h ****         frac1_  = 0.0f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 44


  72:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 893              		.loc 19 72 9 is_stmt 0 view .LVU170
 894 013a 234D     		ldr	r5, .L36+80
 895              	.LBE868:
 896              	.LBE867:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 897              		.loc 20 73 27 view .LVU171
 898 013c C1ED016A 		vstr.32	s13, [r1, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 899              		.loc 20 74 13 is_stmt 1 view .LVU172
 900              	.LVL34:
 901              	.LBB870:
 902              	.LBI867:
  69:delayline_reverse.h ****     {
 903              		.loc 19 69 17 view .LVU173
 904              	.LBB869:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 905              		.loc 19 71 9 is_stmt 0 view .LVU174
 906 0140 2260     		str	r2, [r4]	@ float
 907              		.loc 19 72 9 view .LVU175
 908 0142 2561     		str	r5, [r4, #16]
 909              	.LVL35:
 910              	.L23:
 911              		.loc 19 72 9 view .LVU176
 912              	.LBE869:
 913              	.LBE870:
 914              	.LBE875:
 915              	.LBE886:
 606:Veno-Echo.cpp ****     delaysR_REV.SetDelayTime(maxRevDelay / 3.f);   //default maxRevDelay / 3.0f
 916              		.loc 20 606 5 is_stmt 1 view .LVU177
 917              	.LBB887:
 918              	.LBI887:
  68:Veno-Echo.cpp ****     {
 919              		.loc 20 68 10 view .LVU178
 920              	.LBB888:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 921              		.loc 20 70 9 view .LVU179
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 922              		.loc 20 70 28 is_stmt 0 view .LVU180
 923 0144 D3ED017A 		vldr.32	s15, [r3, #4]
 924              	.LVL36:
 925              	.LBB889:
 926              	.LBI889:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 927              		.loc 21 75 3 is_stmt 1 view .LVU181
 928              	.LBB890:
 929              		.loc 21 76 5 view .LVU182
 930              		.loc 21 76 5 is_stmt 0 view .LVU183
 931              	.LBE890:
 932              	.LBE889:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 933              		.loc 20 70 15 view .LVU184
 934 0148 DFED1A6A 		vldr.32	s13, .L36+60
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 935              		.loc 20 70 53 view .LVU185
 936 014c 9FED1A6A 		vldr.32	s12, .L36+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 45


 937              		.loc 20 70 15 view .LVU186
 938 0150 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 939              		.loc 20 70 53 view .LVU187
 940 0154 67EE867A 		vmul.f32	s15, s15, s12
 941              	.LBB892:
 942              	.LBB891:
 943              		.loc 21 76 31 view .LVU188
 944 0158 B0EEC77A 		vabs.f32	s14, s14
 945              	.LBE891:
 946              	.LBE892:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 947              		.loc 20 70 9 view .LVU189
 948 015c B4EEE77A 		vcmpe.f32	s14, s15
 949 0160 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 950 0164 05DD     		ble	.L16
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 951              		.loc 20 73 13 is_stmt 1 view .LVU190
 952              	.LBB893:
 953              	.LBB894:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 954              		.loc 19 71 9 is_stmt 0 view .LVU191
 955 0166 0021     		movs	r1, #0
 956              		.loc 19 72 9 view .LVU192
 957 0168 174A     		ldr	r2, .L36+80
 958              	.LBE894:
 959              	.LBE893:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 960              		.loc 20 73 27 view .LVU193
 961 016a C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 962              		.loc 20 74 13 is_stmt 1 view .LVU194
 963              	.LVL37:
 964              	.LBB896:
 965              	.LBI893:
  69:delayline_reverse.h ****     {
 966              		.loc 19 69 17 view .LVU195
 967              	.LBB895:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 968              		.loc 19 71 9 is_stmt 0 view .LVU196
 969 016e 0160     		str	r1, [r0]	@ float
 970              		.loc 19 72 9 view .LVU197
 971 0170 0261     		str	r2, [r0, #16]
 972              	.LVL38:
 973              	.L16:
 974              		.loc 19 72 9 view .LVU198
 975              	.LBE895:
 976              	.LBE896:
 977              	.LBE888:
 978              	.LBE887:
 607:Veno-Echo.cpp **** 
 608:Veno-Echo.cpp **** }
 979              		.loc 20 608 1 view .LVU199
 980 0172 05B0     		add	sp, sp, #20
 981              		.cfi_def_cfa_offset 20
 982              		@ sp needed
 983 0174 F0BD     		pop	{r4, r5, r6, r7, pc}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 46


 984              	.L37:
 985 0176 00BF     		.align	2
 986              	.L36:
 987 0178 84000000 		.word	delMemsL+132
 988 017c 84786900 		.word	delMemsL+6912132
 989 0180 84786900 		.word	6912132
 990 0184 84000000 		.word	delMemsR+132
 991 0188 84786900 		.word	delMemsR+6912132
 992 018c 00000000 		.word	.LANCHOR1
 993 0190 00000000 		.word	.LANCHOR0
 994 0194 00000000 		.word	delMemsL_REV
 995 0198 189F2400 		.word	2400024
 996 019c 189F2400 		.word	delMemsL_REV+2400024
 997 01a0 00000000 		.word	delMemsR_REV
 998 01a4 249F2400 		.word	2400036
 999 01a8 209F2400 		.word	delMemsL_REV+2400032
 1000 01ac 189F2400 		.word	delMemsR_REV+2400024
 1001 01b0 00000000 		.word	.LANCHOR2
 1002 01b4 00409C47 		.word	1201422336
 1003 01b8 0AD7A33B 		.word	1000593162
 1004 01bc 1C9F2400 		.word	2400028
 1005 01c0 209F2400 		.word	delMemsR_REV+2400032
 1006 01c4 00000000 		.word	.LANCHOR3
 1007 01c8 80380100 		.word	80000
 1008              		.cfi_endproc
 1009              	.LFE4309:
 1011              		.section	.text._Z20Update_DelayTimeL_CVv,"ax",%progbits
 1012              		.align	1
 1013              		.p2align 2,,3
 1014              		.global	_Z20Update_DelayTimeL_CVv
 1015              		.syntax unified
 1016              		.thumb
 1017              		.thumb_func
 1018              		.fpu fpv5-d16
 1020              	_Z20Update_DelayTimeL_CVv:
 1021              	.LFB4311:
 609:Veno-Echo.cpp **** 
 610:Veno-Echo.cpp **** int main(void)
 611:Veno-Echo.cpp **** {
 612:Veno-Echo.cpp ****     // initialize hardware.
 613:Veno-Echo.cpp ****     hw.Configure();
 614:Veno-Echo.cpp ****     hw.Init();
 615:Veno-Echo.cpp ****     
 616:Veno-Echo.cpp ****     //Buttons or switches with status LEDs
 617:Veno-Echo.cpp **** 
 618:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / static_cast<flo
 619:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 620:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 621:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 622:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 623:Veno-Echo.cpp **** 
 624:Veno-Echo.cpp ****     //Gates
 625:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 626:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 627:Veno-Echo.cpp **** 
 628:Veno-Echo.cpp ****     //TapButton.Init(hw.GetPin(4), hw.AudioSampleRate() / 48.f);
 629:Veno-Echo.cpp ****     Sync.Init(hw.GetPin(23), hw.AudioSampleRate() / static_cast<float> (updateDiv));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 47


 630:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 631:Veno-Echo.cpp ****     
 632:Veno-Echo.cpp ****     FwdRevLEnv.Init(hw.AudioSampleRate());
 633:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 634:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 635:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 636:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 637:Veno-Echo.cpp **** 
 638:Veno-Echo.cpp ****     FwdRevREnv.Init(hw.AudioSampleRate());
 639:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 640:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 641:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 642:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 643:Veno-Echo.cpp **** 
 644:Veno-Echo.cpp ****     LPF_Env.Init(hw.AudioSampleRate());
 645:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 646:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 647:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 648:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 649:Veno-Echo.cpp **** 
 650:Veno-Echo.cpp ****     HPF_Env.Init(hw.AudioSampleRate());
 651:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 652:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 653:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 654:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 655:Veno-Echo.cpp **** 
 656:Veno-Echo.cpp ****     // set params for CrossFade objects
 657:Veno-Echo.cpp ****     FwdRevLXfade.Init();
 658:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 659:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 660:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 661:Veno-Echo.cpp **** 
 662:Veno-Echo.cpp ****     WidthXfade.Init();
 663:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 664:Veno-Echo.cpp **** 
 665:Veno-Echo.cpp ****     InitDelays(hw.AudioSampleRate());
 666:Veno-Echo.cpp **** 
 667:Veno-Echo.cpp ****     //setup L and R Low Pass filters
 668:Veno-Echo.cpp ****     LPF_L.Init(hw.AudioSampleRate());
 669:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 670:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 671:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 672:Veno-Echo.cpp **** 
 673:Veno-Echo.cpp ****     LPF_R.Init(hw.AudioSampleRate());
 674:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 675:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 676:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 677:Veno-Echo.cpp **** 
 678:Veno-Echo.cpp ****     //setup L and R High Pass filters
 679:Veno-Echo.cpp ****     HPF_L.Init(hw.AudioSampleRate());
 680:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 681:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 682:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 683:Veno-Echo.cpp **** 
 684:Veno-Echo.cpp ****     HPF_R.Init(hw.AudioSampleRate());
 685:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 686:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 48


 687:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 688:Veno-Echo.cpp **** 
 689:Veno-Echo.cpp ****     //post filters
 690:Veno-Echo.cpp ****     LPF_L_post.Init(hw.AudioSampleRate());
 691:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 692:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 693:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 694:Veno-Echo.cpp **** 
 695:Veno-Echo.cpp ****     LPF_R_post.Init(hw.AudioSampleRate());
 696:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 697:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 698:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 699:Veno-Echo.cpp **** 
 700:Veno-Echo.cpp ****     //setup L and R High Pass filters
 701:Veno-Echo.cpp ****     HPF_L_post.Init(hw.AudioSampleRate());
 702:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 703:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 704:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 705:Veno-Echo.cpp **** 
 706:Veno-Echo.cpp ****     HPF_R_post.Init(hw.AudioSampleRate());
 707:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 708:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 709:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 710:Veno-Echo.cpp **** 
 711:Veno-Echo.cpp ****     DcBlock_LFB.Init(hw.AudioSampleRate());
 712:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 713:Veno-Echo.cpp **** 
 714:Veno-Echo.cpp ****     //LFO for modulation of fwd delay time
 715:Veno-Echo.cpp ****     lfo.Init(hw.AudioSampleRate());
 716:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 717:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 718:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 719:Veno-Echo.cpp **** 
 720:Veno-Echo.cpp ****     BaseTempo.init(80,6000,1.25f);  //max 6 second tap
 721:Veno-Echo.cpp **** 
 722:Veno-Echo.cpp ****     //setup tempo indicators
 723:Veno-Echo.cpp ****     //tempoLED_BASE.init(hw.GetPin(14),hw.AudioSampleRate());
 724:Veno-Echo.cpp ****     tempoLED_BASE.init(hw.GetPin(24),hw.AudioSampleRate());
 725:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 726:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 727:Veno-Echo.cpp **** 
 728:Veno-Echo.cpp ****     //load settings from flash
 729:Veno-Echo.cpp **** 
 730:Veno-Echo.cpp ****     //Settings SavedSettings{LoadSettings()};
 731:Veno-Echo.cpp ****     ApplySettings(defaultAltControls);
 732:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 733:Veno-Echo.cpp **** 
 734:Veno-Echo.cpp ****     //initialize DAC
 735:Veno-Echo.cpp **** 
 736:Veno-Echo.cpp ****    //ADC
 737:Veno-Echo.cpp ****     AdcChannelConfig adcConfig[8];
 738:Veno-Echo.cpp **** 
 739:Veno-Echo.cpp ****     adcConfig[0].InitSingle(hw.GetPin(15));
 740:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 741:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 742:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 743:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 49


 744:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 745:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 746:Veno-Echo.cpp ****     adcConfig[6].InitSingle(hw.GetPin(22));
 747:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 748:Veno-Echo.cpp **** 
 749:Veno-Echo.cpp **** 
 750:Veno-Echo.cpp ****     hw.adc.Init(adcConfig, 8,daisy::AdcHandle::OVS_128);
 751:Veno-Echo.cpp ****     hw.adc.Start();
 752:Veno-Echo.cpp **** 
 753:Veno-Echo.cpp **** 
 754:Veno-Echo.cpp ****     hw.SetAudioBlockSize(1);     //set blocksize.
 755:Veno-Echo.cpp ****     // start audio callback
 756:Veno-Echo.cpp ****     hw.StartAudio(AudioCallback);
 757:Veno-Echo.cpp **** 
 758:Veno-Echo.cpp ****     
 759:Veno-Echo.cpp **** 
 760:Veno-Echo.cpp ****      for(;;)
 761:Veno-Echo.cpp ****      {
 762:Veno-Echo.cpp **** 
 763:Veno-Echo.cpp **** /*
 764:Veno-Echo.cpp ****         if(save_flag)
 765:Veno-Echo.cpp ****         {
 766:Veno-Echo.cpp **** 
 767:Veno-Echo.cpp ****             if (SaveSettings(AltControls) == DSY_MEMORY_OK)
 768:Veno-Echo.cpp ****             {
 769:Veno-Echo.cpp ****                 //reset flag
 770:Veno-Echo.cpp ****                 //System::Delay(1000);
 771:Veno-Echo.cpp ****                 save_flag = false;
 772:Veno-Echo.cpp ****             }
 773:Veno-Echo.cpp ****         }
 774:Veno-Echo.cpp **** 
 775:Veno-Echo.cpp **** */
 776:Veno-Echo.cpp ****      }
 777:Veno-Echo.cpp **** 
 778:Veno-Echo.cpp **** }
 779:Veno-Echo.cpp **** 
 780:Veno-Echo.cpp **** void Update_DelayTimeL_CV()
 781:Veno-Echo.cpp **** {
 1022              		.loc 20 781 1 is_stmt 1 view -0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 0
 1025              		@ frame_needed = 0, uses_anonymous_args = 0
 782:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1026              		.loc 20 782 5 view .LVU201
 781:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1027              		.loc 20 781 1 is_stmt 0 view .LVU202
 1028 0000 08B5     		push	{r3, lr}
 1029              		.cfi_def_cfa_offset 8
 1030              		.cfi_offset 3, -8
 1031              		.cfi_offset 14, -4
 1032              		.loc 20 782 36 view .LVU203
 1033 0002 0021     		movs	r1, #0
 1034 0004 0348     		ldr	r0, .L40
 1035 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1036              	.LVL39:
 1037              		.loc 20 782 19 view .LVU204
 1038 000a 034B     		ldr	r3, .L40+4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 50


 1039 000c 83ED000A 		vstr.32	s0, [r3]
 783:Veno-Echo.cpp **** }
 1040              		.loc 20 783 1 view .LVU205
 1041 0010 08BD     		pop	{r3, pc}
 1042              	.L41:
 1043 0012 00BF     		.align	2
 1044              	.L40:
 1045 0014 18000000 		.word	.LANCHOR4+24
 1046 0018 00000000 		.word	.LANCHOR5
 1047              		.cfi_endproc
 1048              	.LFE4311:
 1050              		.section	.text._Z17Update_DelayTimeLv,"ax",%progbits
 1051              		.align	1
 1052              		.p2align 2,,3
 1053              		.global	_Z17Update_DelayTimeLv
 1054              		.syntax unified
 1055              		.thumb
 1056              		.thumb_func
 1057              		.fpu fpv5-d16
 1059              	_Z17Update_DelayTimeLv:
 1060              	.LFB4312:
 784:Veno-Echo.cpp **** 
 785:Veno-Echo.cpp **** void Update_DelayTimeL()
 786:Veno-Echo.cpp **** {
 1061              		.loc 20 786 1 is_stmt 1 view -0
 1062              		.cfi_startproc
 1063              		@ args = 0, pretend = 0, frame = 0
 1064              		@ frame_needed = 0, uses_anonymous_args = 0
 787:Veno-Echo.cpp ****     static bool lastShift{};
 1065              		.loc 20 787 5 view .LVU207
 788:Veno-Echo.cpp ****     static bool delayTimeL_pickup{};
 1066              		.loc 20 788 5 view .LVU208
 789:Veno-Echo.cpp ****     static bool Rev_DelayTime_pickup{};
 1067              		.loc 20 789 5 view .LVU209
 790:Veno-Echo.cpp ****     
 791:Veno-Echo.cpp ****     static float delayTimeL_Last{};
 1068              		.loc 20 791 5 view .LVU210
 792:Veno-Echo.cpp **** 
 793:Veno-Echo.cpp ****     //update pot values
 794:Veno-Echo.cpp ****     float delayTimeL_Pot{hw.adc.GetMuxFloat(7,2)};
 1069              		.loc 20 794 5 view .LVU211
 786:Veno-Echo.cpp ****     static bool lastShift{};
 1070              		.loc 20 786 1 is_stmt 0 view .LVU212
 1071 0000 10B5     		push	{r4, lr}
 1072              		.cfi_def_cfa_offset 8
 1073              		.cfi_offset 4, -8
 1074              		.cfi_offset 14, -4
 1075              		.loc 20 794 44 view .LVU213
 1076 0002 0222     		movs	r2, #2
 1077 0004 0721     		movs	r1, #7
 1078 0006 7948     		ldr	r0, .L75
 786:Veno-Echo.cpp ****     static bool lastShift{};
 1079              		.loc 20 786 1 view .LVU214
 1080 0008 2DED028B 		vpush.64	{d8}
 1081              		.cfi_def_cfa_offset 16
 1082              		.cfi_offset 80, -16
 1083              		.cfi_offset 81, -12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 51


 1084              		.loc 20 794 44 view .LVU215
 1085 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1086              	.LVL40:
 795:Veno-Echo.cpp **** 
 796:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 797:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 798:Veno-Echo.cpp ****     static int counterL{};
 799:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 1087              		.loc 20 799 26 view .LVU216
 1088 0010 7749     		ldr	r1, .L75+4
 1089              		.loc 20 799 31 view .LVU217
 1090 0012 784B     		ldr	r3, .L75+8
 1091              	.LVL41:
 798:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 1092              		.loc 20 798 5 is_stmt 1 view .LVU218
 1093              		.loc 20 799 5 view .LVU219
 1094              		.loc 20 799 26 is_stmt 0 view .LVU220
 1095 0014 0A68     		ldr	r2, [r1]
 1096              	.LBB897:
 800:Veno-Echo.cpp **** 
 801:Veno-Echo.cpp ****     if (!shift) //default control
 1097              		.loc 20 801 9 view .LVU221
 1098 0016 7848     		ldr	r0, .L75+12
 1099              	.LBE897:
 799:Veno-Echo.cpp **** 
 1100              		.loc 20 799 26 view .LVU222
 1101 0018 0132     		adds	r2, r2, #1
 1102              	.LBB964:
 1103              		.loc 20 801 5 view .LVU223
 1104 001a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1105              	.LBE964:
 799:Veno-Echo.cpp **** 
 1106              		.loc 20 799 31 view .LVU224
 1107 001c 83FB0243 		smull	r4, r3, r3, r2
 1108 0020 D417     		asrs	r4, r2, #31
 1109 0022 C4EB6313 		rsb	r3, r4, r3, asr #5
 1110 0026 03EB4303 		add	r3, r3, r3, lsl #1
 1111 002a A2EB8313 		sub	r3, r2, r3, lsl #6
 1112              	.LBB965:
 1113              	.LBB898:
 802:Veno-Echo.cpp ****     {
 803:Veno-Echo.cpp ****         static float delayTimeL_new{};
 804:Veno-Echo.cpp ****         //udpate pickup
 805:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 1114              		.loc 20 805 19 view .LVU225
 1115 002e 734A     		ldr	r2, .L75+16
 1116              	.LBE898:
 1117              	.LBE965:
 799:Veno-Echo.cpp **** 
 1118              		.loc 20 799 14 view .LVU226
 1119 0030 0B60     		str	r3, [r1]
 801:Veno-Echo.cpp ****     {
 1120              		.loc 20 801 5 is_stmt 1 view .LVU227
 1121              	.LBB966:
 1122 0032 0028     		cmp	r0, #0
 1123 0034 37D1     		bne	.L43
 1124              	.LBB917:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 52


 803:Veno-Echo.cpp ****         //udpate pickup
 1125              		.loc 20 803 9 view .LVU228
 1126              		.loc 20 805 9 view .LVU229
 1127 0036 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1128 0038 0029     		cmp	r1, #0
 1129 003a 41D0     		beq	.L44
 806:Veno-Echo.cpp ****         {
 807:Veno-Echo.cpp ****             lastShift = shift;
 1130              		.loc 20 807 13 view .LVU230
 808:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1131              		.loc 20 808 31 is_stmt 0 view .LVU231
 1132 003c 704C     		ldr	r4, .L75+20
 809:Veno-Echo.cpp ****             delayTimeL_new = delayTimeL_Pot;   //update new value
 1133              		.loc 20 809 28 view .LVU232
 1134 003e 7149     		ldr	r1, .L75+24
 807:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1135              		.loc 20 807 23 view .LVU233
 1136 0040 1070     		strb	r0, [r2]
 808:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1137              		.loc 20 808 13 is_stmt 1 view .LVU234
 808:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1138              		.loc 20 808 31 is_stmt 0 view .LVU235
 1139 0042 2070     		strb	r0, [r4]
 1140              		.loc 20 809 13 is_stmt 1 view .LVU236
 1141              		.loc 20 809 28 is_stmt 0 view .LVU237
 1142 0044 81ED000A 		vstr.32	s0, [r1]
 1143              	.L45:
 810:Veno-Echo.cpp ****         } 
 811:Veno-Echo.cpp ****         else    //not a recent shift change
 812:Veno-Echo.cpp ****         {
 813:Veno-Echo.cpp ****             if(!delayTimeL_pickup)  //not picked up
 814:Veno-Echo.cpp ****             {
 815:Veno-Echo.cpp ****                 if(abs(delayTimeL_Pot - delayTimeL_new) > pickupTolerance)  //checked if changed fr
 816:Veno-Echo.cpp ****                 {
 817:Veno-Echo.cpp ****                     delayTimeL_pickup = true;   //set to picked up
 818:Veno-Echo.cpp ****                 }
 819:Veno-Echo.cpp ****             }
 820:Veno-Echo.cpp ****         }
 821:Veno-Echo.cpp **** 
 822:Veno-Echo.cpp ****         float delayTimeL{};
 1144              		.loc 20 822 9 is_stmt 1 view .LVU238
 1145              	.LVL42:
 823:Veno-Echo.cpp **** 
 824:Veno-Echo.cpp ****         if(delayTimeL_pickup)
 1146              		.loc 20 824 9 view .LVU239
 825:Veno-Echo.cpp ****         {
 826:Veno-Echo.cpp ****             delayTimeL = PotCVCombo(delayTimeL_Pot,delayTimeL_CV);  //combine pot value and CV
 827:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 828:Veno-Echo.cpp ****         }
 829:Veno-Echo.cpp **** 
 830:Veno-Echo.cpp ****         else
 831:Veno-Echo.cpp ****         {
 832:Veno-Echo.cpp ****             delayTimeL = PotCVCombo(delayTimeL_Last,delayTimeL_CV); //combine last pot value and CV
 1147              		.loc 20 832 13 view .LVU240
 1148              	.LBB899:
 1149              	.LBI899:
 833:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 53


 834:Veno-Echo.cpp **** 
 835:Veno-Echo.cpp ****         if(counterL == 0)
 836:Veno-Echo.cpp ****         {
 837:Veno-Echo.cpp ****             if(delayL.SetDelayTime(delayTimeL,BaseTempo.getTapLength(),syncMode))
 838:Veno-Echo.cpp ****             {
 839:Veno-Echo.cpp ****             };
 840:Veno-Echo.cpp ****         }
 841:Veno-Echo.cpp **** 
 842:Veno-Echo.cpp ****     }   //not shift mode
 843:Veno-Echo.cpp **** 
 844:Veno-Echo.cpp ****     else    //shift mode
 845:Veno-Echo.cpp ****     {
 846:Veno-Echo.cpp ****         static float Rev_DelayTime_new{};
 847:Veno-Echo.cpp **** 
 848:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 849:Veno-Echo.cpp ****         {
 850:Veno-Echo.cpp ****             lastShift = shift;
 851:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 852:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 853:Veno-Echo.cpp ****         }
 854:Veno-Echo.cpp **** 
 855:Veno-Echo.cpp ****         else    //not a recent shift change
 856:Veno-Echo.cpp ****         {
 857:Veno-Echo.cpp ****             if(!Rev_DelayTime_pickup) //not picked up
 858:Veno-Echo.cpp ****             {
 859:Veno-Echo.cpp ****                 if(abs(delayTimeL_Pot - Rev_DelayTime_new) > pickupTolerance)
 860:Veno-Echo.cpp ****                 {
 861:Veno-Echo.cpp ****                     Rev_DelayTime_pickup = true;   //set picked up
 862:Veno-Echo.cpp ****                 }
 863:Veno-Echo.cpp ****             }
 864:Veno-Echo.cpp ****         }
 865:Veno-Echo.cpp **** 
 866:Veno-Echo.cpp ****         if(Rev_DelayTime_pickup)
 867:Veno-Echo.cpp ****         {
 868:Veno-Echo.cpp ****             float Rev_DelayTime{scale(delayTimeL_Pot,maxRevDelay,minRevDelay,EXPONENTIAL)};
 869:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 870:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 871:Veno-Echo.cpp ****             //save setting:
 872:Veno-Echo.cpp ****             AltControls.RevLength = Rev_DelayTime;
 873:Veno-Echo.cpp ****         }
 874:Veno-Echo.cpp ****     }
 875:Veno-Echo.cpp ****     
 876:Veno-Echo.cpp **** }
 877:Veno-Echo.cpp **** 
 878:Veno-Echo.cpp **** void Update_DelayTimeR_CV()
 879:Veno-Echo.cpp **** {
 880:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 881:Veno-Echo.cpp **** }
 882:Veno-Echo.cpp **** 
 883:Veno-Echo.cpp **** void Update_DelayTimeR()
 884:Veno-Echo.cpp **** {
 885:Veno-Echo.cpp ****     static bool lastShift{};
 886:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 887:Veno-Echo.cpp ****     static bool tapRatio_pickup{};
 888:Veno-Echo.cpp ****     
 889:Veno-Echo.cpp ****     static float delayTimeR_Last{};
 890:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 54


 891:Veno-Echo.cpp ****     //update pot values
 892:Veno-Echo.cpp ****     float delayTimeR_Pot{hw.adc.GetMuxFloat(7,6)};
 893:Veno-Echo.cpp **** 
 894:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 895:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 896:Veno-Echo.cpp ****     static int counterR{};
 897:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 898:Veno-Echo.cpp **** 
 899:Veno-Echo.cpp ****     if (!shift) //default control
 900:Veno-Echo.cpp ****     {
 901:Veno-Echo.cpp ****         static float delayTimeR_new{};
 902:Veno-Echo.cpp ****         //udpate pickup
 903:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 904:Veno-Echo.cpp ****         {
 905:Veno-Echo.cpp ****             lastShift = shift;
 906:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 907:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 908:Veno-Echo.cpp ****         } 
 909:Veno-Echo.cpp ****         else    //not a default shift change
 910:Veno-Echo.cpp ****         {
 911:Veno-Echo.cpp ****             if(!delayTimeR_pickup)  //not picked up
 912:Veno-Echo.cpp ****             {
 913:Veno-Echo.cpp ****                 if(abs(delayTimeR_Pot - delayTimeR_new) > pickupTolerance)  //checked if changed fr
 914:Veno-Echo.cpp ****                 {
 915:Veno-Echo.cpp ****                     delayTimeR_pickup = true;   //set to picked up
 916:Veno-Echo.cpp ****                 }
 917:Veno-Echo.cpp ****             }
 918:Veno-Echo.cpp ****         }
 919:Veno-Echo.cpp **** 
 920:Veno-Echo.cpp ****         float delayTimeR{};
 921:Veno-Echo.cpp **** 
 922:Veno-Echo.cpp ****         if(delayTimeR_pickup)
 923:Veno-Echo.cpp ****         {
 924:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Pot,delayTimeR_CV);
 925:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 926:Veno-Echo.cpp ****         }
 927:Veno-Echo.cpp **** 
 928:Veno-Echo.cpp ****         else
 929:Veno-Echo.cpp ****         {
 930:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Last,delayTimeR_CV);
 931:Veno-Echo.cpp ****         }
 932:Veno-Echo.cpp **** 
 933:Veno-Echo.cpp ****         if(counterR == 0)
 934:Veno-Echo.cpp ****         {
 935:Veno-Echo.cpp ****             if(delayR.SetDelayTime(delayTimeR,BaseTempo.getTapLength(),syncMode))
 936:Veno-Echo.cpp ****             {
 937:Veno-Echo.cpp ****             };
 938:Veno-Echo.cpp **** 
 939:Veno-Echo.cpp ****         }
 940:Veno-Echo.cpp ****     }   //not shift mode
 941:Veno-Echo.cpp **** 
 942:Veno-Echo.cpp ****     else    //shift mode
 943:Veno-Echo.cpp ****     {
 944:Veno-Echo.cpp **** 
 945:Veno-Echo.cpp ****         static float tapRatio_new{};
 946:Veno-Echo.cpp **** 
 947:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 55


 948:Veno-Echo.cpp ****         {
 949:Veno-Echo.cpp ****             lastShift = shift;
 950:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 951:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 952:Veno-Echo.cpp ****         }
 953:Veno-Echo.cpp **** 
 954:Veno-Echo.cpp ****         else    //not a recent shift change
 955:Veno-Echo.cpp ****         {
 956:Veno-Echo.cpp ****             if(!tapRatio_pickup) //not picked up
 957:Veno-Echo.cpp ****             {
 958:Veno-Echo.cpp ****                 if(abs(delayTimeR_Pot - tapRatio_new) > pickupTolerance)
 959:Veno-Echo.cpp ****                 {
 960:Veno-Echo.cpp ****                     tapRatio_pickup = true;   //set picked up
 961:Veno-Echo.cpp ****                 }
 962:Veno-Echo.cpp ****             }
 963:Veno-Echo.cpp ****         }
 964:Veno-Echo.cpp **** 
 965:Veno-Echo.cpp ****         if(tapRatio_pickup)
 966:Veno-Echo.cpp ****         {
 967:Veno-Echo.cpp ****             float tapRatioInput{delayTimeR_Pot};
 968:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
 969:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 970:Veno-Echo.cpp ****             //save setting:
 971:Veno-Echo.cpp ****             AltControls.tapRatio = GetTapRatio(tapRatio);
 972:Veno-Echo.cpp ****         }
 973:Veno-Echo.cpp ****     }
 974:Veno-Echo.cpp ****     
 975:Veno-Echo.cpp **** }
 976:Veno-Echo.cpp **** void Update_feedbackL_CV()
 977:Veno-Echo.cpp **** {
 978:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 979:Veno-Echo.cpp **** }
 980:Veno-Echo.cpp **** void Update_feedbackL()
 981:Veno-Echo.cpp **** {
 982:Veno-Echo.cpp ****     static bool lastShift{};
 983:Veno-Echo.cpp ****     static bool feedbackL_pickup{};
 984:Veno-Echo.cpp ****     static bool HPCutoff_pickup{};
 985:Veno-Echo.cpp **** 
 986:Veno-Echo.cpp ****     static float feedbackL_Last{};
 987:Veno-Echo.cpp **** 
 988:Veno-Echo.cpp ****     //get pot values:
 989:Veno-Echo.cpp ****     //float feedbackL_Pot{hw.adc.GetFloat(2)};
 990:Veno-Echo.cpp ****     float feedbackL_Pot{hw.adc.GetMuxFloat(7,1)};
 991:Veno-Echo.cpp **** 
 992:Veno-Echo.cpp ****     if (!shift) //default controls
 993:Veno-Echo.cpp ****     {   
 994:Veno-Echo.cpp ****         static float feedbackL_new{};
 995:Veno-Echo.cpp ****         //update pickup
 996:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 997:Veno-Echo.cpp ****         {
 998:Veno-Echo.cpp ****             lastShift = shift;
 999:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
1000:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
1001:Veno-Echo.cpp ****         } 
1002:Veno-Echo.cpp ****         else    //not a default shift change
1003:Veno-Echo.cpp ****         {
1004:Veno-Echo.cpp ****             if(!feedbackL_pickup)  //not picked up
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 56


1005:Veno-Echo.cpp ****             {
1006:Veno-Echo.cpp ****                 if(abs(feedbackL_Pot - feedbackL_new) > pickupTolerance)  //checked if changed from
1007:Veno-Echo.cpp ****                 {
1008:Veno-Echo.cpp ****                     feedbackL_pickup = true;   //set to picked up
1009:Veno-Echo.cpp ****                 }
1010:Veno-Echo.cpp ****             }
1011:Veno-Echo.cpp ****         }
1012:Veno-Echo.cpp **** 
1013:Veno-Echo.cpp ****         float feedbackL_combo{};
1014:Veno-Echo.cpp **** 
1015:Veno-Echo.cpp ****         if(feedbackL_pickup)
1016:Veno-Echo.cpp ****         {
1017:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Pot,feedbackL_CV);
1018:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
1019:Veno-Echo.cpp ****         }
1020:Veno-Echo.cpp **** 
1021:Veno-Echo.cpp ****         else
1022:Veno-Echo.cpp ****         {
1023:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Last,feedbackL_CV);
1024:Veno-Echo.cpp ****         }
1025:Veno-Echo.cpp ****   
1026:Veno-Echo.cpp ****         float feedbackL_Target{scale(feedbackL_combo,0.0,maxFB,LINEAR)};  
1027:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
1028:Veno-Echo.cpp ****     }
1029:Veno-Echo.cpp ****     else    //alternate controls
1030:Veno-Echo.cpp ****     {
1031:Veno-Echo.cpp ****         static float HPCutoff_new{};
1032:Veno-Echo.cpp **** 
1033:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1034:Veno-Echo.cpp ****         {
1035:Veno-Echo.cpp ****             lastShift = shift;
1036:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
1037:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
1038:Veno-Echo.cpp ****         }
1039:Veno-Echo.cpp **** 
1040:Veno-Echo.cpp ****         else    //not a recent shift change
1041:Veno-Echo.cpp ****         {
1042:Veno-Echo.cpp ****             if(!HPCutoff_pickup) //not picked up
1043:Veno-Echo.cpp ****             {
1044:Veno-Echo.cpp ****                 if(abs(feedbackL_Pot - HPCutoff_new) > pickupTolerance)
1045:Veno-Echo.cpp ****                 {
1046:Veno-Echo.cpp ****                     HPCutoff_pickup = true;   //set picked up
1047:Veno-Echo.cpp ****                 }
1048:Veno-Echo.cpp ****             }
1049:Veno-Echo.cpp ****         }
1050:Veno-Echo.cpp **** 
1051:Veno-Echo.cpp ****         if(HPCutoff_pickup)
1052:Veno-Echo.cpp ****         {
1053:Veno-Echo.cpp ****             float HPCutoff{};
1054:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
1055:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
1056:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
1057:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
1058:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
1059:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
1060:Veno-Echo.cpp ****         }
1061:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 57


1062:Veno-Echo.cpp **** }
1063:Veno-Echo.cpp **** 
1064:Veno-Echo.cpp **** void Update_feedbackR_CV()
1065:Veno-Echo.cpp **** {
1066:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
1067:Veno-Echo.cpp **** }
1068:Veno-Echo.cpp **** 
1069:Veno-Echo.cpp **** void Update_feedbackR()
1070:Veno-Echo.cpp **** {
1071:Veno-Echo.cpp ****     static bool lastShift{};
1072:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
1073:Veno-Echo.cpp ****     static bool LPCutoff_pickup{};
1074:Veno-Echo.cpp **** 
1075:Veno-Echo.cpp ****     static float feedbackR_Last{};
1076:Veno-Echo.cpp **** 
1077:Veno-Echo.cpp ****     //get pot values:
1078:Veno-Echo.cpp ****     float feedbackR_Pot{hw.adc.GetMuxFloat(7,4)};
1079:Veno-Echo.cpp **** 
1080:Veno-Echo.cpp ****     if (!shift) //default controls
1081:Veno-Echo.cpp ****     {   
1082:Veno-Echo.cpp ****         static float feedbackR_new{};
1083:Veno-Echo.cpp ****         //update pickup
1084:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1085:Veno-Echo.cpp ****         {
1086:Veno-Echo.cpp ****             lastShift = shift;
1087:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
1088:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
1089:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
1090:Veno-Echo.cpp ****         } 
1091:Veno-Echo.cpp ****         else    //not a recent shift change
1092:Veno-Echo.cpp ****         {
1093:Veno-Echo.cpp ****             if(!feedbackR_pickup)  //not picked up
1094:Veno-Echo.cpp ****             {
1095:Veno-Echo.cpp ****                 if(abs(feedbackR_Pot - feedbackR_new) > pickupTolerance)  //checked if changed from
1096:Veno-Echo.cpp ****                 {
1097:Veno-Echo.cpp ****                     feedbackR_pickup = true;   //set to picked up
1098:Veno-Echo.cpp ****                 }
1099:Veno-Echo.cpp ****             }
1100:Veno-Echo.cpp ****         }
1101:Veno-Echo.cpp **** 
1102:Veno-Echo.cpp ****         float feedbackR_combo{};
1103:Veno-Echo.cpp ****         
1104:Veno-Echo.cpp ****         if(feedbackR_pickup)
1105:Veno-Echo.cpp ****         {
1106:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Pot,feedbackR_CV);
1107:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
1108:Veno-Echo.cpp ****         }
1109:Veno-Echo.cpp **** 
1110:Veno-Echo.cpp ****         else
1111:Veno-Echo.cpp ****         {
1112:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Last,feedbackR_CV);
1113:Veno-Echo.cpp ****         }
1114:Veno-Echo.cpp **** 
1115:Veno-Echo.cpp ****         float feedbackR_Target{scale(feedbackR_combo,0.0,maxFB,LINEAR)};
1116:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
1117:Veno-Echo.cpp ****     }
1118:Veno-Echo.cpp ****     else    //alternate controls
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 58


1119:Veno-Echo.cpp ****     {
1120:Veno-Echo.cpp **** 
1121:Veno-Echo.cpp ****         static float LPCutoff_new{};
1122:Veno-Echo.cpp **** 
1123:Veno-Echo.cpp ****          if (shift != lastShift) //recent shift change
1124:Veno-Echo.cpp ****         {
1125:Veno-Echo.cpp ****             lastShift = shift;
1126:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
1127:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
1128:Veno-Echo.cpp ****         }
1129:Veno-Echo.cpp **** 
1130:Veno-Echo.cpp ****         else    //not a recent shift change
1131:Veno-Echo.cpp ****         {
1132:Veno-Echo.cpp ****             if(!LPCutoff_pickup) //not picked up
1133:Veno-Echo.cpp ****             {
1134:Veno-Echo.cpp ****                 if(abs(feedbackR_Pot - LPCutoff_new) > pickupTolerance)
1135:Veno-Echo.cpp ****                 {
1136:Veno-Echo.cpp ****                     LPCutoff_pickup = true;   //set picked up
1137:Veno-Echo.cpp ****                 }
1138:Veno-Echo.cpp ****             }
1139:Veno-Echo.cpp ****         }
1140:Veno-Echo.cpp **** 
1141:Veno-Echo.cpp ****         if(LPCutoff_pickup)
1142:Veno-Echo.cpp ****         {
1143:Veno-Echo.cpp ****             float LPCutoff{};
1144:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
1145:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
1146:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
1147:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
1148:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
1149:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
1150:Veno-Echo.cpp ****         }
1151:Veno-Echo.cpp ****     }
1152:Veno-Echo.cpp **** }
1153:Veno-Echo.cpp **** 
1154:Veno-Echo.cpp **** void Update_drywet_CV()
1155:Veno-Echo.cpp **** {
1156:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
1157:Veno-Echo.cpp **** }
1158:Veno-Echo.cpp **** 
1159:Veno-Echo.cpp **** void Update_drywet()
1160:Veno-Echo.cpp **** {
1161:Veno-Echo.cpp ****     static bool lastShift{};
1162:Veno-Echo.cpp ****     static bool drywet_pickup{};
1163:Veno-Echo.cpp ****     static bool Res_pickup{};
1164:Veno-Echo.cpp **** 
1165:Veno-Echo.cpp ****     static float drywet_Last{}; //last drywet position (unscaled)
1166:Veno-Echo.cpp ****     //static float Res_Last{}; //last res value (unscaled)
1167:Veno-Echo.cpp **** 
1168:Veno-Echo.cpp ****     //get pot values:
1169:Veno-Echo.cpp ****     //float drywet_Pot{hw.adc.GetFloat(4)};
1170:Veno-Echo.cpp ****     float drywet_Pot{hw.adc.GetMuxFloat(7,5)}; //read current pot position
1171:Veno-Echo.cpp **** 
1172:Veno-Echo.cpp ****     if (!shift) //default controls
1173:Veno-Echo.cpp ****     {   
1174:Veno-Echo.cpp **** 
1175:Veno-Echo.cpp ****         static float drywet_new{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 59


1176:Veno-Echo.cpp **** 
1177:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1178:Veno-Echo.cpp ****         {
1179:Veno-Echo.cpp ****             lastShift = shift;
1180:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
1181:Veno-Echo.cpp ****             drywet_pickup = false;  //set to not picked up
1182:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
1183:Veno-Echo.cpp ****         } 
1184:Veno-Echo.cpp ****         
1185:Veno-Echo.cpp ****         else    //not a recent shift change
1186:Veno-Echo.cpp ****         {
1187:Veno-Echo.cpp ****             if(!drywet_pickup)  //not pickup
1188:Veno-Echo.cpp ****             {
1189:Veno-Echo.cpp ****                 //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,false);
1190:Veno-Echo.cpp ****                 if(abs(drywet_Pot - drywet_new) > pickupTolerance)  //check if changed from new val
1191:Veno-Echo.cpp ****                 {
1192:Veno-Echo.cpp ****                     drywet_pickup = true;   //set to picked up
1193:Veno-Echo.cpp ****                 }
1194:Veno-Echo.cpp ****             }
1195:Veno-Echo.cpp **** 
1196:Veno-Echo.cpp ****         }
1197:Veno-Echo.cpp ****         
1198:Veno-Echo.cpp ****         float drywetcombo{};
1199:Veno-Echo.cpp **** 
1200:Veno-Echo.cpp ****         if (drywet_pickup)
1201:Veno-Echo.cpp ****         {
1202:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Pot,drywet_CV);    //combine pot and CV
1203:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
1204:Veno-Echo.cpp ****         }
1205:Veno-Echo.cpp **** 
1206:Veno-Echo.cpp ****         else
1207:Veno-Echo.cpp ****         {
1208:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Last,drywet_CV);    //combine last pot value and CV
1209:Veno-Echo.cpp ****         }
1210:Veno-Echo.cpp **** 
1211:Veno-Echo.cpp ****         float drywetTarget{};
1212:Veno-Echo.cpp **** 
1213:Veno-Echo.cpp ****         if(drywetcombo >= 0.98)
1214:Veno-Echo.cpp ****         {
1215:Veno-Echo.cpp ****             drywetTarget = 1.0f;
1216:Veno-Echo.cpp ****         }
1217:Veno-Echo.cpp ****         else if(drywetcombo <= 0.02)
1218:Veno-Echo.cpp ****         {
1219:Veno-Echo.cpp ****             drywetTarget = 0.0f;
1220:Veno-Echo.cpp ****         }
1221:Veno-Echo.cpp ****         else
1222:Veno-Echo.cpp ****         {
1223:Veno-Echo.cpp ****             drywetTarget = scale(drywetcombo,0.0,1.0,LINEAR); 
1224:Veno-Echo.cpp ****         }
1225:Veno-Echo.cpp **** 
1226:Veno-Echo.cpp ****         //fonepole(drywet,drywetTarget,0.032f); 
1227:Veno-Echo.cpp ****         fonepole(drywet,drywetTarget,0.016f); 
1228:Veno-Echo.cpp ****     }
1229:Veno-Echo.cpp ****     else    //alternate controls
1230:Veno-Echo.cpp ****     {
1231:Veno-Echo.cpp ****         static float Res_new{};
1232:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 60


1233:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1234:Veno-Echo.cpp ****         {
1235:Veno-Echo.cpp ****             lastShift = shift;
1236:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
1237:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
1238:Veno-Echo.cpp ****         }
1239:Veno-Echo.cpp **** 
1240:Veno-Echo.cpp ****         else    //not a recent shift change
1241:Veno-Echo.cpp ****         {
1242:Veno-Echo.cpp ****             if(!Res_pickup) //not picked up
1243:Veno-Echo.cpp ****             {
1244:Veno-Echo.cpp ****                 if(abs(drywet_Pot - Res_new) > pickupTolerance)
1245:Veno-Echo.cpp ****                 {
1246:Veno-Echo.cpp ****                     Res_pickup = true;  //set picked up
1247:Veno-Echo.cpp ****                 }
1248:Veno-Echo.cpp ****             }
1249:Veno-Echo.cpp ****         }
1250:Veno-Echo.cpp **** 
1251:Veno-Echo.cpp ****         if(Res_pickup)
1252:Veno-Echo.cpp ****         {
1253:Veno-Echo.cpp ****             float Res{};
1254:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
1255:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
1256:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
1257:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
1258:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
1259:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
1260:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
1261:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
1262:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
1263:Veno-Echo.cpp ****             AltControls.Resonance = Res;
1264:Veno-Echo.cpp ****         }
1265:Veno-Echo.cpp ****     }
1266:Veno-Echo.cpp **** }
1267:Veno-Echo.cpp **** 
1268:Veno-Echo.cpp **** void Update_width_CV()
1269:Veno-Echo.cpp **** {
1270:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
1271:Veno-Echo.cpp **** }
1272:Veno-Echo.cpp **** 
1273:Veno-Echo.cpp **** void Update_width()
1274:Veno-Echo.cpp **** {
1275:Veno-Echo.cpp ****     static bool lastShift{};
1276:Veno-Echo.cpp ****     static bool width_pickup{};
1277:Veno-Echo.cpp ****     static bool ModDepth_pickup{};
1278:Veno-Echo.cpp **** 
1279:Veno-Echo.cpp ****     static float width_Last{};
1280:Veno-Echo.cpp **** 
1281:Veno-Echo.cpp ****     //get pot values:
1282:Veno-Echo.cpp ****     float width_Pot{hw.adc.GetMuxFloat(7,7)};
1283:Veno-Echo.cpp **** 
1284:Veno-Echo.cpp ****     if (!shift) //default controls
1285:Veno-Echo.cpp ****     {   
1286:Veno-Echo.cpp ****         static float width_new{};
1287:Veno-Echo.cpp ****         //update pickup
1288:Veno-Echo.cpp ****         if (shift != lastShift)
1289:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 61


1290:Veno-Echo.cpp ****             lastShift = shift;
1291:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
1292:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
1293:Veno-Echo.cpp ****         }
1294:Veno-Echo.cpp **** 
1295:Veno-Echo.cpp ****         else
1296:Veno-Echo.cpp ****         {
1297:Veno-Echo.cpp ****             if(!width_pickup)  //not picked up
1298:Veno-Echo.cpp ****             {
1299:Veno-Echo.cpp ****                 if(abs(width_Pot - width_new) > pickupTolerance)  //checked if changed from new val
1300:Veno-Echo.cpp ****                 {
1301:Veno-Echo.cpp ****                     width_pickup = true;   //set to picked up
1302:Veno-Echo.cpp ****                 }
1303:Veno-Echo.cpp ****             }
1304:Veno-Echo.cpp **** 
1305:Veno-Echo.cpp ****         }
1306:Veno-Echo.cpp **** 
1307:Veno-Echo.cpp ****         float widthTarget{};
1308:Veno-Echo.cpp **** 
1309:Veno-Echo.cpp ****         if(width_pickup)
1310:Veno-Echo.cpp ****         {
1311:Veno-Echo.cpp ****             widthTarget = scale(PotCVCombo(width_Pot,width_CV),0.5f,0.0f,LINEAR);
1312:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
1313:Veno-Echo.cpp ****         }
1314:Veno-Echo.cpp **** 
1315:Veno-Echo.cpp ****         else
1316:Veno-Echo.cpp ****         {        
1317:Veno-Echo.cpp ****             widthTarget = scale(PotCVCombo(width_Last,width_CV),0.5f,0.0f,LINEAR);
1318:Veno-Echo.cpp ****         }
1319:Veno-Echo.cpp ****             
1320:Veno-Echo.cpp ****             fonepole(width,widthTarget,0.032f);
1321:Veno-Echo.cpp ****             WidthXfade.SetPos(width);
1322:Veno-Echo.cpp ****     }
1323:Veno-Echo.cpp **** 
1324:Veno-Echo.cpp ****     else    //alternate controls
1325:Veno-Echo.cpp ****     {
1326:Veno-Echo.cpp ****         static float ModDepth_new{};
1327:Veno-Echo.cpp **** 
1328:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1329:Veno-Echo.cpp ****         {
1330:Veno-Echo.cpp ****             lastShift = shift;
1331:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
1332:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
1333:Veno-Echo.cpp ****         }
1334:Veno-Echo.cpp **** 
1335:Veno-Echo.cpp ****         else    //not a recent shift change
1336:Veno-Echo.cpp ****         {
1337:Veno-Echo.cpp ****             if(!ModDepth_pickup) //not picked up
1338:Veno-Echo.cpp ****             {
1339:Veno-Echo.cpp ****                 if(abs(width_Pot - ModDepth_new) > pickupTolerance)
1340:Veno-Echo.cpp ****                 {
1341:Veno-Echo.cpp ****                     ModDepth_pickup = true;   //set picked up
1342:Veno-Echo.cpp ****                 }
1343:Veno-Echo.cpp ****             }
1344:Veno-Echo.cpp ****         }
1345:Veno-Echo.cpp **** 
1346:Veno-Echo.cpp ****         if(ModDepth_pickup)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 62


1347:Veno-Echo.cpp ****         {
1348:Veno-Echo.cpp ****             ModDepth = scale(width_Pot,minModDepth,maxModDepth,LINEAR); 
1349:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
1350:Veno-Echo.cpp ****         }
1351:Veno-Echo.cpp ****     }
1352:Veno-Echo.cpp **** }
1353:Veno-Echo.cpp **** 
1354:Veno-Echo.cpp **** void Update_crossfeedback()
1355:Veno-Echo.cpp **** {
1356:Veno-Echo.cpp ****     static bool lastShift{};
1357:Veno-Echo.cpp ****     static bool crossfeedback_pickup{};
1358:Veno-Echo.cpp ****     static bool modRate_pickup{};
1359:Veno-Echo.cpp **** 
1360:Veno-Echo.cpp ****     static float crossfeedback_Last{};
1361:Veno-Echo.cpp **** 
1362:Veno-Echo.cpp ****     //get pot values:
1363:Veno-Echo.cpp ****     float crossfeedback_Pot{hw.adc.GetMuxFloat(7,0)};
1364:Veno-Echo.cpp **** 
1365:Veno-Echo.cpp ****     if (!shift) //default controls
1366:Veno-Echo.cpp ****     {   
1367:Veno-Echo.cpp ****         static float crossfeedback_new{};
1368:Veno-Echo.cpp ****         //update pickup
1369:Veno-Echo.cpp ****         if (shift != lastShift)
1370:Veno-Echo.cpp ****         {
1371:Veno-Echo.cpp ****             lastShift = shift;
1372:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
1373:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
1374:Veno-Echo.cpp ****         }
1375:Veno-Echo.cpp **** 
1376:Veno-Echo.cpp ****         else
1377:Veno-Echo.cpp ****         {
1378:Veno-Echo.cpp ****             if(!crossfeedback_pickup)  //not picked up
1379:Veno-Echo.cpp ****             {
1380:Veno-Echo.cpp ****                 if(abs(crossfeedback_Pot - crossfeedback_new) > pickupTolerance)  //checked if chan
1381:Veno-Echo.cpp ****                 {
1382:Veno-Echo.cpp ****                     crossfeedback_pickup = true;   //set to picked up
1383:Veno-Echo.cpp ****                 }
1384:Veno-Echo.cpp ****             }
1385:Veno-Echo.cpp ****         }
1386:Veno-Echo.cpp ****         float crossfeedbackTarget{};
1387:Veno-Echo.cpp **** 
1388:Veno-Echo.cpp ****         if(crossfeedback_pickup)
1389:Veno-Echo.cpp ****         {
1390:Veno-Echo.cpp ****             crossfeedbackTarget = scale(crossfeedback_Pot,0.0,1.0,LINEAR);
1391:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
1392:Veno-Echo.cpp ****         }
1393:Veno-Echo.cpp **** 
1394:Veno-Echo.cpp ****         else
1395:Veno-Echo.cpp ****         {
1396:Veno-Echo.cpp ****             crossfeedbackTarget = scale(crossfeedback_Last,0.0,1.0,LINEAR);
1397:Veno-Echo.cpp ****         }
1398:Veno-Echo.cpp **** 
1399:Veno-Echo.cpp ****         fonepole(crossfeedback,crossfeedbackTarget,0.032f);
1400:Veno-Echo.cpp ****     }
1401:Veno-Echo.cpp ****     else    //alternate controls
1402:Veno-Echo.cpp ****     {
1403:Veno-Echo.cpp ****         static float modRate_new{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 63


1404:Veno-Echo.cpp **** 
1405:Veno-Echo.cpp ****         if (shift != lastShift)
1406:Veno-Echo.cpp ****         {
1407:Veno-Echo.cpp ****             lastShift = shift;
1408:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
1409:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
1410:Veno-Echo.cpp ****         }
1411:Veno-Echo.cpp **** 
1412:Veno-Echo.cpp ****         else
1413:Veno-Echo.cpp ****         {
1414:Veno-Echo.cpp ****             if(!modRate_pickup)
1415:Veno-Echo.cpp ****             {
1416:Veno-Echo.cpp ****                 if(abs(crossfeedback_Pot - modRate_new) > pickupTolerance)
1417:Veno-Echo.cpp ****                 {
1418:Veno-Echo.cpp ****                     modRate_pickup = true; //set picked up
1419:Veno-Echo.cpp ****                 }
1420:Veno-Echo.cpp ****             }
1421:Veno-Echo.cpp ****         }
1422:Veno-Echo.cpp **** 
1423:Veno-Echo.cpp ****         if(modRate_pickup)
1424:Veno-Echo.cpp ****         {
1425:Veno-Echo.cpp ****             float modRate{scale(crossfeedback_Pot,minModRate,maxModRate,LINEAR)};
1426:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
1427:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
1428:Veno-Echo.cpp ****         }
1429:Veno-Echo.cpp ****     }
1430:Veno-Echo.cpp **** }
1431:Veno-Echo.cpp **** 
1432:Veno-Echo.cpp **** void Update_filterXfade()
1433:Veno-Echo.cpp **** {
1434:Veno-Echo.cpp ****     static bool lastShift{};
1435:Veno-Echo.cpp ****     static bool filterXfade_pickup{};
1436:Veno-Echo.cpp ****     static bool PostFilters_pickup{};
1437:Veno-Echo.cpp **** 
1438:Veno-Echo.cpp ****     static float filterXfade_last{};
1439:Veno-Echo.cpp **** 
1440:Veno-Echo.cpp ****     //get pot values:
1441:Veno-Echo.cpp ****     float filterXfade_Pot{hw.adc.GetMuxFloat(7,3)};
1442:Veno-Echo.cpp **** 
1443:Veno-Echo.cpp ****     if (!shift) //default controls
1444:Veno-Echo.cpp ****     {   
1445:Veno-Echo.cpp ****         static float filterXfade_new{};
1446:Veno-Echo.cpp ****         //update pickup
1447:Veno-Echo.cpp ****         if (shift != lastShift)
1448:Veno-Echo.cpp ****         {
1449:Veno-Echo.cpp ****             lastShift = shift;
1450:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
1451:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
1452:Veno-Echo.cpp ****         }
1453:Veno-Echo.cpp **** 
1454:Veno-Echo.cpp ****         else
1455:Veno-Echo.cpp ****         {
1456:Veno-Echo.cpp ****             if(!filterXfade_pickup)  //not picked up
1457:Veno-Echo.cpp ****             {
1458:Veno-Echo.cpp ****                 if(abs(filterXfade_Pot - filterXfade_new) > pickupTolerance)  //checked if changed 
1459:Veno-Echo.cpp ****                 {
1460:Veno-Echo.cpp ****                     filterXfade_pickup = true;   //set to picked up
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 64


1461:Veno-Echo.cpp ****                 }
1462:Veno-Echo.cpp ****             }
1463:Veno-Echo.cpp ****         }
1464:Veno-Echo.cpp **** 
1465:Veno-Echo.cpp ****         float filterXfadeTarget{};
1466:Veno-Echo.cpp **** 
1467:Veno-Echo.cpp ****         if(filterXfade_pickup)
1468:Veno-Echo.cpp ****         {
1469:Veno-Echo.cpp ****             filterXfadeTarget = scale(filterXfade_Pot,0.0,1.0,EXPONENTIAL);
1470:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
1471:Veno-Echo.cpp ****         }
1472:Veno-Echo.cpp **** 
1473:Veno-Echo.cpp ****         else
1474:Veno-Echo.cpp ****         {
1475:Veno-Echo.cpp ****             filterXfadeTarget = scale(filterXfade_last,0.0,1.0,EXPONENTIAL);
1476:Veno-Echo.cpp ****         }
1477:Veno-Echo.cpp **** 
1478:Veno-Echo.cpp ****         fonepole(filterXfade,filterXfadeTarget,0.032f);
1479:Veno-Echo.cpp ****     }
1480:Veno-Echo.cpp ****     else    //alternate controls
1481:Veno-Echo.cpp ****     {
1482:Veno-Echo.cpp **** 
1483:Veno-Echo.cpp ****         static float PostFilters_new{};
1484:Veno-Echo.cpp **** 
1485:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1486:Veno-Echo.cpp ****         {
1487:Veno-Echo.cpp ****             lastShift = shift;
1488:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
1489:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
1490:Veno-Echo.cpp ****         }
1491:Veno-Echo.cpp **** 
1492:Veno-Echo.cpp ****         else    //not a recent shift change
1493:Veno-Echo.cpp ****         {
1494:Veno-Echo.cpp ****             if(!PostFilters_pickup) //not picked up
1495:Veno-Echo.cpp ****             {
1496:Veno-Echo.cpp ****                 if(abs(filterXfade_Pot - PostFilters_new) > pickupTolerance)
1497:Veno-Echo.cpp ****                 {
1498:Veno-Echo.cpp ****                     PostFilters_pickup = true;   //set picked up
1499:Veno-Echo.cpp ****                 }
1500:Veno-Echo.cpp ****             }
1501:Veno-Echo.cpp ****         }
1502:Veno-Echo.cpp ****         
1503:Veno-Echo.cpp ****         if(PostFilters_pickup)
1504:Veno-Echo.cpp ****         {
1505:Veno-Echo.cpp ****             if(filterXfade_Pot < 0.45f)
1506:Veno-Echo.cpp ****             {
1507:Veno-Echo.cpp ****                 PostFilters = false;
1508:Veno-Echo.cpp ****             }
1509:Veno-Echo.cpp ****             else if(filterXfade_Pot > 0.55f)
1510:Veno-Echo.cpp ****             {
1511:Veno-Echo.cpp ****                 PostFilters = true;
1512:Veno-Echo.cpp ****             }
1513:Veno-Echo.cpp ****             else
1514:Veno-Echo.cpp ****             {
1515:Veno-Echo.cpp ****               //do nothing
1516:Veno-Echo.cpp ****             }
1517:Veno-Echo.cpp ****             AltControls.FilterPrePost = filterXfade_Pot;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 65


1518:Veno-Echo.cpp ****         }  
1519:Veno-Echo.cpp ****     }
1520:Veno-Echo.cpp **** }
1521:Veno-Echo.cpp **** 
1522:Veno-Echo.cpp **** void GetModCV()
1523:Veno-Echo.cpp **** {
1524:Veno-Echo.cpp ****     //get modulation CV input
1525:Veno-Echo.cpp ****     modulation_CV_Raw = scale(hw.adc.GetFloat(6),-1.0f * maxModAmp,maxModAmp,LINEAR);
1526:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
1527:Veno-Echo.cpp **** }
1528:Veno-Echo.cpp **** 
1529:Veno-Echo.cpp **** void Update_Mod()
1530:Veno-Echo.cpp **** {    
1531:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
1532:Veno-Echo.cpp ****     static float modulation_CV{};
1533:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
1534:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
1535:Veno-Echo.cpp ****     //calculate InternalMod
1536:Veno-Echo.cpp ****     float internalmod{lfo.Process() * ModDepth_Filtered};
1537:Veno-Echo.cpp ****     //apply modulation to delay lines
1538:Veno-Echo.cpp ****     delayL.SetModulation(modulation_CV + internalmod);
1539:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
1540:Veno-Echo.cpp **** }
1541:Veno-Echo.cpp **** 
1542:Veno-Echo.cpp **** void UpdateClock()
1543:Veno-Echo.cpp **** {
1544:Veno-Echo.cpp ****     static int divCounter{};
1545:Veno-Echo.cpp ****     ClockIn.Debounce();
1546:Veno-Echo.cpp **** 
1547:Veno-Echo.cpp ****     //if clock in pulse received
1548:Veno-Echo.cpp ****     if (ClockIn.RisingEdge())    
1549:Veno-Echo.cpp ****     {   
1550:Veno-Echo.cpp ****         divCounter = (divCounter + 1) % PPQN;
1551:Veno-Echo.cpp ****         //tempoLED_BASE.resetPhase();
1552:Veno-Echo.cpp ****         if(divCounter == 0)
1553:Veno-Echo.cpp ****         {
1554:Veno-Echo.cpp ****             if(BaseTempo.tap()) //if valid tap resistered
1555:Veno-Echo.cpp ****             {
1556:Veno-Echo.cpp ****                 tempoLED_BASE.setTempo(BaseTempo.getTapFreq()); //set new base freq
1557:Veno-Echo.cpp ****             }
1558:Veno-Echo.cpp ****         }
1559:Veno-Echo.cpp ****     }
1560:Veno-Echo.cpp ****     
1561:Veno-Echo.cpp **** }
1562:Veno-Echo.cpp **** 
1563:Veno-Echo.cpp **** void Update_Buttons()
1564:Veno-Echo.cpp **** {  
1565:Veno-Echo.cpp ****     static uint32_t shiftTime{};
1566:Veno-Echo.cpp ****     static uint32_t resetTime{};
1567:Veno-Echo.cpp ****     static int buttonstate{};
1568:Veno-Echo.cpp **** 
1569:Veno-Echo.cpp ****     Rev_L_sw.update();
1570:Veno-Echo.cpp ****     Rev_R_sw.update();
1571:Veno-Echo.cpp ****     LPF_sw.update();
1572:Veno-Echo.cpp ****     HPF_sw.update();
1573:Veno-Echo.cpp ****     Tap_Button.update();
1574:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 66


1575:Veno-Echo.cpp ****     ReverseGateL.Debounce();
1576:Veno-Echo.cpp ****     ReverseGateR.Debounce();
1577:Veno-Echo.cpp ****     //TapButton.Debounce();
1578:Veno-Echo.cpp ****     Sync.Debounce();
1579:Veno-Echo.cpp ****     ClockIn.Debounce();
1580:Veno-Echo.cpp ****     //gate inputs
1581:Veno-Echo.cpp ****     if (ReverseGateL.RisingEdge())
1582:Veno-Echo.cpp ****     {
1583:Veno-Echo.cpp ****         Rev_L_sw.toggle();
1584:Veno-Echo.cpp ****         //resetTime = System::GetNow();
1585:Veno-Echo.cpp ****     }
1586:Veno-Echo.cpp **** 
1587:Veno-Echo.cpp ****     if (ReverseGateR.RisingEdge())
1588:Veno-Echo.cpp ****     {
1589:Veno-Echo.cpp ****         Rev_R_sw.toggle();
1590:Veno-Echo.cpp ****         //resetTime = System::GetNow();
1591:Veno-Echo.cpp ****     }
1592:Veno-Echo.cpp **** 
1593:Veno-Echo.cpp ****     //buttons
1594:Veno-Echo.cpp **** 
1595:Veno-Echo.cpp ****     if (Rev_L_sw.RisingEdge())
1596:Veno-Echo.cpp ****     {
1597:Veno-Echo.cpp ****         buttonstate += 1;
1598:Veno-Echo.cpp ****         if (buttonstate == 3)
1599:Veno-Echo.cpp ****         {
1600:Veno-Echo.cpp ****             resetTime = System::GetNow();
1601:Veno-Echo.cpp ****         }
1602:Veno-Echo.cpp ****     }
1603:Veno-Echo.cpp **** 
1604:Veno-Echo.cpp ****     if (Rev_L_sw.FallingEdge())
1605:Veno-Echo.cpp ****     {
1606:Veno-Echo.cpp ****         buttonstate -= 1;
1607:Veno-Echo.cpp ****     }
1608:Veno-Echo.cpp **** 
1609:Veno-Echo.cpp ****     if (Rev_R_sw.RisingEdge())
1610:Veno-Echo.cpp ****     {
1611:Veno-Echo.cpp ****         buttonstate += 1;
1612:Veno-Echo.cpp ****         if (buttonstate == 3)
1613:Veno-Echo.cpp ****         {
1614:Veno-Echo.cpp ****             resetTime = System::GetNow();
1615:Veno-Echo.cpp ****         }
1616:Veno-Echo.cpp ****     }
1617:Veno-Echo.cpp **** 
1618:Veno-Echo.cpp ****     if (Rev_R_sw.FallingEdge())
1619:Veno-Echo.cpp ****     {
1620:Veno-Echo.cpp ****         buttonstate -= 1;
1621:Veno-Echo.cpp ****     }
1622:Veno-Echo.cpp **** 
1623:Veno-Echo.cpp ****     if (Tap_Button.RisingEdge())    
1624:Veno-Echo.cpp ****     {
1625:Veno-Echo.cpp ****         if(BaseTempo.tap()) //if tempo changed
1626:Veno-Echo.cpp ****         {
1627:Veno-Echo.cpp ****             tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1628:Veno-Echo.cpp ****         }
1629:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
1630:Veno-Echo.cpp ****         
1631:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 67


1632:Veno-Echo.cpp ****         shiftTime = System::GetNow();   //reset shift timer
1633:Veno-Echo.cpp ****         buttonstate += 1;
1634:Veno-Echo.cpp ****         
1635:Veno-Echo.cpp ****         if (buttonstate == 3)
1636:Veno-Echo.cpp ****         {
1637:Veno-Echo.cpp ****             resetTime = System::GetNow();
1638:Veno-Echo.cpp ****         }
1639:Veno-Echo.cpp **** 
1640:Veno-Echo.cpp ****     }
1641:Veno-Echo.cpp **** 
1642:Veno-Echo.cpp ****     if (Tap_Button.FallingEdge())    //when button is let go shift is off
1643:Veno-Echo.cpp ****     {
1644:Veno-Echo.cpp ****         shift = false;
1645:Veno-Echo.cpp ****         buttonstate -= 1;
1646:Veno-Echo.cpp ****         mute = false;
1647:Veno-Echo.cpp ****     }
1648:Veno-Echo.cpp **** 
1649:Veno-Echo.cpp ****     if (Tap_Button.getState())
1650:Veno-Echo.cpp ****     {
1651:Veno-Echo.cpp ****         if ( (System::GetNow() - shiftTime) > shiftWait)
1652:Veno-Echo.cpp ****         {
1653:Veno-Echo.cpp ****             shift = true;   //turn on shift if button held for longer than shiftWait
1654:Veno-Echo.cpp ****         } 
1655:Veno-Echo.cpp ****     }
1656:Veno-Echo.cpp **** 
1657:Veno-Echo.cpp ****     if (buttonstate == 3) //all buttons held
1658:Veno-Echo.cpp ****     {
1659:Veno-Echo.cpp **** 
1660:Veno-Echo.cpp ****             if( ((System::GetNow() - resetTime) > resetWait) )
1661:Veno-Echo.cpp ****             {
1662:Veno-Echo.cpp ****                 Rev_L_sw.toggle();
1663:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
1664:Veno-Echo.cpp ****                 ResetAllLEDs();
1665:Veno-Echo.cpp ****                 //don't let reset or shift update
1666:Veno-Echo.cpp ****                 shift = false;
1667:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
1668:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
1669:Veno-Echo.cpp ****                 resetTime = System::GetNow();
1670:Veno-Echo.cpp ****             }
1671:Veno-Echo.cpp ****     } 
1672:Veno-Echo.cpp **** 
1673:Veno-Echo.cpp ****     syncMode = Sync.Pressed() ? true : false;
1674:Veno-Echo.cpp **** 
1675:Veno-Echo.cpp ****     //update syncMode
1676:Veno-Echo.cpp ****     //delayL.SetSync(syncMode);
1677:Veno-Echo.cpp ****     //delayR.SetSync(syncMode);
1678:Veno-Echo.cpp **** }
1679:Veno-Echo.cpp **** 
1680:Veno-Echo.cpp **** void Update_DelayTempoLEDs()
1681:Veno-Echo.cpp **** {    
1682:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
1683:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
1684:Veno-Echo.cpp **** }
1685:Veno-Echo.cpp **** 
1686:Veno-Echo.cpp **** void Update_BaseTempoLED()
1687:Veno-Echo.cpp **** {
1688:Veno-Echo.cpp ****     tempoLED_BASE.update();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 68


1689:Veno-Echo.cpp **** 
1690:Veno-Echo.cpp ****     static int phaseCounter{};
1691:Veno-Echo.cpp **** 
1692:Veno-Echo.cpp ****     if(tempoLED_BASE.isEOC())
1693:Veno-Echo.cpp ****     {
1694:Veno-Echo.cpp ****         phaseCounter = (phaseCounter + 1) % 6;
1695:Veno-Echo.cpp ****     }
1696:Veno-Echo.cpp **** 
1697:Veno-Echo.cpp ****     float dividedPhase{(tempoLED_BASE.GetPhase() / 6) + ( (TWOPI_F / 6) * phaseCounter ) };
1698:Veno-Echo.cpp ****     //update base phase for both delay lines
1699:Veno-Echo.cpp ****     delayL.SetBasePhase( dividedPhase );
1700:Veno-Echo.cpp ****     delayR.SetBasePhase( dividedPhase );
1701:Veno-Echo.cpp **** }
1702:Veno-Echo.cpp **** 
1703:Veno-Echo.cpp **** 
1704:Veno-Echo.cpp **** void ApplySettings(const Settings &setting)
1705:Veno-Echo.cpp **** {
1706:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
1707:Veno-Echo.cpp ****     {
1708:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(setting.RevLength);
1709:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
1710:Veno-Echo.cpp ****     }
1711:Veno-Echo.cpp ****     else
1712:Veno-Echo.cpp ****     {
1713:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(defaultAltControls.RevLength);
1714:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
1715:Veno-Echo.cpp ****     }
1716:Veno-Echo.cpp **** 
1717:Veno-Echo.cpp ****     if((setting.tapRatio >= 1.0f) && (setting.tapRatio <= 3.0f ))
1718:Veno-Echo.cpp ****     {
1719:Veno-Echo.cpp ****         BaseTempo.setTapRatio(setting.tapRatio);
1720:Veno-Echo.cpp ****     }
1721:Veno-Echo.cpp ****     else
1722:Veno-Echo.cpp ****     {
1723:Veno-Echo.cpp ****         BaseTempo.setTapRatio(defaultAltControls.tapRatio);
1724:Veno-Echo.cpp ****     }
1725:Veno-Echo.cpp **** 
1726:Veno-Echo.cpp ****     if((setting.ModDepth >= minModDepth) && (setting.ModDepth <= maxModDepth))
1727:Veno-Echo.cpp ****     {
1728:Veno-Echo.cpp ****         ModDepth = setting.ModDepth;
1729:Veno-Echo.cpp ****     }
1730:Veno-Echo.cpp ****     else
1731:Veno-Echo.cpp ****     {
1732:Veno-Echo.cpp ****         ModDepth = defaultAltControls.ModDepth;
1733:Veno-Echo.cpp ****     }
1734:Veno-Echo.cpp **** 
1735:Veno-Echo.cpp ****     if((setting.ModFreq >= minModRate) && (setting.ModFreq <= maxModRate))
1736:Veno-Echo.cpp ****     {
1737:Veno-Echo.cpp ****         lfo.SetFreq(setting.ModFreq);
1738:Veno-Echo.cpp ****     }
1739:Veno-Echo.cpp ****     else
1740:Veno-Echo.cpp ****     {
1741:Veno-Echo.cpp ****         lfo.SetFreq(defaultAltControls.ModFreq);
1742:Veno-Echo.cpp ****     }
1743:Veno-Echo.cpp **** 
1744:Veno-Echo.cpp ****     if((setting.LP_Cutoff >= minLPCut) && (setting.LP_Cutoff <= maxLPCut))
1745:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 69


1746:Veno-Echo.cpp ****         LPF_L.SetFreq(setting.LP_Cutoff);
1747:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
1748:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
1749:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
1750:Veno-Echo.cpp ****     }
1751:Veno-Echo.cpp ****     else
1752:Veno-Echo.cpp ****     {
1753:Veno-Echo.cpp ****         LPF_L.SetFreq(defaultAltControls.LP_Cutoff);
1754:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
1755:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
1756:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
1757:Veno-Echo.cpp ****     }
1758:Veno-Echo.cpp ****     
1759:Veno-Echo.cpp ****     if((setting.HP_Cutoff >= minHPCut) && (setting.HP_Cutoff <= maxHPCut))
1760:Veno-Echo.cpp ****     {
1761:Veno-Echo.cpp ****         HPF_L.SetFreq(setting.HP_Cutoff);
1762:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
1763:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
1764:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
1765:Veno-Echo.cpp ****     }
1766:Veno-Echo.cpp ****     else
1767:Veno-Echo.cpp ****     {
1768:Veno-Echo.cpp ****         HPF_L.SetFreq(defaultAltControls.HP_Cutoff);
1769:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
1770:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
1771:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
1772:Veno-Echo.cpp **** 
1773:Veno-Echo.cpp ****     }
1774:Veno-Echo.cpp **** 
1775:Veno-Echo.cpp ****     if((setting.Resonance >= minRes) && (setting.Resonance <= maxRes))
1776:Veno-Echo.cpp ****     {
1777:Veno-Echo.cpp ****         LPF_L.SetRes(setting.Resonance);
1778:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
1779:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
1780:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
1781:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
1782:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
1783:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
1784:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
1785:Veno-Echo.cpp ****     }
1786:Veno-Echo.cpp **** 
1787:Veno-Echo.cpp ****     else
1788:Veno-Echo.cpp ****     {
1789:Veno-Echo.cpp ****         LPF_L_post.SetRes(defaultAltControls.Resonance);
1790:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
1791:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
1792:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
1793:Veno-Echo.cpp ****     }
1794:Veno-Echo.cpp **** 
1795:Veno-Echo.cpp ****     if(setting.FilterPrePost < 0.45f)
1796:Veno-Echo.cpp ****     {
1797:Veno-Echo.cpp ****         PostFilters = false;
1798:Veno-Echo.cpp ****     }
1799:Veno-Echo.cpp ****         else if(setting.FilterPrePost > 0.55f)
1800:Veno-Echo.cpp ****     {
1801:Veno-Echo.cpp ****         PostFilters = true;
1802:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 70


1803:Veno-Echo.cpp ****     else
1804:Veno-Echo.cpp ****     {
1805:Veno-Echo.cpp ****         PostFilters = false;    //default to pre filter
1806:Veno-Echo.cpp ****     }
1807:Veno-Echo.cpp **** 
1808:Veno-Echo.cpp **** }
1809:Veno-Echo.cpp **** 
1810:Veno-Echo.cpp **** void TurnOnAllLEDs()
1811:Veno-Echo.cpp **** {
1812:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
1813:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
1814:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
1815:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
1816:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
1817:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
1818:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
1819:Veno-Echo.cpp **** }
1820:Veno-Echo.cpp **** 
1821:Veno-Echo.cpp **** void ResetAllLEDs()
1822:Veno-Echo.cpp **** {
1823:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
1824:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
1825:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
1826:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
1827:Veno-Echo.cpp ****     {
1828:Veno-Echo.cpp ****         Rev_L_sw.LED_set(0.0f);
1829:Veno-Echo.cpp ****     }
1830:Veno-Echo.cpp ****     else
1831:Veno-Echo.cpp ****     {
1832:Veno-Echo.cpp ****        Rev_L_sw.LED_set(1.0f);
1833:Veno-Echo.cpp ****     }
1834:Veno-Echo.cpp **** 
1835:Veno-Echo.cpp ****     if(!Rev_R_sw.getState())
1836:Veno-Echo.cpp ****     {
1837:Veno-Echo.cpp ****         Rev_R_sw.LED_set(0.0f);
1838:Veno-Echo.cpp ****     }
1839:Veno-Echo.cpp ****     else
1840:Veno-Echo.cpp ****     {
1841:Veno-Echo.cpp ****         Rev_R_sw.LED_set(1.0f);
1842:Veno-Echo.cpp ****     }
1843:Veno-Echo.cpp ****     
1844:Veno-Echo.cpp ****     LPF_sw.LED_set(0.0f);
1845:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
1846:Veno-Echo.cpp **** }
1847:Veno-Echo.cpp **** 
1848:Veno-Echo.cpp **** float HardLimit(float input, float limit)
1849:Veno-Echo.cpp **** {
1850:Veno-Echo.cpp ****     float returnval{};
1851:Veno-Echo.cpp ****     if (input > limit)
1852:Veno-Echo.cpp ****         returnval = limit;
1853:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
1854:Veno-Echo.cpp ****         returnval = limit * -1.0f;
1855:Veno-Echo.cpp ****     else
1856:Veno-Echo.cpp ****         returnval = input;
1857:Veno-Echo.cpp **** 
1858:Veno-Echo.cpp ****     return returnval;   
1859:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 71


1860:Veno-Echo.cpp **** 
1861:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
 1150              		.loc 20 1861 7 view .LVU241
 1151              	.LBB900:
1862:Veno-Echo.cpp **** {
1863:Veno-Echo.cpp ****     float output{};
 1152              		.loc 20 1863 5 view .LVU242
1864:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1153              		.loc 20 1864 5 view .LVU243
 1154              	.LBE900:
 1155              	.LBE899:
 832:Veno-Echo.cpp ****         }
 1156              		.loc 20 832 36 is_stmt 0 view .LVU244
 1157 0048 6F49     		ldr	r1, .L75+28
 1158              	.LBB904:
 1159              	.LBB901:
 1160              		.loc 20 1864 39 view .LVU245
 1161 004a B7EE007A 		vmov.f32	s14, #1.0e+0
 1162              		.loc 20 1864 49 view .LVU246
 1163 004e B6EE006A 		vmov.f32	s12, #5.0e-1
 1164              	.LBE901:
 1165              	.LBE904:
 832:Veno-Echo.cpp ****         }
 1166              		.loc 20 832 36 view .LVU247
 1167 0052 6E4A     		ldr	r2, .L75+32
 1168              	.LBB905:
 1169              	.LBB902:
 1170              		.loc 20 1864 39 view .LVU248
 1171 0054 D1ED007A 		vldr.32	s15, [r1]
 1172              		.loc 20 1864 12 view .LVU249
 1173 0058 F0EE006A 		vmov.f32	s13, #2.0e+0
 1174 005c 92ED008A 		vldr.32	s16, [r2]
 1175              		.loc 20 1864 39 view .LVU250
 1176 0060 77EE677A 		vsub.f32	s15, s14, s15
 1177              		.loc 20 1864 49 view .LVU251
 1178 0064 77EEC67A 		vsub.f32	s15, s15, s12
 1179              		.loc 20 1864 12 view .LVU252
 1180 0068 A7EEA68A 		vfma.f32	s16, s15, s13
 1181              	.LVL43:
1865:Veno-Echo.cpp **** 
1866:Veno-Echo.cpp ****     if(output < 0.0f)
 1182              		.loc 20 1866 5 is_stmt 1 view .LVU253
 1183 006c B5EEC08A 		vcmpe.f32	s16, #0
 1184 0070 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1185 0074 00F1B380 		bmi	.L73
1867:Veno-Echo.cpp ****     {
1868:Veno-Echo.cpp ****         output = 0.0f;
1869:Veno-Echo.cpp ****     }
1870:Veno-Echo.cpp **** 
1871:Veno-Echo.cpp ****     if(output > 1.0f)
 1186              		.loc 20 1871 5 view .LVU254
1872:Veno-Echo.cpp ****     {
1873:Veno-Echo.cpp ****         output = 1.0f;
 1187              		.loc 20 1873 16 is_stmt 0 view .LVU255
 1188 0078 B4EE478A 		vcmp.f32	s16, s14
 1189 007c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1190 0080 37FE088A 		vselgt.f32	s16, s14, s16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 72


 1191              	.LVL44:
 1192              	.L50:
 1193              		.loc 20 1873 16 view .LVU256
 1194              	.LBE902:
 1195              	.LBE905:
 835:Veno-Echo.cpp ****         {
 1196              		.loc 20 835 9 is_stmt 1 view .LVU257
 1197 0084 CBB9     		cbnz	r3, .L42
 837:Veno-Echo.cpp ****             {
 1198              		.loc 20 837 13 view .LVU258
 837:Veno-Echo.cpp ****             {
 1199              		.loc 20 837 35 is_stmt 0 view .LVU259
 1200 0086 6248     		ldr	r0, .L75+36
 1201 0088 FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 1202              	.LVL45:
 837:Veno-Echo.cpp ****             {
 1203              		.loc 20 837 35 view .LVU260
 1204 008c 614B     		ldr	r3, .L75+40
 1205 008e F0EE400A 		vmov.f32	s1, s0
 1206 0092 6148     		ldr	r0, .L75+44
 1207 0094 B0EE480A 		vmov.f32	s0, s16
 1208 0098 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1209              	.LBE917:
 1210              	.LBE966:
 876:Veno-Echo.cpp **** 
 1211              		.loc 20 876 1 view .LVU261
 1212 009a BDEC028B 		vldm	sp!, {d8}
 1213              		.cfi_remember_state
 1214              		.cfi_restore 80
 1215              		.cfi_restore 81
 1216              		.cfi_def_cfa_offset 8
 1217              	.LVL46:
 876:Veno-Echo.cpp **** 
 1218              		.loc 20 876 1 view .LVU262
 1219 009e BDE81040 		pop	{r4, lr}
 1220              		.cfi_restore 14
 1221              		.cfi_restore 4
 1222              		.cfi_def_cfa_offset 0
 1223              	.LBB967:
 1224              	.LBB918:
 837:Veno-Echo.cpp ****             {
 1225              		.loc 20 837 35 view .LVU263
 1226 00a2 FFF7FEBF 		b	_ZN10DelayMulti12SetDelayTimeEffb
 1227              	.LVL47:
 1228              	.L43:
 1229              		.cfi_restore_state
 837:Veno-Echo.cpp ****             {
 1230              		.loc 20 837 35 view .LVU264
 1231              	.LBE918:
 1232              	.LBB919:
 846:Veno-Echo.cpp **** 
 1233              		.loc 20 846 9 is_stmt 1 view .LVU265
 848:Veno-Echo.cpp ****         {
 1234              		.loc 20 848 9 view .LVU266
 1235 00a6 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1236 00a8 002B     		cmp	r3, #0
 1237 00aa 3CD1     		bne	.L53
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 73


 850:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1238              		.loc 20 850 13 view .LVU267
 850:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1239              		.loc 20 850 23 is_stmt 0 view .LVU268
 1240 00ac 0124     		movs	r4, #1
 851:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1241              		.loc 20 851 34 view .LVU269
 1242 00ae 5B48     		ldr	r0, .L75+48
 852:Veno-Echo.cpp ****         }
 1243              		.loc 20 852 31 view .LVU270
 1244 00b0 5B49     		ldr	r1, .L75+52
 850:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1245              		.loc 20 850 23 view .LVU271
 1246 00b2 1470     		strb	r4, [r2]
 851:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1247              		.loc 20 851 13 is_stmt 1 view .LVU272
 851:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1248              		.loc 20 851 34 is_stmt 0 view .LVU273
 1249 00b4 0370     		strb	r3, [r0]
 852:Veno-Echo.cpp ****         }
 1250              		.loc 20 852 13 is_stmt 1 view .LVU274
 852:Veno-Echo.cpp ****         }
 1251              		.loc 20 852 31 is_stmt 0 view .LVU275
 1252 00b6 81ED000A 		vstr.32	s0, [r1]
 1253              	.L42:
 852:Veno-Echo.cpp ****         }
 1254              		.loc 20 852 31 view .LVU276
 1255              	.LBE919:
 1256              	.LBE967:
 876:Veno-Echo.cpp **** 
 1257              		.loc 20 876 1 view .LVU277
 1258 00ba BDEC028B 		vldm	sp!, {d8}
 1259              		.cfi_remember_state
 1260              		.cfi_restore 80
 1261              		.cfi_restore 81
 1262              		.cfi_def_cfa_offset 8
 1263 00be 10BD     		pop	{r4, pc}
 1264              	.L44:
 1265              		.cfi_restore_state
 1266              	.LBB968:
 1267              	.LBB960:
 813:Veno-Echo.cpp ****             {
 1268              		.loc 20 813 13 is_stmt 1 view .LVU278
 813:Veno-Echo.cpp ****             {
 1269              		.loc 20 813 16 is_stmt 0 view .LVU279
 1270 00c0 4F4A     		ldr	r2, .L75+20
 813:Veno-Echo.cpp ****             {
 1271              		.loc 20 813 13 view .LVU280
 1272 00c2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1273 00c4 79B9     		cbnz	r1, .L46
 815:Veno-Echo.cpp ****                 {
 1274              		.loc 20 815 17 is_stmt 1 view .LVU281
 1275              	.LVL48:
 1276              	.LBB906:
 1277              	.LBI906:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1278              		.loc 21 75 3 view .LVU282
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 74


 1279              	.LBB907:
 1280              		.loc 21 76 5 view .LVU283
 1281              		.loc 21 76 5 is_stmt 0 view .LVU284
 1282              	.LBE907:
 1283              	.LBE906:
 815:Veno-Echo.cpp ****                 {
 1284              		.loc 20 815 23 view .LVU285
 1285 00c6 4F49     		ldr	r1, .L75+24
 815:Veno-Echo.cpp ****                 {
 1286              		.loc 20 815 17 view .LVU286
 1287 00c8 9FED567A 		vldr.32	s14, .L75+56
 815:Veno-Echo.cpp ****                 {
 1288              		.loc 20 815 23 view .LVU287
 1289 00cc D1ED007A 		vldr.32	s15, [r1]
 1290 00d0 70EE677A 		vsub.f32	s15, s0, s15
 1291              	.LBB909:
 1292              	.LBB908:
 1293              		.loc 21 76 31 view .LVU288
 1294 00d4 F0EEE77A 		vabs.f32	s15, s15
 1295              	.LBE908:
 1296              	.LBE909:
 815:Veno-Echo.cpp ****                 {
 1297              		.loc 20 815 17 view .LVU289
 1298 00d8 F4EEC77A 		vcmpe.f32	s15, s14
 1299 00dc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1300 00e0 B2DD     		ble	.L45
 817:Veno-Echo.cpp ****                 }
 1301              		.loc 20 817 21 is_stmt 1 view .LVU290
 817:Veno-Echo.cpp ****                 }
 1302              		.loc 20 817 39 is_stmt 0 view .LVU291
 1303 00e2 0121     		movs	r1, #1
 1304 00e4 1170     		strb	r1, [r2]
 1305              	.L46:
 822:Veno-Echo.cpp **** 
 1306              		.loc 20 822 9 is_stmt 1 view .LVU292
 1307              	.LVL49:
 824:Veno-Echo.cpp ****         {
 1308              		.loc 20 824 9 view .LVU293
 826:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 1309              		.loc 20 826 13 view .LVU294
 1310              	.LBB910:
 1311              	.LBI910:
1861:Veno-Echo.cpp **** {
 1312              		.loc 20 1861 7 view .LVU295
 1313              	.LBB911:
1863:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1314              		.loc 20 1863 5 view .LVU296
1864:Veno-Echo.cpp **** 
 1315              		.loc 20 1864 5 view .LVU297
 1316              	.LBE911:
 1317              	.LBE910:
 826:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 1318              		.loc 20 826 36 is_stmt 0 view .LVU298
 1319 00e6 484A     		ldr	r2, .L75+28
 1320              	.LBB914:
 1321              	.LBB912:
1864:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 75


 1322              		.loc 20 1864 39 view .LVU299
 1323 00e8 B7EE007A 		vmov.f32	s14, #1.0e+0
1864:Veno-Echo.cpp **** 
 1324              		.loc 20 1864 49 view .LVU300
 1325 00ec B6EE006A 		vmov.f32	s12, #5.0e-1
1864:Veno-Echo.cpp **** 
 1326              		.loc 20 1864 39 view .LVU301
 1327 00f0 D2ED007A 		vldr.32	s15, [r2]
1864:Veno-Echo.cpp **** 
 1328              		.loc 20 1864 12 view .LVU302
 1329 00f4 F0EE006A 		vmov.f32	s13, #2.0e+0
 1330 00f8 B0EE408A 		vmov.f32	s16, s0
1864:Veno-Echo.cpp **** 
 1331              		.loc 20 1864 39 view .LVU303
 1332 00fc 77EE677A 		vsub.f32	s15, s14, s15
1864:Veno-Echo.cpp **** 
 1333              		.loc 20 1864 49 view .LVU304
 1334 0100 77EEC67A 		vsub.f32	s15, s15, s12
1864:Veno-Echo.cpp **** 
 1335              		.loc 20 1864 12 view .LVU305
 1336 0104 A7EEA68A 		vfma.f32	s16, s15, s13
 1337              	.LVL50:
1866:Veno-Echo.cpp ****     {
 1338              		.loc 20 1866 5 is_stmt 1 view .LVU306
 1339 0108 B5EEC08A 		vcmpe.f32	s16, #0
 1340 010c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1341 0110 68D4     		bmi	.L74
1871:Veno-Echo.cpp ****     {
 1342              		.loc 20 1871 5 view .LVU307
 1343              		.loc 20 1873 16 is_stmt 0 view .LVU308
 1344 0112 B4EE478A 		vcmp.f32	s16, s14
 1345 0116 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1346 011a 37FE088A 		vselgt.f32	s16, s14, s16
 1347              	.LVL51:
 1348              	.L48:
1874:Veno-Echo.cpp ****     }
1875:Veno-Echo.cpp **** 
1876:Veno-Echo.cpp ****     return output;
 1349              		.loc 20 1876 5 is_stmt 1 view .LVU309
 1350              		.loc 20 1876 5 is_stmt 0 view .LVU310
 1351              	.LBE912:
 1352              	.LBE914:
 827:Veno-Echo.cpp ****         }
 1353              		.loc 20 827 13 is_stmt 1 view .LVU311
 827:Veno-Echo.cpp ****         }
 1354              		.loc 20 827 29 is_stmt 0 view .LVU312
 1355 011e 3B4A     		ldr	r2, .L75+32
 1356 0120 82ED000A 		vstr.32	s0, [r2]
 1357 0124 AEE7     		b	.L50
 1358              	.LVL52:
 1359              	.L53:
 827:Veno-Echo.cpp ****         }
 1360              		.loc 20 827 29 view .LVU313
 1361              	.LBE960:
 1362              	.LBB961:
 857:Veno-Echo.cpp ****             {
 1363              		.loc 20 857 13 is_stmt 1 view .LVU314
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 76


 857:Veno-Echo.cpp ****             {
 1364              		.loc 20 857 16 is_stmt 0 view .LVU315
 1365 0126 3D4B     		ldr	r3, .L75+48
 857:Veno-Echo.cpp ****             {
 1366              		.loc 20 857 13 view .LVU316
 1367 0128 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1368 012a 7AB9     		cbnz	r2, .L54
 859:Veno-Echo.cpp ****                 {
 1369              		.loc 20 859 17 is_stmt 1 view .LVU317
 1370              	.LVL53:
 1371              	.LBB920:
 1372              	.LBI920:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1373              		.loc 21 75 3 view .LVU318
 1374              	.LBB921:
 1375              		.loc 21 76 5 view .LVU319
 1376              		.loc 21 76 5 is_stmt 0 view .LVU320
 1377              	.LBE921:
 1378              	.LBE920:
 859:Veno-Echo.cpp ****                 {
 1379              		.loc 20 859 23 view .LVU321
 1380 012c 3C4A     		ldr	r2, .L75+52
 859:Veno-Echo.cpp ****                 {
 1381              		.loc 20 859 17 view .LVU322
 1382 012e 9FED3D7A 		vldr.32	s14, .L75+56
 859:Veno-Echo.cpp ****                 {
 1383              		.loc 20 859 23 view .LVU323
 1384 0132 D2ED007A 		vldr.32	s15, [r2]
 1385 0136 70EE677A 		vsub.f32	s15, s0, s15
 1386              	.LBB923:
 1387              	.LBB922:
 1388              		.loc 21 76 31 view .LVU324
 1389 013a F0EEE77A 		vabs.f32	s15, s15
 1390              	.LBE922:
 1391              	.LBE923:
 859:Veno-Echo.cpp ****                 {
 1392              		.loc 20 859 17 view .LVU325
 1393 013e F4EEC77A 		vcmpe.f32	s15, s14
 1394 0142 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1395 0146 B8DD     		ble	.L42
 861:Veno-Echo.cpp ****                 }
 1396              		.loc 20 861 21 is_stmt 1 view .LVU326
 861:Veno-Echo.cpp ****                 }
 1397              		.loc 20 861 42 is_stmt 0 view .LVU327
 1398 0148 0122     		movs	r2, #1
 1399 014a 1A70     		strb	r2, [r3]
 1400              	.L54:
 866:Veno-Echo.cpp ****         {
 1401              		.loc 20 866 9 is_stmt 1 view .LVU328
 1402              	.LBB924:
 1403              	.LBB925:
 868:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 1404              		.loc 20 868 13 view .LVU329
 868:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 1405              		.loc 20 868 38 is_stmt 0 view .LVU330
 1406 014c 0120     		movs	r0, #1
 1407 014e 9FED361A 		vldr.32	s2, .L75+60
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 77


 1408 0152 DFED360A 		vldr.32	s1, .L75+64
 1409 0156 FFF7FEFF 		bl	_Z5scalefff9CurveType
 1410              	.LVL54:
 1411              	.LBB926:
 1412              	.LBB927:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1413              		.loc 20 70 28 view .LVU331
 1414 015a 354B     		ldr	r3, .L75+68
 1415              	.LVL55:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1416              		.loc 20 70 28 view .LVU332
 1417              	.LBE927:
 1418              	.LBE926:
 869:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 1419              		.loc 20 869 13 is_stmt 1 view .LVU333
 1420              	.LBB941:
 1421              	.LBI926:
  68:Veno-Echo.cpp ****     {
 1422              		.loc 20 68 10 view .LVU334
 1423              	.LBB939:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1424              		.loc 20 70 9 view .LVU335
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1425              		.loc 20 70 53 is_stmt 0 view .LVU336
 1426 015c DFED316A 		vldr.32	s13, .L75+56
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1427              		.loc 20 70 28 view .LVU337
 1428 0160 D3ED017A 		vldr.32	s15, [r3, #4]
 1429              	.LVL56:
 1430              	.LBB928:
 1431              	.LBI928:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1432              		.loc 21 75 3 is_stmt 1 view .LVU338
 1433              	.LBB929:
 1434              		.loc 21 76 5 view .LVU339
 1435              		.loc 21 76 5 is_stmt 0 view .LVU340
 1436              	.LBE929:
 1437              	.LBE928:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1438              		.loc 20 70 15 view .LVU341
 1439 0164 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1440              		.loc 20 70 53 view .LVU342
 1441 0168 67EEA67A 		vmul.f32	s15, s15, s13
 1442              	.LBB931:
 1443              	.LBB930:
 1444              		.loc 21 76 31 view .LVU343
 1445 016c B0EEC77A 		vabs.f32	s14, s14
 1446              	.LBE930:
 1447              	.LBE931:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1448              		.loc 20 70 9 view .LVU344
 1449 0170 B4EEE77A 		vcmpe.f32	s14, s15
 1450 0174 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1451 0178 0DDD     		ble	.L62
  74:Veno-Echo.cpp ****             //del -> Reset();
 1452              		.loc 20 74 29 view .LVU345
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 78


 1453 017a FCEEC07A 		vcvt.u32.f32	s15, s0
 1454              	.LBB932:
 1455              	.LBB933:
 1456              		.loc 19 72 9 view .LVU346
 1457 017e 2D4C     		ldr	r4, .L75+72
 1458              	.LBE933:
 1459              	.LBE932:
 1460              	.LBE939:
 1461              	.LBE941:
 869:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 1462              		.loc 20 869 37 view .LVU347
 1463 0180 1968     		ldr	r1, [r3]
 1464              	.LBB942:
 1465              	.LBB940:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1466              		.loc 20 73 13 is_stmt 1 view .LVU348
 1467              	.LBB936:
 1468              	.LBB934:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1469              		.loc 19 71 9 is_stmt 0 view .LVU349
 1470 0182 0020     		movs	r0, #0
 1471              	.LBE934:
 1472              	.LBE936:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1473              		.loc 20 73 27 view .LVU350
 1474 0184 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 1475              		.loc 20 74 13 is_stmt 1 view .LVU351
 1476              	.LVL57:
 1477              	.LBB937:
 1478              	.LBI932:
  69:delayline_reverse.h ****     {
 1479              		.loc 19 69 17 view .LVU352
  69:delayline_reverse.h ****     {
 1480              		.loc 19 69 17 is_stmt 0 view .LVU353
 1481              	.LBE937:
  74:Veno-Echo.cpp ****             //del -> Reset();
 1482              		.loc 20 74 29 view .LVU354
 1483 0188 17EE902A 		vmov	r2, s15	@ int
 1484              	.LBB938:
 1485              	.LBB935:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1486              		.loc 19 71 9 view .LVU355
 1487 018c 0860     		str	r0, [r1]	@ float
 1488              		.loc 19 72 9 view .LVU356
 1489 018e A242     		cmp	r2, r4
 1490 0190 28BF     		it	cs
 1491 0192 2246     		movcs	r2, r4
 1492 0194 0A61     		str	r2, [r1, #16]
 1493              	.LVL58:
 1494              	.L62:
 1495              		.loc 19 72 9 view .LVU357
 1496              	.LBE935:
 1497              	.LBE938:
 1498              	.LBE940:
 1499              	.LBE942:
 870:Veno-Echo.cpp ****             //save setting:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 79


 1500              		.loc 20 870 13 is_stmt 1 view .LVU358
 1501              	.LBB943:
 1502              	.LBI943:
  68:Veno-Echo.cpp ****     {
 1503              		.loc 20 68 10 view .LVU359
 1504              	.LBB944:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1505              		.loc 20 70 9 view .LVU360
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1506              		.loc 20 70 28 is_stmt 0 view .LVU361
 1507 0196 284B     		ldr	r3, .L75+76
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1508              		.loc 20 70 53 view .LVU362
 1509 0198 DFED226A 		vldr.32	s13, .L75+56
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1510              		.loc 20 70 28 view .LVU363
 1511 019c D3ED017A 		vldr.32	s15, [r3, #4]
 1512              	.LVL59:
 1513              	.LBB945:
 1514              	.LBI945:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1515              		.loc 21 75 3 is_stmt 1 view .LVU364
 1516              	.LBB946:
 1517              		.loc 21 76 5 view .LVU365
 1518              		.loc 21 76 5 is_stmt 0 view .LVU366
 1519              	.LBE946:
 1520              	.LBE945:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1521              		.loc 20 70 15 view .LVU367
 1522 01a0 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1523              		.loc 20 70 53 view .LVU368
 1524 01a4 67EEA67A 		vmul.f32	s15, s15, s13
 1525              	.LBB948:
 1526              	.LBB947:
 1527              		.loc 21 76 31 view .LVU369
 1528 01a8 B0EEC77A 		vabs.f32	s14, s14
 1529              	.LBE947:
 1530              	.LBE948:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1531              		.loc 20 70 9 view .LVU370
 1532 01ac B4EEE77A 		vcmpe.f32	s14, s15
 1533 01b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1534 01b4 0DDD     		ble	.L56
  74:Veno-Echo.cpp ****             //del -> Reset();
 1535              		.loc 20 74 29 view .LVU371
 1536 01b6 FCEEC07A 		vcvt.u32.f32	s15, s0
 1537              	.LBB949:
 1538              	.LBB950:
 1539              		.loc 19 72 9 view .LVU372
 1540 01ba 1E4C     		ldr	r4, .L75+72
 1541              	.LBE950:
 1542              	.LBE949:
 1543              	.LBE944:
 1544              	.LBE943:
 870:Veno-Echo.cpp ****             //save setting:
 1545              		.loc 20 870 37 view .LVU373
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 80


 1546 01bc 1968     		ldr	r1, [r3]
 1547              	.LBB957:
 1548              	.LBB956:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1549              		.loc 20 73 13 is_stmt 1 view .LVU374
 1550              	.LBB953:
 1551              	.LBB951:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1552              		.loc 19 71 9 is_stmt 0 view .LVU375
 1553 01be 0020     		movs	r0, #0
 1554              	.LBE951:
 1555              	.LBE953:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1556              		.loc 20 73 27 view .LVU376
 1557 01c0 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 1558              		.loc 20 74 13 is_stmt 1 view .LVU377
 1559              	.LVL60:
 1560              	.LBB954:
 1561              	.LBI949:
  69:delayline_reverse.h ****     {
 1562              		.loc 19 69 17 view .LVU378
  69:delayline_reverse.h ****     {
 1563              		.loc 19 69 17 is_stmt 0 view .LVU379
 1564              	.LBE954:
  74:Veno-Echo.cpp ****             //del -> Reset();
 1565              		.loc 20 74 29 view .LVU380
 1566 01c4 17EE902A 		vmov	r2, s15	@ int
 1567              	.LBB955:
 1568              	.LBB952:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1569              		.loc 19 71 9 view .LVU381
 1570 01c8 0860     		str	r0, [r1]	@ float
 1571              		.loc 19 72 9 view .LVU382
 1572 01ca A242     		cmp	r2, r4
 1573 01cc 28BF     		it	cs
 1574 01ce 2246     		movcs	r2, r4
 1575 01d0 0A61     		str	r2, [r1, #16]
 1576              	.LVL61:
 1577              	.L56:
 1578              		.loc 19 72 9 view .LVU383
 1579              	.LBE952:
 1580              	.LBE955:
 1581              	.LBE956:
 1582              	.LBE957:
 872:Veno-Echo.cpp ****         }
 1583              		.loc 20 872 13 is_stmt 1 view .LVU384
 872:Veno-Echo.cpp ****         }
 1584              		.loc 20 872 35 is_stmt 0 view .LVU385
 1585 01d2 1A4B     		ldr	r3, .L75+80
 1586              	.LBE925:
 1587              	.LBE924:
 1588              	.LBE961:
 1589              	.LBE968:
 876:Veno-Echo.cpp **** 
 1590              		.loc 20 876 1 view .LVU386
 1591 01d4 BDEC028B 		vldm	sp!, {d8}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 81


 1592              		.cfi_remember_state
 1593              		.cfi_restore 80
 1594              		.cfi_restore 81
 1595              		.cfi_def_cfa_offset 8
 1596              	.LBB969:
 1597              	.LBB962:
 1598              	.LBB959:
 1599              	.LBB958:
 872:Veno-Echo.cpp ****         }
 1600              		.loc 20 872 35 view .LVU387
 1601 01d8 83ED000A 		vstr.32	s0, [r3]
 1602              	.LBE958:
 1603              	.LBE959:
 1604              	.LBE962:
 1605              	.LBE969:
 876:Veno-Echo.cpp **** 
 1606              		.loc 20 876 1 view .LVU388
 1607 01dc 10BD     		pop	{r4, pc}
 1608              	.LVL62:
 1609              	.L73:
 1610              		.cfi_restore_state
 1611              	.LBB970:
 1612              	.LBB963:
 1613              	.LBB915:
 1614              	.LBB903:
1868:Veno-Echo.cpp ****     }
 1615              		.loc 20 1868 16 view .LVU389
 1616 01de 9FED188A 		vldr.32	s16, .L75+84
 1617              	.LVL63:
1868:Veno-Echo.cpp ****     }
 1618              		.loc 20 1868 16 view .LVU390
 1619 01e2 4FE7     		b	.L50
 1620              	.LVL64:
 1621              	.L74:
1868:Veno-Echo.cpp ****     }
 1622              		.loc 20 1868 16 view .LVU391
 1623              	.LBE903:
 1624              	.LBE915:
 1625              	.LBB916:
 1626              	.LBB913:
 1627 01e4 9FED168A 		vldr.32	s16, .L75+84
 1628              	.LVL65:
1868:Veno-Echo.cpp ****     }
 1629              		.loc 20 1868 16 view .LVU392
 1630 01e8 99E7     		b	.L48
 1631              	.L76:
 1632 01ea 00BF     		.align	2
 1633              	.L75:
 1634 01ec 18000000 		.word	.LANCHOR4+24
 1635 01f0 00000000 		.word	.LANCHOR6
 1636 01f4 ABAAAA2A 		.word	715827883
 1637 01f8 00000000 		.word	.LANCHOR7
 1638 01fc 00000000 		.word	.LANCHOR8
 1639 0200 00000000 		.word	.LANCHOR9
 1640 0204 00000000 		.word	.LANCHOR10
 1641 0208 00000000 		.word	.LANCHOR5
 1642 020c 00000000 		.word	.LANCHOR11
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 82


 1643 0210 00000000 		.word	.LANCHOR12
 1644 0214 00000000 		.word	.LANCHOR13
 1645 0218 00000000 		.word	.LANCHOR0
 1646 021c 00000000 		.word	.LANCHOR14
 1647 0220 00000000 		.word	.LANCHOR15
 1648 0224 0AD7A33B 		.word	1000593162
 1649 0228 0050C346 		.word	1187205120
 1650 022c 00606A48 		.word	1214930944
 1651 0230 00000000 		.word	.LANCHOR2
 1652 0234 BF270900 		.word	599999
 1653 0238 00000000 		.word	.LANCHOR3
 1654 023c 00000000 		.word	.LANCHOR16
 1655 0240 00000000 		.word	0
 1656              	.LBE913:
 1657              	.LBE916:
 1658              	.LBE963:
 1659              	.LBE970:
 1660              		.cfi_endproc
 1661              	.LFE4312:
 1663              		.section	.text._Z20Update_DelayTimeR_CVv,"ax",%progbits
 1664              		.align	1
 1665              		.p2align 2,,3
 1666              		.global	_Z20Update_DelayTimeR_CVv
 1667              		.syntax unified
 1668              		.thumb
 1669              		.thumb_func
 1670              		.fpu fpv5-d16
 1672              	_Z20Update_DelayTimeR_CVv:
 1673              	.LFB4313:
 879:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1674              		.loc 20 879 1 is_stmt 1 view -0
 1675              		.cfi_startproc
 1676              		@ args = 0, pretend = 0, frame = 0
 1677              		@ frame_needed = 0, uses_anonymous_args = 0
 880:Veno-Echo.cpp **** }
 1678              		.loc 20 880 5 view .LVU394
 879:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1679              		.loc 20 879 1 is_stmt 0 view .LVU395
 1680 0000 08B5     		push	{r3, lr}
 1681              		.cfi_def_cfa_offset 8
 1682              		.cfi_offset 3, -8
 1683              		.cfi_offset 14, -4
 880:Veno-Echo.cpp **** }
 1684              		.loc 20 880 36 view .LVU396
 1685 0002 0121     		movs	r1, #1
 1686 0004 0348     		ldr	r0, .L79
 1687 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1688              	.LVL66:
 880:Veno-Echo.cpp **** }
 1689              		.loc 20 880 19 view .LVU397
 1690 000a 034B     		ldr	r3, .L79+4
 1691 000c 83ED000A 		vstr.32	s0, [r3]
 881:Veno-Echo.cpp **** 
 1692              		.loc 20 881 1 view .LVU398
 1693 0010 08BD     		pop	{r3, pc}
 1694              	.L80:
 1695 0012 00BF     		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 83


 1696              	.L79:
 1697 0014 18000000 		.word	.LANCHOR4+24
 1698 0018 00000000 		.word	.LANCHOR17
 1699              		.cfi_endproc
 1700              	.LFE4313:
 1702              		.section	.text._Z17Update_DelayTimeRv,"ax",%progbits
 1703              		.align	1
 1704              		.p2align 2,,3
 1705              		.global	_Z17Update_DelayTimeRv
 1706              		.syntax unified
 1707              		.thumb
 1708              		.thumb_func
 1709              		.fpu fpv5-d16
 1711              	_Z17Update_DelayTimeRv:
 1712              	.LFB4314:
 884:Veno-Echo.cpp ****     static bool lastShift{};
 1713              		.loc 20 884 1 is_stmt 1 view -0
 1714              		.cfi_startproc
 1715              		@ args = 0, pretend = 0, frame = 0
 1716              		@ frame_needed = 0, uses_anonymous_args = 0
 885:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 1717              		.loc 20 885 5 view .LVU400
 886:Veno-Echo.cpp ****     static bool tapRatio_pickup{};
 1718              		.loc 20 886 5 view .LVU401
 887:Veno-Echo.cpp ****     
 1719              		.loc 20 887 5 view .LVU402
 889:Veno-Echo.cpp **** 
 1720              		.loc 20 889 5 view .LVU403
 892:Veno-Echo.cpp **** 
 1721              		.loc 20 892 5 view .LVU404
 884:Veno-Echo.cpp ****     static bool lastShift{};
 1722              		.loc 20 884 1 is_stmt 0 view .LVU405
 1723 0000 10B5     		push	{r4, lr}
 1724              		.cfi_def_cfa_offset 8
 1725              		.cfi_offset 4, -8
 1726              		.cfi_offset 14, -4
 892:Veno-Echo.cpp **** 
 1727              		.loc 20 892 44 view .LVU406
 1728 0002 0622     		movs	r2, #6
 1729 0004 0721     		movs	r1, #7
 1730 0006 6648     		ldr	r0, .L111
 884:Veno-Echo.cpp ****     static bool lastShift{};
 1731              		.loc 20 884 1 view .LVU407
 1732 0008 2DED028B 		vpush.64	{d8}
 1733              		.cfi_def_cfa_offset 16
 1734              		.cfi_offset 80, -16
 1735              		.cfi_offset 81, -12
 892:Veno-Echo.cpp **** 
 1736              		.loc 20 892 44 view .LVU408
 1737 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1738              	.LVL67:
 897:Veno-Echo.cpp **** 
 1739              		.loc 20 897 26 view .LVU409
 1740 0010 6449     		ldr	r1, .L111+4
 897:Veno-Echo.cpp **** 
 1741              		.loc 20 897 31 view .LVU410
 1742 0012 654B     		ldr	r3, .L111+8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 84


 1743              	.LVL68:
 896:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 1744              		.loc 20 896 5 is_stmt 1 view .LVU411
 897:Veno-Echo.cpp **** 
 1745              		.loc 20 897 5 view .LVU412
 897:Veno-Echo.cpp **** 
 1746              		.loc 20 897 26 is_stmt 0 view .LVU413
 1747 0014 0A68     		ldr	r2, [r1]
 1748              	.LBB971:
 899:Veno-Echo.cpp ****     {
 1749              		.loc 20 899 9 view .LVU414
 1750 0016 6548     		ldr	r0, .L111+12
 1751              	.LBE971:
 897:Veno-Echo.cpp **** 
 1752              		.loc 20 897 26 view .LVU415
 1753 0018 0132     		adds	r2, r2, #1
 1754              	.LBB1012:
 899:Veno-Echo.cpp ****     {
 1755              		.loc 20 899 5 view .LVU416
 1756 001a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1757              	.LBE1012:
 897:Veno-Echo.cpp **** 
 1758              		.loc 20 897 31 view .LVU417
 1759 001c 83FB0243 		smull	r4, r3, r3, r2
 1760 0020 D417     		asrs	r4, r2, #31
 1761 0022 C4EB6313 		rsb	r3, r4, r3, asr #5
 1762 0026 03EB4303 		add	r3, r3, r3, lsl #1
 1763 002a A2EB8313 		sub	r3, r2, r3, lsl #6
 1764              	.LBB1013:
 1765              	.LBB972:
 903:Veno-Echo.cpp ****         {
 1766              		.loc 20 903 19 view .LVU418
 1767 002e 604A     		ldr	r2, .L111+16
 1768              	.LBE972:
 1769              	.LBE1013:
 897:Veno-Echo.cpp **** 
 1770              		.loc 20 897 14 view .LVU419
 1771 0030 0B60     		str	r3, [r1]
 899:Veno-Echo.cpp ****     {
 1772              		.loc 20 899 5 is_stmt 1 view .LVU420
 1773              	.LBB1014:
 1774 0032 0028     		cmp	r0, #0
 1775 0034 37D1     		bne	.L82
 1776              	.LBB991:
 901:Veno-Echo.cpp ****         //udpate pickup
 1777              		.loc 20 901 9 view .LVU421
 903:Veno-Echo.cpp ****         {
 1778              		.loc 20 903 9 view .LVU422
 1779 0036 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1780 0038 0029     		cmp	r1, #0
 1781 003a 41D0     		beq	.L83
 905:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 1782              		.loc 20 905 13 view .LVU423
 906:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1783              		.loc 20 906 31 is_stmt 0 view .LVU424
 1784 003c 5D4C     		ldr	r4, .L111+20
 907:Veno-Echo.cpp ****         } 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 85


 1785              		.loc 20 907 28 view .LVU425
 1786 003e 5E49     		ldr	r1, .L111+24
 905:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 1787              		.loc 20 905 23 view .LVU426
 1788 0040 1070     		strb	r0, [r2]
 906:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1789              		.loc 20 906 13 is_stmt 1 view .LVU427
 906:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1790              		.loc 20 906 31 is_stmt 0 view .LVU428
 1791 0042 2070     		strb	r0, [r4]
 907:Veno-Echo.cpp ****         } 
 1792              		.loc 20 907 13 is_stmt 1 view .LVU429
 907:Veno-Echo.cpp ****         } 
 1793              		.loc 20 907 28 is_stmt 0 view .LVU430
 1794 0044 81ED000A 		vstr.32	s0, [r1]
 1795              	.L84:
 920:Veno-Echo.cpp **** 
 1796              		.loc 20 920 9 is_stmt 1 view .LVU431
 1797              	.LVL69:
 922:Veno-Echo.cpp ****         {
 1798              		.loc 20 922 9 view .LVU432
 930:Veno-Echo.cpp ****         }
 1799              		.loc 20 930 13 view .LVU433
 1800              	.LBB973:
 1801              	.LBI973:
1861:Veno-Echo.cpp **** {
 1802              		.loc 20 1861 7 view .LVU434
 1803              	.LBB974:
1863:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1804              		.loc 20 1863 5 view .LVU435
1864:Veno-Echo.cpp **** 
 1805              		.loc 20 1864 5 view .LVU436
 1806              	.LBE974:
 1807              	.LBE973:
 930:Veno-Echo.cpp ****         }
 1808              		.loc 20 930 36 is_stmt 0 view .LVU437
 1809 0048 5C49     		ldr	r1, .L111+28
 1810              	.LBB978:
 1811              	.LBB975:
1864:Veno-Echo.cpp **** 
 1812              		.loc 20 1864 39 view .LVU438
 1813 004a B7EE007A 		vmov.f32	s14, #1.0e+0
1864:Veno-Echo.cpp **** 
 1814              		.loc 20 1864 49 view .LVU439
 1815 004e B6EE006A 		vmov.f32	s12, #5.0e-1
 1816              	.LBE975:
 1817              	.LBE978:
 930:Veno-Echo.cpp ****         }
 1818              		.loc 20 930 36 view .LVU440
 1819 0052 5B4A     		ldr	r2, .L111+32
 1820              	.LBB979:
 1821              	.LBB976:
1864:Veno-Echo.cpp **** 
 1822              		.loc 20 1864 39 view .LVU441
 1823 0054 D1ED007A 		vldr.32	s15, [r1]
1864:Veno-Echo.cpp **** 
 1824              		.loc 20 1864 12 view .LVU442
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 86


 1825 0058 F0EE006A 		vmov.f32	s13, #2.0e+0
 1826 005c 92ED008A 		vldr.32	s16, [r2]
1864:Veno-Echo.cpp **** 
 1827              		.loc 20 1864 39 view .LVU443
 1828 0060 77EE677A 		vsub.f32	s15, s14, s15
1864:Veno-Echo.cpp **** 
 1829              		.loc 20 1864 49 view .LVU444
 1830 0064 77EEC67A 		vsub.f32	s15, s15, s12
1864:Veno-Echo.cpp **** 
 1831              		.loc 20 1864 12 view .LVU445
 1832 0068 A7EEA68A 		vfma.f32	s16, s15, s13
 1833              	.LVL70:
1866:Veno-Echo.cpp ****     {
 1834              		.loc 20 1866 5 is_stmt 1 view .LVU446
 1835 006c B5EEC08A 		vcmpe.f32	s16, #0
 1836 0070 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1837 0074 00F18880 		bmi	.L109
1871:Veno-Echo.cpp ****     {
 1838              		.loc 20 1871 5 view .LVU447
1873:Veno-Echo.cpp ****     }
 1839              		.loc 20 1873 16 is_stmt 0 view .LVU448
 1840 0078 B4EE478A 		vcmp.f32	s16, s14
 1841 007c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1842 0080 37FE088A 		vselgt.f32	s16, s14, s16
 1843              	.LVL71:
 1844              	.L89:
1873:Veno-Echo.cpp ****     }
 1845              		.loc 20 1873 16 view .LVU449
 1846              	.LBE976:
 1847              	.LBE979:
 933:Veno-Echo.cpp ****         {
 1848              		.loc 20 933 9 is_stmt 1 view .LVU450
 1849 0084 CBB9     		cbnz	r3, .L81
 935:Veno-Echo.cpp ****             {
 1850              		.loc 20 935 13 view .LVU451
 935:Veno-Echo.cpp ****             {
 1851              		.loc 20 935 35 is_stmt 0 view .LVU452
 1852 0086 4F48     		ldr	r0, .L111+36
 1853 0088 FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 1854              	.LVL72:
 935:Veno-Echo.cpp ****             {
 1855              		.loc 20 935 35 view .LVU453
 1856 008c 4E4B     		ldr	r3, .L111+40
 1857 008e F0EE400A 		vmov.f32	s1, s0
 1858 0092 4E48     		ldr	r0, .L111+44
 1859 0094 B0EE480A 		vmov.f32	s0, s16
 1860 0098 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1861              	.LBE991:
 1862              	.LBE1014:
 975:Veno-Echo.cpp **** void Update_feedbackL_CV()
 1863              		.loc 20 975 1 view .LVU454
 1864 009a BDEC028B 		vldm	sp!, {d8}
 1865              		.cfi_remember_state
 1866              		.cfi_restore 80
 1867              		.cfi_restore 81
 1868              		.cfi_def_cfa_offset 8
 1869              	.LVL73:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 87


 975:Veno-Echo.cpp **** void Update_feedbackL_CV()
 1870              		.loc 20 975 1 view .LVU455
 1871 009e BDE81040 		pop	{r4, lr}
 1872              		.cfi_restore 14
 1873              		.cfi_restore 4
 1874              		.cfi_def_cfa_offset 0
 1875              	.LBB1015:
 1876              	.LBB992:
 935:Veno-Echo.cpp ****             {
 1877              		.loc 20 935 35 view .LVU456
 1878 00a2 FFF7FEBF 		b	_ZN10DelayMulti12SetDelayTimeEffb
 1879              	.LVL74:
 1880              	.L82:
 1881              		.cfi_restore_state
 935:Veno-Echo.cpp ****             {
 1882              		.loc 20 935 35 view .LVU457
 1883              	.LBE992:
 1884              	.LBB993:
 945:Veno-Echo.cpp **** 
 1885              		.loc 20 945 9 is_stmt 1 view .LVU458
 947:Veno-Echo.cpp ****         {
 1886              		.loc 20 947 9 view .LVU459
 1887 00a6 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1888 00a8 002B     		cmp	r3, #0
 1889 00aa 3CD1     		bne	.L92
 949:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1890              		.loc 20 949 13 view .LVU460
 949:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1891              		.loc 20 949 23 is_stmt 0 view .LVU461
 1892 00ac 0124     		movs	r4, #1
 950:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1893              		.loc 20 950 29 view .LVU462
 1894 00ae 4848     		ldr	r0, .L111+48
 951:Veno-Echo.cpp ****         }
 1895              		.loc 20 951 26 view .LVU463
 1896 00b0 4849     		ldr	r1, .L111+52
 949:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1897              		.loc 20 949 23 view .LVU464
 1898 00b2 1470     		strb	r4, [r2]
 950:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1899              		.loc 20 950 13 is_stmt 1 view .LVU465
 950:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1900              		.loc 20 950 29 is_stmt 0 view .LVU466
 1901 00b4 0370     		strb	r3, [r0]
 951:Veno-Echo.cpp ****         }
 1902              		.loc 20 951 13 is_stmt 1 view .LVU467
 951:Veno-Echo.cpp ****         }
 1903              		.loc 20 951 26 is_stmt 0 view .LVU468
 1904 00b6 81ED000A 		vstr.32	s0, [r1]
 1905              	.L81:
 951:Veno-Echo.cpp ****         }
 1906              		.loc 20 951 26 view .LVU469
 1907              	.LBE993:
 1908              	.LBE1015:
 975:Veno-Echo.cpp **** void Update_feedbackL_CV()
 1909              		.loc 20 975 1 view .LVU470
 1910 00ba BDEC028B 		vldm	sp!, {d8}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 88


 1911              		.cfi_remember_state
 1912              		.cfi_restore 80
 1913              		.cfi_restore 81
 1914              		.cfi_def_cfa_offset 8
 1915 00be 10BD     		pop	{r4, pc}
 1916              	.L83:
 1917              		.cfi_restore_state
 1918              	.LBB1016:
 1919              	.LBB1008:
 911:Veno-Echo.cpp ****             {
 1920              		.loc 20 911 13 is_stmt 1 view .LVU471
 911:Veno-Echo.cpp ****             {
 1921              		.loc 20 911 16 is_stmt 0 view .LVU472
 1922 00c0 3C4A     		ldr	r2, .L111+20
 911:Veno-Echo.cpp ****             {
 1923              		.loc 20 911 13 view .LVU473
 1924 00c2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1925 00c4 79B9     		cbnz	r1, .L85
 913:Veno-Echo.cpp ****                 {
 1926              		.loc 20 913 17 is_stmt 1 view .LVU474
 1927              	.LVL75:
 1928              	.LBB980:
 1929              	.LBI980:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1930              		.loc 21 75 3 view .LVU475
 1931              	.LBB981:
 1932              		.loc 21 76 5 view .LVU476
 1933              		.loc 21 76 5 is_stmt 0 view .LVU477
 1934              	.LBE981:
 1935              	.LBE980:
 913:Veno-Echo.cpp ****                 {
 1936              		.loc 20 913 23 view .LVU478
 1937 00c6 3C49     		ldr	r1, .L111+24
 913:Veno-Echo.cpp ****                 {
 1938              		.loc 20 913 17 view .LVU479
 1939 00c8 9FED437A 		vldr.32	s14, .L111+56
 913:Veno-Echo.cpp ****                 {
 1940              		.loc 20 913 23 view .LVU480
 1941 00cc D1ED007A 		vldr.32	s15, [r1]
 1942 00d0 70EE677A 		vsub.f32	s15, s0, s15
 1943              	.LBB983:
 1944              	.LBB982:
 1945              		.loc 21 76 31 view .LVU481
 1946 00d4 F0EEE77A 		vabs.f32	s15, s15
 1947              	.LBE982:
 1948              	.LBE983:
 913:Veno-Echo.cpp ****                 {
 1949              		.loc 20 913 17 view .LVU482
 1950 00d8 F4EEC77A 		vcmpe.f32	s15, s14
 1951 00dc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1952 00e0 B2DD     		ble	.L84
 915:Veno-Echo.cpp ****                 }
 1953              		.loc 20 915 21 is_stmt 1 view .LVU483
 915:Veno-Echo.cpp ****                 }
 1954              		.loc 20 915 39 is_stmt 0 view .LVU484
 1955 00e2 0121     		movs	r1, #1
 1956 00e4 1170     		strb	r1, [r2]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 89


 1957              	.L85:
 920:Veno-Echo.cpp **** 
 1958              		.loc 20 920 9 is_stmt 1 view .LVU485
 1959              	.LVL76:
 922:Veno-Echo.cpp ****         {
 1960              		.loc 20 922 9 view .LVU486
 924:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 1961              		.loc 20 924 13 view .LVU487
 1962              	.LBB984:
 1963              	.LBI984:
1861:Veno-Echo.cpp **** {
 1964              		.loc 20 1861 7 view .LVU488
 1965              	.LBB985:
1863:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1966              		.loc 20 1863 5 view .LVU489
1864:Veno-Echo.cpp **** 
 1967              		.loc 20 1864 5 view .LVU490
 1968              	.LBE985:
 1969              	.LBE984:
 924:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 1970              		.loc 20 924 36 is_stmt 0 view .LVU491
 1971 00e6 354A     		ldr	r2, .L111+28
 1972              	.LBB988:
 1973              	.LBB986:
1864:Veno-Echo.cpp **** 
 1974              		.loc 20 1864 39 view .LVU492
 1975 00e8 B7EE007A 		vmov.f32	s14, #1.0e+0
1864:Veno-Echo.cpp **** 
 1976              		.loc 20 1864 49 view .LVU493
 1977 00ec B6EE006A 		vmov.f32	s12, #5.0e-1
1864:Veno-Echo.cpp **** 
 1978              		.loc 20 1864 39 view .LVU494
 1979 00f0 D2ED007A 		vldr.32	s15, [r2]
1864:Veno-Echo.cpp **** 
 1980              		.loc 20 1864 12 view .LVU495
 1981 00f4 F0EE006A 		vmov.f32	s13, #2.0e+0
 1982 00f8 B0EE408A 		vmov.f32	s16, s0
1864:Veno-Echo.cpp **** 
 1983              		.loc 20 1864 39 view .LVU496
 1984 00fc 77EE677A 		vsub.f32	s15, s14, s15
1864:Veno-Echo.cpp **** 
 1985              		.loc 20 1864 49 view .LVU497
 1986 0100 77EEC67A 		vsub.f32	s15, s15, s12
1864:Veno-Echo.cpp **** 
 1987              		.loc 20 1864 12 view .LVU498
 1988 0104 A7EEA68A 		vfma.f32	s16, s15, s13
 1989              	.LVL77:
1866:Veno-Echo.cpp ****     {
 1990              		.loc 20 1866 5 is_stmt 1 view .LVU499
 1991 0108 B5EEC08A 		vcmpe.f32	s16, #0
 1992 010c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1993 0110 3DD4     		bmi	.L110
1871:Veno-Echo.cpp ****     {
 1994              		.loc 20 1871 5 view .LVU500
1873:Veno-Echo.cpp ****     }
 1995              		.loc 20 1873 16 is_stmt 0 view .LVU501
 1996 0112 B4EE478A 		vcmp.f32	s16, s14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 90


 1997 0116 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1998 011a 37FE088A 		vselgt.f32	s16, s14, s16
 1999              	.LVL78:
 2000              	.L87:
 2001              		.loc 20 1876 5 is_stmt 1 view .LVU502
 2002              		.loc 20 1876 5 is_stmt 0 view .LVU503
 2003              	.LBE986:
 2004              	.LBE988:
 925:Veno-Echo.cpp ****         }
 2005              		.loc 20 925 13 is_stmt 1 view .LVU504
 925:Veno-Echo.cpp ****         }
 2006              		.loc 20 925 29 is_stmt 0 view .LVU505
 2007 011e 284A     		ldr	r2, .L111+32
 2008 0120 82ED000A 		vstr.32	s0, [r2]
 2009 0124 AEE7     		b	.L89
 2010              	.LVL79:
 2011              	.L92:
 925:Veno-Echo.cpp ****         }
 2012              		.loc 20 925 29 view .LVU506
 2013              	.LBE1008:
 2014              	.LBB1009:
 956:Veno-Echo.cpp ****             {
 2015              		.loc 20 956 13 is_stmt 1 view .LVU507
 956:Veno-Echo.cpp ****             {
 2016              		.loc 20 956 16 is_stmt 0 view .LVU508
 2017 0126 2A4B     		ldr	r3, .L111+48
 956:Veno-Echo.cpp ****             {
 2018              		.loc 20 956 13 view .LVU509
 2019 0128 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2020 012a 7AB9     		cbnz	r2, .L93
 958:Veno-Echo.cpp ****                 {
 2021              		.loc 20 958 17 is_stmt 1 view .LVU510
 2022              	.LVL80:
 2023              	.LBB994:
 2024              	.LBI994:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2025              		.loc 21 75 3 view .LVU511
 2026              	.LBB995:
 2027              		.loc 21 76 5 view .LVU512
 2028              		.loc 21 76 5 is_stmt 0 view .LVU513
 2029              	.LBE995:
 2030              	.LBE994:
 958:Veno-Echo.cpp ****                 {
 2031              		.loc 20 958 23 view .LVU514
 2032 012c 294A     		ldr	r2, .L111+52
 958:Veno-Echo.cpp ****                 {
 2033              		.loc 20 958 17 view .LVU515
 2034 012e 9FED2A7A 		vldr.32	s14, .L111+56
 958:Veno-Echo.cpp ****                 {
 2035              		.loc 20 958 23 view .LVU516
 2036 0132 D2ED007A 		vldr.32	s15, [r2]
 2037 0136 70EE677A 		vsub.f32	s15, s0, s15
 2038              	.LBB997:
 2039              	.LBB996:
 2040              		.loc 21 76 31 view .LVU517
 2041 013a F0EEE77A 		vabs.f32	s15, s15
 2042              	.LBE996:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 91


 2043              	.LBE997:
 958:Veno-Echo.cpp ****                 {
 2044              		.loc 20 958 17 view .LVU518
 2045 013e F4EEC77A 		vcmpe.f32	s15, s14
 2046 0142 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2047 0146 B8DD     		ble	.L81
 960:Veno-Echo.cpp ****                 }
 2048              		.loc 20 960 21 is_stmt 1 view .LVU519
 960:Veno-Echo.cpp ****                 }
 2049              		.loc 20 960 37 is_stmt 0 view .LVU520
 2050 0148 0122     		movs	r2, #1
 2051 014a 1A70     		strb	r2, [r3]
 2052              	.L93:
 965:Veno-Echo.cpp ****         {
 2053              		.loc 20 965 9 is_stmt 1 view .LVU521
 2054              	.LBB998:
 2055              	.LBB999:
 967:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
 2056              		.loc 20 967 13 view .LVU522
 2057              	.LVL81:
 968:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2058              		.loc 20 968 13 view .LVU523
 968:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2059              		.loc 20 968 61 is_stmt 0 view .LVU524
 2060 014c F0EE080A 		vmov.f32	s1, #3.0e+0
 2061 0150 0020     		movs	r0, #0
 2062 0152 9FED221A 		vldr.32	s2, .L111+60
 2063 0156 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2064              	.LVL82:
 2065              	.LBB1000:
 2066              	.LBI1000:
 2067              		.file 22 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // -*- C++ -*- C forwarding header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** /** @file include/cmath
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 92


  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  as macros in C).
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  */
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // ISO C++ 14882: 26.5  C library
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #pragma GCC system_header
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/c++config.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/cpp_type_traits.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <ext/type_traits.h>
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include_next <math.h>
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/std_abs.h>
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_CMATH
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_CMATH 1
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef div
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acos
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asin
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan2
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ceil
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cos
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cosh
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fabs
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef floor
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmod
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef frexp
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ldexp
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log10
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef modf
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef pow
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sin
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sinh
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sqrt
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tan
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tanh
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** extern "C++"
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 93


  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acos;
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(float __x)
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosf(__x); }
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(long double __x)
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosl(__x); }
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acos(_Tp __x)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acos(__x); }
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asin;
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(float __x)
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinf(__x); }
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(long double __x)
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinl(__x); }
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asin(_Tp __x)
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asin(__x); }
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan;
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(float __x)
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanf(__x); }
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(long double __x)
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanl(__x); }
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan(_Tp __x)
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atan(__x); }
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 94


 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan2;
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(float __y, float __x)
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2f(__y, __x); }
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(long double __y, long double __x)
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2l(__y, __x); }
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan2(_Tp __y, _Up __x)
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return atan2(__type(__y), __type(__x));
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ceil;
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(float __x)
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceilf(__x); }
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(long double __x)
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceill(__x); }
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ceil(_Tp __x)
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ceil(__x); }
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cos;
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(float __x)
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosf(__x); }
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(long double __x)
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosl(__x); }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cos(_Tp __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 95


 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cos(__x); }
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cosh;
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(float __x)
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshf(__x); }
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(long double __x)
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshl(__x); }
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cosh(_Tp __x)
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cosh(__x); }
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(float __x)
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expf(__x); }
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(long double __x)
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expl(__x); }
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp(_Tp __x)
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp(__x); }
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fabs;
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(float __x)
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsf(__x); }
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(long double __x)
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsl(__x); }
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fabs(_Tp __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 96


 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_fabs(__x); }
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::floor;
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(float __x)
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorf(__x); }
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(long double __x)
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorl(__x); }
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     floor(_Tp __x)
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_floor(__x); }
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmod;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(float __x, float __y)
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodf(__x, __y); }
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(long double __x, long double __y)
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodl(__x, __y); }
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmod(_Tp __x, _Up __y)
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmod(__type(__x), __type(__y));
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::frexp;
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(float __x, int* __exp)
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(long double __x, int* __exp)
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 97


 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     frexp(_Tp __x, int* __exp)
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_frexp(__x, __exp); }
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ldexp;
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(float __x, int __exp)
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(long double __x, int __exp)
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ldexp(_Tp __x, int __exp)
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log;
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(float __x)
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logf(__x); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(long double __x)
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logl(__x); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log(_Tp __x)
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log(__x); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log10;
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(float __x)
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10f(__x); }
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(long double __x)
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10l(__x); }
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 98


 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log10(_Tp __x)
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log10(__x); }
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::modf;
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(float __x, float* __iptr)
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modff(__x, __iptr); }
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(long double __x, long double* __iptr)
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::pow;
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, float __y)
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powf(__x, __y); }
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, long double __y)
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powl(__x, __y); }
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus < 201103L
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline double
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(double __x, int __i)
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powi(__x, __i); }
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, int __n)
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powif(__x, __n); }
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, int __n)
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powil(__x, __n); }
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     pow(_Tp __x, _Up __y)
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return pow(__type(__x), __type(__y));
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sin;
 422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 99


 425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(float __x)
 426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinf(__x); }
 427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(long double __x)
 430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinl(__x); }
 431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sin(_Tp __x)
 438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sin(__x); }
 439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sinh;
 441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(float __x)
 445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhf(__x); }
 446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(long double __x)
 449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhl(__x); }
 450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sinh(_Tp __x)
 457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sinh(__x); }
 458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sqrt;
 460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(float __x)
 464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtf(__x); }
 465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(long double __x)
 468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtl(__x); }
 469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sqrt(_Tp __x)
 476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sqrt(__x); }
 477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tan;
 479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 100


 482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(float __x)
 483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanf(__x); }
 484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(long double __x)
 487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanl(__x); }
 488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tan(_Tp __x)
 495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tan(__x); }
 496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tanh;
 498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(float __x)
 502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhf(__x); }
 503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(long double __x)
 506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhl(__x); }
 507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tanh(_Tp __x)
 514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tanh(__x); }
 515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_USE_C99_MATH
 517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC
 518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // These are possible macros imported from C99-land.
 520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fpclassify
 521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isfinite
 522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isinf
 523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnan
 524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnormal
 525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef signbit
 526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreater
 527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreaterequal
 528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isless
 529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessequal
 530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessgreater
 531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isunordered
 532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(float __x)
 538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 101


 539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(double __x)
 543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(long double __x)
 548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               int>::__type
 556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __x)
 557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? FP_NORMAL : FP_ZERO; }
 558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(float __x)
 563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(double __x)
 567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(long double __x)
 571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __x)
 579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return true; }
 580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(float __x)
 585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISINF \
 588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isinf;
 590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(double __x)
 593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 102


 596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(long double __x)
 598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __x)
 606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(float __x)
 612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISNAN \
 615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isnan;
 617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(double __x)
 620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(long double __x)
 625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __x)
 633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(float __x)
 639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(double __x)
 643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(long double __x)
 647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 103


 653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __x)
 655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? true : false; }
 656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // Note: middle-end/36757 is fixed, __builtin_signbit is type-generic.
 660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(float __x)
 662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(double __x)
 666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(long double __x)
 670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __x)
 678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x < 0 ? true : false; }
 679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(float __x, float __y)
 684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(double __x, double __y)
 688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(long double __x, long double __y)
 692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __x, _Up __y)
 701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__x), __type(__y));
 704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(float __x, float __y)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 104


 710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(double __x, double __y)
 714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(long double __x, long double __y)
 718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __x, _Up __y)
 727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__x), __type(__y));
 730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(float __x, float __y)
 736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(double __x, double __y)
 740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(long double __x, long double __y)
 744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __x, _Up __y)
 753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__x), __type(__y));
 756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 758:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 759:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 760:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 761:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(float __x, float __y)
 762:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 763:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 764:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 765:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(double __x, double __y)
 766:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 105


 767:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 768:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 769:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(long double __x, long double __y)
 770:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 771:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 772:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 773:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 774:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 775:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 776:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 777:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 778:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __x, _Up __y)
 779:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 780:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 781:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__x), __type(__y));
 782:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 783:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 784:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 785:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 786:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 787:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(float __x, float __y)
 788:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 789:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 790:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 791:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(double __x, double __y)
 792:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 793:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 794:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 795:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(long double __x, long double __y)
 796:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 797:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 798:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 799:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 800:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 801:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 802:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 803:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 804:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __x, _Up __y)
 805:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 806:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 807:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__x), __type(__y));
 808:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 809:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 810:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 811:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 812:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 813:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(float __x, float __y)
 814:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 815:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 816:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 817:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(double __x, double __y)
 818:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 819:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 820:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 821:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(long double __x, long double __y)
 822:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 823:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 106


 824:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 825:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 826:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 827:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 828:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 829:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 830:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __x, _Up __y)
 831:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 832:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 833:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__x), __type(__y));
 834:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 835:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 836:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 837:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 838:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 839:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 840:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 841:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 842:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __f)
 843:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 844:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 845:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 846:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				  FP_SUBNORMAL, FP_ZERO, __type(__f));
 847:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 848:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 849:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 850:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 851:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 852:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __f)
 853:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 854:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 855:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isfinite(__type(__f));
 856:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 857:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 858:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 859:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 860:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 861:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __f)
 862:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 863:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 864:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isinf(__type(__f));
 865:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 866:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 867:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 868:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 869:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 870:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __f)
 871:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 872:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 873:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnan(__type(__f));
 874:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 875:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 876:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 877:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 878:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 879:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __f)
 880:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 107


 881:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 882:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnormal(__type(__f));
 883:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 884:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 885:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 886:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 887:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 888:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __f)
 889:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 890:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 891:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_signbit(__type(__f));
 892:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 893:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 894:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 895:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 896:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 897:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __f1, _Tp __f2)
 898:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 899:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 900:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__f1), __type(__f2));
 901:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 902:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 903:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 904:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 905:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 906:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __f1, _Tp __f2)
 907:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 908:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 909:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__f1), __type(__f2));
 910:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 911:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 912:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 913:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 914:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 915:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __f1, _Tp __f2)
 916:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 917:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 918:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__f1), __type(__f2));
 919:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 920:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 921:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 922:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 923:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 924:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __f1, _Tp __f2)
 925:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 926:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 927:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__f1), __type(__f2));
 928:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 929:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 930:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 931:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 932:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 933:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __f1, _Tp __f2)
 934:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 935:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 936:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__f1), __type(__f2));
 937:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 108


 938:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 939:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 940:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 941:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 942:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __f1, _Tp __f2)
 943:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 944:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 945:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__f1), __type(__f2));
 946:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 947:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 948:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif // C++11
 949:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_FP_MACROS_DYNAMIC */
 950:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_MATH */
 951:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 952:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 953:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 954:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifdef _GLIBCXX_USE_C99_MATH_TR1
 955:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 956:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acosh
 957:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshf
 958:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshl
 959:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinh
 960:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhf
 961:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhl
 962:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanh
 963:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhf
 964:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhl
 965:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrt
 966:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtf
 967:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtl
 968:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysign
 969:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignf
 970:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignl
 971:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erf
 972:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erff
 973:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfl
 974:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfc
 975:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcf
 976:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcl
 977:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2
 978:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2f
 979:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2l
 980:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1
 981:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1f
 982:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1l
 983:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdim
 984:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdimf
 985:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdiml
 986:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fma
 987:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaf
 988:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmal
 989:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmax
 990:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxf
 991:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxl
 992:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmin
 993:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminf
 994:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminl
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 109


 995:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypot
 996:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotf
 997:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotl
 998:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogb
 999:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbf
1000:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbl
1001:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgamma
1002:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammaf
1003:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammal
1004:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1005:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrint
1006:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintf
1007:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintl
1008:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llround
1009:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundf
1010:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundl
1011:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1012:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1p
1013:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pf
1014:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pl
1015:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2
1016:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2f
1017:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2l
1018:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logb
1019:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbf
1020:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbl
1021:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrint
1022:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintf
1023:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintl
1024:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lround
1025:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundf
1026:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundl
1027:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nan
1028:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanf
1029:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanl
1030:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyint
1031:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintf
1032:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintl
1033:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafter
1034:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterf
1035:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterl
1036:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttoward
1037:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardf
1038:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardl
1039:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainder
1040:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderf
1041:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderl
1042:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquo
1043:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquof
1044:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquol
1045:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rint
1046:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintf
1047:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintl
1048:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef round
1049:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundf
1050:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundl
1051:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbln
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 110


1052:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnf
1053:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnl
1054:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbn
1055:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnf
1056:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnl
1057:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgamma
1058:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammaf
1059:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammal
1060:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef trunc
1061:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncf
1062:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncl
1063:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1064:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // types
1065:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::double_t;
1066:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::float_t;
1067:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1068:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // functions
1069:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acosh;
1070:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshf;
1071:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshl;
1072:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1073:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinh;
1074:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhf;
1075:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhl;
1076:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1077:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanh;
1078:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhf;
1079:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhl;
1080:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1081:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrt;
1082:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtf;
1083:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtl;
1084:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1085:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysign;
1086:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignf;
1087:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignl;
1088:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1089:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erf;
1090:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erff;
1091:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfl;
1092:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1093:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfc;
1094:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcf;
1095:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcl;
1096:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1097:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2;
1098:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2f;
1099:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2l;
1100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1;
1102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1f;
1103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1l;
1104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdim;
1106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdimf;
1107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdiml;
1108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 111


1109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fma;
1110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaf;
1111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmal;
1112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmax;
1114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxf;
1115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxl;
1116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmin;
1118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminf;
1119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminl;
1120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypot;
1122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotf;
1123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotl;
1124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogb;
1126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbf;
1127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbl;
1128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgamma;
1130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammaf;
1131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammal;
1132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrint;
1135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintf;
1136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintl;
1137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llround;
1139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundf;
1140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundl;
1141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1p;
1144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pf;
1145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pl;
1146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2;
1148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2f;
1149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2l;
1150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logb;
1152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbf;
1153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbl;
1154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrint;
1156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintf;
1157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintl;
1158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lround;
1160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundf;
1161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundl;
1162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nan;
1164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanf;
1165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanl;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 112


1166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyint;
1168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintf;
1169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintl;
1170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafter;
1172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterf;
1173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterl;
1174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttoward;
1176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardf;
1177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardl;
1178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainder;
1180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderf;
1181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderl;
1182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquo;
1184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquof;
1185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquol;
1186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rint;
1188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintf;
1189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintl;
1190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::round;
1192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundf;
1193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundl;
1194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbln;
1196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnf;
1197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnl;
1198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbn;
1200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnf;
1201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnl;
1202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgamma;
1204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammaf;
1205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammal;
1206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::trunc;
1208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncf;
1209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncl;
1210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   /// Additional overloads.
1212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(float __x)
1215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshf(__x); }
1216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(long double __x)
1219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshl(__x); }
1220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 113


1223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acosh(_Tp __x)
1227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acosh(__x); }
1228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(float __x)
1233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhf(__x); }
1234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(long double __x)
1237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhl(__x); }
1238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asinh(_Tp __x)
1245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asinh(__x); }
1246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(float __x)
1251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhf(__x); }
1252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(long double __x)
1255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhl(__x); }
1256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atanh(_Tp __x)
1263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atanh(__x); }
1264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(float __x)
1269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtf(__x); }
1270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(long double __x)
1273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtl(__x); }
1274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 114


1280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cbrt(_Tp __x)
1281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cbrt(__x); }
1282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(float __x, float __y)
1287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignf(__x, __y); }
1288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(long double __x, long double __y)
1291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignl(__x, __y); }
1292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     copysign(_Tp __x, _Up __y)
1298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return copysign(__type(__x), __type(__y));
1301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(float __x)
1307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erff(__x); }
1308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(long double __x)
1311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfl(__x); }
1312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erf(_Tp __x)
1319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erf(__x); }
1320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(float __x)
1325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcf(__x); }
1326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(long double __x)
1329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcl(__x); }
1330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erfc(_Tp __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 115


1337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erfc(__x); }
1338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(float __x)
1343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2f(__x); }
1344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(long double __x)
1347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2l(__x); }
1348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp2(_Tp __x)
1355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp2(__x); }
1356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(float __x)
1361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1f(__x); }
1362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(long double __x)
1365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1l(__x); }
1366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     expm1(_Tp __x)
1373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_expm1(__x); }
1374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(float __x, float __y)
1379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdimf(__x, __y); }
1380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(long double __x, long double __y)
1383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdiml(__x, __y); }
1384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fdim(_Tp __x, _Up __y)
1390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fdim(__type(__x), __type(__y));
1393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 116


1394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(float __x, float __y, float __z)
1399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaf(__x, __y, __z); }
1400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(long double __x, long double __y, long double __z)
1403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmal(__x, __y, __z); }
1404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up, typename _Vp>
1408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type
1409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fma(_Tp __x, _Up __y, _Vp __z)
1410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type __type;
1412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fma(__type(__x), __type(__y), __type(__z));
1413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(float __x, float __y)
1419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxf(__x, __y); }
1420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(long double __x, long double __y)
1423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxl(__x, __y); }
1424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmax(_Tp __x, _Up __y)
1430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmax(__type(__x), __type(__y));
1433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(float __x, float __y)
1439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminf(__x, __y); }
1440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(long double __x, long double __y)
1443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminl(__x, __y); }
1444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmin(_Tp __x, _Up __y)
1450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 117


1451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmin(__type(__x), __type(__y));
1453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(float __x, float __y)
1459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotf(__x, __y); }
1460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(long double __x, long double __y)
1463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotl(__x, __y); }
1464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     hypot(_Tp __x, _Up __y)
1470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return hypot(__type(__x), __type(__y));
1473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(float __x)
1479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbf(__x); }
1480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(long double __x)
1483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbl(__x); }
1484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr
1489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     int>::__type
1491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ilogb(_Tp __x)
1492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ilogb(__x); }
1493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(float __x)
1498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammaf(__x); }
1499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(long double __x)
1502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammal(__x); }
1503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 118


1508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lgamma(_Tp __x)
1510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lgamma(__x); }
1511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(float __x)
1516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintf(__x); }
1517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(long double __x)
1520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintl(__x); }
1521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llrint(_Tp __x)
1528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llrint(__x); }
1529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(float __x)
1534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundf(__x); }
1535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(long double __x)
1538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundl(__x); }
1539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llround(_Tp __x)
1546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llround(__x); }
1547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(float __x)
1552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pf(__x); }
1553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(long double __x)
1556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pl(__x); }
1557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log1p(_Tp __x)
1564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log1p(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 119


1565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 568.
1569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(float __x)
1571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2f(__x); }
1572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(long double __x)
1575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2l(__x); }
1576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log2(_Tp __x)
1583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log2(__x); }
1584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(float __x)
1589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbf(__x); }
1590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(long double __x)
1593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbl(__x); }
1594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     logb(_Tp __x)
1601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_logb(__x); }
1602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(float __x)
1607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintf(__x); }
1608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(long double __x)
1611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintl(__x); }
1612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lrint(_Tp __x)
1619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lrint(__x); }
1620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 120


1622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(float __x)
1625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundf(__x); }
1626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(long double __x)
1629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundl(__x); }
1630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lround(_Tp __x)
1637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lround(__x); }
1638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(float __x)
1643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintf(__x); }
1644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(long double __x)
1647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintl(__x); }
1648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nearbyint(_Tp __x)
1655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nearbyint(__x); }
1656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(float __x, float __y)
1661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterf(__x, __y); }
1662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(long double __x, long double __y)
1665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterl(__x, __y); }
1666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nextafter(_Tp __x, _Up __y)
1672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return nextafter(__type(__x), __type(__y));
1675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 121


1679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(float __x, long double __y)
1681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardf(__x, __y); }
1682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(long double __x, long double __y)
1685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardl(__x, __y); }
1686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nexttoward(_Tp __x, long double __y)
1693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nexttoward(__x, __y); }
1694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(float __x, float __y)
1699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderf(__x, __y); }
1700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(long double __x, long double __y)
1703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderl(__x, __y); }
1704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remainder(_Tp __x, _Up __y)
1710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remainder(__type(__x), __type(__y));
1713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
1718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(float __x, float __y, int* __pquo)
1719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquof(__x, __y, __pquo); }
1720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
1722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(long double __x, long double __y, int* __pquo)
1723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquol(__x, __y, __pquo); }
1724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remquo(_Tp __x, _Up __y, int* __pquo)
1730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remquo(__type(__x), __type(__y), __pquo);
1733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 122


1736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(float __x)
1739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintf(__x); }
1740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(long double __x)
1743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintl(__x); }
1744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     rint(_Tp __x)
1751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_rint(__x); }
1752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   round(float __x)
 2068              		.loc 22 1756 3 is_stmt 1 view .LVU525
 2069              	.LBB1001:
1757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_roundf(__x); }
 2070              		.loc 22 1757 5 view .LVU526
 2071              		.loc 22 1757 28 is_stmt 0 view .LVU527
 2072 015a B8FE400A 		vrinta.f32	s0, s0
 2073              	.LVL83:
 2074              		.loc 22 1757 28 view .LVU528
 2075              	.LBE1001:
 2076              	.LBE1000:
 969:Veno-Echo.cpp ****             //save setting:
 2077              		.loc 20 969 13 is_stmt 1 view .LVU529
 2078              	.LBB1002:
 2079              	.LBI1002:
1877:Veno-Echo.cpp **** }
1878:Veno-Echo.cpp **** 
1879:Veno-Echo.cpp **** //checks pickup state of primary controls
1880:Veno-Echo.cpp **** bool checkPickupState(float value, float lastValue, bool lastState, bool ShiftChange)
1881:Veno-Echo.cpp **** {
1882:Veno-Echo.cpp ****     bool retval{};
1883:Veno-Echo.cpp ****     
1884:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change to not picked up, unless there's been no change
1885:Veno-Echo.cpp ****     {
1886:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
1887:Veno-Echo.cpp ****         {
1888:Veno-Echo.cpp ****             retval = false;
1889:Veno-Echo.cpp ****         }
1890:Veno-Echo.cpp ****         else
1891:Veno-Echo.cpp ****         {
1892:Veno-Echo.cpp ****             retval = true;
1893:Veno-Echo.cpp ****         }
1894:Veno-Echo.cpp ****     }
1895:Veno-Echo.cpp **** 
1896:Veno-Echo.cpp ****     else //not recent shift change, change to pickup if there's been a change since last shift chan
1897:Veno-Echo.cpp ****     {
1898:Veno-Echo.cpp ****     if(!lastState) //if not picked up
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 123


1899:Veno-Echo.cpp ****     {
1900:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
1901:Veno-Echo.cpp ****         {
1902:Veno-Echo.cpp ****             retval = true;
1903:Veno-Echo.cpp ****         }
1904:Veno-Echo.cpp **** 
1905:Veno-Echo.cpp ****         else
1906:Veno-Echo.cpp ****         {
1907:Veno-Echo.cpp ****             retval = false;
1908:Veno-Echo.cpp ****         }
1909:Veno-Echo.cpp **** 
1910:Veno-Echo.cpp ****     }
1911:Veno-Echo.cpp ****     else    //previous state is picked up
1912:Veno-Echo.cpp ****     {
1913:Veno-Echo.cpp ****         retval = true;  //always return true
1914:Veno-Echo.cpp ****     }
1915:Veno-Echo.cpp **** 
1916:Veno-Echo.cpp ****     }
1917:Veno-Echo.cpp ****     return retval;
1918:Veno-Echo.cpp **** 
1919:Veno-Echo.cpp **** }
1920:Veno-Echo.cpp **** 
1921:Veno-Echo.cpp **** //Checks pickup state of secondary controls
1922:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
1923:Veno-Echo.cpp **** {
1924:Veno-Echo.cpp ****     pickupState retval{};
1925:Veno-Echo.cpp **** 
1926:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
1927:Veno-Echo.cpp ****     {
1928:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
1929:Veno-Echo.cpp ****         {
1930:Veno-Echo.cpp ****             retval = BELOW;
1931:Veno-Echo.cpp ****         }
1932:Veno-Echo.cpp ****         
1933:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
1934:Veno-Echo.cpp ****         {
1935:Veno-Echo.cpp ****             retval = ABOVE;
1936:Veno-Echo.cpp ****         }
1937:Veno-Echo.cpp **** 
1938:Veno-Echo.cpp ****         else    //within tolerance i.e. unchanged
1939:Veno-Echo.cpp ****         {
1940:Veno-Echo.cpp ****             retval = PICKEDUP;
1941:Veno-Echo.cpp ****         }
1942:Veno-Echo.cpp ****     }
1943:Veno-Echo.cpp **** 
1944:Veno-Echo.cpp ****     else    //not a recent shift change
1945:Veno-Echo.cpp ****     {
1946:Veno-Echo.cpp ****         switch(lastState)
1947:Veno-Echo.cpp ****         {
1948:Veno-Echo.cpp ****             case BELOW:
1949:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
1950:Veno-Echo.cpp ****                 retval = PICKEDUP;
1951:Veno-Echo.cpp ****             else
1952:Veno-Echo.cpp ****                 retval = lastState;
1953:Veno-Echo.cpp ****             break;
1954:Veno-Echo.cpp **** 
1955:Veno-Echo.cpp ****             case ABOVE:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 124


1956:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
1957:Veno-Echo.cpp ****                 retval = PICKEDUP;
1958:Veno-Echo.cpp ****             else
1959:Veno-Echo.cpp ****                 retval = lastState;
1960:Veno-Echo.cpp ****             break;
1961:Veno-Echo.cpp ****             case PICKEDUP:
1962:Veno-Echo.cpp ****                 retval = lastState;
1963:Veno-Echo.cpp ****             break;
1964:Veno-Echo.cpp ****         }
1965:Veno-Echo.cpp ****     }
1966:Veno-Echo.cpp ****     
1967:Veno-Echo.cpp ****     return retval;
1968:Veno-Echo.cpp **** }
1969:Veno-Echo.cpp **** 
1970:Veno-Echo.cpp **** float GetTapRatio(TapRatios ratio)
 2080              		.loc 20 1970 7 view .LVU530
 2081              	.LBB1003:
1971:Veno-Echo.cpp **** {
1972:Veno-Echo.cpp **** float retVal{};
 2082              		.loc 20 1972 1 view .LVU531
1973:Veno-Echo.cpp ****     switch(ratio)
 2083              		.loc 20 1973 5 view .LVU532
 2084              	.LBE1003:
 2085              	.LBE1002:
 968:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2086              		.loc 20 968 130 is_stmt 0 view .LVU533
 2087 015e FCEEC07A 		vcvt.u32.f32	s15, s0
 2088 0162 17EE903A 		vmov	r3, s15	@ int
 2089 0166 013B     		subs	r3, r3, #1
 2090 0168 DBB2     		uxtb	r3, r3
 2091 016a 022B     		cmp	r3, #2
 2092 016c 12D9     		bls	.L97
 2093 016e B7EE008A 		vmov.f32	s16, #1.0e+0
 2094              	.L98:
 2095              	.LVL84:
 2096              	.LBB1005:
 2097              	.LBB1004:
1974:Veno-Echo.cpp ****     {
1975:Veno-Echo.cpp ****         case QUARTER:
1976:Veno-Echo.cpp ****         retVal = 1.0f;
1977:Veno-Echo.cpp ****         break;
1978:Veno-Echo.cpp **** 
1979:Veno-Echo.cpp ****         case DOTTED_EIGHT:
1980:Veno-Echo.cpp ****         retVal = 3.0f/2.0f;
1981:Veno-Echo.cpp ****         break;
1982:Veno-Echo.cpp **** 
1983:Veno-Echo.cpp ****         case EIGHT:
1984:Veno-Echo.cpp ****         retVal = 2.0f;
1985:Veno-Echo.cpp ****         break;
1986:Veno-Echo.cpp **** 
1987:Veno-Echo.cpp ****         case TWELVE:
1988:Veno-Echo.cpp ****         retVal = 3.0f;
1989:Veno-Echo.cpp ****         break;
1990:Veno-Echo.cpp **** 
1991:Veno-Echo.cpp ****         default:
1992:Veno-Echo.cpp ****         retVal = 1.0f;
1993:Veno-Echo.cpp ****         break;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 125


1994:Veno-Echo.cpp ****     }
1995:Veno-Echo.cpp **** 
1996:Veno-Echo.cpp **** return retVal;
 2098              		.loc 20 1996 1 is_stmt 1 view .LVU534
 2099              		.loc 20 1996 1 is_stmt 0 view .LVU535
 2100              	.LBE1004:
 2101              	.LBE1005:
 969:Veno-Echo.cpp ****             //save setting:
 2102              		.loc 20 969 34 view .LVU536
 2103 0172 B0EE480A 		vmov.f32	s0, s16
 2104              	.LVL85:
 969:Veno-Echo.cpp ****             //save setting:
 2105              		.loc 20 969 34 view .LVU537
 2106 0176 1348     		ldr	r0, .L111+36
 2107 0178 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 2108              	.LVL86:
 971:Veno-Echo.cpp ****         }
 2109              		.loc 20 971 13 is_stmt 1 view .LVU538
 971:Veno-Echo.cpp ****         }
 2110              		.loc 20 971 13 is_stmt 0 view .LVU539
 2111              	.LBE999:
 2112              	.LBE998:
 2113              	.LBE1009:
 2114              	.LBE1016:
1972:Veno-Echo.cpp ****     switch(ratio)
 2115              		.loc 20 1972 1 is_stmt 1 view .LVU540
1973:Veno-Echo.cpp ****     {
 2116              		.loc 20 1973 5 view .LVU541
 2117              		.loc 20 1996 1 view .LVU542
 2118              	.LBB1017:
 2119              	.LBB1010:
 2120              	.LBB1007:
 2121              	.LBB1006:
 971:Veno-Echo.cpp ****         }
 2122              		.loc 20 971 34 is_stmt 0 view .LVU543
 2123 017c 184B     		ldr	r3, .L111+64
 2124 017e 83ED018A 		vstr.32	s16, [r3, #4]
 2125              	.LBE1006:
 2126              	.LBE1007:
 2127              	.LBE1010:
 2128              	.LBE1017:
 975:Veno-Echo.cpp **** void Update_feedbackL_CV()
 2129              		.loc 20 975 1 view .LVU544
 2130 0182 BDEC028B 		vldm	sp!, {d8}
 2131              		.cfi_remember_state
 2132              		.cfi_restore 80
 2133              		.cfi_restore 81
 2134              		.cfi_def_cfa_offset 8
 2135 0186 10BD     		pop	{r4, pc}
 2136              	.LVL87:
 2137              	.L109:
 2138              		.cfi_restore_state
 2139              	.LBB1018:
 2140              	.LBB1011:
 2141              	.LBB989:
 2142              	.LBB977:
1868:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 126


 2143              		.loc 20 1868 16 view .LVU545
 2144 0188 9FED148A 		vldr.32	s16, .L111+60
 2145              	.LVL88:
1868:Veno-Echo.cpp ****     }
 2146              		.loc 20 1868 16 view .LVU546
 2147 018c 7AE7     		b	.L89
 2148              	.LVL89:
 2149              	.L110:
1868:Veno-Echo.cpp ****     }
 2150              		.loc 20 1868 16 view .LVU547
 2151              	.LBE977:
 2152              	.LBE989:
 2153              	.LBB990:
 2154              	.LBB987:
 2155 018e 9FED138A 		vldr.32	s16, .L111+60
 2156              	.LVL90:
1868:Veno-Echo.cpp ****     }
 2157              		.loc 20 1868 16 view .LVU548
 2158 0192 C4E7     		b	.L87
 2159              	.LVL91:
 2160              	.L97:
1868:Veno-Echo.cpp ****     }
 2161              		.loc 20 1868 16 view .LVU549
 2162 0194 134A     		ldr	r2, .L111+68
 2163 0196 02EB8303 		add	r3, r2, r3, lsl #2
 2164 019a 93ED008A 		vldr.32	s16, [r3]
 2165 019e E8E7     		b	.L98
 2166              	.L112:
 2167              		.align	2
 2168              	.L111:
 2169 01a0 18000000 		.word	.LANCHOR4+24
 2170 01a4 00000000 		.word	.LANCHOR18
 2171 01a8 ABAAAA2A 		.word	715827883
 2172 01ac 00000000 		.word	.LANCHOR7
 2173 01b0 00000000 		.word	.LANCHOR19
 2174 01b4 00000000 		.word	.LANCHOR20
 2175 01b8 00000000 		.word	.LANCHOR21
 2176 01bc 00000000 		.word	.LANCHOR17
 2177 01c0 00000000 		.word	.LANCHOR22
 2178 01c4 00000000 		.word	.LANCHOR12
 2179 01c8 00000000 		.word	.LANCHOR13
 2180 01cc 00000000 		.word	.LANCHOR1
 2181 01d0 00000000 		.word	.LANCHOR23
 2182 01d4 00000000 		.word	.LANCHOR24
 2183 01d8 0AD7A33B 		.word	1000593162
 2184 01dc 00000000 		.word	0
 2185 01e0 00000000 		.word	.LANCHOR16
 2186 01e4 00000000 		.word	.LANCHOR25
 2187              	.LBE987:
 2188              	.LBE990:
 2189              	.LBE1011:
 2190              	.LBE1018:
 2191              		.cfi_endproc
 2192              	.LFE4314:
 2194              		.section	.text._Z19Update_feedbackL_CVv,"ax",%progbits
 2195              		.align	1
 2196              		.p2align 2,,3
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 127


 2197              		.global	_Z19Update_feedbackL_CVv
 2198              		.syntax unified
 2199              		.thumb
 2200              		.thumb_func
 2201              		.fpu fpv5-d16
 2203              	_Z19Update_feedbackL_CVv:
 2204              	.LFB4315:
 977:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 2205              		.loc 20 977 1 is_stmt 1 view -0
 2206              		.cfi_startproc
 2207              		@ args = 0, pretend = 0, frame = 0
 2208              		@ frame_needed = 0, uses_anonymous_args = 0
 978:Veno-Echo.cpp **** }
 2209              		.loc 20 978 5 view .LVU551
 977:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 2210              		.loc 20 977 1 is_stmt 0 view .LVU552
 2211 0000 08B5     		push	{r3, lr}
 2212              		.cfi_def_cfa_offset 8
 2213              		.cfi_offset 3, -8
 2214              		.cfi_offset 14, -4
 978:Veno-Echo.cpp **** }
 2215              		.loc 20 978 35 view .LVU553
 2216 0002 0221     		movs	r1, #2
 2217 0004 0348     		ldr	r0, .L115
 2218 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2219              	.LVL92:
 978:Veno-Echo.cpp **** }
 2220              		.loc 20 978 18 view .LVU554
 2221 000a 034B     		ldr	r3, .L115+4
 2222 000c 83ED000A 		vstr.32	s0, [r3]
 979:Veno-Echo.cpp **** void Update_feedbackL()
 2223              		.loc 20 979 1 view .LVU555
 2224 0010 08BD     		pop	{r3, pc}
 2225              	.L116:
 2226 0012 00BF     		.align	2
 2227              	.L115:
 2228 0014 18000000 		.word	.LANCHOR4+24
 2229 0018 00000000 		.word	.LANCHOR26
 2230              		.cfi_endproc
 2231              	.LFE4315:
 2233              		.section	.text._Z16Update_feedbackLv,"ax",%progbits
 2234              		.align	1
 2235              		.p2align 2,,3
 2236              		.global	_Z16Update_feedbackLv
 2237              		.syntax unified
 2238              		.thumb
 2239              		.thumb_func
 2240              		.fpu fpv5-d16
 2242              	_Z16Update_feedbackLv:
 2243              	.LFB4316:
 981:Veno-Echo.cpp ****     static bool lastShift{};
 2244              		.loc 20 981 1 is_stmt 1 view -0
 2245              		.cfi_startproc
 2246              		@ args = 0, pretend = 0, frame = 0
 2247              		@ frame_needed = 0, uses_anonymous_args = 0
 982:Veno-Echo.cpp ****     static bool feedbackL_pickup{};
 2248              		.loc 20 982 5 view .LVU557
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 128


 983:Veno-Echo.cpp ****     static bool HPCutoff_pickup{};
 2249              		.loc 20 983 5 view .LVU558
 984:Veno-Echo.cpp **** 
 2250              		.loc 20 984 5 view .LVU559
 986:Veno-Echo.cpp **** 
 2251              		.loc 20 986 5 view .LVU560
 990:Veno-Echo.cpp **** 
 2252              		.loc 20 990 5 view .LVU561
 990:Veno-Echo.cpp **** 
 2253              		.loc 20 990 43 is_stmt 0 view .LVU562
 2254 0000 0122     		movs	r2, #1
 2255 0002 0721     		movs	r1, #7
 2256 0004 6248     		ldr	r0, .L145
 981:Veno-Echo.cpp ****     static bool lastShift{};
 2257              		.loc 20 981 1 view .LVU563
 2258 0006 10B5     		push	{r4, lr}
 2259              		.cfi_def_cfa_offset 8
 2260              		.cfi_offset 4, -8
 2261              		.cfi_offset 14, -4
 2262 0008 2DED028B 		vpush.64	{d8}
 2263              		.cfi_def_cfa_offset 16
 2264              		.cfi_offset 80, -16
 2265              		.cfi_offset 81, -12
 990:Veno-Echo.cpp **** 
 2266              		.loc 20 990 43 view .LVU564
 2267 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2268              	.LVL93:
 2269              	.LBB1019:
 992:Veno-Echo.cpp ****     {   
 2270              		.loc 20 992 9 view .LVU565
 2271 0010 604B     		ldr	r3, .L145+4
 2272              	.LVL94:
 992:Veno-Echo.cpp ****     {   
 2273              		.loc 20 992 9 view .LVU566
 2274              	.LBE1019:
 992:Veno-Echo.cpp ****     {   
 2275              		.loc 20 992 5 is_stmt 1 view .LVU567
 2276              	.LBB1055:
 2277              	.LBB1020:
 996:Veno-Echo.cpp ****         {
 2278              		.loc 20 996 19 is_stmt 0 view .LVU568
 2279 0012 614A     		ldr	r2, .L145+8
 2280              	.LBE1020:
 992:Veno-Echo.cpp ****     {   
 2281              		.loc 20 992 5 view .LVU569
 2282 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2283 0016 002B     		cmp	r3, #0
 2284 0018 3DD1     		bne	.L118
 2285              	.LBB1043:
 994:Veno-Echo.cpp ****         //update pickup
 2286              		.loc 20 994 9 is_stmt 1 view .LVU570
 996:Veno-Echo.cpp ****         {
 2287              		.loc 20 996 9 view .LVU571
 2288 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2289 001c 0029     		cmp	r1, #0
 2290 001e 47D0     		beq	.L119
 998:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 129


 2291              		.loc 20 998 13 view .LVU572
 999:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2292              		.loc 20 999 30 is_stmt 0 view .LVU573
 2293 0020 5E48     		ldr	r0, .L145+12
1000:Veno-Echo.cpp ****         } 
 2294              		.loc 20 1000 27 view .LVU574
 2295 0022 5F49     		ldr	r1, .L145+16
 998:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 2296              		.loc 20 998 23 view .LVU575
 2297 0024 1370     		strb	r3, [r2]
 999:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2298              		.loc 20 999 13 is_stmt 1 view .LVU576
 999:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2299              		.loc 20 999 30 is_stmt 0 view .LVU577
 2300 0026 0370     		strb	r3, [r0]
1000:Veno-Echo.cpp ****         } 
 2301              		.loc 20 1000 13 is_stmt 1 view .LVU578
1000:Veno-Echo.cpp ****         } 
 2302              		.loc 20 1000 27 is_stmt 0 view .LVU579
 2303 0028 81ED000A 		vstr.32	s0, [r1]
 2304              	.L120:
1013:Veno-Echo.cpp **** 
 2305              		.loc 20 1013 9 is_stmt 1 view .LVU580
 2306              	.LVL95:
1015:Veno-Echo.cpp ****         {
 2307              		.loc 20 1015 9 view .LVU581
1023:Veno-Echo.cpp ****         }
 2308              		.loc 20 1023 13 view .LVU582
 2309              	.LBB1021:
 2310              	.LBI1021:
1861:Veno-Echo.cpp **** {
 2311              		.loc 20 1861 7 view .LVU583
 2312              	.LBB1022:
1863:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2313              		.loc 20 1863 5 view .LVU584
1864:Veno-Echo.cpp **** 
 2314              		.loc 20 1864 5 view .LVU585
 2315              	.LBE1022:
 2316              	.LBE1021:
1023:Veno-Echo.cpp ****         }
 2317              		.loc 20 1023 41 is_stmt 0 view .LVU586
 2318 002c 5D4A     		ldr	r2, .L145+20
 2319              	.LBB1026:
 2320              	.LBB1023:
1864:Veno-Echo.cpp **** 
 2321              		.loc 20 1864 39 view .LVU587
 2322 002e F7EE006A 		vmov.f32	s13, #1.0e+0
1864:Veno-Echo.cpp **** 
 2323              		.loc 20 1864 49 view .LVU588
 2324 0032 F6EE005A 		vmov.f32	s11, #5.0e-1
 2325              	.LBE1023:
 2326              	.LBE1026:
1023:Veno-Echo.cpp ****         }
 2327              		.loc 20 1023 41 view .LVU589
 2328 0036 5C4B     		ldr	r3, .L145+24
 2329              	.LBB1027:
 2330              	.LBB1024:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 130


1864:Veno-Echo.cpp **** 
 2331              		.loc 20 1864 39 view .LVU590
 2332 0038 92ED007A 		vldr.32	s14, [r2]
1864:Veno-Echo.cpp **** 
 2333              		.loc 20 1864 12 view .LVU591
 2334 003c B0EE006A 		vmov.f32	s12, #2.0e+0
 2335 0040 D3ED007A 		vldr.32	s15, [r3]
1864:Veno-Echo.cpp **** 
 2336              		.loc 20 1864 39 view .LVU592
 2337 0044 36EEC77A 		vsub.f32	s14, s13, s14
1864:Veno-Echo.cpp **** 
 2338              		.loc 20 1864 49 view .LVU593
 2339 0048 37EE657A 		vsub.f32	s14, s14, s11
1864:Veno-Echo.cpp **** 
 2340              		.loc 20 1864 12 view .LVU594
 2341 004c E7EE067A 		vfma.f32	s15, s14, s12
 2342              	.LVL96:
1866:Veno-Echo.cpp ****     {
 2343              		.loc 20 1866 5 is_stmt 1 view .LVU595
 2344 0050 F5EEC07A 		vcmpe.f32	s15, #0
 2345 0054 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2346 0058 00F19380 		bmi	.L143
1871:Veno-Echo.cpp ****     {
 2347              		.loc 20 1871 5 view .LVU596
1873:Veno-Echo.cpp ****     }
 2348              		.loc 20 1873 16 is_stmt 0 view .LVU597
 2349 005c F4EE667A 		vcmp.f32	s15, s13
 2350 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2351 0064 76FEA77A 		vselgt.f32	s15, s13, s15
 2352              	.LVL97:
 2353              	.L125:
1873:Veno-Echo.cpp ****     }
 2354              		.loc 20 1873 16 view .LVU598
 2355              	.LBE1024:
 2356              	.LBE1027:
1026:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2357              		.loc 20 1026 9 is_stmt 1 view .LVU599
1026:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2358              		.loc 20 1026 37 is_stmt 0 view .LVU600
 2359 0068 B0EE670A 		vmov.f32	s0, s15
 2360              	.LVL98:
1026:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2361              		.loc 20 1026 37 view .LVU601
 2362 006c 0020     		movs	r0, #0
 2363 006e B7EE041A 		vmov.f32	s2, #1.25e+0
 2364 0072 DFED4E0A 		vldr.32	s1, .L145+28
 2365 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2366              	.LVL99:
1027:Veno-Echo.cpp ****     }
 2367              		.loc 20 1027 9 is_stmt 1 view .LVU602
 2368              	.LBB1028:
 2369              	.LBI1028:
 2370              		.file 23 "../DaisySP/Source/Utility/dsp.h"
   1:../DaisySP/Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../DaisySP/Source/Utility/dsp.h **** */
   3:../DaisySP/Source/Utility/dsp.h **** #pragma once
   4:../DaisySP/Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 131


   5:../DaisySP/Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../DaisySP/Source/Utility/dsp.h **** #include <cassert>
   7:../DaisySP/Source/Utility/dsp.h **** #include <cstdint>
   8:../DaisySP/Source/Utility/dsp.h **** #include <random>
   9:../DaisySP/Source/Utility/dsp.h **** #include <cmath>
  10:../DaisySP/Source/Utility/dsp.h **** 
  11:../DaisySP/Source/Utility/dsp.h **** /** PIs
  12:../DaisySP/Source/Utility/dsp.h **** */
  13:../DaisySP/Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../DaisySP/Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../DaisySP/Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../DaisySP/Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../DaisySP/Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  18:../DaisySP/Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../DaisySP/Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../DaisySP/Source/Utility/dsp.h **** 
  21:../DaisySP/Source/Utility/dsp.h **** namespace daisysp
  22:../DaisySP/Source/Utility/dsp.h **** {
  23:../DaisySP/Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../DaisySP/Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../DaisySP/Source/Utility/dsp.h **** 
  26:../DaisySP/Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../DaisySP/Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../DaisySP/Source/Utility/dsp.h **** 
  29:../DaisySP/Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../DaisySP/Source/Utility/dsp.h **** c/o stephen mccaul
  31:../DaisySP/Source/Utility/dsp.h **** */
  32:../DaisySP/Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../DaisySP/Source/Utility/dsp.h **** {
  34:../DaisySP/Source/Utility/dsp.h ****     float r;
  35:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  36:../DaisySP/Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../DaisySP/Source/Utility/dsp.h **** #else
  38:../DaisySP/Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  40:../DaisySP/Source/Utility/dsp.h ****     return r;
  41:../DaisySP/Source/Utility/dsp.h **** }
  42:../DaisySP/Source/Utility/dsp.h **** 
  43:../DaisySP/Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../DaisySP/Source/Utility/dsp.h **** {
  45:../DaisySP/Source/Utility/dsp.h ****     float r;
  46:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  47:../DaisySP/Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  48:../DaisySP/Source/Utility/dsp.h **** #else
  49:../DaisySP/Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  50:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  51:../DaisySP/Source/Utility/dsp.h ****     return r;
  52:../DaisySP/Source/Utility/dsp.h **** }
  53:../DaisySP/Source/Utility/dsp.h **** 
  54:../DaisySP/Source/Utility/dsp.h **** /** quick fp clamp
  55:../DaisySP/Source/Utility/dsp.h **** */
  56:../DaisySP/Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../DaisySP/Source/Utility/dsp.h **** {
  58:../DaisySP/Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../DaisySP/Source/Utility/dsp.h **** }
  60:../DaisySP/Source/Utility/dsp.h **** 
  61:../DaisySP/Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 132


  62:../DaisySP/Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../DaisySP/Source/Utility/dsp.h **** These are approximations
  64:../DaisySP/Source/Utility/dsp.h **** */
  65:../DaisySP/Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../DaisySP/Source/Utility/dsp.h **** {
  67:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  68:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  70:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../DaisySP/Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  74:../DaisySP/Source/Utility/dsp.h ****     return f;
  75:../DaisySP/Source/Utility/dsp.h **** }
  76:../DaisySP/Source/Utility/dsp.h **** 
  77:../DaisySP/Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  78:../DaisySP/Source/Utility/dsp.h **** {
  79:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  80:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  82:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../DaisySP/Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  86:../DaisySP/Source/Utility/dsp.h ****     return f;
  87:../DaisySP/Source/Utility/dsp.h **** }
  88:../DaisySP/Source/Utility/dsp.h **** 
  89:../DaisySP/Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../DaisySP/Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../DaisySP/Source/Utility/dsp.h **** */
  92:../DaisySP/Source/Utility/dsp.h **** inline float pow10f(float f)
  93:../DaisySP/Source/Utility/dsp.h **** {
  94:../DaisySP/Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../DaisySP/Source/Utility/dsp.h **** }
  96:../DaisySP/Source/Utility/dsp.h **** 
  97:../DaisySP/Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../DaisySP/Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../DaisySP/Source/Utility/dsp.h **** */
 100:../DaisySP/Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../DaisySP/Source/Utility/dsp.h **** {
 102:../DaisySP/Source/Utility/dsp.h ****     float frac;
 103:../DaisySP/Source/Utility/dsp.h ****     int   exp;
 104:../DaisySP/Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../DaisySP/Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 107:../DaisySP/Source/Utility/dsp.h ****     f += -4.11852516267426f;
 108:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 109:../DaisySP/Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 111:../DaisySP/Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../DaisySP/Source/Utility/dsp.h ****     f += exp;
 113:../DaisySP/Source/Utility/dsp.h ****     return (f);
 114:../DaisySP/Source/Utility/dsp.h **** }
 115:../DaisySP/Source/Utility/dsp.h **** 
 116:../DaisySP/Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../DaisySP/Source/Utility/dsp.h **** {
 118:../DaisySP/Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 133


 119:../DaisySP/Source/Utility/dsp.h **** }
 120:../DaisySP/Source/Utility/dsp.h **** 
 121:../DaisySP/Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../DaisySP/Source/Utility/dsp.h **** */
 123:../DaisySP/Source/Utility/dsp.h **** inline float mtof(float m)
 124:../DaisySP/Source/Utility/dsp.h **** {
 125:../DaisySP/Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 126:../DaisySP/Source/Utility/dsp.h **** }
 127:../DaisySP/Source/Utility/dsp.h **** 
 128:../DaisySP/Source/Utility/dsp.h **** 
 129:../DaisySP/Source/Utility/dsp.h **** /** one pole lpf
 130:../DaisySP/Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 131:../DaisySP/Source/Utility/dsp.h **** calls to properly filter the signal
 132:../DaisySP/Source/Utility/dsp.h **** coeff can be calculated:
 133:../DaisySP/Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 134:../DaisySP/Source/Utility/dsp.h **** */
 135:../DaisySP/Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 2371              		.loc 23 135 13 view .LVU603
 2372              	.LBB1029:
 136:../DaisySP/Source/Utility/dsp.h **** {
 137:../DaisySP/Source/Utility/dsp.h ****     out += coeff * (in - out);
 2373              		.loc 23 137 5 view .LVU604
 2374              		.loc 23 137 9 is_stmt 0 view .LVU605
 2375 007a 4D4B     		ldr	r3, .L145+32
 2376 007c 9FED4D7A 		vldr.32	s14, .L145+36
 2377 0080 D3ED007A 		vldr.32	s15, [r3]
 2378              		.loc 23 137 24 view .LVU606
 2379 0084 30EE670A 		vsub.f32	s0, s0, s15
 2380              	.LVL100:
 2381              		.loc 23 137 24 view .LVU607
 2382              	.LBE1029:
 2383              	.LBE1028:
 2384              	.LBE1043:
 2385              	.LBE1055:
1062:Veno-Echo.cpp **** 
 2386              		.loc 20 1062 1 view .LVU608
 2387 0088 BDEC028B 		vldm	sp!, {d8}
 2388              		.cfi_remember_state
 2389              		.cfi_restore 80
 2390              		.cfi_restore 81
 2391              		.cfi_def_cfa_offset 8
 2392              	.LBB1056:
 2393              	.LBB1044:
 2394              	.LBB1031:
 2395              	.LBB1030:
 2396              		.loc 23 137 9 view .LVU609
 2397 008c E0EE077A 		vfma.f32	s15, s0, s14
 2398 0090 C3ED007A 		vstr.32	s15, [r3]
 2399              	.LBE1030:
 2400              	.LBE1031:
 2401              	.LBE1044:
 2402              	.LBE1056:
1062:Veno-Echo.cpp **** 
 2403              		.loc 20 1062 1 view .LVU610
 2404 0094 10BD     		pop	{r4, pc}
 2405              	.LVL101:
 2406              	.L118:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 134


 2407              		.cfi_restore_state
 2408              	.LBB1057:
 2409              	.LBB1045:
1031:Veno-Echo.cpp **** 
 2410              		.loc 20 1031 9 is_stmt 1 view .LVU611
1033:Veno-Echo.cpp ****         {
 2411              		.loc 20 1033 9 view .LVU612
 2412 0096 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2413 0098 002B     		cmp	r3, #0
 2414 009a 3ED1     		bne	.L128
1035:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2415              		.loc 20 1035 13 view .LVU613
1035:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2416              		.loc 20 1035 23 is_stmt 0 view .LVU614
 2417 009c 0124     		movs	r4, #1
1036:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2418              		.loc 20 1036 29 view .LVU615
 2419 009e 4648     		ldr	r0, .L145+40
1037:Veno-Echo.cpp ****         }
 2420              		.loc 20 1037 26 view .LVU616
 2421 00a0 4649     		ldr	r1, .L145+44
1035:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2422              		.loc 20 1035 23 view .LVU617
 2423 00a2 1470     		strb	r4, [r2]
1036:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2424              		.loc 20 1036 13 is_stmt 1 view .LVU618
1036:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2425              		.loc 20 1036 29 is_stmt 0 view .LVU619
 2426 00a4 0370     		strb	r3, [r0]
1037:Veno-Echo.cpp ****         }
 2427              		.loc 20 1037 13 is_stmt 1 view .LVU620
1037:Veno-Echo.cpp ****         }
 2428              		.loc 20 1037 26 is_stmt 0 view .LVU621
 2429 00a6 81ED000A 		vstr.32	s0, [r1]
 2430              	.L117:
1037:Veno-Echo.cpp ****         }
 2431              		.loc 20 1037 26 view .LVU622
 2432              	.LBE1045:
 2433              	.LBE1057:
1062:Veno-Echo.cpp **** 
 2434              		.loc 20 1062 1 view .LVU623
 2435 00aa BDEC028B 		vldm	sp!, {d8}
 2436              		.cfi_remember_state
 2437              		.cfi_restore 80
 2438              		.cfi_restore 81
 2439              		.cfi_def_cfa_offset 8
 2440 00ae 10BD     		pop	{r4, pc}
 2441              	.L119:
 2442              		.cfi_restore_state
 2443              	.LBB1058:
 2444              	.LBB1052:
1004:Veno-Echo.cpp ****             {
 2445              		.loc 20 1004 13 is_stmt 1 view .LVU624
1004:Veno-Echo.cpp ****             {
 2446              		.loc 20 1004 16 is_stmt 0 view .LVU625
 2447 00b0 3A4B     		ldr	r3, .L145+12
1004:Veno-Echo.cpp ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 135


 2448              		.loc 20 1004 13 view .LVU626
 2449 00b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2450 00b4 7AB9     		cbnz	r2, .L121
1006:Veno-Echo.cpp ****                 {
 2451              		.loc 20 1006 17 is_stmt 1 view .LVU627
 2452              	.LVL102:
 2453              	.LBB1032:
 2454              	.LBI1032:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2455              		.loc 21 75 3 view .LVU628
 2456              	.LBB1033:
 2457              		.loc 21 76 5 view .LVU629
 2458              		.loc 21 76 5 is_stmt 0 view .LVU630
 2459              	.LBE1033:
 2460              	.LBE1032:
1006:Veno-Echo.cpp ****                 {
 2461              		.loc 20 1006 23 view .LVU631
 2462 00b6 3A4A     		ldr	r2, .L145+16
1006:Veno-Echo.cpp ****                 {
 2463              		.loc 20 1006 17 view .LVU632
 2464 00b8 9FED417A 		vldr.32	s14, .L145+48
1006:Veno-Echo.cpp ****                 {
 2465              		.loc 20 1006 23 view .LVU633
 2466 00bc D2ED007A 		vldr.32	s15, [r2]
 2467 00c0 70EE677A 		vsub.f32	s15, s0, s15
 2468              	.LBB1035:
 2469              	.LBB1034:
 2470              		.loc 21 76 31 view .LVU634
 2471 00c4 F0EEE77A 		vabs.f32	s15, s15
 2472              	.LBE1034:
 2473              	.LBE1035:
1006:Veno-Echo.cpp ****                 {
 2474              		.loc 20 1006 17 view .LVU635
 2475 00c8 F4EEC77A 		vcmpe.f32	s15, s14
 2476 00cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2477 00d0 ACDD     		ble	.L120
1008:Veno-Echo.cpp ****                 }
 2478              		.loc 20 1008 21 is_stmt 1 view .LVU636
1008:Veno-Echo.cpp ****                 }
 2479              		.loc 20 1008 38 is_stmt 0 view .LVU637
 2480 00d2 0122     		movs	r2, #1
 2481 00d4 1A70     		strb	r2, [r3]
 2482              	.L121:
1013:Veno-Echo.cpp **** 
 2483              		.loc 20 1013 9 is_stmt 1 view .LVU638
 2484              	.LVL103:
1015:Veno-Echo.cpp ****         {
 2485              		.loc 20 1015 9 view .LVU639
1017:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 2486              		.loc 20 1017 13 view .LVU640
 2487              	.LBB1036:
 2488              	.LBI1036:
1861:Veno-Echo.cpp **** {
 2489              		.loc 20 1861 7 view .LVU641
 2490              	.LBB1037:
1863:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2491              		.loc 20 1863 5 view .LVU642
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 136


1864:Veno-Echo.cpp **** 
 2492              		.loc 20 1864 5 view .LVU643
 2493              	.LBE1037:
 2494              	.LBE1036:
1017:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 2495              		.loc 20 1017 41 is_stmt 0 view .LVU644
 2496 00d6 334B     		ldr	r3, .L145+20
 2497              	.LBB1040:
 2498              	.LBB1038:
1864:Veno-Echo.cpp **** 
 2499              		.loc 20 1864 39 view .LVU645
 2500 00d8 B7EE007A 		vmov.f32	s14, #1.0e+0
1864:Veno-Echo.cpp **** 
 2501              		.loc 20 1864 49 view .LVU646
 2502 00dc B6EE006A 		vmov.f32	s12, #5.0e-1
1864:Veno-Echo.cpp **** 
 2503              		.loc 20 1864 39 view .LVU647
 2504 00e0 D3ED007A 		vldr.32	s15, [r3]
1864:Veno-Echo.cpp **** 
 2505              		.loc 20 1864 12 view .LVU648
 2506 00e4 F0EE006A 		vmov.f32	s13, #2.0e+0
1864:Veno-Echo.cpp **** 
 2507              		.loc 20 1864 39 view .LVU649
 2508 00e8 77EE677A 		vsub.f32	s15, s14, s15
1864:Veno-Echo.cpp **** 
 2509              		.loc 20 1864 49 view .LVU650
 2510 00ec 77EEC67A 		vsub.f32	s15, s15, s12
1864:Veno-Echo.cpp **** 
 2511              		.loc 20 1864 12 view .LVU651
 2512 00f0 B0EE406A 		vmov.f32	s12, s0
 2513 00f4 A7EEA66A 		vfma.f32	s12, s15, s13
1866:Veno-Echo.cpp ****     {
 2514              		.loc 20 1866 5 view .LVU652
 2515 00f8 B5EEC06A 		vcmpe.f32	s12, #0
1864:Veno-Echo.cpp **** 
 2516              		.loc 20 1864 12 view .LVU653
 2517 00fc F0EE467A 		vmov.f32	s15, s12
 2518              	.LVL104:
1866:Veno-Echo.cpp ****     {
 2519              		.loc 20 1866 5 is_stmt 1 view .LVU654
 2520 0100 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2521 0104 40D4     		bmi	.L144
1871:Veno-Echo.cpp ****     {
 2522              		.loc 20 1871 5 view .LVU655
1873:Veno-Echo.cpp ****     }
 2523              		.loc 20 1873 16 is_stmt 0 view .LVU656
 2524 0106 F4EE477A 		vcmp.f32	s15, s14
 2525 010a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2526 010e 77FE277A 		vselgt.f32	s15, s14, s15
 2527              	.L123:
 2528              	.LVL105:
1876:Veno-Echo.cpp **** }
 2529              		.loc 20 1876 5 is_stmt 1 view .LVU657
1876:Veno-Echo.cpp **** }
 2530              		.loc 20 1876 5 is_stmt 0 view .LVU658
 2531              	.LBE1038:
 2532              	.LBE1040:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 137


1018:Veno-Echo.cpp ****         }
 2533              		.loc 20 1018 13 is_stmt 1 view .LVU659
1018:Veno-Echo.cpp ****         }
 2534              		.loc 20 1018 28 is_stmt 0 view .LVU660
 2535 0112 254B     		ldr	r3, .L145+24
 2536 0114 83ED000A 		vstr.32	s0, [r3]
 2537 0118 A6E7     		b	.L125
 2538              	.LVL106:
 2539              	.L128:
1018:Veno-Echo.cpp ****         }
 2540              		.loc 20 1018 28 view .LVU661
 2541              	.LBE1052:
 2542              	.LBB1053:
1042:Veno-Echo.cpp ****             {
 2543              		.loc 20 1042 13 is_stmt 1 view .LVU662
1042:Veno-Echo.cpp ****             {
 2544              		.loc 20 1042 16 is_stmt 0 view .LVU663
 2545 011a 274B     		ldr	r3, .L145+40
1042:Veno-Echo.cpp ****             {
 2546              		.loc 20 1042 13 view .LVU664
 2547 011c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2548 011e 7AB9     		cbnz	r2, .L130
1044:Veno-Echo.cpp ****                 {
 2549              		.loc 20 1044 17 is_stmt 1 view .LVU665
 2550              	.LVL107:
 2551              	.LBB1046:
 2552              	.LBI1046:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2553              		.loc 21 75 3 view .LVU666
 2554              	.LBB1047:
 2555              		.loc 21 76 5 view .LVU667
 2556              		.loc 21 76 5 is_stmt 0 view .LVU668
 2557              	.LBE1047:
 2558              	.LBE1046:
1044:Veno-Echo.cpp ****                 {
 2559              		.loc 20 1044 23 view .LVU669
 2560 0120 264A     		ldr	r2, .L145+44
1044:Veno-Echo.cpp ****                 {
 2561              		.loc 20 1044 17 view .LVU670
 2562 0122 9FED277A 		vldr.32	s14, .L145+48
1044:Veno-Echo.cpp ****                 {
 2563              		.loc 20 1044 23 view .LVU671
 2564 0126 D2ED007A 		vldr.32	s15, [r2]
 2565 012a 70EE677A 		vsub.f32	s15, s0, s15
 2566              	.LBB1049:
 2567              	.LBB1048:
 2568              		.loc 21 76 31 view .LVU672
 2569 012e F0EEE77A 		vabs.f32	s15, s15
 2570              	.LBE1048:
 2571              	.LBE1049:
1044:Veno-Echo.cpp ****                 {
 2572              		.loc 20 1044 17 view .LVU673
 2573 0132 F4EEC77A 		vcmpe.f32	s15, s14
 2574 0136 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2575 013a B6DD     		ble	.L117
1046:Veno-Echo.cpp ****                 }
 2576              		.loc 20 1046 21 is_stmt 1 view .LVU674
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 138


1046:Veno-Echo.cpp ****                 }
 2577              		.loc 20 1046 37 is_stmt 0 view .LVU675
 2578 013c 0122     		movs	r2, #1
 2579 013e 1A70     		strb	r2, [r3]
 2580              	.L130:
1051:Veno-Echo.cpp ****         {
 2581              		.loc 20 1051 9 is_stmt 1 view .LVU676
 2582              	.LBB1050:
 2583              	.LBB1051:
1053:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
 2584              		.loc 20 1053 13 view .LVU677
 2585              	.LVL108:
1054:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2586              		.loc 20 1054 13 view .LVU678
1054:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2587              		.loc 20 1054 29 is_stmt 0 view .LVU679
 2588 0140 9FED201A 		vldr.32	s2, .L145+52
 2589 0144 0120     		movs	r0, #1
 2590 0146 DFED200A 		vldr.32	s1, .L145+56
 2591 014a FFF7FEFF 		bl	_Z5scalefff9CurveType
 2592              	.LVL109:
1054:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2593              		.loc 20 1054 29 view .LVU680
 2594 014e B0EE408A 		vmov.f32	s16, s0
 2595              	.LVL110:
1055:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 2596              		.loc 20 1055 13 is_stmt 1 view .LVU681
1055:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 2597              		.loc 20 1055 26 is_stmt 0 view .LVU682
 2598 0152 1E48     		ldr	r0, .L145+60
 2599 0154 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2600              	.LVL111:
1056:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 2601              		.loc 20 1056 13 is_stmt 1 view .LVU683
1056:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 2602              		.loc 20 1056 26 is_stmt 0 view .LVU684
 2603 0158 1D48     		ldr	r0, .L145+64
 2604 015a B0EE480A 		vmov.f32	s0, s16
 2605 015e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2606              	.LVL112:
1057:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 2607              		.loc 20 1057 13 is_stmt 1 view .LVU685
1057:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 2608              		.loc 20 1057 31 is_stmt 0 view .LVU686
 2609 0162 B0EE480A 		vmov.f32	s0, s16
 2610 0166 1B48     		ldr	r0, .L145+68
 2611 0168 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2612              	.LVL113:
1058:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 2613              		.loc 20 1058 13 is_stmt 1 view .LVU687
1058:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 2614              		.loc 20 1058 31 is_stmt 0 view .LVU688
 2615 016c B0EE480A 		vmov.f32	s0, s16
 2616 0170 1948     		ldr	r0, .L145+72
 2617 0172 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2618              	.LVL114:
1059:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 139


 2619              		.loc 20 1059 13 is_stmt 1 view .LVU689
1059:Veno-Echo.cpp ****         }
 2620              		.loc 20 1059 35 is_stmt 0 view .LVU690
 2621 0176 194B     		ldr	r3, .L145+76
 2622 0178 83ED048A 		vstr.32	s16, [r3, #16]
 2623              	.LBE1051:
 2624              	.LBE1050:
 2625              	.LBE1053:
 2626              	.LBE1058:
1062:Veno-Echo.cpp **** 
 2627              		.loc 20 1062 1 view .LVU691
 2628 017c BDEC028B 		vldm	sp!, {d8}
 2629              		.cfi_remember_state
 2630              		.cfi_restore 80
 2631              		.cfi_restore 81
 2632              		.cfi_def_cfa_offset 8
 2633              	.LVL115:
1062:Veno-Echo.cpp **** 
 2634              		.loc 20 1062 1 view .LVU692
 2635 0180 10BD     		pop	{r4, pc}
 2636              	.LVL116:
 2637              	.L143:
 2638              		.cfi_restore_state
 2639              	.LBB1059:
 2640              	.LBB1054:
 2641              	.LBB1041:
 2642              	.LBB1025:
1868:Veno-Echo.cpp ****     }
 2643              		.loc 20 1868 16 view .LVU693
 2644 0182 DFED0A7A 		vldr.32	s15, .L145+28
 2645              	.LVL117:
1868:Veno-Echo.cpp ****     }
 2646              		.loc 20 1868 16 view .LVU694
 2647 0186 6FE7     		b	.L125
 2648              	.LVL118:
 2649              	.L144:
1868:Veno-Echo.cpp ****     }
 2650              		.loc 20 1868 16 view .LVU695
 2651              	.LBE1025:
 2652              	.LBE1041:
 2653              	.LBB1042:
 2654              	.LBB1039:
 2655 0188 DFED087A 		vldr.32	s15, .L145+28
 2656 018c C1E7     		b	.L123
 2657              	.L146:
 2658 018e 00BF     		.align	2
 2659              	.L145:
 2660 0190 18000000 		.word	.LANCHOR4+24
 2661 0194 00000000 		.word	.LANCHOR7
 2662 0198 00000000 		.word	.LANCHOR27
 2663 019c 00000000 		.word	.LANCHOR28
 2664 01a0 00000000 		.word	.LANCHOR29
 2665 01a4 00000000 		.word	.LANCHOR26
 2666 01a8 00000000 		.word	.LANCHOR30
 2667 01ac 00000000 		.word	0
 2668 01b0 00000000 		.word	.LANCHOR31
 2669 01b4 6F12033D 		.word	1023611503
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 140


 2670 01b8 00000000 		.word	.LANCHOR32
 2671 01bc 00000000 		.word	.LANCHOR33
 2672 01c0 0AD7A33B 		.word	1000593162
 2673 01c4 00004844 		.word	1145569280
 2674 01c8 0000C842 		.word	1120403456
 2675 01cc 00000000 		.word	.LANCHOR34
 2676 01d0 00000000 		.word	.LANCHOR35
 2677 01d4 00000000 		.word	.LANCHOR36
 2678 01d8 00000000 		.word	.LANCHOR37
 2679 01dc 00000000 		.word	.LANCHOR16
 2680              	.LBE1039:
 2681              	.LBE1042:
 2682              	.LBE1054:
 2683              	.LBE1059:
 2684              		.cfi_endproc
 2685              	.LFE4316:
 2687              		.section	.text._Z19Update_feedbackR_CVv,"ax",%progbits
 2688              		.align	1
 2689              		.p2align 2,,3
 2690              		.global	_Z19Update_feedbackR_CVv
 2691              		.syntax unified
 2692              		.thumb
 2693              		.thumb_func
 2694              		.fpu fpv5-d16
 2696              	_Z19Update_feedbackR_CVv:
 2697              	.LFB4317:
1065:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 2698              		.loc 20 1065 1 is_stmt 1 view -0
 2699              		.cfi_startproc
 2700              		@ args = 0, pretend = 0, frame = 0
 2701              		@ frame_needed = 0, uses_anonymous_args = 0
1066:Veno-Echo.cpp **** }
 2702              		.loc 20 1066 5 view .LVU697
1065:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 2703              		.loc 20 1065 1 is_stmt 0 view .LVU698
 2704 0000 08B5     		push	{r3, lr}
 2705              		.cfi_def_cfa_offset 8
 2706              		.cfi_offset 3, -8
 2707              		.cfi_offset 14, -4
1066:Veno-Echo.cpp **** }
 2708              		.loc 20 1066 35 view .LVU699
 2709 0002 0321     		movs	r1, #3
 2710 0004 0348     		ldr	r0, .L149
 2711 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2712              	.LVL119:
1066:Veno-Echo.cpp **** }
 2713              		.loc 20 1066 18 view .LVU700
 2714 000a 034B     		ldr	r3, .L149+4
 2715 000c 83ED000A 		vstr.32	s0, [r3]
1067:Veno-Echo.cpp **** 
 2716              		.loc 20 1067 1 view .LVU701
 2717 0010 08BD     		pop	{r3, pc}
 2718              	.L150:
 2719 0012 00BF     		.align	2
 2720              	.L149:
 2721 0014 18000000 		.word	.LANCHOR4+24
 2722 0018 00000000 		.word	.LANCHOR38
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 141


 2723              		.cfi_endproc
 2724              	.LFE4317:
 2726              		.section	.text._Z16Update_feedbackRv,"ax",%progbits
 2727              		.align	1
 2728              		.p2align 2,,3
 2729              		.global	_Z16Update_feedbackRv
 2730              		.syntax unified
 2731              		.thumb
 2732              		.thumb_func
 2733              		.fpu fpv5-d16
 2735              	_Z16Update_feedbackRv:
 2736              	.LFB4318:
1070:Veno-Echo.cpp ****     static bool lastShift{};
 2737              		.loc 20 1070 1 is_stmt 1 view -0
 2738              		.cfi_startproc
 2739              		@ args = 0, pretend = 0, frame = 0
 2740              		@ frame_needed = 0, uses_anonymous_args = 0
1071:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
 2741              		.loc 20 1071 5 view .LVU703
1072:Veno-Echo.cpp ****     static bool LPCutoff_pickup{};
 2742              		.loc 20 1072 5 view .LVU704
1073:Veno-Echo.cpp **** 
 2743              		.loc 20 1073 5 view .LVU705
1075:Veno-Echo.cpp **** 
 2744              		.loc 20 1075 5 view .LVU706
1078:Veno-Echo.cpp **** 
 2745              		.loc 20 1078 5 view .LVU707
1078:Veno-Echo.cpp **** 
 2746              		.loc 20 1078 43 is_stmt 0 view .LVU708
 2747 0000 0422     		movs	r2, #4
 2748 0002 0721     		movs	r1, #7
 2749 0004 6548     		ldr	r0, .L181
1070:Veno-Echo.cpp ****     static bool lastShift{};
 2750              		.loc 20 1070 1 view .LVU709
 2751 0006 10B5     		push	{r4, lr}
 2752              		.cfi_def_cfa_offset 8
 2753              		.cfi_offset 4, -8
 2754              		.cfi_offset 14, -4
 2755 0008 2DED028B 		vpush.64	{d8}
 2756              		.cfi_def_cfa_offset 16
 2757              		.cfi_offset 80, -16
 2758              		.cfi_offset 81, -12
1078:Veno-Echo.cpp **** 
 2759              		.loc 20 1078 43 view .LVU710
 2760 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2761              	.LVL120:
 2762              	.LBB1060:
1080:Veno-Echo.cpp ****     {   
 2763              		.loc 20 1080 9 view .LVU711
 2764 0010 634B     		ldr	r3, .L181+4
 2765              	.LVL121:
1080:Veno-Echo.cpp ****     {   
 2766              		.loc 20 1080 9 view .LVU712
 2767              	.LBE1060:
1080:Veno-Echo.cpp ****     {   
 2768              		.loc 20 1080 5 is_stmt 1 view .LVU713
 2769              	.LBB1094:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 142


 2770              	.LBB1061:
1084:Veno-Echo.cpp ****         {
 2771              		.loc 20 1084 19 is_stmt 0 view .LVU714
 2772 0012 644A     		ldr	r2, .L181+8
 2773              	.LBE1061:
1080:Veno-Echo.cpp ****     {   
 2774              		.loc 20 1080 5 view .LVU715
 2775 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2776 0016 002B     		cmp	r3, #0
 2777 0018 3FD1     		bne	.L152
 2778              	.LBB1082:
1082:Veno-Echo.cpp ****         //update pickup
 2779              		.loc 20 1082 9 is_stmt 1 view .LVU716
1084:Veno-Echo.cpp ****         {
 2780              		.loc 20 1084 9 view .LVU717
 2781 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2782 001c 0029     		cmp	r1, #0
 2783 001e 49D0     		beq	.L153
1086:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
 2784              		.loc 20 1086 13 view .LVU718
1087:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
 2785              		.loc 20 1087 30 is_stmt 0 view .LVU719
 2786 0020 614C     		ldr	r4, .L181+12
1088:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2787              		.loc 20 1088 28 view .LVU720
 2788 0022 6248     		ldr	r0, .L181+16
1089:Veno-Echo.cpp ****         } 
 2789              		.loc 20 1089 27 view .LVU721
 2790 0024 6249     		ldr	r1, .L181+20
1086:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
 2791              		.loc 20 1086 23 view .LVU722
 2792 0026 1370     		strb	r3, [r2]
1087:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
 2793              		.loc 20 1087 13 is_stmt 1 view .LVU723
1087:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot; //update last value
 2794              		.loc 20 1087 30 is_stmt 0 view .LVU724
 2795 0028 2370     		strb	r3, [r4]
1088:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2796              		.loc 20 1088 13 is_stmt 1 view .LVU725
1088:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2797              		.loc 20 1088 28 is_stmt 0 view .LVU726
 2798 002a 80ED000A 		vstr.32	s0, [r0]
1089:Veno-Echo.cpp ****         } 
 2799              		.loc 20 1089 13 is_stmt 1 view .LVU727
1089:Veno-Echo.cpp ****         } 
 2800              		.loc 20 1089 27 is_stmt 0 view .LVU728
 2801 002e 81ED000A 		vstr.32	s0, [r1]
 2802              	.LVL122:
 2803              	.L154:
1102:Veno-Echo.cpp ****         
 2804              		.loc 20 1102 9 is_stmt 1 view .LVU729
1104:Veno-Echo.cpp ****         {
 2805              		.loc 20 1104 9 view .LVU730
1112:Veno-Echo.cpp ****         }
 2806              		.loc 20 1112 13 view .LVU731
 2807              	.LBB1062:
 2808              	.LBI1062:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 143


1861:Veno-Echo.cpp **** {
 2809              		.loc 20 1861 7 view .LVU732
 2810              	.LBB1063:
1863:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2811              		.loc 20 1863 5 view .LVU733
1864:Veno-Echo.cpp **** 
 2812              		.loc 20 1864 5 view .LVU734
 2813              	.LBE1063:
 2814              	.LBE1062:
1112:Veno-Echo.cpp ****         }
 2815              		.loc 20 1112 41 is_stmt 0 view .LVU735
 2816 0032 604B     		ldr	r3, .L181+24
 2817              	.LBB1066:
 2818              	.LBB1064:
1864:Veno-Echo.cpp **** 
 2819              		.loc 20 1864 39 view .LVU736
 2820 0034 B7EE007A 		vmov.f32	s14, #1.0e+0
1864:Veno-Echo.cpp **** 
 2821              		.loc 20 1864 49 view .LVU737
 2822 0038 B6EE006A 		vmov.f32	s12, #5.0e-1
1864:Veno-Echo.cpp **** 
 2823              		.loc 20 1864 39 view .LVU738
 2824 003c D3ED007A 		vldr.32	s15, [r3]
1864:Veno-Echo.cpp **** 
 2825              		.loc 20 1864 12 view .LVU739
 2826 0040 F0EE006A 		vmov.f32	s13, #2.0e+0
1864:Veno-Echo.cpp **** 
 2827              		.loc 20 1864 39 view .LVU740
 2828 0044 77EE677A 		vsub.f32	s15, s14, s15
1864:Veno-Echo.cpp **** 
 2829              		.loc 20 1864 49 view .LVU741
 2830 0048 77EEC67A 		vsub.f32	s15, s15, s12
1864:Veno-Echo.cpp **** 
 2831              		.loc 20 1864 12 view .LVU742
 2832 004c A7EEA60A 		vfma.f32	s0, s15, s13
1866:Veno-Echo.cpp ****     {
 2833              		.loc 20 1866 5 view .LVU743
 2834 0050 B5EEC00A 		vcmpe.f32	s0, #0
1864:Veno-Echo.cpp **** 
 2835              		.loc 20 1864 12 view .LVU744
 2836 0054 F0EE407A 		vmov.f32	s15, s0
 2837              	.LVL123:
1866:Veno-Echo.cpp ****     {
 2838              		.loc 20 1866 5 is_stmt 1 view .LVU745
 2839 0058 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2840 005c 00F19380 		bmi	.L179
1871:Veno-Echo.cpp ****     {
 2841              		.loc 20 1871 5 view .LVU746
1873:Veno-Echo.cpp ****     }
 2842              		.loc 20 1873 16 is_stmt 0 view .LVU747
 2843 0060 F4EE477A 		vcmp.f32	s15, s14
 2844 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2845 0068 77FE277A 		vselgt.f32	s15, s14, s15
 2846              	.LVL124:
 2847              	.L160:
1873:Veno-Echo.cpp ****     }
 2848              		.loc 20 1873 16 view .LVU748
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 144


 2849              	.LBE1064:
 2850              	.LBE1066:
1115:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2851              		.loc 20 1115 9 is_stmt 1 view .LVU749
1115:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2852              		.loc 20 1115 37 is_stmt 0 view .LVU750
 2853 006c B0EE670A 		vmov.f32	s0, s15
 2854 0070 0020     		movs	r0, #0
 2855 0072 B7EE041A 		vmov.f32	s2, #1.25e+0
 2856 0076 DFED500A 		vldr.32	s1, .L181+28
 2857 007a FFF7FEFF 		bl	_Z5scalefff9CurveType
 2858              	.LVL125:
1116:Veno-Echo.cpp ****     }
 2859              		.loc 20 1116 9 is_stmt 1 view .LVU751
 2860              	.LBB1067:
 2861              	.LBI1067:
 135:../DaisySP/Source/Utility/dsp.h **** {
 2862              		.loc 23 135 13 view .LVU752
 2863              	.LBB1068:
 2864              		.loc 23 137 5 view .LVU753
 2865              		.loc 23 137 9 is_stmt 0 view .LVU754
 2866 007e 4F4B     		ldr	r3, .L181+32
 2867 0080 9FED4F7A 		vldr.32	s14, .L181+36
 2868 0084 D3ED007A 		vldr.32	s15, [r3]
 2869              		.loc 23 137 24 view .LVU755
 2870 0088 30EE670A 		vsub.f32	s0, s0, s15
 2871              	.LVL126:
 2872              		.loc 23 137 24 view .LVU756
 2873              	.LBE1068:
 2874              	.LBE1067:
 2875              	.LBE1082:
 2876              	.LBE1094:
1152:Veno-Echo.cpp **** 
 2877              		.loc 20 1152 1 view .LVU757
 2878 008c BDEC028B 		vldm	sp!, {d8}
 2879              		.cfi_remember_state
 2880              		.cfi_restore 80
 2881              		.cfi_restore 81
 2882              		.cfi_def_cfa_offset 8
 2883              	.LBB1095:
 2884              	.LBB1083:
 2885              	.LBB1070:
 2886              	.LBB1069:
 2887              		.loc 23 137 9 view .LVU758
 2888 0090 E0EE077A 		vfma.f32	s15, s0, s14
 2889 0094 C3ED007A 		vstr.32	s15, [r3]
 2890              	.LBE1069:
 2891              	.LBE1070:
 2892              	.LBE1083:
 2893              	.LBE1095:
1152:Veno-Echo.cpp **** 
 2894              		.loc 20 1152 1 view .LVU759
 2895 0098 10BD     		pop	{r4, pc}
 2896              	.LVL127:
 2897              	.L152:
 2898              		.cfi_restore_state
 2899              	.LBB1096:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 145


 2900              	.LBB1084:
1121:Veno-Echo.cpp **** 
 2901              		.loc 20 1121 9 is_stmt 1 view .LVU760
1123:Veno-Echo.cpp ****         {
 2902              		.loc 20 1123 10 view .LVU761
 2903 009a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2904 009c 002B     		cmp	r3, #0
 2905 009e 3ED1     		bne	.L163
1125:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2906              		.loc 20 1125 13 view .LVU762
1125:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2907              		.loc 20 1125 23 is_stmt 0 view .LVU763
 2908 00a0 0124     		movs	r4, #1
1126:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2909              		.loc 20 1126 29 view .LVU764
 2910 00a2 4848     		ldr	r0, .L181+40
1127:Veno-Echo.cpp ****         }
 2911              		.loc 20 1127 26 view .LVU765
 2912 00a4 4849     		ldr	r1, .L181+44
1125:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2913              		.loc 20 1125 23 view .LVU766
 2914 00a6 1470     		strb	r4, [r2]
1126:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2915              		.loc 20 1126 13 is_stmt 1 view .LVU767
1126:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2916              		.loc 20 1126 29 is_stmt 0 view .LVU768
 2917 00a8 0370     		strb	r3, [r0]
1127:Veno-Echo.cpp ****         }
 2918              		.loc 20 1127 13 is_stmt 1 view .LVU769
1127:Veno-Echo.cpp ****         }
 2919              		.loc 20 1127 26 is_stmt 0 view .LVU770
 2920 00aa 81ED000A 		vstr.32	s0, [r1]
 2921              	.L151:
1127:Veno-Echo.cpp ****         }
 2922              		.loc 20 1127 26 view .LVU771
 2923              	.LBE1084:
 2924              	.LBE1096:
1152:Veno-Echo.cpp **** 
 2925              		.loc 20 1152 1 view .LVU772
 2926 00ae BDEC028B 		vldm	sp!, {d8}
 2927              		.cfi_remember_state
 2928              		.cfi_restore 80
 2929              		.cfi_restore 81
 2930              		.cfi_def_cfa_offset 8
 2931 00b2 10BD     		pop	{r4, pc}
 2932              	.L153:
 2933              		.cfi_restore_state
 2934              	.LBB1097:
 2935              	.LBB1091:
1093:Veno-Echo.cpp ****             {
 2936              		.loc 20 1093 13 is_stmt 1 view .LVU773
1093:Veno-Echo.cpp ****             {
 2937              		.loc 20 1093 16 is_stmt 0 view .LVU774
 2938 00b4 3C4B     		ldr	r3, .L181+12
1093:Veno-Echo.cpp ****             {
 2939              		.loc 20 1093 13 view .LVU775
 2940 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 146


 2941 00b8 7AB9     		cbnz	r2, .L155
1095:Veno-Echo.cpp ****                 {
 2942              		.loc 20 1095 17 is_stmt 1 view .LVU776
 2943              	.LVL128:
 2944              	.LBB1071:
 2945              	.LBI1071:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2946              		.loc 21 75 3 view .LVU777
 2947              	.LBB1072:
 2948              		.loc 21 76 5 view .LVU778
 2949              		.loc 21 76 5 is_stmt 0 view .LVU779
 2950              	.LBE1072:
 2951              	.LBE1071:
1095:Veno-Echo.cpp ****                 {
 2952              		.loc 20 1095 23 view .LVU780
 2953 00ba 3D4A     		ldr	r2, .L181+20
1095:Veno-Echo.cpp ****                 {
 2954              		.loc 20 1095 17 view .LVU781
 2955 00bc 9FED437A 		vldr.32	s14, .L181+48
1095:Veno-Echo.cpp ****                 {
 2956              		.loc 20 1095 23 view .LVU782
 2957 00c0 D2ED007A 		vldr.32	s15, [r2]
 2958 00c4 70EE677A 		vsub.f32	s15, s0, s15
 2959              	.LBB1074:
 2960              	.LBB1073:
 2961              		.loc 21 76 31 view .LVU783
 2962 00c8 F0EEE77A 		vabs.f32	s15, s15
 2963              	.LBE1073:
 2964              	.LBE1074:
1095:Veno-Echo.cpp ****                 {
 2965              		.loc 20 1095 17 view .LVU784
 2966 00cc F4EEC77A 		vcmpe.f32	s15, s14
 2967 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2968 00d4 5DDD     		ble	.L175
1097:Veno-Echo.cpp ****                 }
 2969              		.loc 20 1097 21 is_stmt 1 view .LVU785
1097:Veno-Echo.cpp ****                 }
 2970              		.loc 20 1097 38 is_stmt 0 view .LVU786
 2971 00d6 0122     		movs	r2, #1
 2972 00d8 1A70     		strb	r2, [r3]
 2973              	.L155:
1102:Veno-Echo.cpp ****         
 2974              		.loc 20 1102 9 is_stmt 1 view .LVU787
 2975              	.LVL129:
1104:Veno-Echo.cpp ****         {
 2976              		.loc 20 1104 9 view .LVU788
1106:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
 2977              		.loc 20 1106 13 view .LVU789
 2978              	.LBB1075:
 2979              	.LBI1075:
1861:Veno-Echo.cpp **** {
 2980              		.loc 20 1861 7 view .LVU790
 2981              	.LBB1076:
1863:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2982              		.loc 20 1863 5 view .LVU791
1864:Veno-Echo.cpp **** 
 2983              		.loc 20 1864 5 view .LVU792
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 147


 2984              	.LBE1076:
 2985              	.LBE1075:
1106:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
 2986              		.loc 20 1106 41 is_stmt 0 view .LVU793
 2987 00da 364B     		ldr	r3, .L181+24
 2988              	.LBB1079:
 2989              	.LBB1077:
1864:Veno-Echo.cpp **** 
 2990              		.loc 20 1864 39 view .LVU794
 2991 00dc B7EE007A 		vmov.f32	s14, #1.0e+0
1864:Veno-Echo.cpp **** 
 2992              		.loc 20 1864 49 view .LVU795
 2993 00e0 B6EE006A 		vmov.f32	s12, #5.0e-1
1864:Veno-Echo.cpp **** 
 2994              		.loc 20 1864 39 view .LVU796
 2995 00e4 D3ED007A 		vldr.32	s15, [r3]
1864:Veno-Echo.cpp **** 
 2996              		.loc 20 1864 12 view .LVU797
 2997 00e8 F0EE006A 		vmov.f32	s13, #2.0e+0
1864:Veno-Echo.cpp **** 
 2998              		.loc 20 1864 39 view .LVU798
 2999 00ec 77EE677A 		vsub.f32	s15, s14, s15
1864:Veno-Echo.cpp **** 
 3000              		.loc 20 1864 49 view .LVU799
 3001 00f0 77EEC67A 		vsub.f32	s15, s15, s12
1864:Veno-Echo.cpp **** 
 3002              		.loc 20 1864 12 view .LVU800
 3003 00f4 B0EE406A 		vmov.f32	s12, s0
 3004 00f8 A7EEA66A 		vfma.f32	s12, s15, s13
1866:Veno-Echo.cpp ****     {
 3005              		.loc 20 1866 5 view .LVU801
 3006 00fc B5EEC06A 		vcmpe.f32	s12, #0
1864:Veno-Echo.cpp **** 
 3007              		.loc 20 1864 12 view .LVU802
 3008 0100 F0EE467A 		vmov.f32	s15, s12
 3009              	.LVL130:
1866:Veno-Echo.cpp ****     {
 3010              		.loc 20 1866 5 is_stmt 1 view .LVU803
 3011 0104 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3012 0108 40D4     		bmi	.L180
1871:Veno-Echo.cpp ****     {
 3013              		.loc 20 1871 5 view .LVU804
1873:Veno-Echo.cpp ****     }
 3014              		.loc 20 1873 16 is_stmt 0 view .LVU805
 3015 010a F4EE477A 		vcmp.f32	s15, s14
 3016 010e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3017 0112 77FE277A 		vselgt.f32	s15, s14, s15
 3018              	.L158:
 3019              	.LVL131:
1876:Veno-Echo.cpp **** }
 3020              		.loc 20 1876 5 is_stmt 1 view .LVU806
1876:Veno-Echo.cpp **** }
 3021              		.loc 20 1876 5 is_stmt 0 view .LVU807
 3022              	.LBE1077:
 3023              	.LBE1079:
1107:Veno-Echo.cpp ****         }
 3024              		.loc 20 1107 13 is_stmt 1 view .LVU808
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 148


1107:Veno-Echo.cpp ****         }
 3025              		.loc 20 1107 28 is_stmt 0 view .LVU809
 3026 0116 254B     		ldr	r3, .L181+16
 3027 0118 83ED000A 		vstr.32	s0, [r3]
 3028 011c A6E7     		b	.L160
 3029              	.LVL132:
 3030              	.L163:
1107:Veno-Echo.cpp ****         }
 3031              		.loc 20 1107 28 view .LVU810
 3032              	.LBE1091:
 3033              	.LBB1092:
1132:Veno-Echo.cpp ****             {
 3034              		.loc 20 1132 13 is_stmt 1 view .LVU811
1132:Veno-Echo.cpp ****             {
 3035              		.loc 20 1132 16 is_stmt 0 view .LVU812
 3036 011e 294B     		ldr	r3, .L181+40
1132:Veno-Echo.cpp ****             {
 3037              		.loc 20 1132 13 view .LVU813
 3038 0120 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3039 0122 7AB9     		cbnz	r2, .L165
1134:Veno-Echo.cpp ****                 {
 3040              		.loc 20 1134 17 is_stmt 1 view .LVU814
 3041              	.LVL133:
 3042              	.LBB1085:
 3043              	.LBI1085:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3044              		.loc 21 75 3 view .LVU815
 3045              	.LBB1086:
 3046              		.loc 21 76 5 view .LVU816
 3047              		.loc 21 76 5 is_stmt 0 view .LVU817
 3048              	.LBE1086:
 3049              	.LBE1085:
1134:Veno-Echo.cpp ****                 {
 3050              		.loc 20 1134 23 view .LVU818
 3051 0124 284A     		ldr	r2, .L181+44
1134:Veno-Echo.cpp ****                 {
 3052              		.loc 20 1134 17 view .LVU819
 3053 0126 9FED297A 		vldr.32	s14, .L181+48
1134:Veno-Echo.cpp ****                 {
 3054              		.loc 20 1134 23 view .LVU820
 3055 012a D2ED007A 		vldr.32	s15, [r2]
 3056 012e 70EE677A 		vsub.f32	s15, s0, s15
 3057              	.LBB1088:
 3058              	.LBB1087:
 3059              		.loc 21 76 31 view .LVU821
 3060 0132 F0EEE77A 		vabs.f32	s15, s15
 3061              	.LBE1087:
 3062              	.LBE1088:
1134:Veno-Echo.cpp ****                 {
 3063              		.loc 20 1134 17 view .LVU822
 3064 0136 F4EEC77A 		vcmpe.f32	s15, s14
 3065 013a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3066 013e B6DD     		ble	.L151
1136:Veno-Echo.cpp ****                 }
 3067              		.loc 20 1136 21 is_stmt 1 view .LVU823
1136:Veno-Echo.cpp ****                 }
 3068              		.loc 20 1136 37 is_stmt 0 view .LVU824
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 149


 3069 0140 0122     		movs	r2, #1
 3070 0142 1A70     		strb	r2, [r3]
 3071              	.L165:
1141:Veno-Echo.cpp ****         {
 3072              		.loc 20 1141 9 is_stmt 1 view .LVU825
 3073              	.LBB1089:
 3074              	.LBB1090:
1143:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
 3075              		.loc 20 1143 13 view .LVU826
 3076              	.LVL134:
1144:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3077              		.loc 20 1144 13 view .LVU827
1144:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3078              		.loc 20 1144 29 is_stmt 0 view .LVU828
 3079 0144 9FED221A 		vldr.32	s2, .L181+52
 3080 0148 0120     		movs	r0, #1
 3081 014a DFED220A 		vldr.32	s1, .L181+56
 3082 014e FFF7FEFF 		bl	_Z5scalefff9CurveType
 3083              	.LVL135:
1144:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3084              		.loc 20 1144 29 view .LVU829
 3085 0152 B0EE408A 		vmov.f32	s16, s0
 3086              	.LVL136:
1145:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 3087              		.loc 20 1145 13 is_stmt 1 view .LVU830
1145:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 3088              		.loc 20 1145 26 is_stmt 0 view .LVU831
 3089 0156 2048     		ldr	r0, .L181+60
 3090 0158 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3091              	.LVL137:
1146:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 3092              		.loc 20 1146 13 is_stmt 1 view .LVU832
1146:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 3093              		.loc 20 1146 26 is_stmt 0 view .LVU833
 3094 015c 1F48     		ldr	r0, .L181+64
 3095 015e B0EE480A 		vmov.f32	s0, s16
 3096 0162 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3097              	.LVL138:
1147:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 3098              		.loc 20 1147 13 is_stmt 1 view .LVU834
1147:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 3099              		.loc 20 1147 31 is_stmt 0 view .LVU835
 3100 0166 B0EE480A 		vmov.f32	s0, s16
 3101 016a 1D48     		ldr	r0, .L181+68
 3102 016c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3103              	.LVL139:
1148:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 3104              		.loc 20 1148 13 is_stmt 1 view .LVU836
1148:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 3105              		.loc 20 1148 31 is_stmt 0 view .LVU837
 3106 0170 B0EE480A 		vmov.f32	s0, s16
 3107 0174 1B48     		ldr	r0, .L181+72
 3108 0176 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3109              	.LVL140:
1149:Veno-Echo.cpp ****         }
 3110              		.loc 20 1149 13 is_stmt 1 view .LVU838
1149:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 150


 3111              		.loc 20 1149 35 is_stmt 0 view .LVU839
 3112 017a 1B4B     		ldr	r3, .L181+76
 3113 017c 83ED058A 		vstr.32	s16, [r3, #20]
 3114              	.LBE1090:
 3115              	.LBE1089:
 3116              	.LBE1092:
 3117              	.LBE1097:
1152:Veno-Echo.cpp **** 
 3118              		.loc 20 1152 1 view .LVU840
 3119 0180 BDEC028B 		vldm	sp!, {d8}
 3120              		.cfi_remember_state
 3121              		.cfi_restore 80
 3122              		.cfi_restore 81
 3123              		.cfi_def_cfa_offset 8
 3124              	.LVL141:
1152:Veno-Echo.cpp **** 
 3125              		.loc 20 1152 1 view .LVU841
 3126 0184 10BD     		pop	{r4, pc}
 3127              	.LVL142:
 3128              	.L179:
 3129              		.cfi_restore_state
 3130              	.LBB1098:
 3131              	.LBB1093:
 3132              	.LBB1080:
 3133              	.LBB1065:
1868:Veno-Echo.cpp ****     }
 3134              		.loc 20 1868 16 view .LVU842
 3135 0186 DFED0C7A 		vldr.32	s15, .L181+28
 3136 018a 6FE7     		b	.L160
 3137              	.LVL143:
 3138              	.L180:
1868:Veno-Echo.cpp ****     }
 3139              		.loc 20 1868 16 view .LVU843
 3140              	.LBE1065:
 3141              	.LBE1080:
 3142              	.LBB1081:
 3143              	.LBB1078:
 3144 018c DFED0A7A 		vldr.32	s15, .L181+28
 3145 0190 C1E7     		b	.L158
 3146              	.LVL144:
 3147              	.L175:
1868:Veno-Echo.cpp ****     }
 3148              		.loc 20 1868 16 view .LVU844
 3149 0192 064B     		ldr	r3, .L181+16
 3150 0194 93ED000A 		vldr.32	s0, [r3]
 3151              	.LVL145:
1868:Veno-Echo.cpp ****     }
 3152              		.loc 20 1868 16 view .LVU845
 3153 0198 4BE7     		b	.L154
 3154              	.L182:
 3155 019a 00BF     		.align	2
 3156              	.L181:
 3157 019c 18000000 		.word	.LANCHOR4+24
 3158 01a0 00000000 		.word	.LANCHOR7
 3159 01a4 00000000 		.word	.LANCHOR39
 3160 01a8 00000000 		.word	.LANCHOR40
 3161 01ac 00000000 		.word	.LANCHOR41
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 151


 3162 01b0 00000000 		.word	.LANCHOR42
 3163 01b4 00000000 		.word	.LANCHOR38
 3164 01b8 00000000 		.word	0
 3165 01bc 00000000 		.word	.LANCHOR43
 3166 01c0 6F12033D 		.word	1023611503
 3167 01c4 00000000 		.word	.LANCHOR44
 3168 01c8 00000000 		.word	.LANCHOR45
 3169 01cc 0AD7A33B 		.word	1000593162
 3170 01d0 00803B46 		.word	1178304512
 3171 01d4 0080BB44 		.word	1153138688
 3172 01d8 00000000 		.word	.LANCHOR46
 3173 01dc 00000000 		.word	.LANCHOR47
 3174 01e0 00000000 		.word	.LANCHOR48
 3175 01e4 00000000 		.word	.LANCHOR49
 3176 01e8 00000000 		.word	.LANCHOR16
 3177              	.LBE1078:
 3178              	.LBE1081:
 3179              	.LBE1093:
 3180              	.LBE1098:
 3181              		.cfi_endproc
 3182              	.LFE4318:
 3184              		.section	.text._Z16Update_drywet_CVv,"ax",%progbits
 3185              		.align	1
 3186              		.p2align 2,,3
 3187              		.global	_Z16Update_drywet_CVv
 3188              		.syntax unified
 3189              		.thumb
 3190              		.thumb_func
 3191              		.fpu fpv5-d16
 3193              	_Z16Update_drywet_CVv:
 3194              	.LFB4319:
1155:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 3195              		.loc 20 1155 1 is_stmt 1 view -0
 3196              		.cfi_startproc
 3197              		@ args = 0, pretend = 0, frame = 0
 3198              		@ frame_needed = 0, uses_anonymous_args = 0
1156:Veno-Echo.cpp **** }
 3199              		.loc 20 1156 5 view .LVU847
1155:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 3200              		.loc 20 1155 1 is_stmt 0 view .LVU848
 3201 0000 08B5     		push	{r3, lr}
 3202              		.cfi_def_cfa_offset 8
 3203              		.cfi_offset 3, -8
 3204              		.cfi_offset 14, -4
1156:Veno-Echo.cpp **** }
 3205              		.loc 20 1156 32 view .LVU849
 3206 0002 0421     		movs	r1, #4
 3207 0004 0348     		ldr	r0, .L185
 3208 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3209              	.LVL146:
1156:Veno-Echo.cpp **** }
 3210              		.loc 20 1156 15 view .LVU850
 3211 000a 034B     		ldr	r3, .L185+4
 3212 000c 83ED000A 		vstr.32	s0, [r3]
1157:Veno-Echo.cpp **** 
 3213              		.loc 20 1157 1 view .LVU851
 3214 0010 08BD     		pop	{r3, pc}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 152


 3215              	.L186:
 3216 0012 00BF     		.align	2
 3217              	.L185:
 3218 0014 18000000 		.word	.LANCHOR4+24
 3219 0018 00000000 		.word	.LANCHOR50
 3220              		.cfi_endproc
 3221              	.LFE4319:
 3223              		.section	.text._Z13Update_drywetv,"ax",%progbits
 3224              		.align	1
 3225              		.p2align 2,,3
 3226              		.global	_Z13Update_drywetv
 3227              		.syntax unified
 3228              		.thumb
 3229              		.thumb_func
 3230              		.fpu fpv5-d16
 3232              	_Z13Update_drywetv:
 3233              	.LFB4320:
1160:Veno-Echo.cpp ****     static bool lastShift{};
 3234              		.loc 20 1160 1 is_stmt 1 view -0
 3235              		.cfi_startproc
 3236              		@ args = 0, pretend = 0, frame = 0
 3237              		@ frame_needed = 0, uses_anonymous_args = 0
1161:Veno-Echo.cpp ****     static bool drywet_pickup{};
 3238              		.loc 20 1161 5 view .LVU853
1162:Veno-Echo.cpp ****     static bool Res_pickup{};
 3239              		.loc 20 1162 5 view .LVU854
1163:Veno-Echo.cpp **** 
 3240              		.loc 20 1163 5 view .LVU855
1165:Veno-Echo.cpp ****     //static float Res_Last{}; //last res value (unscaled)
 3241              		.loc 20 1165 5 view .LVU856
1170:Veno-Echo.cpp **** 
 3242              		.loc 20 1170 5 view .LVU857
1170:Veno-Echo.cpp **** 
 3243              		.loc 20 1170 40 is_stmt 0 view .LVU858
 3244 0000 0522     		movs	r2, #5
 3245 0002 0721     		movs	r1, #7
 3246 0004 8048     		ldr	r0, .L220+24
1160:Veno-Echo.cpp ****     static bool lastShift{};
 3247              		.loc 20 1160 1 view .LVU859
 3248 0006 10B5     		push	{r4, lr}
 3249              		.cfi_def_cfa_offset 8
 3250              		.cfi_offset 4, -8
 3251              		.cfi_offset 14, -4
 3252 0008 2DED028B 		vpush.64	{d8}
 3253              		.cfi_def_cfa_offset 16
 3254              		.cfi_offset 80, -16
 3255              		.cfi_offset 81, -12
1170:Veno-Echo.cpp **** 
 3256              		.loc 20 1170 40 view .LVU860
 3257 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3258              	.LVL147:
 3259              	.LBB1099:
1172:Veno-Echo.cpp ****     {   
 3260              		.loc 20 1172 9 view .LVU861
 3261 0010 7E4B     		ldr	r3, .L220+28
 3262              	.LVL148:
1172:Veno-Echo.cpp ****     {   
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 153


 3263              		.loc 20 1172 9 view .LVU862
 3264              	.LBE1099:
1172:Veno-Echo.cpp ****     {   
 3265              		.loc 20 1172 5 is_stmt 1 view .LVU863
 3266              	.LBB1133:
 3267              	.LBB1100:
1177:Veno-Echo.cpp ****         {
 3268              		.loc 20 1177 19 is_stmt 0 view .LVU864
 3269 0012 7F4A     		ldr	r2, .L220+32
 3270              	.LBE1100:
1172:Veno-Echo.cpp ****     {   
 3271              		.loc 20 1172 5 view .LVU865
 3272 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3273 0016 B3BB     		cbnz	r3, .L188
 3274              	.LBB1121:
1175:Veno-Echo.cpp **** 
 3275              		.loc 20 1175 9 is_stmt 1 view .LVU866
1177:Veno-Echo.cpp ****         {
 3276              		.loc 20 1177 9 view .LVU867
 3277 0018 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3278 001a 0029     		cmp	r1, #0
 3279 001c 40D0     		beq	.L189
1179:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 3280              		.loc 20 1179 13 view .LVU868
1181:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3281              		.loc 20 1181 27 is_stmt 0 view .LVU869
 3282 001e 7D48     		ldr	r0, .L220+36
1182:Veno-Echo.cpp ****         } 
 3283              		.loc 20 1182 24 view .LVU870
 3284 0020 7D49     		ldr	r1, .L220+40
1179:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 3285              		.loc 20 1179 23 view .LVU871
 3286 0022 1370     		strb	r3, [r2]
1181:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3287              		.loc 20 1181 13 is_stmt 1 view .LVU872
1181:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3288              		.loc 20 1181 27 is_stmt 0 view .LVU873
 3289 0024 0370     		strb	r3, [r0]
1182:Veno-Echo.cpp ****         } 
 3290              		.loc 20 1182 13 is_stmt 1 view .LVU874
1182:Veno-Echo.cpp ****         } 
 3291              		.loc 20 1182 24 is_stmt 0 view .LVU875
 3292 0026 81ED000A 		vstr.32	s0, [r1]
 3293              	.L190:
1198:Veno-Echo.cpp **** 
 3294              		.loc 20 1198 9 is_stmt 1 view .LVU876
 3295              	.LVL149:
1200:Veno-Echo.cpp ****         {
 3296              		.loc 20 1200 9 view .LVU877
1208:Veno-Echo.cpp ****         }
 3297              		.loc 20 1208 13 view .LVU878
 3298              	.LBB1101:
 3299              	.LBI1101:
1861:Veno-Echo.cpp **** {
 3300              		.loc 20 1861 7 view .LVU879
 3301              	.LBB1102:
1863:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 154


 3302              		.loc 20 1863 5 view .LVU880
1864:Veno-Echo.cpp **** 
 3303              		.loc 20 1864 5 view .LVU881
 3304              	.LBE1102:
 3305              	.LBE1101:
1208:Veno-Echo.cpp ****         }
 3306              		.loc 20 1208 37 is_stmt 0 view .LVU882
 3307 002a 7C4A     		ldr	r2, .L220+44
 3308              	.LBB1105:
 3309              	.LBB1103:
1864:Veno-Echo.cpp **** 
 3310              		.loc 20 1864 39 view .LVU883
 3311 002c F7EE006A 		vmov.f32	s13, #1.0e+0
1864:Veno-Echo.cpp **** 
 3312              		.loc 20 1864 49 view .LVU884
 3313 0030 F6EE005A 		vmov.f32	s11, #5.0e-1
 3314              	.LBE1103:
 3315              	.LBE1105:
1208:Veno-Echo.cpp ****         }
 3316              		.loc 20 1208 37 view .LVU885
 3317 0034 7A4B     		ldr	r3, .L220+48
 3318              	.LBB1106:
 3319              	.LBB1104:
1864:Veno-Echo.cpp **** 
 3320              		.loc 20 1864 39 view .LVU886
 3321 0036 92ED007A 		vldr.32	s14, [r2]
1864:Veno-Echo.cpp **** 
 3322              		.loc 20 1864 12 view .LVU887
 3323 003a B0EE006A 		vmov.f32	s12, #2.0e+0
 3324 003e D3ED007A 		vldr.32	s15, [r3]
1864:Veno-Echo.cpp **** 
 3325              		.loc 20 1864 39 view .LVU888
 3326 0042 36EEC77A 		vsub.f32	s14, s13, s14
1864:Veno-Echo.cpp **** 
 3327              		.loc 20 1864 49 view .LVU889
 3328 0046 37EE657A 		vsub.f32	s14, s14, s11
1864:Veno-Echo.cpp **** 
 3329              		.loc 20 1864 12 view .LVU890
 3330 004a E7EE067A 		vfma.f32	s15, s14, s12
 3331              	.LVL150:
1866:Veno-Echo.cpp ****     {
 3332              		.loc 20 1866 5 is_stmt 1 view .LVU891
 3333 004e F5EEC07A 		vcmpe.f32	s15, #0
 3334 0052 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3335 0056 00F1BA80 		bmi	.L207
1871:Veno-Echo.cpp ****     {
 3336              		.loc 20 1871 5 view .LVU892
 3337 005a F4EEE67A 		vcmpe.f32	s15, s13
 3338 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3339 0062 40F3BF80 		ble	.L213
 3340              	.LVL151:
 3341              	.L198:
1871:Veno-Echo.cpp ****     {
 3342              		.loc 20 1871 5 is_stmt 0 view .LVU893
 3343              	.LBE1104:
 3344              	.LBE1106:
1215:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 155


 3345              		.loc 20 1215 26 view .LVU894
 3346 0066 B7EE000A 		vmov.f32	s0, #1.0e+0
 3347              	.LVL152:
 3348              	.L197:
1227:Veno-Echo.cpp ****     }
 3349              		.loc 20 1227 9 is_stmt 1 view .LVU895
 3350              	.LBB1107:
 3351              	.LBI1107:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3352              		.loc 23 135 13 view .LVU896
 3353              	.LBB1108:
 3354              		.loc 23 137 5 view .LVU897
 3355              		.loc 23 137 9 is_stmt 0 view .LVU898
 3356 006a 6E4B     		ldr	r3, .L220+52
 3357 006c 9FED6E7A 		vldr.32	s14, .L220+56
 3358 0070 D3ED007A 		vldr.32	s15, [r3]
 3359              		.loc 23 137 24 view .LVU899
 3360 0074 30EE670A 		vsub.f32	s0, s0, s15
 3361              	.LVL153:
 3362              		.loc 23 137 24 view .LVU900
 3363              	.LBE1108:
 3364              	.LBE1107:
 3365              	.LBE1121:
 3366              	.LBE1133:
1266:Veno-Echo.cpp **** 
 3367              		.loc 20 1266 1 view .LVU901
 3368 0078 BDEC028B 		vldm	sp!, {d8}
 3369              		.cfi_remember_state
 3370              		.cfi_restore 80
 3371              		.cfi_restore 81
 3372              		.cfi_def_cfa_offset 8
 3373              	.LBB1134:
 3374              	.LBB1122:
 3375              	.LBB1110:
 3376              	.LBB1109:
 3377              		.loc 23 137 9 view .LVU902
 3378 007c E0EE077A 		vfma.f32	s15, s0, s14
 3379 0080 C3ED007A 		vstr.32	s15, [r3]
 3380              	.LBE1109:
 3381              	.LBE1110:
 3382              	.LBE1122:
 3383              	.LBE1134:
1266:Veno-Echo.cpp **** 
 3384              		.loc 20 1266 1 view .LVU903
 3385 0084 10BD     		pop	{r4, pc}
 3386              	.LVL154:
 3387              	.L188:
 3388              		.cfi_restore_state
 3389              	.LBB1135:
 3390              	.LBB1123:
1231:Veno-Echo.cpp **** 
 3391              		.loc 20 1231 9 is_stmt 1 view .LVU904
1233:Veno-Echo.cpp ****         {
 3392              		.loc 20 1233 9 view .LVU905
 3393 0086 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3394 0088 002B     		cmp	r3, #0
 3395 008a 58D1     		bne	.L202
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 156


1235:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3396              		.loc 20 1235 13 view .LVU906
1235:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3397              		.loc 20 1235 23 is_stmt 0 view .LVU907
 3398 008c 0124     		movs	r4, #1
1236:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3399              		.loc 20 1236 24 view .LVU908
 3400 008e 6748     		ldr	r0, .L220+60
1237:Veno-Echo.cpp ****         }
 3401              		.loc 20 1237 21 view .LVU909
 3402 0090 6749     		ldr	r1, .L220+64
1235:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3403              		.loc 20 1235 23 view .LVU910
 3404 0092 1470     		strb	r4, [r2]
1236:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3405              		.loc 20 1236 13 is_stmt 1 view .LVU911
1236:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3406              		.loc 20 1236 24 is_stmt 0 view .LVU912
 3407 0094 0370     		strb	r3, [r0]
1237:Veno-Echo.cpp ****         }
 3408              		.loc 20 1237 13 is_stmt 1 view .LVU913
1237:Veno-Echo.cpp ****         }
 3409              		.loc 20 1237 21 is_stmt 0 view .LVU914
 3410 0096 81ED000A 		vstr.32	s0, [r1]
 3411              	.L187:
1237:Veno-Echo.cpp ****         }
 3412              		.loc 20 1237 21 view .LVU915
 3413              	.LBE1123:
 3414              	.LBE1135:
1266:Veno-Echo.cpp **** 
 3415              		.loc 20 1266 1 view .LVU916
 3416 009a BDEC028B 		vldm	sp!, {d8}
 3417              		.cfi_remember_state
 3418              		.cfi_restore 80
 3419              		.cfi_restore 81
 3420              		.cfi_def_cfa_offset 8
 3421 009e 10BD     		pop	{r4, pc}
 3422              	.L189:
 3423              		.cfi_restore_state
 3424              	.LBB1136:
 3425              	.LBB1130:
1187:Veno-Echo.cpp ****             {
 3426              		.loc 20 1187 13 is_stmt 1 view .LVU917
1187:Veno-Echo.cpp ****             {
 3427              		.loc 20 1187 16 is_stmt 0 view .LVU918
 3428 00a0 5C4B     		ldr	r3, .L220+36
1187:Veno-Echo.cpp ****             {
 3429              		.loc 20 1187 13 view .LVU919
 3430 00a2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3431 00a4 7AB9     		cbnz	r2, .L191
1190:Veno-Echo.cpp ****                 {
 3432              		.loc 20 1190 17 is_stmt 1 view .LVU920
 3433              	.LVL155:
 3434              	.LBB1111:
 3435              	.LBI1111:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3436              		.loc 21 75 3 view .LVU921
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 157


 3437              	.LBB1112:
 3438              		.loc 21 76 5 view .LVU922
 3439              		.loc 21 76 5 is_stmt 0 view .LVU923
 3440              	.LBE1112:
 3441              	.LBE1111:
1190:Veno-Echo.cpp ****                 {
 3442              		.loc 20 1190 23 view .LVU924
 3443 00a6 5C4A     		ldr	r2, .L220+40
1190:Veno-Echo.cpp ****                 {
 3444              		.loc 20 1190 17 view .LVU925
 3445 00a8 9FED627A 		vldr.32	s14, .L220+68
1190:Veno-Echo.cpp ****                 {
 3446              		.loc 20 1190 23 view .LVU926
 3447 00ac D2ED007A 		vldr.32	s15, [r2]
 3448 00b0 70EE677A 		vsub.f32	s15, s0, s15
 3449              	.LBB1114:
 3450              	.LBB1113:
 3451              		.loc 21 76 31 view .LVU927
 3452 00b4 F0EEE77A 		vabs.f32	s15, s15
 3453              	.LBE1113:
 3454              	.LBE1114:
1190:Veno-Echo.cpp ****                 {
 3455              		.loc 20 1190 17 view .LVU928
 3456 00b8 F4EEC77A 		vcmpe.f32	s15, s14
 3457 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3458 00c0 B3DD     		ble	.L190
1192:Veno-Echo.cpp ****                 }
 3459              		.loc 20 1192 21 is_stmt 1 view .LVU929
1192:Veno-Echo.cpp ****                 }
 3460              		.loc 20 1192 35 is_stmt 0 view .LVU930
 3461 00c2 0122     		movs	r2, #1
 3462 00c4 1A70     		strb	r2, [r3]
 3463              	.L191:
1198:Veno-Echo.cpp **** 
 3464              		.loc 20 1198 9 is_stmt 1 view .LVU931
 3465              	.LVL156:
1200:Veno-Echo.cpp ****         {
 3466              		.loc 20 1200 9 view .LVU932
1202:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 3467              		.loc 20 1202 13 view .LVU933
 3468              	.LBB1115:
 3469              	.LBI1115:
1861:Veno-Echo.cpp **** {
 3470              		.loc 20 1861 7 view .LVU934
 3471              	.LBB1116:
1863:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3472              		.loc 20 1863 5 view .LVU935
1864:Veno-Echo.cpp **** 
 3473              		.loc 20 1864 5 view .LVU936
 3474              	.LBE1116:
 3475              	.LBE1115:
1202:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 3476              		.loc 20 1202 37 is_stmt 0 view .LVU937
 3477 00c6 554B     		ldr	r3, .L220+44
 3478              	.LBB1119:
 3479              	.LBB1117:
1864:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 158


 3480              		.loc 20 1864 39 view .LVU938
 3481 00c8 B7EE007A 		vmov.f32	s14, #1.0e+0
1864:Veno-Echo.cpp **** 
 3482              		.loc 20 1864 49 view .LVU939
 3483 00cc B6EE006A 		vmov.f32	s12, #5.0e-1
1864:Veno-Echo.cpp **** 
 3484              		.loc 20 1864 39 view .LVU940
 3485 00d0 D3ED007A 		vldr.32	s15, [r3]
1864:Veno-Echo.cpp **** 
 3486              		.loc 20 1864 12 view .LVU941
 3487 00d4 F0EE006A 		vmov.f32	s13, #2.0e+0
1864:Veno-Echo.cpp **** 
 3488              		.loc 20 1864 39 view .LVU942
 3489 00d8 77EE677A 		vsub.f32	s15, s14, s15
1864:Veno-Echo.cpp **** 
 3490              		.loc 20 1864 49 view .LVU943
 3491 00dc 77EEC67A 		vsub.f32	s15, s15, s12
1864:Veno-Echo.cpp **** 
 3492              		.loc 20 1864 12 view .LVU944
 3493 00e0 B0EE406A 		vmov.f32	s12, s0
 3494 00e4 A7EEA66A 		vfma.f32	s12, s15, s13
1866:Veno-Echo.cpp ****     {
 3495              		.loc 20 1866 5 view .LVU945
 3496 00e8 B5EEC06A 		vcmpe.f32	s12, #0
1864:Veno-Echo.cpp **** 
 3497              		.loc 20 1864 12 view .LVU946
 3498 00ec F0EE467A 		vmov.f32	s15, s12
 3499              	.LVL157:
1866:Veno-Echo.cpp ****     {
 3500              		.loc 20 1866 5 is_stmt 1 view .LVU947
 3501 00f0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3502 00f4 6ED4     		bmi	.L218
1871:Veno-Echo.cpp ****     {
 3503              		.loc 20 1871 5 view .LVU948
 3504 00f6 F4EEC77A 		vcmpe.f32	s15, s14
 3505 00fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3506 00fe 6EDD     		ble	.L219
1873:Veno-Echo.cpp ****     }
 3507              		.loc 20 1873 16 is_stmt 0 view .LVU949
 3508 0100 F0EE477A 		vmov.f32	s15, s14
 3509 0104 B7EE006B 		vmov.f64	d6, #1.0e+0
 3510              	.LVL158:
 3511              	.L193:
1876:Veno-Echo.cpp **** }
 3512              		.loc 20 1876 5 is_stmt 1 view .LVU950
1876:Veno-Echo.cpp **** }
 3513              		.loc 20 1876 5 is_stmt 0 view .LVU951
 3514              	.LBE1117:
 3515              	.LBE1119:
1203:Veno-Echo.cpp ****         }
 3516              		.loc 20 1203 13 is_stmt 1 view .LVU952
1203:Veno-Echo.cpp ****         }
 3517              		.loc 20 1203 25 is_stmt 0 view .LVU953
 3518 0108 454B     		ldr	r3, .L220+48
 3519 010a 83ED000A 		vstr.32	s0, [r3]
 3520              	.LVL159:
 3521              	.L194:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 159


1211:Veno-Echo.cpp **** 
 3522              		.loc 20 1211 9 is_stmt 1 view .LVU954
1213:Veno-Echo.cpp ****         {
 3523              		.loc 20 1213 9 view .LVU955
 3524 010e 9FED385B 		vldr.64	d5, .L220
 3525 0112 B4EEC56B 		vcmpe.f64	d6, d5
 3526 0116 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3527 011a A4DA     		bge	.L198
1217:Veno-Echo.cpp ****         {
 3528              		.loc 20 1217 14 view .LVU956
 3529 011c 9FED365B 		vldr.64	d5, .L220+8
 3530 0120 B4EEC56B 		vcmpe.f64	d6, d5
 3531 0124 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3532 0128 51D9     		bls	.L207
1223:Veno-Echo.cpp ****         }
 3533              		.loc 20 1223 13 view .LVU957
1223:Veno-Echo.cpp ****         }
 3534              		.loc 20 1223 33 is_stmt 0 view .LVU958
 3535 012a B0EE670A 		vmov.f32	s0, s15
 3536              	.LVL160:
1223:Veno-Echo.cpp ****         }
 3537              		.loc 20 1223 33 view .LVU959
 3538 012e 0020     		movs	r0, #0
 3539 0130 B7EE001A 		vmov.f32	s2, #1.0e+0
 3540 0134 DFED400A 		vldr.32	s1, .L220+72
 3541 0138 FFF7FEFF 		bl	_Z5scalefff9CurveType
 3542              	.LVL161:
1223:Veno-Echo.cpp ****         }
 3543              		.loc 20 1223 33 view .LVU960
 3544 013c 95E7     		b	.L197
 3545              	.LVL162:
 3546              	.L202:
1223:Veno-Echo.cpp ****         }
 3547              		.loc 20 1223 33 view .LVU961
 3548              	.LBE1130:
 3549              	.LBB1131:
1242:Veno-Echo.cpp ****             {
 3550              		.loc 20 1242 13 is_stmt 1 view .LVU962
1242:Veno-Echo.cpp ****             {
 3551              		.loc 20 1242 16 is_stmt 0 view .LVU963
 3552 013e 3B4B     		ldr	r3, .L220+60
1242:Veno-Echo.cpp ****             {
 3553              		.loc 20 1242 13 view .LVU964
 3554 0140 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3555 0142 7AB9     		cbnz	r2, .L204
1244:Veno-Echo.cpp ****                 {
 3556              		.loc 20 1244 17 is_stmt 1 view .LVU965
 3557              	.LVL163:
 3558              	.LBB1124:
 3559              	.LBI1124:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3560              		.loc 21 75 3 view .LVU966
 3561              	.LBB1125:
 3562              		.loc 21 76 5 view .LVU967
 3563              		.loc 21 76 5 is_stmt 0 view .LVU968
 3564              	.LBE1125:
 3565              	.LBE1124:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 160


1244:Veno-Echo.cpp ****                 {
 3566              		.loc 20 1244 23 view .LVU969
 3567 0144 3A4A     		ldr	r2, .L220+64
1244:Veno-Echo.cpp ****                 {
 3568              		.loc 20 1244 17 view .LVU970
 3569 0146 9FED3B7A 		vldr.32	s14, .L220+68
1244:Veno-Echo.cpp ****                 {
 3570              		.loc 20 1244 23 view .LVU971
 3571 014a D2ED007A 		vldr.32	s15, [r2]
 3572 014e 70EE677A 		vsub.f32	s15, s0, s15
 3573              	.LBB1127:
 3574              	.LBB1126:
 3575              		.loc 21 76 31 view .LVU972
 3576 0152 F0EEE77A 		vabs.f32	s15, s15
 3577              	.LBE1126:
 3578              	.LBE1127:
1244:Veno-Echo.cpp ****                 {
 3579              		.loc 20 1244 17 view .LVU973
 3580 0156 F4EEC77A 		vcmpe.f32	s15, s14
 3581 015a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3582 015e 9CDD     		ble	.L187
1246:Veno-Echo.cpp ****                 }
 3583              		.loc 20 1246 21 is_stmt 1 view .LVU974
1246:Veno-Echo.cpp ****                 }
 3584              		.loc 20 1246 32 is_stmt 0 view .LVU975
 3585 0160 0122     		movs	r2, #1
 3586 0162 1A70     		strb	r2, [r3]
 3587              	.L204:
1251:Veno-Echo.cpp ****         {
 3588              		.loc 20 1251 9 is_stmt 1 view .LVU976
 3589              	.LBB1128:
 3590              	.LBB1129:
1253:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
 3591              		.loc 20 1253 13 view .LVU977
 3592              	.LVL164:
1254:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3593              		.loc 20 1254 13 view .LVU978
1254:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3594              		.loc 20 1254 24 is_stmt 0 view .LVU979
 3595 0164 B6EE001A 		vmov.f32	s2, #5.0e-1
 3596 0168 DFED330A 		vldr.32	s1, .L220+72
 3597 016c 0020     		movs	r0, #0
 3598 016e FFF7FEFF 		bl	_Z5scalefff9CurveType
 3599              	.LVL165:
1254:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3600              		.loc 20 1254 24 view .LVU980
 3601 0172 B0EE408A 		vmov.f32	s16, s0
 3602              	.LVL166:
1255:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 3603              		.loc 20 1255 13 is_stmt 1 view .LVU981
1255:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 3604              		.loc 20 1255 25 is_stmt 0 view .LVU982
 3605 0176 3148     		ldr	r0, .L220+76
 3606 0178 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3607              	.LVL167:
1256:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 3608              		.loc 20 1256 13 is_stmt 1 view .LVU983
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 161


1256:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 3609              		.loc 20 1256 25 is_stmt 0 view .LVU984
 3610 017c 3048     		ldr	r0, .L220+80
 3611 017e B0EE480A 		vmov.f32	s0, s16
 3612 0182 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3613              	.LVL168:
1257:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 3614              		.loc 20 1257 13 is_stmt 1 view .LVU985
1257:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 3615              		.loc 20 1257 25 is_stmt 0 view .LVU986
 3616 0186 B0EE480A 		vmov.f32	s0, s16
 3617 018a 2E48     		ldr	r0, .L220+84
 3618 018c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3619              	.LVL169:
1258:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 3620              		.loc 20 1258 13 is_stmt 1 view .LVU987
1258:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 3621              		.loc 20 1258 25 is_stmt 0 view .LVU988
 3622 0190 B0EE480A 		vmov.f32	s0, s16
 3623 0194 2C48     		ldr	r0, .L220+88
 3624 0196 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3625              	.LVL170:
1259:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 3626              		.loc 20 1259 13 is_stmt 1 view .LVU989
1259:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 3627              		.loc 20 1259 30 is_stmt 0 view .LVU990
 3628 019a B0EE480A 		vmov.f32	s0, s16
 3629 019e 2B48     		ldr	r0, .L220+92
 3630 01a0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3631              	.LVL171:
1260:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 3632              		.loc 20 1260 13 is_stmt 1 view .LVU991
1260:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 3633              		.loc 20 1260 30 is_stmt 0 view .LVU992
 3634 01a4 B0EE480A 		vmov.f32	s0, s16
 3635 01a8 2948     		ldr	r0, .L220+96
 3636 01aa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3637              	.LVL172:
1261:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 3638              		.loc 20 1261 13 is_stmt 1 view .LVU993
1261:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 3639              		.loc 20 1261 30 is_stmt 0 view .LVU994
 3640 01ae B0EE480A 		vmov.f32	s0, s16
 3641 01b2 2848     		ldr	r0, .L220+100
 3642 01b4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3643              	.LVL173:
1262:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 3644              		.loc 20 1262 13 is_stmt 1 view .LVU995
1262:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 3645              		.loc 20 1262 30 is_stmt 0 view .LVU996
 3646 01b8 B0EE480A 		vmov.f32	s0, s16
 3647 01bc 2648     		ldr	r0, .L220+104
 3648 01be FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3649              	.LVL174:
1263:Veno-Echo.cpp ****         }
 3650              		.loc 20 1263 13 is_stmt 1 view .LVU997
1263:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 162


 3651              		.loc 20 1263 35 is_stmt 0 view .LVU998
 3652 01c2 264B     		ldr	r3, .L220+108
 3653 01c4 83ED068A 		vstr.32	s16, [r3, #24]
 3654              	.LBE1129:
 3655              	.LBE1128:
 3656              	.LBE1131:
 3657              	.LBE1136:
1266:Veno-Echo.cpp **** 
 3658              		.loc 20 1266 1 view .LVU999
 3659 01c8 BDEC028B 		vldm	sp!, {d8}
 3660              		.cfi_remember_state
 3661              		.cfi_restore 80
 3662              		.cfi_restore 81
 3663              		.cfi_def_cfa_offset 8
 3664              	.LVL175:
1266:Veno-Echo.cpp **** 
 3665              		.loc 20 1266 1 view .LVU1000
 3666 01cc 10BD     		pop	{r4, pc}
 3667              	.LVL176:
 3668              	.L207:
 3669              		.cfi_restore_state
 3670              	.LBB1137:
 3671              	.LBB1132:
1219:Veno-Echo.cpp ****         }
 3672              		.loc 20 1219 26 view .LVU1001
 3673 01ce 9FED1A0A 		vldr.32	s0, .L220+72
 3674              	.LVL177:
1219:Veno-Echo.cpp ****         }
 3675              		.loc 20 1219 26 view .LVU1002
 3676 01d2 4AE7     		b	.L197
 3677              	.LVL178:
 3678              	.L218:
 3679              	.LBB1120:
 3680              	.LBB1118:
1219:Veno-Echo.cpp ****         }
 3681              		.loc 20 1219 26 view .LVU1003
 3682 01d4 9FED0A6B 		vldr.64	d6, .L220+16
 3683              	.LVL179:
1868:Veno-Echo.cpp ****     }
 3684              		.loc 20 1868 16 view .LVU1004
 3685 01d8 DFED177A 		vldr.32	s15, .L220+72
 3686              	.LVL180:
1868:Veno-Echo.cpp ****     }
 3687              		.loc 20 1868 16 view .LVU1005
 3688 01dc 94E7     		b	.L193
 3689              	.LVL181:
 3690              	.L219:
1868:Veno-Echo.cpp ****     }
 3691              		.loc 20 1868 16 view .LVU1006
 3692 01de B7EEE76A 		vcvt.f64.f32	d6, s15
 3693              	.LVL182:
1868:Veno-Echo.cpp ****     }
 3694              		.loc 20 1868 16 view .LVU1007
 3695 01e2 91E7     		b	.L193
 3696              	.LVL183:
 3697              	.L213:
1868:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 163


 3698              		.loc 20 1868 16 view .LVU1008
 3699 01e4 B7EEE76A 		vcvt.f64.f32	d6, s15
 3700 01e8 91E7     		b	.L194
 3701              	.L221:
 3702 01ea 00BFAFF3 		.align	3
 3702      0080
 3703              	.L220:
 3704 01f0 5C8FC2F5 		.word	4123168604
 3705 01f4 285CEF3F 		.word	1072651304
 3706 01f8 7B14AE47 		.word	1202590843
 3707 01fc E17A943F 		.word	1066695393
 3708 0200 00000000 		.word	0
 3709 0204 00000000 		.word	0
 3710 0208 18000000 		.word	.LANCHOR4+24
 3711 020c 00000000 		.word	.LANCHOR7
 3712 0210 00000000 		.word	.LANCHOR51
 3713 0214 00000000 		.word	.LANCHOR52
 3714 0218 00000000 		.word	.LANCHOR53
 3715 021c 00000000 		.word	.LANCHOR50
 3716 0220 00000000 		.word	.LANCHOR54
 3717 0224 00000000 		.word	.LANCHOR55
 3718 0228 6F12833C 		.word	1015222895
 3719 022c 00000000 		.word	.LANCHOR56
 3720 0230 00000000 		.word	.LANCHOR57
 3721 0234 0AD7A33B 		.word	1000593162
 3722 0238 00000000 		.word	0
 3723 023c 00000000 		.word	.LANCHOR46
 3724 0240 00000000 		.word	.LANCHOR47
 3725 0244 00000000 		.word	.LANCHOR34
 3726 0248 00000000 		.word	.LANCHOR35
 3727 024c 00000000 		.word	.LANCHOR48
 3728 0250 00000000 		.word	.LANCHOR49
 3729 0254 00000000 		.word	.LANCHOR36
 3730 0258 00000000 		.word	.LANCHOR37
 3731 025c 00000000 		.word	.LANCHOR16
 3732              	.LBE1118:
 3733              	.LBE1120:
 3734              	.LBE1132:
 3735              	.LBE1137:
 3736              		.cfi_endproc
 3737              	.LFE4320:
 3739              		.section	.text._Z15Update_width_CVv,"ax",%progbits
 3740              		.align	1
 3741              		.p2align 2,,3
 3742              		.global	_Z15Update_width_CVv
 3743              		.syntax unified
 3744              		.thumb
 3745              		.thumb_func
 3746              		.fpu fpv5-d16
 3748              	_Z15Update_width_CVv:
 3749              	.LFB4321:
1269:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 3750              		.loc 20 1269 1 is_stmt 1 view -0
 3751              		.cfi_startproc
 3752              		@ args = 0, pretend = 0, frame = 0
 3753              		@ frame_needed = 0, uses_anonymous_args = 0
1270:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 164


 3754              		.loc 20 1270 5 view .LVU1010
1269:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 3755              		.loc 20 1269 1 is_stmt 0 view .LVU1011
 3756 0000 08B5     		push	{r3, lr}
 3757              		.cfi_def_cfa_offset 8
 3758              		.cfi_offset 3, -8
 3759              		.cfi_offset 14, -4
1270:Veno-Echo.cpp **** }
 3760              		.loc 20 1270 30 view .LVU1012
 3761 0002 0521     		movs	r1, #5
 3762 0004 0348     		ldr	r0, .L224
 3763 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3764              	.LVL184:
1270:Veno-Echo.cpp **** }
 3765              		.loc 20 1270 13 view .LVU1013
 3766 000a 034B     		ldr	r3, .L224+4
 3767 000c 83ED000A 		vstr.32	s0, [r3]
1271:Veno-Echo.cpp **** 
 3768              		.loc 20 1271 1 view .LVU1014
 3769 0010 08BD     		pop	{r3, pc}
 3770              	.L225:
 3771 0012 00BF     		.align	2
 3772              	.L224:
 3773 0014 18000000 		.word	.LANCHOR4+24
 3774 0018 00000000 		.word	.LANCHOR58
 3775              		.cfi_endproc
 3776              	.LFE4321:
 3778              		.section	.text._Z12Update_widthv,"ax",%progbits
 3779              		.align	1
 3780              		.p2align 2,,3
 3781              		.global	_Z12Update_widthv
 3782              		.syntax unified
 3783              		.thumb
 3784              		.thumb_func
 3785              		.fpu fpv5-d16
 3787              	_Z12Update_widthv:
 3788              	.LFB4322:
1274:Veno-Echo.cpp ****     static bool lastShift{};
 3789              		.loc 20 1274 1 is_stmt 1 view -0
 3790              		.cfi_startproc
 3791              		@ args = 0, pretend = 0, frame = 0
 3792              		@ frame_needed = 0, uses_anonymous_args = 0
1275:Veno-Echo.cpp ****     static bool width_pickup{};
 3793              		.loc 20 1275 5 view .LVU1016
1276:Veno-Echo.cpp ****     static bool ModDepth_pickup{};
 3794              		.loc 20 1276 5 view .LVU1017
1277:Veno-Echo.cpp **** 
 3795              		.loc 20 1277 5 view .LVU1018
1279:Veno-Echo.cpp **** 
 3796              		.loc 20 1279 5 view .LVU1019
1282:Veno-Echo.cpp **** 
 3797              		.loc 20 1282 5 view .LVU1020
1282:Veno-Echo.cpp **** 
 3798              		.loc 20 1282 39 is_stmt 0 view .LVU1021
 3799 0000 0722     		movs	r2, #7
 3800 0002 5F48     		ldr	r0, .L255
 3801 0004 1146     		mov	r1, r2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 165


1274:Veno-Echo.cpp ****     static bool lastShift{};
 3802              		.loc 20 1274 1 view .LVU1022
 3803 0006 10B5     		push	{r4, lr}
 3804              		.cfi_def_cfa_offset 8
 3805              		.cfi_offset 4, -8
 3806              		.cfi_offset 14, -4
 3807 0008 2DED028B 		vpush.64	{d8}
 3808              		.cfi_def_cfa_offset 16
 3809              		.cfi_offset 80, -16
 3810              		.cfi_offset 81, -12
1282:Veno-Echo.cpp **** 
 3811              		.loc 20 1282 39 view .LVU1023
 3812 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3813              	.LVL185:
 3814              	.LBB1138:
1284:Veno-Echo.cpp ****     {   
 3815              		.loc 20 1284 9 view .LVU1024
 3816 0010 5C4B     		ldr	r3, .L255+4
 3817              	.LBE1138:
1282:Veno-Echo.cpp **** 
 3818              		.loc 20 1282 39 view .LVU1025
 3819 0012 B0EE408A 		vmov.f32	s16, s0
 3820              	.LVL186:
1284:Veno-Echo.cpp ****     {   
 3821              		.loc 20 1284 5 is_stmt 1 view .LVU1026
 3822              	.LBB1178:
 3823              	.LBB1139:
1288:Veno-Echo.cpp ****         {
 3824              		.loc 20 1288 19 is_stmt 0 view .LVU1027
 3825 0016 5C4A     		ldr	r2, .L255+8
 3826              	.LBE1139:
1284:Veno-Echo.cpp ****     {   
 3827              		.loc 20 1284 5 view .LVU1028
 3828 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3829 001a 002B     		cmp	r3, #0
 3830 001c 3ED1     		bne	.L227
 3831              	.LBB1168:
1286:Veno-Echo.cpp ****         //update pickup
 3832              		.loc 20 1286 9 is_stmt 1 view .LVU1029
1288:Veno-Echo.cpp ****         {
 3833              		.loc 20 1288 9 view .LVU1030
 3834 001e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3835 0020 0029     		cmp	r1, #0
 3836 0022 48D0     		beq	.L228
1290:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
 3837              		.loc 20 1290 13 view .LVU1031
1291:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3838              		.loc 20 1291 26 is_stmt 0 view .LVU1032
 3839 0024 5948     		ldr	r0, .L255+12
1292:Veno-Echo.cpp ****         }
 3840              		.loc 20 1292 23 view .LVU1033
 3841 0026 5A49     		ldr	r1, .L255+16
1290:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
 3842              		.loc 20 1290 23 view .LVU1034
 3843 0028 1370     		strb	r3, [r2]
1291:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3844              		.loc 20 1291 13 is_stmt 1 view .LVU1035
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 166


1291:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3845              		.loc 20 1291 26 is_stmt 0 view .LVU1036
 3846 002a 0370     		strb	r3, [r0]
1292:Veno-Echo.cpp ****         }
 3847              		.loc 20 1292 13 is_stmt 1 view .LVU1037
1292:Veno-Echo.cpp ****         }
 3848              		.loc 20 1292 23 is_stmt 0 view .LVU1038
 3849 002c 81ED000A 		vstr.32	s0, [r1]
 3850              	.L229:
1307:Veno-Echo.cpp **** 
 3851              		.loc 20 1307 9 is_stmt 1 view .LVU1039
 3852              	.LVL187:
1309:Veno-Echo.cpp ****         {
 3853              		.loc 20 1309 9 view .LVU1040
1317:Veno-Echo.cpp ****         }
 3854              		.loc 20 1317 13 view .LVU1041
 3855              	.LBB1140:
 3856              	.LBI1140:
1861:Veno-Echo.cpp **** {
 3857              		.loc 20 1861 7 view .LVU1042
 3858              	.LBB1141:
1863:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3859              		.loc 20 1863 5 view .LVU1043
1864:Veno-Echo.cpp **** 
 3860              		.loc 20 1864 5 view .LVU1044
 3861              	.LBE1141:
 3862              	.LBE1140:
1317:Veno-Echo.cpp ****         }
 3863              		.loc 20 1317 32 is_stmt 0 view .LVU1045
 3864 0030 584A     		ldr	r2, .L255+20
 3865              	.LBB1145:
 3866              	.LBB1142:
1864:Veno-Echo.cpp **** 
 3867              		.loc 20 1864 39 view .LVU1046
 3868 0032 B7EE007A 		vmov.f32	s14, #1.0e+0
1864:Veno-Echo.cpp **** 
 3869              		.loc 20 1864 49 view .LVU1047
 3870 0036 B6EE006A 		vmov.f32	s12, #5.0e-1
 3871              	.LBE1142:
 3872              	.LBE1145:
1317:Veno-Echo.cpp ****         }
 3873              		.loc 20 1317 32 view .LVU1048
 3874 003a 574B     		ldr	r3, .L255+24
 3875              	.LBB1146:
 3876              	.LBB1143:
1864:Veno-Echo.cpp **** 
 3877              		.loc 20 1864 39 view .LVU1049
 3878 003c D2ED007A 		vldr.32	s15, [r2]
1864:Veno-Echo.cpp **** 
 3879              		.loc 20 1864 12 view .LVU1050
 3880 0040 F0EE006A 		vmov.f32	s13, #2.0e+0
 3881 0044 93ED000A 		vldr.32	s0, [r3]
 3882              	.LVL188:
1864:Veno-Echo.cpp **** 
 3883              		.loc 20 1864 39 view .LVU1051
 3884 0048 77EE677A 		vsub.f32	s15, s14, s15
1864:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 167


 3885              		.loc 20 1864 49 view .LVU1052
 3886 004c 77EEC67A 		vsub.f32	s15, s15, s12
1864:Veno-Echo.cpp **** 
 3887              		.loc 20 1864 12 view .LVU1053
 3888 0050 A7EEA60A 		vfma.f32	s0, s15, s13
 3889              	.LVL189:
1866:Veno-Echo.cpp ****     {
 3890              		.loc 20 1866 5 is_stmt 1 view .LVU1054
 3891 0054 B5EEC00A 		vcmpe.f32	s0, #0
 3892 0058 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3893 005c 00F18A80 		bmi	.L253
1871:Veno-Echo.cpp ****     {
 3894              		.loc 20 1871 5 view .LVU1055
1873:Veno-Echo.cpp ****     }
 3895              		.loc 20 1873 16 is_stmt 0 view .LVU1056
 3896 0060 B4EE470A 		vcmp.f32	s0, s14
 3897 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3898 0068 37FE000A 		vselgt.f32	s0, s14, s0
 3899              	.LVL190:
 3900              	.L235:
1876:Veno-Echo.cpp **** }
 3901              		.loc 20 1876 5 is_stmt 1 view .LVU1057
1876:Veno-Echo.cpp **** }
 3902              		.loc 20 1876 5 is_stmt 0 view .LVU1058
 3903              	.LBE1143:
 3904              	.LBE1146:
1317:Veno-Echo.cpp ****         }
 3905              		.loc 20 1317 32 view .LVU1059
 3906 006c F6EE000A 		vmov.f32	s1, #5.0e-1
 3907 0070 0020     		movs	r0, #0
 3908 0072 9FED4A1A 		vldr.32	s2, .L255+28
 3909 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 3910              	.LVL191:
 3911              	.L234:
1320:Veno-Echo.cpp ****             WidthXfade.SetPos(width);
 3912              		.loc 20 1320 13 is_stmt 1 view .LVU1060
 3913              	.LBB1147:
 3914              	.LBI1147:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3915              		.loc 23 135 13 view .LVU1061
 3916              	.LBB1148:
 3917              		.loc 23 137 5 view .LVU1062
 3918              		.loc 23 137 9 is_stmt 0 view .LVU1063
 3919 007a 494B     		ldr	r3, .L255+32
 3920 007c 9FED497A 		vldr.32	s14, .L255+36
 3921 0080 D3ED007A 		vldr.32	s15, [r3]
 3922              	.LBE1148:
 3923              	.LBE1147:
 3924              	.LBB1151:
 3925              	.LBB1152:
  38:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initializes CrossFade module
  39:../DaisySP/Source/Dynamics/crossfade.h ****         Defaults
  40:../DaisySP/Source/Dynamics/crossfade.h ****         - current position = .5
  41:../DaisySP/Source/Dynamics/crossfade.h ****         - curve = linear
  42:../DaisySP/Source/Dynamics/crossfade.h ****     */
  43:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init(int curve)
  44:../DaisySP/Source/Dynamics/crossfade.h ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 168


  45:../DaisySP/Source/Dynamics/crossfade.h ****         pos_   = 0.5f;
  46:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
  47:../DaisySP/Source/Dynamics/crossfade.h ****     }
  48:../DaisySP/Source/Dynamics/crossfade.h **** 
  49:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initialize with default linear curve 
  50:../DaisySP/Source/Dynamics/crossfade.h ****     */
  51:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init() { Init(CROSSFADE_LIN); }
  52:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
  53:../DaisySP/Source/Dynamics/crossfade.h ****     */
  54:../DaisySP/Source/Dynamics/crossfade.h ****     float Process(float &in1, float &in2);
  55:../DaisySP/Source/Dynamics/crossfade.h **** 
  56:../DaisySP/Source/Dynamics/crossfade.h **** 
  57:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets position of CrossFade between two input signals
  58:../DaisySP/Source/Dynamics/crossfade.h ****         Input range: 0 to 1
  59:../DaisySP/Source/Dynamics/crossfade.h ****     */
  60:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetPos(float pos) { pos_ = pos; }
 3926              		.loc 10 60 42 view .LVU1064
 3927 0084 484A     		ldr	r2, .L255+40
 3928              	.LBE1152:
 3929              	.LBE1151:
 3930              	.LBB1154:
 3931              	.LBB1149:
 3932              		.loc 23 137 24 view .LVU1065
 3933 0086 30EE670A 		vsub.f32	s0, s0, s15
 3934              	.LVL192:
 3935              		.loc 23 137 24 view .LVU1066
 3936              	.LBE1149:
 3937              	.LBE1154:
 3938              	.LBE1168:
 3939              	.LBE1178:
1352:Veno-Echo.cpp **** 
 3940              		.loc 20 1352 1 view .LVU1067
 3941 008a BDEC028B 		vldm	sp!, {d8}
 3942              		.cfi_remember_state
 3943              		.cfi_restore 80
 3944              		.cfi_restore 81
 3945              		.cfi_def_cfa_offset 8
 3946              	.LVL193:
 3947              	.LBB1179:
 3948              	.LBB1169:
 3949              	.LBB1155:
 3950              	.LBB1150:
 3951              		.loc 23 137 9 view .LVU1068
 3952 008e E0EE077A 		vfma.f32	s15, s0, s14
 3953 0092 C3ED007A 		vstr.32	s15, [r3]
 3954              	.LVL194:
 3955              		.loc 23 137 9 view .LVU1069
 3956              	.LBE1150:
 3957              	.LBE1155:
1321:Veno-Echo.cpp ****     }
 3958              		.loc 20 1321 13 is_stmt 1 view .LVU1070
 3959              	.LBB1156:
 3960              	.LBI1151:
 3961              		.loc 10 60 17 view .LVU1071
 3962              	.LBB1153:
 3963              		.loc 10 60 37 view .LVU1072
 3964              		.loc 10 60 42 is_stmt 0 view .LVU1073
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 169


 3965 0096 C2ED007A 		vstr.32	s15, [r2]
 3966              	.LBE1153:
 3967              	.LBE1156:
 3968              	.LBE1169:
 3969              	.LBE1179:
1352:Veno-Echo.cpp **** 
 3970              		.loc 20 1352 1 view .LVU1074
 3971 009a 10BD     		pop	{r4, pc}
 3972              	.LVL195:
 3973              	.L227:
 3974              		.cfi_restore_state
 3975              	.LBB1180:
 3976              	.LBB1170:
1326:Veno-Echo.cpp **** 
 3977              		.loc 20 1326 9 is_stmt 1 view .LVU1075
1328:Veno-Echo.cpp ****         {
 3978              		.loc 20 1328 9 view .LVU1076
 3979 009c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3980 009e 002B     		cmp	r3, #0
 3981 00a0 43D1     		bne	.L238
1330:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 3982              		.loc 20 1330 13 view .LVU1077
1330:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 3983              		.loc 20 1330 23 is_stmt 0 view .LVU1078
 3984 00a2 0124     		movs	r4, #1
1331:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 3985              		.loc 20 1331 29 view .LVU1079
 3986 00a4 4148     		ldr	r0, .L255+44
1332:Veno-Echo.cpp ****         }
 3987              		.loc 20 1332 26 view .LVU1080
 3988 00a6 4249     		ldr	r1, .L255+48
1330:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 3989              		.loc 20 1330 23 view .LVU1081
 3990 00a8 1470     		strb	r4, [r2]
1331:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 3991              		.loc 20 1331 13 is_stmt 1 view .LVU1082
1331:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 3992              		.loc 20 1331 29 is_stmt 0 view .LVU1083
 3993 00aa 0370     		strb	r3, [r0]
1332:Veno-Echo.cpp ****         }
 3994              		.loc 20 1332 13 is_stmt 1 view .LVU1084
1332:Veno-Echo.cpp ****         }
 3995              		.loc 20 1332 26 is_stmt 0 view .LVU1085
 3996 00ac 81ED000A 		vstr.32	s0, [r1]
 3997              	.L226:
1332:Veno-Echo.cpp ****         }
 3998              		.loc 20 1332 26 view .LVU1086
 3999              	.LBE1170:
 4000              	.LBE1180:
1352:Veno-Echo.cpp **** 
 4001              		.loc 20 1352 1 view .LVU1087
 4002 00b0 BDEC028B 		vldm	sp!, {d8}
 4003              		.cfi_remember_state
 4004              		.cfi_restore 80
 4005              		.cfi_restore 81
 4006              		.cfi_def_cfa_offset 8
 4007 00b4 10BD     		pop	{r4, pc}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 170


 4008              	.L228:
 4009              		.cfi_restore_state
 4010              	.LBB1181:
 4011              	.LBB1175:
1297:Veno-Echo.cpp ****             {
 4012              		.loc 20 1297 13 is_stmt 1 view .LVU1088
1297:Veno-Echo.cpp ****             {
 4013              		.loc 20 1297 16 is_stmt 0 view .LVU1089
 4014 00b6 354B     		ldr	r3, .L255+12
1297:Veno-Echo.cpp ****             {
 4015              		.loc 20 1297 13 view .LVU1090
 4016 00b8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4017 00ba 7AB9     		cbnz	r2, .L230
1299:Veno-Echo.cpp ****                 {
 4018              		.loc 20 1299 17 is_stmt 1 view .LVU1091
 4019              	.LVL196:
 4020              	.LBB1157:
 4021              	.LBI1157:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4022              		.loc 21 75 3 view .LVU1092
 4023              	.LBB1158:
 4024              		.loc 21 76 5 view .LVU1093
 4025              		.loc 21 76 5 is_stmt 0 view .LVU1094
 4026              	.LBE1158:
 4027              	.LBE1157:
1299:Veno-Echo.cpp ****                 {
 4028              		.loc 20 1299 23 view .LVU1095
 4029 00bc 344A     		ldr	r2, .L255+16
1299:Veno-Echo.cpp ****                 {
 4030              		.loc 20 1299 17 view .LVU1096
 4031 00be 9FED3D7A 		vldr.32	s14, .L255+52
1299:Veno-Echo.cpp ****                 {
 4032              		.loc 20 1299 23 view .LVU1097
 4033 00c2 D2ED007A 		vldr.32	s15, [r2]
 4034 00c6 70EE677A 		vsub.f32	s15, s0, s15
 4035              	.LBB1160:
 4036              	.LBB1159:
 4037              		.loc 21 76 31 view .LVU1098
 4038 00ca F0EEE77A 		vabs.f32	s15, s15
 4039              	.LBE1159:
 4040              	.LBE1160:
1299:Veno-Echo.cpp ****                 {
 4041              		.loc 20 1299 17 view .LVU1099
 4042 00ce F4EEC77A 		vcmpe.f32	s15, s14
 4043 00d2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4044 00d6 ABDD     		ble	.L229
1301:Veno-Echo.cpp ****                 }
 4045              		.loc 20 1301 21 is_stmt 1 view .LVU1100
1301:Veno-Echo.cpp ****                 }
 4046              		.loc 20 1301 34 is_stmt 0 view .LVU1101
 4047 00d8 0122     		movs	r2, #1
 4048 00da 1A70     		strb	r2, [r3]
 4049              	.L230:
1307:Veno-Echo.cpp **** 
 4050              		.loc 20 1307 9 is_stmt 1 view .LVU1102
 4051              	.LVL197:
1309:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 171


 4052              		.loc 20 1309 9 view .LVU1103
1311:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4053              		.loc 20 1311 13 view .LVU1104
 4054              	.LBB1161:
 4055              	.LBI1161:
1861:Veno-Echo.cpp **** {
 4056              		.loc 20 1861 7 view .LVU1105
 4057              	.LBB1162:
1863:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4058              		.loc 20 1863 5 view .LVU1106
1864:Veno-Echo.cpp **** 
 4059              		.loc 20 1864 5 view .LVU1107
 4060              	.LBE1162:
 4061              	.LBE1161:
1311:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4062              		.loc 20 1311 32 is_stmt 0 view .LVU1108
 4063 00dc 2D4B     		ldr	r3, .L255+20
 4064              	.LBB1165:
 4065              	.LBB1163:
1864:Veno-Echo.cpp **** 
 4066              		.loc 20 1864 39 view .LVU1109
 4067 00de B7EE007A 		vmov.f32	s14, #1.0e+0
1864:Veno-Echo.cpp **** 
 4068              		.loc 20 1864 49 view .LVU1110
 4069 00e2 B6EE006A 		vmov.f32	s12, #5.0e-1
1864:Veno-Echo.cpp **** 
 4070              		.loc 20 1864 39 view .LVU1111
 4071 00e6 D3ED007A 		vldr.32	s15, [r3]
1864:Veno-Echo.cpp **** 
 4072              		.loc 20 1864 12 view .LVU1112
 4073 00ea F0EE006A 		vmov.f32	s13, #2.0e+0
 4074 00ee B0EE480A 		vmov.f32	s0, s16
 4075              	.LVL198:
1864:Veno-Echo.cpp **** 
 4076              		.loc 20 1864 39 view .LVU1113
 4077 00f2 77EE677A 		vsub.f32	s15, s14, s15
1864:Veno-Echo.cpp **** 
 4078              		.loc 20 1864 49 view .LVU1114
 4079 00f6 77EEC67A 		vsub.f32	s15, s15, s12
1864:Veno-Echo.cpp **** 
 4080              		.loc 20 1864 12 view .LVU1115
 4081 00fa A7EEA60A 		vfma.f32	s0, s15, s13
 4082              	.LVL199:
1866:Veno-Echo.cpp ****     {
 4083              		.loc 20 1866 5 is_stmt 1 view .LVU1116
 4084 00fe B5EEC00A 		vcmpe.f32	s0, #0
 4085 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4086 0106 38D4     		bmi	.L254
1871:Veno-Echo.cpp ****     {
 4087              		.loc 20 1871 5 view .LVU1117
1873:Veno-Echo.cpp ****     }
 4088              		.loc 20 1873 16 is_stmt 0 view .LVU1118
 4089 0108 B4EE470A 		vcmp.f32	s0, s14
 4090 010c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4091 0110 37FE000A 		vselgt.f32	s0, s14, s0
 4092              	.LVL200:
 4093              	.L232:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 172


1876:Veno-Echo.cpp **** }
 4094              		.loc 20 1876 5 is_stmt 1 view .LVU1119
1876:Veno-Echo.cpp **** }
 4095              		.loc 20 1876 5 is_stmt 0 view .LVU1120
 4096              	.LBE1163:
 4097              	.LBE1165:
1311:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4098              		.loc 20 1311 32 view .LVU1121
 4099 0114 F6EE000A 		vmov.f32	s1, #5.0e-1
 4100 0118 0020     		movs	r0, #0
 4101 011a 9FED201A 		vldr.32	s2, .L255+28
 4102 011e FFF7FEFF 		bl	_Z5scalefff9CurveType
 4103              	.LVL201:
1312:Veno-Echo.cpp ****         }
 4104              		.loc 20 1312 24 view .LVU1122
 4105 0122 1D4B     		ldr	r3, .L255+24
 4106              	.LVL202:
1312:Veno-Echo.cpp ****         }
 4107              		.loc 20 1312 13 is_stmt 1 view .LVU1123
1312:Veno-Echo.cpp ****         }
 4108              		.loc 20 1312 24 is_stmt 0 view .LVU1124
 4109 0124 83ED008A 		vstr.32	s16, [r3]
 4110 0128 A7E7     		b	.L234
 4111              	.LVL203:
 4112              	.L238:
1312:Veno-Echo.cpp ****         }
 4113              		.loc 20 1312 24 view .LVU1125
 4114              	.LBE1175:
 4115              	.LBB1176:
1337:Veno-Echo.cpp ****             {
 4116              		.loc 20 1337 13 is_stmt 1 view .LVU1126
1337:Veno-Echo.cpp ****             {
 4117              		.loc 20 1337 16 is_stmt 0 view .LVU1127
 4118 012a 204B     		ldr	r3, .L255+44
1337:Veno-Echo.cpp ****             {
 4119              		.loc 20 1337 13 view .LVU1128
 4120 012c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4121 012e 7AB9     		cbnz	r2, .L240
1339:Veno-Echo.cpp ****                 {
 4122              		.loc 20 1339 17 is_stmt 1 view .LVU1129
 4123              	.LVL204:
 4124              	.LBB1171:
 4125              	.LBI1171:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4126              		.loc 21 75 3 view .LVU1130
 4127              	.LBB1172:
 4128              		.loc 21 76 5 view .LVU1131
 4129              		.loc 21 76 5 is_stmt 0 view .LVU1132
 4130              	.LBE1172:
 4131              	.LBE1171:
1339:Veno-Echo.cpp ****                 {
 4132              		.loc 20 1339 23 view .LVU1133
 4133 0130 1F4A     		ldr	r2, .L255+48
1339:Veno-Echo.cpp ****                 {
 4134              		.loc 20 1339 17 view .LVU1134
 4135 0132 9FED207A 		vldr.32	s14, .L255+52
1339:Veno-Echo.cpp ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 173


 4136              		.loc 20 1339 23 view .LVU1135
 4137 0136 D2ED007A 		vldr.32	s15, [r2]
 4138 013a 70EE677A 		vsub.f32	s15, s0, s15
 4139              	.LBB1174:
 4140              	.LBB1173:
 4141              		.loc 21 76 31 view .LVU1136
 4142 013e F0EEE77A 		vabs.f32	s15, s15
 4143              	.LBE1173:
 4144              	.LBE1174:
1339:Veno-Echo.cpp ****                 {
 4145              		.loc 20 1339 17 view .LVU1137
 4146 0142 F4EEC77A 		vcmpe.f32	s15, s14
 4147 0146 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4148 014a B1DD     		ble	.L226
1341:Veno-Echo.cpp ****                 }
 4149              		.loc 20 1341 21 is_stmt 1 view .LVU1138
1341:Veno-Echo.cpp ****                 }
 4150              		.loc 20 1341 37 is_stmt 0 view .LVU1139
 4151 014c 0122     		movs	r2, #1
 4152 014e 1A70     		strb	r2, [r3]
 4153              	.L240:
1346:Veno-Echo.cpp ****         {
 4154              		.loc 20 1346 9 is_stmt 1 view .LVU1140
1348:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4155              		.loc 20 1348 13 view .LVU1141
1348:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4156              		.loc 20 1348 29 is_stmt 0 view .LVU1142
 4157 0150 B0EE480A 		vmov.f32	s0, s16
 4158              	.LVL205:
1348:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4159              		.loc 20 1348 29 view .LVU1143
 4160 0154 0020     		movs	r0, #0
 4161 0156 9FED181A 		vldr.32	s2, .L255+56
 4162 015a DFED100A 		vldr.32	s1, .L255+28
 4163 015e FFF7FEFF 		bl	_Z5scalefff9CurveType
 4164              	.LVL206:
1348:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4165              		.loc 20 1348 22 view .LVU1144
 4166 0162 164A     		ldr	r2, .L255+60
1349:Veno-Echo.cpp ****         }
 4167              		.loc 20 1349 34 view .LVU1145
 4168 0164 164B     		ldr	r3, .L255+64
1348:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4169              		.loc 20 1348 22 view .LVU1146
 4170 0166 82ED000A 		vstr.32	s0, [r2]
1349:Veno-Echo.cpp ****         }
 4171              		.loc 20 1349 13 is_stmt 1 view .LVU1147
1349:Veno-Echo.cpp ****         }
 4172              		.loc 20 1349 34 is_stmt 0 view .LVU1148
 4173 016a 83ED020A 		vstr.32	s0, [r3, #8]
 4174              	.LBE1176:
 4175              	.LBE1181:
1352:Veno-Echo.cpp **** 
 4176              		.loc 20 1352 1 view .LVU1149
 4177 016e BDEC028B 		vldm	sp!, {d8}
 4178              		.cfi_remember_state
 4179              		.cfi_restore 80
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 174


 4180              		.cfi_restore 81
 4181              		.cfi_def_cfa_offset 8
 4182              	.LVL207:
1352:Veno-Echo.cpp **** 
 4183              		.loc 20 1352 1 view .LVU1150
 4184 0172 10BD     		pop	{r4, pc}
 4185              	.LVL208:
 4186              	.L253:
 4187              		.cfi_restore_state
 4188              	.LBB1182:
 4189              	.LBB1177:
 4190              	.LBB1166:
 4191              	.LBB1144:
1868:Veno-Echo.cpp ****     }
 4192              		.loc 20 1868 16 view .LVU1151
 4193 0174 9FED090A 		vldr.32	s0, .L255+28
 4194              	.LVL209:
1868:Veno-Echo.cpp ****     }
 4195              		.loc 20 1868 16 view .LVU1152
 4196 0178 78E7     		b	.L235
 4197              	.LVL210:
 4198              	.L254:
1868:Veno-Echo.cpp ****     }
 4199              		.loc 20 1868 16 view .LVU1153
 4200              	.LBE1144:
 4201              	.LBE1166:
 4202              	.LBB1167:
 4203              	.LBB1164:
 4204 017a 9FED080A 		vldr.32	s0, .L255+28
 4205              	.LVL211:
1868:Veno-Echo.cpp ****     }
 4206              		.loc 20 1868 16 view .LVU1154
 4207 017e C9E7     		b	.L232
 4208              	.L256:
 4209              		.align	2
 4210              	.L255:
 4211 0180 18000000 		.word	.LANCHOR4+24
 4212 0184 00000000 		.word	.LANCHOR7
 4213 0188 00000000 		.word	.LANCHOR59
 4214 018c 00000000 		.word	.LANCHOR60
 4215 0190 00000000 		.word	.LANCHOR61
 4216 0194 00000000 		.word	.LANCHOR58
 4217 0198 00000000 		.word	.LANCHOR62
 4218 019c 00000000 		.word	0
 4219 01a0 00000000 		.word	.LANCHOR63
 4220 01a4 6F12033D 		.word	1023611503
 4221 01a8 00000000 		.word	.LANCHOR64
 4222 01ac 00000000 		.word	.LANCHOR65
 4223 01b0 00000000 		.word	.LANCHOR66
 4224 01b4 0AD7A33B 		.word	1000593162
 4225 01b8 0000FA43 		.word	1140457472
 4226 01bc 00000000 		.word	.LANCHOR67
 4227 01c0 00000000 		.word	.LANCHOR16
 4228              	.LBE1164:
 4229              	.LBE1167:
 4230              	.LBE1177:
 4231              	.LBE1182:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 175


 4232              		.cfi_endproc
 4233              	.LFE4322:
 4235              		.section	.text._Z20Update_crossfeedbackv,"ax",%progbits
 4236              		.align	1
 4237              		.p2align 2,,3
 4238              		.global	_Z20Update_crossfeedbackv
 4239              		.syntax unified
 4240              		.thumb
 4241              		.thumb_func
 4242              		.fpu fpv5-d16
 4244              	_Z20Update_crossfeedbackv:
 4245              	.LFB4323:
1355:Veno-Echo.cpp ****     static bool lastShift{};
 4246              		.loc 20 1355 1 is_stmt 1 view -0
 4247              		.cfi_startproc
 4248              		@ args = 0, pretend = 0, frame = 0
 4249              		@ frame_needed = 0, uses_anonymous_args = 0
1356:Veno-Echo.cpp ****     static bool crossfeedback_pickup{};
 4250              		.loc 20 1356 5 view .LVU1156
1357:Veno-Echo.cpp ****     static bool modRate_pickup{};
 4251              		.loc 20 1357 5 view .LVU1157
1358:Veno-Echo.cpp **** 
 4252              		.loc 20 1358 5 view .LVU1158
1360:Veno-Echo.cpp **** 
 4253              		.loc 20 1360 5 view .LVU1159
1363:Veno-Echo.cpp **** 
 4254              		.loc 20 1363 5 view .LVU1160
1363:Veno-Echo.cpp **** 
 4255              		.loc 20 1363 47 is_stmt 0 view .LVU1161
 4256 0000 0022     		movs	r2, #0
 4257 0002 0721     		movs	r1, #7
 4258 0004 4148     		ldr	r0, .L272
1355:Veno-Echo.cpp ****     static bool lastShift{};
 4259              		.loc 20 1355 1 view .LVU1162
 4260 0006 10B5     		push	{r4, lr}
 4261              		.cfi_def_cfa_offset 8
 4262              		.cfi_offset 4, -8
 4263              		.cfi_offset 14, -4
 4264 0008 2DED028B 		vpush.64	{d8}
 4265              		.cfi_def_cfa_offset 16
 4266              		.cfi_offset 80, -16
 4267              		.cfi_offset 81, -12
1363:Veno-Echo.cpp **** 
 4268              		.loc 20 1363 47 view .LVU1163
 4269 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 4270              	.LVL212:
 4271              	.LBB1183:
1365:Veno-Echo.cpp ****     {   
 4272              		.loc 20 1365 9 view .LVU1164
 4273 0010 3F4B     		ldr	r3, .L272+4
 4274              	.LBE1183:
1363:Veno-Echo.cpp **** 
 4275              		.loc 20 1363 47 view .LVU1165
 4276 0012 B0EE408A 		vmov.f32	s16, s0
 4277              	.LVL213:
1365:Veno-Echo.cpp ****     {   
 4278              		.loc 20 1365 5 is_stmt 1 view .LVU1166
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 176


 4279              	.LBB1212:
 4280              	.LBB1184:
1369:Veno-Echo.cpp ****         {
 4281              		.loc 20 1369 19 is_stmt 0 view .LVU1167
 4282 0016 3F4A     		ldr	r2, .L272+8
 4283              	.LBE1184:
1365:Veno-Echo.cpp ****     {   
 4284              		.loc 20 1365 5 view .LVU1168
 4285 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4286 001a FBB9     		cbnz	r3, .L258
 4287              	.LBB1193:
1367:Veno-Echo.cpp ****         //update pickup
 4288              		.loc 20 1367 9 is_stmt 1 view .LVU1169
1369:Veno-Echo.cpp ****         {
 4289              		.loc 20 1369 9 view .LVU1170
 4290 001c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4291 001e 49B3     		cbz	r1, .L259
1371:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
 4292              		.loc 20 1371 13 view .LVU1171
1372:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4293              		.loc 20 1372 34 is_stmt 0 view .LVU1172
 4294 0020 3D48     		ldr	r0, .L272+12
1373:Veno-Echo.cpp ****         }
 4295              		.loc 20 1373 31 view .LVU1173
 4296 0022 3E49     		ldr	r1, .L272+16
1371:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
 4297              		.loc 20 1371 23 view .LVU1174
 4298 0024 1370     		strb	r3, [r2]
1372:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4299              		.loc 20 1372 13 is_stmt 1 view .LVU1175
1372:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4300              		.loc 20 1372 34 is_stmt 0 view .LVU1176
 4301 0026 0370     		strb	r3, [r0]
1373:Veno-Echo.cpp ****         }
 4302              		.loc 20 1373 13 is_stmt 1 view .LVU1177
1373:Veno-Echo.cpp ****         }
 4303              		.loc 20 1373 31 is_stmt 0 view .LVU1178
 4304 0028 81ED000A 		vstr.32	s0, [r1]
 4305              	.L260:
1386:Veno-Echo.cpp **** 
 4306              		.loc 20 1386 9 is_stmt 1 view .LVU1179
 4307              	.LVL214:
1388:Veno-Echo.cpp ****         {
 4308              		.loc 20 1388 9 view .LVU1180
1396:Veno-Echo.cpp ****         }
 4309              		.loc 20 1396 13 view .LVU1181
1396:Veno-Echo.cpp ****         }
 4310              		.loc 20 1396 40 is_stmt 0 view .LVU1182
 4311 002c 3C4B     		ldr	r3, .L272+20
 4312 002e B7EE001A 		vmov.f32	s2, #1.0e+0
 4313 0032 0020     		movs	r0, #0
 4314 0034 DFED3B0A 		vldr.32	s1, .L272+24
 4315 0038 93ED000A 		vldr.32	s0, [r3]
 4316              	.LVL215:
1396:Veno-Echo.cpp ****         }
 4317              		.loc 20 1396 40 view .LVU1183
 4318 003c FFF7FEFF 		bl	_Z5scalefff9CurveType
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 177


 4319              	.LVL216:
 4320              	.L268:
1399:Veno-Echo.cpp ****     }
 4321              		.loc 20 1399 9 is_stmt 1 view .LVU1184
 4322              	.LBB1185:
 4323              	.LBI1185:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4324              		.loc 23 135 13 view .LVU1185
 4325              	.LBB1186:
 4326              		.loc 23 137 5 view .LVU1186
 4327              		.loc 23 137 9 is_stmt 0 view .LVU1187
 4328 0040 394B     		ldr	r3, .L272+28
 4329 0042 9FED3A7A 		vldr.32	s14, .L272+32
 4330 0046 D3ED007A 		vldr.32	s15, [r3]
 4331              		.loc 23 137 24 view .LVU1188
 4332 004a 30EE670A 		vsub.f32	s0, s0, s15
 4333              	.LVL217:
 4334              		.loc 23 137 24 view .LVU1189
 4335              	.LBE1186:
 4336              	.LBE1185:
 4337              	.LBE1193:
 4338              	.LBE1212:
1430:Veno-Echo.cpp **** 
 4339              		.loc 20 1430 1 view .LVU1190
 4340 004e BDEC028B 		vldm	sp!, {d8}
 4341              		.cfi_remember_state
 4342              		.cfi_restore 80
 4343              		.cfi_restore 81
 4344              		.cfi_def_cfa_offset 8
 4345              	.LVL218:
 4346              	.LBB1213:
 4347              	.LBB1194:
 4348              	.LBB1188:
 4349              	.LBB1187:
 4350              		.loc 23 137 9 view .LVU1191
 4351 0052 E0EE077A 		vfma.f32	s15, s0, s14
 4352 0056 C3ED007A 		vstr.32	s15, [r3]
 4353              	.LBE1187:
 4354              	.LBE1188:
 4355              	.LBE1194:
 4356              	.LBE1213:
1430:Veno-Echo.cpp **** 
 4357              		.loc 20 1430 1 view .LVU1192
 4358 005a 10BD     		pop	{r4, pc}
 4359              	.LVL219:
 4360              	.L258:
 4361              		.cfi_restore_state
 4362              	.LBB1214:
 4363              	.LBB1195:
1403:Veno-Echo.cpp **** 
 4364              		.loc 20 1403 9 is_stmt 1 view .LVU1193
1405:Veno-Echo.cpp ****         {
 4365              		.loc 20 1405 9 view .LVU1194
 4366 005c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4367 005e 4BBB     		cbnz	r3, .L264
1407:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4368              		.loc 20 1407 13 view .LVU1195
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 178


1407:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4369              		.loc 20 1407 23 is_stmt 0 view .LVU1196
 4370 0060 0124     		movs	r4, #1
1408:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4371              		.loc 20 1408 28 view .LVU1197
 4372 0062 3348     		ldr	r0, .L272+36
1409:Veno-Echo.cpp ****         }
 4373              		.loc 20 1409 25 view .LVU1198
 4374 0064 3349     		ldr	r1, .L272+40
1407:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4375              		.loc 20 1407 23 view .LVU1199
 4376 0066 1470     		strb	r4, [r2]
1408:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4377              		.loc 20 1408 13 is_stmt 1 view .LVU1200
1408:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4378              		.loc 20 1408 28 is_stmt 0 view .LVU1201
 4379 0068 0370     		strb	r3, [r0]
1409:Veno-Echo.cpp ****         }
 4380              		.loc 20 1409 13 is_stmt 1 view .LVU1202
1409:Veno-Echo.cpp ****         }
 4381              		.loc 20 1409 25 is_stmt 0 view .LVU1203
 4382 006a 81ED000A 		vstr.32	s0, [r1]
 4383              	.L257:
1409:Veno-Echo.cpp ****         }
 4384              		.loc 20 1409 25 view .LVU1204
 4385              	.LBE1195:
 4386              	.LBE1214:
1430:Veno-Echo.cpp **** 
 4387              		.loc 20 1430 1 view .LVU1205
 4388 006e BDEC028B 		vldm	sp!, {d8}
 4389              		.cfi_remember_state
 4390              		.cfi_restore 80
 4391              		.cfi_restore 81
 4392              		.cfi_def_cfa_offset 8
 4393 0072 10BD     		pop	{r4, pc}
 4394              	.L259:
 4395              		.cfi_restore_state
 4396              	.LBB1215:
 4397              	.LBB1210:
1378:Veno-Echo.cpp ****             {
 4398              		.loc 20 1378 13 is_stmt 1 view .LVU1206
1378:Veno-Echo.cpp ****             {
 4399              		.loc 20 1378 16 is_stmt 0 view .LVU1207
 4400 0074 284B     		ldr	r3, .L272+12
1378:Veno-Echo.cpp ****             {
 4401              		.loc 20 1378 13 view .LVU1208
 4402 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4403 0078 7AB9     		cbnz	r2, .L261
1380:Veno-Echo.cpp ****                 {
 4404              		.loc 20 1380 17 is_stmt 1 view .LVU1209
 4405              	.LVL220:
 4406              	.LBB1189:
 4407              	.LBI1189:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4408              		.loc 21 75 3 view .LVU1210
 4409              	.LBB1190:
 4410              		.loc 21 76 5 view .LVU1211
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 179


 4411              		.loc 21 76 5 is_stmt 0 view .LVU1212
 4412              	.LBE1190:
 4413              	.LBE1189:
1380:Veno-Echo.cpp ****                 {
 4414              		.loc 20 1380 23 view .LVU1213
 4415 007a 284A     		ldr	r2, .L272+16
1380:Veno-Echo.cpp ****                 {
 4416              		.loc 20 1380 17 view .LVU1214
 4417 007c 9FED2E7A 		vldr.32	s14, .L272+44
1380:Veno-Echo.cpp ****                 {
 4418              		.loc 20 1380 23 view .LVU1215
 4419 0080 D2ED007A 		vldr.32	s15, [r2]
 4420 0084 70EE677A 		vsub.f32	s15, s0, s15
 4421              	.LBB1192:
 4422              	.LBB1191:
 4423              		.loc 21 76 31 view .LVU1216
 4424 0088 F0EEE77A 		vabs.f32	s15, s15
 4425              	.LBE1191:
 4426              	.LBE1192:
1380:Veno-Echo.cpp ****                 {
 4427              		.loc 20 1380 17 view .LVU1217
 4428 008c F4EEC77A 		vcmpe.f32	s15, s14
 4429 0090 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4430 0094 CADD     		ble	.L260
1382:Veno-Echo.cpp ****                 }
 4431              		.loc 20 1382 21 is_stmt 1 view .LVU1218
1382:Veno-Echo.cpp ****                 }
 4432              		.loc 20 1382 42 is_stmt 0 view .LVU1219
 4433 0096 0122     		movs	r2, #1
 4434 0098 1A70     		strb	r2, [r3]
 4435              	.L261:
1386:Veno-Echo.cpp **** 
 4436              		.loc 20 1386 9 is_stmt 1 view .LVU1220
 4437              	.LVL221:
1388:Veno-Echo.cpp ****         {
 4438              		.loc 20 1388 9 view .LVU1221
1390:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4439              		.loc 20 1390 13 view .LVU1222
1390:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4440              		.loc 20 1390 40 is_stmt 0 view .LVU1223
 4441 009a B7EE001A 		vmov.f32	s2, #1.0e+0
 4442 009e 0020     		movs	r0, #0
 4443 00a0 B0EE480A 		vmov.f32	s0, s16
 4444              	.LVL222:
1390:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4445              		.loc 20 1390 40 view .LVU1224
 4446 00a4 DFED1F0A 		vldr.32	s1, .L272+24
 4447 00a8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4448              	.LVL223:
1391:Veno-Echo.cpp ****         }
 4449              		.loc 20 1391 32 view .LVU1225
 4450 00ac 1C4B     		ldr	r3, .L272+20
 4451              	.LVL224:
1391:Veno-Echo.cpp ****         }
 4452              		.loc 20 1391 13 is_stmt 1 view .LVU1226
1391:Veno-Echo.cpp ****         }
 4453              		.loc 20 1391 32 is_stmt 0 view .LVU1227
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 180


 4454 00ae 83ED008A 		vstr.32	s16, [r3]
 4455 00b2 C5E7     		b	.L268
 4456              	.LVL225:
 4457              	.L264:
1391:Veno-Echo.cpp ****         }
 4458              		.loc 20 1391 32 view .LVU1228
 4459              	.LBE1210:
 4460              	.LBB1211:
1414:Veno-Echo.cpp ****             {
 4461              		.loc 20 1414 13 is_stmt 1 view .LVU1229
1414:Veno-Echo.cpp ****             {
 4462              		.loc 20 1414 16 is_stmt 0 view .LVU1230
 4463 00b4 1E4B     		ldr	r3, .L272+36
1414:Veno-Echo.cpp ****             {
 4464              		.loc 20 1414 13 view .LVU1231
 4465 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4466 00b8 7AB9     		cbnz	r2, .L266
1416:Veno-Echo.cpp ****                 {
 4467              		.loc 20 1416 17 is_stmt 1 view .LVU1232
 4468              	.LVL226:
 4469              	.LBB1196:
 4470              	.LBI1196:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4471              		.loc 21 75 3 view .LVU1233
 4472              	.LBB1197:
 4473              		.loc 21 76 5 view .LVU1234
 4474              		.loc 21 76 5 is_stmt 0 view .LVU1235
 4475              	.LBE1197:
 4476              	.LBE1196:
1416:Veno-Echo.cpp ****                 {
 4477              		.loc 20 1416 23 view .LVU1236
 4478 00ba 1E4A     		ldr	r2, .L272+40
1416:Veno-Echo.cpp ****                 {
 4479              		.loc 20 1416 17 view .LVU1237
 4480 00bc 9FED1E7A 		vldr.32	s14, .L272+44
1416:Veno-Echo.cpp ****                 {
 4481              		.loc 20 1416 23 view .LVU1238
 4482 00c0 D2ED007A 		vldr.32	s15, [r2]
 4483 00c4 70EE677A 		vsub.f32	s15, s0, s15
 4484              	.LBB1199:
 4485              	.LBB1198:
 4486              		.loc 21 76 31 view .LVU1239
 4487 00c8 F0EEE77A 		vabs.f32	s15, s15
 4488              	.LBE1198:
 4489              	.LBE1199:
1416:Veno-Echo.cpp ****                 {
 4490              		.loc 20 1416 17 view .LVU1240
 4491 00cc F4EEC77A 		vcmpe.f32	s15, s14
 4492 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4493 00d4 CBDD     		ble	.L257
1418:Veno-Echo.cpp ****                 }
 4494              		.loc 20 1418 21 is_stmt 1 view .LVU1241
1418:Veno-Echo.cpp ****                 }
 4495              		.loc 20 1418 36 is_stmt 0 view .LVU1242
 4496 00d6 0122     		movs	r2, #1
 4497 00d8 1A70     		strb	r2, [r3]
 4498              	.L266:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 181


1423:Veno-Echo.cpp ****         {
 4499              		.loc 20 1423 9 is_stmt 1 view .LVU1243
 4500              	.LBB1200:
 4501              	.LBB1201:
1425:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4502              		.loc 20 1425 13 view .LVU1244
 4503              	.LBB1202:
 4504              	.LBB1203:
  17:../DaisySP/Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:../DaisySP/Source/Synthesis/oscillator.h ****     */
  19:../DaisySP/Source/Synthesis/oscillator.h ****     enum
  20:../DaisySP/Source/Synthesis/oscillator.h ****     {
  21:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SIN,
  22:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_TRI,
  23:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SAW,
  24:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  25:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  26:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  27:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  28:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  29:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_LAST,
  30:../DaisySP/Source/Synthesis/oscillator.h ****     };
  31:../DaisySP/Source/Synthesis/oscillator.h **** 
  32:../DaisySP/Source/Synthesis/oscillator.h **** 
  33:../DaisySP/Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  34:../DaisySP/Source/Synthesis/oscillator.h **** 
  35:../DaisySP/Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:../DaisySP/Source/Synthesis/oscillator.h **** 
  37:../DaisySP/Source/Synthesis/oscillator.h ****         Defaults:
  38:../DaisySP/Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
  39:../DaisySP/Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  40:../DaisySP/Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  41:../DaisySP/Source/Synthesis/oscillator.h ****     */
  42:../DaisySP/Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  43:../DaisySP/Source/Synthesis/oscillator.h ****     {
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
  45:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  46:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  47:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
  49:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
  52:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
  53:../DaisySP/Source/Synthesis/oscillator.h ****     }
  54:../DaisySP/Source/Synthesis/oscillator.h **** 
  55:../DaisySP/Source/Synthesis/oscillator.h **** 
  56:../DaisySP/Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:../DaisySP/Source/Synthesis/oscillator.h ****     */
  58:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
  59:../DaisySP/Source/Synthesis/oscillator.h ****     {
  60:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = f;
 4505              		.loc 8 60 20 is_stmt 0 view .LVU1245
 4506 00da 184C     		ldr	r4, .L272+48
 4507              	.LBE1203:
 4508              	.LBE1202:
1425:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 182


 4509              		.loc 20 1425 32 view .LVU1246
 4510 00dc B0EE480A 		vmov.f32	s0, s16
 4511              	.LVL227:
1425:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4512              		.loc 20 1425 32 view .LVU1247
 4513 00e0 B2EE041A 		vmov.f32	s2, #1.0e+1
 4514 00e4 0020     		movs	r0, #0
 4515 00e6 DFED160A 		vldr.32	s1, .L272+52
 4516 00ea FFF7FEFF 		bl	_Z5scalefff9CurveType
 4517              	.LVL228:
 4518              	.LBB1207:
 4519              	.LBB1204:
  61:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4520              		.loc 8 61 34 view .LVU1248
 4521 00ee 2046     		mov	r0, r4
 4522              	.LBE1204:
 4523              	.LBE1207:
1425:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4524              		.loc 20 1425 32 view .LVU1249
 4525 00f0 B0EE408A 		vmov.f32	s16, s0
 4526              	.LVL229:
1426:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
 4527              		.loc 20 1426 13 is_stmt 1 view .LVU1250
 4528              	.LBB1208:
 4529              	.LBI1202:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 4530              		.loc 8 58 17 view .LVU1251
 4531              	.LBB1205:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4532              		.loc 8 60 9 view .LVU1252
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4533              		.loc 8 60 20 is_stmt 0 view .LVU1253
 4534 00f4 84ED020A 		vstr.32	s0, [r4, #8]
 4535              		.loc 8 61 9 is_stmt 1 view .LVU1254
 4536              		.loc 8 61 34 is_stmt 0 view .LVU1255
 4537 00f8 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 4538              	.LVL230:
 4539              		.loc 8 61 34 view .LVU1256
 4540              	.LBE1205:
 4541              	.LBE1208:
1427:Veno-Echo.cpp ****         }
 4542              		.loc 20 1427 33 view .LVU1257
 4543 00fc 114B     		ldr	r3, .L272+56
 4544              	.LBB1209:
 4545              	.LBB1206:
 4546              		.loc 8 61 20 view .LVU1258
 4547 00fe 84ED060A 		vstr.32	s0, [r4, #24]
 4548              	.LVL231:
 4549              		.loc 8 61 20 view .LVU1259
 4550              	.LBE1206:
 4551              	.LBE1209:
1427:Veno-Echo.cpp ****         }
 4552              		.loc 20 1427 13 is_stmt 1 view .LVU1260
1427:Veno-Echo.cpp ****         }
 4553              		.loc 20 1427 33 is_stmt 0 view .LVU1261
 4554 0102 83ED038A 		vstr.32	s16, [r3, #12]
 4555              	.LBE1201:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 183


 4556              	.LBE1200:
 4557              	.LBE1211:
 4558              	.LBE1215:
1430:Veno-Echo.cpp **** 
 4559              		.loc 20 1430 1 view .LVU1262
 4560 0106 BDEC028B 		vldm	sp!, {d8}
 4561              		.cfi_restore 80
 4562              		.cfi_restore 81
 4563              		.cfi_def_cfa_offset 8
 4564              	.LVL232:
1430:Veno-Echo.cpp **** 
 4565              		.loc 20 1430 1 view .LVU1263
 4566 010a 10BD     		pop	{r4, pc}
 4567              	.L273:
 4568              		.align	2
 4569              	.L272:
 4570 010c 18000000 		.word	.LANCHOR4+24
 4571 0110 00000000 		.word	.LANCHOR7
 4572 0114 00000000 		.word	.LANCHOR68
 4573 0118 00000000 		.word	.LANCHOR69
 4574 011c 00000000 		.word	.LANCHOR70
 4575 0120 00000000 		.word	.LANCHOR74
 4576 0124 00000000 		.word	0
 4577 0128 00000000 		.word	.LANCHOR71
 4578 012c 6F12033D 		.word	1023611503
 4579 0130 00000000 		.word	.LANCHOR72
 4580 0134 00000000 		.word	.LANCHOR73
 4581 0138 0AD7A33B 		.word	1000593162
 4582 013c 00000000 		.word	.LANCHOR75
 4583 0140 CDCCCC3D 		.word	1036831949
 4584 0144 00000000 		.word	.LANCHOR16
 4585              		.cfi_endproc
 4586              	.LFE4323:
 4588              		.section	.text._Z18Update_filterXfadev,"ax",%progbits
 4589              		.align	1
 4590              		.p2align 2,,3
 4591              		.global	_Z18Update_filterXfadev
 4592              		.syntax unified
 4593              		.thumb
 4594              		.thumb_func
 4595              		.fpu fpv5-d16
 4597              	_Z18Update_filterXfadev:
 4598              	.LFB4324:
1433:Veno-Echo.cpp ****     static bool lastShift{};
 4599              		.loc 20 1433 1 is_stmt 1 view -0
 4600              		.cfi_startproc
 4601              		@ args = 0, pretend = 0, frame = 0
 4602              		@ frame_needed = 0, uses_anonymous_args = 0
1434:Veno-Echo.cpp ****     static bool filterXfade_pickup{};
 4603              		.loc 20 1434 5 view .LVU1265
1435:Veno-Echo.cpp ****     static bool PostFilters_pickup{};
 4604              		.loc 20 1435 5 view .LVU1266
1436:Veno-Echo.cpp **** 
 4605              		.loc 20 1436 5 view .LVU1267
1438:Veno-Echo.cpp **** 
 4606              		.loc 20 1438 5 view .LVU1268
1441:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 184


 4607              		.loc 20 1441 5 view .LVU1269
1441:Veno-Echo.cpp **** 
 4608              		.loc 20 1441 45 is_stmt 0 view .LVU1270
 4609 0000 0322     		movs	r2, #3
 4610 0002 0721     		movs	r1, #7
 4611 0004 4248     		ldr	r0, .L296
1433:Veno-Echo.cpp ****     static bool lastShift{};
 4612              		.loc 20 1433 1 view .LVU1271
 4613 0006 10B5     		push	{r4, lr}
 4614              		.cfi_def_cfa_offset 8
 4615              		.cfi_offset 4, -8
 4616              		.cfi_offset 14, -4
 4617 0008 2DED028B 		vpush.64	{d8}
 4618              		.cfi_def_cfa_offset 16
 4619              		.cfi_offset 80, -16
 4620              		.cfi_offset 81, -12
1441:Veno-Echo.cpp **** 
 4621              		.loc 20 1441 45 view .LVU1272
 4622 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 4623              	.LVL233:
 4624              	.LBB1216:
1443:Veno-Echo.cpp ****     {   
 4625              		.loc 20 1443 9 view .LVU1273
 4626 0010 404B     		ldr	r3, .L296+4
 4627              	.LBE1216:
1441:Veno-Echo.cpp **** 
 4628              		.loc 20 1441 45 view .LVU1274
 4629 0012 B0EE408A 		vmov.f32	s16, s0
 4630              	.LVL234:
1443:Veno-Echo.cpp ****     {   
 4631              		.loc 20 1443 5 is_stmt 1 view .LVU1275
 4632              	.LBB1236:
 4633              	.LBB1217:
1447:Veno-Echo.cpp ****         {
 4634              		.loc 20 1447 19 is_stmt 0 view .LVU1276
 4635 0016 404A     		ldr	r2, .L296+8
 4636              	.LBE1217:
1443:Veno-Echo.cpp ****     {   
 4637              		.loc 20 1443 5 view .LVU1277
 4638 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4639 001a FBB9     		cbnz	r3, .L275
 4640              	.LBB1226:
1445:Veno-Echo.cpp ****         //update pickup
 4641              		.loc 20 1445 9 is_stmt 1 view .LVU1278
1447:Veno-Echo.cpp ****         {
 4642              		.loc 20 1447 9 view .LVU1279
 4643 001c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4644 001e 49B3     		cbz	r1, .L276
1449:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
 4645              		.loc 20 1449 13 view .LVU1280
1450:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4646              		.loc 20 1450 32 is_stmt 0 view .LVU1281
 4647 0020 3E48     		ldr	r0, .L296+12
1451:Veno-Echo.cpp ****         }
 4648              		.loc 20 1451 29 view .LVU1282
 4649 0022 3F49     		ldr	r1, .L296+16
1449:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 185


 4650              		.loc 20 1449 23 view .LVU1283
 4651 0024 1370     		strb	r3, [r2]
1450:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4652              		.loc 20 1450 13 is_stmt 1 view .LVU1284
1450:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4653              		.loc 20 1450 32 is_stmt 0 view .LVU1285
 4654 0026 0370     		strb	r3, [r0]
1451:Veno-Echo.cpp ****         }
 4655              		.loc 20 1451 13 is_stmt 1 view .LVU1286
1451:Veno-Echo.cpp ****         }
 4656              		.loc 20 1451 29 is_stmt 0 view .LVU1287
 4657 0028 81ED000A 		vstr.32	s0, [r1]
 4658              	.L277:
1465:Veno-Echo.cpp **** 
 4659              		.loc 20 1465 9 is_stmt 1 view .LVU1288
 4660              	.LVL235:
1467:Veno-Echo.cpp ****         {
 4661              		.loc 20 1467 9 view .LVU1289
1475:Veno-Echo.cpp ****         }
 4662              		.loc 20 1475 13 view .LVU1290
1475:Veno-Echo.cpp ****         }
 4663              		.loc 20 1475 38 is_stmt 0 view .LVU1291
 4664 002c 3D4B     		ldr	r3, .L296+20
 4665 002e B7EE001A 		vmov.f32	s2, #1.0e+0
 4666 0032 0120     		movs	r0, #1
 4667 0034 DFED3C0A 		vldr.32	s1, .L296+24
 4668 0038 93ED000A 		vldr.32	s0, [r3]
 4669              	.LVL236:
1475:Veno-Echo.cpp ****         }
 4670              		.loc 20 1475 38 view .LVU1292
 4671 003c FFF7FEFF 		bl	_Z5scalefff9CurveType
 4672              	.LVL237:
 4673              	.L287:
1478:Veno-Echo.cpp ****     }
 4674              		.loc 20 1478 9 is_stmt 1 view .LVU1293
 4675              	.LBB1218:
 4676              	.LBI1218:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4677              		.loc 23 135 13 view .LVU1294
 4678              	.LBB1219:
 4679              		.loc 23 137 5 view .LVU1295
 4680              		.loc 23 137 9 is_stmt 0 view .LVU1296
 4681 0040 3A4B     		ldr	r3, .L296+28
 4682 0042 9FED3B7A 		vldr.32	s14, .L296+32
 4683 0046 D3ED007A 		vldr.32	s15, [r3]
 4684              		.loc 23 137 24 view .LVU1297
 4685 004a 30EE670A 		vsub.f32	s0, s0, s15
 4686              	.LVL238:
 4687              		.loc 23 137 24 view .LVU1298
 4688              	.LBE1219:
 4689              	.LBE1218:
 4690              	.LBE1226:
 4691              	.LBE1236:
1520:Veno-Echo.cpp **** 
 4692              		.loc 20 1520 1 view .LVU1299
 4693 004e BDEC028B 		vldm	sp!, {d8}
 4694              		.cfi_remember_state
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 186


 4695              		.cfi_restore 80
 4696              		.cfi_restore 81
 4697              		.cfi_def_cfa_offset 8
 4698              	.LVL239:
 4699              	.LBB1237:
 4700              	.LBB1227:
 4701              	.LBB1221:
 4702              	.LBB1220:
 4703              		.loc 23 137 9 view .LVU1300
 4704 0052 E0EE077A 		vfma.f32	s15, s0, s14
 4705 0056 C3ED007A 		vstr.32	s15, [r3]
 4706              	.LBE1220:
 4707              	.LBE1221:
 4708              	.LBE1227:
 4709              	.LBE1237:
1520:Veno-Echo.cpp **** 
 4710              		.loc 20 1520 1 view .LVU1301
 4711 005a 10BD     		pop	{r4, pc}
 4712              	.LVL240:
 4713              	.L275:
 4714              		.cfi_restore_state
 4715              	.LBB1238:
 4716              	.LBB1228:
1483:Veno-Echo.cpp **** 
 4717              		.loc 20 1483 9 is_stmt 1 view .LVU1302
1485:Veno-Echo.cpp ****         {
 4718              		.loc 20 1485 9 view .LVU1303
 4719 005c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4720 005e 4BBB     		cbnz	r3, .L281
1487:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4721              		.loc 20 1487 13 view .LVU1304
1487:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4722              		.loc 20 1487 23 is_stmt 0 view .LVU1305
 4723 0060 0124     		movs	r4, #1
1488:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4724              		.loc 20 1488 32 view .LVU1306
 4725 0062 3448     		ldr	r0, .L296+36
1489:Veno-Echo.cpp ****         }
 4726              		.loc 20 1489 29 view .LVU1307
 4727 0064 3449     		ldr	r1, .L296+40
1487:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4728              		.loc 20 1487 23 view .LVU1308
 4729 0066 1470     		strb	r4, [r2]
1488:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4730              		.loc 20 1488 13 is_stmt 1 view .LVU1309
1488:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4731              		.loc 20 1488 32 is_stmt 0 view .LVU1310
 4732 0068 0370     		strb	r3, [r0]
1489:Veno-Echo.cpp ****         }
 4733              		.loc 20 1489 13 is_stmt 1 view .LVU1311
1489:Veno-Echo.cpp ****         }
 4734              		.loc 20 1489 29 is_stmt 0 view .LVU1312
 4735 006a 81ED000A 		vstr.32	s0, [r1]
 4736              	.L274:
1489:Veno-Echo.cpp ****         }
 4737              		.loc 20 1489 29 view .LVU1313
 4738              	.LBE1228:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 187


 4739              	.LBE1238:
1520:Veno-Echo.cpp **** 
 4740              		.loc 20 1520 1 view .LVU1314
 4741 006e BDEC028B 		vldm	sp!, {d8}
 4742              		.cfi_remember_state
 4743              		.cfi_restore 80
 4744              		.cfi_restore 81
 4745              		.cfi_def_cfa_offset 8
 4746 0072 10BD     		pop	{r4, pc}
 4747              	.L276:
 4748              		.cfi_restore_state
 4749              	.LBB1239:
 4750              	.LBB1233:
1456:Veno-Echo.cpp ****             {
 4751              		.loc 20 1456 13 is_stmt 1 view .LVU1315
1456:Veno-Echo.cpp ****             {
 4752              		.loc 20 1456 16 is_stmt 0 view .LVU1316
 4753 0074 294B     		ldr	r3, .L296+12
1456:Veno-Echo.cpp ****             {
 4754              		.loc 20 1456 13 view .LVU1317
 4755 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4756 0078 7AB9     		cbnz	r2, .L278
1458:Veno-Echo.cpp ****                 {
 4757              		.loc 20 1458 17 is_stmt 1 view .LVU1318
 4758              	.LVL241:
 4759              	.LBB1222:
 4760              	.LBI1222:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4761              		.loc 21 75 3 view .LVU1319
 4762              	.LBB1223:
 4763              		.loc 21 76 5 view .LVU1320
 4764              		.loc 21 76 5 is_stmt 0 view .LVU1321
 4765              	.LBE1223:
 4766              	.LBE1222:
1458:Veno-Echo.cpp ****                 {
 4767              		.loc 20 1458 23 view .LVU1322
 4768 007a 294A     		ldr	r2, .L296+16
1458:Veno-Echo.cpp ****                 {
 4769              		.loc 20 1458 17 view .LVU1323
 4770 007c 9FED2F7A 		vldr.32	s14, .L296+44
1458:Veno-Echo.cpp ****                 {
 4771              		.loc 20 1458 23 view .LVU1324
 4772 0080 D2ED007A 		vldr.32	s15, [r2]
 4773 0084 70EE677A 		vsub.f32	s15, s0, s15
 4774              	.LBB1225:
 4775              	.LBB1224:
 4776              		.loc 21 76 31 view .LVU1325
 4777 0088 F0EEE77A 		vabs.f32	s15, s15
 4778              	.LBE1224:
 4779              	.LBE1225:
1458:Veno-Echo.cpp ****                 {
 4780              		.loc 20 1458 17 view .LVU1326
 4781 008c F4EEC77A 		vcmpe.f32	s15, s14
 4782 0090 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4783 0094 CADD     		ble	.L277
1460:Veno-Echo.cpp ****                 }
 4784              		.loc 20 1460 21 is_stmt 1 view .LVU1327
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 188


1460:Veno-Echo.cpp ****                 }
 4785              		.loc 20 1460 40 is_stmt 0 view .LVU1328
 4786 0096 0122     		movs	r2, #1
 4787 0098 1A70     		strb	r2, [r3]
 4788              	.L278:
1465:Veno-Echo.cpp **** 
 4789              		.loc 20 1465 9 is_stmt 1 view .LVU1329
 4790              	.LVL242:
1467:Veno-Echo.cpp ****         {
 4791              		.loc 20 1467 9 view .LVU1330
1469:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 4792              		.loc 20 1469 13 view .LVU1331
1469:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 4793              		.loc 20 1469 38 is_stmt 0 view .LVU1332
 4794 009a B7EE001A 		vmov.f32	s2, #1.0e+0
 4795 009e 0120     		movs	r0, #1
 4796 00a0 B0EE480A 		vmov.f32	s0, s16
 4797              	.LVL243:
1469:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 4798              		.loc 20 1469 38 view .LVU1333
 4799 00a4 DFED200A 		vldr.32	s1, .L296+24
 4800 00a8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4801              	.LVL244:
1470:Veno-Echo.cpp ****         }
 4802              		.loc 20 1470 30 view .LVU1334
 4803 00ac 1D4B     		ldr	r3, .L296+20
 4804              	.LVL245:
1470:Veno-Echo.cpp ****         }
 4805              		.loc 20 1470 13 is_stmt 1 view .LVU1335
1470:Veno-Echo.cpp ****         }
 4806              		.loc 20 1470 30 is_stmt 0 view .LVU1336
 4807 00ae 83ED008A 		vstr.32	s16, [r3]
 4808 00b2 C5E7     		b	.L287
 4809              	.LVL246:
 4810              	.L281:
1470:Veno-Echo.cpp ****         }
 4811              		.loc 20 1470 30 view .LVU1337
 4812              	.LBE1233:
 4813              	.LBB1234:
1494:Veno-Echo.cpp ****             {
 4814              		.loc 20 1494 13 is_stmt 1 view .LVU1338
1494:Veno-Echo.cpp ****             {
 4815              		.loc 20 1494 16 is_stmt 0 view .LVU1339
 4816 00b4 1F4B     		ldr	r3, .L296+36
1494:Veno-Echo.cpp ****             {
 4817              		.loc 20 1494 13 view .LVU1340
 4818 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4819 00b8 7AB9     		cbnz	r2, .L283
1496:Veno-Echo.cpp ****                 {
 4820              		.loc 20 1496 17 is_stmt 1 view .LVU1341
 4821              	.LVL247:
 4822              	.LBB1229:
 4823              	.LBI1229:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4824              		.loc 21 75 3 view .LVU1342
 4825              	.LBB1230:
 4826              		.loc 21 76 5 view .LVU1343
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 189


 4827              		.loc 21 76 5 is_stmt 0 view .LVU1344
 4828              	.LBE1230:
 4829              	.LBE1229:
1496:Veno-Echo.cpp ****                 {
 4830              		.loc 20 1496 23 view .LVU1345
 4831 00ba 1F4A     		ldr	r2, .L296+40
1496:Veno-Echo.cpp ****                 {
 4832              		.loc 20 1496 17 view .LVU1346
 4833 00bc 9FED1F7A 		vldr.32	s14, .L296+44
1496:Veno-Echo.cpp ****                 {
 4834              		.loc 20 1496 23 view .LVU1347
 4835 00c0 D2ED007A 		vldr.32	s15, [r2]
 4836 00c4 70EE677A 		vsub.f32	s15, s0, s15
 4837              	.LBB1232:
 4838              	.LBB1231:
 4839              		.loc 21 76 31 view .LVU1348
 4840 00c8 F0EEE77A 		vabs.f32	s15, s15
 4841              	.LBE1231:
 4842              	.LBE1232:
1496:Veno-Echo.cpp ****                 {
 4843              		.loc 20 1496 17 view .LVU1349
 4844 00cc F4EEC77A 		vcmpe.f32	s15, s14
 4845 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4846 00d4 CBDD     		ble	.L274
1498:Veno-Echo.cpp ****                 }
 4847              		.loc 20 1498 21 is_stmt 1 view .LVU1350
1498:Veno-Echo.cpp ****                 }
 4848              		.loc 20 1498 40 is_stmt 0 view .LVU1351
 4849 00d6 0122     		movs	r2, #1
 4850 00d8 1A70     		strb	r2, [r3]
 4851              	.L283:
1503:Veno-Echo.cpp ****         {
 4852              		.loc 20 1503 9 is_stmt 1 view .LVU1352
1505:Veno-Echo.cpp ****             {
 4853              		.loc 20 1505 13 view .LVU1353
 4854 00da DFED197A 		vldr.32	s15, .L296+48
 4855 00de B4EEE78A 		vcmpe.f32	s16, s15
 4856 00e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4857 00e6 08D5     		bpl	.L295
1507:Veno-Echo.cpp ****             }
 4858              		.loc 20 1507 17 view .LVU1354
1507:Veno-Echo.cpp ****             }
 4859              		.loc 20 1507 29 is_stmt 0 view .LVU1355
 4860 00e8 164B     		ldr	r3, .L296+52
 4861 00ea 0022     		movs	r2, #0
 4862 00ec 1A70     		strb	r2, [r3]
 4863              	.L285:
1517:Veno-Echo.cpp ****         }  
 4864              		.loc 20 1517 13 is_stmt 1 view .LVU1356
1517:Veno-Echo.cpp ****         }  
 4865              		.loc 20 1517 39 is_stmt 0 view .LVU1357
 4866 00ee 164B     		ldr	r3, .L296+56
 4867 00f0 83ED078A 		vstr.32	s16, [r3, #28]
 4868              	.LBE1234:
 4869              	.LBE1239:
1520:Veno-Echo.cpp **** 
 4870              		.loc 20 1520 1 view .LVU1358
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 190


 4871 00f4 BDEC028B 		vldm	sp!, {d8}
 4872              		.cfi_remember_state
 4873              		.cfi_restore 80
 4874              		.cfi_restore 81
 4875              		.cfi_def_cfa_offset 8
 4876 00f8 10BD     		pop	{r4, pc}
 4877              	.L295:
 4878              		.cfi_restore_state
 4879              	.LBB1240:
 4880              	.LBB1235:
1509:Veno-Echo.cpp ****             {
 4881              		.loc 20 1509 18 is_stmt 1 view .LVU1359
 4882 00fa DFED147A 		vldr.32	s15, .L296+60
 4883 00fe B4EEE78A 		vcmpe.f32	s16, s15
 4884 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4885 0106 F2DD     		ble	.L285
1511:Veno-Echo.cpp ****             }
 4886              		.loc 20 1511 17 view .LVU1360
1511:Veno-Echo.cpp ****             }
 4887              		.loc 20 1511 29 is_stmt 0 view .LVU1361
 4888 0108 0E4B     		ldr	r3, .L296+52
 4889 010a 0122     		movs	r2, #1
 4890 010c 1A70     		strb	r2, [r3]
 4891 010e EEE7     		b	.L285
 4892              	.L297:
 4893              		.align	2
 4894              	.L296:
 4895 0110 18000000 		.word	.LANCHOR4+24
 4896 0114 00000000 		.word	.LANCHOR7
 4897 0118 00000000 		.word	.LANCHOR76
 4898 011c 00000000 		.word	.LANCHOR77
 4899 0120 00000000 		.word	.LANCHOR78
 4900 0124 00000000 		.word	.LANCHOR83
 4901 0128 00000000 		.word	0
 4902 012c 00000000 		.word	.LANCHOR79
 4903 0130 6F12033D 		.word	1023611503
 4904 0134 00000000 		.word	.LANCHOR80
 4905 0138 00000000 		.word	.LANCHOR81
 4906 013c 0AD7A33B 		.word	1000593162
 4907 0140 6666E63E 		.word	1055286886
 4908 0144 00000000 		.word	.LANCHOR82
 4909 0148 00000000 		.word	.LANCHOR16
 4910 014c CDCC0C3F 		.word	1057803469
 4911              	.LBE1235:
 4912              	.LBE1240:
 4913              		.cfi_endproc
 4914              	.LFE4324:
 4916              		.section	.text._Z8GetModCVv,"ax",%progbits
 4917              		.align	1
 4918              		.p2align 2,,3
 4919              		.global	_Z8GetModCVv
 4920              		.syntax unified
 4921              		.thumb
 4922              		.thumb_func
 4923              		.fpu fpv5-d16
 4925              	_Z8GetModCVv:
 4926              	.LFB4325:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 191


1523:Veno-Echo.cpp ****     //get modulation CV input
 4927              		.loc 20 1523 1 is_stmt 1 view -0
 4928              		.cfi_startproc
 4929              		@ args = 0, pretend = 0, frame = 0
 4930              		@ frame_needed = 0, uses_anonymous_args = 0
1525:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 4931              		.loc 20 1525 5 view .LVU1363
1523:Veno-Echo.cpp ****     //get modulation CV input
 4932              		.loc 20 1523 1 is_stmt 0 view .LVU1364
 4933 0000 08B5     		push	{r3, lr}
 4934              		.cfi_def_cfa_offset 8
 4935              		.cfi_offset 3, -8
 4936              		.cfi_offset 14, -4
1525:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 4937              		.loc 20 1525 30 view .LVU1365
 4938 0002 0621     		movs	r1, #6
 4939 0004 0648     		ldr	r0, .L300
 4940 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 4941              	.LVL248:
 4942 000a 0020     		movs	r0, #0
 4943 000c 9FED051A 		vldr.32	s2, .L300+4
 4944 0010 DFED050A 		vldr.32	s1, .L300+8
 4945 0014 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4946              	.LVL249:
1525:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 4947              		.loc 20 1525 23 view .LVU1366
 4948 0018 044B     		ldr	r3, .L300+12
 4949 001a 83ED000A 		vstr.32	s0, [r3]
1527:Veno-Echo.cpp **** 
 4950              		.loc 20 1527 1 view .LVU1367
 4951 001e 08BD     		pop	{r3, pc}
 4952              	.L301:
 4953              		.align	2
 4954              	.L300:
 4955 0020 18000000 		.word	.LANCHOR4+24
 4956 0024 00004843 		.word	1128792064
 4957 0028 000048C3 		.word	3276275712
 4958 002c 00000000 		.word	.LANCHOR84
 4959              		.cfi_endproc
 4960              	.LFE4325:
 4962              		.section	.text._Z10Update_Modv,"ax",%progbits
 4963              		.align	1
 4964              		.p2align 2,,3
 4965              		.global	_Z10Update_Modv
 4966              		.syntax unified
 4967              		.thumb
 4968              		.thumb_func
 4969              		.fpu fpv5-d16
 4971              	_Z10Update_Modv:
 4972              	.LFB4326:
1530:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 4973              		.loc 20 1530 1 is_stmt 1 view -0
 4974              		.cfi_startproc
 4975              		@ args = 0, pretend = 0, frame = 0
 4976              		@ frame_needed = 0, uses_anonymous_args = 0
1531:Veno-Echo.cpp ****     static float modulation_CV{};
 4977              		.loc 20 1531 5 view .LVU1369
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 192


1532:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
 4978              		.loc 20 1532 5 view .LVU1370
1533:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 4979              		.loc 20 1533 5 view .LVU1371
 4980              	.LVL250:
 4981              	.LBB1241:
 4982              	.LBI1241:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4983              		.loc 23 135 13 view .LVU1372
 4984              	.LBB1242:
 4985              		.loc 23 137 5 view .LVU1373
 4986              	.LBE1242:
 4987              	.LBE1241:
1530:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 4988              		.loc 20 1530 1 is_stmt 0 view .LVU1374
 4989 0000 38B5     		push	{r3, r4, r5, lr}
 4990              		.cfi_def_cfa_offset 16
 4991              		.cfi_offset 3, -16
 4992              		.cfi_offset 4, -12
 4993              		.cfi_offset 5, -8
 4994              		.cfi_offset 14, -4
1533:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 4995              		.loc 20 1533 13 view .LVU1375
 4996 0002 154A     		ldr	r2, .L304
 4997              	.LBB1249:
 4998              	.LBB1243:
 4999              		.loc 23 137 9 view .LVU1376
 5000 0004 154C     		ldr	r4, .L304+4
 5001              	.LBE1243:
 5002              	.LBE1249:
 5003              	.LBB1250:
 5004              	.LBB1251:
 5005 0006 164D     		ldr	r5, .L304+8
 5006              	.LBE1251:
 5007              	.LBE1250:
1534:Veno-Echo.cpp ****     //calculate InternalMod
 5008              		.loc 20 1534 13 view .LVU1377
 5009 0008 164B     		ldr	r3, .L304+12
 5010              	.LBB1257:
 5011              	.LBB1244:
 5012              		.loc 23 137 9 view .LVU1378
 5013 000a 94ED007A 		vldr.32	s14, [r4]
 5014              	.LBE1244:
 5015              	.LBE1257:
 5016              	.LBB1258:
 5017              	.LBB1252:
 5018 000e D5ED007A 		vldr.32	s15, [r5]
 5019              	.LBE1252:
 5020              	.LBE1258:
 5021              	.LBB1259:
 5022              	.LBB1245:
 5023              		.loc 23 137 24 view .LVU1379
 5024 0012 92ED006A 		vldr.32	s12, [r2]
 5025              	.LBE1245:
 5026              	.LBE1259:
 5027              	.LBB1260:
 5028              	.LBB1253:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 193


 5029 0016 D3ED006A 		vldr.32	s13, [r3]
 5030              	.LBE1253:
 5031              	.LBE1260:
 5032              	.LBB1261:
 5033              	.LBB1246:
 5034 001a 36EE476A 		vsub.f32	s12, s12, s14
 5035              		.loc 23 137 9 view .LVU1380
 5036 001e DFED125A 		vldr.32	s11, .L304+16
 5037              	.LBE1246:
 5038              	.LBE1261:
 5039              	.LBB1262:
 5040              	.LBB1254:
 5041              		.loc 23 137 24 view .LVU1381
 5042 0022 76EEE76A 		vsub.f32	s13, s13, s15
 5043              	.LBE1254:
 5044              	.LBE1262:
1536:Veno-Echo.cpp ****     //apply modulation to delay lines
 5045              		.loc 20 1536 34 view .LVU1382
 5046 0026 1148     		ldr	r0, .L304+20
 5047              	.LBB1263:
 5048              	.LBB1247:
 5049              		.loc 23 137 9 view .LVU1383
 5050 0028 A6EE257A 		vfma.f32	s14, s12, s11
 5051              	.LBE1247:
 5052              	.LBE1263:
 5053              	.LBB1264:
 5054              	.LBB1255:
 5055 002c E6EEA57A 		vfma.f32	s15, s13, s11
 5056              	.LBE1255:
 5057              	.LBE1264:
 5058              	.LBB1265:
 5059              	.LBB1248:
 5060 0030 84ED007A 		vstr.32	s14, [r4]
 5061              	.LVL251:
 5062              		.loc 23 137 9 view .LVU1384
 5063              	.LBE1248:
 5064              	.LBE1265:
1534:Veno-Echo.cpp ****     //calculate InternalMod
 5065              		.loc 20 1534 5 is_stmt 1 view .LVU1385
 5066              	.LBB1266:
 5067              	.LBI1250:
 135:../DaisySP/Source/Utility/dsp.h **** {
 5068              		.loc 23 135 13 view .LVU1386
 5069              	.LBB1256:
 5070              		.loc 23 137 5 view .LVU1387
 5071              		.loc 23 137 9 is_stmt 0 view .LVU1388
 5072 0034 C5ED007A 		vstr.32	s15, [r5]
 5073              	.LVL252:
 5074              		.loc 23 137 9 view .LVU1389
 5075              	.LBE1256:
 5076              	.LBE1266:
1536:Veno-Echo.cpp ****     //apply modulation to delay lines
 5077              		.loc 20 1536 5 is_stmt 1 view .LVU1390
1536:Veno-Echo.cpp ****     //apply modulation to delay lines
 5078              		.loc 20 1536 34 is_stmt 0 view .LVU1391
 5079 0038 FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 5080              	.LVL253:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 194


1538:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5081              		.loc 20 1538 5 is_stmt 1 view .LVU1392
1538:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5082              		.loc 20 1538 40 is_stmt 0 view .LVU1393
 5083 003c 95ED007A 		vldr.32	s14, [r5]
 5084 0040 D4ED007A 		vldr.32	s15, [r4]
 5085              	.LBB1267:
 5086              	.LBB1268:
  51:DelayMulti.h  **** 
  52:DelayMulti.h  **** //functions:
  53:DelayMulti.h  **** 
  54:DelayMulti.h  **** //initialises delay class
  55:DelayMulti.h  **** void init(dsy_gpio_pin ledpin, float samplerate);
  56:DelayMulti.h  **** 
  57:DelayMulti.h  **** //Updates delay time from pot value and base tempo (set ratio)
  58:DelayMulti.h  **** bool SetDelayTime(float delaytime_pot, float baseTempo, bool syncMode);
  59:DelayMulti.h  **** 
  60:DelayMulti.h  **** //Updates xfades, updates delayline with delayTime[] + modulation and 
  61:DelayMulti.h  **** //returns combined output from delay heads, and updates LEDs. 
  62:DelayMulti.h  **** //Call at audio samplerate
  63:DelayMulti.h  **** const float& GetOutput();
  64:DelayMulti.h  **** 
  65:DelayMulti.h  **** //Writes to delayline
  66:DelayMulti.h  **** void Write(const float& in);
  67:DelayMulti.h  **** 
  68:DelayMulti.h  **** //this must be called once per sample
  69:DelayMulti.h  **** void SetModulation(const float& mod){mod_ = mod;}
 5087              		.loc 17 69 43 view .LVU1394
 5088 0044 0A4A     		ldr	r2, .L304+24
 5089              	.LBE1268:
 5090              	.LBE1267:
1538:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5091              		.loc 20 1538 40 view .LVU1395
 5092 0046 E0EE077A 		vfma.f32	s15, s0, s14
 5093              	.LBB1271:
 5094              	.LBI1267:
 5095              		.loc 17 69 6 is_stmt 1 view .LVU1396
 5096              	.LVL254:
 5097              	.LBB1269:
 5098              		.loc 17 69 38 view .LVU1397
 5099              	.LBE1269:
 5100              	.LBE1271:
 5101              	.LBB1272:
 5102              	.LBB1273:
 5103              		.loc 17 69 43 is_stmt 0 view .LVU1398
 5104 004a 0A4B     		ldr	r3, .L304+28
 5105              	.LBE1273:
 5106              	.LBE1272:
 5107              	.LBB1275:
 5108              	.LBB1270:
 5109 004c C2ED3F7A 		vstr.32	s15, [r2, #252]
 5110              	.LBE1270:
 5111              	.LBE1275:
1539:Veno-Echo.cpp **** }
 5112              		.loc 20 1539 5 is_stmt 1 view .LVU1399
 5113              	.LVL255:
 5114              	.LBB1276:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 195


 5115              	.LBI1272:
 5116              		.loc 17 69 6 view .LVU1400
 5117              	.LBB1274:
 5118              		.loc 17 69 38 view .LVU1401
 5119              		.loc 17 69 43 is_stmt 0 view .LVU1402
 5120 0050 C3ED3F7A 		vstr.32	s15, [r3, #252]
 5121              	.LBE1274:
 5122              	.LBE1276:
1540:Veno-Echo.cpp **** 
 5123              		.loc 20 1540 1 view .LVU1403
 5124 0054 38BD     		pop	{r3, r4, r5, pc}
 5125              	.L305:
 5126 0056 00BF     		.align	2
 5127              	.L304:
 5128 0058 00000000 		.word	.LANCHOR84
 5129 005c 00000000 		.word	.LANCHOR85
 5130 0060 00000000 		.word	.LANCHOR86
 5131 0064 00000000 		.word	.LANCHOR67
 5132 0068 0AD7233C 		.word	1008981770
 5133 006c 00000000 		.word	.LANCHOR75
 5134 0070 00000000 		.word	.LANCHOR0
 5135 0074 00000000 		.word	.LANCHOR1
 5136              		.cfi_endproc
 5137              	.LFE4326:
 5139              		.section	.text._Z11UpdateClockv,"ax",%progbits
 5140              		.align	1
 5141              		.p2align 2,,3
 5142              		.global	_Z11UpdateClockv
 5143              		.syntax unified
 5144              		.thumb
 5145              		.thumb_func
 5146              		.fpu fpv5-d16
 5148              	_Z11UpdateClockv:
 5149              	.LFB4327:
1543:Veno-Echo.cpp ****     static int divCounter{};
 5150              		.loc 20 1543 1 is_stmt 1 view -0
 5151              		.cfi_startproc
 5152              		@ args = 0, pretend = 0, frame = 0
 5153              		@ frame_needed = 0, uses_anonymous_args = 0
1544:Veno-Echo.cpp ****     ClockIn.Debounce();
 5154              		.loc 20 1544 5 view .LVU1405
1545:Veno-Echo.cpp **** 
 5155              		.loc 20 1545 5 view .LVU1406
1543:Veno-Echo.cpp ****     static int divCounter{};
 5156              		.loc 20 1543 1 is_stmt 0 view .LVU1407
 5157 0000 10B5     		push	{r4, lr}
 5158              		.cfi_def_cfa_offset 8
 5159              		.cfi_offset 4, -8
 5160              		.cfi_offset 14, -4
1545:Veno-Echo.cpp **** 
 5161              		.loc 20 1545 21 view .LVU1408
 5162 0002 0A4C     		ldr	r4, .L315
 5163 0004 2046     		mov	r0, r4
 5164 0006 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 5165              	.LVL256:
1548:Veno-Echo.cpp ****     {   
 5166              		.loc 20 1548 5 is_stmt 1 view .LVU1409
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 196


  42:../libdaisy/src/hid/switch.h **** 
  43:../libdaisy/src/hid/switch.h ****     /** 
  44:../libdaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  45:../libdaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  46:../libdaisy/src/hid/switch.h ****     \param update_rate the rate at which the Debounce() function will be called. (used for timing).
  47:../libdaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  48:../libdaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  49:../libdaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  50:../libdaisy/src/hid/switch.h ****     */
  51:../libdaisy/src/hid/switch.h ****     void
  52:../libdaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  53:../libdaisy/src/hid/switch.h **** 
  54:../libdaisy/src/hid/switch.h ****     /**
  55:../libdaisy/src/hid/switch.h ****        Simplified Init.
  56:../libdaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  57:../libdaisy/src/hid/switch.h ****        \param update_rate the rate at which the Debounce() function will be called. (used for timin
  58:../libdaisy/src/hid/switch.h ****     */
  59:../libdaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate);
  60:../libdaisy/src/hid/switch.h **** 
  61:../libdaisy/src/hid/switch.h ****     /** 
  62:../libdaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  63:../libdaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  64:../libdaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  65:../libdaisy/src/hid/switch.h ****     */
  66:../libdaisy/src/hid/switch.h ****     void Debounce();
  67:../libdaisy/src/hid/switch.h **** 
  68:../libdaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  69:../libdaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return state_ == 0x7f; }
 5167              		.loc 1 69 38 view .LVU1410
1548:Veno-Echo.cpp ****     {   
 5168              		.loc 20 1548 5 is_stmt 0 view .LVU1411
 5169 000a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 5170 000c 7F2B     		cmp	r3, #127
 5171 000e 00D0     		beq	.L314
 5172              	.L306:
1561:Veno-Echo.cpp **** 
 5173              		.loc 20 1561 1 view .LVU1412
 5174 0010 10BD     		pop	{r4, pc}
 5175              	.L314:
1550:Veno-Echo.cpp ****         //tempoLED_BASE.resetPhase();
 5176              		.loc 20 1550 9 is_stmt 1 view .LVU1413
1552:Veno-Echo.cpp ****         {
 5177              		.loc 20 1552 9 view .LVU1414
1554:Veno-Echo.cpp ****             {
 5178              		.loc 20 1554 13 view .LVU1415
1554:Veno-Echo.cpp ****             {
 5179              		.loc 20 1554 29 is_stmt 0 view .LVU1416
 5180 0012 0748     		ldr	r0, .L315+4
 5181 0014 FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 5182              	.LVL257:
1554:Veno-Echo.cpp ****             {
 5183              		.loc 20 1554 13 view .LVU1417
 5184 0018 0028     		cmp	r0, #0
 5185 001a F9D0     		beq	.L306
 5186              	.LBB1281:
 5187              	.LBI1281:
1542:Veno-Echo.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 197


 5188              		.loc 20 1542 6 is_stmt 1 view .LVU1418
 5189              	.LBB1282:
1556:Veno-Echo.cpp ****             }
 5190              		.loc 20 1556 17 view .LVU1419
1556:Veno-Echo.cpp ****             }
 5191              		.loc 20 1556 39 is_stmt 0 view .LVU1420
 5192 001c 0448     		ldr	r0, .L315+4
 5193 001e FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 5194              	.LVL258:
 5195 0022 0448     		ldr	r0, .L315+8
 5196              	.LBE1282:
 5197              	.LBE1281:
1561:Veno-Echo.cpp **** 
 5198              		.loc 20 1561 1 view .LVU1421
 5199 0024 BDE81040 		pop	{r4, lr}
 5200              		.cfi_restore 14
 5201              		.cfi_restore 4
 5202              		.cfi_def_cfa_offset 0
 5203              	.LBB1284:
 5204              	.LBB1283:
1556:Veno-Echo.cpp ****             }
 5205              		.loc 20 1556 39 view .LVU1422
 5206 0028 FFF7FEBF 		b	_ZN8TempoLED8setTempoEf
 5207              	.LVL259:
 5208              	.L316:
 5209              		.align	2
 5210              	.L315:
 5211 002c 00000000 		.word	.LANCHOR87
 5212 0030 00000000 		.word	.LANCHOR12
 5213 0034 00000000 		.word	.LANCHOR88
 5214              	.LBE1283:
 5215              	.LBE1284:
 5216              		.cfi_endproc
 5217              	.LFE4327:
 5219              		.section	.text._Z21Update_DelayTempoLEDsv,"ax",%progbits
 5220              		.align	1
 5221              		.p2align 2,,3
 5222              		.global	_Z21Update_DelayTempoLEDsv
 5223              		.syntax unified
 5224              		.thumb
 5225              		.thumb_func
 5226              		.fpu fpv5-d16
 5228              	_Z21Update_DelayTempoLEDsv:
 5229              	.LFB4329:
1681:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
 5230              		.loc 20 1681 1 is_stmt 1 view -0
 5231              		.cfi_startproc
 5232              		@ args = 0, pretend = 0, frame = 0
 5233              		@ frame_needed = 0, uses_anonymous_args = 0
1682:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
 5234              		.loc 20 1682 5 view .LVU1424
1681:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
 5235              		.loc 20 1681 1 is_stmt 0 view .LVU1425
 5236 0000 10B5     		push	{r4, lr}
 5237              		.cfi_def_cfa_offset 8
 5238              		.cfi_offset 4, -8
 5239              		.cfi_offset 14, -4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 198


1682:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
 5240              		.loc 20 1682 26 view .LVU1426
 5241 0002 054C     		ldr	r4, .L319
 5242 0004 0548     		ldr	r0, .L319+4
 5243 0006 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 5244 0008 FFF7FEFF 		bl	_ZN10DelayMulti14updateTempoLEDEb
 5245              	.LVL260:
1683:Veno-Echo.cpp **** }
 5246              		.loc 20 1683 5 is_stmt 1 view .LVU1427
1683:Veno-Echo.cpp **** }
 5247              		.loc 20 1683 26 is_stmt 0 view .LVU1428
 5248 000c 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 5249 000e 0448     		ldr	r0, .L319+8
1684:Veno-Echo.cpp **** 
 5250              		.loc 20 1684 1 view .LVU1429
 5251 0010 BDE81040 		pop	{r4, lr}
 5252              		.cfi_restore 14
 5253              		.cfi_restore 4
 5254              		.cfi_def_cfa_offset 0
1683:Veno-Echo.cpp **** }
 5255              		.loc 20 1683 26 view .LVU1430
 5256 0014 FFF7FEBF 		b	_ZN10DelayMulti14updateTempoLEDEb
 5257              	.LVL261:
 5258              	.L320:
 5259              		.align	2
 5260              	.L319:
 5261 0018 00000000 		.word	.LANCHOR13
 5262 001c 00000000 		.word	.LANCHOR0
 5263 0020 00000000 		.word	.LANCHOR1
 5264              		.cfi_endproc
 5265              	.LFE4329:
 5267              		.section	.text._Z19Update_BaseTempoLEDv,"ax",%progbits
 5268              		.align	1
 5269              		.p2align 2,,3
 5270              		.global	_Z19Update_BaseTempoLEDv
 5271              		.syntax unified
 5272              		.thumb
 5273              		.thumb_func
 5274              		.fpu fpv5-d16
 5276              	_Z19Update_BaseTempoLEDv:
 5277              	.LFB4330:
1687:Veno-Echo.cpp ****     tempoLED_BASE.update();
 5278              		.loc 20 1687 1 is_stmt 1 view -0
 5279              		.cfi_startproc
 5280              		@ args = 0, pretend = 0, frame = 0
 5281              		@ frame_needed = 0, uses_anonymous_args = 0
1688:Veno-Echo.cpp **** 
 5282              		.loc 20 1688 5 view .LVU1432
1688:Veno-Echo.cpp **** 
 5283              		.loc 20 1688 25 is_stmt 0 view .LVU1433
 5284 0000 1648     		ldr	r0, .L325
1687:Veno-Echo.cpp ****     tempoLED_BASE.update();
 5285              		.loc 20 1687 1 view .LVU1434
 5286 0002 08B5     		push	{r3, lr}
 5287              		.cfi_def_cfa_offset 8
 5288              		.cfi_offset 3, -8
 5289              		.cfi_offset 14, -4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 199


1688:Veno-Echo.cpp **** 
 5290              		.loc 20 1688 25 view .LVU1435
 5291 0004 FFF7FEFF 		bl	_ZN8TempoLED6updateEv
 5292              	.LVL262:
1690:Veno-Echo.cpp **** 
 5293              		.loc 20 1690 5 is_stmt 1 view .LVU1436
1692:Veno-Echo.cpp ****     {
 5294              		.loc 20 1692 5 view .LVU1437
1692:Veno-Echo.cpp ****     {
 5295              		.loc 20 1692 27 is_stmt 0 view .LVU1438
 5296 0008 1448     		ldr	r0, .L325
 5297 000a FFF7FEFF 		bl	_ZN8TempoLED5isEOCEv
 5298              	.LVL263:
1692:Veno-Echo.cpp ****     {
 5299              		.loc 20 1692 5 view .LVU1439
 5300 000e B8B9     		cbnz	r0, .L322
 5301 0010 134B     		ldr	r3, .L325+4
 5302 0012 1B68     		ldr	r3, [r3]
 5303              	.L323:
1697:Veno-Echo.cpp ****     //update base phase for both delay lines
 5304              		.loc 20 1697 5 is_stmt 1 view .LVU1440
 5305              	.LVL264:
 5306              	.LBB1285:
 5307              	.LBI1285:
  71:LEDs.h        **** 
 5308              		.loc 14 71 7 view .LVU1441
 5309              	.LBB1286:
  71:LEDs.h        **** 
 5310              		.loc 14 71 20 view .LVU1442
  71:LEDs.h        **** 
 5311              		.loc 14 71 20 is_stmt 0 view .LVU1443
 5312              	.LBE1286:
 5313              	.LBE1285:
  17:oscillator_p.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:oscillator_p.h ****     */
  19:oscillator_p.h ****     enum
  20:oscillator_p.h ****     {
  21:oscillator_p.h ****         WAVE_SIN,
  22:oscillator_p.h ****         WAVE_TRI,
  23:oscillator_p.h ****         WAVE_SAW,
  24:oscillator_p.h ****         WAVE_RAMP,
  25:oscillator_p.h ****         WAVE_SQUARE,
  26:oscillator_p.h ****         WAVE_POLYBLEP_TRI,
  27:oscillator_p.h ****         WAVE_POLYBLEP_SAW,
  28:oscillator_p.h ****         WAVE_POLYBLEP_SQUARE,
  29:oscillator_p.h ****         WAVE_LAST,
  30:oscillator_p.h ****     };
  31:oscillator_p.h **** 
  32:oscillator_p.h **** 
  33:oscillator_p.h ****     /** Initializes the Oscillator
  34:oscillator_p.h **** 
  35:oscillator_p.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:oscillator_p.h **** 
  37:oscillator_p.h ****         Defaults:
  38:oscillator_p.h ****         - freq_ = 100 Hz
  39:oscillator_p.h ****         - amp_ = 0.5
  40:oscillator_p.h ****         - waveform_ = sine wave.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 200


  41:oscillator_p.h ****     */
  42:oscillator_p.h ****     void Init(float sample_rate)
  43:oscillator_p.h ****     {
  44:oscillator_p.h ****         sr_        = sample_rate;
  45:oscillator_p.h ****         sr_recip_  = 1.0f / sample_rate;
  46:oscillator_p.h ****         freq_      = 100.0f;
  47:oscillator_p.h ****         amp_       = 0.5f;
  48:oscillator_p.h ****         phase_     = 0.0f;
  49:oscillator_p.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:oscillator_p.h ****         waveform_  = WAVE_SIN;
  51:oscillator_p.h ****         eoc_       = true;
  52:oscillator_p.h ****         eor_       = true;
  53:oscillator_p.h ****     }
  54:oscillator_p.h **** 
  55:oscillator_p.h **** 
  56:oscillator_p.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:oscillator_p.h ****     */
  58:oscillator_p.h ****     inline void SetFreq(const float f)
  59:oscillator_p.h ****     {
  60:oscillator_p.h ****         freq_      = f;
  61:oscillator_p.h ****         phase_inc_ = CalcPhaseInc(f);
  62:oscillator_p.h ****     }
  63:oscillator_p.h **** 
  64:oscillator_p.h **** 
  65:oscillator_p.h ****     /** Sets the amplitude of the waveform.
  66:oscillator_p.h ****     */
  67:oscillator_p.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:oscillator_p.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:oscillator_p.h ****     */
  70:oscillator_p.h ****     inline void SetWaveform(const uint8_t wf)
  71:oscillator_p.h ****     {
  72:oscillator_p.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
  73:oscillator_p.h ****     }
  74:oscillator_p.h **** 
  75:oscillator_p.h ****     /** Returns true if cycle is at end of rise. Set during call to Process.
  76:oscillator_p.h ****     */
  77:oscillator_p.h ****     inline bool IsEOR() { return eor_; }
  78:oscillator_p.h **** 
  79:oscillator_p.h ****     /** Returns true if cycle is at end of cycle. Set during call to Process.
  80:oscillator_p.h ****     */
  81:oscillator_p.h ****     inline bool IsEOC() { return eoc_; }
  82:oscillator_p.h **** 
  83:oscillator_p.h ****     /** Returns true if cycle rising.
  84:oscillator_p.h ****     */
  85:oscillator_p.h ****     inline bool IsRising() { return phase_ < PI_F; }
  86:oscillator_p.h **** 
  87:oscillator_p.h ****     /** Returns true if cycle falling.
  88:oscillator_p.h ****     */
  89:oscillator_p.h ****     inline bool IsFalling() { return phase_ >= PI_F; }
  90:oscillator_p.h **** 
  91:oscillator_p.h ****     //Returns phase angle
  92:oscillator_p.h ****     inline float GetPhase() { return phase_; }
 5314              		.loc 15 92 31 is_stmt 1 view .LVU1444
 5315              	.LBB1288:
 5316              	.LBB1287:
  71:LEDs.h        **** 
 5317              		.loc 14 71 41 is_stmt 0 view .LVU1445
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 201


 5318 0014 114A     		ldr	r2, .L325
 5319              	.LBE1287:
 5320              	.LBE1288:
1697:Veno-Echo.cpp ****     //update base phase for both delay lines
 5321              		.loc 20 1697 50 view .LVU1446
 5322 0016 B1EE086A 		vmov.f32	s12, #6.0e+0
1697:Veno-Echo.cpp ****     //update base phase for both delay lines
 5323              		.loc 20 1697 73 view .LVU1447
 5324 001a 07EE903A 		vmov	s15, r3	@ int
1697:Veno-Echo.cpp ****     //update base phase for both delay lines
 5325              		.loc 20 1697 55 view .LVU1448
 5326 001e DFED116A 		vldr.32	s13, .L325+8
1697:Veno-Echo.cpp ****     //update base phase for both delay lines
 5327              		.loc 20 1697 50 view .LVU1449
 5328 0022 D2ED0C5A 		vldr.32	s11, [r2, #48]
1697:Veno-Echo.cpp ****     //update base phase for both delay lines
 5329              		.loc 20 1697 73 view .LVU1450
 5330 0026 F8EEE77A 		vcvt.f32.s32	s15, s15
 5331              	.LBB1289:
 5332              	.LBB1290:
  70:DelayMulti.h  **** //void SetSync(const bool& syncMode){syncMode_ = syncMode;}
  71:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 5333              		.loc 17 71 54 view .LVU1451
 5334 002a 0F4A     		ldr	r2, .L325+12
 5335              	.LBE1290:
 5336              	.LBE1289:
1697:Veno-Echo.cpp ****     //update base phase for both delay lines
 5337              		.loc 20 1697 50 view .LVU1452
 5338 002c 85EE867A 		vdiv.f32	s14, s11, s12
 5339              	.LBB1292:
 5340              	.LBB1293:
 5341              		.loc 17 71 54 view .LVU1453
 5342 0030 0E4B     		ldr	r3, .L325+16
 5343              	.LBE1293:
 5344              	.LBE1292:
1697:Veno-Echo.cpp ****     //update base phase for both delay lines
 5345              		.loc 20 1697 55 view .LVU1454
 5346 0032 A7EEA67A 		vfma.f32	s14, s15, s13
 5347              	.LVL265:
1699:Veno-Echo.cpp ****     delayR.SetBasePhase( dividedPhase );
 5348              		.loc 20 1699 5 is_stmt 1 view .LVU1455
 5349              	.LBB1295:
 5350              	.LBI1289:
 5351              		.loc 17 71 6 view .LVU1456
 5352              	.LBB1291:
 5353              		.loc 17 71 43 view .LVU1457
 5354              		.loc 17 71 54 is_stmt 0 view .LVU1458
 5355 0036 82ED487A 		vstr.32	s14, [r2, #288]
 5356              	.LBE1291:
 5357              	.LBE1295:
1700:Veno-Echo.cpp **** }
 5358              		.loc 20 1700 5 is_stmt 1 view .LVU1459
 5359              	.LVL266:
 5360              	.LBB1296:
 5361              	.LBI1292:
 5362              		.loc 17 71 6 view .LVU1460
 5363              	.LBB1294:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 202


 5364              		.loc 17 71 43 view .LVU1461
 5365              		.loc 17 71 54 is_stmt 0 view .LVU1462
 5366 003a 83ED487A 		vstr.32	s14, [r3, #288]
 5367              	.LVL267:
 5368              		.loc 17 71 54 view .LVU1463
 5369              	.LBE1294:
 5370              	.LBE1296:
1701:Veno-Echo.cpp **** 
 5371              		.loc 20 1701 1 view .LVU1464
 5372 003e 08BD     		pop	{r3, pc}
 5373              	.LVL268:
 5374              	.L322:
1694:Veno-Echo.cpp ****     }
 5375              		.loc 20 1694 9 is_stmt 1 view .LVU1465
1694:Veno-Echo.cpp ****     }
 5376              		.loc 20 1694 38 is_stmt 0 view .LVU1466
 5377 0040 0749     		ldr	r1, .L325+4
1694:Veno-Echo.cpp ****     }
 5378              		.loc 20 1694 43 view .LVU1467
 5379 0042 0B4B     		ldr	r3, .L325+20
1694:Veno-Echo.cpp ****     }
 5380              		.loc 20 1694 38 view .LVU1468
 5381 0044 0A68     		ldr	r2, [r1]
 5382 0046 0132     		adds	r2, r2, #1
1694:Veno-Echo.cpp ****     }
 5383              		.loc 20 1694 43 view .LVU1469
 5384 0048 83FB0203 		smull	r0, r3, r3, r2
 5385 004c A3EBE273 		sub	r3, r3, r2, asr #31
 5386 0050 03EB4303 		add	r3, r3, r3, lsl #1
 5387 0054 A2EB4303 		sub	r3, r2, r3, lsl #1
1694:Veno-Echo.cpp ****     }
 5388              		.loc 20 1694 22 view .LVU1470
 5389 0058 0B60     		str	r3, [r1]
 5390 005a DBE7     		b	.L323
 5391              	.L326:
 5392              		.align	2
 5393              	.L325:
 5394 005c 00000000 		.word	.LANCHOR88
 5395 0060 00000000 		.word	.LANCHOR89
 5396 0064 920A863F 		.word	1065749138
 5397 0068 00000000 		.word	.LANCHOR0
 5398 006c 00000000 		.word	.LANCHOR1
 5399 0070 ABAAAA2A 		.word	715827883
 5400              		.cfi_endproc
 5401              	.LFE4330:
 5403              		.section	.text._Z13ApplySettingsRK8Settings,"ax",%progbits
 5404              		.align	1
 5405              		.p2align 2,,3
 5406              		.global	_Z13ApplySettingsRK8Settings
 5407              		.syntax unified
 5408              		.thumb
 5409              		.thumb_func
 5410              		.fpu fpv5-d16
 5412              	_Z13ApplySettingsRK8Settings:
 5413              	.LVL269:
 5414              	.LFB4331:
1705:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 203


 5415              		.loc 20 1705 1 is_stmt 1 view -0
 5416              		.cfi_startproc
 5417              		@ args = 0, pretend = 0, frame = 0
 5418              		@ frame_needed = 0, uses_anonymous_args = 0
1706:Veno-Echo.cpp ****     {
 5419              		.loc 20 1706 5 view .LVU1472
 5420 0000 9FEDCF7A 		vldr.32	s14, .L395
1706:Veno-Echo.cpp ****     {
 5421              		.loc 20 1706 17 is_stmt 0 view .LVU1473
 5422 0004 D0ED007A 		vldr.32	s15, [r0]
1706:Veno-Echo.cpp ****     {
 5423              		.loc 20 1706 5 view .LVU1474
 5424 0008 F4EEC77A 		vcmpe.f32	s15, s14
1705:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5425              		.loc 20 1705 1 view .LVU1475
 5426 000c 38B5     		push	{r3, r4, r5, lr}
 5427              		.cfi_def_cfa_offset 16
 5428              		.cfi_offset 3, -16
 5429              		.cfi_offset 4, -12
 5430              		.cfi_offset 5, -8
 5431              		.cfi_offset 14, -4
1706:Veno-Echo.cpp ****     {
 5432              		.loc 20 1706 5 view .LVU1476
 5433 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1705:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5434              		.loc 20 1705 1 view .LVU1477
 5435 0012 0446     		mov	r4, r0
 5436              	.LBB1297:
 5437              	.LBB1298:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5438              		.loc 20 70 28 view .LVU1478
 5439 0014 CB4B     		ldr	r3, .L395+4
 5440              	.LBE1298:
 5441              	.LBE1297:
1706:Veno-Echo.cpp ****     {
 5442              		.loc 20 1706 5 view .LVU1479
 5443 0016 C0F2FD80 		blt	.L328
1706:Veno-Echo.cpp ****     {
 5444              		.loc 20 1706 43 discriminator 1 view .LVU1480
 5445 001a 9FEDCB7A 		vldr.32	s14, .L395+8
 5446 001e F4EEC77A 		vcmpe.f32	s15, s14
 5447 0022 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5448 0026 00F2F580 		bhi	.L328
1708:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5449              		.loc 20 1708 9 is_stmt 1 view .LVU1481
 5450              	.LVL270:
 5451              	.LBB1312:
 5452              	.LBI1297:
  68:Veno-Echo.cpp ****     {
 5453              		.loc 20 68 10 view .LVU1482
 5454              	.LBB1310:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5455              		.loc 20 70 9 view .LVU1483
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5456              		.loc 20 70 28 is_stmt 0 view .LVU1484
 5457 002a 93ED017A 		vldr.32	s14, [r3, #4]
 5458              	.LVL271:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 204


 5459              	.LBB1299:
 5460              	.LBI1299:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5461              		.loc 21 75 3 is_stmt 1 view .LVU1485
 5462              	.LBB1300:
 5463              		.loc 21 76 5 view .LVU1486
 5464              		.loc 21 76 5 is_stmt 0 view .LVU1487
 5465              	.LBE1300:
 5466              	.LBE1299:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5467              		.loc 20 70 53 view .LVU1488
 5468 002e 9FEDC76A 		vldr.32	s12, .L395+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5469              		.loc 20 70 15 view .LVU1489
 5470 0032 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5471              		.loc 20 70 53 view .LVU1490
 5472 0036 27EE067A 		vmul.f32	s14, s14, s12
 5473              	.LBB1302:
 5474              	.LBB1301:
 5475              		.loc 21 76 31 view .LVU1491
 5476 003a F0EEE66A 		vabs.f32	s13, s13
 5477              	.LBE1301:
 5478              	.LBE1302:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5479              		.loc 20 70 9 view .LVU1492
 5480 003e F4EEC76A 		vcmpe.f32	s13, s14
 5481 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5482 0046 0FDD     		ble	.L331
  74:Veno-Echo.cpp ****             //del -> Reset();
 5483              		.loc 20 74 29 view .LVU1493
 5484 0048 BCEEE77A 		vcvt.u32.f32	s14, s15
 5485              	.LBB1303:
 5486              	.LBB1304:
 5487              		.loc 19 72 9 view .LVU1494
 5488 004c C04D     		ldr	r5, .L395+16
 5489              	.LBE1304:
 5490              	.LBE1303:
 5491              	.LBE1310:
 5492              	.LBE1312:
1708:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5493              		.loc 20 1708 33 view .LVU1495
 5494 004e 1968     		ldr	r1, [r3]
 5495              	.LBB1313:
 5496              	.LBB1311:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5497              		.loc 20 73 13 is_stmt 1 view .LVU1496
 5498              	.LBB1307:
 5499              	.LBB1305:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5500              		.loc 19 71 9 is_stmt 0 view .LVU1497
 5501 0050 0020     		movs	r0, #0
 5502              	.LVL272:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5503              		.loc 19 71 9 view .LVU1498
 5504              	.LBE1305:
 5505              	.LBE1307:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 205


  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5506              		.loc 20 73 27 view .LVU1499
 5507 0052 C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5508              		.loc 20 74 13 is_stmt 1 view .LVU1500
 5509              	.LVL273:
 5510              	.LBB1308:
 5511              	.LBI1303:
  69:delayline_reverse.h ****     {
 5512              		.loc 19 69 17 view .LVU1501
  69:delayline_reverse.h ****     {
 5513              		.loc 19 69 17 is_stmt 0 view .LVU1502
 5514              	.LBE1308:
  74:Veno-Echo.cpp ****             //del -> Reset();
 5515              		.loc 20 74 29 view .LVU1503
 5516 0056 17EE102A 		vmov	r2, s14	@ int
 5517              	.LBB1309:
 5518              	.LBB1306:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5519              		.loc 19 71 9 view .LVU1504
 5520 005a 0860     		str	r0, [r1]	@ float
 5521 005c D4ED007A 		vldr.32	s15, [r4]
 5522              	.LVL274:
 5523              		.loc 19 72 9 view .LVU1505
 5524 0060 AA42     		cmp	r2, r5
 5525 0062 28BF     		it	cs
 5526 0064 2A46     		movcs	r2, r5
 5527 0066 0A61     		str	r2, [r1, #16]
 5528              	.LVL275:
 5529              	.L331:
 5530              		.loc 19 72 9 view .LVU1506
 5531              	.LBE1306:
 5532              	.LBE1309:
 5533              	.LBE1311:
 5534              	.LBE1313:
1709:Veno-Echo.cpp ****     }
 5535              		.loc 20 1709 9 is_stmt 1 view .LVU1507
 5536              	.LBB1314:
 5537              	.LBI1314:
  68:Veno-Echo.cpp ****     {
 5538              		.loc 20 68 10 view .LVU1508
 5539              	.LBB1315:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5540              		.loc 20 70 9 view .LVU1509
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5541              		.loc 20 70 28 is_stmt 0 view .LVU1510
 5542 0068 BA4B     		ldr	r3, .L395+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5543              		.loc 20 70 53 view .LVU1511
 5544 006a 9FEDB86A 		vldr.32	s12, .L395+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5545              		.loc 20 70 28 view .LVU1512
 5546 006e 93ED017A 		vldr.32	s14, [r3, #4]
 5547              	.LVL276:
 5548              	.LBB1316:
 5549              	.LBI1316:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 206


 5550              		.loc 21 75 3 is_stmt 1 view .LVU1513
 5551              	.LBB1317:
 5552              		.loc 21 76 5 view .LVU1514
 5553              		.loc 21 76 5 is_stmt 0 view .LVU1515
 5554              	.LBE1317:
 5555              	.LBE1316:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5556              		.loc 20 70 15 view .LVU1516
 5557 0072 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5558              		.loc 20 70 53 view .LVU1517
 5559 0076 27EE067A 		vmul.f32	s14, s14, s12
 5560              	.LBB1319:
 5561              	.LBB1318:
 5562              		.loc 21 76 31 view .LVU1518
 5563 007a F0EEE66A 		vabs.f32	s13, s13
 5564              	.LBE1318:
 5565              	.LBE1319:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5566              		.loc 20 70 9 view .LVU1519
 5567 007e F4EEC76A 		vcmpe.f32	s13, s14
 5568 0082 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5569 0086 00F34B81 		bgt	.L391
 5570              	.LVL277:
 5571              	.L334:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5572              		.loc 20 70 9 view .LVU1520
 5573              	.LBE1315:
 5574              	.LBE1314:
1717:Veno-Echo.cpp ****     {
 5575              		.loc 20 1717 5 is_stmt 1 view .LVU1521
 5576 008a F7EE007A 		vmov.f32	s15, #1.0e+0
1717:Veno-Echo.cpp ****     {
 5577              		.loc 20 1717 17 is_stmt 0 view .LVU1522
 5578 008e 94ED010A 		vldr.32	s0, [r4, #4]
1717:Veno-Echo.cpp ****     {
 5579              		.loc 20 1717 5 view .LVU1523
 5580 0092 B4EEE70A 		vcmpe.f32	s0, s15
 5581 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5582 009a 06DB     		blt	.L339
1717:Veno-Echo.cpp ****     {
 5583              		.loc 20 1717 35 discriminator 1 view .LVU1524
 5584 009c F0EE087A 		vmov.f32	s15, #3.0e+0
 5585 00a0 B4EEE70A 		vcmpe.f32	s0, s15
 5586 00a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5587 00a8 01D9     		bls	.L389
 5588              	.L339:
1723:Veno-Echo.cpp ****     }
 5589              		.loc 20 1723 9 is_stmt 1 view .LVU1525
1723:Veno-Echo.cpp ****     }
 5590              		.loc 20 1723 30 is_stmt 0 view .LVU1526
 5591 00aa B7EE000A 		vmov.f32	s0, #1.0e+0
 5592              	.L389:
 5593 00ae AA48     		ldr	r0, .L395+24
 5594 00b0 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 5595              	.LVL278:
1726:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 207


 5596              		.loc 20 1726 5 is_stmt 1 view .LVU1527
1726:Veno-Echo.cpp ****     {
 5597              		.loc 20 1726 17 is_stmt 0 view .LVU1528
 5598 00b4 D4ED027A 		vldr.32	s15, [r4, #8]
1726:Veno-Echo.cpp ****     {
 5599              		.loc 20 1726 5 view .LVU1529
 5600 00b8 F5EEC07A 		vcmpe.f32	s15, #0
 5601 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5602 00c0 C0F22B81 		blt	.L386
1726:Veno-Echo.cpp ****     {
 5603              		.loc 20 1726 42 discriminator 1 view .LVU1530
 5604 00c4 DFEDA56A 		vldr.32	s13, .L395+28
1732:Veno-Echo.cpp ****     }
 5605              		.loc 20 1732 18 discriminator 1 view .LVU1531
 5606 00c8 9FEDA57A 		vldr.32	s14, .L395+32
 5607 00cc F4EEE67A 		vcmpe.f32	s15, s13
 5608 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5609 00d4 88BF     		it	hi
 5610 00d6 F0EE477A 		vmovhi.f32	s15, s14
 5611              	.L343:
1735:Veno-Echo.cpp ****     {
 5612              		.loc 20 1735 17 view .LVU1532
 5613 00da 94ED030A 		vldr.32	s0, [r4, #12]
1735:Veno-Echo.cpp ****     {
 5614              		.loc 20 1735 5 view .LVU1533
 5615 00de 9FEDA17A 		vldr.32	s14, .L395+36
 5616 00e2 A14B     		ldr	r3, .L395+40
 5617 00e4 B4EEC70A 		vcmpe.f32	s0, s14
 5618              	.LBB1330:
 5619              	.LBB1331:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 5620              		.loc 8 60 20 view .LVU1534
 5621 00e8 A04D     		ldr	r5, .L395+44
 5622 00ea C3ED007A 		vstr.32	s15, [r3]
 5623              	.LBE1331:
 5624              	.LBE1330:
1735:Veno-Echo.cpp ****     {
 5625              		.loc 20 1735 5 is_stmt 1 view .LVU1535
 5626 00ee F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5627 00f2 06DB     		blt	.L346
1735:Veno-Echo.cpp ****     {
 5628              		.loc 20 1735 40 is_stmt 0 discriminator 1 view .LVU1536
 5629 00f4 F2EE047A 		vmov.f32	s15, #1.0e+1
 5630 00f8 B4EEE70A 		vcmpe.f32	s0, s15
 5631 00fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5632 0100 01D9     		bls	.L390
 5633              	.L346:
1741:Veno-Echo.cpp ****     }
 5634              		.loc 20 1741 9 is_stmt 1 view .LVU1537
 5635              	.LVL279:
 5636              	.LBB1332:
 5637              	.LBI1332:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 5638              		.loc 8 58 17 view .LVU1538
 5639              	.LBB1333:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 5640              		.loc 8 60 9 view .LVU1539
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 208


  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 5641              		.loc 8 60 20 is_stmt 0 view .LVU1540
 5642 0102 9FED9B0A 		vldr.32	s0, .L395+48
 5643              	.LVL280:
 5644              	.L390:
 5645              		.loc 8 61 34 view .LVU1541
 5646 0106 2846     		mov	r0, r5
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 5647              		.loc 8 60 20 view .LVU1542
 5648 0108 85ED020A 		vstr.32	s0, [r5, #8]
 5649              		.loc 8 61 9 is_stmt 1 view .LVU1543
 5650              		.loc 8 61 34 is_stmt 0 view .LVU1544
 5651 010c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 5652              	.LVL281:
 5653              	.LBE1333:
 5654              	.LBE1332:
1744:Veno-Echo.cpp ****     {
 5655              		.loc 20 1744 5 view .LVU1545
 5656 0110 DFED987A 		vldr.32	s15, .L395+52
 5657              	.LBB1335:
 5658              	.LBB1334:
 5659              		.loc 8 61 20 view .LVU1546
 5660 0114 85ED060A 		vstr.32	s0, [r5, #24]
 5661              	.LBE1334:
 5662              	.LBE1335:
1744:Veno-Echo.cpp ****     {
 5663              		.loc 20 1744 5 is_stmt 1 view .LVU1547
1744:Veno-Echo.cpp ****     {
 5664              		.loc 20 1744 17 is_stmt 0 view .LVU1548
 5665 0118 94ED050A 		vldr.32	s0, [r4, #20]
1744:Veno-Echo.cpp ****     {
 5666              		.loc 20 1744 5 view .LVU1549
 5667 011c B4EEE70A 		vcmpe.f32	s0, s15
 5668 0120 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5669 0124 07DB     		blt	.L350
1744:Veno-Echo.cpp ****     {
 5670              		.loc 20 1744 40 discriminator 1 view .LVU1550
 5671 0126 DFED947A 		vldr.32	s15, .L395+56
 5672 012a B4EEE70A 		vcmpe.f32	s0, s15
 5673 012e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5674 0132 40F2DF80 		bls	.L392
 5675              	.L350:
1753:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 5676              		.loc 20 1753 9 is_stmt 1 view .LVU1551
1753:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 5677              		.loc 20 1753 22 is_stmt 0 view .LVU1552
 5678 0136 9FED900A 		vldr.32	s0, .L395+56
 5679 013a 9048     		ldr	r0, .L395+60
 5680 013c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5681              	.LVL282:
1754:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 5682              		.loc 20 1754 9 is_stmt 1 view .LVU1553
1754:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 5683              		.loc 20 1754 22 is_stmt 0 view .LVU1554
 5684 0140 9FED8D0A 		vldr.32	s0, .L395+56
 5685 0144 8E48     		ldr	r0, .L395+64
 5686 0146 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 209


 5687              	.LVL283:
1755:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 5688              		.loc 20 1755 9 is_stmt 1 view .LVU1555
1755:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 5689              		.loc 20 1755 27 is_stmt 0 view .LVU1556
 5690 014a 9FED8B0A 		vldr.32	s0, .L395+56
 5691 014e 8D48     		ldr	r0, .L395+68
 5692 0150 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5693              	.LVL284:
1756:Veno-Echo.cpp ****     }
 5694              		.loc 20 1756 9 is_stmt 1 view .LVU1557
1756:Veno-Echo.cpp ****     }
 5695              		.loc 20 1756 27 is_stmt 0 view .LVU1558
 5696 0154 9FED880A 		vldr.32	s0, .L395+56
 5697 0158 8B48     		ldr	r0, .L395+72
 5698 015a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5699              	.LVL285:
 5700              	.L353:
1759:Veno-Echo.cpp ****     {
 5701              		.loc 20 1759 5 is_stmt 1 view .LVU1559
1759:Veno-Echo.cpp ****     {
 5702              		.loc 20 1759 17 is_stmt 0 view .LVU1560
 5703 015e 94ED040A 		vldr.32	s0, [r4, #16]
1759:Veno-Echo.cpp ****     {
 5704              		.loc 20 1759 5 view .LVU1561
 5705 0162 DFED8A7A 		vldr.32	s15, .L395+76
 5706 0166 B4EEE70A 		vcmpe.f32	s0, s15
 5707 016a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5708 016e 07DB     		blt	.L354
1759:Veno-Echo.cpp ****     {
 5709              		.loc 20 1759 40 discriminator 1 view .LVU1562
 5710 0170 DFED877A 		vldr.32	s15, .L395+80
 5711 0174 B4EEE70A 		vcmpe.f32	s0, s15
 5712 0178 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5713 017c 40F2A780 		bls	.L393
 5714              	.L354:
1768:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 5715              		.loc 20 1768 9 is_stmt 1 view .LVU1563
1768:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 5716              		.loc 20 1768 22 is_stmt 0 view .LVU1564
 5717 0180 9FED840A 		vldr.32	s0, .L395+84
 5718 0184 8448     		ldr	r0, .L395+88
 5719 0186 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5720              	.LVL286:
1769:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 5721              		.loc 20 1769 9 is_stmt 1 view .LVU1565
1769:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 5722              		.loc 20 1769 22 is_stmt 0 view .LVU1566
 5723 018a 9FED820A 		vldr.32	s0, .L395+84
 5724 018e 8348     		ldr	r0, .L395+92
 5725 0190 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5726              	.LVL287:
1770:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 5727              		.loc 20 1770 9 is_stmt 1 view .LVU1567
1770:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 5728              		.loc 20 1770 27 is_stmt 0 view .LVU1568
 5729 0194 9FED7F0A 		vldr.32	s0, .L395+84
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 210


 5730 0198 8148     		ldr	r0, .L395+96
 5731 019a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5732              	.LVL288:
1771:Veno-Echo.cpp **** 
 5733              		.loc 20 1771 9 is_stmt 1 view .LVU1569
1771:Veno-Echo.cpp **** 
 5734              		.loc 20 1771 27 is_stmt 0 view .LVU1570
 5735 019e 9FED7D0A 		vldr.32	s0, .L395+84
 5736 01a2 8048     		ldr	r0, .L395+100
 5737 01a4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 5738              	.LVL289:
 5739              	.L357:
1775:Veno-Echo.cpp ****     {
 5740              		.loc 20 1775 5 is_stmt 1 view .LVU1571
1775:Veno-Echo.cpp ****     {
 5741              		.loc 20 1775 17 is_stmt 0 view .LVU1572
 5742 01a8 94ED060A 		vldr.32	s0, [r4, #24]
1775:Veno-Echo.cpp ****     {
 5743              		.loc 20 1775 5 view .LVU1573
 5744 01ac B5EEC00A 		vcmpe.f32	s0, #0
 5745 01b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5746 01b4 06DB     		blt	.L358
1775:Veno-Echo.cpp ****     {
 5747              		.loc 20 1775 38 discriminator 1 view .LVU1574
 5748 01b6 F6EE007A 		vmov.f32	s15, #5.0e-1
 5749 01ba B4EEE70A 		vcmpe.f32	s0, s15
 5750 01be F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5751 01c2 5DD9     		bls	.L394
 5752              	.L358:
1789:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 5753              		.loc 20 1789 9 is_stmt 1 view .LVU1575
1789:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 5754              		.loc 20 1789 26 is_stmt 0 view .LVU1576
 5755 01c4 9FED660A 		vldr.32	s0, .L395+32
 5756 01c8 6E48     		ldr	r0, .L395+68
 5757 01ca FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5758              	.LVL290:
1790:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 5759              		.loc 20 1790 9 is_stmt 1 view .LVU1577
1790:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 5760              		.loc 20 1790 26 is_stmt 0 view .LVU1578
 5761 01ce 9FED640A 		vldr.32	s0, .L395+32
 5762 01d2 7348     		ldr	r0, .L395+96
 5763 01d4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5764              	.LVL291:
1791:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 5765              		.loc 20 1791 9 is_stmt 1 view .LVU1579
1791:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 5766              		.loc 20 1791 26 is_stmt 0 view .LVU1580
 5767 01d8 9FED610A 		vldr.32	s0, .L395+32
 5768 01dc 6A48     		ldr	r0, .L395+72
 5769 01de FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5770              	.LVL292:
1792:Veno-Echo.cpp ****     }
 5771              		.loc 20 1792 9 is_stmt 1 view .LVU1581
1792:Veno-Echo.cpp ****     }
 5772              		.loc 20 1792 26 is_stmt 0 view .LVU1582
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 211


 5773 01e2 9FED5F0A 		vldr.32	s0, .L395+32
 5774 01e6 6F48     		ldr	r0, .L395+100
 5775 01e8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5776              	.LVL293:
 5777              	.L361:
1795:Veno-Echo.cpp ****     {
 5778              		.loc 20 1795 5 is_stmt 1 view .LVU1583
1795:Veno-Echo.cpp ****     {
 5779              		.loc 20 1795 16 is_stmt 0 view .LVU1584
 5780 01ec D4ED077A 		vldr.32	s15, [r4, #28]
1795:Veno-Echo.cpp ****     {
 5781              		.loc 20 1795 5 view .LVU1585
 5782 01f0 9FED6D7A 		vldr.32	s14, .L395+104
1801:Veno-Echo.cpp ****     }
 5783              		.loc 20 1801 21 view .LVU1586
 5784 01f4 6D4B     		ldr	r3, .L395+108
1795:Veno-Echo.cpp ****     {
 5785              		.loc 20 1795 5 view .LVU1587
 5786 01f6 F4EEC77A 		vcmpe.f32	s15, s14
 5787 01fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5788 01fe 3CD4     		bmi	.L365
1799:Veno-Echo.cpp ****     {
 5789              		.loc 20 1799 14 is_stmt 1 view .LVU1588
 5790 0200 9FED6B7A 		vldr.32	s14, .L395+112
 5791 0204 F4EEC77A 		vcmpe.f32	s15, s14
 5792 0208 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5793 020c 35DD     		ble	.L365
1801:Veno-Echo.cpp ****     }
 5794              		.loc 20 1801 9 view .LVU1589
1801:Veno-Echo.cpp ****     }
 5795              		.loc 20 1801 21 is_stmt 0 view .LVU1590
 5796 020e 0122     		movs	r2, #1
 5797 0210 1A70     		strb	r2, [r3]
1808:Veno-Echo.cpp **** 
 5798              		.loc 20 1808 1 view .LVU1591
 5799 0212 38BD     		pop	{r3, r4, r5, pc}
 5800              	.LVL294:
 5801              	.L328:
1713:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 5802              		.loc 20 1713 9 is_stmt 1 view .LVU1592
 5803              	.LBB1336:
 5804              	.LBI1336:
  68:Veno-Echo.cpp ****     {
 5805              		.loc 20 68 10 view .LVU1593
 5806              	.LBB1337:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5807              		.loc 20 70 9 view .LVU1594
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5808              		.loc 20 70 28 is_stmt 0 view .LVU1595
 5809 0214 D3ED017A 		vldr.32	s15, [r3, #4]
 5810              	.LVL295:
 5811              	.LBB1338:
 5812              	.LBI1338:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5813              		.loc 21 75 3 is_stmt 1 view .LVU1596
 5814              	.LBB1339:
 5815              		.loc 21 76 5 view .LVU1597
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 212


 5816              		.loc 21 76 5 is_stmt 0 view .LVU1598
 5817              	.LBE1339:
 5818              	.LBE1338:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5819              		.loc 20 70 15 view .LVU1599
 5820 0218 DFED666A 		vldr.32	s13, .L395+116
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5821              		.loc 20 70 53 view .LVU1600
 5822 021c 9FED4B6A 		vldr.32	s12, .L395+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5823              		.loc 20 70 15 view .LVU1601
 5824 0220 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5825              		.loc 20 70 53 view .LVU1602
 5826 0224 67EE867A 		vmul.f32	s15, s15, s12
 5827              	.LBB1341:
 5828              	.LBB1340:
 5829              		.loc 21 76 31 view .LVU1603
 5830 0228 B0EEC77A 		vabs.f32	s14, s14
 5831              	.LBE1340:
 5832              	.LBE1341:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5833              		.loc 20 70 9 view .LVU1604
 5834 022c B4EEE77A 		vcmpe.f32	s14, s15
 5835 0230 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5836 0234 06DD     		ble	.L335
 5837              	.LBE1337:
 5838              	.LBE1336:
1713:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 5839              		.loc 20 1713 33 view .LVU1605
 5840 0236 1A68     		ldr	r2, [r3]
 5841              	.LBB1347:
 5842              	.LBB1346:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5843              		.loc 20 73 13 is_stmt 1 view .LVU1606
 5844              	.LBB1342:
 5845              	.LBB1343:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5846              		.loc 19 71 9 is_stmt 0 view .LVU1607
 5847 0238 0021     		movs	r1, #0
 5848              		.loc 19 72 9 view .LVU1608
 5849 023a 5F48     		ldr	r0, .L395+120
 5850              	.LVL296:
 5851              		.loc 19 72 9 view .LVU1609
 5852              	.LBE1343:
 5853              	.LBE1342:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5854              		.loc 20 73 27 view .LVU1610
 5855 023c C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5856              		.loc 20 74 13 is_stmt 1 view .LVU1611
 5857              	.LVL297:
 5858              	.LBB1345:
 5859              	.LBI1342:
  69:delayline_reverse.h ****     {
 5860              		.loc 19 69 17 view .LVU1612
 5861              	.LBB1344:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 213


 5862              		.loc 19 72 9 is_stmt 0 view .LVU1613
 5863 0240 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5864              		.loc 19 71 9 view .LVU1614
 5865 0242 1160     		str	r1, [r2]	@ float
 5866              	.LVL298:
 5867              	.L335:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5868              		.loc 19 71 9 view .LVU1615
 5869              	.LBE1344:
 5870              	.LBE1345:
 5871              	.LBE1346:
 5872              	.LBE1347:
1714:Veno-Echo.cpp ****     }
 5873              		.loc 20 1714 9 is_stmt 1 view .LVU1616
 5874              	.LBB1348:
 5875              	.LBI1348:
  68:Veno-Echo.cpp ****     {
 5876              		.loc 20 68 10 view .LVU1617
 5877              	.LBB1349:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5878              		.loc 20 70 9 view .LVU1618
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5879              		.loc 20 70 28 is_stmt 0 view .LVU1619
 5880 0244 434B     		ldr	r3, .L395+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5881              		.loc 20 70 15 view .LVU1620
 5882 0246 DFED5B6A 		vldr.32	s13, .L395+116
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5883              		.loc 20 70 28 view .LVU1621
 5884 024a D3ED017A 		vldr.32	s15, [r3, #4]
 5885              	.LVL299:
 5886              	.LBB1350:
 5887              	.LBI1350:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5888              		.loc 21 75 3 is_stmt 1 view .LVU1622
 5889              	.LBB1351:
 5890              		.loc 21 76 5 view .LVU1623
 5891              		.loc 21 76 5 is_stmt 0 view .LVU1624
 5892              	.LBE1351:
 5893              	.LBE1350:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5894              		.loc 20 70 53 view .LVU1625
 5895 024e 9FED3F6A 		vldr.32	s12, .L395+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5896              		.loc 20 70 15 view .LVU1626
 5897 0252 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5898              		.loc 20 70 53 view .LVU1627
 5899 0256 67EE867A 		vmul.f32	s15, s15, s12
 5900              	.LBB1353:
 5901              	.LBB1352:
 5902              		.loc 21 76 31 view .LVU1628
 5903 025a B0EEC77A 		vabs.f32	s14, s14
 5904              	.LBE1352:
 5905              	.LBE1353:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 214


 5906              		.loc 20 70 9 view .LVU1629
 5907 025e B4EEE77A 		vcmpe.f32	s14, s15
 5908 0262 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5909 0266 7FF710AF 		ble	.L334
 5910              	.LBE1349:
 5911              	.LBE1348:
1714:Veno-Echo.cpp ****     }
 5912              		.loc 20 1714 33 view .LVU1630
 5913 026a 1A68     		ldr	r2, [r3]
 5914              	.LBB1359:
 5915              	.LBB1358:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5916              		.loc 20 73 13 is_stmt 1 view .LVU1631
 5917              	.LBB1354:
 5918              	.LBB1355:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5919              		.loc 19 71 9 is_stmt 0 view .LVU1632
 5920 026c 0021     		movs	r1, #0
 5921              		.loc 19 72 9 view .LVU1633
 5922 026e 5248     		ldr	r0, .L395+120
 5923              	.LBE1355:
 5924              	.LBE1354:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5925              		.loc 20 73 27 view .LVU1634
 5926 0270 C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5927              		.loc 20 74 13 is_stmt 1 view .LVU1635
 5928              	.LVL300:
 5929              	.LBB1357:
 5930              	.LBI1354:
  69:delayline_reverse.h ****     {
 5931              		.loc 19 69 17 view .LVU1636
 5932              	.LBB1356:
 5933              		.loc 19 72 9 is_stmt 0 view .LVU1637
 5934 0274 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5935              		.loc 19 71 9 view .LVU1638
 5936 0276 1160     		str	r1, [r2]	@ float
  73:delayline_reverse.h ****     }
 5937              		.loc 19 73 5 view .LVU1639
 5938 0278 07E7     		b	.L334
 5939              	.LVL301:
 5940              	.L365:
 5941              		.loc 19 73 5 view .LVU1640
 5942              	.LBE1356:
 5943              	.LBE1357:
 5944              	.LBE1358:
 5945              	.LBE1359:
1797:Veno-Echo.cpp ****     }
 5946              		.loc 20 1797 9 is_stmt 1 view .LVU1641
1797:Veno-Echo.cpp ****     }
 5947              		.loc 20 1797 21 is_stmt 0 view .LVU1642
 5948 027a 0022     		movs	r2, #0
 5949 027c 1A70     		strb	r2, [r3]
1808:Veno-Echo.cpp **** 
 5950              		.loc 20 1808 1 view .LVU1643
 5951 027e 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 215


 5952              	.LVL302:
 5953              	.L394:
1777:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 5954              		.loc 20 1777 9 is_stmt 1 view .LVU1644
1777:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 5955              		.loc 20 1777 21 is_stmt 0 view .LVU1645
 5956 0280 3E48     		ldr	r0, .L395+60
 5957 0282 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5958              	.LVL303:
1778:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 5959              		.loc 20 1778 9 is_stmt 1 view .LVU1646
1778:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 5960              		.loc 20 1778 21 is_stmt 0 view .LVU1647
 5961 0286 94ED060A 		vldr.32	s0, [r4, #24]
 5962 028a 4348     		ldr	r0, .L395+88
 5963 028c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5964              	.LVL304:
1779:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 5965              		.loc 20 1779 9 is_stmt 1 view .LVU1648
1779:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 5966              		.loc 20 1779 21 is_stmt 0 view .LVU1649
 5967 0290 94ED060A 		vldr.32	s0, [r4, #24]
 5968 0294 3A48     		ldr	r0, .L395+64
 5969 0296 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5970              	.LVL305:
1780:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 5971              		.loc 20 1780 9 is_stmt 1 view .LVU1650
1780:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 5972              		.loc 20 1780 21 is_stmt 0 view .LVU1651
 5973 029a 94ED060A 		vldr.32	s0, [r4, #24]
 5974 029e 3F48     		ldr	r0, .L395+92
 5975 02a0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5976              	.LVL306:
1781:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 5977              		.loc 20 1781 9 is_stmt 1 view .LVU1652
1781:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 5978              		.loc 20 1781 26 is_stmt 0 view .LVU1653
 5979 02a4 94ED060A 		vldr.32	s0, [r4, #24]
 5980 02a8 3648     		ldr	r0, .L395+68
 5981 02aa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5982              	.LVL307:
1782:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 5983              		.loc 20 1782 9 is_stmt 1 view .LVU1654
1782:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 5984              		.loc 20 1782 26 is_stmt 0 view .LVU1655
 5985 02ae 94ED060A 		vldr.32	s0, [r4, #24]
 5986 02b2 3B48     		ldr	r0, .L395+96
 5987 02b4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5988              	.LVL308:
1783:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 5989              		.loc 20 1783 9 is_stmt 1 view .LVU1656
1783:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 5990              		.loc 20 1783 26 is_stmt 0 view .LVU1657
 5991 02b8 94ED060A 		vldr.32	s0, [r4, #24]
 5992 02bc 3248     		ldr	r0, .L395+72
 5993 02be FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 5994              	.LVL309:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 216


1784:Veno-Echo.cpp ****     }
 5995              		.loc 20 1784 9 is_stmt 1 view .LVU1658
1784:Veno-Echo.cpp ****     }
 5996              		.loc 20 1784 26 is_stmt 0 view .LVU1659
 5997 02c2 94ED060A 		vldr.32	s0, [r4, #24]
 5998 02c6 3748     		ldr	r0, .L395+100
 5999 02c8 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6000              	.LVL310:
 6001 02cc 8EE7     		b	.L361
 6002              	.L393:
1761:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 6003              		.loc 20 1761 9 is_stmt 1 view .LVU1660
1761:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 6004              		.loc 20 1761 22 is_stmt 0 view .LVU1661
 6005 02ce 3248     		ldr	r0, .L395+88
 6006 02d0 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6007              	.LVL311:
1762:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 6008              		.loc 20 1762 9 is_stmt 1 view .LVU1662
1762:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 6009              		.loc 20 1762 22 is_stmt 0 view .LVU1663
 6010 02d4 94ED040A 		vldr.32	s0, [r4, #16]
 6011 02d8 3048     		ldr	r0, .L395+92
 6012 02da FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6013              	.LVL312:
1763:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 6014              		.loc 20 1763 9 is_stmt 1 view .LVU1664
1763:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 6015              		.loc 20 1763 27 is_stmt 0 view .LVU1665
 6016 02de 94ED040A 		vldr.32	s0, [r4, #16]
 6017 02e2 2F48     		ldr	r0, .L395+96
 6018 02e4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6019              	.LVL313:
1764:Veno-Echo.cpp ****     }
 6020              		.loc 20 1764 9 is_stmt 1 view .LVU1666
1764:Veno-Echo.cpp ****     }
 6021              		.loc 20 1764 27 is_stmt 0 view .LVU1667
 6022 02e8 94ED040A 		vldr.32	s0, [r4, #16]
 6023 02ec 2D48     		ldr	r0, .L395+100
 6024 02ee FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6025              	.LVL314:
 6026 02f2 59E7     		b	.L357
 6027              	.L392:
1746:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 6028              		.loc 20 1746 9 is_stmt 1 view .LVU1668
1746:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 6029              		.loc 20 1746 22 is_stmt 0 view .LVU1669
 6030 02f4 2148     		ldr	r0, .L395+60
 6031 02f6 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6032              	.LVL315:
1747:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 6033              		.loc 20 1747 9 is_stmt 1 view .LVU1670
1747:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 6034              		.loc 20 1747 22 is_stmt 0 view .LVU1671
 6035 02fa 94ED050A 		vldr.32	s0, [r4, #20]
 6036 02fe 2048     		ldr	r0, .L395+64
 6037 0300 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 217


 6038              	.LVL316:
1748:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 6039              		.loc 20 1748 9 is_stmt 1 view .LVU1672
1748:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 6040              		.loc 20 1748 27 is_stmt 0 view .LVU1673
 6041 0304 94ED050A 		vldr.32	s0, [r4, #20]
 6042 0308 1E48     		ldr	r0, .L395+68
 6043 030a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6044              	.LVL317:
1749:Veno-Echo.cpp ****     }
 6045              		.loc 20 1749 9 is_stmt 1 view .LVU1674
1749:Veno-Echo.cpp ****     }
 6046              		.loc 20 1749 27 is_stmt 0 view .LVU1675
 6047 030e 94ED050A 		vldr.32	s0, [r4, #20]
 6048 0312 1D48     		ldr	r0, .L395+72
 6049 0314 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6050              	.LVL318:
 6051 0318 21E7     		b	.L353
 6052              	.L386:
1732:Veno-Echo.cpp ****     }
 6053              		.loc 20 1732 18 view .LVU1676
 6054 031a DFED117A 		vldr.32	s15, .L395+32
 6055 031e DCE6     		b	.L343
 6056              	.LVL319:
 6057              	.L391:
 6058              	.LBB1360:
 6059              	.LBB1328:
  74:Veno-Echo.cpp ****             //del -> Reset();
 6060              		.loc 20 74 29 view .LVU1677
 6061 0320 BCEEE77A 		vcvt.u32.f32	s14, s15
 6062              	.LBB1320:
 6063              	.LBB1321:
  72:delayline_reverse.h ****     }
 6064              		.loc 19 72 9 view .LVU1678
 6065 0324 0A4D     		ldr	r5, .L395+16
 6066              	.LBE1321:
 6067              	.LBE1320:
 6068              	.LBE1328:
 6069              	.LBE1360:
1709:Veno-Echo.cpp ****     }
 6070              		.loc 20 1709 33 view .LVU1679
 6071 0326 1968     		ldr	r1, [r3]
 6072              	.LBB1361:
 6073              	.LBB1329:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6074              		.loc 20 73 13 is_stmt 1 view .LVU1680
 6075              	.LBB1325:
 6076              	.LBB1322:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6077              		.loc 19 71 9 is_stmt 0 view .LVU1681
 6078 0328 0020     		movs	r0, #0
 6079              	.LBE1322:
 6080              	.LBE1325:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6081              		.loc 20 73 27 view .LVU1682
 6082 032a C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 218


 6083              		.loc 20 74 29 view .LVU1683
 6084 032e 17EE102A 		vmov	r2, s14	@ int
 6085              	.LBB1326:
 6086              	.LBB1323:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6087              		.loc 19 71 9 view .LVU1684
 6088 0332 0860     		str	r0, [r1]	@ float
 6089              	.LVL320:
  72:delayline_reverse.h ****     }
 6090              		.loc 19 72 9 view .LVU1685
 6091 0334 AA42     		cmp	r2, r5
 6092 0336 28BF     		it	cs
 6093 0338 2A46     		movcs	r2, r5
 6094              	.LBE1323:
 6095              	.LBE1326:
  74:Veno-Echo.cpp ****             //del -> Reset();
 6096              		.loc 20 74 13 is_stmt 1 view .LVU1686
 6097              	.LVL321:
 6098              	.LBB1327:
 6099              	.LBI1320:
  69:delayline_reverse.h ****     {
 6100              		.loc 19 69 17 view .LVU1687
 6101              	.LBB1324:
  72:delayline_reverse.h ****     }
 6102              		.loc 19 72 9 is_stmt 0 view .LVU1688
 6103 033a 0A61     		str	r2, [r1, #16]
 6104              		.loc 19 73 5 view .LVU1689
 6105 033c A5E6     		b	.L334
 6106              	.L396:
 6107 033e 00BF     		.align	2
 6108              	.L395:
 6109 0340 0050C346 		.word	1187205120
 6110 0344 00000000 		.word	.LANCHOR2
 6111 0348 00606A48 		.word	1214930944
 6112 034c 0AD7A33B 		.word	1000593162
 6113 0350 BF270900 		.word	599999
 6114 0354 00000000 		.word	.LANCHOR3
 6115 0358 00000000 		.word	.LANCHOR12
 6116 035c 0000FA43 		.word	1140457472
 6117 0360 00000000 		.word	0
 6118 0364 CDCCCC3D 		.word	1036831949
 6119 0368 00000000 		.word	.LANCHOR67
 6120 036c 00000000 		.word	.LANCHOR75
 6121 0370 9A99A140 		.word	1084332442
 6122 0374 0080BB44 		.word	1153138688
 6123 0378 00803B46 		.word	1178304512
 6124 037c 00000000 		.word	.LANCHOR46
 6125 0380 00000000 		.word	.LANCHOR47
 6126 0384 00000000 		.word	.LANCHOR48
 6127 0388 00000000 		.word	.LANCHOR49
 6128 038c 0000C842 		.word	1120403456
 6129 0390 00004844 		.word	1145569280
 6130 0394 00004843 		.word	1128792064
 6131 0398 00000000 		.word	.LANCHOR34
 6132 039c 00000000 		.word	.LANCHOR35
 6133 03a0 00000000 		.word	.LANCHOR36
 6134 03a4 00000000 		.word	.LANCHOR37
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 219


 6135 03a8 6666E63E 		.word	1055286886
 6136 03ac 00000000 		.word	.LANCHOR82
 6137 03b0 CDCC0C3F 		.word	1057803469
 6138 03b4 00650148 		.word	1208050944
 6139 03b8 94050200 		.word	132500
 6140              	.LBE1324:
 6141              	.LBE1327:
 6142              	.LBE1329:
 6143              	.LBE1361:
 6144              		.cfi_endproc
 6145              	.LFE4331:
 6147              		.section	.text.startup.main,"ax",%progbits
 6148              		.align	1
 6149              		.p2align 2,,3
 6150              		.global	main
 6151              		.syntax unified
 6152              		.thumb
 6153              		.thumb_func
 6154              		.fpu fpv5-d16
 6156              	main:
 6157              	.LFB4310:
 611:Veno-Echo.cpp ****     // initialize hardware.
 6158              		.loc 20 611 1 is_stmt 1 view -0
 6159              		.cfi_startproc
 6160              		@ Volatile: function does not return.
 6161              		@ args = 0, pretend = 0, frame = 240
 6162              		@ frame_needed = 0, uses_anonymous_args = 0
 613:Veno-Echo.cpp ****     hw.Init();
 6163              		.loc 20 613 5 view .LVU1691
 611:Veno-Echo.cpp ****     // initialize hardware.
 6164              		.loc 20 611 1 is_stmt 0 view .LVU1692
 6165 0000 80B5     		push	{r7, lr}
 6166              		.cfi_def_cfa_offset 8
 6167              		.cfi_offset 7, -8
 6168              		.cfi_offset 14, -4
 613:Veno-Echo.cpp ****     hw.Init();
 6169              		.loc 20 613 17 view .LVU1693
 6170 0002 D048     		ldr	r0, .L400
 611:Veno-Echo.cpp ****     // initialize hardware.
 6171              		.loc 20 611 1 view .LVU1694
 6172 0004 BEB0     		sub	sp, sp, #248
 6173              		.cfi_def_cfa_offset 256
 613:Veno-Echo.cpp ****     hw.Init();
 6174              		.loc 20 613 17 view .LVU1695
 6175 0006 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 6176              	.LVL322:
 614:Veno-Echo.cpp ****     
 6177              		.loc 20 614 5 is_stmt 1 view .LVU1696
 614:Veno-Echo.cpp ****     
 6178              		.loc 20 614 12 is_stmt 0 view .LVU1697
 6179 000a 0021     		movs	r1, #0
 6180 000c CD48     		ldr	r0, .L400
 618:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6181              		.loc 20 618 16 view .LVU1698
 6182 000e B2EE0E8A 		vmov.f32	s16, #1.5e+1
 614:Veno-Echo.cpp ****     
 6183              		.loc 20 614 12 view .LVU1699
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 220


 6184 0012 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 6185              	.LVL323:
 618:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6186              		.loc 20 618 5 is_stmt 1 view .LVU1700
 618:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6187              		.loc 20 618 16 is_stmt 0 view .LVU1701
 6188 0016 1D20     		movs	r0, #29
 6189 0018 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6190              	.LVL324:
 6191 001c 0346     		mov	r3, r0	@ movhi
 6192 001e 0620     		movs	r0, #6
 625:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6193              		.loc 20 625 22 view .LVU1702
 6194 0020 0227     		movs	r7, #2
 618:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6195              		.loc 20 618 16 view .LVU1703
 6196 0022 ADF80830 		strh	r3, [sp, #8]	@ movhi
 6197 0026 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6198              	.LVL325:
 6199 002a 0346     		mov	r3, r0	@ movhi
 618:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6200              		.loc 20 618 80 view .LVU1704
 6201 002c C548     		ldr	r0, .L400
 6202              	.LBB1362:
 6203              	.LBB1363:
  61:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
  62:../DaisySP/Source/Dynamics/crossfade.h ****     Expected input: See [Curve Options](##curve-options)
  63:../DaisySP/Source/Dynamics/crossfade.h ****     */
  64:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetCurve(uint8_t curve) { curve_ = curve; }
 6204              		.loc 10 64 50 view .LVU1705
 6205 002e 0126     		movs	r6, #1
 6206              	.LBE1363:
 6207              	.LBE1362:
 6208              	.LBB1366:
 6209              	.LBB1367:
  40:../DaisySP/Source/Control/adsr.h ****     /** Initializes the Adsr module.
  41:../DaisySP/Source/Control/adsr.h ****         \param sample_rate - The sample rate of the audio engine being run. 
  42:../DaisySP/Source/Control/adsr.h ****     */
  43:../DaisySP/Source/Control/adsr.h ****     void Init(float sample_rate);
  44:../DaisySP/Source/Control/adsr.h **** 
  45:../DaisySP/Source/Control/adsr.h **** 
  46:../DaisySP/Source/Control/adsr.h ****     /** Processes one sample through the filter and returns one sample.
  47:../DaisySP/Source/Control/adsr.h ****         \param gate - trigger the envelope, hold it to sustain 
  48:../DaisySP/Source/Control/adsr.h ****     */
  49:../DaisySP/Source/Control/adsr.h ****     float Process(bool gate);
  50:../DaisySP/Source/Control/adsr.h **** 
  51:../DaisySP/Source/Control/adsr.h ****     /** Sets time
  52:../DaisySP/Source/Control/adsr.h ****         Set time per segment in seconds
  53:../DaisySP/Source/Control/adsr.h ****     */
  54:../DaisySP/Source/Control/adsr.h ****     inline void SetTime(int seg, float time) { seg_time_[seg] = time; }
  55:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
  56:../DaisySP/Source/Control/adsr.h ****         \param sus_level - sets sustain level
  57:../DaisySP/Source/Control/adsr.h ****     */
  58:../DaisySP/Source/Control/adsr.h ****     inline void SetSustainLevel(float sus_level) { sus_ = sus_level; }
 6210              		.loc 7 58 57 view .LVU1706
 6211 0030 F7EE008A 		vmov.f32	s17, #1.0e+0
 6212              	.LBE1367:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 221


 6213              	.LBE1366:
 618:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6214              		.loc 20 618 16 view .LVU1707
 6215 0034 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 618:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6216              		.loc 20 618 80 view .LVU1708
 6217 0038 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6218              	.LVL326:
 618:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6219              		.loc 20 618 16 view .LVU1709
 6220 003c 039A     		ldr	r2, [sp, #12]
 6221 003e 80EE080A 		vdiv.f32	s0, s0, s16
 6222 0042 0299     		ldr	r1, [sp, #8]
 6223 0044 0123     		movs	r3, #1
 6224 0046 C048     		ldr	r0, .L400+4
 6225              	.LBB1370:
 6226              	.LBB1371:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6227              		.loc 7 54 63 view .LVU1710
 6228 0048 4FF07C55 		mov	r5, #1056964608
 6229              	.LBE1371:
 6230              	.LBE1370:
 618:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6231              		.loc 20 618 16 view .LVU1711
 6232 004c FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6233              	.LVL327:
 619:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6234              		.loc 20 619 5 is_stmt 1 view .LVU1712
 619:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6235              		.loc 20 619 16 is_stmt 0 view .LVU1713
 6236 0050 1E20     		movs	r0, #30
 6237 0052 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6238              	.LVL328:
 6239 0056 0346     		mov	r3, r0	@ movhi
 6240 0058 0720     		movs	r0, #7
 632:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6241              		.loc 20 632 20 view .LVU1714
 6242 005a DFF85483 		ldr	r8, .L400+108
 619:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6243              		.loc 20 619 16 view .LVU1715
 6244 005e ADF81030 		strh	r3, [sp, #16]	@ movhi
 6245 0062 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6246              	.LVL329:
 6247 0066 0346     		mov	r3, r0	@ movhi
 619:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6248              		.loc 20 619 80 view .LVU1716
 6249 0068 B648     		ldr	r0, .L400
 6250              	.LBB1374:
 6251              	.LBB1375:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6252              		.loc 7 54 63 view .LVU1717
 6253 006a B84C     		ldr	r4, .L400+8
 6254              	.LBE1375:
 6255              	.LBE1374:
 619:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6256              		.loc 20 619 16 view .LVU1718
 6257 006c ADF81430 		strh	r3, [sp, #20]	@ movhi
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 222


 619:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6258              		.loc 20 619 80 view .LVU1719
 6259 0070 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6260              	.LVL330:
 619:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6261              		.loc 20 619 16 view .LVU1720
 6262 0074 059A     		ldr	r2, [sp, #20]
 6263 0076 80EE080A 		vdiv.f32	s0, s0, s16
 6264 007a 0499     		ldr	r1, [sp, #16]
 6265 007c 0123     		movs	r3, #1
 6266 007e B448     		ldr	r0, .L400+12
 6267 0080 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6268              	.LVL331:
 620:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6269              		.loc 20 620 5 is_stmt 1 view .LVU1721
 620:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6270              		.loc 20 620 18 is_stmt 0 view .LVU1722
 6271 0084 0A20     		movs	r0, #10
 6272 0086 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6273              	.LVL332:
 6274 008a 0346     		mov	r3, r0	@ movhi
 6275 008c 3846     		mov	r0, r7
 6276 008e ADF81830 		strh	r3, [sp, #24]	@ movhi
 6277 0092 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6278              	.LVL333:
 6279 0096 0346     		mov	r3, r0	@ movhi
 620:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6280              		.loc 20 620 85 view .LVU1723
 6281 0098 AA48     		ldr	r0, .L400
 620:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6282              		.loc 20 620 18 view .LVU1724
 6283 009a ADF81C30 		strh	r3, [sp, #28]	@ movhi
 620:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6284              		.loc 20 620 85 view .LVU1725
 6285 009e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6286              	.LVL334:
 620:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6287              		.loc 20 620 18 view .LVU1726
 6288 00a2 079A     		ldr	r2, [sp, #28]
 6289 00a4 80EE080A 		vdiv.f32	s0, s0, s16
 6290 00a8 0699     		ldr	r1, [sp, #24]
 6291 00aa 0023     		movs	r3, #0
 6292 00ac A948     		ldr	r0, .L400+16
 6293 00ae FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6294              	.LVL335:
 621:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6295              		.loc 20 621 5 is_stmt 1 view .LVU1727
 621:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6296              		.loc 20 621 18 is_stmt 0 view .LVU1728
 6297 00b2 0B20     		movs	r0, #11
 6298 00b4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6299              	.LVL336:
 6300 00b8 0346     		mov	r3, r0	@ movhi
 6301 00ba 0320     		movs	r0, #3
 6302 00bc ADF82030 		strh	r3, [sp, #32]	@ movhi
 6303 00c0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6304              	.LVL337:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 223


 6305 00c4 0346     		mov	r3, r0	@ movhi
 621:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6306              		.loc 20 621 85 view .LVU1729
 6307 00c6 9F48     		ldr	r0, .L400
 621:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6308              		.loc 20 621 18 view .LVU1730
 6309 00c8 ADF82430 		strh	r3, [sp, #36]	@ movhi
 621:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6310              		.loc 20 621 85 view .LVU1731
 6311 00cc FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6312              	.LVL338:
 621:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6313              		.loc 20 621 18 view .LVU1732
 6314 00d0 099A     		ldr	r2, [sp, #36]
 6315 00d2 80EE080A 		vdiv.f32	s0, s0, s16
 6316 00d6 0899     		ldr	r1, [sp, #32]
 6317 00d8 0023     		movs	r3, #0
 6318 00da 9F48     		ldr	r0, .L400+20
 6319 00dc FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6320              	.LVL339:
 622:Veno-Echo.cpp **** 
 6321              		.loc 20 622 5 is_stmt 1 view .LVU1733
 622:Veno-Echo.cpp **** 
 6322              		.loc 20 622 20 is_stmt 0 view .LVU1734
 6323 00e0 1820     		movs	r0, #24
 6324 00e2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6325              	.LVL340:
 6326 00e6 0346     		mov	r3, r0	@ movhi
 6327 00e8 0420     		movs	r0, #4
 6328 00ea ADF82830 		strh	r3, [sp, #40]	@ movhi
 6329 00ee FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6330              	.LVL341:
 6331 00f2 0346     		mov	r3, r0	@ movhi
 622:Veno-Echo.cpp **** 
 6332              		.loc 20 622 93 view .LVU1735
 6333 00f4 9348     		ldr	r0, .L400
 622:Veno-Echo.cpp **** 
 6334              		.loc 20 622 20 view .LVU1736
 6335 00f6 ADF82C30 		strh	r3, [sp, #44]	@ movhi
 622:Veno-Echo.cpp **** 
 6336              		.loc 20 622 93 view .LVU1737
 6337 00fa FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6338              	.LVL342:
 622:Veno-Echo.cpp **** 
 6339              		.loc 20 622 20 view .LVU1738
 6340 00fe 3B46     		mov	r3, r7
 6341 0100 80EE080A 		vdiv.f32	s0, s0, s16
 6342 0104 0B9A     		ldr	r2, [sp, #44]
 6343 0106 0A99     		ldr	r1, [sp, #40]
 6344 0108 9448     		ldr	r0, .L400+24
 6345 010a FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6346              	.LVL343:
 625:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6347              		.loc 20 625 5 is_stmt 1 view .LVU1739
 625:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6348              		.loc 20 625 22 is_stmt 0 view .LVU1740
 6349 010e 0020     		movs	r0, #0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 224


 6350 0110 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6351              	.LVL344:
 6352 0114 0346     		mov	r3, r0	@ movhi
 625:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6353              		.loc 20 625 55 view .LVU1741
 6354 0116 8B48     		ldr	r0, .L400
 625:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6355              		.loc 20 625 22 view .LVU1742
 6356 0118 ADF83030 		strh	r3, [sp, #48]	@ movhi
 625:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6357              		.loc 20 625 55 view .LVU1743
 6358 011c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6359              	.LVL345:
 625:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6360              		.loc 20 625 22 view .LVU1744
 6361 0120 0123     		movs	r3, #1
 6362 0122 80EE080A 		vdiv.f32	s0, s0, s16
 6363 0126 0C99     		ldr	r1, [sp, #48]
 6364 0128 1A46     		mov	r2, r3
 6365 012a 8D48     		ldr	r0, .L400+28
 6366 012c 0097     		str	r7, [sp]
 6367 012e FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6368              	.LVL346:
 626:Veno-Echo.cpp **** 
 6369              		.loc 20 626 5 is_stmt 1 view .LVU1745
 626:Veno-Echo.cpp **** 
 6370              		.loc 20 626 22 is_stmt 0 view .LVU1746
 6371 0132 0120     		movs	r0, #1
 6372 0134 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6373              	.LVL347:
 6374 0138 0346     		mov	r3, r0	@ movhi
 626:Veno-Echo.cpp **** 
 6375              		.loc 20 626 55 view .LVU1747
 6376 013a 8248     		ldr	r0, .L400
 626:Veno-Echo.cpp **** 
 6377              		.loc 20 626 22 view .LVU1748
 6378 013c ADF83430 		strh	r3, [sp, #52]	@ movhi
 626:Veno-Echo.cpp **** 
 6379              		.loc 20 626 55 view .LVU1749
 6380 0140 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6381              	.LVL348:
 626:Veno-Echo.cpp **** 
 6382              		.loc 20 626 22 view .LVU1750
 6383 0144 3246     		mov	r2, r6
 6384 0146 80EE080A 		vdiv.f32	s0, s0, s16
 6385 014a 0D99     		ldr	r1, [sp, #52]
 6386 014c 3346     		mov	r3, r6
 6387 014e 8548     		ldr	r0, .L400+32
 6388 0150 0097     		str	r7, [sp]
 6389 0152 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6390              	.LVL349:
 629:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6391              		.loc 20 629 5 is_stmt 1 view .LVU1751
 629:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6392              		.loc 20 629 14 is_stmt 0 view .LVU1752
 6393 0156 1720     		movs	r0, #23
 6394 0158 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 225


 6395              	.LVL350:
 6396 015c 0346     		mov	r3, r0	@ movhi
 629:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6397              		.loc 20 629 48 view .LVU1753
 6398 015e 7948     		ldr	r0, .L400
 629:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6399              		.loc 20 629 14 view .LVU1754
 6400 0160 ADF83830 		strh	r3, [sp, #56]	@ movhi
 629:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6401              		.loc 20 629 48 view .LVU1755
 6402 0164 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6403              	.LVL351:
 629:Veno-Echo.cpp ****     ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6404              		.loc 20 629 14 view .LVU1756
 6405 0168 0E99     		ldr	r1, [sp, #56]
 6406 016a 80EE080A 		vdiv.f32	s0, s0, s16
 6407 016e 7E48     		ldr	r0, .L400+36
 6408 0170 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 6409              	.LVL352:
 630:Veno-Echo.cpp ****     
 6410              		.loc 20 630 5 is_stmt 1 view .LVU1757
 630:Veno-Echo.cpp ****     
 6411              		.loc 20 630 17 is_stmt 0 view .LVU1758
 6412 0174 0520     		movs	r0, #5
 6413 0176 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6414              	.LVL353:
 6415 017a 0346     		mov	r3, r0	@ movhi
 6416 017c 7148     		ldr	r0, .L400
 6417 017e ADF83C30 		strh	r3, [sp, #60]	@ movhi
 6418 0182 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6419              	.LVL354:
 6420 0186 0F99     		ldr	r1, [sp, #60]
 6421 0188 7848     		ldr	r0, .L400+40
 6422 018a FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 6423              	.LVL355:
 632:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6424              		.loc 20 632 5 is_stmt 1 view .LVU1759
 632:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6425              		.loc 20 632 20 is_stmt 0 view .LVU1760
 6426 018e 6D48     		ldr	r0, .L400
 6427 0190 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6428              	.LVL356:
 638:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6429              		.loc 20 638 20 view .LVU1761
 6430 0194 764F     		ldr	r7, .L400+44
 632:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6431              		.loc 20 632 20 view .LVU1762
 6432 0196 4046     		mov	r0, r8
 669:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 6433              		.loc 20 669 17 view .LVU1763
 6434 0198 9FED768A 		vldr.32	s16, .L400+48
 632:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6435              		.loc 20 632 20 view .LVU1764
 6436 019c FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6437              	.LVL357:
 633:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 6438              		.loc 20 633 5 is_stmt 1 view .LVU1765
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 226


 6439              	.LBB1378:
 6440              	.LBI1370:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6441              		.loc 7 54 17 view .LVU1766
 6442              	.LBB1372:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6443              		.loc 7 54 48 view .LVU1767
 6444              	.LBE1372:
 6445              	.LBE1378:
 638:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6446              		.loc 20 638 20 is_stmt 0 view .LVU1768
 6447 01a0 6848     		ldr	r0, .L400
 6448              	.LBB1379:
 6449              	.LBB1368:
 6450              		.loc 7 58 57 view .LVU1769
 6451 01a2 C8ED008A 		vstr.32	s17, [r8]
 6452              	.LBE1368:
 6453              	.LBE1379:
 6454              	.LBB1380:
 6455              	.LBB1373:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6456              		.loc 7 54 63 view .LVU1770
 6457 01a6 C8F80850 		str	r5, [r8, #8]	@ float
 6458              	.LVL358:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6459              		.loc 7 54 63 view .LVU1771
 6460              	.LBE1373:
 6461              	.LBE1380:
 634:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 6462              		.loc 20 634 5 is_stmt 1 view .LVU1772
 6463              	.LBB1381:
 6464              	.LBI1374:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6465              		.loc 7 54 17 view .LVU1773
 6466              	.LBB1376:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6467              		.loc 7 54 48 view .LVU1774
 6468              	.LBE1376:
 6469              	.LBE1381:
 6470              	.LBB1382:
 6471              	.LBB1383:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6472              		.loc 7 54 63 is_stmt 0 view .LVU1775
 6473 01aa C8F81450 		str	r5, [r8, #20]	@ float
 6474              	.LBE1383:
 6475              	.LBE1382:
 6476              	.LBB1385:
 6477              	.LBB1377:
 6478 01ae C8F80C40 		str	r4, [r8, #12]	@ float
 6479              	.LVL359:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6480              		.loc 7 54 63 view .LVU1776
 6481              	.LBE1377:
 6482              	.LBE1385:
 635:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 6483              		.loc 20 635 5 is_stmt 1 view .LVU1777
 6484              	.LBB1386:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 227


 6485              	.LBI1382:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6486              		.loc 7 54 17 view .LVU1778
 6487              	.LBB1384:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6488              		.loc 7 54 48 view .LVU1779
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6489              		.loc 7 54 48 is_stmt 0 view .LVU1780
 6490              	.LBE1384:
 6491              	.LBE1386:
 636:Veno-Echo.cpp **** 
 6492              		.loc 20 636 5 is_stmt 1 view .LVU1781
 6493              	.LBB1387:
 6494              	.LBI1366:
 6495              		.loc 7 58 17 view .LVU1782
 6496              	.LBB1369:
 6497              		.loc 7 58 52 view .LVU1783
 6498              		.loc 7 58 52 is_stmt 0 view .LVU1784
 6499              	.LBE1369:
 6500              	.LBE1387:
 638:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6501              		.loc 20 638 5 is_stmt 1 view .LVU1785
 638:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6502              		.loc 20 638 20 is_stmt 0 view .LVU1786
 6503 01b2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6504              	.LVL360:
 644:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6505              		.loc 20 644 17 view .LVU1787
 6506 01b6 DFF8FC81 		ldr	r8, .L400+112
 638:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6507              		.loc 20 638 20 view .LVU1788
 6508 01ba 3846     		mov	r0, r7
 6509 01bc FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6510              	.LVL361:
 639:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 6511              		.loc 20 639 5 is_stmt 1 view .LVU1789
 6512              	.LBB1388:
 6513              	.LBI1388:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6514              		.loc 7 54 17 view .LVU1790
 6515              	.LBB1389:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6516              		.loc 7 54 48 view .LVU1791
 6517              	.LBE1389:
 6518              	.LBE1388:
 644:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6519              		.loc 20 644 17 is_stmt 0 view .LVU1792
 6520 01c0 6048     		ldr	r0, .L400
 6521              	.LBB1391:
 6522              	.LBB1392:
 6523              		.loc 7 58 57 view .LVU1793
 6524 01c2 C7ED008A 		vstr.32	s17, [r7]
 6525              	.LBE1392:
 6526              	.LBE1391:
 6527              	.LBB1394:
 6528              	.LBB1390:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 228


 6529              		.loc 7 54 63 view .LVU1794
 6530 01c6 BD60     		str	r5, [r7, #8]	@ float
 6531              	.LVL362:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6532              		.loc 7 54 63 view .LVU1795
 6533              	.LBE1390:
 6534              	.LBE1394:
 640:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 6535              		.loc 20 640 5 is_stmt 1 view .LVU1796
 6536              	.LBB1395:
 6537              	.LBI1395:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6538              		.loc 7 54 17 view .LVU1797
 6539              	.LBB1396:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6540              		.loc 7 54 48 view .LVU1798
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6541              		.loc 7 54 63 is_stmt 0 view .LVU1799
 6542 01c8 FC60     		str	r4, [r7, #12]	@ float
 6543              	.LVL363:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6544              		.loc 7 54 63 view .LVU1800
 6545              	.LBE1396:
 6546              	.LBE1395:
 641:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 6547              		.loc 20 641 5 is_stmt 1 view .LVU1801
 6548              	.LBB1397:
 6549              	.LBI1397:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6550              		.loc 7 54 17 view .LVU1802
 6551              	.LBB1398:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6552              		.loc 7 54 48 view .LVU1803
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6553              		.loc 7 54 63 is_stmt 0 view .LVU1804
 6554 01ca 7D61     		str	r5, [r7, #20]	@ float
 6555              	.LVL364:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6556              		.loc 7 54 63 view .LVU1805
 6557              	.LBE1398:
 6558              	.LBE1397:
 642:Veno-Echo.cpp **** 
 6559              		.loc 20 642 5 is_stmt 1 view .LVU1806
 6560              	.LBB1399:
 6561              	.LBI1391:
 6562              		.loc 7 58 17 view .LVU1807
 6563              	.LBB1393:
 6564              		.loc 7 58 52 view .LVU1808
 6565              		.loc 7 58 52 is_stmt 0 view .LVU1809
 6566              	.LBE1393:
 6567              	.LBE1399:
 644:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6568              		.loc 20 644 5 is_stmt 1 view .LVU1810
 644:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6569              		.loc 20 644 17 is_stmt 0 view .LVU1811
 6570 01cc FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6571              	.LVL365:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 229


 650:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6572              		.loc 20 650 17 view .LVU1812
 6573 01d0 694F     		ldr	r7, .L400+52
 644:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6574              		.loc 20 644 17 view .LVU1813
 6575 01d2 4046     		mov	r0, r8
 6576 01d4 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6577              	.LVL366:
 645:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 6578              		.loc 20 645 5 is_stmt 1 view .LVU1814
 6579              	.LBB1400:
 6580              	.LBI1400:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6581              		.loc 7 54 17 view .LVU1815
 6582              	.LBB1401:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6583              		.loc 7 54 48 view .LVU1816
 6584              	.LBE1401:
 6585              	.LBE1400:
 650:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6586              		.loc 20 650 17 is_stmt 0 view .LVU1817
 6587 01d8 5A48     		ldr	r0, .L400
 6588              	.LBB1403:
 6589              	.LBB1404:
 6590              		.loc 7 58 57 view .LVU1818
 6591 01da C8ED008A 		vstr.32	s17, [r8]
 6592              	.LBE1404:
 6593              	.LBE1403:
 6594              	.LBB1406:
 6595              	.LBB1402:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6596              		.loc 7 54 63 view .LVU1819
 6597 01de C8F80840 		str	r4, [r8, #8]	@ float
 6598              	.LVL367:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6599              		.loc 7 54 63 view .LVU1820
 6600              	.LBE1402:
 6601              	.LBE1406:
 646:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 6602              		.loc 20 646 5 is_stmt 1 view .LVU1821
 6603              	.LBB1407:
 6604              	.LBI1407:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6605              		.loc 7 54 17 view .LVU1822
 6606              	.LBB1408:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6607              		.loc 7 54 48 view .LVU1823
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6608              		.loc 7 54 63 is_stmt 0 view .LVU1824
 6609 01e2 C8F80C40 		str	r4, [r8, #12]	@ float
 6610              	.LVL368:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6611              		.loc 7 54 63 view .LVU1825
 6612              	.LBE1408:
 6613              	.LBE1407:
 647:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 6614              		.loc 20 647 5 is_stmt 1 view .LVU1826
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 230


 6615              	.LBB1409:
 6616              	.LBI1409:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6617              		.loc 7 54 17 view .LVU1827
 6618              	.LBB1410:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6619              		.loc 7 54 48 view .LVU1828
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6620              		.loc 7 54 63 is_stmt 0 view .LVU1829
 6621 01e6 C8F81440 		str	r4, [r8, #20]	@ float
 6622              	.LVL369:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6623              		.loc 7 54 63 view .LVU1830
 6624              	.LBE1410:
 6625              	.LBE1409:
 648:Veno-Echo.cpp **** 
 6626              		.loc 20 648 5 is_stmt 1 view .LVU1831
 6627              	.LBB1411:
 6628              	.LBI1403:
 6629              		.loc 7 58 17 view .LVU1832
 6630              	.LBB1405:
 6631              		.loc 7 58 52 view .LVU1833
 6632              		.loc 7 58 52 is_stmt 0 view .LVU1834
 6633              	.LBE1405:
 6634              	.LBE1411:
 650:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6635              		.loc 20 650 5 is_stmt 1 view .LVU1835
 650:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6636              		.loc 20 650 17 is_stmt 0 view .LVU1836
 6637 01ea FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6638              	.LVL370:
 6639 01ee 3846     		mov	r0, r7
 6640 01f0 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6641              	.LVL371:
 651:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 6642              		.loc 20 651 5 is_stmt 1 view .LVU1837
 6643              	.LBB1412:
 6644              	.LBI1412:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6645              		.loc 7 54 17 view .LVU1838
 6646              	.LBB1413:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6647              		.loc 7 54 48 view .LVU1839
 6648              	.LBE1413:
 6649              	.LBE1412:
 6650              	.LBB1415:
 6651              	.LBB1416:
 6652              	.LBB1417:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 6653              		.loc 10 45 16 is_stmt 0 view .LVU1840
 6654 01f4 6149     		ldr	r1, .L400+56
 6655              	.LBE1417:
 6656              	.LBE1416:
 6657              	.LBE1415:
 6658              	.LBB1422:
 6659              	.LBB1423:
 6660              	.LBB1424:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 231


 6661 01f6 624A     		ldr	r2, .L400+60
 6662              	.LBE1424:
 6663              	.LBE1423:
 6664              	.LBE1422:
 6665              	.LBB1429:
 6666              	.LBB1430:
 6667              	.LBB1431:
 6668 01f8 624B     		ldr	r3, .L400+64
 6669              	.LBE1431:
 6670              	.LBE1430:
 6671              	.LBE1429:
 6672              	.LBB1436:
 6673              	.LBB1420:
 6674              	.LBB1418:
 6675 01fa 0D60     		str	r5, [r1]	@ float
 6676              	.LBE1418:
 6677              	.LBE1420:
 6678              	.LBE1436:
 6679              	.LBB1437:
 6680              	.LBB1427:
 6681              	.LBB1425:
 6682 01fc 1560     		str	r5, [r2]	@ float
 6683              	.LBE1425:
 6684              	.LBE1427:
 6685              	.LBE1437:
 6686              	.LBB1438:
 6687              	.LBB1434:
 6688              	.LBB1432:
 6689 01fe 1D60     		str	r5, [r3]	@ float
 6690              	.LBE1432:
 6691              	.LBE1434:
 6692              	.LBE1438:
 6693              	.LBB1439:
 6694              	.LBB1364:
 6695              		.loc 10 64 50 view .LVU1841
 6696 0200 0E71     		strb	r6, [r1, #4]
 6697              	.LBE1364:
 6698              	.LBE1439:
 6699              	.LBB1440:
 6700              	.LBB1441:
 6701 0202 1671     		strb	r6, [r2, #4]
 6702              	.LBE1441:
 6703              	.LBE1440:
 6704              	.LBB1443:
 6705              	.LBB1444:
 6706 0204 1E71     		strb	r6, [r3, #4]
 6707              	.LBE1444:
 6708              	.LBE1443:
 665:Veno-Echo.cpp **** 
 6709              		.loc 20 665 15 view .LVU1842
 6710 0206 4F48     		ldr	r0, .L400
 6711              	.LBB1446:
 6712              	.LBB1447:
 6713              		.loc 7 58 57 view .LVU1843
 6714 0208 C7ED008A 		vstr.32	s17, [r7]
 6715              	.LBE1447:
 6716              	.LBE1446:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 232


 6717              	.LBB1449:
 6718              	.LBB1414:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6719              		.loc 7 54 63 view .LVU1844
 6720 020c BC60     		str	r4, [r7, #8]	@ float
 6721              	.LVL372:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6722              		.loc 7 54 63 view .LVU1845
 6723              	.LBE1414:
 6724              	.LBE1449:
 652:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 6725              		.loc 20 652 5 is_stmt 1 view .LVU1846
 6726              	.LBB1450:
 6727              	.LBI1450:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6728              		.loc 7 54 17 view .LVU1847
 6729              	.LBB1451:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6730              		.loc 7 54 48 view .LVU1848
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6731              		.loc 7 54 63 is_stmt 0 view .LVU1849
 6732 020e FC60     		str	r4, [r7, #12]	@ float
 6733              	.LVL373:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6734              		.loc 7 54 63 view .LVU1850
 6735              	.LBE1451:
 6736              	.LBE1450:
 653:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 6737              		.loc 20 653 5 is_stmt 1 view .LVU1851
 6738              	.LBB1452:
 6739              	.LBI1452:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6740              		.loc 7 54 17 view .LVU1852
 6741              	.LBB1453:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6742              		.loc 7 54 48 view .LVU1853
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6743              		.loc 7 54 63 is_stmt 0 view .LVU1854
 6744 0210 7C61     		str	r4, [r7, #20]	@ float
 6745              	.LVL374:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6746              		.loc 7 54 63 view .LVU1855
 6747              	.LBE1453:
 6748              	.LBE1452:
 654:Veno-Echo.cpp **** 
 6749              		.loc 20 654 5 is_stmt 1 view .LVU1856
 6750              	.LBB1454:
 6751              	.LBI1446:
 6752              		.loc 7 58 17 view .LVU1857
 6753              	.LBB1448:
 6754              		.loc 7 58 52 view .LVU1858
 6755              		.loc 7 58 52 is_stmt 0 view .LVU1859
 6756              	.LBE1448:
 6757              	.LBE1454:
 657:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 6758              		.loc 20 657 5 is_stmt 1 view .LVU1860
 6759              	.LBB1455:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 233


 6760              	.LBI1415:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6761              		.loc 10 51 17 view .LVU1861
 6762              	.LBE1455:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6763              		.loc 10 51 26 view .LVU1862
 6764              	.LBB1456:
 6765              	.LBB1421:
 6766              	.LBI1416:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 6767              		.loc 10 43 17 view .LVU1863
 6768              	.LBB1419:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 6769              		.loc 10 45 9 view .LVU1864
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6770              		.loc 10 46 9 view .LVU1865
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6771              		.loc 10 46 9 is_stmt 0 view .LVU1866
 6772              	.LBE1419:
 6773              	.LBE1421:
 6774              	.LBE1456:
 658:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 6775              		.loc 20 658 5 is_stmt 1 view .LVU1867
 6776              	.LBB1457:
 6777              	.LBI1362:
 6778              		.loc 10 64 17 view .LVU1868
 6779              	.LBB1365:
 6780              		.loc 10 64 43 view .LVU1869
 6781              		.loc 10 64 43 is_stmt 0 view .LVU1870
 6782              	.LBE1365:
 6783              	.LBE1457:
 659:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 6784              		.loc 20 659 5 is_stmt 1 view .LVU1871
 6785              	.LBB1458:
 6786              	.LBI1422:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6787              		.loc 10 51 17 view .LVU1872
 6788              	.LBE1458:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6789              		.loc 10 51 26 view .LVU1873
 6790              	.LBB1459:
 6791              	.LBB1428:
 6792              	.LBI1423:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 6793              		.loc 10 43 17 view .LVU1874
 6794              	.LBB1426:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 6795              		.loc 10 45 9 view .LVU1875
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6796              		.loc 10 46 9 view .LVU1876
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6797              		.loc 10 46 9 is_stmt 0 view .LVU1877
 6798              	.LBE1426:
 6799              	.LBE1428:
 6800              	.LBE1459:
 660:Veno-Echo.cpp **** 
 6801              		.loc 20 660 5 is_stmt 1 view .LVU1878
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 234


 6802              	.LBB1460:
 6803              	.LBI1440:
 6804              		.loc 10 64 17 view .LVU1879
 6805              	.LBB1442:
 6806              		.loc 10 64 43 view .LVU1880
 6807              		.loc 10 64 43 is_stmt 0 view .LVU1881
 6808              	.LBE1442:
 6809              	.LBE1460:
 662:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 6810              		.loc 20 662 5 is_stmt 1 view .LVU1882
 6811              	.LBB1461:
 6812              	.LBI1429:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6813              		.loc 10 51 17 view .LVU1883
 6814              	.LBE1461:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 6815              		.loc 10 51 26 view .LVU1884
 6816              	.LBB1462:
 6817              	.LBB1435:
 6818              	.LBI1430:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 6819              		.loc 10 43 17 view .LVU1885
 6820              	.LBB1433:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 6821              		.loc 10 45 9 view .LVU1886
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6822              		.loc 10 46 9 view .LVU1887
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 6823              		.loc 10 46 9 is_stmt 0 view .LVU1888
 6824              	.LBE1433:
 6825              	.LBE1435:
 6826              	.LBE1462:
 663:Veno-Echo.cpp **** 
 6827              		.loc 20 663 5 is_stmt 1 view .LVU1889
 6828              	.LBB1463:
 6829              	.LBI1443:
 6830              		.loc 10 64 17 view .LVU1890
 6831              	.LBB1445:
 6832              		.loc 10 64 43 view .LVU1891
 6833              		.loc 10 64 43 is_stmt 0 view .LVU1892
 6834              	.LBE1445:
 6835              	.LBE1463:
 665:Veno-Echo.cpp **** 
 6836              		.loc 20 665 5 is_stmt 1 view .LVU1893
 665:Veno-Echo.cpp **** 
 6837              		.loc 20 665 15 is_stmt 0 view .LVU1894
 6838 0212 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6839              	.LVL375:
 6840 0216 FFF7FEFF 		bl	_Z10InitDelaysf
 6841              	.LVL376:
 668:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 6842              		.loc 20 668 5 is_stmt 1 view .LVU1895
 668:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 6843              		.loc 20 668 15 is_stmt 0 view .LVU1896
 6844 021a 4A48     		ldr	r0, .L400
 6845 021c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6846              	.LVL377:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 235


 6847 0220 5948     		ldr	r0, .L400+68
 6848 0222 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6849              	.LVL378:
 669:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 6850              		.loc 20 669 5 is_stmt 1 view .LVU1897
 669:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 6851              		.loc 20 669 17 is_stmt 0 view .LVU1898
 6852 0226 B0EE480A 		vmov.f32	s0, s16
 6853 022a 5748     		ldr	r0, .L400+68
 6854 022c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6855              	.LVL379:
 670:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 6856              		.loc 20 670 5 is_stmt 1 view .LVU1899
 670:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 6857              		.loc 20 670 18 is_stmt 0 view .LVU1900
 6858 0230 9FED560A 		vldr.32	s0, .L400+72
 6859 0234 5448     		ldr	r0, .L400+68
 6860 0236 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6861              	.LVL380:
 671:Veno-Echo.cpp **** 
 6862              		.loc 20 671 5 is_stmt 1 view .LVU1901
 671:Veno-Echo.cpp **** 
 6863              		.loc 20 671 19 is_stmt 0 view .LVU1902
 6864 023a 9FED550A 		vldr.32	s0, .L400+76
 6865 023e 5248     		ldr	r0, .L400+68
 6866 0240 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6867              	.LVL381:
 673:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 6868              		.loc 20 673 5 is_stmt 1 view .LVU1903
 673:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 6869              		.loc 20 673 15 is_stmt 0 view .LVU1904
 6870 0244 3F48     		ldr	r0, .L400
 6871 0246 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6872              	.LVL382:
 6873 024a 5248     		ldr	r0, .L400+80
 6874 024c FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6875              	.LVL383:
 674:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 6876              		.loc 20 674 5 is_stmt 1 view .LVU1905
 674:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 6877              		.loc 20 674 17 is_stmt 0 view .LVU1906
 6878 0250 B0EE480A 		vmov.f32	s0, s16
 6879 0254 4F48     		ldr	r0, .L400+80
 6880 0256 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6881              	.LVL384:
 675:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 6882              		.loc 20 675 5 is_stmt 1 view .LVU1907
 675:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 6883              		.loc 20 675 18 is_stmt 0 view .LVU1908
 6884 025a 9FED4C0A 		vldr.32	s0, .L400+72
 6885 025e 4D48     		ldr	r0, .L400+80
 6886 0260 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6887              	.LVL385:
 676:Veno-Echo.cpp **** 
 6888              		.loc 20 676 5 is_stmt 1 view .LVU1909
 676:Veno-Echo.cpp **** 
 6889              		.loc 20 676 19 is_stmt 0 view .LVU1910
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 236


 6890 0264 9FED4A0A 		vldr.32	s0, .L400+76
 6891 0268 4A48     		ldr	r0, .L400+80
 6892 026a FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6893              	.LVL386:
 679:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 6894              		.loc 20 679 5 is_stmt 1 view .LVU1911
 679:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 6895              		.loc 20 679 15 is_stmt 0 view .LVU1912
 6896 026e 3548     		ldr	r0, .L400
 6897 0270 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6898              	.LVL387:
 6899 0274 4848     		ldr	r0, .L400+84
 6900 0276 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6901              	.LVL388:
 680:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 6902              		.loc 20 680 5 is_stmt 1 view .LVU1913
 680:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 6903              		.loc 20 680 17 is_stmt 0 view .LVU1914
 6904 027a B0EE480A 		vmov.f32	s0, s16
 6905 027e 4648     		ldr	r0, .L400+84
 6906 0280 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6907              	.LVL389:
 681:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 6908              		.loc 20 681 5 is_stmt 1 view .LVU1915
 681:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 6909              		.loc 20 681 18 is_stmt 0 view .LVU1916
 6910 0284 9FED450A 		vldr.32	s0, .L400+88
 6911 0288 4348     		ldr	r0, .L400+84
 6912 028a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6913              	.LVL390:
 682:Veno-Echo.cpp **** 
 6914              		.loc 20 682 5 is_stmt 1 view .LVU1917
 682:Veno-Echo.cpp **** 
 6915              		.loc 20 682 19 is_stmt 0 view .LVU1918
 6916 028e 9FED400A 		vldr.32	s0, .L400+76
 6917 0292 4148     		ldr	r0, .L400+84
 6918 0294 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6919              	.LVL391:
 684:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 6920              		.loc 20 684 5 is_stmt 1 view .LVU1919
 684:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 6921              		.loc 20 684 15 is_stmt 0 view .LVU1920
 6922 0298 2A48     		ldr	r0, .L400
 6923 029a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6924              	.LVL392:
 6925 029e 4048     		ldr	r0, .L400+92
 6926 02a0 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6927              	.LVL393:
 685:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 6928              		.loc 20 685 5 is_stmt 1 view .LVU1921
 685:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 6929              		.loc 20 685 17 is_stmt 0 view .LVU1922
 6930 02a4 B0EE480A 		vmov.f32	s0, s16
 6931 02a8 3D48     		ldr	r0, .L400+92
 6932 02aa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6933              	.LVL394:
 686:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 237


 6934              		.loc 20 686 5 is_stmt 1 view .LVU1923
 686:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 6935              		.loc 20 686 18 is_stmt 0 view .LVU1924
 6936 02ae 9FED3B0A 		vldr.32	s0, .L400+88
 6937 02b2 3B48     		ldr	r0, .L400+92
 6938 02b4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6939              	.LVL395:
 687:Veno-Echo.cpp **** 
 6940              		.loc 20 687 5 is_stmt 1 view .LVU1925
 687:Veno-Echo.cpp **** 
 6941              		.loc 20 687 19 is_stmt 0 view .LVU1926
 6942 02b8 9FED350A 		vldr.32	s0, .L400+76
 6943 02bc 3848     		ldr	r0, .L400+92
 6944 02be FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6945              	.LVL396:
 690:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 6946              		.loc 20 690 5 is_stmt 1 view .LVU1927
 690:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 6947              		.loc 20 690 20 is_stmt 0 view .LVU1928
 6948 02c2 2048     		ldr	r0, .L400
 6949 02c4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6950              	.LVL397:
 6951 02c8 3648     		ldr	r0, .L400+96
 6952 02ca FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6953              	.LVL398:
 691:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 6954              		.loc 20 691 5 is_stmt 1 view .LVU1929
 691:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 6955              		.loc 20 691 22 is_stmt 0 view .LVU1930
 6956 02ce B0EE480A 		vmov.f32	s0, s16
 6957 02d2 3448     		ldr	r0, .L400+96
 6958 02d4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6959              	.LVL399:
 692:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 6960              		.loc 20 692 5 is_stmt 1 view .LVU1931
 692:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 6961              		.loc 20 692 23 is_stmt 0 view .LVU1932
 6962 02d8 9FED2C0A 		vldr.32	s0, .L400+72
 6963 02dc 3148     		ldr	r0, .L400+96
 6964 02de FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6965              	.LVL400:
 693:Veno-Echo.cpp **** 
 6966              		.loc 20 693 5 is_stmt 1 view .LVU1933
 693:Veno-Echo.cpp **** 
 6967              		.loc 20 693 24 is_stmt 0 view .LVU1934
 6968 02e2 9FED2B0A 		vldr.32	s0, .L400+76
 6969 02e6 2F48     		ldr	r0, .L400+96
 6970 02e8 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6971              	.LVL401:
 695:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 6972              		.loc 20 695 5 is_stmt 1 view .LVU1935
 695:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 6973              		.loc 20 695 20 is_stmt 0 view .LVU1936
 6974 02ec 1548     		ldr	r0, .L400
 6975 02ee FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6976              	.LVL402:
 6977 02f2 2D48     		ldr	r0, .L400+100
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 238


 6978 02f4 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 6979              	.LVL403:
 696:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 6980              		.loc 20 696 5 is_stmt 1 view .LVU1937
 696:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 6981              		.loc 20 696 22 is_stmt 0 view .LVU1938
 6982 02f8 B0EE480A 		vmov.f32	s0, s16
 6983 02fc 2A48     		ldr	r0, .L400+100
 6984 02fe FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6985              	.LVL404:
 697:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 6986              		.loc 20 697 5 is_stmt 1 view .LVU1939
 697:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 6987              		.loc 20 697 23 is_stmt 0 view .LVU1940
 6988 0302 9FED220A 		vldr.32	s0, .L400+72
 6989 0306 2848     		ldr	r0, .L400+100
 6990 0308 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6991              	.LVL405:
 698:Veno-Echo.cpp **** 
 6992              		.loc 20 698 5 is_stmt 1 view .LVU1941
 698:Veno-Echo.cpp **** 
 6993              		.loc 20 698 24 is_stmt 0 view .LVU1942
 6994 030c 9FED200A 		vldr.32	s0, .L400+76
 6995 0310 2548     		ldr	r0, .L400+100
 6996 0312 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 6997              	.LVL406:
 701:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 6998              		.loc 20 701 5 is_stmt 1 view .LVU1943
 701:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 6999              		.loc 20 701 20 is_stmt 0 view .LVU1944
 7000 0316 0B48     		ldr	r0, .L400
 7001 0318 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7002              	.LVL407:
 7003 031c 2348     		ldr	r0, .L400+104
 7004 031e FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7005              	.LVL408:
 702:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 7006              		.loc 20 702 5 is_stmt 1 view .LVU1945
 702:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 7007              		.loc 20 702 22 is_stmt 0 view .LVU1946
 7008 0322 B0EE480A 		vmov.f32	s0, s16
 7009 0326 2148     		ldr	r0, .L400+104
 7010 0328 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7011              	.LVL409:
 703:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 7012              		.loc 20 703 5 is_stmt 1 view .LVU1947
 703:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 7013              		.loc 20 703 23 is_stmt 0 view .LVU1948
 7014 032c 9FED1B0A 		vldr.32	s0, .L400+88
 7015 0330 1E48     		ldr	r0, .L400+104
 7016 0332 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7017              	.LVL410:
 704:Veno-Echo.cpp **** 
 7018              		.loc 20 704 5 is_stmt 1 view .LVU1949
 704:Veno-Echo.cpp **** 
 7019              		.loc 20 704 24 is_stmt 0 view .LVU1950
 7020 0336 9FED160A 		vldr.32	s0, .L400+76
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 239


 7021 033a 1C48     		ldr	r0, .L400+104
 7022 033c FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7023              	.LVL411:
 7024 0340 3AE0     		b	.L401
 7025              	.L402:
 7026 0342 00BF     		.align	2
 7027              	.L400:
 7028 0344 00000000 		.word	.LANCHOR4
 7029 0348 00000000 		.word	.LANCHOR90
 7030 034c 0AD7233C 		.word	1008981770
 7031 0350 00000000 		.word	.LANCHOR91
 7032 0354 00000000 		.word	.LANCHOR92
 7033 0358 00000000 		.word	.LANCHOR93
 7034 035c 00000000 		.word	.LANCHOR94
 7035 0360 00000000 		.word	.LANCHOR95
 7036 0364 00000000 		.word	.LANCHOR96
 7037 0368 00000000 		.word	.LANCHOR97
 7038 036c 00000000 		.word	.LANCHOR87
 7039 0370 00000000 		.word	.LANCHOR99
 7040 0374 00000000 		.word	0
 7041 0378 00000000 		.word	.LANCHOR101
 7042 037c 00000000 		.word	.LANCHOR102
 7043 0380 00000000 		.word	.LANCHOR103
 7044 0384 00000000 		.word	.LANCHOR64
 7045 0388 00000000 		.word	.LANCHOR46
 7046 038c 00803B46 		.word	1178304512
 7047 0390 3333333F 		.word	1060320051
 7048 0394 00000000 		.word	.LANCHOR47
 7049 0398 00000000 		.word	.LANCHOR34
 7050 039c 00004843 		.word	1128792064
 7051 03a0 00000000 		.word	.LANCHOR35
 7052 03a4 00000000 		.word	.LANCHOR48
 7053 03a8 00000000 		.word	.LANCHOR49
 7054 03ac 00000000 		.word	.LANCHOR36
 7055 03b0 00000000 		.word	.LANCHOR98
 7056 03b4 00000000 		.word	.LANCHOR100
 7057              	.L401:
 706:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 7058              		.loc 20 706 5 is_stmt 1 view .LVU1951
 706:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 7059              		.loc 20 706 20 is_stmt 0 view .LVU1952
 7060 03b8 7948     		ldr	r0, .L403
 7061 03ba FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7062              	.LVL412:
 7063 03be 7948     		ldr	r0, .L403+4
 7064 03c0 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7065              	.LVL413:
 707:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 7066              		.loc 20 707 5 is_stmt 1 view .LVU1953
 707:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 7067              		.loc 20 707 22 is_stmt 0 view .LVU1954
 7068 03c4 B0EE480A 		vmov.f32	s0, s16
 7069 03c8 7648     		ldr	r0, .L403+4
 7070 03ca FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7071              	.LVL414:
 708:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 7072              		.loc 20 708 5 is_stmt 1 view .LVU1955
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 240


 708:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 7073              		.loc 20 708 23 is_stmt 0 view .LVU1956
 7074 03ce 9FED760A 		vldr.32	s0, .L403+8
 7075 03d2 7448     		ldr	r0, .L403+4
 7076 03d4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7077              	.LVL415:
 709:Veno-Echo.cpp **** 
 7078              		.loc 20 709 5 is_stmt 1 view .LVU1957
 709:Veno-Echo.cpp **** 
 7079              		.loc 20 709 24 is_stmt 0 view .LVU1958
 7080 03d8 9FED740A 		vldr.32	s0, .L403+12
 7081 03dc 7148     		ldr	r0, .L403+4
 7082 03de FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7083              	.LVL416:
 711:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 7084              		.loc 20 711 5 is_stmt 1 view .LVU1959
 711:Veno-Echo.cpp ****     DcBlock_RFB.Init(hw.AudioSampleRate());
 7085              		.loc 20 711 21 is_stmt 0 view .LVU1960
 7086 03e2 6F48     		ldr	r0, .L403
 7087 03e4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7088              	.LVL417:
 7089 03e8 7148     		ldr	r0, .L403+16
 7090 03ea FFF7FEFF 		bl	_ZN7daisysp7DcBlock4InitEf
 7091              	.LVL418:
 712:Veno-Echo.cpp **** 
 7092              		.loc 20 712 5 is_stmt 1 view .LVU1961
 712:Veno-Echo.cpp **** 
 7093              		.loc 20 712 21 is_stmt 0 view .LVU1962
 7094 03ee 6C48     		ldr	r0, .L403
 7095 03f0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7096              	.LVL419:
 7097 03f4 6F48     		ldr	r0, .L403+20
 7098 03f6 FFF7FEFF 		bl	_ZN7daisysp7DcBlock4InitEf
 7099              	.LVL420:
 715:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 7100              		.loc 20 715 5 is_stmt 1 view .LVU1963
 715:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 7101              		.loc 20 715 13 is_stmt 0 view .LVU1964
 7102 03fa 6948     		ldr	r0, .L403
 7103 03fc FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7104              	.LVL421:
 7105 0400 F0EE407A 		vmov.f32	s15, s0
 7106              	.LVL422:
 7107              	.LBB1464:
 7108              	.LBI1464:
  42:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7109              		.loc 8 42 10 is_stmt 1 view .LVU1965
 7110              	.LBB1465:
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7111              		.loc 8 44 9 view .LVU1966
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7112              		.loc 8 44 20 is_stmt 0 view .LVU1967
 7113 0404 6C4C     		ldr	r4, .L403+24
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7114              		.loc 8 46 20 view .LVU1968
 7115 0406 9FED6D0A 		vldr.32	s0, .L403+28
 7116              	.LVL423:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 241


  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7117              		.loc 8 45 27 view .LVU1969
 7118 040a 88EEA77A 		vdiv.f32	s14, s17, s15
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7119              		.loc 8 49 34 view .LVU1970
 7120 040e 2046     		mov	r0, r4
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 7121              		.loc 8 47 20 view .LVU1971
 7122 0410 6560     		str	r5, [r4, #4]	@ float
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7123              		.loc 8 44 20 view .LVU1972
 7124 0412 C4ED037A 		vstr.32	s15, [r4, #12]
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7125              		.loc 8 45 9 is_stmt 1 view .LVU1973
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 7126              		.loc 8 48 20 is_stmt 0 view .LVU1974
 7127 0416 84ED058A 		vstr.32	s16, [r4, #20]
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7128              		.loc 8 46 20 view .LVU1975
 7129 041a 84ED020A 		vstr.32	s0, [r4, #8]
 7130              	.LBE1465:
 7131              	.LBE1464:
 732:Veno-Echo.cpp **** 
 7132              		.loc 20 732 17 view .LVU1976
 7133 041e 684D     		ldr	r5, .L403+32
 7134              	.LBB1469:
 7135              	.LBB1466:
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7136              		.loc 8 45 20 view .LVU1977
 7137 0420 84ED047A 		vstr.32	s14, [r4, #16]
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7138              		.loc 8 46 9 is_stmt 1 view .LVU1978
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 7139              		.loc 8 47 9 view .LVU1979
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 7140              		.loc 8 48 9 view .LVU1980
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7141              		.loc 8 49 9 view .LVU1981
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7142              		.loc 8 49 34 is_stmt 0 view .LVU1982
 7143 0424 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 7144              	.LVL424:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7145              		.loc 8 52 20 view .LVU1983
 7146 0428 40F20113 		movw	r3, #257
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7147              		.loc 8 49 34 view .LVU1984
 7148 042c F0EE407A 		vmov.f32	s15, s0
 7149              	.LBE1466:
 7150              	.LBE1469:
 7151              	.LBB1470:
 7152              	.LBB1471:
 7153              		.loc 8 61 34 view .LVU1985
 7154 0430 2046     		mov	r0, r4
 7155              	.LBE1471:
 7156              	.LBE1470:
 7157              	.LBB1475:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 242


 7158              	.LBB1476:
  62:../DaisySP/Source/Synthesis/oscillator.h ****     }
  63:../DaisySP/Source/Synthesis/oscillator.h **** 
  64:../DaisySP/Source/Synthesis/oscillator.h **** 
  65:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  66:../DaisySP/Source/Synthesis/oscillator.h ****     */
  67:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:../DaisySP/Source/Synthesis/oscillator.h ****     */
  70:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  71:../DaisySP/Source/Synthesis/oscillator.h ****     {
  72:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 7159              		.loc 8 72 19 view .LVU1986
 7160 0432 2670     		strb	r6, [r4]
 7161              	.LBE1476:
 7162              	.LBE1475:
 7163              	.LBB1478:
 7164              	.LBB1467:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7165              		.loc 8 52 20 view .LVU1987
 7166 0434 A384     		strh	r3, [r4, #36]	@ movhi
 7167              	.LBE1467:
 7168              	.LBE1478:
 7169              	.LBB1479:
 7170              	.LBB1472:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7171              		.loc 8 61 34 view .LVU1988
 7172 0436 B0EE680A 		vmov.f32	s0, s17
 7173              	.LBE1472:
 7174              	.LBE1479:
 7175              	.LBB1480:
 7176              	.LBB1468:
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7177              		.loc 8 49 20 view .LVU1989
 7178 043a C4ED067A 		vstr.32	s15, [r4, #24]
  50:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
 7179              		.loc 8 50 9 is_stmt 1 view .LVU1990
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
 7180              		.loc 8 51 9 view .LVU1991
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7181              		.loc 8 52 9 view .LVU1992
 7182              	.LVL425:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7183              		.loc 8 52 9 is_stmt 0 view .LVU1993
 7184              	.LBE1468:
 7185              	.LBE1480:
 716:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 7186              		.loc 20 716 5 is_stmt 1 view .LVU1994
 7187              	.LBB1481:
 7188              	.LBI1475:
  70:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7189              		.loc 8 70 17 view .LVU1995
 7190              	.LBB1477:
 7191              		.loc 8 72 9 view .LVU1996
 7192              		.loc 8 72 9 is_stmt 0 view .LVU1997
 7193              	.LBE1477:
 7194              	.LBE1481:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 243


 717:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 7195              		.loc 20 717 5 is_stmt 1 view .LVU1998
 7196              	.LBB1482:
 7197              	.LBI1470:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7198              		.loc 8 58 17 view .LVU1999
 7199              	.LBB1473:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 7200              		.loc 8 60 9 view .LVU2000
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7201              		.loc 8 61 9 view .LVU2001
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 7202              		.loc 8 60 20 is_stmt 0 view .LVU2002
 7203 043e C4ED028A 		vstr.32	s17, [r4, #8]
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7204              		.loc 8 61 34 view .LVU2003
 7205 0442 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 7206              	.LVL426:
 7207 0446 F0EE407A 		vmov.f32	s15, s0
 7208              	.LBE1473:
 7209              	.LBE1482:
 720:Veno-Echo.cpp **** 
 7210              		.loc 20 720 19 view .LVU2004
 7211 044a 41F27072 		movw	r2, #6000
 7212 044e 5021     		movs	r1, #80
 7213 0450 B7EE040A 		vmov.f32	s0, #1.25e+0
 7214 0454 5B48     		ldr	r0, .L403+36
 7215              	.LBB1483:
 7216              	.LBB1484:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7217              		.loc 8 67 46 view .LVU2005
 7218 0456 C4ED018A 		vstr.32	s17, [r4, #4]
 7219              	.LBE1484:
 7220              	.LBE1483:
 7221              	.LBB1486:
 7222              	.LBB1474:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7223              		.loc 8 61 20 view .LVU2006
 7224 045a C4ED067A 		vstr.32	s15, [r4, #24]
 7225              	.LVL427:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7226              		.loc 8 61 20 view .LVU2007
 7227              	.LBE1474:
 7228              	.LBE1486:
 718:Veno-Echo.cpp **** 
 7229              		.loc 20 718 5 is_stmt 1 view .LVU2008
 7230              	.LBB1487:
 7231              	.LBI1483:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7232              		.loc 8 67 17 view .LVU2009
 7233              	.LBB1485:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7234              		.loc 8 67 41 view .LVU2010
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7235              		.loc 8 67 41 is_stmt 0 view .LVU2011
 7236              	.LBE1485:
 7237              	.LBE1487:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 244


 720:Veno-Echo.cpp **** 
 7238              		.loc 20 720 5 is_stmt 1 view .LVU2012
 720:Veno-Echo.cpp **** 
 7239              		.loc 20 720 19 is_stmt 0 view .LVU2013
 7240 045e FFF7FEFF 		bl	_ZN8Taptempo4initEiif
 7241              	.LVL428:
 724:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7242              		.loc 20 724 5 is_stmt 1 view .LVU2014
 724:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7243              		.loc 20 724 23 is_stmt 0 view .LVU2015
 7244 0462 1820     		movs	r0, #24
 732:Veno-Echo.cpp **** 
 7245              		.loc 20 732 17 view .LVU2016
 7246 0464 584C     		ldr	r4, .L403+40
 724:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7247              		.loc 20 724 23 view .LVU2017
 7248 0466 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7249              	.LVL429:
 7250 046a 0346     		mov	r3, r0	@ movhi
 7251 046c 4C48     		ldr	r0, .L403
 7252 046e ADF84030 		strh	r3, [sp, #64]	@ movhi
 7253 0472 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7254              	.LVL430:
 7255 0476 1099     		ldr	r1, [sp, #64]
 7256 0478 5448     		ldr	r0, .L403+44
 7257 047a FFF7FEFF 		bl	_ZN8TempoLED4initE12dsy_gpio_pinf
 7258              	.LVL431:
 725:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7259              		.loc 20 725 5 is_stmt 1 view .LVU2018
 725:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7260              		.loc 20 725 27 is_stmt 0 view .LVU2019
 7261 047e 5148     		ldr	r0, .L403+36
 7262 0480 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 7263              	.LVL432:
 7264 0484 5148     		ldr	r0, .L403+44
 7265 0486 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 7266              	.LVL433:
 726:Veno-Echo.cpp **** 
 7267              		.loc 20 726 5 is_stmt 1 view .LVU2020
 726:Veno-Echo.cpp **** 
 7268              		.loc 20 726 29 is_stmt 0 view .LVU2021
 7269 048a 5048     		ldr	r0, .L403+44
 7270 048c FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 7271              	.LVL434:
 731:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 7272              		.loc 20 731 5 is_stmt 1 view .LVU2022
 731:Veno-Echo.cpp ****     AltControls = defaultAltControls;
 7273              		.loc 20 731 18 is_stmt 0 view .LVU2023
 7274 0490 4B48     		ldr	r0, .L403+32
 7275 0492 FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 7276              	.LVL435:
 732:Veno-Echo.cpp **** 
 7277              		.loc 20 732 5 is_stmt 1 view .LVU2024
 732:Veno-Echo.cpp **** 
 7278              		.loc 20 732 17 is_stmt 0 view .LVU2025
 7279 0496 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7280 0498 0FC4     		stmia	r4!, {r0, r1, r2, r3}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 245


 7281 049a 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 7282 049e 84E80F00 		stm	r4, {r0, r1, r2, r3}
 737:Veno-Echo.cpp **** 
 7283              		.loc 20 737 5 is_stmt 1 view .LVU2026
 739:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 7284              		.loc 20 739 5 view .LVU2027
 739:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 7285              		.loc 20 739 28 is_stmt 0 view .LVU2028
 7286 04a2 0F20     		movs	r0, #15
 7287 04a4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7288              	.LVL436:
 7289 04a8 0346     		mov	r3, r0	@ movhi
 7290 04aa 1CA8     		add	r0, sp, #112
 7291 04ac ADF84430 		strh	r3, [sp, #68]	@ movhi
 7292 04b0 1199     		ldr	r1, [sp, #68]
 7293 04b2 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7294              	.LVL437:
 740:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 7295              		.loc 20 740 5 is_stmt 1 view .LVU2029
 740:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 7296              		.loc 20 740 28 is_stmt 0 view .LVU2030
 7297 04b6 1020     		movs	r0, #16
 7298 04b8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7299              	.LVL438:
 7300 04bc 0346     		mov	r3, r0	@ movhi
 7301 04be 0DF18100 		add	r0, sp, #129
 7302 04c2 ADF84830 		strh	r3, [sp, #72]	@ movhi
 7303 04c6 1299     		ldr	r1, [sp, #72]
 7304 04c8 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7305              	.LVL439:
 741:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 7306              		.loc 20 741 5 is_stmt 1 view .LVU2031
 741:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 7307              		.loc 20 741 28 is_stmt 0 view .LVU2032
 7308 04cc 1120     		movs	r0, #17
 7309 04ce FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7310              	.LVL440:
 7311 04d2 0346     		mov	r3, r0	@ movhi
 7312 04d4 0DF19200 		add	r0, sp, #146
 7313 04d8 ADF84C30 		strh	r3, [sp, #76]	@ movhi
 7314 04dc 1399     		ldr	r1, [sp, #76]
 7315 04de FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7316              	.LVL441:
 742:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 7317              		.loc 20 742 5 is_stmt 1 view .LVU2033
 742:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 7318              		.loc 20 742 28 is_stmt 0 view .LVU2034
 7319 04e2 1220     		movs	r0, #18
 7320 04e4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7321              	.LVL442:
 7322 04e8 0346     		mov	r3, r0	@ movhi
 7323 04ea 0DF1A300 		add	r0, sp, #163
 7324 04ee ADF85030 		strh	r3, [sp, #80]	@ movhi
 7325 04f2 1499     		ldr	r1, [sp, #80]
 7326 04f4 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7327              	.LVL443:
 743:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 246


 7328              		.loc 20 743 5 is_stmt 1 view .LVU2035
 743:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 7329              		.loc 20 743 28 is_stmt 0 view .LVU2036
 7330 04f8 1320     		movs	r0, #19
 7331 04fa FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7332              	.LVL444:
 7333 04fe 0346     		mov	r3, r0	@ movhi
 7334 0500 2DA8     		add	r0, sp, #180
 7335 0502 ADF85430 		strh	r3, [sp, #84]	@ movhi
 7336 0506 1599     		ldr	r1, [sp, #84]
 7337 0508 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7338              	.LVL445:
 744:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 7339              		.loc 20 744 5 is_stmt 1 view .LVU2037
 744:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 7340              		.loc 20 744 28 is_stmt 0 view .LVU2038
 7341 050c 1420     		movs	r0, #20
 7342 050e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7343              	.LVL446:
 7344 0512 0346     		mov	r3, r0	@ movhi
 7345 0514 0DF1C500 		add	r0, sp, #197
 7346 0518 ADF85830 		strh	r3, [sp, #88]	@ movhi
 7347 051c 1699     		ldr	r1, [sp, #88]
 7348 051e FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7349              	.LVL447:
 746:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 7350              		.loc 20 746 5 is_stmt 1 view .LVU2039
 746:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 7351              		.loc 20 746 28 is_stmt 0 view .LVU2040
 7352 0522 1620     		movs	r0, #22
 7353 0524 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7354              	.LVL448:
 7355 0528 0346     		mov	r3, r0	@ movhi
 7356 052a 0DF1D600 		add	r0, sp, #214
 7357 052e ADF85C30 		strh	r3, [sp, #92]	@ movhi
 7358 0532 1799     		ldr	r1, [sp, #92]
 7359 0534 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7360              	.LVL449:
 747:Veno-Echo.cpp **** 
 7361              		.loc 20 747 5 is_stmt 1 view .LVU2041
 747:Veno-Echo.cpp **** 
 7362              		.loc 20 747 25 is_stmt 0 view .LVU2042
 7363 0538 1920     		movs	r0, #25
 7364 053a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7365              	.LVL450:
 7366 053e 0346     		mov	r3, r0	@ movhi
 7367 0540 0E20     		movs	r0, #14
 7368 0542 ADF86030 		strh	r3, [sp, #96]	@ movhi
 7369 0546 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7370              	.LVL451:
 7371 054a 0346     		mov	r3, r0	@ movhi
 7372 054c 0D20     		movs	r0, #13
 7373 054e ADF86430 		strh	r3, [sp, #100]	@ movhi
 7374 0552 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7375              	.LVL452:
 7376 0556 0346     		mov	r3, r0	@ movhi
 7377 0558 0C20     		movs	r0, #12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 247


 7378 055a ADF86830 		strh	r3, [sp, #104]	@ movhi
 7379 055e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7380              	.LVL453:
 7381 0562 BDF86810 		ldrh	r1, [sp, #104]
 7382 0566 0822     		movs	r2, #8
 7383 0568 199B     		ldr	r3, [sp, #100]
 7384 056a ADF80400 		strh	r0, [sp, #4]	@ movhi
 7385 056e 0DF1E700 		add	r0, sp, #231
 7386 0572 ADF80010 		strh	r1, [sp]	@ movhi
 7387 0576 1899     		ldr	r1, [sp, #96]
 7388 0578 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
 7389              	.LVL454:
 750:Veno-Echo.cpp ****     hw.adc.Start();
 7390              		.loc 20 750 5 is_stmt 1 view .LVU2043
 750:Veno-Echo.cpp ****     hw.adc.Start();
 7391              		.loc 20 750 16 is_stmt 0 view .LVU2044
 7392 057c 1CA9     		add	r1, sp, #112
 7393 057e 0623     		movs	r3, #6
 7394 0580 0822     		movs	r2, #8
 7395 0582 1348     		ldr	r0, .L403+48
 7396 0584 FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 7397              	.LVL455:
 751:Veno-Echo.cpp **** 
 7398              		.loc 20 751 5 is_stmt 1 view .LVU2045
 751:Veno-Echo.cpp **** 
 7399              		.loc 20 751 17 is_stmt 0 view .LVU2046
 7400 0588 1148     		ldr	r0, .L403+48
 7401 058a FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 7402              	.LVL456:
 754:Veno-Echo.cpp ****     // start audio callback
 7403              		.loc 20 754 5 is_stmt 1 view .LVU2047
 754:Veno-Echo.cpp ****     // start audio callback
 7404              		.loc 20 754 25 is_stmt 0 view .LVU2048
 7405 058e 3146     		mov	r1, r6
 7406 0590 0348     		ldr	r0, .L403
 7407 0592 FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 7408              	.LVL457:
 756:Veno-Echo.cpp **** 
 7409              		.loc 20 756 5 is_stmt 1 view .LVU2049
 756:Veno-Echo.cpp **** 
 7410              		.loc 20 756 18 is_stmt 0 view .LVU2050
 7411 0596 0F49     		ldr	r1, .L403+52
 7412 0598 0148     		ldr	r0, .L403
 7413 059a FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
 7414              	.LVL458:
 7415              	.L398:
 760:Veno-Echo.cpp ****      {
 7416              		.loc 20 760 6 is_stmt 1 discriminator 1 view .LVU2051
 760:Veno-Echo.cpp ****      {
 7417              		.loc 20 760 6 discriminator 1 view .LVU2052
 760:Veno-Echo.cpp ****      {
 7418              		.loc 20 760 6 discriminator 1 view .LVU2053
 760:Veno-Echo.cpp ****      {
 7419              		.loc 20 760 6 discriminator 1 view .LVU2054
 7420 059e FEE7     		b	.L398
 7421              	.L404:
 7422              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 248


 7423              	.L403:
 7424 05a0 00000000 		.word	.LANCHOR4
 7425 05a4 00000000 		.word	.LANCHOR37
 7426 05a8 00004843 		.word	1128792064
 7427 05ac 3333333F 		.word	1060320051
 7428 05b0 00000000 		.word	.LANCHOR104
 7429 05b4 00000000 		.word	.LANCHOR105
 7430 05b8 00000000 		.word	.LANCHOR75
 7431 05bc 0000C842 		.word	1120403456
 7432 05c0 00000000 		.word	.LANCHOR106
 7433 05c4 00000000 		.word	.LANCHOR12
 7434 05c8 00000000 		.word	.LANCHOR16
 7435 05cc 00000000 		.word	.LANCHOR88
 7436 05d0 18000000 		.word	.LANCHOR4+24
 7437 05d4 00000000 		.word	_ZL13AudioCallbackPfS_j
 7438              		.cfi_endproc
 7439              	.LFE4310:
 7441              		.section	.text._Z13TurnOnAllLEDsv,"ax",%progbits
 7442              		.align	1
 7443              		.p2align 2,,3
 7444              		.global	_Z13TurnOnAllLEDsv
 7445              		.syntax unified
 7446              		.thumb
 7447              		.thumb_func
 7448              		.fpu fpv5-d16
 7450              	_Z13TurnOnAllLEDsv:
 7451              	.LFB4332:
1811:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 7452              		.loc 20 1811 1 view -0
 7453              		.cfi_startproc
 7454              		@ args = 0, pretend = 0, frame = 0
 7455              		@ frame_needed = 0, uses_anonymous_args = 0
1812:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 7456              		.loc 20 1812 5 view .LVU2056
1811:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 7457              		.loc 20 1811 1 is_stmt 0 view .LVU2057
 7458 0000 08B5     		push	{r3, lr}
 7459              		.cfi_def_cfa_offset 8
 7460              		.cfi_offset 3, -8
 7461              		.cfi_offset 14, -4
1812:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 7462              		.loc 20 1812 26 view .LVU2058
 7463 0002 B7EE000A 		vmov.f32	s0, #1.0e+0
 7464 0006 1148     		ldr	r0, .L407
 7465 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7466              	.LVL459:
1813:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 7467              		.loc 20 1813 5 is_stmt 1 view .LVU2059
1813:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 7468              		.loc 20 1813 28 is_stmt 0 view .LVU2060
 7469 000c B7EE000A 		vmov.f32	s0, #1.0e+0
 7470 0010 0F48     		ldr	r0, .L407+4
 7471 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7472              	.LVL460:
1814:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 7473              		.loc 20 1814 5 is_stmt 1 view .LVU2061
1814:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 249


 7474              		.loc 20 1814 28 is_stmt 0 view .LVU2062
 7475 0016 B7EE000A 		vmov.f32	s0, #1.0e+0
 7476 001a 0E48     		ldr	r0, .L407+8
 7477 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7478              	.LVL461:
1815:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 7479              		.loc 20 1815 5 is_stmt 1 view .LVU2063
1815:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 7480              		.loc 20 1815 21 is_stmt 0 view .LVU2064
 7481 0020 B7EE000A 		vmov.f32	s0, #1.0e+0
 7482 0024 0C48     		ldr	r0, .L407+12
 7483 0026 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7484              	.LVL462:
1816:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 7485              		.loc 20 1816 5 is_stmt 1 view .LVU2065
1816:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 7486              		.loc 20 1816 21 is_stmt 0 view .LVU2066
 7487 002a B7EE000A 		vmov.f32	s0, #1.0e+0
 7488 002e 0B48     		ldr	r0, .L407+16
 7489 0030 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7490              	.LVL463:
1817:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 7491              		.loc 20 1817 5 is_stmt 1 view .LVU2067
1817:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 7492              		.loc 20 1817 19 is_stmt 0 view .LVU2068
 7493 0034 B7EE000A 		vmov.f32	s0, #1.0e+0
 7494 0038 0948     		ldr	r0, .L407+20
 7495 003a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7496              	.LVL464:
1818:Veno-Echo.cpp **** }
 7497              		.loc 20 1818 5 is_stmt 1 view .LVU2069
1818:Veno-Echo.cpp **** }
 7498              		.loc 20 1818 19 is_stmt 0 view .LVU2070
 7499 003e B7EE000A 		vmov.f32	s0, #1.0e+0
 7500 0042 0848     		ldr	r0, .L407+24
1819:Veno-Echo.cpp **** 
 7501              		.loc 20 1819 1 view .LVU2071
 7502 0044 BDE80840 		pop	{r3, lr}
 7503              		.cfi_restore 14
 7504              		.cfi_restore 3
 7505              		.cfi_def_cfa_offset 0
1818:Veno-Echo.cpp **** }
 7506              		.loc 20 1818 19 view .LVU2072
 7507 0048 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 7508              	.LVL465:
 7509              	.L408:
 7510              		.align	2
 7511              	.L407:
 7512 004c 00000000 		.word	.LANCHOR88
 7513 0050 04000000 		.word	.LANCHOR0+4
 7514 0054 04000000 		.word	.LANCHOR1+4
 7515 0058 00000000 		.word	.LANCHOR92
 7516 005c 00000000 		.word	.LANCHOR93
 7517 0060 00000000 		.word	.LANCHOR90
 7518 0064 00000000 		.word	.LANCHOR91
 7519              		.cfi_endproc
 7520              	.LFE4332:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 250


 7522              		.section	.text._Z12ResetAllLEDsv,"ax",%progbits
 7523              		.align	1
 7524              		.p2align 2,,3
 7525              		.global	_Z12ResetAllLEDsv
 7526              		.syntax unified
 7527              		.thumb
 7528              		.thumb_func
 7529              		.fpu fpv5-d16
 7531              	_Z12ResetAllLEDsv:
 7532              	.LFB4333:
1822:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 7533              		.loc 20 1822 1 is_stmt 1 view -0
 7534              		.cfi_startproc
 7535              		@ args = 0, pretend = 0, frame = 0
 7536              		@ frame_needed = 0, uses_anonymous_args = 0
1823:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 7537              		.loc 20 1823 5 view .LVU2074
1822:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 7538              		.loc 20 1822 1 is_stmt 0 view .LVU2075
 7539 0000 08B5     		push	{r3, lr}
 7540              		.cfi_def_cfa_offset 8
 7541              		.cfi_offset 3, -8
 7542              		.cfi_offset 14, -4
1823:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 7543              		.loc 20 1823 26 view .LVU2076
 7544 0002 9FED1E0A 		vldr.32	s0, .L416
 7545 0006 1E48     		ldr	r0, .L416+4
 7546 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7547              	.LVL466:
1824:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 7548              		.loc 20 1824 5 is_stmt 1 view .LVU2077
1824:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 7549              		.loc 20 1824 28 is_stmt 0 view .LVU2078
 7550 000c 9FED1B0A 		vldr.32	s0, .L416
 7551 0010 1C48     		ldr	r0, .L416+8
 7552 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7553              	.LVL467:
1825:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 7554              		.loc 20 1825 5 is_stmt 1 view .LVU2079
1825:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 7555              		.loc 20 1825 28 is_stmt 0 view .LVU2080
 7556 0016 1C48     		ldr	r0, .L416+12
 7557 0018 9FED180A 		vldr.32	s0, .L416
 7558 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 7559              	.LVL468:
1826:Veno-Echo.cpp ****     {
 7560              		.loc 20 1826 5 is_stmt 1 view .LVU2081
1826:Veno-Echo.cpp ****     {
 7561              		.loc 20 1826 26 is_stmt 0 view .LVU2082
 7562 0020 1A48     		ldr	r0, .L416+16
 7563 0022 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7564              	.LVL469:
1826:Veno-Echo.cpp ****     {
 7565              		.loc 20 1826 5 view .LVU2083
 7566 0026 C8B9     		cbnz	r0, .L410
1828:Veno-Echo.cpp ****     }
 7567              		.loc 20 1828 9 is_stmt 1 view .LVU2084
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 251


1828:Veno-Echo.cpp ****     }
 7568              		.loc 20 1828 25 is_stmt 0 view .LVU2085
 7569 0028 1848     		ldr	r0, .L416+16
 7570 002a 9FED140A 		vldr.32	s0, .L416
 7571 002e FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7572              	.LVL470:
1835:Veno-Echo.cpp ****     {
 7573              		.loc 20 1835 5 is_stmt 1 view .LVU2086
1835:Veno-Echo.cpp ****     {
 7574              		.loc 20 1835 26 is_stmt 0 view .LVU2087
 7575 0032 1748     		ldr	r0, .L416+20
 7576 0034 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7577              	.LVL471:
1835:Veno-Echo.cpp ****     {
 7578              		.loc 20 1835 5 view .LVU2088
 7579 0038 D0B9     		cbnz	r0, .L412
 7580              	.L415:
1837:Veno-Echo.cpp ****     }
 7581              		.loc 20 1837 9 is_stmt 1 view .LVU2089
1837:Veno-Echo.cpp ****     }
 7582              		.loc 20 1837 25 is_stmt 0 view .LVU2090
 7583 003a 9FED100A 		vldr.32	s0, .L416
 7584 003e 1448     		ldr	r0, .L416+20
 7585 0040 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7586              	.LVL472:
 7587              	.L413:
1844:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 7588              		.loc 20 1844 5 is_stmt 1 view .LVU2091
1844:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 7589              		.loc 20 1844 19 is_stmt 0 view .LVU2092
 7590 0044 9FED0D0A 		vldr.32	s0, .L416
 7591 0048 1248     		ldr	r0, .L416+24
 7592 004a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7593              	.LVL473:
1845:Veno-Echo.cpp **** }
 7594              		.loc 20 1845 5 is_stmt 1 view .LVU2093
1845:Veno-Echo.cpp **** }
 7595              		.loc 20 1845 19 is_stmt 0 view .LVU2094
 7596 004e 9FED0B0A 		vldr.32	s0, .L416
 7597 0052 1148     		ldr	r0, .L416+28
1846:Veno-Echo.cpp **** 
 7598              		.loc 20 1846 1 view .LVU2095
 7599 0054 BDE80840 		pop	{r3, lr}
 7600              		.cfi_remember_state
 7601              		.cfi_restore 14
 7602              		.cfi_restore 3
 7603              		.cfi_def_cfa_offset 0
1845:Veno-Echo.cpp **** }
 7604              		.loc 20 1845 19 view .LVU2096
 7605 0058 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 7606              	.LVL474:
 7607              	.L410:
 7608              		.cfi_restore_state
1832:Veno-Echo.cpp ****     }
 7609              		.loc 20 1832 8 is_stmt 1 view .LVU2097
1832:Veno-Echo.cpp ****     }
 7610              		.loc 20 1832 24 is_stmt 0 view .LVU2098
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 252


 7611 005c 0B48     		ldr	r0, .L416+16
 7612 005e B7EE000A 		vmov.f32	s0, #1.0e+0
 7613 0062 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7614              	.LVL475:
1835:Veno-Echo.cpp ****     {
 7615              		.loc 20 1835 5 is_stmt 1 view .LVU2099
1835:Veno-Echo.cpp ****     {
 7616              		.loc 20 1835 26 is_stmt 0 view .LVU2100
 7617 0066 0A48     		ldr	r0, .L416+20
 7618 0068 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7619              	.LVL476:
1835:Veno-Echo.cpp ****     {
 7620              		.loc 20 1835 5 view .LVU2101
 7621 006c 0028     		cmp	r0, #0
 7622 006e E4D0     		beq	.L415
 7623              	.L412:
1841:Veno-Echo.cpp ****     }
 7624              		.loc 20 1841 9 is_stmt 1 view .LVU2102
1841:Veno-Echo.cpp ****     }
 7625              		.loc 20 1841 25 is_stmt 0 view .LVU2103
 7626 0070 B7EE000A 		vmov.f32	s0, #1.0e+0
 7627 0074 0648     		ldr	r0, .L416+20
 7628 0076 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 7629              	.LVL477:
 7630 007a E3E7     		b	.L413
 7631              	.L417:
 7632              		.align	2
 7633              	.L416:
 7634 007c 00000000 		.word	0
 7635 0080 00000000 		.word	.LANCHOR88
 7636 0084 04000000 		.word	.LANCHOR0+4
 7637 0088 04000000 		.word	.LANCHOR1+4
 7638 008c 00000000 		.word	.LANCHOR92
 7639 0090 00000000 		.word	.LANCHOR93
 7640 0094 00000000 		.word	.LANCHOR90
 7641 0098 00000000 		.word	.LANCHOR91
 7642              		.cfi_endproc
 7643              	.LFE4333:
 7645              		.section	.text._Z14Update_Buttonsv,"ax",%progbits
 7646              		.align	1
 7647              		.p2align 2,,3
 7648              		.global	_Z14Update_Buttonsv
 7649              		.syntax unified
 7650              		.thumb
 7651              		.thumb_func
 7652              		.fpu fpv5-d16
 7654              	_Z14Update_Buttonsv:
 7655              	.LFB4328:
1564:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 7656              		.loc 20 1564 1 is_stmt 1 view -0
 7657              		.cfi_startproc
 7658              		@ args = 0, pretend = 0, frame = 0
 7659              		@ frame_needed = 0, uses_anonymous_args = 0
1565:Veno-Echo.cpp ****     static uint32_t resetTime{};
 7660              		.loc 20 1565 5 view .LVU2105
1566:Veno-Echo.cpp ****     static int buttonstate{};
 7661              		.loc 20 1566 5 view .LVU2106
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 253


1567:Veno-Echo.cpp **** 
 7662              		.loc 20 1567 5 view .LVU2107
1569:Veno-Echo.cpp ****     Rev_R_sw.update();
 7663              		.loc 20 1569 5 view .LVU2108
1564:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 7664              		.loc 20 1564 1 is_stmt 0 view .LVU2109
 7665 0000 70B5     		push	{r4, r5, r6, lr}
 7666              		.cfi_def_cfa_offset 16
 7667              		.cfi_offset 4, -16
 7668              		.cfi_offset 5, -12
 7669              		.cfi_offset 6, -8
 7670              		.cfi_offset 14, -4
1569:Veno-Echo.cpp ****     Rev_R_sw.update();
 7671              		.loc 20 1569 20 view .LVU2110
 7672 0002 6348     		ldr	r0, .L461
 7673 0004 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 7674              	.LVL478:
1570:Veno-Echo.cpp ****     LPF_sw.update();
 7675              		.loc 20 1570 5 is_stmt 1 view .LVU2111
1570:Veno-Echo.cpp ****     LPF_sw.update();
 7676              		.loc 20 1570 20 is_stmt 0 view .LVU2112
 7677 0008 6248     		ldr	r0, .L461+4
 7678 000a FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 7679              	.LVL479:
1571:Veno-Echo.cpp ****     HPF_sw.update();
 7680              		.loc 20 1571 5 is_stmt 1 view .LVU2113
1571:Veno-Echo.cpp ****     HPF_sw.update();
 7681              		.loc 20 1571 18 is_stmt 0 view .LVU2114
 7682 000e 6248     		ldr	r0, .L461+8
 7683 0010 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 7684              	.LVL480:
1572:Veno-Echo.cpp ****     Tap_Button.update();
 7685              		.loc 20 1572 5 is_stmt 1 view .LVU2115
1575:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 7686              		.loc 20 1575 26 is_stmt 0 view .LVU2116
 7687 0014 614C     		ldr	r4, .L461+12
1572:Veno-Echo.cpp ****     Tap_Button.update();
 7688              		.loc 20 1572 18 view .LVU2117
 7689 0016 6248     		ldr	r0, .L461+16
 7690 0018 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 7691              	.LVL481:
1573:Veno-Echo.cpp **** 
 7692              		.loc 20 1573 5 is_stmt 1 view .LVU2118
1573:Veno-Echo.cpp **** 
 7693              		.loc 20 1573 22 is_stmt 0 view .LVU2119
 7694 001c 6148     		ldr	r0, .L461+20
 7695 001e FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 7696              	.LVL482:
1575:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 7697              		.loc 20 1575 5 is_stmt 1 view .LVU2120
1575:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 7698              		.loc 20 1575 26 is_stmt 0 view .LVU2121
 7699 0022 2046     		mov	r0, r4
 7700 0024 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 7701              	.LVL483:
1576:Veno-Echo.cpp ****     //TapButton.Debounce();
 7702              		.loc 20 1576 5 is_stmt 1 view .LVU2122
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 254


1576:Veno-Echo.cpp ****     //TapButton.Debounce();
 7703              		.loc 20 1576 26 is_stmt 0 view .LVU2123
 7704 0028 5F48     		ldr	r0, .L461+24
 7705 002a FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 7706              	.LVL484:
1578:Veno-Echo.cpp ****     ClockIn.Debounce();
 7707              		.loc 20 1578 5 is_stmt 1 view .LVU2124
1578:Veno-Echo.cpp ****     ClockIn.Debounce();
 7708              		.loc 20 1578 18 is_stmt 0 view .LVU2125
 7709 002e 5F48     		ldr	r0, .L461+28
 7710 0030 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 7711              	.LVL485:
1579:Veno-Echo.cpp ****     //gate inputs
 7712              		.loc 20 1579 5 is_stmt 1 view .LVU2126
1579:Veno-Echo.cpp ****     //gate inputs
 7713              		.loc 20 1579 21 is_stmt 0 view .LVU2127
 7714 0034 5E48     		ldr	r0, .L461+32
 7715 0036 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 7716              	.LVL486:
1581:Veno-Echo.cpp ****     {
 7717              		.loc 20 1581 5 is_stmt 1 view .LVU2128
 7718              		.loc 1 69 38 view .LVU2129
1581:Veno-Echo.cpp ****     {
 7719              		.loc 20 1581 5 is_stmt 0 view .LVU2130
 7720 003a 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 7721 003c 7F2B     		cmp	r3, #127
 7722 003e 00F09280 		beq	.L453
 7723              	.L419:
1587:Veno-Echo.cpp ****     {
 7724              		.loc 20 1587 5 is_stmt 1 view .LVU2131
 7725              	.LVL487:
 7726              		.loc 1 69 38 view .LVU2132
1587:Veno-Echo.cpp ****     {
 7727              		.loc 20 1587 32 is_stmt 0 view .LVU2133
 7728 0042 594B     		ldr	r3, .L461+24
1587:Veno-Echo.cpp ****     {
 7729              		.loc 20 1587 5 view .LVU2134
 7730 0044 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 7731 0046 7F2B     		cmp	r3, #127
 7732 0048 00F08980 		beq	.L454
 7733              	.L420:
1595:Veno-Echo.cpp ****     {
 7734              		.loc 20 1595 5 is_stmt 1 view .LVU2135
1595:Veno-Echo.cpp ****     {
 7735              		.loc 20 1595 28 is_stmt 0 view .LVU2136
 7736 004c 5048     		ldr	r0, .L461
1597:Veno-Echo.cpp ****         if (buttonstate == 3)
 7737              		.loc 20 1597 21 view .LVU2137
 7738 004e 594C     		ldr	r4, .L461+36
1595:Veno-Echo.cpp ****     {
 7739              		.loc 20 1595 28 view .LVU2138
 7740 0050 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 7741              	.LVL488:
1595:Veno-Echo.cpp ****     {
 7742              		.loc 20 1595 5 view .LVU2139
 7743 0054 28B1     		cbz	r0, .L422
1597:Veno-Echo.cpp ****         if (buttonstate == 3)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 255


 7744              		.loc 20 1597 9 is_stmt 1 view .LVU2140
1597:Veno-Echo.cpp ****         if (buttonstate == 3)
 7745              		.loc 20 1597 21 is_stmt 0 view .LVU2141
 7746 0056 2368     		ldr	r3, [r4]
 7747 0058 0133     		adds	r3, r3, #1
1598:Veno-Echo.cpp ****         {
 7748              		.loc 20 1598 9 view .LVU2142
 7749 005a 032B     		cmp	r3, #3
1597:Veno-Echo.cpp ****         if (buttonstate == 3)
 7750              		.loc 20 1597 21 view .LVU2143
 7751 005c 2360     		str	r3, [r4]
1598:Veno-Echo.cpp ****         {
 7752              		.loc 20 1598 9 is_stmt 1 view .LVU2144
 7753 005e 00F08680 		beq	.L455
 7754              	.L422:
1604:Veno-Echo.cpp ****     {
 7755              		.loc 20 1604 5 view .LVU2145
1604:Veno-Echo.cpp ****     {
 7756              		.loc 20 1604 29 is_stmt 0 view .LVU2146
 7757 0062 4B48     		ldr	r0, .L461
 7758 0064 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 7759              	.LVL489:
1604:Veno-Echo.cpp ****     {
 7760              		.loc 20 1604 5 view .LVU2147
 7761 0068 10B1     		cbz	r0, .L424
1606:Veno-Echo.cpp ****     }
 7762              		.loc 20 1606 9 is_stmt 1 view .LVU2148
1606:Veno-Echo.cpp ****     }
 7763              		.loc 20 1606 21 is_stmt 0 view .LVU2149
 7764 006a 2368     		ldr	r3, [r4]
 7765 006c 013B     		subs	r3, r3, #1
 7766 006e 2360     		str	r3, [r4]
 7767              	.L424:
1609:Veno-Echo.cpp ****     {
 7768              		.loc 20 1609 5 is_stmt 1 view .LVU2150
1609:Veno-Echo.cpp ****     {
 7769              		.loc 20 1609 28 is_stmt 0 view .LVU2151
 7770 0070 4848     		ldr	r0, .L461+4
 7771 0072 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 7772              	.LVL490:
1609:Veno-Echo.cpp ****     {
 7773              		.loc 20 1609 5 view .LVU2152
 7774 0076 20B1     		cbz	r0, .L426
1611:Veno-Echo.cpp ****         if (buttonstate == 3)
 7775              		.loc 20 1611 9 is_stmt 1 view .LVU2153
1611:Veno-Echo.cpp ****         if (buttonstate == 3)
 7776              		.loc 20 1611 21 is_stmt 0 view .LVU2154
 7777 0078 2368     		ldr	r3, [r4]
 7778 007a 0133     		adds	r3, r3, #1
1612:Veno-Echo.cpp ****         {
 7779              		.loc 20 1612 9 view .LVU2155
 7780 007c 032B     		cmp	r3, #3
1611:Veno-Echo.cpp ****         if (buttonstate == 3)
 7781              		.loc 20 1611 21 view .LVU2156
 7782 007e 2360     		str	r3, [r4]
1612:Veno-Echo.cpp ****         {
 7783              		.loc 20 1612 9 is_stmt 1 view .LVU2157
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 256


 7784 0080 7AD0     		beq	.L456
 7785              	.L426:
1618:Veno-Echo.cpp ****     {
 7786              		.loc 20 1618 5 view .LVU2158
1618:Veno-Echo.cpp ****     {
 7787              		.loc 20 1618 29 is_stmt 0 view .LVU2159
 7788 0082 4448     		ldr	r0, .L461+4
 7789 0084 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 7790              	.LVL491:
1618:Veno-Echo.cpp ****     {
 7791              		.loc 20 1618 5 view .LVU2160
 7792 0088 10B1     		cbz	r0, .L428
1620:Veno-Echo.cpp ****     }
 7793              		.loc 20 1620 9 is_stmt 1 view .LVU2161
1620:Veno-Echo.cpp ****     }
 7794              		.loc 20 1620 21 is_stmt 0 view .LVU2162
 7795 008a 2368     		ldr	r3, [r4]
 7796 008c 013B     		subs	r3, r3, #1
 7797 008e 2360     		str	r3, [r4]
 7798              	.L428:
1623:Veno-Echo.cpp ****     {
 7799              		.loc 20 1623 5 is_stmt 1 view .LVU2163
1623:Veno-Echo.cpp ****     {
 7800              		.loc 20 1623 30 is_stmt 0 view .LVU2164
 7801 0090 4448     		ldr	r0, .L461+20
 7802 0092 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 7803              	.LVL492:
1623:Veno-Echo.cpp ****     {
 7804              		.loc 20 1623 5 view .LVU2165
 7805 0096 0028     		cmp	r0, #0
 7806 0098 4CD1     		bne	.L457
 7807              	.L430:
1642:Veno-Echo.cpp ****     {
 7808              		.loc 20 1642 5 is_stmt 1 view .LVU2166
1642:Veno-Echo.cpp ****     {
 7809              		.loc 20 1642 31 is_stmt 0 view .LVU2167
 7810 009a 4248     		ldr	r0, .L461+20
 7811 009c FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 7812              	.LVL493:
1642:Veno-Echo.cpp ****     {
 7813              		.loc 20 1642 5 view .LVU2168
 7814 00a0 38B1     		cbz	r0, .L433
1644:Veno-Echo.cpp ****         buttonstate -= 1;
 7815              		.loc 20 1644 9 is_stmt 1 view .LVU2169
1645:Veno-Echo.cpp ****         mute = false;
 7816              		.loc 20 1645 21 is_stmt 0 view .LVU2170
 7817 00a2 2368     		ldr	r3, [r4]
1644:Veno-Echo.cpp ****         buttonstate -= 1;
 7818              		.loc 20 1644 15 view .LVU2171
 7819 00a4 0022     		movs	r2, #0
 7820 00a6 4448     		ldr	r0, .L461+40
1645:Veno-Echo.cpp ****         mute = false;
 7821              		.loc 20 1645 21 view .LVU2172
 7822 00a8 013B     		subs	r3, r3, #1
1646:Veno-Echo.cpp ****     }
 7823              		.loc 20 1646 14 view .LVU2173
 7824 00aa 4449     		ldr	r1, .L461+44
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 257


1644:Veno-Echo.cpp ****         buttonstate -= 1;
 7825              		.loc 20 1644 15 view .LVU2174
 7826 00ac 0270     		strb	r2, [r0]
1645:Veno-Echo.cpp ****         mute = false;
 7827              		.loc 20 1645 9 is_stmt 1 view .LVU2175
1645:Veno-Echo.cpp ****         mute = false;
 7828              		.loc 20 1645 21 is_stmt 0 view .LVU2176
 7829 00ae 2360     		str	r3, [r4]
1646:Veno-Echo.cpp ****     }
 7830              		.loc 20 1646 9 is_stmt 1 view .LVU2177
1646:Veno-Echo.cpp ****     }
 7831              		.loc 20 1646 14 is_stmt 0 view .LVU2178
 7832 00b0 0A70     		strb	r2, [r1]
 7833              	.L433:
1649:Veno-Echo.cpp ****     {
 7834              		.loc 20 1649 5 is_stmt 1 view .LVU2179
1649:Veno-Echo.cpp ****     {
 7835              		.loc 20 1649 28 is_stmt 0 view .LVU2180
 7836 00b2 3C48     		ldr	r0, .L461+20
 7837 00b4 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 7838              	.LVL494:
1649:Veno-Echo.cpp ****     {
 7839              		.loc 20 1649 5 view .LVU2181
 7840 00b8 60B9     		cbnz	r0, .L458
 7841              	.L435:
1657:Veno-Echo.cpp ****     {
 7842              		.loc 20 1657 5 is_stmt 1 view .LVU2182
 7843 00ba 2368     		ldr	r3, [r4]
 7844 00bc 032B     		cmp	r3, #3
 7845 00be 16D0     		beq	.L459
 7846              	.L438:
1673:Veno-Echo.cpp **** 
 7847              		.loc 20 1673 5 view .LVU2183
 7848              	.LBB1488:
 7849              	.LBI1488:
  70:../libdaisy/src/hid/switch.h **** 
  71:../libdaisy/src/hid/switch.h ****     /** \return true if the button was just released */
  72:../libdaisy/src/hid/switch.h ****     inline bool FallingEdge() const { return state_ == 0x80; }
  73:../libdaisy/src/hid/switch.h **** 
  74:../libdaisy/src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  75:../libdaisy/src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 7850              		.loc 1 75 17 view .LVU2184
 7851              	.LVL495:
 7852              	.LBB1489:
 7853              		.loc 1 75 35 view .LVU2185
 7854              	.LBE1489:
 7855              	.LBE1488:
1673:Veno-Echo.cpp **** 
 7856              		.loc 20 1673 31 is_stmt 0 view .LVU2186
 7857 00c0 3A4B     		ldr	r3, .L461+28
1673:Veno-Echo.cpp **** 
 7858              		.loc 20 1673 14 view .LVU2187
 7859 00c2 3F4A     		ldr	r2, .L461+48
 7860              	.LBB1491:
 7861              	.LBB1490:
 7862              		.loc 1 75 52 view .LVU2188
 7863 00c4 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 258


 7864 00c6 A3F1FF03 		sub	r3, #255
 7865 00ca B3FA83F3 		clz	r3, r3
 7866 00ce 5B09     		lsrs	r3, r3, #5
 7867 00d0 1370     		strb	r3, [r2]
 7868              	.LBE1490:
 7869              	.LBE1491:
1678:Veno-Echo.cpp **** 
 7870              		.loc 20 1678 1 view .LVU2189
 7871 00d2 70BD     		pop	{r4, r5, r6, pc}
 7872              	.LVL496:
 7873              	.L458:
1651:Veno-Echo.cpp ****         {
 7874              		.loc 20 1651 9 is_stmt 1 view .LVU2190
1651:Veno-Echo.cpp ****         {
 7875              		.loc 20 1651 29 is_stmt 0 view .LVU2191
 7876 00d4 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7877              	.LVL497:
1651:Veno-Echo.cpp ****         {
 7878              		.loc 20 1651 32 view .LVU2192
 7879 00d8 3A4B     		ldr	r3, .L461+52
 7880 00da 1B68     		ldr	r3, [r3]
 7881 00dc C01A     		subs	r0, r0, r3
1651:Veno-Echo.cpp ****         {
 7882              		.loc 20 1651 9 view .LVU2193
 7883 00de 3228     		cmp	r0, #50
 7884 00e0 EBD9     		bls	.L435
1653:Veno-Echo.cpp ****         } 
 7885              		.loc 20 1653 13 is_stmt 1 view .LVU2194
1653:Veno-Echo.cpp ****         } 
 7886              		.loc 20 1653 19 is_stmt 0 view .LVU2195
 7887 00e2 354B     		ldr	r3, .L461+40
 7888 00e4 0122     		movs	r2, #1
 7889 00e6 1A70     		strb	r2, [r3]
1657:Veno-Echo.cpp ****     {
 7890              		.loc 20 1657 5 is_stmt 1 view .LVU2196
 7891 00e8 2368     		ldr	r3, [r4]
 7892 00ea 032B     		cmp	r3, #3
 7893 00ec E8D1     		bne	.L438
 7894              	.L459:
1660:Veno-Echo.cpp ****             {
 7895              		.loc 20 1660 13 view .LVU2197
1660:Veno-Echo.cpp ****             {
 7896              		.loc 20 1660 36 is_stmt 0 view .LVU2198
 7897 00ee 364E     		ldr	r6, .L461+56
1660:Veno-Echo.cpp ****             {
 7898              		.loc 20 1660 33 view .LVU2199
 7899 00f0 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7900              	.LVL498:
1660:Veno-Echo.cpp ****             {
 7901              		.loc 20 1660 13 view .LVU2200
 7902 00f4 40F6B833 		movw	r3, #3000
1660:Veno-Echo.cpp ****             {
 7903              		.loc 20 1660 36 view .LVU2201
 7904 00f8 3268     		ldr	r2, [r6]
 7905 00fa 801A     		subs	r0, r0, r2
1660:Veno-Echo.cpp ****             {
 7906              		.loc 20 1660 13 view .LVU2202
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 259


 7907 00fc 9842     		cmp	r0, r3
 7908 00fe DFD9     		bls	.L438
1662:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 7909              		.loc 20 1662 17 is_stmt 1 view .LVU2203
1662:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 7910              		.loc 20 1662 32 is_stmt 0 view .LVU2204
 7911 0100 2348     		ldr	r0, .L461
 7912 0102 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 7913              	.LVL499:
1663:Veno-Echo.cpp ****                 ResetAllLEDs();
 7914              		.loc 20 1663 17 is_stmt 1 view .LVU2205
1663:Veno-Echo.cpp ****                 ResetAllLEDs();
 7915              		.loc 20 1663 32 is_stmt 0 view .LVU2206
 7916 0106 2348     		ldr	r0, .L461+4
 7917 0108 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 7918              	.LVL500:
1664:Veno-Echo.cpp ****                 //don't let reset or shift update
 7919              		.loc 20 1664 17 is_stmt 1 view .LVU2207
1668:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 7920              		.loc 20 1668 29 is_stmt 0 view .LVU2208
 7921 010c 2F4D     		ldr	r5, .L461+60
1664:Veno-Echo.cpp ****                 //don't let reset or shift update
 7922              		.loc 20 1664 29 view .LVU2209
 7923 010e FFF7FEFF 		bl	_Z12ResetAllLEDsv
 7924              	.LVL501:
1666:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 7925              		.loc 20 1666 17 is_stmt 1 view .LVU2210
1666:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 7926              		.loc 20 1666 23 is_stmt 0 view .LVU2211
 7927 0112 294B     		ldr	r3, .L461+40
 7928 0114 0022     		movs	r2, #0
1667:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 7929              		.loc 20 1667 30 view .LVU2212
 7930 0116 2D48     		ldr	r0, .L461+60
1668:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 7931              		.loc 20 1668 29 view .LVU2213
 7932 0118 2D4C     		ldr	r4, .L461+64
1666:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 7933              		.loc 20 1666 23 view .LVU2214
 7934 011a 1A70     		strb	r2, [r3]
1667:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 7935              		.loc 20 1667 17 is_stmt 1 view .LVU2215
1667:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 7936              		.loc 20 1667 30 is_stmt 0 view .LVU2216
 7937 011c FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 7938              	.LVL502:
1668:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 7939              		.loc 20 1668 17 is_stmt 1 view .LVU2217
1668:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 7940              		.loc 20 1668 29 is_stmt 0 view .LVU2218
 7941 0120 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7942 0122 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7943 0124 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 7944 0128 84E80F00 		stm	r4, {r0, r1, r2, r3}
1669:Veno-Echo.cpp ****             }
 7945              		.loc 20 1669 17 is_stmt 1 view .LVU2219
1669:Veno-Echo.cpp ****             }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 260


 7946              		.loc 20 1669 43 is_stmt 0 view .LVU2220
 7947 012c FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7948              	.LVL503:
1669:Veno-Echo.cpp ****             }
 7949              		.loc 20 1669 27 view .LVU2221
 7950 0130 3060     		str	r0, [r6]
 7951 0132 C5E7     		b	.L438
 7952              	.L457:
1625:Veno-Echo.cpp ****         {
 7953              		.loc 20 1625 9 is_stmt 1 view .LVU2222
1625:Veno-Echo.cpp ****         {
 7954              		.loc 20 1625 25 is_stmt 0 view .LVU2223
 7955 0134 2748     		ldr	r0, .L461+68
 7956 0136 FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 7957              	.LVL504:
1625:Veno-Echo.cpp ****         {
 7958              		.loc 20 1625 9 view .LVU2224
 7959 013a 10BB     		cbnz	r0, .L460
 7960              	.L431:
1629:Veno-Echo.cpp ****         
 7961              		.loc 20 1629 9 is_stmt 1 view .LVU2225
1629:Veno-Echo.cpp ****         
 7962              		.loc 20 1629 33 is_stmt 0 view .LVU2226
 7963 013c 2648     		ldr	r0, .L461+72
 7964 013e FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 7965              	.LVL505:
1632:Veno-Echo.cpp ****         buttonstate += 1;
 7966              		.loc 20 1632 9 is_stmt 1 view .LVU2227
1632:Veno-Echo.cpp ****         buttonstate += 1;
 7967              		.loc 20 1632 35 is_stmt 0 view .LVU2228
 7968 0142 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7969              	.LVL506:
1633:Veno-Echo.cpp ****         
 7970              		.loc 20 1633 21 view .LVU2229
 7971 0146 2368     		ldr	r3, [r4]
1632:Veno-Echo.cpp ****         buttonstate += 1;
 7972              		.loc 20 1632 19 view .LVU2230
 7973 0148 1E4A     		ldr	r2, .L461+52
1633:Veno-Echo.cpp ****         
 7974              		.loc 20 1633 21 view .LVU2231
 7975 014a 0133     		adds	r3, r3, #1
1632:Veno-Echo.cpp ****         buttonstate += 1;
 7976              		.loc 20 1632 19 view .LVU2232
 7977 014c 1060     		str	r0, [r2]
1633:Veno-Echo.cpp ****         
 7978              		.loc 20 1633 9 is_stmt 1 view .LVU2233
1635:Veno-Echo.cpp ****         {
 7979              		.loc 20 1635 9 is_stmt 0 view .LVU2234
 7980 014e 032B     		cmp	r3, #3
1633:Veno-Echo.cpp ****         
 7981              		.loc 20 1633 21 view .LVU2235
 7982 0150 2360     		str	r3, [r4]
1635:Veno-Echo.cpp ****         {
 7983              		.loc 20 1635 9 is_stmt 1 view .LVU2236
 7984 0152 A2D1     		bne	.L430
1637:Veno-Echo.cpp ****         }
 7985              		.loc 20 1637 13 view .LVU2237
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 261


1637:Veno-Echo.cpp ****         }
 7986              		.loc 20 1637 39 is_stmt 0 view .LVU2238
 7987 0154 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7988              	.LVL507:
1637:Veno-Echo.cpp ****         }
 7989              		.loc 20 1637 23 view .LVU2239
 7990 0158 1B4B     		ldr	r3, .L461+56
 7991 015a 1860     		str	r0, [r3]
 7992 015c 9DE7     		b	.L430
 7993              	.L454:
1589:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 7994              		.loc 20 1589 9 is_stmt 1 view .LVU2240
1589:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 7995              		.loc 20 1589 24 is_stmt 0 view .LVU2241
 7996 015e 0D48     		ldr	r0, .L461+4
 7997 0160 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 7998              	.LVL508:
 7999 0164 72E7     		b	.L420
 8000              	.LVL509:
 8001              	.L453:
1583:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 8002              		.loc 20 1583 9 is_stmt 1 view .LVU2242
1583:Veno-Echo.cpp ****         //resetTime = System::GetNow();
 8003              		.loc 20 1583 24 is_stmt 0 view .LVU2243
 8004 0166 0A48     		ldr	r0, .L461
 8005 0168 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8006              	.LVL510:
 8007 016c 69E7     		b	.L419
 8008              	.LVL511:
 8009              	.L455:
1600:Veno-Echo.cpp ****         }
 8010              		.loc 20 1600 13 is_stmt 1 view .LVU2244
1600:Veno-Echo.cpp ****         }
 8011              		.loc 20 1600 39 is_stmt 0 view .LVU2245
 8012 016e FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8013              	.LVL512:
1600:Veno-Echo.cpp ****         }
 8014              		.loc 20 1600 23 view .LVU2246
 8015 0172 154B     		ldr	r3, .L461+56
 8016 0174 1860     		str	r0, [r3]
 8017 0176 74E7     		b	.L422
 8018              	.L456:
1614:Veno-Echo.cpp ****         }
 8019              		.loc 20 1614 13 is_stmt 1 view .LVU2247
1614:Veno-Echo.cpp ****         }
 8020              		.loc 20 1614 39 is_stmt 0 view .LVU2248
 8021 0178 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8022              	.LVL513:
1614:Veno-Echo.cpp ****         }
 8023              		.loc 20 1614 23 view .LVU2249
 8024 017c 124B     		ldr	r3, .L461+56
 8025 017e 1860     		str	r0, [r3]
 8026 0180 7FE7     		b	.L426
 8027              	.L460:
1627:Veno-Echo.cpp ****         }
 8028              		.loc 20 1627 13 is_stmt 1 view .LVU2250
1627:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 262


 8029              		.loc 20 1627 35 is_stmt 0 view .LVU2251
 8030 0182 1448     		ldr	r0, .L461+68
 8031 0184 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 8032              	.LVL514:
 8033 0188 1348     		ldr	r0, .L461+72
 8034 018a FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 8035              	.LVL515:
 8036 018e D5E7     		b	.L431
 8037              	.L462:
 8038              		.align	2
 8039              	.L461:
 8040 0190 00000000 		.word	.LANCHOR92
 8041 0194 00000000 		.word	.LANCHOR93
 8042 0198 00000000 		.word	.LANCHOR90
 8043 019c 00000000 		.word	.LANCHOR95
 8044 01a0 00000000 		.word	.LANCHOR91
 8045 01a4 00000000 		.word	.LANCHOR94
 8046 01a8 00000000 		.word	.LANCHOR96
 8047 01ac 00000000 		.word	.LANCHOR97
 8048 01b0 00000000 		.word	.LANCHOR87
 8049 01b4 00000000 		.word	.LANCHOR107
 8050 01b8 00000000 		.word	.LANCHOR7
 8051 01bc 00000000 		.word	.LANCHOR110
 8052 01c0 00000000 		.word	.LANCHOR13
 8053 01c4 00000000 		.word	.LANCHOR109
 8054 01c8 00000000 		.word	.LANCHOR108
 8055 01cc 00000000 		.word	.LANCHOR106
 8056 01d0 00000000 		.word	.LANCHOR16
 8057 01d4 00000000 		.word	.LANCHOR12
 8058 01d8 00000000 		.word	.LANCHOR88
 8059              		.cfi_endproc
 8060              	.LFE4328:
 8062              		.section	.text._ZL13AudioCallbackPfS_j,"ax",%progbits
 8063              		.align	1
 8064              		.p2align 2,,3
 8065              		.syntax unified
 8066              		.thumb
 8067              		.thumb_func
 8068              		.fpu fpv5-d16
 8070              	_ZL13AudioCallbackPfS_j:
 8071              	.LVL516:
 8072              	.LFB4308:
 238:Veno-Echo.cpp **** 
 8073              		.loc 20 238 1 is_stmt 1 view -0
 8074              		.cfi_startproc
 8075              		@ args = 0, pretend = 0, frame = 72
 8076              		@ frame_needed = 0, uses_anonymous_args = 0
 249:Veno-Echo.cpp **** 
 8077              		.loc 20 249 1 view .LVU2253
 267:Veno-Echo.cpp **** 
 8078              		.loc 20 267 1 view .LVU2254
 267:Veno-Echo.cpp **** 
 8079              		.loc 20 267 9 is_stmt 0 view .LVU2255
 8080 0000 DFF894C0 		ldr	ip, .L580+8
 267:Veno-Echo.cpp **** 
 8081              		.loc 20 267 20 view .LVU2256
 8082 0004 DCF80030 		ldr	r3, [ip]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 263


 238:Veno-Echo.cpp **** 
 8083              		.loc 20 238 1 view .LVU2257
 8084 0008 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 8085              		.cfi_def_cfa_offset 36
 8086              		.cfi_offset 4, -36
 8087              		.cfi_offset 5, -32
 8088              		.cfi_offset 6, -28
 8089              		.cfi_offset 7, -24
 8090              		.cfi_offset 8, -20
 8091              		.cfi_offset 9, -16
 8092              		.cfi_offset 10, -12
 8093              		.cfi_offset 11, -8
 8094              		.cfi_offset 14, -4
 267:Veno-Echo.cpp **** 
 8095              		.loc 20 267 20 view .LVU2258
 8096 000c 0133     		adds	r3, r3, #1
 267:Veno-Echo.cpp **** 
 8097              		.loc 20 267 25 view .LVU2259
 8098 000e 204C     		ldr	r4, .L580
 238:Veno-Echo.cpp **** 
 8099              		.loc 20 238 1 view .LVU2260
 8100 0010 0646     		mov	r6, r0
 8101 0012 1546     		mov	r5, r2
 267:Veno-Echo.cpp **** 
 8102              		.loc 20 267 25 view .LVU2261
 8103 0014 84FB0302 		smull	r0, r2, r4, r3
 8104              	.LVL517:
 267:Veno-Echo.cpp **** 
 8105              		.loc 20 267 25 view .LVU2262
 8106 0018 DC17     		asrs	r4, r3, #31
 238:Veno-Echo.cpp **** 
 8107              		.loc 20 238 1 view .LVU2263
 8108 001a 0F46     		mov	r7, r1
 8109              	.LBB1581:
 8110              	.LBB1582:
 8111              	.LBB1583:
 8112              		.file 24 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // You should have received a copy of the GNU General Public License and
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 264


  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** /** @file bits/atomic_base.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  Do not attempt to use it directly. @headername{atomic}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ATOMIC_BASE_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ATOMIC_BASE_H 1
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <stdint.h>
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/atomic_lockfree_defines.h>
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** namespace std _GLIBCXX_VISIBILITY(default)
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** {
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @defgroup atomics Atomics
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * Components for performing atomic operations.
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @{
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    */
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Enumeration for memory_order
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __cplusplus > 201703L
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum class memory_order : int
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       relaxed,
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       consume,
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acquire,
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       release,
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acq_rel,
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       seq_cst
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_relaxed = memory_order::relaxed;
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_consume = memory_order::consume;
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acquire = memory_order::acquire;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_release = memory_order::release;
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acq_rel = memory_order::acq_rel;
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_seq_cst = memory_order::seq_cst;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   typedef enum memory_order
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_relaxed,
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_consume,
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acquire,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 265


  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_release,
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acq_rel,
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_seq_cst
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     } memory_order;
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum __memory_order_modifier
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_mask          = 0x0ffff,
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_modifier_mask = 0xffff0000,
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_acquire   = 0x10000,
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_release   = 0x20000
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator|(memory_order __m, __memory_order_modifier __mod)
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) | int(__mod));
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator&(memory_order __m, __memory_order_modifier __mod)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) & int(__mod));
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Drop release ordering as per [atomics.types.operations.req]/21
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order2(memory_order __m) noexcept
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return __m == memory_order_acq_rel ? memory_order_acquire
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __m == memory_order_release ? memory_order_relaxed : __m;
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order(memory_order __m) noexcept
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(__cmpexch_failure_order2(__m & __memory_order_mask)
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       | __memory_order_modifier(__m & __memory_order_modifier_mask));
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_thread_fence(memory_order __m) noexcept
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_thread_fence(int(__m)); }
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_signal_fence(memory_order __m) noexcept
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_signal_fence(int(__m)); }
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// kill_dependency
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     inline _Tp
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     kill_dependency(_Tp __y) noexcept
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _Tp __ret(__y);
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __ret;
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 266


 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Base types for atomics.
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _IntTp>
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base;
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_VAR_INIT(_VI) { _VI }
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic;
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic<_Tp*>;
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     /* The target's "set" value for test-and-set may not be exactly 1.  */
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __GCC_ATOMIC_TEST_AND_SET_TRUEVAL == 1
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef bool __atomic_flag_data_type;
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef unsigned char __atomic_flag_data_type;
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  @brief Base type for atomic_flag.
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  Base type is POD with data, allowing atomic_flag to derive from
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  it and meet the standard layout type requirement. In addition to
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  compatibility with a C interface, this allows different
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  implementations of atomic_flag to use the same atomic operation
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  functions, via a standard conversion to the __atomic_flag_base
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  argument.
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   */
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_BEGIN_EXTERN_C
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct __atomic_flag_base
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     __atomic_flag_data_type _M_i;
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_END_EXTERN_C
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_FLAG_INIT { 0 }
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// atomic_flag
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct atomic_flag : public __atomic_flag_base
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag() noexcept = default;
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     ~atomic_flag() noexcept = default;
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag(const atomic_flag&) = delete;
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) = delete;
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) volatile = delete;
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     // Conversion to ATOMIC_FLAG_INIT.
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     constexpr atomic_flag(bool __i) noexcept
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __atomic_flag_base{ _S_init(__i) }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { }
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 267


 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) noexcept
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) volatile noexcept
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) noexcept
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) volatile noexcept
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   private:
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     static constexpr __atomic_flag_data_type
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _S_init(bool __i)
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { return __i ? __GCC_ATOMIC_TEST_AND_SET_TRUEVAL : 0; }
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Base class for atomic integrals.
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // For each of the integral types, define atomic_[integral type] struct
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_bool     bool
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char     char
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_schar    signed char
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uchar    unsigned char
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_short    short
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ushort   unsigned short
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_int      int
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uint     unsigned int
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_long     long
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ulong    unsigned long
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_llong    long long
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ullong   unsigned long long
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 268


 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char8_t  char8_t
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char16_t char16_t
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char32_t char32_t
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_wchar_t  wchar_t
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // NB: Assuming _ITp is an integral scalar type that is 1, 2, 4, or
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // 8 bytes, since that is what GCC built-in functions for atomic
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // memory access expect.
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _ITp>
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using value_type = _ITp;
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using difference_type = value_type;
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     private:
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       typedef _ITp 	__int_type;
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       static constexpr int _S_alignment =
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	sizeof(_ITp) > alignof(_ITp) ? sizeof(_ITp) : alignof(_ITp);
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       alignas(_S_alignment) __int_type _M_i;
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     public:
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base() noexcept = default;
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       ~__atomic_base() noexcept = default;
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base(const __atomic_base&) = delete;
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) = delete;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) volatile = delete;
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       // Requires __int_type convertible to _M_i.
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       constexpr __atomic_base(__int_type __i) noexcept : _M_i (__i) { }
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const noexcept
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const volatile noexcept
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) noexcept
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) volatile noexcept
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) noexcept
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 269


 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) volatile noexcept
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) noexcept
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) volatile noexcept
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() noexcept
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() volatile noexcept
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() noexcept
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() volatile noexcept
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) noexcept
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) volatile noexcept
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) noexcept
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) volatile noexcept
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) noexcept
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) volatile noexcept
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) noexcept
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) volatile noexcept
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 270


 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) noexcept
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) volatile noexcept
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const noexcept
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const volatile noexcept
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i, memory_order __m = memory_order_seq_cst) noexcept
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i,
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    memory_order __m = memory_order_seq_cst) volatile noexcept
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE __int_type
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       load(memory_order __m = memory_order_seq_cst) const noexcept
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_release);
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_load_n(&_M_i, int(__m));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 271


 8113              		.loc 24 419 24 view .LVU2264
 8114 001c 1D49     		ldr	r1, .L580+4
 8115              	.LVL518:
 8116              		.loc 24 419 24 view .LVU2265
 8117              	.LBE1583:
 8118              	.LBE1582:
 8119              	.LBE1581:
 267:Veno-Echo.cpp **** 
 8120              		.loc 20 267 25 view .LVU2266
 8121 001e 1A44     		add	r2, r2, r3
 8122 0020 C4EBE204 		rsb	r4, r4, r2, asr #3
 8123 0024 C4EB0414 		rsb	r4, r4, r4, lsl #4
 8124 0028 1B1B     		subs	r3, r3, r4
 238:Veno-Echo.cpp **** 
 8125              		.loc 20 238 1 view .LVU2267
 8126 002a 2DED0E8B 		vpush.64	{d8, d9, d10, d11, d12, d13, d14}
 8127              		.cfi_def_cfa_offset 92
 8128              		.cfi_offset 80, -92
 8129              		.cfi_offset 81, -88
 8130              		.cfi_offset 82, -84
 8131              		.cfi_offset 83, -80
 8132              		.cfi_offset 84, -76
 8133              		.cfi_offset 85, -72
 8134              		.cfi_offset 86, -68
 8135              		.cfi_offset 87, -64
 8136              		.cfi_offset 88, -60
 8137              		.cfi_offset 89, -56
 8138              		.cfi_offset 90, -52
 8139              		.cfi_offset 91, -48
 8140              		.cfi_offset 92, -44
 8141              		.cfi_offset 93, -40
 267:Veno-Echo.cpp **** 
 8142              		.loc 20 267 9 view .LVU2268
 8143 002e CCF80030 		str	r3, [ip]
 269:Veno-Echo.cpp **** {
 8144              		.loc 20 269 1 is_stmt 1 view .LVU2269
 8145              	.LVL519:
 8146              	.LBB1588:
 8147              	.LBI1581:
 8148              		.file 25 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // permissions described in the GCC Runtime Library Exception, version
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 272


  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** /** @file include/atomic
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  *  This is a Standard C++ Library header.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  */
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Based on "C++ Atomic Types and Operations" by Hans Boehm and Lawrence Crowl.
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2427.html
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #ifndef _GLIBCXX_ATOMIC
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #define _GLIBCXX_ATOMIC 1
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #pragma GCC system_header
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus < 201103L
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # include <bits/c++0x_warning.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #else
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/atomic_base.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/move.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** namespace std _GLIBCXX_VISIBILITY(default)
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** {
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /**
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @addtogroup atomics
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @{
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    */
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus >= 201703L
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # define __cpp_lib_atomic_is_always_lock_free 201603
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #endif
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<typename _Tp>
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     struct atomic;
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /// atomic<bool>
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   // NB: No operators or fetch-operations for this type.
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<>
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   struct atomic<bool>
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   {
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     using value_type = bool;
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   private:
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     __atomic_base<bool>	_M_base;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   public:
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic() noexcept = default;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     ~atomic() noexcept = default;
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic(const atomic&) = delete;
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) = delete;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 273


  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) volatile = delete;
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     constexpr atomic(bool __i) noexcept : _M_base(__i) { }
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) noexcept
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) volatile noexcept
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator bool() const noexcept
 8149              		.loc 25 87 5 view .LVU2270
 8150              	.LBE1588:
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.load(); }
 8151              		.loc 25 88 7 view .LVU2271
 8152              	.LBB1589:
 8153              	.LBB1586:
 8154              	.LBI1582:
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8155              		.loc 24 413 7 view .LVU2272
 8156              	.LBB1584:
 8157              		.loc 24 419 24 is_stmt 0 view .LVU2273
 8158 0032 BFF35B8F 		dmb	ish
 8159 0036 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 8160              	.LBE1584:
 8161              	.LBE1586:
 8162              	.LBE1589:
 238:Veno-Echo.cpp **** 
 8163              		.loc 20 238 1 view .LVU2274
 8164 0038 93B0     		sub	sp, sp, #76
 8165              		.cfi_def_cfa_offset 168
 8166              	.LBB1590:
 8167              	.LBB1587:
 8168              	.LBB1585:
 8169              		.loc 24 419 24 view .LVU2275
 8170 003a BFF35B8F 		dmb	ish
 8171              	.LBE1585:
 8172              	.LBE1587:
 8173              	.LBE1590:
 269:Veno-Echo.cpp **** {
 8174              		.loc 20 269 1 view .LVU2276
 8175 003e B3B9     		cbnz	r3, .L464
 282:Veno-Echo.cpp ****         {
 8176              		.loc 20 282 9 is_stmt 1 view .LVU2277
 8177 0040 DCF80030 		ldr	r3, [ip]
 8178 0044 0E2B     		cmp	r3, #14
 8179 0046 12D8     		bhi	.L464
 8180 0048 DFE813F0 		tbh	[pc, r3, lsl #1]
 8181              	.L466:
 8182 004c 2606     		.2byte	(.L480-.L466)/2
 8183 004e 1D06     		.2byte	(.L479-.L466)/2
 8184 0050 1906     		.2byte	(.L478-.L466)/2
 8185 0052 1006     		.2byte	(.L477-.L466)/2
 8186 0054 0C06     		.2byte	(.L476-.L466)/2
 8187 0056 0306     		.2byte	(.L475-.L466)/2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 274


 8188 0058 FF05     		.2byte	(.L474-.L466)/2
 8189 005a F605     		.2byte	(.L473-.L466)/2
 8190 005c F205     		.2byte	(.L472-.L466)/2
 8191 005e E905     		.2byte	(.L471-.L466)/2
 8192 0060 E505     		.2byte	(.L470-.L466)/2
 8193 0062 DC05     		.2byte	(.L469-.L466)/2
 8194 0064 D805     		.2byte	(.L468-.L466)/2
 8195 0066 0F00     		.2byte	(.L467-.L466)/2
 8196 0068 D405     		.2byte	(.L465-.L466)/2
 8197              		.p2align 1
 8198              	.L467:
 338:Veno-Echo.cpp ****                 Update_crossfeedback();
 8199              		.loc 20 338 13 view .LVU2278
 339:Veno-Echo.cpp ****             break;
 8200              		.loc 20 339 17 view .LVU2279
 339:Veno-Echo.cpp ****             break;
 8201              		.loc 20 339 37 is_stmt 0 view .LVU2280
 8202 006a FFF7FEFF 		bl	_Z20Update_crossfeedbackv
 8203              	.LVL520:
 340:Veno-Echo.cpp **** 
 8204              		.loc 20 340 13 is_stmt 1 view .LVU2281
 8205              	.L464:
 8206              	.LBB1591:
 348:Veno-Echo.cpp ****     {   
 8207              		.loc 20 348 25 discriminator 1 view .LVU2282
 8208 006e 002D     		cmp	r5, #0
 8209 0070 00F0A885 		beq	.L463
 348:Veno-Echo.cpp ****     {   
 8210              		.loc 20 348 25 is_stmt 0 view .LVU2283
 8211 0074 0023     		movs	r3, #0
 8212 0076 013D     		subs	r5, r5, #1
 8213              	.LVL521:
 348:Veno-Echo.cpp ****     {   
 8214              		.loc 20 348 25 view .LVU2284
 8215 0078 DFF82080 		ldr	r8, .L580+12
 8216 007c B346     		mov	fp, r6
 8217 007e 0293     		str	r3, [sp, #8]
 8218 0080 25F00103 		bic	r3, r5, #1
 8219 0084 DFF81890 		ldr	r9, .L580+16
 8220 0088 0097     		str	r7, [sp]
 8221 008a 0593     		str	r3, [sp, #20]
 8222 008c 8FE0     		b	.L536
 8223              	.L581:
 8224 008e 00BF     		.align	2
 8225              	.L580:
 8226 0090 89888888 		.word	-2004318071
 8227 0094 00000000 		.word	.LANCHOR112
 8228 0098 00000000 		.word	.LANCHOR111
 8229 009c 00000000 		.word	.LANCHOR127
 8230 00a0 00000000 		.word	.LANCHOR128
 8231              	.LVL522:
 8232              	.L579:
 8233              	.LBB1592:
 8234              	.LBB1593:
 8235              	.LBB1594:
1853:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8236              		.loc 20 1853 10 is_stmt 1 view .LVU2285
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 275


 8237 00a4 F8EE007A 		vmov.f32	s15, #-2.0e+0
1854:Veno-Echo.cpp ****     else
 8238              		.loc 20 1854 19 is_stmt 0 view .LVU2286
 8239 00a8 B4EE678A 		vcmp.f32	s16, s15
 8240 00ac F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8241 00b0 48BF     		it	mi
 8242 00b2 B0EE678A 		vmovmi.f32	s16, s15
 8243              	.LVL523:
 8244              	.L518:
1858:Veno-Echo.cpp **** }
 8245              		.loc 20 1858 5 is_stmt 1 view .LVU2287
1858:Veno-Echo.cpp **** }
 8246              		.loc 20 1858 5 is_stmt 0 view .LVU2288
 8247              	.LBE1594:
 8248              	.LBE1593:
 489:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8249              		.loc 20 489 9 is_stmt 1 view .LVU2289
 489:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8250              		.loc 20 489 42 is_stmt 0 view .LVU2290
 8251 00b6 D848     		ldr	r0, .L582
 8252 00b8 FFF7FEFF 		bl	_ZN7daisysp7DcBlock7ProcessEf
 8253              	.LVL524:
 489:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8254              		.loc 20 489 21 view .LVU2291
 8255 00bc 11A9     		add	r1, sp, #68
 8256 00be D748     		ldr	r0, .L582+4
 489:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8257              		.loc 20 489 42 view .LVU2292
 8258 00c0 8DED110A 		vstr.32	s0, [sp, #68]
 489:Veno-Echo.cpp ****         delayR.Write( DcBlock_RFB.Process(combinedR ) );
 8259              		.loc 20 489 21 view .LVU2293
 8260 00c4 FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 8261              	.LVL525:
 490:Veno-Echo.cpp **** 
 8262              		.loc 20 490 9 is_stmt 1 view .LVU2294
 490:Veno-Echo.cpp **** 
 8263              		.loc 20 490 42 is_stmt 0 view .LVU2295
 8264 00c8 D548     		ldr	r0, .L582+8
 8265 00ca B0EE480A 		vmov.f32	s0, s16
 8266 00ce FFF7FEFF 		bl	_ZN7daisysp7DcBlock7ProcessEf
 8267              	.LVL526:
 490:Veno-Echo.cpp **** 
 8268              		.loc 20 490 21 view .LVU2296
 8269 00d2 11A9     		add	r1, sp, #68
 8270 00d4 D348     		ldr	r0, .L582+12
 490:Veno-Echo.cpp **** 
 8271              		.loc 20 490 42 view .LVU2297
 8272 00d6 8DED110A 		vstr.32	s0, [sp, #68]
 490:Veno-Echo.cpp **** 
 8273              		.loc 20 490 21 view .LVU2298
 8274 00da FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 8275              	.LVL527:
 493:Veno-Echo.cpp ****         float mixR;
 8276              		.loc 20 493 9 is_stmt 1 view .LVU2299
 494:Veno-Echo.cpp **** 
 8277              		.loc 20 494 9 view .LVU2300
 496:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 276


 8278              		.loc 20 496 9 view .LVU2301
 496:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 8279              		.loc 20 496 53 is_stmt 0 view .LVU2302
 8280 00de 09AA     		add	r2, sp, #36
 8281 00e0 08A9     		add	r1, sp, #32
 8282 00e2 D148     		ldr	r0, .L582+16
 8283 00e4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 8284              	.LVL528:
 497:Veno-Echo.cpp **** 
 8285              		.loc 20 497 53 view .LVU2303
 8286 00e8 08AA     		add	r2, sp, #32
 8287 00ea 09A9     		add	r1, sp, #36
 8288 00ec CE48     		ldr	r0, .L582+16
 496:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 8289              		.loc 20 496 81 view .LVU2304
 8290 00ee 8DED0A0A 		vstr.32	s0, [sp, #40]
 497:Veno-Echo.cpp **** 
 8291              		.loc 20 497 9 is_stmt 1 view .LVU2305
 497:Veno-Echo.cpp **** 
 8292              		.loc 20 497 53 is_stmt 0 view .LVU2306
 8293 00f2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 8294              	.LVL529:
 8295              	.LBB1596:
 8296              	.LBB1597:
1851:Veno-Echo.cpp ****         returnval = limit;
 8297              		.loc 20 1851 5 view .LVU2307
 8298 00f6 B0EE007A 		vmov.f32	s14, #2.0e+0
 8299              	.LBE1597:
 8300              	.LBE1596:
 500:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 8301              		.loc 20 500 38 view .LVU2308
 8302 00fa DDED0A7A 		vldr.32	s15, [sp, #40]
 500:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 8303              		.loc 20 500 9 is_stmt 1 view .LVU2309
 8304              	.LVL530:
 8305              	.LBB1600:
 8306              	.LBI1596:
1848:Veno-Echo.cpp **** {
 8307              		.loc 20 1848 7 view .LVU2310
 8308              	.LBB1598:
1850:Veno-Echo.cpp ****     if (input > limit)
 8309              		.loc 20 1850 5 view .LVU2311
1851:Veno-Echo.cpp ****         returnval = limit;
 8310              		.loc 20 1851 5 view .LVU2312
 8311 00fe F4EEC77A 		vcmpe.f32	s15, s14
 8312 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8313 0106 00F30285 		bgt	.L548
1853:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8314              		.loc 20 1853 10 view .LVU2313
 8315 010a B8EE007A 		vmov.f32	s14, #-2.0e+0
1854:Veno-Echo.cpp ****     else
 8316              		.loc 20 1854 19 is_stmt 0 view .LVU2314
 8317 010e F4EE477A 		vcmp.f32	s15, s14
 8318 0112 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8319 0116 48BF     		it	mi
 8320 0118 F0EE477A 		vmovmi.f32	s15, s14
 8321              	.LVL531:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 277


 8322              	.L520:
1858:Veno-Echo.cpp **** }
 8323              		.loc 20 1858 5 is_stmt 1 view .LVU2315
1858:Veno-Echo.cpp **** }
 8324              		.loc 20 1858 5 is_stmt 0 view .LVU2316
 8325              	.LBE1598:
 8326              	.LBE1600:
 8327              	.LBB1601:
 8328              	.LBB1602:
1851:Veno-Echo.cpp ****         returnval = limit;
 8329              		.loc 20 1851 5 view .LVU2317
 8330 011c B0EE007A 		vmov.f32	s14, #2.0e+0
 8331              	.LBE1602:
 8332              	.LBE1601:
 500:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 8333              		.loc 20 500 27 view .LVU2318
 8334 0120 CDED0A7A 		vstr.32	s15, [sp, #40]
 501:Veno-Echo.cpp **** 
 8335              		.loc 20 501 9 is_stmt 1 view .LVU2319
 8336              	.LVL532:
 8337              	.LBB1606:
 8338              	.LBI1601:
1848:Veno-Echo.cpp **** {
 8339              		.loc 20 1848 7 view .LVU2320
 8340              	.LBB1603:
1850:Veno-Echo.cpp ****     if (input > limit)
 8341              		.loc 20 1850 5 view .LVU2321
1851:Veno-Echo.cpp ****         returnval = limit;
 8342              		.loc 20 1851 5 view .LVU2322
 8343 0124 B4EEC70A 		vcmpe.f32	s0, s14
 8344 0128 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8345 012c 00F35784 		bgt	.L549
1853:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 8346              		.loc 20 1853 10 view .LVU2323
 8347 0130 B8EE007A 		vmov.f32	s14, #-2.0e+0
 8348              	.LBE1603:
 8349              	.LBE1606:
 8350              	.LBB1607:
 503:Veno-Echo.cpp **** {
 8351              		.loc 20 503 1 is_stmt 0 view .LVU2324
 8352 0134 BD4B     		ldr	r3, .L582+20
 8353 0136 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8354              	.LBE1607:
 8355              	.LBB1629:
 8356              	.LBB1604:
1854:Veno-Echo.cpp ****     else
 8357              		.loc 20 1854 19 view .LVU2325
 8358 0138 B4EE470A 		vcmp.f32	s0, s14
 8359 013c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8360 0140 48BF     		it	mi
 8361 0142 B0EE470A 		vmovmi.f32	s0, s14
 8362              	.LVL533:
1858:Veno-Echo.cpp **** }
 8363              		.loc 20 1858 5 is_stmt 1 view .LVU2326
1858:Veno-Echo.cpp **** }
 8364              		.loc 20 1858 5 is_stmt 0 view .LVU2327
 8365              	.LBE1604:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 278


 8366              	.LBE1629:
 501:Veno-Echo.cpp **** 
 8367              		.loc 20 501 27 view .LVU2328
 8368 0146 8DED0B0A 		vstr.32	s0, [sp, #44]
 503:Veno-Echo.cpp **** {
 8369              		.loc 20 503 1 is_stmt 1 view .LVU2329
 8370              	.LBB1630:
 8371 014a 002B     		cmp	r3, #0
 8372 014c 40F05084 		bne	.L576
 8373              	.LVL534:
 8374              	.L524:
 503:Veno-Echo.cpp **** {
 8375              		.loc 20 503 1 is_stmt 0 view .LVU2330
 8376              	.LBE1630:
 544:Veno-Echo.cpp ****         {
 8377              		.loc 20 544 9 is_stmt 1 view .LVU2331
 544:Veno-Echo.cpp ****         {
 8378              		.loc 20 544 19 is_stmt 0 view .LVU2332
 8379 0150 B74B     		ldr	r3, .L582+24
 544:Veno-Echo.cpp ****         {
 8380              		.loc 20 544 9 view .LVU2333
 8381 0152 F6EE006A 		vmov.f32	s13, #5.0e-1
 544:Veno-Echo.cpp ****         {
 8382              		.loc 20 544 19 view .LVU2334
 8383 0156 93ED007A 		vldr.32	s14, [r3]
 544:Veno-Echo.cpp ****         {
 8384              		.loc 20 544 9 view .LVU2335
 8385 015a B4EEE67A 		vcmpe.f32	s14, s13
 8386 015e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 8387 0162 40F12A84 		bpl	.L570
 546:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8388              		.loc 20 546 13 is_stmt 1 view .LVU2336
 546:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8389              		.loc 20 546 34 is_stmt 0 view .LVU2337
 8390 0166 37EE077A 		vadd.f32	s14, s14, s14
 546:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8391              		.loc 20 546 18 view .LVU2338
 8392 016a 9BED006A 		vldr.32	s12, [fp]
 547:Veno-Echo.cpp ****         }
 8393              		.loc 20 547 18 view .LVU2339
 8394 016e DBED016A 		vldr.32	s13, [fp, #4]
 546:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8395              		.loc 20 546 18 view .LVU2340
 8396 0172 A7EE276A 		vfma.f32	s12, s14, s15
 547:Veno-Echo.cpp ****         }
 8397              		.loc 20 547 18 view .LVU2341
 8398 0176 E7EE006A 		vfma.f32	s13, s14, s0
 546:Veno-Echo.cpp ****             mixR = in[i+1] + (2.0f * drywet * delaySignal_R_SUM);
 8399              		.loc 20 546 18 view .LVU2342
 8400 017a F0EE467A 		vmov.f32	s15, s12
 8401              	.LVL535:
 547:Veno-Echo.cpp ****         }
 8402              		.loc 20 547 13 is_stmt 1 view .LVU2343
 547:Veno-Echo.cpp ****         }
 8403              		.loc 20 547 18 is_stmt 0 view .LVU2344
 8404 017e B0EE660A 		vmov.f32	s0, s13
 8405              	.LVL536:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 279


 8406              	.L530:
 561:Veno-Echo.cpp ****         {
 8407              		.loc 20 561 9 is_stmt 1 view .LVU2345
 8408 0182 AC4B     		ldr	r3, .L582+28
 8409 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8410 0186 002B     		cmp	r3, #0
 8411 0188 00F01084 		beq	.L533
 563:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 8412              		.loc 20 563 13 view .LVU2346
 563:Veno-Echo.cpp ****             out[i+1] = 0.0f;
 8413              		.loc 20 563 20 is_stmt 0 view .LVU2347
 8414 018c 0023     		movs	r3, #0
 8415 018e 009A     		ldr	r2, [sp]
 8416 0190 1360     		str	r3, [r2]	@ float
 564:Veno-Echo.cpp ****         }
 8417              		.loc 20 564 13 is_stmt 1 view .LVU2348
 564:Veno-Echo.cpp ****         }
 8418              		.loc 20 564 22 is_stmt 0 view .LVU2349
 8419 0192 5360     		str	r3, [r2, #4]	@ float
 8420              	.L534:
 8421              	.LBE1592:
 348:Veno-Echo.cpp ****     {   
 8422              		.loc 20 348 5 is_stmt 1 discriminator 2 view .LVU2350
 8423 0194 009B     		ldr	r3, [sp]
 8424 0196 0BF1080B 		add	fp, fp, #8
 348:Veno-Echo.cpp ****     {   
 8425              		.loc 20 348 35 is_stmt 0 discriminator 2 view .LVU2351
 8426 019a 029A     		ldr	r2, [sp, #8]
 348:Veno-Echo.cpp ****     {   
 8427              		.loc 20 348 25 discriminator 2 view .LVU2352
 8428 019c 0599     		ldr	r1, [sp, #20]
 8429 019e 0833     		adds	r3, r3, #8
 8430 01a0 8A42     		cmp	r2, r1
 8431 01a2 0093     		str	r3, [sp]
 348:Veno-Echo.cpp ****     {   
 8432              		.loc 20 348 35 discriminator 2 view .LVU2353
 8433 01a4 02F10203 		add	r3, r2, #2
 8434              	.LVL537:
 348:Veno-Echo.cpp ****     {   
 8435              		.loc 20 348 25 is_stmt 1 discriminator 2 view .LVU2354
 8436 01a8 00F00C85 		beq	.L463
 8437 01ac 0293     		str	r3, [sp, #8]
 8438              	.LVL538:
 8439              	.L536:
 8440              	.LBB1966:
 350:Veno-Echo.cpp ****         Update_Mod();
 8441              		.loc 20 350 9 view .LVU2355
 350:Veno-Echo.cpp ****         Update_Mod();
 8442              		.loc 20 350 20 is_stmt 0 view .LVU2356
 8443 01ae FFF7FEFF 		bl	_Z11UpdateClockv
 8444              	.LVL539:
 351:Veno-Echo.cpp **** 
 8445              		.loc 20 351 9 is_stmt 1 view .LVU2357
 8446              	.LBB1631:
 8447              	.LBB1632:
 8448              	.LBB1633:
 8449              	.LBB1634:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 280


  74:delayline_reverse.h **** 
  75:delayline_reverse.h ****     /** sets the delay time in samples
  76:delayline_reverse.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  77:delayline_reverse.h ****     */
  78:delayline_reverse.h ****     inline void SetDelay1(float delay)
  79:delayline_reverse.h ****     {
  80:delayline_reverse.h ****         int32_t int_delay = static_cast<int32_t>(delay);
  81:delayline_reverse.h ****         frac1_             = delay - static_cast<float>(int_delay);
  82:delayline_reverse.h ****         delay1_ = static_cast<size_t>(int_delay) < max_size ? int_delay
  83:delayline_reverse.h ****                                                            : max_size - 1;
  84:delayline_reverse.h ****     }
  85:delayline_reverse.h **** 
  86:delayline_reverse.h ****     /** writes the sample of type T to the delay line, and advances the write ptr
  87:delayline_reverse.h ****     */
  88:delayline_reverse.h ****     inline void Write(const T sample)
  89:delayline_reverse.h ****     {
  90:delayline_reverse.h ****         line_[write_ptr_] = sample;
  91:delayline_reverse.h ****         //advance write ptr in forward direction
  92:delayline_reverse.h ****         write_ptr_        = (write_ptr_ + 1 + max_size) % max_size; //increment forwards
  93:delayline_reverse.h ****         
  94:delayline_reverse.h ****         //increment head difference
  95:delayline_reverse.h ****         headDiff_        = (headDiff_ + 1 + delay1_) % delay1_;   
  96:delayline_reverse.h **** 
  97:delayline_reverse.h ****         //advance read ptrs in reverse direction
  98:delayline_reverse.h ****         read_ptr1_ = (read_ptr1_ - 1 + max_size) % max_size;
  99:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 100:delayline_reverse.h ****  
 101:delayline_reverse.h ****         if (headDiff_ > (delay1_ - fadetime - 1))  //start cross fade region
 102:delayline_reverse.h ****         {
 103:delayline_reverse.h ****             if(!fading_)
 104:delayline_reverse.h ****             {
 105:delayline_reverse.h ****                 fading_ = true; //start fading
 106:delayline_reverse.h ****                 
 107:delayline_reverse.h ****                 if(!playinghead_) 
 108:delayline_reverse.h ****                 {
 109:delayline_reverse.h ****                     //jump ptr2 to fadetime beyond write position
 110:delayline_reverse.h ****                     read_ptr2_ = write_ptr_ - 1;
 111:delayline_reverse.h ****                 }
 112:delayline_reverse.h ****     
 113:delayline_reverse.h ****                 else
 114:delayline_reverse.h ****                 {
 115:delayline_reverse.h ****                     //jump ptr1 to fadetime beyond write position
 116:delayline_reverse.h ****                     read_ptr1_ = write_ptr_ - 1; 
 117:delayline_reverse.h ****                 }
 118:delayline_reverse.h ****             }
 119:delayline_reverse.h **** 
 120:delayline_reverse.h ****             else
 121:delayline_reverse.h ****             {
 122:delayline_reverse.h ****                 //continue fading
 123:delayline_reverse.h ****             }
 124:delayline_reverse.h ****         }
 125:delayline_reverse.h **** 
 126:delayline_reverse.h ****         if(fading_)
 127:delayline_reverse.h ****         {
 128:delayline_reverse.h ****             if(!playinghead_)   //head1 playing
 129:delayline_reverse.h ****             {
 130:delayline_reverse.h ****                 fadepos_ = fadepos_ + (1.0f / (fadetime) ); //increment up to 1.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 281


 131:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 132:delayline_reverse.h ****                 {
 133:delayline_reverse.h ****                     fadepos_ = 1.0f;
 134:delayline_reverse.h ****                     fading_ = false;    //stop fading
 135:delayline_reverse.h ****                     playinghead_ = true;
 136:delayline_reverse.h ****                 }
 137:delayline_reverse.h ****             }
 138:delayline_reverse.h **** 
 139:delayline_reverse.h ****             else    //head2 playing
 140:delayline_reverse.h ****             {
 141:delayline_reverse.h ****                 fadepos_ = fadepos_ - (1.0f / (fadetime) ); //increment down to 0
 142:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 143:delayline_reverse.h ****                 {
 144:delayline_reverse.h ****                     fadepos_ = 0.0f;
 145:delayline_reverse.h ****                     fading_ = false;    //stop fading
 146:delayline_reverse.h ****                     playinghead_ = false;
 147:delayline_reverse.h ****                 }
 148:delayline_reverse.h ****             }
 149:delayline_reverse.h ****         }
 150:delayline_reverse.h ****         else    //not fading
 151:delayline_reverse.h ****         {
 152:delayline_reverse.h ****         }
 153:delayline_reverse.h **** 
 154:delayline_reverse.h ****         
 155:delayline_reverse.h ****     }
 156:delayline_reverse.h **** 
 157:delayline_reverse.h ****     /** returns the next sample of type T in the delay line, interpolated if necessary.
 158:delayline_reverse.h ****     */
 159:delayline_reverse.h ****     inline const T ReadRev() const
 160:delayline_reverse.h ****     {
 161:delayline_reverse.h ****         T a1 = line_[read_ptr1_];
 162:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 163:delayline_reverse.h **** 
 164:delayline_reverse.h ****         float read1 = a1;
 165:delayline_reverse.h ****         float read2 = a2;
 166:delayline_reverse.h **** 
 167:delayline_reverse.h ****         float scalar_1, scalar_2;
 168:delayline_reverse.h **** 
 169:delayline_reverse.h ****         //hann
 170:delayline_reverse.h ****         //scalar_1 = sinf(fadepos_ * ((float)M_PI * 0.5f));
 171:delayline_reverse.h ****         //scalar_2 = sinf((1.0f - fadepos_) * ((float)M_PI * 0.5f));
 172:delayline_reverse.h **** 
 173:delayline_reverse.h ****         //flattenned hann
 174:delayline_reverse.h ****         scalar_1 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*fadepos_)  +   (1.0f/16.0f)*s
 8450              		.loc 19 174 71 is_stmt 0 view .LVU2358
 8451 01b2 DFF808A3 		ldr	r10, .L582+164
 8452              	.LBE1634:
 8453              	.LBE1633:
 8454              	.LBE1632:
 8455              	.LBE1631:
 351:Veno-Echo.cpp **** 
 8456              		.loc 20 351 19 view .LVU2359
 8457 01b6 FFF7FEFF 		bl	_Z10Update_Modv
 8458              	.LVL540:
 354:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 8459              		.loc 20 354 9 is_stmt 1 view .LVU2360
 354:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 282


 8460              		.loc 20 354 51 is_stmt 0 view .LVU2361
 8461 01ba 9F48     		ldr	r0, .L582+32
 8462 01bc FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8463              	.LVL541:
 8464 01c0 0146     		mov	r1, r0
 8465 01c2 9E48     		ldr	r0, .L582+36
 8466              	.LBB1686:
 8467              	.LBB1669:
 8468              	.LBB1652:
 8469              	.LBB1635:
 175:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8470              		.loc 19 175 77 view .LVU2362
 8471 01c4 F7EE00AA 		vmov.f32	s21, #1.0e+0
 8472              	.LBE1635:
 8473              	.LBE1652:
 8474              	.LBE1669:
 8475              	.LBE1686:
 354:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 8476              		.loc 20 354 51 view .LVU2363
 8477 01c8 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 8478              	.LVL542:
 355:Veno-Echo.cpp ****         
 8479              		.loc 20 355 51 view .LVU2364
 8480 01cc 9C48     		ldr	r0, .L582+40
 354:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 8481              		.loc 20 354 51 view .LVU2365
 8482 01ce F0EE40BA 		vmov.f32	s23, s0
 8483              	.LVL543:
 355:Veno-Echo.cpp ****         
 8484              		.loc 20 355 9 is_stmt 1 view .LVU2366
 355:Veno-Echo.cpp ****         
 8485              		.loc 20 355 51 is_stmt 0 view .LVU2367
 8486 01d2 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8487              	.LVL544:
 355:Veno-Echo.cpp ****         
 8488              		.loc 20 355 51 view .LVU2368
 8489 01d6 0146     		mov	r1, r0
 8490 01d8 9A48     		ldr	r0, .L582+44
 8491 01da FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 8492              	.LVL545:
 357:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8493              		.loc 20 357 44 view .LVU2369
 8494 01de 9A48     		ldr	r0, .L582+48
 355:Veno-Echo.cpp ****         
 8495              		.loc 20 355 51 view .LVU2370
 8496 01e0 B0EE409A 		vmov.f32	s18, s0
 8497              	.LVL546:
 357:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8498              		.loc 20 357 9 is_stmt 1 view .LVU2371
 357:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8499              		.loc 20 357 44 is_stmt 0 view .LVU2372
 8500 01e4 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8501              	.LVL547:
 357:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8502              		.loc 20 357 44 view .LVU2373
 8503 01e8 0146     		mov	r1, r0
 8504 01ea 9848     		ldr	r0, .L582+52
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 283


 8505 01ec FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 8506              	.LVL548:
 358:Veno-Echo.cpp **** 
 8507              		.loc 20 358 44 view .LVU2374
 8508 01f0 9748     		ldr	r0, .L582+56
 357:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 8509              		.loc 20 357 44 view .LVU2375
 8510 01f2 B0EE408A 		vmov.f32	s16, s0
 8511              	.LVL549:
 358:Veno-Echo.cpp **** 
 8512              		.loc 20 358 9 is_stmt 1 view .LVU2376
 358:Veno-Echo.cpp **** 
 8513              		.loc 20 358 44 is_stmt 0 view .LVU2377
 8514 01f6 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8515              	.LVL550:
 358:Veno-Echo.cpp **** 
 8516              		.loc 20 358 44 view .LVU2378
 8517 01fa 0146     		mov	r1, r0
 8518 01fc 9548     		ldr	r0, .L582+60
 8519 01fe FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 8520              	.LVL551:
 8521              	.LBB1687:
 8522              	.LBB1688:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8523              		.loc 10 60 42 view .LVU2379
 8524 0202 9548     		ldr	r0, .L582+64
 8525              	.LBE1688:
 8526              	.LBE1687:
 381:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 8527              		.loc 20 381 49 view .LVU2380
 8528 0204 954B     		ldr	r3, .L582+68
 358:Veno-Echo.cpp **** 
 8529              		.loc 20 358 44 view .LVU2381
 8530 0206 F0EE407A 		vmov.f32	s15, s0
 8531              	.LVL552:
 361:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 8532              		.loc 20 361 9 is_stmt 1 view .LVU2382
 8533              	.LBB1690:
 8534              	.LBI1687:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8535              		.loc 10 60 17 view .LVU2383
 8536              	.LBB1689:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8537              		.loc 10 60 37 view .LVU2384
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8538              		.loc 10 60 42 is_stmt 0 view .LVU2385
 8539 020a C0ED00BA 		vstr.32	s23, [r0]
 8540              	.LVL553:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8541              		.loc 10 60 42 view .LVU2386
 8542              	.LBE1689:
 8543              	.LBE1690:
 362:Veno-Echo.cpp ****         
 8544              		.loc 20 362 9 is_stmt 1 view .LVU2387
 8545              	.LBB1691:
 8546              	.LBI1691:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 284


 8547              		.loc 10 60 17 view .LVU2388
 8548              	.LBB1692:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8549              		.loc 10 60 37 view .LVU2389
 8550              	.LBE1692:
 8551              	.LBE1691:
 8552              	.LBB1695:
 8553              	.LBB1670:
 8554              	.LBB1653:
 8555              	.LBB1636:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8556              		.loc 19 174 82 is_stmt 0 view .LVU2390
 8557 020e F6EE028A 		vmov.f32	s17, #5.625e-1
 8558              	.LBE1636:
 8559              	.LBE1653:
 8560              	.LBE1670:
 8561              	.LBE1695:
 8562              	.LBB1696:
 8563              	.LBB1693:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8564              		.loc 10 60 42 view .LVU2391
 8565 0212 9348     		ldr	r0, .L582+72
 8566              	.LBE1693:
 8567              	.LBE1696:
 381:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 8568              		.loc 20 381 49 view .LVU2392
 8569 0214 1D68     		ldr	r5, [r3]
 8570              	.LBB1697:
 8571              	.LBB1694:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8572              		.loc 10 60 42 view .LVU2393
 8573 0216 80ED009A 		vstr.32	s18, [r0]
 8574              	.LVL554:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8575              		.loc 10 60 42 view .LVU2394
 8576              	.LBE1694:
 8577              	.LBE1697:
 364:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 8578              		.loc 20 364 9 is_stmt 1 view .LVU2395
 8579              	.LBB1698:
 8580              	.LBI1698:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8581              		.loc 10 60 17 view .LVU2396
 8582              	.LBB1699:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8583              		.loc 10 60 37 view .LVU2397
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8584              		.loc 10 60 42 is_stmt 0 view .LVU2398
 8585 021a 9248     		ldr	r0, .L582+76
 8586              	.LBE1699:
 8587              	.LBE1698:
 8588              	.LBB1701:
 8589              	.LBB1671:
 8590              	.LBB1654:
 8591              	.LBB1637:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8592              		.loc 19 174 71 view .LVU2399
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 285


 8593 021c 05EB0A03 		add	r3, r5, r10
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8594              		.loc 19 174 46 view .LVU2400
 8595 0220 9FED91AA 		vldr.32	s20, .L582+80
 8596              	.LBE1637:
 8597              	.LBE1654:
 8598              	.LBE1671:
 8599              	.LBE1701:
 8600              	.LBB1702:
 8601              	.LBB1700:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8602              		.loc 10 60 42 view .LVU2401
 8603 0224 80ED008A 		vstr.32	s16, [r0]
 8604              	.LVL555:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8605              		.loc 10 60 42 view .LVU2402
 8606              	.LBE1700:
 8607              	.LBE1702:
 365:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 8608              		.loc 20 365 9 is_stmt 1 view .LVU2403
 8609              	.LBB1703:
 8610              	.LBI1703:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8611              		.loc 10 60 17 view .LVU2404
 8612              	.LBB1704:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8613              		.loc 10 60 37 view .LVU2405
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8614              		.loc 10 60 42 is_stmt 0 view .LVU2406
 8615 0228 9048     		ldr	r0, .L582+84
 8616              	.LBE1704:
 8617              	.LBE1703:
 8618              	.LBB1706:
 8619              	.LBB1672:
 8620              	.LBB1655:
 8621              	.LBB1638:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8622              		.loc 19 174 71 view .LVU2407
 8623 022a 93ED00BA 		vldr.32	s22, [r3]
 8624              	.LBE1638:
 8625              	.LBE1655:
 8626              	.LBE1672:
 8627              	.LBE1706:
 8628              	.LBB1707:
 8629              	.LBB1705:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8630              		.loc 10 60 42 view .LVU2408
 8631 022e 80ED008A 		vstr.32	s16, [r0]
 8632              	.LVL556:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8633              		.loc 10 60 42 view .LVU2409
 8634              	.LBE1705:
 8635              	.LBE1707:
 366:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 8636              		.loc 20 366 9 is_stmt 1 view .LVU2410
 8637              	.LBB1708:
 8638              	.LBI1708:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 286


  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8639              		.loc 10 60 17 view .LVU2411
 8640              	.LBB1709:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8641              		.loc 10 60 37 view .LVU2412
 8642              	.LBE1709:
 8643              	.LBE1708:
 8644              	.LBB1712:
 8645              	.LBB1713:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8646              		.loc 10 60 42 is_stmt 0 view .LVU2413
 8647 0232 8F48     		ldr	r0, .L582+88
 8648              	.LBE1713:
 8649              	.LBE1712:
 8650              	.LBB1716:
 8651              	.LBB1673:
 8652              	.LBB1656:
 8653              	.LBB1639:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8654              		.loc 19 174 46 view .LVU2414
 8655 0234 2BEE0A0A 		vmul.f32	s0, s22, s20
 8656              	.LVL557:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8657              		.loc 19 174 71 view .LVU2415
 8658 0238 0493     		str	r3, [sp, #16]
 8659              		.loc 19 175 77 view .LVU2416
 8660 023a 3AEECBCA 		vsub.f32	s24, s21, s22
 8661              	.LBE1639:
 8662              	.LBE1656:
 8663              	.LBE1673:
 8664              	.LBE1716:
 8665              	.LBB1717:
 8666              	.LBB1714:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8667              		.loc 10 60 42 view .LVU2417
 8668 023e 80ED008A 		vstr.32	s16, [r0]
 8669              	.LBE1714:
 8670              	.LBE1717:
 374:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 8671              		.loc 20 374 27 view .LVU2418
 8672 0242 8C4B     		ldr	r3, .L582+92
 8673              	.LBB1718:
 8674              	.LBB1719:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8675              		.loc 10 60 42 view .LVU2419
 8676 0244 8C48     		ldr	r0, .L582+96
 8677              	.LBE1719:
 8678              	.LBE1718:
 374:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 8679              		.loc 20 374 27 view .LVU2420
 8680 0246 1B68     		ldr	r3, [r3]	@ float
 8681              	.LBB1722:
 8682              	.LBB1720:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8683              		.loc 10 60 42 view .LVU2421
 8684 0248 80ED008A 		vstr.32	s16, [r0]
 8685              	.LBE1720:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 287


 8686              	.LBE1722:
 8687              	.LBB1723:
 8688              	.LBB1710:
 8689 024c 8B48     		ldr	r0, .L582+100
 8690              	.LBE1710:
 8691              	.LBE1723:
 8692              	.LBB1724:
 8693              	.LBB1674:
 8694              	.LBB1657:
 8695              	.LBB1640:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8696              		.loc 19 174 103 view .LVU2422
 8697 024e DFED8C9A 		vldr.32	s19, .L582+104
 8698              	.LBE1640:
 8699              	.LBE1657:
 8700              	.LBE1674:
 8701              	.LBE1724:
 8702              	.LBB1725:
 8703              	.LBB1711:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8704              		.loc 10 60 42 view .LVU2423
 8705 0252 C0ED007A 		vstr.32	s15, [r0]
 8706              	.LVL558:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8707              		.loc 10 60 42 view .LVU2424
 8708              	.LBE1711:
 8709              	.LBE1725:
 367:Veno-Echo.cpp **** 
 8710              		.loc 20 367 9 is_stmt 1 view .LVU2425
 8711              	.LBB1726:
 8712              	.LBI1726:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8713              		.loc 10 60 17 view .LVU2426
 8714              	.LBB1727:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8715              		.loc 10 60 37 view .LVU2427
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8716              		.loc 10 60 42 is_stmt 0 view .LVU2428
 8717 0256 8B48     		ldr	r0, .L582+108
 8718              	.LBE1727:
 8719              	.LBE1726:
 8720              	.LBB1729:
 8721              	.LBB1675:
 8722              	.LBB1658:
 8723              	.LBB1641:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8724              		.loc 19 174 98 view .LVU2429
 8725 0258 9FED8B9A 		vldr.32	s18, .L582+112
 8726              	.LVL559:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8727              		.loc 19 174 98 view .LVU2430
 8728              	.LBE1641:
 8729              	.LBE1658:
 8730              	.LBE1675:
 8731              	.LBE1729:
 8732              	.LBB1730:
 8733              	.LBB1728:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 288


  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8734              		.loc 10 60 42 view .LVU2431
 8735 025c C0ED007A 		vstr.32	s15, [r0]
 8736              	.LVL560:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8737              		.loc 10 60 42 view .LVU2432
 8738              	.LBE1728:
 8739              	.LBE1730:
 369:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 8740              		.loc 20 369 9 is_stmt 1 view .LVU2433
 8741              	.LBB1731:
 8742              	.LBI1712:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8743              		.loc 10 60 17 view .LVU2434
 8744              	.LBB1715:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8745              		.loc 10 60 37 view .LVU2435
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8746              		.loc 10 60 37 is_stmt 0 view .LVU2436
 8747              	.LBE1715:
 8748              	.LBE1731:
 370:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 8749              		.loc 20 370 9 is_stmt 1 view .LVU2437
 8750              	.LBB1732:
 8751              	.LBI1718:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8752              		.loc 10 60 17 view .LVU2438
 8753              	.LBB1721:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8754              		.loc 10 60 37 view .LVU2439
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8755              		.loc 10 60 37 is_stmt 0 view .LVU2440
 8756              	.LBE1721:
 8757              	.LBE1732:
 371:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 8758              		.loc 20 371 9 is_stmt 1 view .LVU2441
 8759              	.LBB1733:
 8760              	.LBI1733:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8761              		.loc 10 60 17 view .LVU2442
 8762              	.LBB1734:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8763              		.loc 10 60 37 view .LVU2443
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8764              		.loc 10 60 42 is_stmt 0 view .LVU2444
 8765 0260 8A48     		ldr	r0, .L582+116
 8766              	.LBE1734:
 8767              	.LBE1733:
 8768              	.LBB1736:
 8769              	.LBB1676:
 8770              	.LBB1659:
 8771              	.LBB1642:
 162:delayline_reverse.h **** 
 8772              		.loc 19 162 23 view .LVU2445
 8773 0262 D5E90267 		ldrd	r6, r7, [r5, #8]
 8774              	.LBE1642:
 8775              	.LBE1659:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 289


 8776              	.LBE1676:
 8777              	.LBE1736:
 8778              	.LBB1737:
 8779              	.LBB1735:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8780              		.loc 10 60 42 view .LVU2446
 8781 0266 C0ED007A 		vstr.32	s15, [r0]
 8782              	.LVL561:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8783              		.loc 10 60 42 view .LVU2447
 8784              	.LBE1735:
 8785              	.LBE1737:
 372:Veno-Echo.cpp **** 
 8786              		.loc 20 372 9 is_stmt 1 view .LVU2448
 8787              	.LBB1738:
 8788              	.LBI1738:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8789              		.loc 10 60 17 view .LVU2449
 8790              	.LBB1739:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8791              		.loc 10 60 37 view .LVU2450
 8792              	.LBE1739:
 8793              	.LBE1738:
 8794              	.LBB1742:
 8795              	.LBB1677:
 8796              	.LBB1660:
 8797              	.LBB1643:
 162:delayline_reverse.h **** 
 8798              		.loc 19 162 11 is_stmt 0 view .LVU2451
 8799 026a 05EB8702 		add	r2, r5, r7, lsl #2
 8800              	.LBE1643:
 8801              	.LBE1660:
 8802              	.LBE1677:
 8803              	.LBE1742:
 8804              	.LBB1743:
 8805              	.LBB1740:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8806              		.loc 10 60 42 view .LVU2452
 8807 026e 8848     		ldr	r0, .L582+120
 8808              	.LBE1740:
 8809              	.LBE1743:
 8810              	.LBB1744:
 8811              	.LBB1678:
 8812              	.LBB1661:
 8813              	.LBB1644:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 8814              		.loc 19 161 11 view .LVU2453
 8815 0270 05EB8601 		add	r1, r5, r6, lsl #2
 162:delayline_reverse.h **** 
 8816              		.loc 19 162 11 view .LVU2454
 8817 0274 D2ED06DA 		vldr.32	s27, [r2, #24]
 8818              	.LBE1644:
 8819              	.LBE1661:
 8820              	.LBE1678:
 8821              	.LBE1744:
 8822              	.LBB1745:
 8823              	.LBB1746:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 290


  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8824              		.loc 10 60 42 view .LVU2455
 8825 0278 864A     		ldr	r2, .L582+124
 8826              	.LBE1746:
 8827              	.LBE1745:
 8828              	.LBB1748:
 8829              	.LBB1741:
 8830 027a C0ED007A 		vstr.32	s15, [r0]
 8831              	.LVL562:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8832              		.loc 10 60 42 view .LVU2456
 8833              	.LBE1741:
 8834              	.LBE1748:
 374:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 8835              		.loc 20 374 9 is_stmt 1 view .LVU2457
 8836              	.LBB1749:
 8837              	.LBI1745:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8838              		.loc 10 60 17 view .LVU2458
 8839              	.LBB1747:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8840              		.loc 10 60 37 view .LVU2459
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8841              		.loc 10 60 42 is_stmt 0 view .LVU2460
 8842 027e 1360     		str	r3, [r2]	@ float
 8843              	.LVL563:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8844              		.loc 10 60 42 view .LVU2461
 8845              	.LBE1747:
 8846              	.LBE1749:
 375:Veno-Echo.cpp **** 
 8847              		.loc 20 375 9 is_stmt 1 view .LVU2462
 8848              	.LBB1750:
 8849              	.LBI1750:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8850              		.loc 10 60 17 view .LVU2463
 8851              	.LBB1751:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8852              		.loc 10 60 37 view .LVU2464
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8853              		.loc 10 60 42 is_stmt 0 view .LVU2465
 8854 0280 854A     		ldr	r2, .L582+128
 8855              	.LBE1751:
 8856              	.LBE1750:
 8857              	.LBB1753:
 8858              	.LBB1679:
 8859              	.LBB1662:
 8860              	.LBB1645:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 8861              		.loc 19 161 11 view .LVU2466
 8862 0282 91ED06EA 		vldr.32	s28, [r1, #24]
 8863              	.LBE1645:
 8864              	.LBE1662:
 8865              	.LBE1679:
 8866              	.LBE1753:
 8867              	.LBB1754:
 8868              	.LBB1752:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 291


  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8869              		.loc 10 60 42 view .LVU2467
 8870 0286 1360     		str	r3, [r2]	@ float
 8871              	.LVL564:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8872              		.loc 10 60 42 view .LVU2468
 8873              	.LBE1752:
 8874              	.LBE1754:
 377:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 8875              		.loc 20 377 9 is_stmt 1 view .LVU2469
 8876              	.LBB1755:
 8877              	.LBI1755:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8878              		.loc 10 60 17 view .LVU2470
 8879              	.LBB1756:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8880              		.loc 10 60 37 view .LVU2471
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8881              		.loc 10 60 42 is_stmt 0 view .LVU2472
 8882 0288 844A     		ldr	r2, .L582+132
 8883 028a 1360     		str	r3, [r2]	@ float
 8884              	.LVL565:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8885              		.loc 10 60 42 view .LVU2473
 8886              	.LBE1756:
 8887              	.LBE1755:
 378:Veno-Echo.cpp **** 
 8888              		.loc 20 378 9 is_stmt 1 view .LVU2474
 8889              	.LBB1757:
 8890              	.LBI1757:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8891              		.loc 10 60 17 view .LVU2475
 8892              	.LBB1758:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8893              		.loc 10 60 37 view .LVU2476
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8894              		.loc 10 60 42 is_stmt 0 view .LVU2477
 8895 028c 844A     		ldr	r2, .L582+136
 8896 028e 1360     		str	r3, [r2]	@ float
 8897              	.LVL566:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 8898              		.loc 10 60 42 view .LVU2478
 8899              	.LBE1758:
 8900              	.LBE1757:
 381:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 8901              		.loc 20 381 9 is_stmt 1 view .LVU2479
 8902              	.LBB1759:
 8903              	.LBI1631:
  79:Veno-Echo.cpp ****     {
 8904              		.loc 20 79 11 view .LVU2480
 8905              	.LBB1680:
  82:Veno-Echo.cpp ****         return read;
 8906              		.loc 20 82 9 view .LVU2481
 8907              	.LBB1663:
 8908              	.LBI1633:
 159:delayline_reverse.h ****     {
 8909              		.loc 19 159 20 view .LVU2482
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 292


 8910              	.LBB1646:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8911              		.loc 19 174 46 is_stmt 0 view .LVU2483
 8912 0290 FFF7FEFF 		bl	sinf
 8913              	.LVL567:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8914              		.loc 19 174 46 view .LVU2484
 8915 0294 F0EE40BA 		vmov.f32	s23, s0
 8916              	.LVL568:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8917              		.loc 19 174 103 view .LVU2485
 8918 0298 2BEE290A 		vmul.f32	s0, s22, s19
 8919 029c FFF7FEFF 		bl	sinf
 8920              	.LVL569:
 8921 02a0 B0EE408A 		vmov.f32	s16, s0
 8922              	.LVL570:
 8923              		.loc 19 175 46 view .LVU2486
 8924 02a4 2CEE0A0A 		vmul.f32	s0, s24, s20
 8925 02a8 FFF7FEFF 		bl	sinf
 8926              	.LVL571:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8927              		.loc 19 174 98 view .LVU2487
 8928 02ac 28EE098A 		vmul.f32	s16, s16, s18
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8929              		.loc 19 174 82 view .LVU2488
 8930 02b0 ABEEA88A 		vfma.f32	s16, s23, s17
 8931              	.LVL572:
 8932              		.loc 19 175 46 view .LVU2489
 8933 02b4 F0EE40BA 		vmov.f32	s23, s0
 8934              		.loc 19 175 112 view .LVU2490
 8935 02b8 2CEE290A 		vmul.f32	s0, s24, s19
 8936 02bc FFF7FEFF 		bl	sinf
 8937              	.LVL573:
 8938              		.loc 19 175 107 view .LVU2491
 8939 02c0 60EE097A 		vmul.f32	s15, s0, s18
 8940              	.LBE1646:
 8941              	.LBE1663:
 8942              	.LBE1680:
 8943              	.LBE1759:
 382:Veno-Echo.cpp **** 
 8944              		.loc 20 382 49 view .LVU2492
 8945 02c4 774B     		ldr	r3, .L582+140
 8946              	.LBB1760:
 8947              	.LBB1681:
 8948              	.LBB1664:
 8949              	.LBB1647:
 8950              		.loc 19 175 91 view .LVU2493
 8951 02c6 EBEEA87A 		vfma.f32	s15, s23, s17
 8952              	.LVL574:
 8953              		.loc 19 175 91 view .LVU2494
 8954              	.LBE1647:
 8955              	.LBE1664:
 8956              	.LBE1681:
 8957              	.LBE1760:
 382:Veno-Echo.cpp **** 
 8958              		.loc 20 382 49 view .LVU2495
 8959 02ca 1C68     		ldr	r4, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 293


 8960              	.LBB1761:
 8961              	.LBB1682:
 8962              	.LBB1665:
 8963              	.LBB1648:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8964              		.loc 19 174 9 view .LVU2496
 8965 02cc 38EE088A 		vadd.f32	s16, s16, s16
 8966              	.LVL575:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8967              		.loc 19 174 9 view .LVU2497
 8968              	.LBE1648:
 8969              	.LBE1665:
 8970              	.LBE1682:
 8971              	.LBE1761:
 8972              	.LBB1762:
 8973              	.LBB1763:
 8974              	.LBB1764:
 8975              	.LBB1765:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8976              		.loc 19 174 71 view .LVU2498
 8977 02d0 04EB0A01 		add	r1, r4, r10
 162:delayline_reverse.h **** 
 8978              		.loc 19 162 11 view .LVU2499
 8979 02d4 D4E90223 		ldrd	r2, r3, [r4, #8]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 8980              		.loc 19 174 71 view .LVU2500
 8981 02d8 91ED00CA 		vldr.32	s24, [r1]
 8982              	.LBE1765:
 8983              	.LBE1764:
 8984              	.LBE1763:
 8985              	.LBE1762:
 8986              	.LBB1796:
 8987              	.LBB1683:
 8988              	.LBB1666:
 8989              	.LBB1649:
 8990              		.loc 19 175 9 view .LVU2501
 8991 02dc 77EEA77A 		vadd.f32	s15, s15, s15
 8992              	.LVL576:
 8993              		.loc 19 175 9 view .LVU2502
 8994              	.LBE1649:
 8995              	.LBE1666:
 8996              	.LBE1683:
 8997              	.LBE1796:
 8998              	.LBB1797:
 8999              	.LBB1786:
 9000              	.LBB1776:
 9001              	.LBB1766:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 9002              		.loc 19 161 11 view .LVU2503
 9003 02e0 04EB8202 		add	r2, r4, r2, lsl #2
 162:delayline_reverse.h **** 
 9004              		.loc 19 162 11 view .LVU2504
 9005 02e4 04EB8303 		add	r3, r4, r3, lsl #2
 9006              		.loc 19 175 77 view .LVU2505
 9007 02e8 7AEECCAA 		vsub.f32	s21, s21, s24
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9008              		.loc 19 174 46 view .LVU2506
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 294


 9009 02ec 2CEE0A0A 		vmul.f32	s0, s24, s20
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 9010              		.loc 19 161 11 view .LVU2507
 9011 02f0 92ED06DA 		vldr.32	s26, [r2, #24]
 9012              	.LBE1766:
 9013              	.LBE1776:
 9014              	.LBE1786:
 9015              	.LBE1797:
 9016              	.LBB1798:
 9017              	.LBB1684:
 9018              	.LBB1667:
 9019              	.LBB1650:
 176:delayline_reverse.h **** 
 177:delayline_reverse.h ****         return (read2 * scalar_1) + (read1 * scalar_2); 
 9020              		.loc 19 177 44 view .LVU2508
 9021 02f4 67EE8E7A 		vmul.f32	s15, s15, s28
 9022              	.LVL577:
 9023              		.loc 19 177 44 view .LVU2509
 9024              	.LBE1650:
 9025              	.LBE1667:
 9026              	.LBE1684:
 9027              	.LBE1798:
 9028              	.LBB1799:
 9029              	.LBB1787:
 9030              	.LBB1777:
 9031              	.LBB1767:
 162:delayline_reverse.h **** 
 9032              		.loc 19 162 11 view .LVU2510
 9033 02f8 D3ED06CA 		vldr.32	s25, [r3, #24]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9034              		.loc 19 174 71 view .LVU2511
 9035 02fc 0391     		str	r1, [sp, #12]
 9036              	.LBE1767:
 9037              	.LBE1777:
 9038              	.LBE1787:
 9039              	.LBE1799:
 9040              	.LBB1800:
 9041              	.LBB1685:
 9042              	.LBB1668:
 9043              	.LBB1651:
 9044              		.loc 19 177 54 view .LVU2512
 9045 02fe EDEE887A 		vfma.f32	s15, s27, s16
 9046              	.LVL578:
 9047              		.loc 19 177 54 view .LVU2513
 9048              	.LBE1651:
 9049              	.LBE1668:
  83:Veno-Echo.cpp ****     }
 9050              		.loc 20 83 9 is_stmt 1 view .LVU2514
  83:Veno-Echo.cpp ****     }
 9051              		.loc 20 83 9 is_stmt 0 view .LVU2515
 9052              	.LBE1685:
 9053              	.LBE1800:
 381:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9054              		.loc 20 381 50 view .LVU2516
 9055 0302 CDED067A 		vstr.32	s15, [sp, #24]
 382:Veno-Echo.cpp **** 
 9056              		.loc 20 382 9 is_stmt 1 view .LVU2517
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 295


 9057              	.LVL579:
 9058              	.LBB1801:
 9059              	.LBI1762:
  79:Veno-Echo.cpp ****     {
 9060              		.loc 20 79 11 view .LVU2518
 9061              	.LBB1788:
  82:Veno-Echo.cpp ****         return read;
 9062              		.loc 20 82 9 view .LVU2519
 9063              	.LBB1778:
 9064              	.LBI1764:
 159:delayline_reverse.h ****     {
 9065              		.loc 19 159 20 view .LVU2520
 9066              	.LBB1768:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9067              		.loc 19 174 46 is_stmt 0 view .LVU2521
 9068 0306 FFF7FEFF 		bl	sinf
 9069              	.LVL580:
 9070 030a F0EE40BA 		vmov.f32	s23, s0
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9071              		.loc 19 174 103 view .LVU2522
 9072 030e 2CEE290A 		vmul.f32	s0, s24, s19
 9073 0312 FFF7FEFF 		bl	sinf
 9074              	.LVL581:
 9075 0316 B0EE408A 		vmov.f32	s16, s0
 175:delayline_reverse.h **** 
 9076              		.loc 19 175 46 view .LVU2523
 9077 031a 2AEE8A0A 		vmul.f32	s0, s21, s20
 9078 031e FFF7FEFF 		bl	sinf
 9079              	.LVL582:
 9080 0322 F0EE407A 		vmov.f32	s15, s0
 175:delayline_reverse.h **** 
 9081              		.loc 19 175 112 view .LVU2524
 9082 0326 2AEEA90A 		vmul.f32	s0, s21, s19
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9083              		.loc 19 174 98 view .LVU2525
 9084 032a 28EE098A 		vmul.f32	s16, s16, s18
 175:delayline_reverse.h **** 
 9085              		.loc 19 175 46 view .LVU2526
 9086 032e F0EE679A 		vmov.f32	s19, s15
 175:delayline_reverse.h **** 
 9087              		.loc 19 175 112 view .LVU2527
 9088 0332 FFF7FEFF 		bl	sinf
 9089              	.LVL583:
 9090              	.LBE1768:
 9091              	.LBE1778:
 9092              	.LBE1788:
 9093              	.LBE1801:
 9094              	.LBB1802:
 9095              	.LBB1803:
 9096              	.LBB1804:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9097              		.loc 19 98 38 view .LVU2528
 9098 0336 5C48     		ldr	r0, .L582+144
 9099              	.LBE1804:
 9100              	.LBE1803:
 9101              	.LBE1802:
 9102              	.LBB1827:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 296


 9103              	.LBB1789:
 9104              	.LBB1779:
 9105              	.LBB1769:
 175:delayline_reverse.h **** 
 9106              		.loc 19 175 107 view .LVU2529
 9107 0338 60EE097A 		vmul.f32	s15, s0, s18
 9108              	.LBE1769:
 9109              	.LBE1779:
 9110              	.LBE1789:
 9111              	.LBE1827:
 9112              	.LBB1828:
 9113              	.LBB1816:
 9114              	.LBB1805:
  92:delayline_reverse.h ****         
 9115              		.loc 19 92 57 view .LVU2530
 9116 033c 5B4B     		ldr	r3, .L582+148
 9117              	.LBE1805:
 9118              	.LBE1816:
 9119              	.LBE1828:
 9120              	.LBB1829:
 9121              	.LBB1790:
 9122              	.LBB1780:
 9123              	.LBB1770:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9124              		.loc 19 174 82 view .LVU2531
 9125 033e ABEEA88A 		vfma.f32	s16, s23, s17
 9126              	.LVL584:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9127              		.loc 19 174 82 view .LVU2532
 9128              	.LBE1770:
 9129              	.LBE1780:
 9130              	.LBE1790:
 9131              	.LBE1829:
 9132              	.LBB1830:
 9133              	.LBB1817:
 9134              	.LBB1806:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9135              		.loc 19 98 38 view .LVU2533
 9136 0342 0644     		add	r6, r6, r0
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9137              		.loc 19 90 15 view .LVU2534
 9138 0344 D5F804E0 		ldr	lr, [r5, #4]
 9139              	.LBE1806:
 9140              	.LBE1817:
 9141              	.LBE1830:
 9142              	.LBB1831:
 9143              	.LBB1791:
 9144              	.LBB1781:
 9145              	.LBB1771:
 175:delayline_reverse.h **** 
 9146              		.loc 19 175 91 view .LVU2535
 9147 0348 E9EEA87A 		vfma.f32	s15, s19, s17
 9148              	.LVL585:
 175:delayline_reverse.h **** 
 9149              		.loc 19 175 91 view .LVU2536
 9150              	.LBE1771:
 9151              	.LBE1781:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 297


 9152              	.LBE1791:
 9153              	.LBE1831:
 9154              	.LBB1832:
 9155              	.LBB1818:
 9156              	.LBB1807:
  99:delayline_reverse.h ****  
 9157              		.loc 19 99 38 view .LVU2537
 9158 034c 3844     		add	r0, r0, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9159              		.loc 19 98 50 view .LVU2538
 9160 034e A3FB06C1 		umull	ip, r1, r3, r6
  92:delayline_reverse.h ****         
 9161              		.loc 19 92 57 view .LVU2539
 9162 0352 DFF86CC1 		ldr	ip, .L582+168
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9163              		.loc 19 90 9 view .LVU2540
 9164 0356 05EB8E0A 		add	r10, r5, lr, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9165              		.loc 19 98 50 view .LVU2541
 9166 035a 890C     		lsrs	r1, r1, #18
 9167              	.LBE1807:
 9168              	.LBE1818:
 9169              	.LBE1832:
 9170              	.LBB1833:
 9171              	.LBB1792:
 9172              	.LBB1782:
 9173              	.LBB1772:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9174              		.loc 19 174 9 view .LVU2542
 9175 035c 38EE088A 		vadd.f32	s16, s16, s16
 9176              	.LVL586:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9177              		.loc 19 174 9 view .LVU2543
 9178              	.LBE1772:
 9179              	.LBE1782:
 9180              	.LBE1792:
 9181              	.LBE1833:
 9182              	.LBB1834:
 9183              	.LBB1819:
 9184              	.LBB1808:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9185              		.loc 19 98 50 view .LVU2544
 9186 0360 0CFB1161 		mls	r1, ip, r1, r6
  92:delayline_reverse.h ****         
 9187              		.loc 19 92 45 view .LVU2545
 9188 0364 524E     		ldr	r6, .L582+152
 9189              	.LBE1808:
 9190              	.LBE1819:
 9191              	.LBE1834:
 9192              	.LBB1835:
 9193              	.LBB1793:
 9194              	.LBB1783:
 9195              	.LBB1773:
 175:delayline_reverse.h **** 
 9196              		.loc 19 175 9 view .LVU2546
 9197 0366 37EEA70A 		vadd.f32	s0, s15, s15
 9198              	.LVL587:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 298


 175:delayline_reverse.h **** 
 9199              		.loc 19 175 9 view .LVU2547
 9200              	.LBE1773:
 9201              	.LBE1783:
 9202              	.LBE1793:
 9203              	.LBE1835:
 385:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 9204              		.loc 20 385 26 view .LVU2548
 9205 036a DBED007A 		vldr.32	s15, [fp]
 9206              	.LBB1836:
 9207              	.LBB1820:
 9208              	.LBB1809:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9209              		.loc 19 98 50 view .LVU2549
 9210 036e 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 9211              		.loc 19 92 45 view .LVU2550
 9212 0370 7644     		add	r6, r6, lr
  99:delayline_reverse.h ****  
 9213              		.loc 19 99 50 view .LVU2551
 9214 0372 A3FB001E 		umull	r1, lr, r3, r0
  92:delayline_reverse.h ****         
 9215              		.loc 19 92 57 view .LVU2552
 9216 0376 A3FB0613 		umull	r1, r3, r3, r6
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9217              		.loc 19 98 9 view .LVU2553
 9218 037a 0199     		ldr	r1, [sp, #4]
  99:delayline_reverse.h ****  
 9219              		.loc 19 99 50 view .LVU2554
 9220 037c 4FEA9E4E 		lsr	lr, lr, #18
 9221              	.LBE1809:
 9222              	.LBE1820:
 9223              	.LBE1836:
 9224              	.LBB1837:
 9225              	.LBB1794:
 9226              	.LBB1784:
 9227              	.LBB1774:
 9228              		.loc 19 177 44 view .LVU2555
 9229 0380 20EE0D0A 		vmul.f32	s0, s0, s26
 9230              	.LVL588:
 9231              		.loc 19 177 44 view .LVU2556
 9232              	.LBE1774:
 9233              	.LBE1784:
 9234              	.LBE1794:
 9235              	.LBE1837:
 9236              	.LBB1838:
 9237              	.LBB1821:
 9238              	.LBB1810:
  92:delayline_reverse.h ****         
 9239              		.loc 19 92 57 view .LVU2557
 9240 0384 9B0C     		lsrs	r3, r3, #18
  99:delayline_reverse.h ****  
 9241              		.loc 19 99 50 view .LVU2558
 9242 0386 0CFB1E00 		mls	r0, ip, lr, r0
 9243              	.LBE1810:
 9244              	.LBE1821:
 9245              	.LBE1838:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 299


 9246              	.LBB1839:
 9247              	.LBB1795:
 9248              	.LBB1785:
 9249              	.LBB1775:
 9250              		.loc 19 177 54 view .LVU2559
 9251 038a ACEE880A 		vfma.f32	s0, s25, s16
 9252              	.LVL589:
 9253              		.loc 19 177 54 view .LVU2560
 9254              	.LBE1775:
 9255              	.LBE1785:
  83:Veno-Echo.cpp ****     }
 9256              		.loc 20 83 9 is_stmt 1 view .LVU2561
  83:Veno-Echo.cpp ****     }
 9257              		.loc 20 83 9 is_stmt 0 view .LVU2562
 9258              	.LBE1795:
 9259              	.LBE1839:
 9260              	.LBB1840:
 9261              	.LBB1822:
 9262              	.LBB1811:
  92:delayline_reverse.h ****         
 9263              		.loc 19 92 57 view .LVU2563
 9264 038e 0CFB1363 		mls	r3, ip, r3, r6
  95:delayline_reverse.h **** 
 9265              		.loc 19 95 43 view .LVU2564
 9266 0392 D5E90472 		ldrd	r7, r2, [r5, #16]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9267              		.loc 19 90 9 view .LVU2565
 9268 0396 CAED067A 		vstr.32	s15, [r10, #24]
  95:delayline_reverse.h **** 
 9269              		.loc 19 95 43 view .LVU2566
 9270 039a 3A44     		add	r2, r2, r7
 101:delayline_reverse.h ****         {
 9271              		.loc 19 101 36 view .LVU2567
 9272 039c DFF824A1 		ldr	r10, .L582+172
  95:delayline_reverse.h **** 
 9273              		.loc 19 95 43 view .LVU2568
 9274 03a0 0132     		adds	r2, r2, #1
 101:delayline_reverse.h ****         {
 9275              		.loc 19 101 36 view .LVU2569
 9276 03a2 55F80AE0 		ldr	lr, [r5, r10]
 101:delayline_reverse.h ****         {
 9277              		.loc 19 101 45 view .LVU2570
 9278 03a6 07F1FF3A 		add	r10, r7, #-1
 9279              	.LBE1811:
 9280              	.LBE1822:
 9281              	.LBE1840:
 382:Veno-Echo.cpp **** 
 9282              		.loc 20 382 50 view .LVU2571
 9283 03aa 8DED070A 		vstr.32	s0, [sp, #28]
 385:Veno-Echo.cpp ****         delaysR_REV.Write(in[i+1]);
 9284              		.loc 20 385 9 is_stmt 1 view .LVU2572
 9285              	.LVL590:
 9286              	.LBB1841:
 9287              	.LBI1802:
  92:Veno-Echo.cpp ****     {
 9288              		.loc 20 92 10 view .LVU2573
  92:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 300


 9289              		.loc 20 92 10 is_stmt 0 view .LVU2574
 9290              	.LBE1841:
 9291              	.LBE1966:
 9292              	.LBE1591:
  94:Veno-Echo.cpp ****     }
 9293              		.loc 20 94 9 is_stmt 1 view .LVU2575
 9294              	.LBB1978:
 9295              	.LBB1967:
 9296              	.LBB1842:
 9297              	.LBB1823:
 9298              	.LBI1803:
  88:delayline_reverse.h ****     {
 9299              		.loc 19 88 17 view .LVU2576
 9300              	.LBB1812:
  99:delayline_reverse.h ****  
 9301              		.loc 19 99 9 is_stmt 0 view .LVU2577
 9302 03ae C5E90210 		strd	r1, r0, [r5, #8]
  95:delayline_reverse.h **** 
 9303              		.loc 19 95 54 view .LVU2578
 9304 03b2 B2FBF7F1 		udiv	r1, r2, r7
 101:delayline_reverse.h ****         {
 9305              		.loc 19 101 45 view .LVU2579
 9306 03b6 AAEB0E0A 		sub	r10, r10, lr
  95:delayline_reverse.h **** 
 9307              		.loc 19 95 54 view .LVU2580
 9308 03ba 07FB1122 		mls	r2, r7, r1, r2
  92:delayline_reverse.h ****         
 9309              		.loc 19 92 9 view .LVU2581
 9310 03be 6B60     		str	r3, [r5, #4]
 101:delayline_reverse.h ****         {
 9311              		.loc 19 101 9 view .LVU2582
 9312 03c0 5245     		cmp	r2, r10
  95:delayline_reverse.h **** 
 9313              		.loc 19 95 9 view .LVU2583
 9314 03c2 6A61     		str	r2, [r5, #20]
 101:delayline_reverse.h ****         {
 9315              		.loc 19 101 9 view .LVU2584
 9316 03c4 40F2CF82 		bls	.L482
 103:delayline_reverse.h ****             {
 9317              		.loc 19 103 17 view .LVU2585
 9318 03c8 3A49     		ldr	r1, .L582+156
 103:delayline_reverse.h ****             {
 9319              		.loc 19 103 13 view .LVU2586
 9320 03ca 685C     		ldrb	r0, [r5, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 9321              		.loc 19 103 17 view .LVU2587
 9322 03cc 6A18     		adds	r2, r5, r1
 103:delayline_reverse.h ****             {
 9323              		.loc 19 103 13 view .LVU2588
 9324 03ce 0028     		cmp	r0, #0
 9325 03d0 40F0CF82 		bne	.L573
 107:delayline_reverse.h ****                 {
 9326              		.loc 19 107 21 view .LVU2589
 9327 03d4 3848     		ldr	r0, .L582+160
 105:delayline_reverse.h ****                 
 9328              		.loc 19 105 17 view .LVU2590
 9329 03d6 0127     		movs	r7, #1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 301


 110:delayline_reverse.h ****                 }
 9330              		.loc 19 110 45 view .LVU2591
 9331 03d8 013B     		subs	r3, r3, #1
 107:delayline_reverse.h ****                 {
 9332              		.loc 19 107 17 view .LVU2592
 9333 03da 2E5C     		ldrb	r6, [r5, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 9334              		.loc 19 107 21 view .LVU2593
 9335 03dc 2844     		add	r0, r0, r5
 105:delayline_reverse.h ****                 
 9336              		.loc 19 105 17 view .LVU2594
 9337 03de 6F54     		strb	r7, [r5, r1]
 107:delayline_reverse.h ****                 {
 9338              		.loc 19 107 17 view .LVU2595
 9339 03e0 002E     		cmp	r6, #0
 9340 03e2 40F0EB83 		bne	.L484
 110:delayline_reverse.h ****                 }
 9341              		.loc 19 110 21 view .LVU2596
 9342 03e6 EB60     		str	r3, [r5, #12]
 9343              	.L485:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9344              		.loc 19 130 45 view .LVU2597
 9345 03e8 07EE90EA 		vmov	s15, lr	@ int
 9346              	.LVL591:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9347              		.loc 19 130 45 view .LVU2598
 9348 03ec B7EE007A 		vmov.f32	s14, #1.0e+0
 9349 03f0 F8EE676A 		vcvt.f32.u32	s13, s15
 9350 03f4 C7EE267A 		vdiv.f32	s15, s14, s13
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9351              		.loc 19 130 37 view .LVU2599
 9352 03f8 37EE8BBA 		vadd.f32	s22, s15, s22
 131:delayline_reverse.h ****                 {
 9353              		.loc 19 131 17 view .LVU2600
 9354 03fc B4EEC7BA 		vcmpe.f32	s22, s14
 9355 0400 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9356 0404 40F39183 		ble	.L574
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9357              		.loc 19 133 21 view .LVU2601
 9358 0408 049B     		ldr	r3, [sp, #16]
 134:delayline_reverse.h ****                     playinghead_ = true;
 9359              		.loc 19 134 21 view .LVU2602
 9360 040a 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9361              		.loc 19 133 21 view .LVU2603
 9362 040c 83ED007A 		vstr.32	s14, [r3]
 135:delayline_reverse.h ****                 }
 9363              		.loc 19 135 21 view .LVU2604
 9364 0410 0123     		movs	r3, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 9365              		.loc 19 134 21 view .LVU2605
 9366 0412 1170     		strb	r1, [r2]
 135:delayline_reverse.h ****                 }
 9367              		.loc 19 135 21 view .LVU2606
 9368 0414 0370     		strb	r3, [r0]
 9369 0416 57E0     		b	.L583
 9370              	.L584:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 302


 9371              		.align	2
 9372              	.L582:
 9373 0418 00000000 		.word	.LANCHOR104
 9374 041c 00000000 		.word	.LANCHOR0
 9375 0420 00000000 		.word	.LANCHOR105
 9376 0424 00000000 		.word	.LANCHOR1
 9377 0428 00000000 		.word	.LANCHOR64
 9378 042c 00000000 		.word	.LANCHOR82
 9379 0430 00000000 		.word	.LANCHOR55
 9380 0434 00000000 		.word	.LANCHOR110
 9381 0438 00000000 		.word	.LANCHOR92
 9382 043c 00000000 		.word	.LANCHOR98
 9383 0440 00000000 		.word	.LANCHOR93
 9384 0444 00000000 		.word	.LANCHOR99
 9385 0448 00000000 		.word	.LANCHOR91
 9386 044c 00000000 		.word	.LANCHOR101
 9387 0450 00000000 		.word	.LANCHOR90
 9388 0454 00000000 		.word	.LANCHOR100
 9389 0458 00000000 		.word	.LANCHOR102
 9390 045c 00000000 		.word	.LANCHOR2
 9391 0460 00000000 		.word	.LANCHOR103
 9392 0464 00000000 		.word	.LANCHOR113
 9393 0468 DB0FC93F 		.word	1070141403
 9394 046c 00000000 		.word	.LANCHOR114
 9395 0470 00000000 		.word	.LANCHOR117
 9396 0474 00000000 		.word	.LANCHOR79
 9397 0478 00000000 		.word	.LANCHOR118
 9398 047c 00000000 		.word	.LANCHOR115
 9399 0480 E4CB9640 		.word	1083624420
 9400 0484 00000000 		.word	.LANCHOR116
 9401 0488 0000803D 		.word	1031798784
 9402 048c 00000000 		.word	.LANCHOR119
 9403 0490 00000000 		.word	.LANCHOR120
 9404 0494 00000000 		.word	.LANCHOR121
 9405 0498 00000000 		.word	.LANCHOR122
 9406 049c 00000000 		.word	.LANCHOR123
 9407 04a0 00000000 		.word	.LANCHOR124
 9408 04a4 00000000 		.word	.LANCHOR3
 9409 04a8 BF270900 		.word	599999
 9410 04ac 851DD96F 		.word	1876499845
 9411 04b0 C1270900 		.word	600001
 9412 04b4 249F2400 		.word	2400036
 9413 04b8 1C9F2400 		.word	2400028
 9414 04bc 209F2400 		.word	2400032
 9415 04c0 C0270900 		.word	600000
 9416 04c4 189F2400 		.word	2400024
 9417              	.L583:
 9418              	.LVL592:
 9419              	.L488:
 135:delayline_reverse.h ****                 }
 9420              		.loc 19 135 21 view .LVU2607
 9421              	.LBE1812:
 9422              	.LBE1823:
 9423              	.LBE1842:
 386:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 9424              		.loc 20 386 9 is_stmt 1 view .LVU2608
 9425              	.LBB1843:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 303


 9426              	.LBB1844:
 9427              	.LBB1845:
  95:delayline_reverse.h **** 
 9428              		.loc 19 95 45 is_stmt 0 view .LVU2609
 9429 04c8 2169     		ldr	r1, [r4, #16]
 9430 04ca 0BF10403 		add	r3, fp, #4
  95:delayline_reverse.h **** 
 9431              		.loc 19 95 43 view .LVU2610
 9432 04ce 6069     		ldr	r0, [r4, #20]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9433              		.loc 19 90 15 view .LVU2611
 9434 04d0 6568     		ldr	r5, [r4, #4]
 9435 04d2 08EE103A 		vmov	s16, r3	@ int
  95:delayline_reverse.h **** 
 9436              		.loc 19 95 43 view .LVU2612
 9437 04d6 0844     		add	r0, r0, r1
  92:delayline_reverse.h ****         
 9438              		.loc 19 92 45 view .LVU2613
 9439 04d8 B14F     		ldr	r7, .L585
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9440              		.loc 19 90 9 view .LVU2614
 9441 04da 04EB850E 		add	lr, r4, r5, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9442              		.loc 19 98 38 view .LVU2615
 9443 04de B14B     		ldr	r3, .L585+4
  95:delayline_reverse.h **** 
 9444              		.loc 19 95 43 view .LVU2616
 9445 04e0 421C     		adds	r2, r0, #1
  92:delayline_reverse.h ****         
 9446              		.loc 19 92 45 view .LVU2617
 9447 04e2 2F44     		add	r7, r7, r5
 101:delayline_reverse.h ****         {
 9448              		.loc 19 101 45 view .LVU2618
 9449 04e4 01F1FF3C 		add	ip, r1, #-1
 9450              	.LBE1845:
 9451              	.LBE1844:
 9452              	.LBE1843:
 386:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 9453              		.loc 20 386 26 view .LVU2619
 9454 04e8 DBED017A 		vldr.32	s15, [fp, #4]
 9455              	.LVL593:
 9456              	.LBB1854:
 9457              	.LBI1843:
  92:Veno-Echo.cpp ****     {
 9458              		.loc 20 92 10 is_stmt 1 view .LVU2620
  92:Veno-Echo.cpp ****     {
 9459              		.loc 20 92 10 is_stmt 0 view .LVU2621
 9460              	.LBE1854:
 9461              	.LBE1967:
 9462              	.LBE1978:
  94:Veno-Echo.cpp ****     }
 9463              		.loc 20 94 9 is_stmt 1 view .LVU2622
 9464              	.LBB1979:
 9465              	.LBB1968:
 9466              	.LBB1855:
 9467              	.LBB1850:
 9468              	.LBI1844:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 304


  88:delayline_reverse.h ****     {
 9469              		.loc 19 88 17 view .LVU2623
 9470              	.LBB1846:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9471              		.loc 19 98 38 is_stmt 0 view .LVU2624
 9472 04ec D4E90205 		ldrd	r0, r5, [r4, #8]
 9473 04f0 00EB030A 		add	r10, r0, r3
  99:delayline_reverse.h ****  
 9474              		.loc 19 99 38 view .LVU2625
 9475 04f4 1D44     		add	r5, r5, r3
  92:delayline_reverse.h ****         
 9476              		.loc 19 92 57 view .LVU2626
 9477 04f6 03F1E043 		add	r3, r3, #1879048192
  95:delayline_reverse.h **** 
 9478              		.loc 19 95 54 view .LVU2627
 9479 04fa B2FBF1F0 		udiv	r0, r2, r1
 9480 04fe 01FB1020 		mls	r0, r1, r0, r2
 101:delayline_reverse.h ****         {
 9481              		.loc 19 101 36 view .LVU2628
 9482 0502 A949     		ldr	r1, .L585+8
  92:delayline_reverse.h ****         
 9483              		.loc 19 92 57 view .LVU2629
 9484 0504 A3F54013 		sub	r3, r3, #3145728
 101:delayline_reverse.h ****         {
 9485              		.loc 19 101 36 view .LVU2630
 9486 0508 6158     		ldr	r1, [r4, r1]
  92:delayline_reverse.h ****         
 9487              		.loc 19 92 57 view .LVU2631
 9488 050a A3F63A23 		subw	r3, r3, #2618
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 9489              		.loc 19 90 9 view .LVU2632
 9490 050e CEED067A 		vstr.32	s15, [lr, #24]
 101:delayline_reverse.h ****         {
 9491              		.loc 19 101 36 view .LVU2633
 9492 0512 0191     		str	r1, [sp, #4]
  92:delayline_reverse.h ****         
 9493              		.loc 19 92 57 view .LVU2634
 9494 0514 A3FB0762 		umull	r6, r2, r3, r7
 9495 0518 DFF8C8E2 		ldr	lr, .L585+68
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9496              		.loc 19 98 50 view .LVU2635
 9497 051c A3FB0A61 		umull	r6, r1, r3, r10
  99:delayline_reverse.h ****  
 9498              		.loc 19 99 50 view .LVU2636
 9499 0520 A3FB0563 		umull	r6, r3, r3, r5
 101:delayline_reverse.h ****         {
 9500              		.loc 19 101 45 view .LVU2637
 9501 0524 019E     		ldr	r6, [sp, #4]
  92:delayline_reverse.h ****         
 9502              		.loc 19 92 57 view .LVU2638
 9503 0526 920C     		lsrs	r2, r2, #18
  95:delayline_reverse.h **** 
 9504              		.loc 19 95 9 view .LVU2639
 9505 0528 6061     		str	r0, [r4, #20]
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9506              		.loc 19 98 50 view .LVU2640
 9507 052a 890C     		lsrs	r1, r1, #18
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 305


 101:delayline_reverse.h ****         {
 9508              		.loc 19 101 45 view .LVU2641
 9509 052c ACEB060C 		sub	ip, ip, r6
  99:delayline_reverse.h ****  
 9510              		.loc 19 99 50 view .LVU2642
 9511 0530 9B0C     		lsrs	r3, r3, #18
  92:delayline_reverse.h ****         
 9512              		.loc 19 92 57 view .LVU2643
 9513 0532 0EFB1272 		mls	r2, lr, r2, r7
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9514              		.loc 19 98 50 view .LVU2644
 9515 0536 0EFB11A1 		mls	r1, lr, r1, r10
 101:delayline_reverse.h ****         {
 9516              		.loc 19 101 9 view .LVU2645
 9517 053a 6045     		cmp	r0, ip
  99:delayline_reverse.h ****  
 9518              		.loc 19 99 50 view .LVU2646
 9519 053c 0EFB1353 		mls	r3, lr, r3, r5
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 9520              		.loc 19 98 9 view .LVU2647
 9521 0540 C4E90121 		strd	r2, r1, [r4, #4]
  99:delayline_reverse.h ****  
 9522              		.loc 19 99 9 view .LVU2648
 9523 0544 E360     		str	r3, [r4, #12]
 101:delayline_reverse.h ****         {
 9524              		.loc 19 101 9 view .LVU2649
 9525 0546 40F2EB81 		bls	.L492
 103:delayline_reverse.h ****             {
 9526              		.loc 19 103 17 view .LVU2650
 9527 054a 9849     		ldr	r1, .L585+12
 103:delayline_reverse.h ****             {
 9528              		.loc 19 103 13 view .LVU2651
 9529 054c 605C     		ldrb	r0, [r4, r1]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 9530              		.loc 19 103 17 view .LVU2652
 9531 054e 6318     		adds	r3, r4, r1
 103:delayline_reverse.h ****             {
 9532              		.loc 19 103 13 view .LVU2653
 9533 0550 0028     		cmp	r0, #0
 9534 0552 40F0EB81 		bne	.L575
 107:delayline_reverse.h ****                 {
 9535              		.loc 19 107 21 view .LVU2654
 9536 0556 9648     		ldr	r0, .L585+16
 105:delayline_reverse.h ****                 
 9537              		.loc 19 105 17 view .LVU2655
 9538 0558 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 9539              		.loc 19 110 45 view .LVU2656
 9540 055a 013A     		subs	r2, r2, #1
 107:delayline_reverse.h ****                 {
 9541              		.loc 19 107 17 view .LVU2657
 9542 055c 255C     		ldrb	r5, [r4, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 9543              		.loc 19 107 21 view .LVU2658
 9544 055e 2044     		add	r0, r0, r4
 105:delayline_reverse.h ****                 
 9545              		.loc 19 105 17 view .LVU2659
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 306


 9546 0560 6754     		strb	r7, [r4, r1]
 107:delayline_reverse.h ****                 {
 9547              		.loc 19 107 17 view .LVU2660
 9548 0562 002D     		cmp	r5, #0
 9549 0564 40F02C83 		bne	.L494
 110:delayline_reverse.h ****                 }
 9550              		.loc 19 110 21 view .LVU2661
 9551 0568 E260     		str	r2, [r4, #12]
 9552              	.L495:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9553              		.loc 19 130 45 view .LVU2662
 9554 056a DDED017A 		vldr.32	s15, [sp, #4]	@ int
 9555              	.LVL594:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9556              		.loc 19 130 45 view .LVU2663
 9557 056e B7EE007A 		vmov.f32	s14, #1.0e+0
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9558              		.loc 19 130 37 view .LVU2664
 9559 0572 039A     		ldr	r2, [sp, #12]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9560              		.loc 19 130 45 view .LVU2665
 9561 0574 B8EE676A 		vcvt.f32.u32	s12, s15
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9562              		.loc 19 130 37 view .LVU2666
 9563 0578 D2ED006A 		vldr.32	s13, [r2]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9564              		.loc 19 130 45 view .LVU2667
 9565 057c C7EE067A 		vdiv.f32	s15, s14, s12
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 9566              		.loc 19 130 37 view .LVU2668
 9567 0580 77EEA67A 		vadd.f32	s15, s15, s13
 131:delayline_reverse.h ****                 {
 9568              		.loc 19 131 17 view .LVU2669
 9569 0584 F4EEC77A 		vcmpe.f32	s15, s14
 9570 0588 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9571 058c 40F31F83 		ble	.L577
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9572              		.loc 19 133 21 view .LVU2670
 9573 0590 039A     		ldr	r2, [sp, #12]
 134:delayline_reverse.h ****                     playinghead_ = true;
 9574              		.loc 19 134 21 view .LVU2671
 9575 0592 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 9576              		.loc 19 133 21 view .LVU2672
 9577 0594 82ED007A 		vstr.32	s14, [r2]
 135:delayline_reverse.h ****                 }
 9578              		.loc 19 135 21 view .LVU2673
 9579 0598 0122     		movs	r2, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 9580              		.loc 19 134 21 view .LVU2674
 9581 059a 1970     		strb	r1, [r3]
 135:delayline_reverse.h ****                 }
 9582              		.loc 19 135 21 view .LVU2675
 9583 059c 0270     		strb	r2, [r0]
 9584              	.LVL595:
 9585              	.L498:
 135:delayline_reverse.h ****                 }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 307


 9586              		.loc 19 135 21 view .LVU2676
 9587              	.LBE1846:
 9588              	.LBE1850:
 9589              	.LBE1855:
 391:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 9590              		.loc 20 391 9 is_stmt 1 view .LVU2677
 391:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 9591              		.loc 20 391 56 is_stmt 0 view .LVU2678
 9592 059e 06AA     		add	r2, sp, #24
 9593 05a0 5946     		mov	r1, fp
 9594 05a2 8448     		ldr	r0, .L585+20
 9595 05a4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9596              	.LVL596:
 392:Veno-Echo.cpp **** 
 9597              		.loc 20 392 56 view .LVU2679
 9598 05a8 18EE101A 		vmov	r1, s16	@ int
 9599 05ac 07AA     		add	r2, sp, #28
 9600 05ae 8248     		ldr	r0, .L585+24
 391:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(in[i+1],delayRevSignalR);
 9601              		.loc 20 391 56 view .LVU2680
 9602 05b0 F0EE408A 		vmov.f32	s17, s0
 9603              	.LVL597:
 392:Veno-Echo.cpp **** 
 9604              		.loc 20 392 9 is_stmt 1 view .LVU2681
 392:Veno-Echo.cpp **** 
 9605              		.loc 20 392 56 is_stmt 0 view .LVU2682
 9606 05b4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9607              	.LVL598:
 395:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 9608              		.loc 20 395 46 view .LVU2683
 9609 05b8 8048     		ldr	r0, .L585+28
 392:Veno-Echo.cpp **** 
 9610              		.loc 20 392 56 view .LVU2684
 9611 05ba B0EE408A 		vmov.f32	s16, s0
 9612              	.LVL599:
 395:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 9613              		.loc 20 395 9 is_stmt 1 view .LVU2685
 395:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 9614              		.loc 20 395 46 is_stmt 0 view .LVU2686
 9615 05be FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 9616              	.LVL600:
 395:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 9617              		.loc 20 395 46 view .LVU2687
 9618 05c2 0346     		mov	r3, r0
 396:Veno-Echo.cpp **** 
 9619              		.loc 20 396 46 view .LVU2688
 9620 05c4 7E48     		ldr	r0, .L585+32
 395:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 9621              		.loc 20 395 45 view .LVU2689
 9622 05c6 1B68     		ldr	r3, [r3]	@ float
 395:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 9623              		.loc 20 395 47 view .LVU2690
 9624 05c8 0893     		str	r3, [sp, #32]	@ float
 396:Veno-Echo.cpp **** 
 9625              		.loc 20 396 9 is_stmt 1 view .LVU2691
 396:Veno-Echo.cpp **** 
 9626              		.loc 20 396 46 is_stmt 0 view .LVU2692
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 308


 9627 05ca FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 9628              	.LVL601:
 396:Veno-Echo.cpp **** 
 9629              		.loc 20 396 45 view .LVU2693
 9630 05ce 0368     		ldr	r3, [r0]	@ float
 396:Veno-Echo.cpp **** 
 9631              		.loc 20 396 47 view .LVU2694
 9632 05d0 0993     		str	r3, [sp, #36]	@ float
 399:Veno-Echo.cpp **** 
 9633              		.loc 20 399 9 is_stmt 1 view .LVU2695
 399:Veno-Echo.cpp **** 
 9634              		.loc 20 399 28 is_stmt 0 view .LVU2696
 9635 05d2 FFF7FEFF 		bl	_Z19Update_BaseTempoLEDv
 9636              	.LVL602:
 402:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 9637              		.loc 20 402 9 is_stmt 1 view .LVU2697
 9638              	.LBB1856:
 9639              	.LBB1857:
1851:Veno-Echo.cpp ****         returnval = limit;
 9640              		.loc 20 1851 5 is_stmt 0 view .LVU2698
 9641 05d6 B0EE007A 		vmov.f32	s14, #2.0e+0
 9642              	.LBE1857:
 9643              	.LBE1856:
 402:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 9644              		.loc 20 402 34 view .LVU2699
 9645 05da DDED087A 		vldr.32	s15, [sp, #32]
 9646              	.LVL603:
 9647              	.LBB1860:
 9648              	.LBI1856:
1848:Veno-Echo.cpp **** {
 9649              		.loc 20 1848 7 is_stmt 1 view .LVU2700
 9650              	.LBB1858:
1850:Veno-Echo.cpp ****     if (input > limit)
 9651              		.loc 20 1850 5 view .LVU2701
1851:Veno-Echo.cpp ****         returnval = limit;
 9652              		.loc 20 1851 5 view .LVU2702
 9653 05de F4EEC77A 		vcmpe.f32	s15, s14
 9654 05e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9655 05e6 00F39881 		bgt	.L539
1853:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9656              		.loc 20 1853 10 view .LVU2703
 9657 05ea B8EE007A 		vmov.f32	s14, #-2.0e+0
1854:Veno-Echo.cpp ****     else
 9658              		.loc 20 1854 19 is_stmt 0 view .LVU2704
 9659 05ee F4EE477A 		vcmp.f32	s15, s14
 9660 05f2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9661 05f6 48BF     		it	mi
 9662 05f8 F0EE477A 		vmovmi.f32	s15, s14
 9663              	.LVL604:
 9664              	.L502:
1858:Veno-Echo.cpp **** }
 9665              		.loc 20 1858 5 is_stmt 1 view .LVU2705
1858:Veno-Echo.cpp **** }
 9666              		.loc 20 1858 5 is_stmt 0 view .LVU2706
 9667              	.LBE1858:
 9668              	.LBE1860:
 9669              	.LBB1861:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 309


 9670              	.LBB1862:
1851:Veno-Echo.cpp ****         returnval = limit;
 9671              		.loc 20 1851 5 view .LVU2707
 9672 05fc B0EE007A 		vmov.f32	s14, #2.0e+0
 9673              	.LBE1862:
 9674              	.LBE1861:
 403:Veno-Echo.cpp **** 
 9675              		.loc 20 403 34 view .LVU2708
 9676 0600 9DED090A 		vldr.32	s0, [sp, #36]
 402:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 9677              		.loc 20 402 23 view .LVU2709
 9678 0604 CDED087A 		vstr.32	s15, [sp, #32]
 403:Veno-Echo.cpp **** 
 9679              		.loc 20 403 9 is_stmt 1 view .LVU2710
 9680              	.LVL605:
 9681              	.LBB1866:
 9682              	.LBI1861:
1848:Veno-Echo.cpp **** {
 9683              		.loc 20 1848 7 view .LVU2711
 9684              	.LBB1863:
1850:Veno-Echo.cpp ****     if (input > limit)
 9685              		.loc 20 1850 5 view .LVU2712
1851:Veno-Echo.cpp ****         returnval = limit;
 9686              		.loc 20 1851 5 view .LVU2713
 9687 0608 B4EEC70A 		vcmpe.f32	s0, s14
 9688 060c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9689 0610 00F3EA80 		bgt	.L540
1853:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9690              		.loc 20 1853 10 view .LVU2714
 9691 0614 B8EE007A 		vmov.f32	s14, #-2.0e+0
 9692              	.LBE1863:
 9693              	.LBE1866:
 9694              	.LBB1867:
 405:Veno-Echo.cpp **** {
 9695              		.loc 20 405 1 is_stmt 0 view .LVU2715
 9696 0618 6A4B     		ldr	r3, .L585+36
 9697 061a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9698              	.LBE1867:
 9699              	.LBB1889:
 9700              	.LBB1864:
1854:Veno-Echo.cpp ****     else
 9701              		.loc 20 1854 19 view .LVU2716
 9702 061c B4EE470A 		vcmp.f32	s0, s14
 9703 0620 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9704 0624 48BF     		it	mi
 9705 0626 B0EE470A 		vmovmi.f32	s0, s14
 9706              	.LVL606:
1858:Veno-Echo.cpp **** }
 9707              		.loc 20 1858 5 is_stmt 1 view .LVU2717
1858:Veno-Echo.cpp **** }
 9708              		.loc 20 1858 5 is_stmt 0 view .LVU2718
 9709              	.LBE1864:
 9710              	.LBE1889:
 403:Veno-Echo.cpp **** 
 9711              		.loc 20 403 23 view .LVU2719
 9712 062a 8DED090A 		vstr.32	s0, [sp, #36]
 405:Veno-Echo.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 310


 9713              		.loc 20 405 1 is_stmt 1 view .LVU2720
 9714              	.LBB1890:
 9715 062e 002B     		cmp	r3, #0
 9716 0630 00F0E380 		beq	.L578
 9717              	.L506:
 9718              	.LBE1890:
 449:Veno-Echo.cpp ****         static float RNegFB{};
 9719              		.loc 20 449 9 view .LVU2721
 450:Veno-Echo.cpp **** 
 9720              		.loc 20 450 9 view .LVU2722
 453:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9721              		.loc 20 453 9 view .LVU2723
 453:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9722              		.loc 20 453 22 is_stmt 0 view .LVU2724
 9723 0634 644B     		ldr	r3, .L585+40
 9724              	.LBB1891:
 9725              	.LBB1892:
  53:envFollow.h   **** 
  54:envFollow.h   ****     float GetEnv(float sample)
  55:envFollow.h   ****     {
  56:envFollow.h   ****         //remove average DC offset:
  57:envFollow.h   ****         avg = (w * sample) + ((1-w) * avg);
 9726              		.loc 12 57 16 view .LVU2725
 9727 0636 D8ED042A 		vldr.32	s5, [r8, #16]
 9728              	.LBE1892:
 9729              	.LBE1891:
 453:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9730              		.loc 20 453 22 view .LVU2726
 9731 063a D3ED004A 		vldr.32	s9, [r3]
 9732 063e 634B     		ldr	r3, .L585+44
 9733              	.LBB1904:
 9734              	.LBB1893:
 9735              		.loc 12 57 37 view .LVU2727
 9736 0640 98ED006A 		vldr.32	s12, [r8]
 9737              	.LBE1893:
 9738              	.LBE1904:
 453:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9739              		.loc 20 453 22 view .LVU2728
 9740 0644 93ED007A 		vldr.32	s14, [r3]
 456:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9741              		.loc 20 456 22 view .LVU2729
 9742 0648 614B     		ldr	r3, .L585+48
 453:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9743              		.loc 20 453 9 view .LVU2730
 9744 064a F4EEC74A 		vcmpe.f32	s9, s14
 9745              	.LBB1905:
 9746              	.LBB1906:
 9747              		.loc 12 57 16 view .LVU2731
 9748 064e D9ED043A 		vldr.32	s7, [r9, #16]
  58:envFollow.h   ****         sample_noDC = sample - avg;
  59:envFollow.h   **** 
  60:envFollow.h   ****         //take absolute
  61:envFollow.h   ****         pos_sample = fabsf(sample_noDC);
  62:envFollow.h   ****         //return static_cast<int>(pos_sample);
  63:envFollow.h   **** 
  64:envFollow.h   ****         //remove ripple
  65:envFollow.h   ****         avg_env = (w_env * pos_sample) + ((1-w_env) * avg_env);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 311


 9749              		.loc 12 65 20 view .LVU2732
 9750 0652 99ED054A 		vldr.32	s8, [r9, #20]
 9751              		.loc 12 65 53 view .LVU2733
 9752 0656 99ED032A 		vldr.32	s4, [r9, #12]
 9753              	.LBE1906:
 9754              	.LBE1905:
 453:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9755              		.loc 20 453 9 view .LVU2734
 9756 065a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9757              	.LBB1915:
 9758              	.LBB1894:
 9759              		.loc 12 65 20 view .LVU2735
 9760 065e 98ED053A 		vldr.32	s6, [r8, #20]
 9761              		.loc 12 65 53 view .LVU2736
 9762 0662 98ED031A 		vldr.32	s2, [r8, #12]
 9763              	.LBE1894:
 9764              	.LBE1915:
 472:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9765              		.loc 20 472 13 view .LVU2737
 9766 0666 DFED5B1A 		vldr.32	s3, .L585+52
 9767 066a 58BF     		it	pl
 9768 066c 74EEC74A 		vsubpl.f32	s9, s9, s14
 456:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9769              		.loc 20 456 9 is_stmt 1 view .LVU2738
 456:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9770              		.loc 20 456 22 is_stmt 0 view .LVU2739
 9771 0670 93ED007A 		vldr.32	s14, [r3]
 9772 0674 584B     		ldr	r3, .L585+56
 9773 0676 D3ED006A 		vldr.32	s13, [r3]
 459:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 9774              		.loc 20 459 15 view .LVU2740
 9775 067a 67EEA44A 		vmul.f32	s9, s15, s9
 9776              	.LBB1916:
 9777              	.LBB1907:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9778              		.loc 12 57 37 view .LVU2741
 9779 067e D9ED007A 		vldr.32	s15, [r9]
 9780              	.LBE1907:
 9781              	.LBE1916:
 456:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9782              		.loc 20 456 9 view .LVU2742
 9783 0682 B4EEE67A 		vcmpe.f32	s14, s13
 463:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9784              		.loc 20 463 36 view .LVU2743
 9785 0686 554B     		ldr	r3, .L585+60
 456:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9786              		.loc 20 456 9 view .LVU2744
 9787 0688 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9788 068c 58BF     		it	pl
 9789 068e 37EE667A 		vsubpl.f32	s14, s14, s13
 459:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 9790              		.loc 20 459 9 is_stmt 1 view .LVU2745
 9791              	.LVL607:
 460:Veno-Echo.cpp **** 
 9792              		.loc 20 460 9 view .LVU2746
 463:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9793              		.loc 20 463 36 is_stmt 0 view .LVU2747
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 312


 9794 0692 F7EE006A 		vmov.f32	s13, #1.0e+0
 460:Veno-Echo.cpp **** 
 9795              		.loc 20 460 15 view .LVU2748
 9796 0696 20EE070A 		vmul.f32	s0, s0, s14
 9797              	.LVL608:
 463:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9798              		.loc 20 463 9 is_stmt 1 view .LVU2749
 9799              	.LBB1917:
 9800              	.LBB1895:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9801              		.loc 12 57 33 is_stmt 0 view .LVU2750
 9802 069a 36EEE25A 		vsub.f32	s10, s13, s5
 9803              	.LBE1895:
 9804              	.LBE1917:
 9805              	.LBB1918:
 9806              	.LBB1908:
 9807 069e 76EEE35A 		vsub.f32	s11, s13, s7
 9808              	.LBE1908:
 9809              	.LBE1918:
 9810              	.LBB1919:
 9811              	.LBB1896:
 9812              		.loc 12 65 45 view .LVU2751
 9813 06a2 36EEC37A 		vsub.f32	s14, s13, s6
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9814              		.loc 12 57 37 view .LVU2752
 9815 06a6 25EE065A 		vmul.f32	s10, s10, s12
 9816              	.LBE1896:
 9817              	.LBE1919:
 463:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9818              		.loc 20 463 36 view .LVU2753
 9819 06aa 93ED006A 		vldr.32	s12, [r3]
 9820              	.LBB1920:
 9821              	.LBB1909:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9822              		.loc 12 57 37 view .LVU2754
 9823 06ae 65EEA75A 		vmul.f32	s11, s11, s15
 9824              		.loc 12 65 45 view .LVU2755
 9825 06b2 76EEC47A 		vsub.f32	s15, s13, s8
 9826              	.LBE1909:
 9827              	.LBE1920:
 9828              	.LBB1921:
 9829              	.LBB1897:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9830              		.loc 12 57 28 view .LVU2756
 9831 06b6 A4EEA25A 		vfma.f32	s10, s9, s5
 9832              	.LBE1897:
 9833              	.LBE1921:
 9834              	.LBB1922:
 9835              	.LBB1910:
 9836 06ba E0EE235A 		vfma.f32	s11, s0, s7
 9837              		.loc 12 65 53 view .LVU2757
 9838 06be 67EE827A 		vmul.f32	s15, s15, s4
 9839              	.LBE1910:
 9840              	.LBE1922:
 9841              	.LBB1923:
 9842              	.LBB1898:
 9843 06c2 27EE017A 		vmul.f32	s14, s14, s2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 313


 9844              	.LBE1898:
 9845              	.LBE1923:
 463:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9846              		.loc 20 463 36 view .LVU2758
 9847 06c6 76EEC66A 		vsub.f32	s13, s13, s12
 9848              	.LBB1924:
 9849              	.LBB1899:
  58:envFollow.h   **** 
 9850              		.loc 12 58 30 view .LVU2759
 9851 06ca 34EEC52A 		vsub.f32	s4, s9, s10
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9852              		.loc 12 57 13 view .LVU2760
 9853 06ce 88ED005A 		vstr.32	s10, [r8]
 9854              	.LBE1899:
 9855              	.LBE1924:
 9856              	.LBB1925:
 9857              	.LBB1911:
  58:envFollow.h   **** 
 9858              		.loc 12 58 30 view .LVU2761
 9859 06d2 70EE652A 		vsub.f32	s5, s0, s11
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9860              		.loc 12 57 13 view .LVU2762
 9861 06d6 C9ED005A 		vstr.32	s11, [r9]
 9862              	.LBE1911:
 9863              	.LBE1925:
 463:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9864              		.loc 20 463 89 view .LVU2763
 9865 06da 66EE005A 		vmul.f32	s11, s12, s0
 9866              	.LBB1926:
 9867              	.LBB1900:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9868              		.loc 12 61 27 view .LVU2764
 9869 06de F0EEC23A 		vabs.f32	s7, s4
  58:envFollow.h   **** 
 9870              		.loc 12 58 21 view .LVU2765
 9871 06e2 88ED022A 		vstr.32	s4, [r8, #8]
 9872              	.LBE1900:
 9873              	.LBE1926:
 9874              	.LBB1927:
 9875              	.LBB1912:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9876              		.loc 12 61 27 view .LVU2766
 9877 06e6 B0EEE25A 		vabs.f32	s10, s5
  58:envFollow.h   **** 
 9878              		.loc 12 58 21 view .LVU2767
 9879 06ea C9ED022A 		vstr.32	s5, [r9, #8]
 9880              	.LBE1912:
 9881              	.LBE1927:
 464:Veno-Echo.cpp **** 
 9882              		.loc 20 464 89 view .LVU2768
 9883 06ee 26EE246A 		vmul.f32	s12, s12, s9
 9884              	.LBB1928:
 9885              	.LBB1901:
 9886              		.loc 12 65 40 view .LVU2769
 9887 06f2 A3EE837A 		vfma.f32	s14, s7, s6
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9888              		.loc 12 61 20 view .LVU2770
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 314


 9889 06f6 C8ED013A 		vstr.32	s7, [r8, #4]
 9890              	.LBE1901:
 9891              	.LBE1928:
 9892              	.LBB1929:
 9893              	.LBB1913:
 9894              		.loc 12 65 40 view .LVU2771
 9895 06fa E5EE047A 		vfma.f32	s15, s10, s8
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9896              		.loc 12 61 20 view .LVU2772
 9897 06fe 89ED015A 		vstr.32	s10, [r9, #4]
 9898              	.LBE1913:
 9899              	.LBE1929:
 463:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9900              		.loc 20 463 15 view .LVU2773
 9901 0702 E6EEA45A 		vfma.f32	s11, s13, s9
 9902              	.LVL609:
 464:Veno-Echo.cpp **** 
 9903              		.loc 20 464 9 is_stmt 1 view .LVU2774
 464:Veno-Echo.cpp **** 
 9904              		.loc 20 464 15 is_stmt 0 view .LVU2775
 9905 0706 A6EE806A 		vfma.f32	s12, s13, s0
 9906              	.LVL610:
 468:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 9907              		.loc 20 468 9 is_stmt 1 view .LVU2776
 9908              	.LBB1930:
 9909              	.LBI1891:
  54:envFollow.h   ****     {
 9910              		.loc 12 54 11 view .LVU2777
 9911              	.LBB1902:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9912              		.loc 12 57 9 view .LVU2778
  58:envFollow.h   **** 
 9913              		.loc 12 58 9 view .LVU2779
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9914              		.loc 12 61 9 view .LVU2780
 9915              		.loc 12 65 9 view .LVU2781
 9916              	.LBE1902:
 9917              	.LBE1930:
 472:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9918              		.loc 20 472 13 is_stmt 0 view .LVU2782
 9919 070a B4EEE17A 		vcmpe.f32	s14, s3
 9920              	.LBB1931:
 9921              	.LBB1903:
 9922              		.loc 12 65 17 view .LVU2783
 9923 070e 88ED037A 		vstr.32	s14, [r8, #12]
  66:envFollow.h   **** 
  67:envFollow.h   ****         return avg_env;
 9924              		.loc 12 67 9 is_stmt 1 view .LVU2784
 9925              	.LVL611:
 9926              		.loc 12 67 9 is_stmt 0 view .LVU2785
 9927              	.LBE1903:
 9928              	.LBE1931:
 469:Veno-Echo.cpp **** 
 9929              		.loc 20 469 9 is_stmt 1 view .LVU2786
 9930              	.LBB1932:
 9931              	.LBI1905:
  54:envFollow.h   ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 315


 9932              		.loc 12 54 11 view .LVU2787
 9933              	.LBB1914:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9934              		.loc 12 57 9 view .LVU2788
  58:envFollow.h   **** 
 9935              		.loc 12 58 9 view .LVU2789
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9936              		.loc 12 61 9 view .LVU2790
  65:envFollow.h   **** 
 9937              		.loc 12 65 9 view .LVU2791
  65:envFollow.h   **** 
 9938              		.loc 12 65 17 is_stmt 0 view .LVU2792
 9939 0712 C9ED037A 		vstr.32	s15, [r9, #12]
 9940              		.loc 12 67 9 is_stmt 1 view .LVU2793
 9941              	.LVL612:
 9942              		.loc 12 67 9 is_stmt 0 view .LVU2794
 9943              	.LBE1914:
 9944              	.LBE1932:
 472:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9945              		.loc 20 472 13 is_stmt 1 view .LVU2795
 9946 0716 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9947 071a 3DDB     		blt	.L568
 473:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9948              		.loc 20 473 17 view .LVU2796
 473:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9949              		.loc 20 473 32 is_stmt 0 view .LVU2797
 9950 071c 37EE617A 		vsub.f32	s14, s14, s3
 9951              	.LVL613:
 473:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9952              		.loc 20 473 47 view .LVU2798
 9953 0720 F0EE086A 		vmov.f32	s13, #3.0e+0
 9954 0724 27EE267A 		vmul.f32	s14, s14, s13
 9955              	.L512:
 477:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 9956              		.loc 20 477 13 view .LVU2799
 9957 0728 DFED2A6A 		vldr.32	s13, .L585+52
 9958 072c 274B     		ldr	r3, .L585+44
 9959 072e F4EEE67A 		vcmpe.f32	s15, s13
 9960 0732 83ED007A 		vstr.32	s14, [r3]
 477:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 9961              		.loc 20 477 13 is_stmt 1 view .LVU2800
 9962 0736 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9963 073a 2ADB     		blt	.L569
 478:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9964              		.loc 20 478 17 view .LVU2801
 478:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9965              		.loc 20 478 32 is_stmt 0 view .LVU2802
 9966 073c 77EEE67A 		vsub.f32	s15, s15, s13
 9967              	.LVL614:
 478:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9968              		.loc 20 478 47 view .LVU2803
 9969 0740 B0EE087A 		vmov.f32	s14, #3.0e+0
 9970 0744 67EE877A 		vmul.f32	s15, s15, s14
 9971              	.L514:
 9972 0748 234B     		ldr	r3, .L585+56
 482:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 9973              		.loc 20 482 15 view .LVU2804
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 316


 9974 074a 38EEA50A 		vadd.f32	s0, s17, s11
 9975              	.LVL615:
 483:Veno-Echo.cpp ****  
 9976              		.loc 20 483 15 view .LVU2805
 9977 074e 38EE068A 		vadd.f32	s16, s16, s12
 9978              	.LVL616:
 483:Veno-Echo.cpp ****  
 9979              		.loc 20 483 15 view .LVU2806
 9980 0752 C3ED007A 		vstr.32	s15, [r3]
 482:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 9981              		.loc 20 482 9 is_stmt 1 view .LVU2807
 9982              	.LVL617:
 483:Veno-Echo.cpp ****  
 9983              		.loc 20 483 9 view .LVU2808
 486:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 9984              		.loc 20 486 9 view .LVU2809
 9985              	.LBB1933:
 9986              	.LBI1933:
1848:Veno-Echo.cpp **** {
 9987              		.loc 20 1848 7 view .LVU2810
 9988              	.LBB1934:
1850:Veno-Echo.cpp ****     if (input > limit)
 9989              		.loc 20 1850 5 view .LVU2811
1851:Veno-Echo.cpp ****         returnval = limit;
 9990              		.loc 20 1851 5 view .LVU2812
 9991 0756 F0EE007A 		vmov.f32	s15, #2.0e+0
 9992 075a B4EEE70A 		vcmpe.f32	s0, s15
 9993 075e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9994 0762 13DC     		bgt	.L546
1853:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9995              		.loc 20 1853 10 view .LVU2813
 9996 0764 F8EE007A 		vmov.f32	s15, #-2.0e+0
1854:Veno-Echo.cpp ****     else
 9997              		.loc 20 1854 19 is_stmt 0 view .LVU2814
 9998 0768 B4EE670A 		vcmp.f32	s0, s15
 9999 076c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10000 0770 48BF     		it	mi
 10001 0772 B0EE670A 		vmovmi.f32	s0, s15
 10002              	.LVL618:
 10003              	.L516:
1858:Veno-Echo.cpp **** }
 10004              		.loc 20 1858 5 is_stmt 1 view .LVU2815
1858:Veno-Echo.cpp **** }
 10005              		.loc 20 1858 5 is_stmt 0 view .LVU2816
 10006              	.LBE1934:
 10007              	.LBE1933:
 487:Veno-Echo.cpp **** 
 10008              		.loc 20 487 9 is_stmt 1 view .LVU2817
 10009              	.LBB1936:
 10010              	.LBI1593:
1848:Veno-Echo.cpp **** {
 10011              		.loc 20 1848 7 view .LVU2818
 10012              	.LBB1595:
1850:Veno-Echo.cpp ****     if (input > limit)
 10013              		.loc 20 1850 5 view .LVU2819
1851:Veno-Echo.cpp ****         returnval = limit;
 10014              		.loc 20 1851 5 view .LVU2820
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 317


 10015 0776 F0EE007A 		vmov.f32	s15, #2.0e+0
 10016 077a B4EEE78A 		vcmpe.f32	s16, s15
 10017 077e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10018 0782 7FF78FAC 		ble	.L579
1852:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10019              		.loc 20 1852 19 is_stmt 0 view .LVU2821
 10020 0786 B0EE678A 		vmov.f32	s16, s15
 10021              	.LVL619:
1852:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10022              		.loc 20 1852 19 view .LVU2822
 10023 078a 94E4     		b	.L518
 10024              	.LVL620:
 10025              	.L546:
1852:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10026              		.loc 20 1852 19 view .LVU2823
 10027              	.LBE1595:
 10028              	.LBE1936:
 10029              	.LBB1937:
 10030              	.LBB1935:
 10031 078c B0EE670A 		vmov.f32	s0, s15
 10032              	.LVL621:
1852:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10033              		.loc 20 1852 19 view .LVU2824
 10034 0790 F1E7     		b	.L516
 10035              	.LVL622:
 10036              	.L569:
1852:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10037              		.loc 20 1852 19 view .LVU2825
 10038              	.LBE1935:
 10039              	.LBE1937:
 479:Veno-Echo.cpp **** 
 10040              		.loc 20 479 25 view .LVU2826
 10041 0792 DFED137A 		vldr.32	s15, .L585+64
 10042              	.LVL623:
 479:Veno-Echo.cpp **** 
 10043              		.loc 20 479 25 view .LVU2827
 10044 0796 D7E7     		b	.L514
 10045              	.LVL624:
 10046              	.L568:
 475:Veno-Echo.cpp ****             
 10047              		.loc 20 475 25 view .LVU2828
 10048 0798 9FED117A 		vldr.32	s14, .L585+64
 10049              	.LVL625:
 475:Veno-Echo.cpp ****             
 10050              		.loc 20 475 25 view .LVU2829
 10051 079c C4E7     		b	.L512
 10052              	.L586:
 10053 079e 00BF     		.align	2
 10054              	.L585:
 10055 07a0 C1270900 		.word	600001
 10056 07a4 BF270900 		.word	599999
 10057 07a8 189F2400 		.word	2400024
 10058 07ac 249F2400 		.word	2400036
 10059 07b0 1C9F2400 		.word	2400028
 10060 07b4 00000000 		.word	.LANCHOR102
 10061 07b8 00000000 		.word	.LANCHOR103
 10062 07bc 00000000 		.word	.LANCHOR0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 318


 10063 07c0 00000000 		.word	.LANCHOR1
 10064 07c4 00000000 		.word	.LANCHOR82
 10065 07c8 00000000 		.word	.LANCHOR31
 10066 07cc 00000000 		.word	.LANCHOR125
 10067 07d0 00000000 		.word	.LANCHOR43
 10068 07d4 CDCCCC3E 		.word	1053609165
 10069 07d8 00000000 		.word	.LANCHOR126
 10070 07dc 00000000 		.word	.LANCHOR71
 10071 07e0 00000000 		.word	0
 10072 07e4 C0270900 		.word	600000
 10073              	.LVL626:
 10074              	.L540:
 10075              	.LBB1938:
 405:Veno-Echo.cpp **** {
 10076              		.loc 20 405 1 view .LVU2830
 10077 07e8 D64B     		ldr	r3, .L587
 10078              	.LBE1938:
 10079              	.LBB1939:
 10080              	.LBB1865:
1852:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10081              		.loc 20 1852 19 view .LVU2831
 10082 07ea B0EE470A 		vmov.f32	s0, s14
 10083              	.LVL627:
1858:Veno-Echo.cpp **** }
 10084              		.loc 20 1858 5 is_stmt 1 view .LVU2832
1858:Veno-Echo.cpp **** }
 10085              		.loc 20 1858 5 is_stmt 0 view .LVU2833
 10086              	.LBE1865:
 10087              	.LBE1939:
 10088              	.LBB1940:
 405:Veno-Echo.cpp **** {
 10089              		.loc 20 405 1 view .LVU2834
 10090 07ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10091              	.LBE1940:
 403:Veno-Echo.cpp **** 
 10092              		.loc 20 403 23 view .LVU2835
 10093 07f0 8DED090A 		vstr.32	s0, [sp, #36]
 405:Veno-Echo.cpp **** {
 10094              		.loc 20 405 1 is_stmt 1 view .LVU2836
 10095              	.LBB1941:
 10096 07f4 002B     		cmp	r3, #0
 10097 07f6 7FF41DAF 		bne	.L506
 10098              	.L578:
 10099              	.LBB1868:
 411:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 10100              		.loc 20 411 9 view .LVU2837
 411:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 10101              		.loc 20 411 22 is_stmt 0 view .LVU2838
 10102 07fa 9FEDD39A 		vldr.32	s18, .L587+4
 10103 07fe D34D     		ldr	r5, .L587+8
 10104 0800 27EE890A 		vmul.f32	s0, s15, s18
 412:Veno-Echo.cpp **** 
 10105              		.loc 20 412 22 view .LVU2839
 10106 0804 D24C     		ldr	r4, .L587+12
 411:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 10107              		.loc 20 411 22 view .LVU2840
 10108 0806 2846     		mov	r0, r5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 319


 10109 0808 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10110              	.LVL628:
 412:Veno-Echo.cpp **** 
 10111              		.loc 20 412 9 is_stmt 1 view .LVU2841
 412:Veno-Echo.cpp **** 
 10112              		.loc 20 412 22 is_stmt 0 view .LVU2842
 10113 080c 9DED090A 		vldr.32	s0, [sp, #36]
 10114 0810 2046     		mov	r0, r4
 10115 0812 20EE090A 		vmul.f32	s0, s0, s18
 10116 0816 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10117              	.LVL629:
 415:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10118              		.loc 20 415 9 is_stmt 1 view .LVU2843
 415:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10119              		.loc 20 415 9 is_stmt 0 view .LVU2844
 10120              	.LBE1868:
 10121              	.LBE1941:
 10122              	.LBE1968:
 10123              	.LBE1979:
  23:../DaisySP/Source/Filters/svf.h ****     /** Initializes the filter
  24:../DaisySP/Source/Filters/svf.h ****         float sample_rate - sample rate of the audio engine being run, and the frequency that the P
  25:../DaisySP/Source/Filters/svf.h ****     */
  26:../DaisySP/Source/Filters/svf.h ****     void Init(float sample_rate);
  27:../DaisySP/Source/Filters/svf.h **** 
  28:../DaisySP/Source/Filters/svf.h **** 
  29:../DaisySP/Source/Filters/svf.h ****     /** 
  30:../DaisySP/Source/Filters/svf.h ****         Process the input signal, updating all of the outputs.
  31:../DaisySP/Source/Filters/svf.h ****     */
  32:../DaisySP/Source/Filters/svf.h ****     void Process(float in);
  33:../DaisySP/Source/Filters/svf.h **** 
  34:../DaisySP/Source/Filters/svf.h **** 
  35:../DaisySP/Source/Filters/svf.h ****     /** sets the frequency of the cutoff frequency. 
  36:../DaisySP/Source/Filters/svf.h ****         f must be between 0.0 and sample_rate / 3
  37:../DaisySP/Source/Filters/svf.h ****     */
  38:../DaisySP/Source/Filters/svf.h ****     void SetFreq(float f);
  39:../DaisySP/Source/Filters/svf.h **** 
  40:../DaisySP/Source/Filters/svf.h ****     /** sets the resonance of the filter.
  41:../DaisySP/Source/Filters/svf.h ****         Must be between 0.0 and 1.0 to ensure stability.
  42:../DaisySP/Source/Filters/svf.h ****     */
  43:../DaisySP/Source/Filters/svf.h ****     void SetRes(float r);
  44:../DaisySP/Source/Filters/svf.h **** 
  45:../DaisySP/Source/Filters/svf.h ****     /** sets the drive of the filter 
  46:../DaisySP/Source/Filters/svf.h ****         affects the response of the resonance of the filter
  47:../DaisySP/Source/Filters/svf.h ****     */
  48:../DaisySP/Source/Filters/svf.h ****     void SetDrive(float d);
  49:../DaisySP/Source/Filters/svf.h ****     /** lowpass output
  50:../DaisySP/Source/Filters/svf.h ****         \return low pass output of the filter
  51:../DaisySP/Source/Filters/svf.h ****     */
  52:../DaisySP/Source/Filters/svf.h ****     inline float Low() { return out_low_; }
 10124              		.loc 9 52 26 is_stmt 1 view .LVU2845
 10125              	.LBB1980:
 10126              	.LBB1969:
 10127              	.LBB1942:
 10128              	.LBB1883:
 415:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10129              		.loc 20 415 40 is_stmt 0 view .LVU2846
 10130 081a F2EE046A 		vmov.f32	s13, #1.0e+1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 320


 10131 081e 95ED0C7A 		vldr.32	s14, [r5, #48]
 419:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10132              		.loc 20 419 49 view .LVU2847
 10133 0822 0CAA     		add	r2, sp, #48
 416:Veno-Echo.cpp ****         
 10134              		.loc 20 416 40 view .LVU2848
 10135 0824 D4ED0C7A 		vldr.32	s15, [r4, #48]
 419:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10136              		.loc 20 419 49 view .LVU2849
 10137 0828 08A9     		add	r1, sp, #32
 415:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10138              		.loc 20 415 40 view .LVU2850
 10139 082a 27EE267A 		vmul.f32	s14, s14, s13
 419:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10140              		.loc 20 419 49 view .LVU2851
 10141 082e C948     		ldr	r0, .L587+16
 416:Veno-Echo.cpp ****         
 10142              		.loc 20 416 40 view .LVU2852
 10143 0830 67EEA67A 		vmul.f32	s15, s15, s13
 415:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 10144              		.loc 20 415 47 view .LVU2853
 10145 0834 8DED0C7A 		vstr.32	s14, [sp, #48]
 416:Veno-Echo.cpp ****         
 10146              		.loc 20 416 9 is_stmt 1 view .LVU2854
 10147              	.LVL630:
 416:Veno-Echo.cpp ****         
 10148              		.loc 20 416 9 is_stmt 0 view .LVU2855
 10149              	.LBE1883:
 10150              	.LBE1942:
 10151              	.LBE1969:
 10152              	.LBE1980:
 10153              		.loc 9 52 26 is_stmt 1 view .LVU2856
 10154              	.LBB1981:
 10155              	.LBB1970:
 10156              	.LBB1943:
 10157              	.LBB1884:
 416:Veno-Echo.cpp ****         
 10158              		.loc 20 416 47 is_stmt 0 view .LVU2857
 10159 0838 CDED0D7A 		vstr.32	s15, [sp, #52]
 419:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10160              		.loc 20 419 9 is_stmt 1 view .LVU2858
 419:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10161              		.loc 20 419 49 is_stmt 0 view .LVU2859
 10162 083c FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10163              	.LVL631:
 420:Veno-Echo.cpp **** 
 10164              		.loc 20 420 49 view .LVU2860
 10165 0840 0DAA     		add	r2, sp, #52
 10166 0842 09A9     		add	r1, sp, #36
 10167 0844 C448     		ldr	r0, .L587+20
 419:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 10168              		.loc 20 419 78 view .LVU2861
 10169 0846 8DED0E0A 		vstr.32	s0, [sp, #56]
 420:Veno-Echo.cpp **** 
 10170              		.loc 20 420 9 is_stmt 1 view .LVU2862
 420:Veno-Echo.cpp **** 
 10171              		.loc 20 420 49 is_stmt 0 view .LVU2863
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 321


 10172 084a FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10173              	.LVL632:
 10174              	.LBB1869:
 10175              	.LBB1870:
1851:Veno-Echo.cpp ****         returnval = limit;
 10176              		.loc 20 1851 5 view .LVU2864
 10177 084e F0EE006A 		vmov.f32	s13, #2.0e+0
 10178              	.LBE1870:
 10179              	.LBE1869:
 423:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 10180              		.loc 20 423 36 view .LVU2865
 10181 0852 9DED0E7A 		vldr.32	s14, [sp, #56]
 420:Veno-Echo.cpp **** 
 10182              		.loc 20 420 49 view .LVU2866
 10183 0856 F0EE407A 		vmov.f32	s15, s0
 423:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 10184              		.loc 20 423 9 is_stmt 1 view .LVU2867
 10185              	.LVL633:
 10186              	.LBB1874:
 10187              	.LBI1869:
1848:Veno-Echo.cpp **** {
 10188              		.loc 20 1848 7 view .LVU2868
 10189              	.LBB1871:
1850:Veno-Echo.cpp ****     if (input > limit)
 10190              		.loc 20 1850 5 view .LVU2869
1851:Veno-Echo.cpp ****         returnval = limit;
 10191              		.loc 20 1851 5 view .LVU2870
 10192 085a B4EEE67A 		vcmpe.f32	s14, s13
 10193 085e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10194 0862 00F3A681 		bgt	.L541
1853:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10195              		.loc 20 1853 10 view .LVU2871
 10196 0866 F8EE006A 		vmov.f32	s13, #-2.0e+0
 10197 086a B4EEE67A 		vcmpe.f32	s14, s13
 10198 086e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10199 0872 00F1B581 		bmi	.L542
 10200 0876 27EE090A 		vmul.f32	s0, s14, s18
 10201              	.LVL634:
 10202              	.L507:
1858:Veno-Echo.cpp **** }
 10203              		.loc 20 1858 5 view .LVU2872
1858:Veno-Echo.cpp **** }
 10204              		.loc 20 1858 5 is_stmt 0 view .LVU2873
 10205              	.LBE1871:
 10206              	.LBE1874:
 10207              	.LBB1875:
 10208              	.LBB1876:
1851:Veno-Echo.cpp ****         returnval = limit;
 10209              		.loc 20 1851 5 view .LVU2874
 10210 087a F0EE006A 		vmov.f32	s13, #2.0e+0
 10211              	.LBE1876:
 10212              	.LBE1875:
 423:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 10213              		.loc 20 423 25 view .LVU2875
 10214 087e 8DED0E7A 		vstr.32	s14, [sp, #56]
 424:Veno-Echo.cpp **** 
 10215              		.loc 20 424 9 is_stmt 1 view .LVU2876
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 322


 10216              	.LVL635:
 10217              	.LBB1879:
 10218              	.LBI1875:
1848:Veno-Echo.cpp **** {
 10219              		.loc 20 1848 7 view .LVU2877
 10220              	.LBB1877:
1850:Veno-Echo.cpp ****     if (input > limit)
 10221              		.loc 20 1850 5 view .LVU2878
1851:Veno-Echo.cpp ****         returnval = limit;
 10222              		.loc 20 1851 5 view .LVU2879
 10223 0882 F4EEE67A 		vcmpe.f32	s15, s13
 10224 0886 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10225 088a 00F38F81 		bgt	.L543
1853:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10226              		.loc 20 1853 10 view .LVU2880
 10227 088e B8EE007A 		vmov.f32	s14, #-2.0e+0
1854:Veno-Echo.cpp ****     else
 10228              		.loc 20 1854 19 is_stmt 0 view .LVU2881
 10229 0892 F4EE477A 		vcmp.f32	s15, s14
 10230 0896 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10231 089a 48BF     		it	mi
 10232 089c F0EE477A 		vmovmi.f32	s15, s14
 10233              	.LVL636:
 10234              	.L508:
1858:Veno-Echo.cpp **** }
 10235              		.loc 20 1858 5 is_stmt 1 view .LVU2882
1858:Veno-Echo.cpp **** }
 10236              		.loc 20 1858 5 is_stmt 0 view .LVU2883
 10237              	.LBE1877:
 10238              	.LBE1879:
 427:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10239              		.loc 20 427 22 view .LVU2884
 10240 08a0 AE4D     		ldr	r5, .L587+24
 428:Veno-Echo.cpp **** 
 10241              		.loc 20 428 22 view .LVU2885
 10242 08a2 AF4C     		ldr	r4, .L587+28
 427:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10243              		.loc 20 427 22 view .LVU2886
 10244 08a4 2846     		mov	r0, r5
 424:Veno-Echo.cpp **** 
 10245              		.loc 20 424 25 view .LVU2887
 10246 08a6 CDED0F7A 		vstr.32	s15, [sp, #60]
 427:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10247              		.loc 20 427 9 is_stmt 1 view .LVU2888
 427:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 10248              		.loc 20 427 22 is_stmt 0 view .LVU2889
 10249 08aa FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10250              	.LVL637:
 428:Veno-Echo.cpp **** 
 10251              		.loc 20 428 9 is_stmt 1 view .LVU2890
 428:Veno-Echo.cpp **** 
 10252              		.loc 20 428 22 is_stmt 0 view .LVU2891
 10253 08ae DFEDA67A 		vldr.32	s15, .L587+4
 10254 08b2 9DED0F0A 		vldr.32	s0, [sp, #60]
 10255 08b6 2046     		mov	r0, r4
 10256 08b8 20EE270A 		vmul.f32	s0, s0, s15
 10257 08bc FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 323


 10258              	.LVL638:
 430:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10259              		.loc 20 430 9 is_stmt 1 view .LVU2892
 430:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10260              		.loc 20 430 9 is_stmt 0 view .LVU2893
 10261              	.LBE1884:
 10262              	.LBE1943:
 10263              	.LBE1970:
 10264              	.LBE1981:
  53:../DaisySP/Source/Filters/svf.h ****     /** highpass output
  54:../DaisySP/Source/Filters/svf.h ****         \return high pass output of the filter
  55:../DaisySP/Source/Filters/svf.h ****     */
  56:../DaisySP/Source/Filters/svf.h ****     inline float High() { return out_high_; }
 10265              		.loc 9 56 27 is_stmt 1 view .LVU2894
 10266              	.LBB1982:
 10267              	.LBB1971:
 10268              	.LBB1944:
 10269              	.LBB1885:
 430:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10270              		.loc 20 430 41 is_stmt 0 view .LVU2895
 10271 08c0 F2EE046A 		vmov.f32	s13, #1.0e+1
 10272 08c4 95ED0D7A 		vldr.32	s14, [r5, #52]
 433:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10273              		.loc 20 433 45 view .LVU2896
 10274 08c8 0EA9     		add	r1, sp, #56
 431:Veno-Echo.cpp **** 
 10275              		.loc 20 431 41 view .LVU2897
 10276 08ca D4ED0D7A 		vldr.32	s15, [r4, #52]
 433:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10277              		.loc 20 433 45 view .LVU2898
 10278 08ce 10AA     		add	r2, sp, #64
 430:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10279              		.loc 20 430 41 view .LVU2899
 10280 08d0 27EE267A 		vmul.f32	s14, s14, s13
 433:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10281              		.loc 20 433 45 view .LVU2900
 10282 08d4 A348     		ldr	r0, .L587+32
 431:Veno-Echo.cpp **** 
 10283              		.loc 20 431 41 view .LVU2901
 10284 08d6 67EEA67A 		vmul.f32	s15, s15, s13
 430:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 10285              		.loc 20 430 48 view .LVU2902
 10286 08da 8DED107A 		vstr.32	s14, [sp, #64]
 431:Veno-Echo.cpp **** 
 10287              		.loc 20 431 9 is_stmt 1 view .LVU2903
 10288              	.LVL639:
 431:Veno-Echo.cpp **** 
 10289              		.loc 20 431 9 is_stmt 0 view .LVU2904
 10290              	.LBE1885:
 10291              	.LBE1944:
 10292              	.LBE1971:
 10293              	.LBE1982:
 10294              		.loc 9 56 27 is_stmt 1 view .LVU2905
 10295              	.LBB1983:
 10296              	.LBB1972:
 10297              	.LBB1945:
 10298              	.LBB1886:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 324


 431:Veno-Echo.cpp **** 
 10299              		.loc 20 431 48 is_stmt 0 view .LVU2906
 10300 08de CDED117A 		vstr.32	s15, [sp, #68]
 433:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10301              		.loc 20 433 9 is_stmt 1 view .LVU2907
 433:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10302              		.loc 20 433 45 is_stmt 0 view .LVU2908
 10303 08e2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10304              	.LVL640:
 434:Veno-Echo.cpp **** 
 10305              		.loc 20 434 45 view .LVU2909
 10306 08e6 0FA9     		add	r1, sp, #60
 10307 08e8 11AA     		add	r2, sp, #68
 10308 08ea 9F48     		ldr	r0, .L587+36
 433:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 10309              		.loc 20 433 25 view .LVU2910
 10310 08ec 8DED0E0A 		vstr.32	s0, [sp, #56]
 434:Veno-Echo.cpp **** 
 10311              		.loc 20 434 9 is_stmt 1 view .LVU2911
 434:Veno-Echo.cpp **** 
 10312              		.loc 20 434 45 is_stmt 0 view .LVU2912
 10313 08f0 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10314              	.LVL641:
 438:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10315              		.loc 20 438 44 view .LVU2913
 10316 08f4 0EAA     		add	r2, sp, #56
 10317 08f6 08A9     		add	r1, sp, #32
 10318 08f8 9C48     		ldr	r0, .L587+40
 434:Veno-Echo.cpp **** 
 10319              		.loc 20 434 25 view .LVU2914
 10320 08fa 8DED0F0A 		vstr.32	s0, [sp, #60]
 438:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10321              		.loc 20 438 9 is_stmt 1 view .LVU2915
 438:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10322              		.loc 20 438 44 is_stmt 0 view .LVU2916
 10323 08fe FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10324              	.LVL642:
 439:Veno-Echo.cpp **** 
 10325              		.loc 20 439 44 view .LVU2917
 10326 0902 0FAA     		add	r2, sp, #60
 10327 0904 09A9     		add	r1, sp, #36
 10328 0906 9A48     		ldr	r0, .L587+44
 438:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 10329              		.loc 20 438 23 view .LVU2918
 10330 0908 8DED080A 		vstr.32	s0, [sp, #32]
 439:Veno-Echo.cpp **** 
 10331              		.loc 20 439 9 is_stmt 1 view .LVU2919
 439:Veno-Echo.cpp **** 
 10332              		.loc 20 439 44 is_stmt 0 view .LVU2920
 10333 090c FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10334              	.LVL643:
 10335 0910 DDED087A 		vldr.32	s15, [sp, #32]
 439:Veno-Echo.cpp **** 
 10336              		.loc 20 439 23 view .LVU2921
 10337 0914 8DED090A 		vstr.32	s0, [sp, #36]
 10338              	.LBE1886:
 10339 0918 8CE6     		b	.L506
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 325


 10340              	.LVL644:
 10341              	.L539:
 439:Veno-Echo.cpp **** 
 10342              		.loc 20 439 23 view .LVU2922
 10343              	.LBE1945:
 10344              	.LBB1946:
 10345              	.LBB1859:
1852:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10346              		.loc 20 1852 19 view .LVU2923
 10347 091a F0EE477A 		vmov.f32	s15, s14
 10348              	.LVL645:
1852:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10349              		.loc 20 1852 19 view .LVU2924
 10350 091e 6DE6     		b	.L502
 10351              	.LVL646:
 10352              	.L492:
1852:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10353              		.loc 20 1852 19 view .LVU2925
 10354              	.LBE1859:
 10355              	.LBE1946:
 10356              	.LBB1947:
 10357              	.LBB1851:
 10358              	.LBB1847:
 126:delayline_reverse.h ****         {
 10359              		.loc 19 126 12 view .LVU2926
 10360 0920 944B     		ldr	r3, .L587+48
 126:delayline_reverse.h ****         {
 10361              		.loc 19 126 9 view .LVU2927
 10362 0922 E25C     		ldrb	r2, [r4, r3]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 10363              		.loc 19 126 12 view .LVU2928
 10364 0924 2344     		add	r3, r3, r4
 126:delayline_reverse.h ****         {
 10365              		.loc 19 126 9 view .LVU2929
 10366 0926 002A     		cmp	r2, #0
 10367 0928 3FF439AE 		beq	.L498
 10368              	.L575:
 126:delayline_reverse.h ****         {
 10369              		.loc 19 126 9 view .LVU2930
 10370 092c 924A     		ldr	r2, .L587+52
 10371 092e A018     		adds	r0, r4, r2
 10372 0930 A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 10373              		.loc 19 128 13 view .LVU2931
 10374 0932 002A     		cmp	r2, #0
 10375 0934 3FF419AE 		beq	.L495
 10376              	.L496:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10377              		.loc 19 141 45 view .LVU2932
 10378 0938 DDED017A 		vldr.32	s15, [sp, #4]	@ int
 10379              	.LVL647:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10380              		.loc 19 141 45 view .LVU2933
 10381 093c B7EE006A 		vmov.f32	s12, #1.0e+0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10382              		.loc 19 141 37 view .LVU2934
 10383 0940 0399     		ldr	r1, [sp, #12]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 326


 142:delayline_reverse.h ****                 {
 10384              		.loc 19 142 17 view .LVU2935
 10385 0942 0022     		movs	r2, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10386              		.loc 19 141 45 view .LVU2936
 10387 0944 F8EE676A 		vcvt.f32.u32	s13, s15
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10388              		.loc 19 141 37 view .LVU2937
 10389 0948 D1ED007A 		vldr.32	s15, [r1]
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10390              		.loc 19 141 45 view .LVU2938
 10391 094c 86EE267A 		vdiv.f32	s14, s12, s13
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10392              		.loc 19 141 37 view .LVU2939
 10393 0950 77EEC77A 		vsub.f32	s15, s15, s14
 142:delayline_reverse.h ****                 {
 10394              		.loc 19 142 17 view .LVU2940
 10395 0954 F5EEC07A 		vcmpe.f32	s15, #0
 10396 0958 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10397 095c 00F13A81 		bmi	.L501
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10398              		.loc 19 141 17 view .LVU2941
 10399 0960 C1ED007A 		vstr.32	s15, [r1]
 10400 0964 1BE6     		b	.L498
 10401              	.LVL648:
 10402              	.L482:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10403              		.loc 19 141 17 view .LVU2942
 10404              	.LBE1847:
 10405              	.LBE1851:
 10406              	.LBE1947:
 10407              	.LBB1948:
 10408              	.LBB1824:
 10409              	.LBB1813:
 126:delayline_reverse.h ****         {
 10410              		.loc 19 126 12 view .LVU2943
 10411 0966 834A     		ldr	r2, .L587+48
 126:delayline_reverse.h ****         {
 10412              		.loc 19 126 9 view .LVU2944
 10413 0968 AB5C     		ldrb	r3, [r5, r2]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 10414              		.loc 19 126 12 view .LVU2945
 10415 096a 2A44     		add	r2, r2, r5
 126:delayline_reverse.h ****         {
 10416              		.loc 19 126 9 view .LVU2946
 10417 096c 002B     		cmp	r3, #0
 10418 096e 3FF4ABAD 		beq	.L488
 10419              	.L573:
 126:delayline_reverse.h ****         {
 10420              		.loc 19 126 9 view .LVU2947
 10421 0972 814B     		ldr	r3, .L587+52
 10422 0974 E818     		adds	r0, r5, r3
 10423 0976 EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 10424              		.loc 19 128 13 view .LVU2948
 10425 0978 002B     		cmp	r3, #0
 10426 097a 3FF435AD 		beq	.L485
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 327


 10427              	.L486:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10428              		.loc 19 141 45 view .LVU2949
 10429 097e 07EE90EA 		vmov	s15, lr	@ int
 10430              	.LVL649:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10431              		.loc 19 141 45 view .LVU2950
 10432 0982 F7EE006A 		vmov.f32	s13, #1.0e+0
 142:delayline_reverse.h ****                 {
 10433              		.loc 19 142 17 view .LVU2951
 10434 0986 0023     		movs	r3, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10435              		.loc 19 141 45 view .LVU2952
 10436 0988 B8EE677A 		vcvt.f32.u32	s14, s15
 10437 098c C6EE877A 		vdiv.f32	s15, s13, s14
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10438              		.loc 19 141 37 view .LVU2953
 10439 0990 3BEE67BA 		vsub.f32	s22, s22, s15
 142:delayline_reverse.h ****                 {
 10440              		.loc 19 142 17 view .LVU2954
 10441 0994 B5EEC0BA 		vcmpe.f32	s22, #0
 10442 0998 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10443 099c 40F1C580 		bpl	.L574
 145:delayline_reverse.h ****                     playinghead_ = false;
 10444              		.loc 19 145 21 view .LVU2955
 10445 09a0 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10446              		.loc 19 144 21 view .LVU2956
 10447 09a2 049D     		ldr	r5, [sp, #16]
 10448              	.LVL650:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10449              		.loc 19 144 21 view .LVU2957
 10450 09a4 2B60     		str	r3, [r5]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 10451              		.loc 19 145 21 view .LVU2958
 10452 09a6 1170     		strb	r1, [r2]
 146:delayline_reverse.h ****                 }
 10453              		.loc 19 146 21 view .LVU2959
 10454 09a8 0170     		strb	r1, [r0]
 10455 09aa 8DE5     		b	.L488
 10456              	.LVL651:
 10457              	.L533:
 146:delayline_reverse.h ****                 }
 10458              		.loc 19 146 21 view .LVU2960
 10459              	.LBE1813:
 10460              	.LBE1824:
 10461              	.LBE1948:
 568:Veno-Echo.cpp ****             out[i+1] = mixR;
 10462              		.loc 20 568 13 is_stmt 1 view .LVU2961
 568:Veno-Echo.cpp ****             out[i+1] = mixR;
 10463              		.loc 20 568 20 is_stmt 0 view .LVU2962
 10464 09ac 009B     		ldr	r3, [sp]
 10465 09ae C3ED007A 		vstr.32	s15, [r3]
 569:Veno-Echo.cpp ****         }
 10466              		.loc 20 569 13 is_stmt 1 view .LVU2963
 569:Veno-Echo.cpp ****         }
 10467              		.loc 20 569 22 is_stmt 0 view .LVU2964
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 328


 10468 09b2 83ED010A 		vstr.32	s0, [r3, #4]
 10469 09b6 FFF7EDBB 		b	.L534
 10470              	.LVL652:
 10471              	.L570:
 549:Veno-Echo.cpp ****         {
 10472              		.loc 20 549 14 is_stmt 1 view .LVU2965
 10473 09ba 40F3AC80 		ble	.L571
 551:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10474              		.loc 20 551 13 view .LVU2966
 551:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10475              		.loc 20 551 24 is_stmt 0 view .LVU2967
 10476 09be F7EE006A 		vmov.f32	s13, #1.0e+0
 551:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10477              		.loc 20 551 18 view .LVU2968
 10478 09c2 DBED005A 		vldr.32	s11, [fp]
 552:Veno-Echo.cpp ****         }
 10479              		.loc 20 552 18 view .LVU2969
 10480 09c6 9BED016A 		vldr.32	s12, [fp, #4]
 551:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10481              		.loc 20 551 24 view .LVU2970
 10482 09ca 36EEC77A 		vsub.f32	s14, s13, s14
 551:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10483              		.loc 20 551 33 view .LVU2971
 10484 09ce 37EE077A 		vadd.f32	s14, s14, s14
 551:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * in[i+1]) + delaySignal_R_SUM;
 10485              		.loc 20 551 18 view .LVU2972
 10486 09d2 E7EE257A 		vfma.f32	s15, s14, s11
 10487              	.LVL653:
 552:Veno-Echo.cpp ****         }
 10488              		.loc 20 552 13 is_stmt 1 view .LVU2973
 552:Veno-Echo.cpp ****         }
 10489              		.loc 20 552 18 is_stmt 0 view .LVU2974
 10490 09d6 A7EE060A 		vfma.f32	s0, s14, s12
 10491              	.LVL654:
 552:Veno-Echo.cpp ****         }
 10492              		.loc 20 552 18 view .LVU2975
 10493 09da FFF7D2BB 		b	.L530
 10494              	.LVL655:
 10495              	.L549:
 10496              	.LBB1949:
 503:Veno-Echo.cpp **** {
 10497              		.loc 20 503 1 view .LVU2976
 10498 09de 594B     		ldr	r3, .L587
 10499              	.LBE1949:
 10500              	.LBB1950:
 10501              	.LBB1605:
1852:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10502              		.loc 20 1852 19 view .LVU2977
 10503 09e0 B0EE470A 		vmov.f32	s0, s14
 10504              	.LVL656:
1858:Veno-Echo.cpp **** }
 10505              		.loc 20 1858 5 is_stmt 1 view .LVU2978
1858:Veno-Echo.cpp **** }
 10506              		.loc 20 1858 5 is_stmt 0 view .LVU2979
 10507              	.LBE1605:
 10508              	.LBE1950:
 10509              	.LBB1951:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 329


 503:Veno-Echo.cpp **** {
 10510              		.loc 20 503 1 view .LVU2980
 10511 09e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10512              	.LBE1951:
 501:Veno-Echo.cpp **** 
 10513              		.loc 20 501 27 view .LVU2981
 10514 09e6 8DED0B0A 		vstr.32	s0, [sp, #44]
 503:Veno-Echo.cpp **** {
 10515              		.loc 20 503 1 is_stmt 1 view .LVU2982
 10516              	.LBB1952:
 10517 09ea 002B     		cmp	r3, #0
 10518 09ec 3FF4B0AB 		beq	.L524
 10519              	.L576:
 10520              	.LBB1608:
 509:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 10521              		.loc 20 509 9 view .LVU2983
 509:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 10522              		.loc 20 509 27 is_stmt 0 view .LVU2984
 10523 09f0 9FED558A 		vldr.32	s16, .L587+4
 10524              	.LVL657:
 509:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 10525              		.loc 20 509 27 view .LVU2985
 10526 09f4 614D     		ldr	r5, .L587+56
 10527 09f6 27EE880A 		vmul.f32	s0, s15, s16
 510:Veno-Echo.cpp **** 
 10528              		.loc 20 510 27 view .LVU2986
 10529 09fa 614C     		ldr	r4, .L587+60
 509:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 10530              		.loc 20 509 27 view .LVU2987
 10531 09fc 2846     		mov	r0, r5
 10532 09fe FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10533              	.LVL658:
 510:Veno-Echo.cpp **** 
 10534              		.loc 20 510 9 is_stmt 1 view .LVU2988
 510:Veno-Echo.cpp **** 
 10535              		.loc 20 510 27 is_stmt 0 view .LVU2989
 10536 0a02 9DED0B0A 		vldr.32	s0, [sp, #44]
 10537 0a06 2046     		mov	r0, r4
 10538 0a08 20EE080A 		vmul.f32	s0, s0, s16
 10539 0a0c FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10540              	.LVL659:
 513:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10541              		.loc 20 513 9 is_stmt 1 view .LVU2990
 513:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10542              		.loc 20 513 9 is_stmt 0 view .LVU2991
 10543              	.LBE1608:
 10544              	.LBE1952:
 10545              	.LBE1972:
 10546              	.LBE1983:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 10547              		.loc 9 52 26 is_stmt 1 view .LVU2992
 10548              	.LBB1984:
 10549              	.LBB1973:
 10550              	.LBB1953:
 10551              	.LBB1623:
 513:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10552              		.loc 20 513 50 is_stmt 0 view .LVU2993
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 330


 10553 0a10 F2EE046A 		vmov.f32	s13, #1.0e+1
 10554 0a14 95ED0C7A 		vldr.32	s14, [r5, #48]
 517:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10555              		.loc 20 517 59 view .LVU2994
 10556 0a18 0AA9     		add	r1, sp, #40
 514:Veno-Echo.cpp ****         
 10557              		.loc 20 514 50 view .LVU2995
 10558 0a1a D4ED0C7A 		vldr.32	s15, [r4, #48]
 517:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10559              		.loc 20 517 59 view .LVU2996
 10560 0a1e 0CAA     		add	r2, sp, #48
 513:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10561              		.loc 20 513 50 view .LVU2997
 10562 0a20 27EE267A 		vmul.f32	s14, s14, s13
 517:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10563              		.loc 20 517 59 view .LVU2998
 10564 0a24 5748     		ldr	r0, .L587+64
 514:Veno-Echo.cpp ****         
 10565              		.loc 20 514 50 view .LVU2999
 10566 0a26 67EEA67A 		vmul.f32	s15, s15, s13
 513:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 10567              		.loc 20 513 57 view .LVU3000
 10568 0a2a 8DED0C7A 		vstr.32	s14, [sp, #48]
 514:Veno-Echo.cpp ****         
 10569              		.loc 20 514 9 is_stmt 1 view .LVU3001
 10570              	.LVL660:
 514:Veno-Echo.cpp ****         
 10571              		.loc 20 514 9 is_stmt 0 view .LVU3002
 10572              	.LBE1623:
 10573              	.LBE1953:
 10574              	.LBE1973:
 10575              	.LBE1984:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 10576              		.loc 9 52 26 is_stmt 1 view .LVU3003
 10577              	.LBB1985:
 10578              	.LBB1974:
 10579              	.LBB1954:
 10580              	.LBB1624:
 514:Veno-Echo.cpp ****         
 10581              		.loc 20 514 57 is_stmt 0 view .LVU3004
 10582 0a2e CDED0D7A 		vstr.32	s15, [sp, #52]
 517:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10583              		.loc 20 517 9 is_stmt 1 view .LVU3005
 517:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10584              		.loc 20 517 59 is_stmt 0 view .LVU3006
 10585 0a32 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10586              	.LVL661:
 518:Veno-Echo.cpp **** 
 10587              		.loc 20 518 59 view .LVU3007
 10588 0a36 0BA9     		add	r1, sp, #44
 10589 0a38 0DAA     		add	r2, sp, #52
 10590 0a3a 5348     		ldr	r0, .L587+68
 517:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 10591              		.loc 20 517 97 view .LVU3008
 10592 0a3c 8DED0E0A 		vstr.32	s0, [sp, #56]
 518:Veno-Echo.cpp **** 
 10593              		.loc 20 518 9 is_stmt 1 view .LVU3009
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 331


 518:Veno-Echo.cpp **** 
 10594              		.loc 20 518 59 is_stmt 0 view .LVU3010
 10595 0a40 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10596              	.LVL662:
 10597              	.LBB1609:
 10598              	.LBB1610:
1851:Veno-Echo.cpp ****         returnval = limit;
 10599              		.loc 20 1851 5 view .LVU3011
 10600 0a44 F0EE006A 		vmov.f32	s13, #2.0e+0
 10601              	.LBE1610:
 10602              	.LBE1609:
 521:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 10603              		.loc 20 521 41 view .LVU3012
 10604 0a48 9DED0E7A 		vldr.32	s14, [sp, #56]
 518:Veno-Echo.cpp **** 
 10605              		.loc 20 518 59 view .LVU3013
 10606 0a4c F0EE407A 		vmov.f32	s15, s0
 521:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 10607              		.loc 20 521 9 is_stmt 1 view .LVU3014
 10608              	.LVL663:
 10609              	.LBB1614:
 10610              	.LBI1609:
1848:Veno-Echo.cpp **** {
 10611              		.loc 20 1848 7 view .LVU3015
 10612              	.LBB1611:
1850:Veno-Echo.cpp ****     if (input > limit)
 10613              		.loc 20 1850 5 view .LVU3016
1851:Veno-Echo.cpp ****         returnval = limit;
 10614              		.loc 20 1851 5 view .LVU3017
 10615 0a50 B4EEE67A 		vcmpe.f32	s14, s13
 10616 0a54 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10617 0a58 6EDC     		bgt	.L550
1853:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10618              		.loc 20 1853 10 view .LVU3018
 10619 0a5a F8EE006A 		vmov.f32	s13, #-2.0e+0
 10620 0a5e B4EEE67A 		vcmpe.f32	s14, s13
 10621 0a62 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10622 0a66 00F1C080 		bmi	.L551
 10623 0a6a 27EE080A 		vmul.f32	s0, s14, s16
 10624              	.LVL664:
 10625              	.L525:
1858:Veno-Echo.cpp **** }
 10626              		.loc 20 1858 5 view .LVU3019
1858:Veno-Echo.cpp **** }
 10627              		.loc 20 1858 5 is_stmt 0 view .LVU3020
 10628              	.LBE1611:
 10629              	.LBE1614:
 10630              	.LBB1615:
 10631              	.LBB1616:
1851:Veno-Echo.cpp ****         returnval = limit;
 10632              		.loc 20 1851 5 view .LVU3021
 10633 0a6e F0EE006A 		vmov.f32	s13, #2.0e+0
 10634              	.LBE1616:
 10635              	.LBE1615:
 521:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 10636              		.loc 20 521 30 view .LVU3022
 10637 0a72 8DED0E7A 		vstr.32	s14, [sp, #56]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 332


 522:Veno-Echo.cpp **** 
 10638              		.loc 20 522 9 is_stmt 1 view .LVU3023
 10639              	.LVL665:
 10640              	.LBB1619:
 10641              	.LBI1615:
1848:Veno-Echo.cpp **** {
 10642              		.loc 20 1848 7 view .LVU3024
 10643              	.LBB1617:
1850:Veno-Echo.cpp ****     if (input > limit)
 10644              		.loc 20 1850 5 view .LVU3025
1851:Veno-Echo.cpp ****         returnval = limit;
 10645              		.loc 20 1851 5 view .LVU3026
 10646 0a76 F4EEE67A 		vcmpe.f32	s15, s13
 10647 0a7a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10648 0a7e 58DC     		bgt	.L552
1853:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 10649              		.loc 20 1853 10 view .LVU3027
 10650 0a80 B8EE007A 		vmov.f32	s14, #-2.0e+0
1854:Veno-Echo.cpp ****     else
 10651              		.loc 20 1854 19 is_stmt 0 view .LVU3028
 10652 0a84 F4EE477A 		vcmp.f32	s15, s14
 10653 0a88 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10654 0a8c 48BF     		it	mi
 10655 0a8e F0EE477A 		vmovmi.f32	s15, s14
 10656              	.LVL666:
 10657              	.L526:
1858:Veno-Echo.cpp **** }
 10658              		.loc 20 1858 5 is_stmt 1 view .LVU3029
1858:Veno-Echo.cpp **** }
 10659              		.loc 20 1858 5 is_stmt 0 view .LVU3030
 10660              	.LBE1617:
 10661              	.LBE1619:
 525:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 10662              		.loc 20 525 27 view .LVU3031
 10663 0a92 3E4D     		ldr	r5, .L587+72
 526:Veno-Echo.cpp **** 
 10664              		.loc 20 526 27 view .LVU3032
 10665 0a94 3E4C     		ldr	r4, .L587+76
 525:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 10666              		.loc 20 525 27 view .LVU3033
 10667 0a96 2846     		mov	r0, r5
 522:Veno-Echo.cpp **** 
 10668              		.loc 20 522 30 view .LVU3034
 10669 0a98 CDED0F7A 		vstr.32	s15, [sp, #60]
 525:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 10670              		.loc 20 525 9 is_stmt 1 view .LVU3035
 525:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 10671              		.loc 20 525 27 is_stmt 0 view .LVU3036
 10672 0a9c FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10673              	.LVL667:
 526:Veno-Echo.cpp **** 
 10674              		.loc 20 526 9 is_stmt 1 view .LVU3037
 526:Veno-Echo.cpp **** 
 10675              		.loc 20 526 27 is_stmt 0 view .LVU3038
 10676 0aa0 DFED297A 		vldr.32	s15, .L587+4
 10677 0aa4 9DED0F0A 		vldr.32	s0, [sp, #60]
 10678 0aa8 2046     		mov	r0, r4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 333


 10679 0aaa 20EE270A 		vmul.f32	s0, s0, s15
 10680 0aae FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 10681              	.LVL668:
 528:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 10682              		.loc 20 528 9 is_stmt 1 view .LVU3039
 528:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 10683              		.loc 20 528 9 is_stmt 0 view .LVU3040
 10684              	.LBE1624:
 10685              	.LBE1954:
 10686              	.LBE1974:
 10687              	.LBE1985:
 10688              		.loc 9 56 27 is_stmt 1 view .LVU3041
 10689              	.LBB1986:
 10690              	.LBB1975:
 10691              	.LBB1955:
 10692              	.LBB1625:
 528:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 10693              		.loc 20 528 51 is_stmt 0 view .LVU3042
 10694 0ab2 F2EE046A 		vmov.f32	s13, #1.0e+1
 10695 0ab6 95ED0D7A 		vldr.32	s14, [r5, #52]
 531:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10696              		.loc 20 531 55 view .LVU3043
 10697 0aba 0EA9     		add	r1, sp, #56
 529:Veno-Echo.cpp **** 
 10698              		.loc 20 529 51 view .LVU3044
 10699 0abc D4ED0D7A 		vldr.32	s15, [r4, #52]
 531:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10700              		.loc 20 531 55 view .LVU3045
 10701 0ac0 10AA     		add	r2, sp, #64
 528:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 10702              		.loc 20 528 51 view .LVU3046
 10703 0ac2 27EE267A 		vmul.f32	s14, s14, s13
 531:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10704              		.loc 20 531 55 view .LVU3047
 10705 0ac6 3348     		ldr	r0, .L587+80
 529:Veno-Echo.cpp **** 
 10706              		.loc 20 529 51 view .LVU3048
 10707 0ac8 67EEA67A 		vmul.f32	s15, s15, s13
 528:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 10708              		.loc 20 528 58 view .LVU3049
 10709 0acc 8DED107A 		vstr.32	s14, [sp, #64]
 529:Veno-Echo.cpp **** 
 10710              		.loc 20 529 9 is_stmt 1 view .LVU3050
 10711              	.LVL669:
 529:Veno-Echo.cpp **** 
 10712              		.loc 20 529 9 is_stmt 0 view .LVU3051
 10713              	.LBE1625:
 10714              	.LBE1955:
 10715              	.LBE1975:
 10716              	.LBE1986:
 10717              		.loc 9 56 27 is_stmt 1 view .LVU3052
 10718              	.LBB1987:
 10719              	.LBB1976:
 10720              	.LBB1956:
 10721              	.LBB1626:
 529:Veno-Echo.cpp **** 
 10722              		.loc 20 529 58 is_stmt 0 view .LVU3053
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 334


 10723 0ad0 CDED117A 		vstr.32	s15, [sp, #68]
 531:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10724              		.loc 20 531 9 is_stmt 1 view .LVU3054
 531:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10725              		.loc 20 531 55 is_stmt 0 view .LVU3055
 10726 0ad4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10727              	.LVL670:
 532:Veno-Echo.cpp **** 
 10728              		.loc 20 532 55 view .LVU3056
 10729 0ad8 0FA9     		add	r1, sp, #60
 10730 0ada 11AA     		add	r2, sp, #68
 10731 0adc 2E48     		ldr	r0, .L587+84
 531:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 10732              		.loc 20 531 30 view .LVU3057
 10733 0ade 8DED0E0A 		vstr.32	s0, [sp, #56]
 532:Veno-Echo.cpp **** 
 10734              		.loc 20 532 9 is_stmt 1 view .LVU3058
 532:Veno-Echo.cpp **** 
 10735              		.loc 20 532 55 is_stmt 0 view .LVU3059
 10736 0ae2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10737              	.LVL671:
 535:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 10738              		.loc 20 535 53 view .LVU3060
 10739 0ae6 0EAA     		add	r2, sp, #56
 10740 0ae8 0AA9     		add	r1, sp, #40
 10741 0aea 2C48     		ldr	r0, .L587+88
 532:Veno-Echo.cpp **** 
 10742              		.loc 20 532 30 view .LVU3061
 10743 0aec 8DED0F0A 		vstr.32	s0, [sp, #60]
 535:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 10744              		.loc 20 535 9 is_stmt 1 view .LVU3062
 535:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 10745              		.loc 20 535 53 is_stmt 0 view .LVU3063
 10746 0af0 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10747              	.LVL672:
 536:Veno-Echo.cpp **** 
 10748              		.loc 20 536 53 view .LVU3064
 10749 0af4 0FAA     		add	r2, sp, #60
 10750 0af6 0BA9     		add	r1, sp, #44
 10751 0af8 2948     		ldr	r0, .L587+92
 535:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 10752              		.loc 20 535 27 view .LVU3065
 10753 0afa 8DED0A0A 		vstr.32	s0, [sp, #40]
 536:Veno-Echo.cpp **** 
 10754              		.loc 20 536 9 is_stmt 1 view .LVU3066
 536:Veno-Echo.cpp **** 
 10755              		.loc 20 536 53 is_stmt 0 view .LVU3067
 10756 0afe FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10757              	.LVL673:
 10758 0b02 DDED0A7A 		vldr.32	s15, [sp, #40]
 536:Veno-Echo.cpp **** 
 10759              		.loc 20 536 27 view .LVU3068
 10760 0b06 8DED0B0A 		vstr.32	s0, [sp, #44]
 10761              	.LBE1626:
 10762 0b0a FFF721BB 		b	.L524
 10763              	.LVL674:
 10764              	.L548:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 335


 536:Veno-Echo.cpp **** 
 10765              		.loc 20 536 27 view .LVU3069
 10766              	.LBE1956:
 10767              	.LBB1957:
 10768              	.LBB1599:
1852:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10769              		.loc 20 1852 19 view .LVU3070
 10770 0b0e F0EE477A 		vmov.f32	s15, s14
 10771              	.LVL675:
1852:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10772              		.loc 20 1852 19 view .LVU3071
 10773 0b12 FFF703BB 		b	.L520
 10774              	.LVL676:
 10775              	.L571:
1852:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10776              		.loc 20 1852 19 view .LVU3072
 10777              	.LBE1599:
 10778              	.LBE1957:
 556:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 10779              		.loc 20 556 13 is_stmt 1 view .LVU3073
 556:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 10780              		.loc 20 556 18 is_stmt 0 view .LVU3074
 10781 0b16 DBED006A 		vldr.32	s13, [fp]
 557:Veno-Echo.cpp ****         }
 10782              		.loc 20 557 18 view .LVU3075
 10783 0b1a 9BED017A 		vldr.32	s14, [fp, #4]
 556:Veno-Echo.cpp ****             mixR = in[i+1] + delaySignal_R_SUM;
 10784              		.loc 20 556 18 view .LVU3076
 10785 0b1e 77EEA67A 		vadd.f32	s15, s15, s13
 10786              	.LVL677:
 557:Veno-Echo.cpp ****         }
 10787              		.loc 20 557 13 is_stmt 1 view .LVU3077
 557:Veno-Echo.cpp ****         }
 10788              		.loc 20 557 18 is_stmt 0 view .LVU3078
 10789 0b22 30EE070A 		vadd.f32	s0, s0, s14
 10790              	.LVL678:
 557:Veno-Echo.cpp ****         }
 10791              		.loc 20 557 18 view .LVU3079
 10792 0b26 FFF72CBB 		b	.L530
 10793              	.LVL679:
 10794              	.L574:
 10795              	.LBB1958:
 10796              	.LBB1825:
 10797              	.LBB1814:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10798              		.loc 19 141 17 view .LVU3080
 10799 0b2a 049B     		ldr	r3, [sp, #16]
 10800 0b2c 83ED00BA 		vstr.32	s22, [r3]
 10801 0b30 CAE4     		b	.L488
 10802              	.LVL680:
 10803              	.L552:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10804              		.loc 19 141 17 view .LVU3081
 10805              	.LBE1814:
 10806              	.LBE1825:
 10807              	.LBE1958:
 10808              	.LBB1959:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 336


 10809              	.LBB1627:
 10810              	.LBB1620:
 10811              	.LBB1618:
1852:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10812              		.loc 20 1852 19 view .LVU3082
 10813 0b32 F0EE667A 		vmov.f32	s15, s13
 10814              	.LVL681:
1852:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10815              		.loc 20 1852 19 view .LVU3083
 10816 0b36 ACE7     		b	.L526
 10817              	.LVL682:
 10818              	.L550:
1852:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10819              		.loc 20 1852 19 view .LVU3084
 10820              	.LBE1618:
 10821              	.LBE1620:
 10822              	.LBB1621:
 10823              	.LBB1612:
 10824 0b38 B0EE667A 		vmov.f32	s14, s13
 10825              	.LVL683:
1852:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10826              		.loc 20 1852 19 view .LVU3085
 10827 0b3c 9FED190A 		vldr.32	s0, .L587+96
 10828 0b40 95E7     		b	.L525
 10829              	.L588:
 10830 0b42 00BF     		.align	2
 10831              	.L587:
 10832 0b44 00000000 		.word	.LANCHOR82
 10833 0b48 CDCCCC3D 		.word	1036831949
 10834 0b4c 00000000 		.word	.LANCHOR46
 10835 0b50 00000000 		.word	.LANCHOR47
 10836 0b54 00000000 		.word	.LANCHOR115
 10837 0b58 00000000 		.word	.LANCHOR116
 10838 0b5c 00000000 		.word	.LANCHOR34
 10839 0b60 00000000 		.word	.LANCHOR35
 10840 0b64 00000000 		.word	.LANCHOR113
 10841 0b68 00000000 		.word	.LANCHOR114
 10842 0b6c 00000000 		.word	.LANCHOR121
 10843 0b70 00000000 		.word	.LANCHOR122
 10844 0b74 249F2400 		.word	2400036
 10845 0b78 1C9F2400 		.word	2400028
 10846 0b7c 00000000 		.word	.LANCHOR48
 10847 0b80 00000000 		.word	.LANCHOR49
 10848 0b84 00000000 		.word	.LANCHOR119
 10849 0b88 00000000 		.word	.LANCHOR120
 10850 0b8c 00000000 		.word	.LANCHOR36
 10851 0b90 00000000 		.word	.LANCHOR37
 10852 0b94 00000000 		.word	.LANCHOR117
 10853 0b98 00000000 		.word	.LANCHOR118
 10854 0b9c 00000000 		.word	.LANCHOR123
 10855 0ba0 00000000 		.word	.LANCHOR124
 10856 0ba4 CDCC4C3E 		.word	1045220557
 10857 0ba8 CDCC4CBE 		.word	3192704205
 10858              	.LVL684:
 10859              	.L543:
1852:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10860              		.loc 20 1852 19 view .LVU3086
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 337


 10861              	.LBE1612:
 10862              	.LBE1621:
 10863              	.LBE1627:
 10864              	.LBE1959:
 10865              	.LBB1960:
 10866              	.LBB1887:
 10867              	.LBB1880:
 10868              	.LBB1878:
 10869 0bac F0EE667A 		vmov.f32	s15, s13
 10870              	.LVL685:
1852:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10871              		.loc 20 1852 19 view .LVU3087
 10872 0bb0 76E6     		b	.L508
 10873              	.LVL686:
 10874              	.L541:
1852:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10875              		.loc 20 1852 19 view .LVU3088
 10876              	.LBE1878:
 10877              	.LBE1880:
 10878              	.LBB1881:
 10879              	.LBB1872:
 10880 0bb2 B0EE667A 		vmov.f32	s14, s13
 10881              	.LVL687:
1852:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10882              		.loc 20 1852 19 view .LVU3089
 10883 0bb6 1FED050A 		vldr.32	s0, .L587+96
 10884 0bba 5EE6     		b	.L507
 10885              	.LVL688:
 10886              	.L484:
1852:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10887              		.loc 20 1852 19 view .LVU3090
 10888              	.LBE1872:
 10889              	.LBE1881:
 10890              	.LBE1887:
 10891              	.LBE1960:
 10892              	.LBB1961:
 10893              	.LBB1826:
 10894              	.LBB1815:
 116:delayline_reverse.h ****                 }
 10895              		.loc 19 116 21 view .LVU3091
 10896 0bbc AB60     		str	r3, [r5, #8]
 10897 0bbe DEE6     		b	.L486
 10898              	.LVL689:
 10899              	.L494:
 116:delayline_reverse.h ****                 }
 10900              		.loc 19 116 21 view .LVU3092
 10901              	.LBE1815:
 10902              	.LBE1826:
 10903              	.LBE1961:
 10904              	.LBB1962:
 10905              	.LBB1852:
 10906              	.LBB1848:
 10907 0bc0 A260     		str	r2, [r4, #8]
 10908 0bc2 B9E6     		b	.L496
 10909              	.LVL690:
 10910              	.L463:
 116:delayline_reverse.h ****                 }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 338


 10911              		.loc 19 116 21 view .LVU3093
 10912              	.LBE1848:
 10913              	.LBE1852:
 10914              	.LBE1962:
 10915              	.LBE1976:
 10916              	.LBE1987:
 577:Veno-Echo.cpp **** 
 10917              		.loc 20 577 1 view .LVU3094
 10918 0bc4 13B0     		add	sp, sp, #76
 10919              		.cfi_remember_state
 10920              		.cfi_def_cfa_offset 92
 10921              		@ sp needed
 10922 0bc6 BDEC0E8B 		vldm	sp!, {d8-d14}
 10923              		.cfi_restore 92
 10924              		.cfi_restore 93
 10925              		.cfi_restore 90
 10926              		.cfi_restore 91
 10927              		.cfi_restore 88
 10928              		.cfi_restore 89
 10929              		.cfi_restore 86
 10930              		.cfi_restore 87
 10931              		.cfi_restore 84
 10932              		.cfi_restore 85
 10933              		.cfi_restore 82
 10934              		.cfi_restore 83
 10935              		.cfi_restore 80
 10936              		.cfi_restore 81
 10937              		.cfi_def_cfa_offset 36
 10938 0bca BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 10939              	.LVL691:
 10940              	.L577:
 10941              		.cfi_restore_state
 10942              	.LBB1988:
 10943              	.LBB1977:
 10944              	.LBB1963:
 10945              	.LBB1853:
 10946              	.LBB1849:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10947              		.loc 19 130 17 view .LVU3095
 10948 0bce C2ED007A 		vstr.32	s15, [r2]
 10949 0bd2 E4E4     		b	.L498
 10950              	.L501:
 145:delayline_reverse.h ****                     playinghead_ = false;
 10951              		.loc 19 145 21 view .LVU3096
 10952 0bd4 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10953              		.loc 19 144 21 view .LVU3097
 10954 0bd6 039C     		ldr	r4, [sp, #12]
 10955              	.LVL692:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10956              		.loc 19 144 21 view .LVU3098
 10957 0bd8 2260     		str	r2, [r4]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 10958              		.loc 19 145 21 view .LVU3099
 10959 0bda 1970     		strb	r1, [r3]
 146:delayline_reverse.h ****                 }
 10960              		.loc 19 146 21 view .LVU3100
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 339


 10961 0bdc 0170     		strb	r1, [r0]
 10962 0bde DEE4     		b	.L498
 10963              	.LVL693:
 10964              	.L542:
 146:delayline_reverse.h ****                 }
 10965              		.loc 19 146 21 view .LVU3101
 10966              	.LBE1849:
 10967              	.LBE1853:
 10968              	.LBE1963:
 10969              	.LBB1964:
 10970              	.LBB1888:
 10971              	.LBB1882:
 10972              	.LBB1873:
1854:Veno-Echo.cpp ****     else
 10973              		.loc 20 1854 19 view .LVU3102
 10974 0be0 B0EE667A 		vmov.f32	s14, s13
 10975              	.LVL694:
1854:Veno-Echo.cpp ****     else
 10976              		.loc 20 1854 19 view .LVU3103
 10977 0be4 1FED100A 		vldr.32	s0, .L587+100
 10978 0be8 47E6     		b	.L507
 10979              	.LVL695:
 10980              	.L551:
1854:Veno-Echo.cpp ****     else
 10981              		.loc 20 1854 19 view .LVU3104
 10982              	.LBE1873:
 10983              	.LBE1882:
 10984              	.LBE1888:
 10985              	.LBE1964:
 10986              	.LBB1965:
 10987              	.LBB1628:
 10988              	.LBB1622:
 10989              	.LBB1613:
 10990 0bea B0EE667A 		vmov.f32	s14, s13
 10991              	.LVL696:
1854:Veno-Echo.cpp ****     else
 10992              		.loc 20 1854 19 view .LVU3105
 10993 0bee 1FED120A 		vldr.32	s0, .L587+100
 10994 0bf2 3CE7     		b	.L525
 10995              	.LVL697:
 10996              	.L465:
1854:Veno-Echo.cpp ****     else
 10997              		.loc 20 1854 19 view .LVU3106
 10998              	.LBE1613:
 10999              	.LBE1622:
 11000              	.LBE1628:
 11001              	.LBE1965:
 11002              	.LBE1977:
 11003              	.LBE1988:
 342:Veno-Echo.cpp ****                 Update_filterXfade();
 11004              		.loc 20 342 13 is_stmt 1 view .LVU3107
 343:Veno-Echo.cpp ****             break;
 11005              		.loc 20 343 17 view .LVU3108
 343:Veno-Echo.cpp ****             break;
 11006              		.loc 20 343 35 is_stmt 0 view .LVU3109
 11007 0bf4 FFF7FEFF 		bl	_Z18Update_filterXfadev
 11008              	.LVL698:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 340


 344:Veno-Echo.cpp ****         }
 11009              		.loc 20 344 13 is_stmt 1 view .LVU3110
 11010 0bf8 FFF739BA 		b	.L464
 11011              	.L468:
 334:Veno-Echo.cpp ****                 Update_width();
 11012              		.loc 20 334 13 view .LVU3111
 335:Veno-Echo.cpp ****             break;
 11013              		.loc 20 335 17 view .LVU3112
 335:Veno-Echo.cpp ****             break;
 11014              		.loc 20 335 29 is_stmt 0 view .LVU3113
 11015 0bfc FFF7FEFF 		bl	_Z12Update_widthv
 11016              	.LVL699:
 336:Veno-Echo.cpp **** 
 11017              		.loc 20 336 13 is_stmt 1 view .LVU3114
 11018 0c00 FFF735BA 		b	.L464
 11019              	.L469:
 330:Veno-Echo.cpp ****                 Update_width_CV();
 11020              		.loc 20 330 13 view .LVU3115
 331:Veno-Echo.cpp ****             break;
 11021              		.loc 20 331 17 view .LVU3116
 11022              	.LBB1989:
 11023              	.LBI1989:
1268:Veno-Echo.cpp **** {
 11024              		.loc 20 1268 6 view .LVU3117
 11025              	.LBB1990:
1270:Veno-Echo.cpp **** }
 11026              		.loc 20 1270 5 view .LVU3118
1270:Veno-Echo.cpp **** }
 11027              		.loc 20 1270 30 is_stmt 0 view .LVU3119
 11028 0c04 0521     		movs	r1, #5
 11029 0c06 2848     		ldr	r0, .L589
 11030 0c08 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11031              	.LVL700:
1270:Veno-Echo.cpp **** }
 11032              		.loc 20 1270 13 view .LVU3120
 11033 0c0c 274B     		ldr	r3, .L589+4
 11034 0c0e 83ED000A 		vstr.32	s0, [r3]
1271:Veno-Echo.cpp **** 
 11035              		.loc 20 1271 1 view .LVU3121
 11036 0c12 FFF72CBA 		b	.L464
 11037              	.L470:
 11038              	.LBE1990:
 11039              	.LBE1989:
 326:Veno-Echo.cpp ****                 Update_drywet();
 11040              		.loc 20 326 13 is_stmt 1 view .LVU3122
 327:Veno-Echo.cpp ****             break;
 11041              		.loc 20 327 17 view .LVU3123
 327:Veno-Echo.cpp ****             break;
 11042              		.loc 20 327 30 is_stmt 0 view .LVU3124
 11043 0c16 FFF7FEFF 		bl	_Z13Update_drywetv
 11044              	.LVL701:
 328:Veno-Echo.cpp **** 
 11045              		.loc 20 328 13 is_stmt 1 view .LVU3125
 11046 0c1a FFF728BA 		b	.L464
 11047              	.L471:
 322:Veno-Echo.cpp ****                 Update_drywet_CV();
 11048              		.loc 20 322 13 view .LVU3126
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 341


 323:Veno-Echo.cpp ****             break;
 11049              		.loc 20 323 17 view .LVU3127
 11050              	.LBB1991:
 11051              	.LBI1991:
1154:Veno-Echo.cpp **** {
 11052              		.loc 20 1154 6 view .LVU3128
 11053              	.LBB1992:
1156:Veno-Echo.cpp **** }
 11054              		.loc 20 1156 5 view .LVU3129
1156:Veno-Echo.cpp **** }
 11055              		.loc 20 1156 32 is_stmt 0 view .LVU3130
 11056 0c1e 0421     		movs	r1, #4
 11057 0c20 2148     		ldr	r0, .L589
 11058 0c22 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11059              	.LVL702:
1156:Veno-Echo.cpp **** }
 11060              		.loc 20 1156 15 view .LVU3131
 11061 0c26 224B     		ldr	r3, .L589+8
 11062 0c28 83ED000A 		vstr.32	s0, [r3]
1157:Veno-Echo.cpp **** 
 11063              		.loc 20 1157 1 view .LVU3132
 11064 0c2c FFF71FBA 		b	.L464
 11065              	.L472:
 11066              	.LBE1992:
 11067              	.LBE1991:
 318:Veno-Echo.cpp ****                 Update_feedbackR();
 11068              		.loc 20 318 13 is_stmt 1 view .LVU3133
 319:Veno-Echo.cpp ****             break;
 11069              		.loc 20 319 17 view .LVU3134
 319:Veno-Echo.cpp ****             break;
 11070              		.loc 20 319 33 is_stmt 0 view .LVU3135
 11071 0c30 FFF7FEFF 		bl	_Z16Update_feedbackRv
 11072              	.LVL703:
 320:Veno-Echo.cpp **** 
 11073              		.loc 20 320 13 is_stmt 1 view .LVU3136
 11074 0c34 FFF71BBA 		b	.L464
 11075              	.L473:
 314:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 11076              		.loc 20 314 13 view .LVU3137
 315:Veno-Echo.cpp ****             break;
 11077              		.loc 20 315 17 view .LVU3138
 11078              	.LBB1993:
 11079              	.LBI1993:
1064:Veno-Echo.cpp **** {
 11080              		.loc 20 1064 6 view .LVU3139
 11081              	.LBB1994:
1066:Veno-Echo.cpp **** }
 11082              		.loc 20 1066 5 view .LVU3140
1066:Veno-Echo.cpp **** }
 11083              		.loc 20 1066 35 is_stmt 0 view .LVU3141
 11084 0c38 0321     		movs	r1, #3
 11085 0c3a 1B48     		ldr	r0, .L589
 11086 0c3c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11087              	.LVL704:
1066:Veno-Echo.cpp **** }
 11088              		.loc 20 1066 18 view .LVU3142
 11089 0c40 1C4B     		ldr	r3, .L589+12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 342


 11090 0c42 83ED000A 		vstr.32	s0, [r3]
1067:Veno-Echo.cpp **** 
 11091              		.loc 20 1067 1 view .LVU3143
 11092 0c46 FFF712BA 		b	.L464
 11093              	.L474:
 11094              	.LBE1994:
 11095              	.LBE1993:
 310:Veno-Echo.cpp ****                 Update_feedbackL();
 11096              		.loc 20 310 13 is_stmt 1 view .LVU3144
 311:Veno-Echo.cpp ****             break;
 11097              		.loc 20 311 17 view .LVU3145
 311:Veno-Echo.cpp ****             break;
 11098              		.loc 20 311 33 is_stmt 0 view .LVU3146
 11099 0c4a FFF7FEFF 		bl	_Z16Update_feedbackLv
 11100              	.LVL705:
 312:Veno-Echo.cpp **** 
 11101              		.loc 20 312 13 is_stmt 1 view .LVU3147
 11102 0c4e FFF70EBA 		b	.L464
 11103              	.L475:
 306:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 11104              		.loc 20 306 13 view .LVU3148
 307:Veno-Echo.cpp ****             break;
 11105              		.loc 20 307 17 view .LVU3149
 11106              	.LBB1995:
 11107              	.LBI1995:
 976:Veno-Echo.cpp **** {
 11108              		.loc 20 976 6 view .LVU3150
 11109              	.LBB1996:
 978:Veno-Echo.cpp **** }
 11110              		.loc 20 978 5 view .LVU3151
 978:Veno-Echo.cpp **** }
 11111              		.loc 20 978 35 is_stmt 0 view .LVU3152
 11112 0c52 0221     		movs	r1, #2
 11113 0c54 1448     		ldr	r0, .L589
 11114 0c56 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11115              	.LVL706:
 978:Veno-Echo.cpp **** }
 11116              		.loc 20 978 18 view .LVU3153
 11117 0c5a 174B     		ldr	r3, .L589+16
 11118 0c5c 83ED000A 		vstr.32	s0, [r3]
 979:Veno-Echo.cpp **** void Update_feedbackL()
 11119              		.loc 20 979 1 view .LVU3154
 11120 0c60 FFF705BA 		b	.L464
 11121              	.L476:
 11122              	.LBE1996:
 11123              	.LBE1995:
 302:Veno-Echo.cpp ****                 Update_DelayTimeR();
 11124              		.loc 20 302 13 is_stmt 1 view .LVU3155
 303:Veno-Echo.cpp ****             break;
 11125              		.loc 20 303 17 view .LVU3156
 303:Veno-Echo.cpp ****             break;
 11126              		.loc 20 303 34 is_stmt 0 view .LVU3157
 11127 0c64 FFF7FEFF 		bl	_Z17Update_DelayTimeRv
 11128              	.LVL707:
 304:Veno-Echo.cpp **** 
 11129              		.loc 20 304 13 is_stmt 1 view .LVU3158
 11130 0c68 FFF701BA 		b	.L464
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 343


 11131              	.L477:
 298:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 11132              		.loc 20 298 13 view .LVU3159
 299:Veno-Echo.cpp ****             break;
 11133              		.loc 20 299 17 view .LVU3160
 11134              	.LBB1997:
 11135              	.LBI1997:
 878:Veno-Echo.cpp **** {
 11136              		.loc 20 878 6 view .LVU3161
 11137              	.LBB1998:
 880:Veno-Echo.cpp **** }
 11138              		.loc 20 880 5 view .LVU3162
 880:Veno-Echo.cpp **** }
 11139              		.loc 20 880 36 is_stmt 0 view .LVU3163
 11140 0c6c 0121     		movs	r1, #1
 11141 0c6e 0E48     		ldr	r0, .L589
 11142 0c70 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11143              	.LVL708:
 880:Veno-Echo.cpp **** }
 11144              		.loc 20 880 19 view .LVU3164
 11145 0c74 114B     		ldr	r3, .L589+20
 11146 0c76 83ED000A 		vstr.32	s0, [r3]
 881:Veno-Echo.cpp **** 
 11147              		.loc 20 881 1 view .LVU3165
 11148 0c7a FFF7F8B9 		b	.L464
 11149              	.L478:
 11150              	.LBE1998:
 11151              	.LBE1997:
 294:Veno-Echo.cpp ****                 Update_DelayTimeL();
 11152              		.loc 20 294 13 is_stmt 1 view .LVU3166
 295:Veno-Echo.cpp ****             break;
 11153              		.loc 20 295 17 view .LVU3167
 295:Veno-Echo.cpp ****             break;
 11154              		.loc 20 295 34 is_stmt 0 view .LVU3168
 11155 0c7e FFF7FEFF 		bl	_Z17Update_DelayTimeLv
 11156              	.LVL709:
 296:Veno-Echo.cpp **** 
 11157              		.loc 20 296 13 is_stmt 1 view .LVU3169
 11158 0c82 FFF7F4B9 		b	.L464
 11159              	.L479:
 290:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 11160              		.loc 20 290 13 view .LVU3170
 291:Veno-Echo.cpp ****             break;
 11161              		.loc 20 291 17 view .LVU3171
 11162              	.LBB1999:
 11163              	.LBI1999:
 780:Veno-Echo.cpp **** {
 11164              		.loc 20 780 6 view .LVU3172
 11165              	.LBB2000:
 782:Veno-Echo.cpp **** }
 11166              		.loc 20 782 5 view .LVU3173
 782:Veno-Echo.cpp **** }
 11167              		.loc 20 782 36 is_stmt 0 view .LVU3174
 11168 0c86 0021     		movs	r1, #0
 11169 0c88 0748     		ldr	r0, .L589
 11170 0c8a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11171              	.LVL710:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 344


 782:Veno-Echo.cpp **** }
 11172              		.loc 20 782 19 view .LVU3175
 11173 0c8e 0C4B     		ldr	r3, .L589+24
 11174 0c90 83ED000A 		vstr.32	s0, [r3]
 783:Veno-Echo.cpp **** 
 11175              		.loc 20 783 1 view .LVU3176
 11176 0c94 FFF7EBB9 		b	.L464
 11177              	.L480:
 11178              	.LBE2000:
 11179              	.LBE1999:
 284:Veno-Echo.cpp ****                 Update_Buttons();
 11180              		.loc 20 284 13 is_stmt 1 view .LVU3177
 285:Veno-Echo.cpp ****                 GetModCV();
 11181              		.loc 20 285 17 view .LVU3178
 285:Veno-Echo.cpp ****                 GetModCV();
 11182              		.loc 20 285 31 is_stmt 0 view .LVU3179
 11183 0c98 FFF7FEFF 		bl	_Z14Update_Buttonsv
 11184              	.LVL711:
 286:Veno-Echo.cpp ****                 Update_DelayTempoLEDs();
 11185              		.loc 20 286 17 is_stmt 1 view .LVU3180
 286:Veno-Echo.cpp ****                 Update_DelayTempoLEDs();
 11186              		.loc 20 286 25 is_stmt 0 view .LVU3181
 11187 0c9c FFF7FEFF 		bl	_Z8GetModCVv
 11188              	.LVL712:
 287:Veno-Echo.cpp ****             break;
 11189              		.loc 20 287 17 is_stmt 1 view .LVU3182
 287:Veno-Echo.cpp ****             break;
 11190              		.loc 20 287 38 is_stmt 0 view .LVU3183
 11191 0ca0 FFF7FEFF 		bl	_Z21Update_DelayTempoLEDsv
 11192              	.LVL713:
 288:Veno-Echo.cpp **** 
 11193              		.loc 20 288 13 is_stmt 1 view .LVU3184
 11194 0ca4 FFF7E3B9 		b	.L464
 11195              	.L590:
 11196              		.align	2
 11197              	.L589:
 11198 0ca8 18000000 		.word	.LANCHOR4+24
 11199 0cac 00000000 		.word	.LANCHOR58
 11200 0cb0 00000000 		.word	.LANCHOR50
 11201 0cb4 00000000 		.word	.LANCHOR38
 11202 0cb8 00000000 		.word	.LANCHOR26
 11203 0cbc 00000000 		.word	.LANCHOR17
 11204 0cc0 00000000 		.word	.LANCHOR5
 11205              		.cfi_endproc
 11206              	.LFE4308:
 11208              		.section	.text._Z9HardLimitff,"ax",%progbits
 11209              		.align	1
 11210              		.p2align 2,,3
 11211              		.global	_Z9HardLimitff
 11212              		.syntax unified
 11213              		.thumb
 11214              		.thumb_func
 11215              		.fpu fpv5-d16
 11217              	_Z9HardLimitff:
 11218              	.LVL714:
 11219              	.LFB4334:
1849:Veno-Echo.cpp ****     float returnval{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 345


 11220              		.loc 20 1849 1 view -0
 11221              		.cfi_startproc
 11222              		@ args = 0, pretend = 0, frame = 0
 11223              		@ frame_needed = 0, uses_anonymous_args = 0
 11224              		@ link register save eliminated.
1850:Veno-Echo.cpp ****     if (input > limit)
 11225              		.loc 20 1850 5 view .LVU3186
1851:Veno-Echo.cpp ****         returnval = limit;
 11226              		.loc 20 1851 5 view .LVU3187
 11227 0000 B4EEE00A 		vcmpe.f32	s0, s1
 11228 0004 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11229 0008 07DC     		bgt	.L592
1853:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11230              		.loc 20 1853 10 view .LVU3188
1853:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11231              		.loc 20 1853 28 is_stmt 0 view .LVU3189
 11232 000a F1EE600A 		vneg.f32	s1, s1
 11233              	.LVL715:
1853:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11234              		.loc 20 1853 10 view .LVU3190
 11235 000e F4EEC00A 		vcmpe.f32	s1, s0
 11236 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1856:Veno-Echo.cpp **** 
 11237              		.loc 20 1856 19 view .LVU3191
 11238 0016 70FE800A 		vselgt.f32	s1, s1, s0
 11239              	.L592:
 11240              	.LVL716:
1858:Veno-Echo.cpp **** }
 11241              		.loc 20 1858 5 is_stmt 1 view .LVU3192
1859:Veno-Echo.cpp **** 
 11242              		.loc 20 1859 1 is_stmt 0 view .LVU3193
 11243 001a B0EE600A 		vmov.f32	s0, s1
 11244              	.LVL717:
1859:Veno-Echo.cpp **** 
 11245              		.loc 20 1859 1 view .LVU3194
 11246 001e 7047     		bx	lr
 11247              		.cfi_endproc
 11248              	.LFE4334:
 11250              		.section	.text._Z10PotCVComboff,"ax",%progbits
 11251              		.align	1
 11252              		.p2align 2,,3
 11253              		.global	_Z10PotCVComboff
 11254              		.syntax unified
 11255              		.thumb
 11256              		.thumb_func
 11257              		.fpu fpv5-d16
 11259              	_Z10PotCVComboff:
 11260              	.LVL718:
 11261              	.LFB4335:
1862:Veno-Echo.cpp ****     float output{};
 11262              		.loc 20 1862 1 is_stmt 1 view -0
 11263              		.cfi_startproc
 11264              		@ args = 0, pretend = 0, frame = 0
 11265              		@ frame_needed = 0, uses_anonymous_args = 0
 11266              		@ link register save eliminated.
1863:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 11267              		.loc 20 1863 5 view .LVU3196
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 346


1864:Veno-Echo.cpp **** 
 11268              		.loc 20 1864 5 view .LVU3197
1864:Veno-Echo.cpp **** 
 11269              		.loc 20 1864 39 is_stmt 0 view .LVU3198
 11270 0000 F7EE007A 		vmov.f32	s15, #1.0e+0
1864:Veno-Echo.cpp **** 
 11271              		.loc 20 1864 49 view .LVU3199
 11272 0004 F6EE006A 		vmov.f32	s13, #5.0e-1
1864:Veno-Echo.cpp **** 
 11273              		.loc 20 1864 12 view .LVU3200
 11274 0008 B0EE007A 		vmov.f32	s14, #2.0e+0
1864:Veno-Echo.cpp **** 
 11275              		.loc 20 1864 39 view .LVU3201
 11276 000c 77EEE00A 		vsub.f32	s1, s15, s1
 11277              	.LVL719:
1864:Veno-Echo.cpp **** 
 11278              		.loc 20 1864 49 view .LVU3202
 11279 0010 70EEE60A 		vsub.f32	s1, s1, s13
1864:Veno-Echo.cpp **** 
 11280              		.loc 20 1864 12 view .LVU3203
 11281 0014 A0EE870A 		vfma.f32	s0, s1, s14
 11282              	.LVL720:
1866:Veno-Echo.cpp ****     {
 11283              		.loc 20 1866 5 is_stmt 1 view .LVU3204
 11284 0018 B5EEC00A 		vcmpe.f32	s0, #0
 11285 001c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11286 0020 06D4     		bmi	.L598
1871:Veno-Echo.cpp ****     {
 11287              		.loc 20 1871 5 view .LVU3205
1873:Veno-Echo.cpp ****     }
 11288              		.loc 20 1873 16 is_stmt 0 view .LVU3206
 11289 0022 B4EE670A 		vcmp.f32	s0, s15
 11290 0026 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11291 002a 37FE800A 		vselgt.f32	s0, s15, s0
 11292              	.LVL721:
1873:Veno-Echo.cpp ****     }
 11293              		.loc 20 1873 16 view .LVU3207
 11294 002e 7047     		bx	lr
 11295              	.LVL722:
 11296              	.L598:
1868:Veno-Echo.cpp ****     }
 11297              		.loc 20 1868 16 view .LVU3208
 11298 0030 9FED010A 		vldr.32	s0, .L600
 11299              	.LVL723:
1876:Veno-Echo.cpp **** }
 11300              		.loc 20 1876 5 is_stmt 1 view .LVU3209
1877:Veno-Echo.cpp **** 
 11301              		.loc 20 1877 1 is_stmt 0 view .LVU3210
 11302 0034 7047     		bx	lr
 11303              	.L601:
 11304 0036 00BF     		.align	2
 11305              	.L600:
 11306 0038 00000000 		.word	0
 11307              		.cfi_endproc
 11308              	.LFE4335:
 11310              		.section	.text._Z16checkPickupStateffbb,"ax",%progbits
 11311              		.align	1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 347


 11312              		.p2align 2,,3
 11313              		.global	_Z16checkPickupStateffbb
 11314              		.syntax unified
 11315              		.thumb
 11316              		.thumb_func
 11317              		.fpu fpv5-d16
 11319              	_Z16checkPickupStateffbb:
 11320              	.LVL724:
 11321              	.LFB4336:
1881:Veno-Echo.cpp ****     bool retval{};
 11322              		.loc 20 1881 1 is_stmt 1 view -0
 11323              		.cfi_startproc
 11324              		@ args = 0, pretend = 0, frame = 0
 11325              		@ frame_needed = 0, uses_anonymous_args = 0
 11326              		@ link register save eliminated.
1882:Veno-Echo.cpp ****     
 11327              		.loc 20 1882 5 view .LVU3212
1884:Veno-Echo.cpp ****     {
 11328              		.loc 20 1884 5 view .LVU3213
 11329 0000 69B1     		cbz	r1, .L603
1886:Veno-Echo.cpp ****         {
 11330              		.loc 20 1886 9 view .LVU3214
 11331              	.LVL725:
 11332              	.LBB2001:
 11333              	.LBI2001:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 11334              		.loc 21 75 3 view .LVU3215
 11335              	.LBB2002:
 11336              		.loc 21 76 5 view .LVU3216
 11337              		.loc 21 76 5 is_stmt 0 view .LVU3217
 11338              	.LBE2002:
 11339              	.LBE2001:
1886:Veno-Echo.cpp ****         {
 11340              		.loc 20 1886 15 view .LVU3218
 11341 0002 70EE600A 		vsub.f32	s1, s0, s1
 11342              	.LVL726:
1886:Veno-Echo.cpp ****         {
 11343              		.loc 20 1886 9 view .LVU3219
 11344 0006 DFED0D7A 		vldr.32	s15, .L606
 11345              	.LBB2004:
 11346              	.LBB2003:
 11347              		.loc 21 76 31 view .LVU3220
 11348 000a B0EEE00A 		vabs.f32	s0, s1
 11349              	.LVL727:
 11350              		.loc 21 76 31 view .LVU3221
 11351              	.LBE2003:
 11352              	.LBE2004:
1886:Veno-Echo.cpp ****         {
 11353              		.loc 20 1886 9 view .LVU3222
 11354 000e B4EEE70A 		vcmpe.f32	s0, s15
 11355 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11356 0016 D4BF     		ite	le
 11357 0018 0120     		movle	r0, #1
 11358              	.LVL728:
1886:Veno-Echo.cpp ****         {
 11359              		.loc 20 1886 9 view .LVU3223
 11360 001a 0020     		movgt	r0, #0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 348


 11361 001c 7047     		bx	lr
 11362              	.LVL729:
 11363              	.L603:
1898:Veno-Echo.cpp ****     {
 11364              		.loc 20 1898 5 is_stmt 1 view .LVU3224
 11365 001e 60B9     		cbnz	r0, .L604
1900:Veno-Echo.cpp ****         {
 11366              		.loc 20 1900 9 view .LVU3225
 11367              	.LVL730:
 11368              	.LBB2005:
 11369              	.LBI2005:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 11370              		.loc 21 75 3 view .LVU3226
 11371              	.LBB2006:
 11372              		.loc 21 76 5 view .LVU3227
 11373              		.loc 21 76 5 is_stmt 0 view .LVU3228
 11374              	.LBE2006:
 11375              	.LBE2005:
1900:Veno-Echo.cpp ****         {
 11376              		.loc 20 1900 15 view .LVU3229
 11377 0020 30EE600A 		vsub.f32	s0, s0, s1
 11378              	.LVL731:
1900:Veno-Echo.cpp ****         {
 11379              		.loc 20 1900 9 view .LVU3230
 11380 0024 DFED057A 		vldr.32	s15, .L606
 11381              	.LBB2008:
 11382              	.LBB2007:
 11383              		.loc 21 76 31 view .LVU3231
 11384 0028 B0EEC00A 		vabs.f32	s0, s0
 11385              	.LBE2007:
 11386              	.LBE2008:
1900:Veno-Echo.cpp ****         {
 11387              		.loc 20 1900 9 view .LVU3232
 11388 002c B4EEE70A 		vcmpe.f32	s0, s15
 11389 0030 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11390 0034 CCBF     		ite	gt
 11391 0036 0120     		movgt	r0, #1
 11392              	.LVL732:
1900:Veno-Echo.cpp ****         {
 11393              		.loc 20 1900 9 view .LVU3233
 11394 0038 0020     		movle	r0, #0
 11395              	.L604:
 11396              	.LVL733:
1917:Veno-Echo.cpp **** 
 11397              		.loc 20 1917 5 is_stmt 1 view .LVU3234
1919:Veno-Echo.cpp **** 
 11398              		.loc 20 1919 1 is_stmt 0 view .LVU3235
 11399 003a 7047     		bx	lr
 11400              	.L607:
 11401              		.align	2
 11402              	.L606:
 11403 003c 0AD7A33B 		.word	1000593162
 11404              		.cfi_endproc
 11405              	.LFE4336:
 11407              		.section	.text._Z20checkPickupState_altff11pickupStateb,"ax",%progbits
 11408              		.align	1
 11409              		.p2align 2,,3
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 349


 11410              		.global	_Z20checkPickupState_altff11pickupStateb
 11411              		.syntax unified
 11412              		.thumb
 11413              		.thumb_func
 11414              		.fpu fpv5-d16
 11416              	_Z20checkPickupState_altff11pickupStateb:
 11417              	.LVL734:
 11418              	.LFB4337:
1923:Veno-Echo.cpp ****     pickupState retval{};
 11419              		.loc 20 1923 1 is_stmt 1 view -0
 11420              		.cfi_startproc
 11421              		@ args = 0, pretend = 0, frame = 0
 11422              		@ frame_needed = 0, uses_anonymous_args = 0
 11423              		@ link register save eliminated.
1924:Veno-Echo.cpp **** 
 11424              		.loc 20 1924 5 view .LVU3237
1926:Veno-Echo.cpp ****     {
 11425              		.loc 20 1926 5 view .LVU3238
 11426 0000 A1B1     		cbz	r1, .L609
1928:Veno-Echo.cpp ****         {
 11427              		.loc 20 1928 9 view .LVU3239
1928:Veno-Echo.cpp ****         {
 11428              		.loc 20 1928 31 is_stmt 0 view .LVU3240
 11429 0002 DFED1A7A 		vldr.32	s15, .L626
 11430 0006 30EEE77A 		vsub.f32	s14, s1, s15
1928:Veno-Echo.cpp ****         {
 11431              		.loc 20 1928 9 view .LVU3241
 11432 000a B4EEC07A 		vcmpe.f32	s14, s0
 11433 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11434 0012 01DD     		ble	.L624
 11435 0014 0020     		movs	r0, #0
 11436              	.LVL735:
1928:Veno-Echo.cpp ****         {
 11437              		.loc 20 1928 9 view .LVU3242
 11438 0016 7047     		bx	lr
 11439              	.LVL736:
 11440              	.L624:
1933:Veno-Echo.cpp ****         {
 11441              		.loc 20 1933 14 is_stmt 1 view .LVU3243
1933:Veno-Echo.cpp ****         {
 11442              		.loc 20 1933 36 is_stmt 0 view .LVU3244
 11443 0018 70EEA70A 		vadd.f32	s1, s1, s15
 11444              	.LVL737:
1933:Veno-Echo.cpp ****         {
 11445              		.loc 20 1933 14 view .LVU3245
 11446 001c F4EEC00A 		vcmpe.f32	s1, s0
 11447 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1940:Veno-Echo.cpp ****         }
 11448              		.loc 20 1940 20 view .LVU3246
 11449 0024 4CBF     		ite	mi
 11450 0026 0120     		movmi	r0, #1
 11451              	.LVL738:
1940:Veno-Echo.cpp ****         }
 11452              		.loc 20 1940 20 view .LVU3247
 11453 0028 0220     		movpl	r0, #2
 11454 002a 7047     		bx	lr
 11455              	.LVL739:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 350


 11456              	.L609:
1946:Veno-Echo.cpp ****         {
 11457              		.loc 20 1946 9 is_stmt 1 view .LVU3248
 11458 002c 0128     		cmp	r0, #1
 11459 002e 04D0     		beq	.L612
 11460 0030 0228     		cmp	r0, #2
 11461 0032 01D0     		beq	.L610
 11462 0034 68B1     		cbz	r0, .L625
 11463 0036 0846     		mov	r0, r1
 11464              	.LVL740:
 11465              	.L610:
1967:Veno-Echo.cpp **** }
 11466              		.loc 20 1967 5 view .LVU3249
1968:Veno-Echo.cpp **** 
 11467              		.loc 20 1968 1 is_stmt 0 view .LVU3250
 11468 0038 7047     		bx	lr
 11469              	.LVL741:
 11470              	.L612:
1955:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
 11471              		.loc 20 1955 13 is_stmt 1 view .LVU3251
1956:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11472              		.loc 20 1956 13 view .LVU3252
1956:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11473              		.loc 20 1956 35 is_stmt 0 view .LVU3253
 11474 003a DFED0C7A 		vldr.32	s15, .L626
 11475 003e 70EEA70A 		vadd.f32	s1, s1, s15
 11476              	.LVL742:
1956:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11477              		.loc 20 1956 13 view .LVU3254
 11478 0042 F4EEC00A 		vcmpe.f32	s1, s0
 11479 0046 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11480 004a CCBF     		ite	gt
 11481 004c 0220     		movgt	r0, #2
 11482              	.LVL743:
1956:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11483              		.loc 20 1956 13 view .LVU3255
 11484 004e 0120     		movle	r0, #1
 11485 0050 7047     		bx	lr
 11486              	.LVL744:
 11487              	.L625:
1948:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
 11488              		.loc 20 1948 13 is_stmt 1 view .LVU3256
1949:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11489              		.loc 20 1949 13 view .LVU3257
1949:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11490              		.loc 20 1949 35 is_stmt 0 view .LVU3258
 11491 0052 DFED067A 		vldr.32	s15, .L626
 11492 0056 70EEE70A 		vsub.f32	s1, s1, s15
 11493              	.LVL745:
1949:Veno-Echo.cpp ****                 retval = PICKEDUP;
 11494              		.loc 20 1949 13 view .LVU3259
 11495 005a F4EEC00A 		vcmpe.f32	s1, s0
 11496 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11497 0062 4CBF     		ite	mi
 11498 0064 0220     		movmi	r0, #2
 11499              	.LVL746:
1949:Veno-Echo.cpp ****                 retval = PICKEDUP;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 351


 11500              		.loc 20 1949 13 view .LVU3260
 11501 0066 0020     		movpl	r0, #0
 11502 0068 7047     		bx	lr
 11503              	.L627:
 11504 006a 00BF     		.align	2
 11505              	.L626:
 11506 006c 0AD7A33B 		.word	1000593162
 11507              		.cfi_endproc
 11508              	.LFE4337:
 11510              		.section	.text._Z11GetTapRatio9TapRatios,"ax",%progbits
 11511              		.align	1
 11512              		.p2align 2,,3
 11513              		.global	_Z11GetTapRatio9TapRatios
 11514              		.syntax unified
 11515              		.thumb
 11516              		.thumb_func
 11517              		.fpu fpv5-d16
 11519              	_Z11GetTapRatio9TapRatios:
 11520              	.LVL747:
 11521              	.LFB4338:
1971:Veno-Echo.cpp **** float retVal{};
 11522              		.loc 20 1971 1 is_stmt 1 view -0
 11523              		.cfi_startproc
 11524              		@ args = 0, pretend = 0, frame = 0
 11525              		@ frame_needed = 0, uses_anonymous_args = 0
 11526              		@ link register save eliminated.
1972:Veno-Echo.cpp ****     switch(ratio)
 11527              		.loc 20 1972 1 view .LVU3262
1973:Veno-Echo.cpp ****     {
 11528              		.loc 20 1973 5 view .LVU3263
 11529 0000 0138     		subs	r0, r0, #1
 11530              	.LVL748:
1973:Veno-Echo.cpp ****     {
 11531              		.loc 20 1973 5 is_stmt 0 view .LVU3264
 11532 0002 C0B2     		uxtb	r0, r0
 11533 0004 0228     		cmp	r0, #2
 11534 0006 05D8     		bhi	.L630
 11535 0008 044B     		ldr	r3, .L631
 11536 000a 03EB8000 		add	r0, r3, r0, lsl #2
 11537 000e 90ED000A 		vldr.32	s0, [r0]
 11538 0012 7047     		bx	lr
 11539              	.L630:
1971:Veno-Echo.cpp **** float retVal{};
 11540              		.loc 20 1971 1 view .LVU3265
 11541 0014 B7EE000A 		vmov.f32	s0, #1.0e+0
 11542              	.LVL749:
 11543              		.loc 20 1996 1 is_stmt 1 view .LVU3266
1997:Veno-Echo.cpp **** }
 11544              		.loc 20 1997 1 is_stmt 0 view .LVU3267
 11545 0018 7047     		bx	lr
 11546              	.L632:
 11547 001a 00BF     		.align	2
 11548              	.L631:
 11549 001c 00000000 		.word	.LANCHOR25
 11550              		.cfi_endproc
 11551              	.LFE4338:
 11553              		.section	.text.startup._GLOBAL__sub_I_delMemsL,"ax",%progbits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 352


 11554              		.align	1
 11555              		.p2align 2,,3
 11556              		.syntax unified
 11557              		.thumb
 11558              		.thumb_func
 11559              		.fpu fpv5-d16
 11561              	_GLOBAL__sub_I_delMemsL:
 11562              	.LFB4917:
 11563              		.loc 20 1997 1 is_stmt 1 view -0
 11564              		.cfi_startproc
 11565              		@ args = 0, pretend = 0, frame = 0
 11566              		@ frame_needed = 0, uses_anonymous_args = 0
 11567              	.LBB2165:
 11568              	.LBI2165:
 11569              		.loc 20 1997 1 view .LVU3269
 11570              	.LVL750:
 11571              	.LBB2166:
 11572              	.LBB2167:
 11573              	.LBI2167:
  21:../libdaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 11574              		.loc 2 21 5 view .LVU3270
 11575              	.LBB2168:
 11576              	.LBB2169:
 11577              	.LBI2169:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 11578              		.loc 6 36 5 view .LVU3271
 11579              	.LBE2169:
 11580              	.LBE2168:
 11581              	.LBE2167:
 11582              	.LBE2166:
 11583              	.LBE2165:
 11584              		.loc 20 1997 1 is_stmt 0 view .LVU3272
 11585 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 11586              		.cfi_def_cfa_offset 24
 11587              		.cfi_offset 4, -24
 11588              		.cfi_offset 5, -20
 11589              		.cfi_offset 6, -16
 11590              		.cfi_offset 7, -12
 11591              		.cfi_offset 8, -8
 11592              		.cfi_offset 14, -4
 11593              	.LBB2288:
 11594              	.LBB2284:
 11595              	.LBB2184:
 11596              	.LBB2182:
 11597              	.LBB2174:
 11598              	.LBB2170:
 11599              	.LBB2171:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 11600              		.loc 6 36 35 view .LVU3273
 11601 0004 9648     		ldr	r0, .L635
 11602 0006 0026     		movs	r6, #0
 11603              	.LBE2171:
 11604              	.LBE2170:
 11605              	.LBE2174:
 11606              	.LBE2182:
 11607              	.LBE2184:
 11608              		.file 26 "Veno-Echo.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 353


   1:Veno-Echo.h   **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.h   **** // 
   3:Veno-Echo.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.h   **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.h   **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.h   **** // 
  10:Veno-Echo.h   **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.h   **** // all copies or substantial portions of the Software.
  12:Veno-Echo.h   **** // 
  13:Veno-Echo.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.h   **** // THE SOFTWARE.
  20:Veno-Echo.h   **** // 
  21:Veno-Echo.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.h   **** 
  23:Veno-Echo.h   **** #ifndef VENO_ECHO_H
  24:Veno-Echo.h   **** #define VENO_ECHO_H
  25:Veno-Echo.h   **** 
  26:Veno-Echo.h   **** //defines for HW pins:
  27:Veno-Echo.h   **** 
  28:Veno-Echo.h   **** 
  29:Veno-Echo.h   **** 
  30:Veno-Echo.h   **** #include "daisy_seed.h"
  31:Veno-Echo.h   **** using namespace daisy;
  32:Veno-Echo.h   **** 
  33:Veno-Echo.h   **** static DaisySeed hw;
 11609              		.loc 26 33 18 view .LVU3274
 11610 0008 964C     		ldr	r4, .L635+4
  40:Veno-Echo.cpp **** static Svf LPF_R;
 11611              		.loc 20 40 12 view .LVU3275
 11612 000a 974D     		ldr	r5, .L635+8
 11613              		.loc 26 33 18 view .LVU3276
 11614 000c 2246     		mov	r2, r4
 11615 000e 9749     		ldr	r1, .L635+12
 11616              	.LBB2185:
 11617              	.LBB2183:
 11618              	.LBB2175:
 11619              	.LBB2173:
 11620              	.LBB2172:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 11621              		.loc 6 36 35 view .LVU3277
 11622 0010 4661     		str	r6, [r0, #20]
 11623              	.LVL751:
  36:../libdaisy/src/hid/audio.h ****     ~AudioHandle() {}
 11624              		.loc 6 36 35 view .LVU3278
 11625              	.LBE2172:
 11626              	.LBE2173:
 11627              	.LBE2175:
 11628              	.LBB2176:
 11629              	.LBI2176:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 354


  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 11630              		.loc 5 84 5 is_stmt 1 view .LVU3279
  84:../libdaisy/src/per/adc.h ****     ~AdcHandle() {}
 11631              		.loc 5 84 5 is_stmt 0 view .LVU3280
 11632              	.LBE2176:
 11633              	.LBB2177:
 11634              	.LBI2177:
 11635              		.file 27 "../libdaisy/src/per/dac.h"
   1:../libdaisy/src/per/dac.h **** #pragma once
   2:../libdaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../libdaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../libdaisy/src/per/dac.h **** 
   5:../libdaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../libdaisy/src/per/dac.h **** 
   7:../libdaisy/src/per/dac.h **** namespace daisy
   8:../libdaisy/src/per/dac.h **** {
   9:../libdaisy/src/per/dac.h **** /** DAC handle for Built-in DAC Peripheral 
  10:../libdaisy/src/per/dac.h ****  ** 
  11:../libdaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  12:../libdaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  13:../libdaisy/src/per/dac.h ****  **
  14:../libdaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal periphearls is also not supported.
  15:../libdaisy/src/per/dac.h ****  **
  16:../libdaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  17:../libdaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  18:../libdaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  19:../libdaisy/src/per/dac.h ****  ***/
  20:../libdaisy/src/per/dac.h **** class DacHandle
  21:../libdaisy/src/per/dac.h **** {
  22:../libdaisy/src/per/dac.h ****   public:
  23:../libdaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  24:../libdaisy/src/per/dac.h ****     enum class Result
  25:../libdaisy/src/per/dac.h ****     {
  26:../libdaisy/src/per/dac.h ****         OK,
  27:../libdaisy/src/per/dac.h ****         ERR,
  28:../libdaisy/src/per/dac.h ****     };
  29:../libdaisy/src/per/dac.h **** 
  30:../libdaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  31:../libdaisy/src/per/dac.h ****     enum class Channel
  32:../libdaisy/src/per/dac.h ****     {
  33:../libdaisy/src/per/dac.h ****         ONE,
  34:../libdaisy/src/per/dac.h ****         TWO,
  35:../libdaisy/src/per/dac.h ****         BOTH,
  36:../libdaisy/src/per/dac.h ****     };
  37:../libdaisy/src/per/dac.h **** 
  38:../libdaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  39:../libdaisy/src/per/dac.h ****      **
  40:../libdaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  41:../libdaisy/src/per/dac.h ****      **
  42:../libdaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  43:../libdaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  44:../libdaisy/src/per/dac.h ****      ***/
  45:../libdaisy/src/per/dac.h ****     enum class Mode
  46:../libdaisy/src/per/dac.h ****     {
  47:../libdaisy/src/per/dac.h ****         POLLING,
  48:../libdaisy/src/per/dac.h ****         DMA,
  49:../libdaisy/src/per/dac.h ****     };
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 355


  50:../libdaisy/src/per/dac.h **** 
  51:../libdaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  52:../libdaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  53:../libdaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  54:../libdaisy/src/per/dac.h ****      ***/
  55:../libdaisy/src/per/dac.h ****     enum class BitDepth
  56:../libdaisy/src/per/dac.h ****     {
  57:../libdaisy/src/per/dac.h ****         BITS_8,
  58:../libdaisy/src/per/dac.h ****         BITS_12
  59:../libdaisy/src/per/dac.h ****     };
  60:../libdaisy/src/per/dac.h **** 
  61:../libdaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  62:../libdaisy/src/per/dac.h ****     enum class BufferState
  63:../libdaisy/src/per/dac.h ****     {
  64:../libdaisy/src/per/dac.h ****         ENABLED,
  65:../libdaisy/src/per/dac.h ****         DISABLED,
  66:../libdaisy/src/per/dac.h ****     };
  67:../libdaisy/src/per/dac.h **** 
  68:../libdaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  69:../libdaisy/src/per/dac.h ****     struct Config
  70:../libdaisy/src/per/dac.h ****     {
  71:../libdaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  72:../libdaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  73:../libdaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  74:../libdaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  75:../libdaisy/src/per/dac.h ****         uint32_t target_samplerate;
  76:../libdaisy/src/per/dac.h **** 
  77:../libdaisy/src/per/dac.h ****         Channel     chn;
  78:../libdaisy/src/per/dac.h ****         Mode        mode;
  79:../libdaisy/src/per/dac.h ****         BitDepth    bitdepth;
  80:../libdaisy/src/per/dac.h ****         BufferState buff_state;
  81:../libdaisy/src/per/dac.h ****     };
  82:../libdaisy/src/per/dac.h **** 
  83:../libdaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 11636              		.loc 27 83 5 is_stmt 1 view .LVU3281
 11637              	.LBB2178:
 11638              	.LBB2179:
 11639              		.loc 27 83 33 is_stmt 0 view .LVU3282
 11640 0012 0662     		str	r6, [r0, #32]
 11641              	.LVL752:
 11642              		.loc 27 83 33 view .LVU3283
 11643              	.LBE2179:
 11644              	.LBE2178:
 11645              	.LBE2177:
 11646              	.LBB2180:
 11647              	.LBI2180:
  40:../libdaisy/src/hid/usb.h **** 
 11648              		.loc 4 40 5 is_stmt 1 view .LVU3284
  40:../libdaisy/src/hid/usb.h **** 
 11649              		.loc 4 40 5 is_stmt 0 view .LVU3285
 11650              	.LBE2180:
 11651              	.LBB2181:
 11652              	.LBI2181:
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 11653              		.loc 3 56 5 is_stmt 1 view .LVU3286
  56:../libdaisy/src/sys/system.h ****     ~System() {}
 11654              		.loc 3 56 5 is_stmt 0 view .LVU3287
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 356


 11655              	.LBE2181:
 11656              	.LBE2183:
 11657              	.LBE2185:
 11658              		.loc 26 33 18 view .LVU3288
 11659 0014 FFF7FEFF 		bl	__aeabi_atexit
 11660              	.LVL753:
 11661              	.LBB2186:
 11662              	.LBI2186:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11663              		.loc 9 21 5 is_stmt 1 view .LVU3289
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11664              		.loc 9 21 5 is_stmt 0 view .LVU3290
 11665              	.LBE2186:
  40:Veno-Echo.cpp **** static Svf LPF_R;
 11666              		.loc 20 40 12 view .LVU3291
 11667 0018 2246     		mov	r2, r4
 11668 001a 2946     		mov	r1, r5
 11669 001c 9448     		ldr	r0, .L635+16
 11670 001e FFF7FEFF 		bl	__aeabi_atexit
 11671              	.LVL754:
 11672              	.LBB2187:
 11673              	.LBI2187:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11674              		.loc 9 21 5 is_stmt 1 view .LVU3292
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11675              		.loc 9 21 5 is_stmt 0 view .LVU3293
 11676              	.LBE2187:
  41:Veno-Echo.cpp **** static Svf HPF_L;
 11677              		.loc 20 41 12 view .LVU3294
 11678 0022 2246     		mov	r2, r4
 11679 0024 2946     		mov	r1, r5
 11680 0026 9348     		ldr	r0, .L635+20
 11681 0028 FFF7FEFF 		bl	__aeabi_atexit
 11682              	.LVL755:
 11683              	.LBB2188:
 11684              	.LBI2188:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11685              		.loc 9 21 5 is_stmt 1 view .LVU3295
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11686              		.loc 9 21 5 is_stmt 0 view .LVU3296
 11687              	.LBE2188:
  42:Veno-Echo.cpp **** static Svf HPF_R;
 11688              		.loc 20 42 12 view .LVU3297
 11689 002c 2246     		mov	r2, r4
 11690 002e 2946     		mov	r1, r5
 11691 0030 9148     		ldr	r0, .L635+24
 11692 0032 FFF7FEFF 		bl	__aeabi_atexit
 11693              	.LVL756:
 11694              	.LBB2189:
 11695              	.LBI2189:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11696              		.loc 9 21 5 is_stmt 1 view .LVU3298
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11697              		.loc 9 21 5 is_stmt 0 view .LVU3299
 11698              	.LBE2189:
  43:Veno-Echo.cpp **** 
 11699              		.loc 20 43 12 view .LVU3300
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 357


 11700 0036 2246     		mov	r2, r4
 11701 0038 2946     		mov	r1, r5
 11702 003a 9048     		ldr	r0, .L635+28
 11703 003c FFF7FEFF 		bl	__aeabi_atexit
 11704              	.LVL757:
 11705              	.LBB2190:
 11706              	.LBI2190:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11707              		.loc 9 21 5 is_stmt 1 view .LVU3301
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11708              		.loc 9 21 5 is_stmt 0 view .LVU3302
 11709              	.LBE2190:
  45:Veno-Echo.cpp **** static Svf LPF_R_post;
 11710              		.loc 20 45 12 view .LVU3303
 11711 0040 2246     		mov	r2, r4
 11712 0042 2946     		mov	r1, r5
 11713 0044 8E48     		ldr	r0, .L635+32
 11714 0046 FFF7FEFF 		bl	__aeabi_atexit
 11715              	.LVL758:
 11716              	.LBB2191:
 11717              	.LBI2191:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11718              		.loc 9 21 5 is_stmt 1 view .LVU3304
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11719              		.loc 9 21 5 is_stmt 0 view .LVU3305
 11720              	.LBE2191:
  46:Veno-Echo.cpp **** static Svf HPF_L_post;
 11721              		.loc 20 46 12 view .LVU3306
 11722 004a 2246     		mov	r2, r4
 11723 004c 2946     		mov	r1, r5
 11724 004e 8D48     		ldr	r0, .L635+36
 11725 0050 FFF7FEFF 		bl	__aeabi_atexit
 11726              	.LVL759:
 11727              	.LBB2192:
 11728              	.LBI2192:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11729              		.loc 9 21 5 is_stmt 1 view .LVU3307
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11730              		.loc 9 21 5 is_stmt 0 view .LVU3308
 11731              	.LBE2192:
  47:Veno-Echo.cpp **** static Svf HPF_R_post;
 11732              		.loc 20 47 12 view .LVU3309
 11733 0054 2246     		mov	r2, r4
 11734 0056 2946     		mov	r1, r5
 11735 0058 8B48     		ldr	r0, .L635+40
 11736 005a FFF7FEFF 		bl	__aeabi_atexit
 11737              	.LVL760:
 11738              	.LBB2193:
 11739              	.LBI2193:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11740              		.loc 9 21 5 is_stmt 1 view .LVU3310
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 11741              		.loc 9 21 5 is_stmt 0 view .LVU3311
 11742              	.LBE2193:
  48:Veno-Echo.cpp **** 
 11743              		.loc 20 48 12 view .LVU3312
 11744 005e 2246     		mov	r2, r4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 358


 11745 0060 2946     		mov	r1, r5
 11746 0062 8A48     		ldr	r0, .L635+44
 11747 0064 FFF7FEFF 		bl	__aeabi_atexit
 11748              	.LVL761:
 11749              	.LBB2194:
 11750              	.LBI2194:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 11751              		.loc 8 15 5 is_stmt 1 view .LVU3313
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 11752              		.loc 8 15 5 is_stmt 0 view .LVU3314
 11753              	.LBE2194:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 11754              		.loc 20 50 19 view .LVU3315
 11755 0068 2246     		mov	r2, r4
 11756 006a 8949     		ldr	r1, .L635+48
 11757              	.LBB2195:
 11758              	.LBB2196:
 11759              	.LBB2197:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11760              		.loc 12 45 13 view .LVU3316
 11761 006c 0025     		movs	r5, #0
 11762              	.LBE2197:
 11763              	.LBE2196:
 11764              	.LBE2195:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 11765              		.loc 20 50 19 view .LVU3317
 11766 006e 8948     		ldr	r0, .L635+52
 11767 0070 FFF7FEFF 		bl	__aeabi_atexit
 11768              	.LVL762:
 11769              	.LBB2202:
 11770              	.LBI2195:
  43:envFollow.h   ****     {
 11771              		.loc 12 43 5 is_stmt 1 view .LVU3318
 11772              	.LBB2200:
 11773              	.LBB2198:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11774              		.loc 12 45 9 view .LVU3319
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 11775              		.loc 12 48 11 is_stmt 0 view .LVU3320
 11776 0074 884F     		ldr	r7, .L635+56
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11777              		.loc 12 45 13 view .LVU3321
 11778 0076 8948     		ldr	r0, .L635+60
 11779              	.LBE2198:
 11780              	.LBE2200:
 11781              	.LBE2202:
  51:Veno-Echo.cpp **** 
 11782              		.loc 20 51 18 view .LVU3322
 11783 0078 2246     		mov	r2, r4
 11784 007a 8949     		ldr	r1, .L635+64
 11785              	.LBB2203:
 11786              	.LBB2201:
 11787              	.LBB2199:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11788              		.loc 12 45 13 view .LVU3323
 11789 007c 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 359


 11790              		.loc 12 46 9 is_stmt 1 view .LVU3324
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 11791              		.loc 12 46 20 is_stmt 0 view .LVU3325
 11792 007e 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 11793              		.loc 12 47 9 is_stmt 1 view .LVU3326
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 11794              		.loc 12 47 17 is_stmt 0 view .LVU3327
 11795 0080 C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 11796              		.loc 12 48 9 is_stmt 1 view .LVU3328
  50:envFollow.h   ****     }  
 11797              		.loc 12 50 21 is_stmt 0 view .LVU3329
 11798 0082 8560     		str	r5, [r0, #8]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 11799              		.loc 12 48 11 view .LVU3330
 11800 0084 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 11801              		.loc 12 49 9 is_stmt 1 view .LVU3331
  49:envFollow.h   ****         sample_noDC = 0.0f;
 11802              		.loc 12 49 15 is_stmt 0 view .LVU3332
 11803 0086 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 11804              		.loc 12 50 9 is_stmt 1 view .LVU3333
 11805              	.LVL763:
  50:envFollow.h   ****     }  
 11806              		.loc 12 50 9 is_stmt 0 view .LVU3334
 11807              	.LBE2199:
 11808              	.LBE2201:
 11809              	.LBE2203:
  51:Veno-Echo.cpp **** 
 11810              		.loc 20 51 18 view .LVU3335
 11811 0088 FFF7FEFF 		bl	__aeabi_atexit
 11812              	.LVL764:
 11813              	.LBB2204:
 11814              	.LBI2204:
  43:envFollow.h   ****     {
 11815              		.loc 12 43 5 is_stmt 1 view .LVU3336
 11816              	.LBB2205:
 11817              	.LBB2206:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11818              		.loc 12 45 9 view .LVU3337
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11819              		.loc 12 45 13 is_stmt 0 view .LVU3338
 11820 008c 8548     		ldr	r0, .L635+68
 11821              	.LBE2206:
 11822              	.LBE2205:
 11823              	.LBE2204:
  53:Veno-Echo.cpp **** 
 11824              		.loc 20 53 16 view .LVU3339
 11825 008e DFF8DC82 		ldr	r8, .L635+268
  51:Veno-Echo.cpp **** 
 11826              		.loc 20 51 27 view .LVU3340
 11827 0092 2246     		mov	r2, r4
 11828 0094 8249     		ldr	r1, .L635+64
 11829              	.LBB2209:
 11830              	.LBB2208:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 360


 11831              	.LBB2207:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 11832              		.loc 12 45 13 view .LVU3341
 11833 0096 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 11834              		.loc 12 46 9 is_stmt 1 view .LVU3342
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 11835              		.loc 12 46 20 is_stmt 0 view .LVU3343
 11836 0098 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 11837              		.loc 12 47 9 is_stmt 1 view .LVU3344
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 11838              		.loc 12 47 17 is_stmt 0 view .LVU3345
 11839 009a C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 11840              		.loc 12 48 9 is_stmt 1 view .LVU3346
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 11841              		.loc 12 48 11 is_stmt 0 view .LVU3347
 11842 009c 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 11843              		.loc 12 49 9 is_stmt 1 view .LVU3348
  49:envFollow.h   ****         sample_noDC = 0.0f;
 11844              		.loc 12 49 15 is_stmt 0 view .LVU3349
 11845 009e 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 11846              		.loc 12 50 9 is_stmt 1 view .LVU3350
  50:envFollow.h   ****     }  
 11847              		.loc 12 50 21 is_stmt 0 view .LVU3351
 11848 00a0 8560     		str	r5, [r0, #8]	@ float
 11849              	.LVL765:
  50:envFollow.h   ****     }  
 11850              		.loc 12 50 21 view .LVU3352
 11851              	.LBE2207:
 11852              	.LBE2208:
 11853              	.LBE2209:
  51:Veno-Echo.cpp **** 
 11854              		.loc 20 51 27 view .LVU3353
 11855 00a2 FFF7FEFF 		bl	__aeabi_atexit
 11856              	.LVL766:
 11857              	.LBB2210:
 11858              	.LBI2210:
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 11859              		.loc 11 14 5 is_stmt 1 view .LVU3354
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 11860              		.loc 11 14 5 is_stmt 0 view .LVU3355
 11861              	.LBE2210:
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 11862              		.loc 20 56 76 view .LVU3356
 11863 00a6 804F     		ldr	r7, .L635+72
  53:Veno-Echo.cpp **** 
 11864              		.loc 20 53 16 view .LVU3357
 11865 00a8 2246     		mov	r2, r4
 11866 00aa 4146     		mov	r1, r8
 11867 00ac 7F48     		ldr	r0, .L635+76
 11868 00ae FFF7FEFF 		bl	__aeabi_atexit
 11869              	.LVL767:
 11870              	.LBB2211:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 361


 11871              	.LBI2211:
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 11872              		.loc 11 14 5 is_stmt 1 view .LVU3358
  14:../DaisySP/Source/Utility/dcblock.h ****     ~DcBlock(){};
 11873              		.loc 11 14 5 is_stmt 0 view .LVU3359
 11874              	.LBE2211:
  53:Veno-Echo.cpp **** 
 11875              		.loc 20 53 29 view .LVU3360
 11876 00b2 2246     		mov	r2, r4
 11877 00b4 4146     		mov	r1, r8
 11878 00b6 7E48     		ldr	r0, .L635+80
 11879 00b8 FFF7FEFF 		bl	__aeabi_atexit
 11880              	.LVL768:
 11881              	.LBB2212:
 11882              	.LBI2212:
  48:delayline_multitap.h ****     {
 11883              		.loc 18 48 5 is_stmt 1 view .LVU3361
  48:delayline_multitap.h ****     {
 11884              		.loc 18 48 5 is_stmt 0 view .LVU3362
 11885              	.LBE2212:
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 11886              		.loc 20 59 80 view .LVU3363
 11887 00bc 7D4D     		ldr	r5, .L635+84
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 11888              		.loc 20 56 76 view .LVU3364
 11889 00be 2246     		mov	r2, r4
 11890 00c0 3946     		mov	r1, r7
 11891 00c2 7D48     		ldr	r0, .L635+88
 11892 00c4 FFF7FEFF 		bl	__aeabi_atexit
 11893              	.LVL769:
 11894              	.LBB2213:
 11895              	.LBI2213:
  48:delayline_multitap.h ****     {
 11896              		.loc 18 48 5 is_stmt 1 view .LVU3365
  48:delayline_multitap.h ****     {
 11897              		.loc 18 48 5 is_stmt 0 view .LVU3366
 11898              	.LBE2213:
  57:Veno-Echo.cpp **** 
 11899              		.loc 20 57 76 view .LVU3367
 11900 00c8 2246     		mov	r2, r4
 11901 00ca 3946     		mov	r1, r7
 11902 00cc 7B48     		ldr	r0, .L635+92
 11903 00ce FFF7FEFF 		bl	__aeabi_atexit
 11904              	.LVL770:
 11905              	.LBB2214:
 11906              	.LBI2214:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 11907              		.loc 19 38 5 is_stmt 1 view .LVU3368
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 11908              		.loc 19 38 5 is_stmt 0 view .LVU3369
 11909              	.LBE2214:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 11910              		.loc 20 98 12 view .LVU3370
 11911 00d2 7B4F     		ldr	r7, .L635+96
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 11912              		.loc 20 59 80 view .LVU3371
 11913 00d4 2246     		mov	r2, r4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 362


 11914 00d6 2946     		mov	r1, r5
 11915 00d8 7A48     		ldr	r0, .L635+100
 11916 00da FFF7FEFF 		bl	__aeabi_atexit
 11917              	.LVL771:
 11918              	.LBB2215:
 11919              	.LBI2215:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 11920              		.loc 19 38 5 is_stmt 1 view .LVU3372
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 11921              		.loc 19 38 5 is_stmt 0 view .LVU3373
 11922              	.LBE2215:
  60:Veno-Echo.cpp **** 
 11923              		.loc 20 60 80 view .LVU3374
 11924 00de 2246     		mov	r2, r4
 11925 00e0 2946     		mov	r1, r5
 11926 00e2 7948     		ldr	r0, .L635+104
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 11927              		.loc 20 102 11 view .LVU3375
 11928 00e4 794D     		ldr	r5, .L635+108
  60:Veno-Echo.cpp **** 
 11929              		.loc 20 60 80 view .LVU3376
 11930 00e6 FFF7FEFF 		bl	__aeabi_atexit
 11931              	.LVL772:
 11932              	.LBB2216:
 11933              	.LBI2216:
  49:DelayMulti.h  **** ~DelayMulti() {}
 11934              		.loc 17 49 1 is_stmt 1 view .LVU3377
 11935              	.LBB2217:
 11936              	.LBB2218:
 11937              	.LBI2218:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 11938              		.loc 14 47 1 view .LVU3378
 11939              	.LBB2219:
 11940              	.LBB2220:
 11941              	.LBI2220:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11942              		.loc 16 24 5 view .LVU3379
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11943              		.loc 16 24 5 is_stmt 0 view .LVU3380
 11944              	.LBE2220:
 11945              	.LBB2221:
 11946              	.LBI2221:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 11947              		.loc 15 15 5 is_stmt 1 view .LVU3381
  15:oscillator_p.h ****     ~Oscillator_p() {}
 11948              		.loc 15 15 5 is_stmt 0 view .LVU3382
 11949              	.LBE2221:
 11950              	.LBE2219:
 11951              	.LBE2218:
 11952              	.LBE2217:
 11953              	.LBE2216:
 11954              	.LBE2284:
 11955              	.LBE2288:
  49:DelayMulti.h  **** ~DelayMulti() {}
 11956              		.loc 17 49 14 is_stmt 1 view .LVU3383
  49:DelayMulti.h  **** ~DelayMulti() {}
 11957              		.loc 17 49 14 view .LVU3384
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 363


 11958              	.LBB2289:
 11959              	.LBB2285:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 11960              		.loc 20 98 12 is_stmt 0 view .LVU3385
 11961 00ea 2246     		mov	r2, r4
 11962 00ec 3946     		mov	r1, r7
 11963 00ee 7848     		ldr	r0, .L635+112
 11964 00f0 FFF7FEFF 		bl	__aeabi_atexit
 11965              	.LVL773:
 11966              	.LBB2222:
 11967              	.LBI2222:
  49:DelayMulti.h  **** ~DelayMulti() {}
 11968              		.loc 17 49 1 is_stmt 1 view .LVU3386
 11969              	.LBB2223:
 11970              	.LBB2224:
 11971              	.LBI2224:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 11972              		.loc 14 47 1 view .LVU3387
 11973              	.LBB2225:
 11974              	.LBB2226:
 11975              	.LBI2226:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11976              		.loc 16 24 5 view .LVU3388
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 11977              		.loc 16 24 5 is_stmt 0 view .LVU3389
 11978              	.LBE2226:
 11979              	.LBB2227:
 11980              	.LBI2227:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 11981              		.loc 15 15 5 is_stmt 1 view .LVU3390
  15:oscillator_p.h ****     ~Oscillator_p() {}
 11982              		.loc 15 15 5 is_stmt 0 view .LVU3391
 11983              	.LBE2227:
 11984              	.LBE2225:
 11985              	.LBE2224:
 11986              	.LBE2223:
 11987              	.LBE2222:
 11988              	.LBE2285:
 11989              	.LBE2289:
  49:DelayMulti.h  **** ~DelayMulti() {}
 11990              		.loc 17 49 14 is_stmt 1 view .LVU3392
  49:DelayMulti.h  **** ~DelayMulti() {}
 11991              		.loc 17 49 14 view .LVU3393
 11992              	.LBB2290:
 11993              	.LBB2286:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 11994              		.loc 20 98 19 is_stmt 0 view .LVU3394
 11995 00f4 2246     		mov	r2, r4
 11996 00f6 3946     		mov	r1, r7
 11997 00f8 7648     		ldr	r0, .L635+116
 11998 00fa FFF7FEFF 		bl	__aeabi_atexit
 11999              	.LVL774:
 12000              	.LBB2228:
 12001              	.LBI2228:
  78:LEDs.h        ****     ~ButtonLED() {}
 12002              		.loc 14 78 5 is_stmt 1 view .LVU3395
 12003              	.LBB2229:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 364


 12004              	.LBB2230:
 12005              	.LBI2230:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12006              		.loc 1 40 5 view .LVU3396
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12007              		.loc 1 40 5 is_stmt 0 view .LVU3397
 12008              	.LBE2230:
 12009              	.LBB2231:
 12010              	.LBI2231:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12011              		.loc 16 24 5 is_stmt 1 view .LVU3398
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12012              		.loc 16 24 5 is_stmt 0 view .LVU3399
 12013              	.LBE2231:
 12014              	.LBE2229:
 12015              	.LBE2228:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12016              		.loc 20 102 11 view .LVU3400
 12017 00fe 2246     		mov	r2, r4
 12018 0100 2946     		mov	r1, r5
 12019 0102 7548     		ldr	r0, .L635+120
 12020 0104 FFF7FEFF 		bl	__aeabi_atexit
 12021              	.LVL775:
 12022              	.LBB2232:
 12023              	.LBI2232:
  78:LEDs.h        ****     ~ButtonLED() {}
 12024              		.loc 14 78 5 is_stmt 1 view .LVU3401
 12025              	.LBB2233:
 12026              	.LBB2234:
 12027              	.LBI2234:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12028              		.loc 1 40 5 view .LVU3402
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12029              		.loc 1 40 5 is_stmt 0 view .LVU3403
 12030              	.LBE2234:
 12031              	.LBB2235:
 12032              	.LBI2235:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12033              		.loc 16 24 5 is_stmt 1 view .LVU3404
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12034              		.loc 16 24 5 is_stmt 0 view .LVU3405
 12035              	.LBE2235:
 12036              	.LBE2233:
 12037              	.LBE2232:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12038              		.loc 20 102 18 view .LVU3406
 12039 0108 2246     		mov	r2, r4
 12040 010a 2946     		mov	r1, r5
 12041 010c 7348     		ldr	r0, .L635+124
 12042 010e FFF7FEFF 		bl	__aeabi_atexit
 12043              	.LVL776:
 12044              	.LBB2236:
 12045              	.LBI2236:
  78:LEDs.h        ****     ~ButtonLED() {}
 12046              		.loc 14 78 5 is_stmt 1 view .LVU3407
 12047              	.LBB2237:
 12048              	.LBB2238:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 365


 12049              	.LBI2238:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12050              		.loc 1 40 5 view .LVU3408
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12051              		.loc 1 40 5 is_stmt 0 view .LVU3409
 12052              	.LBE2238:
 12053              	.LBB2239:
 12054              	.LBI2239:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12055              		.loc 16 24 5 is_stmt 1 view .LVU3410
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12056              		.loc 16 24 5 is_stmt 0 view .LVU3411
 12057              	.LBE2239:
 12058              	.LBE2237:
 12059              	.LBE2236:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12060              		.loc 20 102 25 view .LVU3412
 12061 0112 2246     		mov	r2, r4
 12062 0114 2946     		mov	r1, r5
 12063 0116 7248     		ldr	r0, .L635+128
 12064 0118 FFF7FEFF 		bl	__aeabi_atexit
 12065              	.LVL777:
 12066              	.LBB2240:
 12067              	.LBI2240:
  78:LEDs.h        ****     ~ButtonLED() {}
 12068              		.loc 14 78 5 is_stmt 1 view .LVU3413
 12069              	.LBB2241:
 12070              	.LBB2242:
 12071              	.LBI2242:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12072              		.loc 1 40 5 view .LVU3414
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12073              		.loc 1 40 5 is_stmt 0 view .LVU3415
 12074              	.LBE2242:
 12075              	.LBB2243:
 12076              	.LBI2243:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12077              		.loc 16 24 5 is_stmt 1 view .LVU3416
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12078              		.loc 16 24 5 is_stmt 0 view .LVU3417
 12079              	.LBE2243:
 12080              	.LBE2241:
 12081              	.LBE2240:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12082              		.loc 20 102 34 view .LVU3418
 12083 011c 2246     		mov	r2, r4
 12084 011e 2946     		mov	r1, r5
 12085 0120 7048     		ldr	r0, .L635+132
 12086 0122 FFF7FEFF 		bl	__aeabi_atexit
 12087              	.LVL778:
 12088              	.LBB2244:
 12089              	.LBI2244:
  78:LEDs.h        ****     ~ButtonLED() {}
 12090              		.loc 14 78 5 is_stmt 1 view .LVU3419
 12091              	.LBB2245:
 12092              	.LBB2246:
 12093              	.LBI2246:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 366


  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12094              		.loc 1 40 5 view .LVU3420
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12095              		.loc 1 40 5 is_stmt 0 view .LVU3421
 12096              	.LBE2246:
 12097              	.LBB2247:
 12098              	.LBI2247:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12099              		.loc 16 24 5 is_stmt 1 view .LVU3422
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12100              		.loc 16 24 5 is_stmt 0 view .LVU3423
 12101              	.LBE2247:
 12102              	.LBE2245:
 12103              	.LBE2244:
 144:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 12104              		.loc 20 144 13 view .LVU3424
 12105 0126 704F     		ldr	r7, .L635+136
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12106              		.loc 20 102 44 view .LVU3425
 12107 0128 2246     		mov	r2, r4
 12108 012a 2946     		mov	r1, r5
 12109 012c 6F48     		ldr	r0, .L635+140
 12110 012e FFF7FEFF 		bl	__aeabi_atexit
 12111              	.LVL779:
 12112              	.LBB2248:
 12113              	.LBI2248:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 12114              		.loc 14 47 1 is_stmt 1 view .LVU3426
 12115              	.LBB2249:
 12116              	.LBB2250:
 12117              	.LBI2250:
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12118              		.loc 16 24 5 view .LVU3427
  24:../libdaisy/src/hid/led.h ****     ~Led() {}
 12119              		.loc 16 24 5 is_stmt 0 view .LVU3428
 12120              	.LBE2250:
 12121              	.LBB2251:
 12122              	.LBI2251:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 12123              		.loc 15 15 5 is_stmt 1 view .LVU3429
  15:oscillator_p.h ****     ~Oscillator_p() {}
 12124              		.loc 15 15 5 is_stmt 0 view .LVU3430
 12125              	.LBE2251:
 12126              	.LBE2249:
 12127              	.LBE2248:
 103:Veno-Echo.cpp **** 
 12128              		.loc 20 103 10 view .LVU3431
 12129 0132 2246     		mov	r2, r4
 12130 0134 6E49     		ldr	r1, .L635+144
 12131 0136 6F48     		ldr	r0, .L635+148
 12132 0138 FFF7FEFF 		bl	__aeabi_atexit
 12133              	.LVL780:
 12134              	.LBB2252:
 12135              	.LBI2252:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12136              		.loc 7 38 5 is_stmt 1 view .LVU3432
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 367


 12137              		.loc 7 38 5 is_stmt 0 view .LVU3433
 12138              	.LBE2252:
 144:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 12139              		.loc 20 144 13 view .LVU3434
 12140 013c 2246     		mov	r2, r4
 12141 013e 3946     		mov	r1, r7
 12142 0140 6D48     		ldr	r0, .L635+152
 12143 0142 FFF7FEFF 		bl	__aeabi_atexit
 12144              	.LVL781:
 12145              	.LBB2253:
 12146              	.LBI2253:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12147              		.loc 7 38 5 is_stmt 1 view .LVU3435
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12148              		.loc 7 38 5 is_stmt 0 view .LVU3436
 12149              	.LBE2253:
 145:Veno-Echo.cpp **** 
 12150              		.loc 20 145 13 view .LVU3437
 12151 0146 2246     		mov	r2, r4
 12152 0148 3946     		mov	r1, r7
 12153 014a 6C48     		ldr	r0, .L635+156
 150:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 12154              		.loc 20 150 18 view .LVU3438
 12155 014c 6C4D     		ldr	r5, .L635+160
 145:Veno-Echo.cpp **** 
 12156              		.loc 20 145 13 view .LVU3439
 12157 014e FFF7FEFF 		bl	__aeabi_atexit
 12158              	.LVL782:
 12159              	.LBB2254:
 12160              	.LBI2254:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12161              		.loc 7 38 5 is_stmt 1 view .LVU3440
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12162              		.loc 7 38 5 is_stmt 0 view .LVU3441
 12163              	.LBE2254:
 147:Veno-Echo.cpp **** static Adsr HPF_Env;
 12164              		.loc 20 147 13 view .LVU3442
 12165 0152 2246     		mov	r2, r4
 12166 0154 3946     		mov	r1, r7
 12167 0156 6B48     		ldr	r0, .L635+164
 12168 0158 FFF7FEFF 		bl	__aeabi_atexit
 12169              	.LVL783:
 12170              	.LBB2255:
 12171              	.LBI2255:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12172              		.loc 7 38 5 is_stmt 1 view .LVU3443
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 12173              		.loc 7 38 5 is_stmt 0 view .LVU3444
 12174              	.LBE2255:
 148:Veno-Echo.cpp **** 
 12175              		.loc 20 148 13 view .LVU3445
 12176 015c 2246     		mov	r2, r4
 12177 015e 3946     		mov	r1, r7
 12178 0160 6948     		ldr	r0, .L635+168
 12179 0162 FFF7FEFF 		bl	__aeabi_atexit
 12180              	.LVL784:
 12181              	.LBB2256:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 368


 12182              	.LBI2256:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12183              		.loc 10 36 5 is_stmt 1 view .LVU3446
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12184              		.loc 10 36 5 is_stmt 0 view .LVU3447
 12185              	.LBE2256:
 150:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 12186              		.loc 20 150 18 view .LVU3448
 12187 0166 2246     		mov	r2, r4
 12188 0168 2946     		mov	r1, r5
 12189 016a 6848     		ldr	r0, .L635+172
 12190 016c FFF7FEFF 		bl	__aeabi_atexit
 12191              	.LVL785:
 12192              	.LBB2257:
 12193              	.LBI2257:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12194              		.loc 10 36 5 is_stmt 1 view .LVU3449
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12195              		.loc 10 36 5 is_stmt 0 view .LVU3450
 12196              	.LBE2257:
 151:Veno-Echo.cpp **** 
 12197              		.loc 20 151 18 view .LVU3451
 12198 0170 2246     		mov	r2, r4
 12199 0172 2946     		mov	r1, r5
 12200 0174 6648     		ldr	r0, .L635+176
 12201 0176 FFF7FEFF 		bl	__aeabi_atexit
 12202              	.LVL786:
 12203              	.LBB2258:
 12204              	.LBI2258:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12205              		.loc 10 36 5 is_stmt 1 view .LVU3452
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12206              		.loc 10 36 5 is_stmt 0 view .LVU3453
 12207              	.LBE2258:
 153:Veno-Echo.cpp **** 
 12208              		.loc 20 153 18 view .LVU3454
 12209 017a 2246     		mov	r2, r4
 12210 017c 2946     		mov	r1, r5
 12211 017e 6548     		ldr	r0, .L635+180
 12212 0180 FFF7FEFF 		bl	__aeabi_atexit
 12213              	.LVL787:
 12214              	.LBB2259:
 12215              	.LBI2259:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12216              		.loc 10 36 5 is_stmt 1 view .LVU3455
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12217              		.loc 10 36 5 is_stmt 0 view .LVU3456
 12218              	.LBE2259:
 156:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 12219              		.loc 20 156 18 view .LVU3457
 12220 0184 2246     		mov	r2, r4
 12221 0186 2946     		mov	r1, r5
 12222 0188 6348     		ldr	r0, .L635+184
 12223 018a FFF7FEFF 		bl	__aeabi_atexit
 12224              	.LVL788:
 12225              	.LBB2260:
 12226              	.LBI2260:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 369


  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12227              		.loc 10 36 5 is_stmt 1 view .LVU3458
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12228              		.loc 10 36 5 is_stmt 0 view .LVU3459
 12229              	.LBE2260:
 157:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 12230              		.loc 20 157 18 view .LVU3460
 12231 018e 2246     		mov	r2, r4
 12232 0190 2946     		mov	r1, r5
 12233 0192 6248     		ldr	r0, .L635+188
 12234 0194 FFF7FEFF 		bl	__aeabi_atexit
 12235              	.LVL789:
 12236              	.LBB2261:
 12237              	.LBI2261:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12238              		.loc 10 36 5 is_stmt 1 view .LVU3461
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12239              		.loc 10 36 5 is_stmt 0 view .LVU3462
 12240              	.LBE2261:
 158:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 12241              		.loc 20 158 18 view .LVU3463
 12242 0198 2246     		mov	r2, r4
 12243 019a 2946     		mov	r1, r5
 12244 019c 6048     		ldr	r0, .L635+192
 12245 019e FFF7FEFF 		bl	__aeabi_atexit
 12246              	.LVL790:
 12247              	.LBB2262:
 12248              	.LBI2262:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12249              		.loc 10 36 5 is_stmt 1 view .LVU3464
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12250              		.loc 10 36 5 is_stmt 0 view .LVU3465
 12251              	.LBE2262:
 159:Veno-Echo.cpp **** 
 12252              		.loc 20 159 18 view .LVU3466
 12253 01a2 2246     		mov	r2, r4
 12254 01a4 2946     		mov	r1, r5
 12255 01a6 5F48     		ldr	r0, .L635+196
 12256 01a8 FFF7FEFF 		bl	__aeabi_atexit
 12257              	.LVL791:
 12258              	.LBB2263:
 12259              	.LBI2263:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12260              		.loc 10 36 5 is_stmt 1 view .LVU3467
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12261              		.loc 10 36 5 is_stmt 0 view .LVU3468
 12262              	.LBE2263:
 162:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 12263              		.loc 20 162 18 view .LVU3469
 12264 01ac 2246     		mov	r2, r4
 12265 01ae 2946     		mov	r1, r5
 12266 01b0 5D48     		ldr	r0, .L635+200
 12267 01b2 FFF7FEFF 		bl	__aeabi_atexit
 12268              	.LVL792:
 12269              	.LBB2264:
 12270              	.LBI2264:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 370


 12271              		.loc 10 36 5 is_stmt 1 view .LVU3470
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12272              		.loc 10 36 5 is_stmt 0 view .LVU3471
 12273              	.LBE2264:
 163:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 12274              		.loc 20 163 18 view .LVU3472
 12275 01b6 2246     		mov	r2, r4
 12276 01b8 2946     		mov	r1, r5
 12277 01ba 5C48     		ldr	r0, .L635+204
 12278 01bc FFF7FEFF 		bl	__aeabi_atexit
 12279              	.LVL793:
 12280              	.LBB2265:
 12281              	.LBI2265:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12282              		.loc 10 36 5 is_stmt 1 view .LVU3473
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12283              		.loc 10 36 5 is_stmt 0 view .LVU3474
 12284              	.LBE2265:
 164:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 12285              		.loc 20 164 18 view .LVU3475
 12286 01c0 2246     		mov	r2, r4
 12287 01c2 2946     		mov	r1, r5
 12288 01c4 5A48     		ldr	r0, .L635+208
 12289 01c6 FFF7FEFF 		bl	__aeabi_atexit
 12290              	.LVL794:
 12291              	.LBB2266:
 12292              	.LBI2266:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12293              		.loc 10 36 5 is_stmt 1 view .LVU3476
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12294              		.loc 10 36 5 is_stmt 0 view .LVU3477
 12295              	.LBE2266:
 165:Veno-Echo.cpp **** 
 12296              		.loc 20 165 18 view .LVU3478
 12297 01ca 2246     		mov	r2, r4
 12298 01cc 2946     		mov	r1, r5
 12299 01ce 5948     		ldr	r0, .L635+212
 12300 01d0 FFF7FEFF 		bl	__aeabi_atexit
 12301              	.LVL795:
 12302              	.LBB2267:
 12303              	.LBI2267:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12304              		.loc 10 36 5 is_stmt 1 view .LVU3479
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12305              		.loc 10 36 5 is_stmt 0 view .LVU3480
 12306              	.LBE2267:
 168:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 12307              		.loc 20 168 18 view .LVU3481
 12308 01d4 2246     		mov	r2, r4
 12309 01d6 2946     		mov	r1, r5
 12310 01d8 5748     		ldr	r0, .L635+216
 12311 01da FFF7FEFF 		bl	__aeabi_atexit
 12312              	.LVL796:
 12313              	.LBB2268:
 12314              	.LBI2268:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12315              		.loc 10 36 5 is_stmt 1 view .LVU3482
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 371


  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12316              		.loc 10 36 5 is_stmt 0 view .LVU3483
 12317              	.LBE2268:
 169:Veno-Echo.cpp **** 
 12318              		.loc 20 169 18 view .LVU3484
 12319 01de 2246     		mov	r2, r4
 12320 01e0 2946     		mov	r1, r5
 12321 01e2 5648     		ldr	r0, .L635+220
 12322 01e4 FFF7FEFF 		bl	__aeabi_atexit
 12323              	.LVL797:
 12324              	.LBB2269:
 12325              	.LBI2269:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12326              		.loc 10 36 5 is_stmt 1 view .LVU3485
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12327              		.loc 10 36 5 is_stmt 0 view .LVU3486
 12328              	.LBE2269:
 175:Veno-Echo.cpp **** Switch ReverseGateR;
 12329              		.loc 20 175 8 view .LVU3487
 12330 01e8 554F     		ldr	r7, .L635+224
 171:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 12331              		.loc 20 171 18 view .LVU3488
 12332 01ea 2246     		mov	r2, r4
 12333 01ec 2946     		mov	r1, r5
 12334 01ee 5548     		ldr	r0, .L635+228
 12335 01f0 FFF7FEFF 		bl	__aeabi_atexit
 12336              	.LVL798:
 12337              	.LBB2270:
 12338              	.LBI2270:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12339              		.loc 10 36 5 is_stmt 1 view .LVU3489
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 12340              		.loc 10 36 5 is_stmt 0 view .LVU3490
 12341              	.LBE2270:
 172:Veno-Echo.cpp **** 
 12342              		.loc 20 172 18 view .LVU3491
 12343 01f4 2246     		mov	r2, r4
 12344 01f6 2946     		mov	r1, r5
 12345 01f8 5348     		ldr	r0, .L635+232
 12346 01fa FFF7FEFF 		bl	__aeabi_atexit
 12347              	.LVL799:
 12348              	.LBB2271:
 12349              	.LBI2271:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12350              		.loc 1 40 5 is_stmt 1 view .LVU3492
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12351              		.loc 1 40 5 is_stmt 0 view .LVU3493
 12352              	.LBE2271:
 175:Veno-Echo.cpp **** Switch ReverseGateR;
 12353              		.loc 20 175 8 view .LVU3494
 12354 01fe 2246     		mov	r2, r4
 12355 0200 3946     		mov	r1, r7
 12356 0202 5248     		ldr	r0, .L635+236
 12357 0204 FFF7FEFF 		bl	__aeabi_atexit
 12358              	.LVL800:
 12359              	.LBB2272:
 12360              	.LBI2272:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 372


  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12361              		.loc 1 40 5 is_stmt 1 view .LVU3495
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12362              		.loc 1 40 5 is_stmt 0 view .LVU3496
 12363              	.LBE2272:
 176:Veno-Echo.cpp **** 
 12364              		.loc 20 176 8 view .LVU3497
 12365 0208 2246     		mov	r2, r4
 12366 020a 3946     		mov	r1, r7
 12367 020c 5048     		ldr	r0, .L635+240
 12368 020e FFF7FEFF 		bl	__aeabi_atexit
 12369              	.LVL801:
 12370              	.LBB2273:
 12371              	.LBI2273:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12372              		.loc 1 40 5 is_stmt 1 view .LVU3498
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12373              		.loc 1 40 5 is_stmt 0 view .LVU3499
 12374              	.LBE2273:
 179:Veno-Echo.cpp **** Switch ClockIn;
 12375              		.loc 20 179 8 view .LVU3500
 12376 0212 2246     		mov	r2, r4
 12377 0214 3946     		mov	r1, r7
 12378 0216 4F48     		ldr	r0, .L635+244
 12379 0218 FFF7FEFF 		bl	__aeabi_atexit
 12380              	.LVL802:
 12381              	.LBB2274:
 12382              	.LBI2274:
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12383              		.loc 1 40 5 is_stmt 1 view .LVU3501
  40:../libdaisy/src/hid/switch.h ****     ~Switch() {}
 12384              		.loc 1 40 5 is_stmt 0 view .LVU3502
 12385              	.LBE2274:
 180:Veno-Echo.cpp **** 
 12386              		.loc 20 180 8 view .LVU3503
 12387 021c 2246     		mov	r2, r4
 12388 021e 3946     		mov	r1, r7
 12389 0220 4D48     		ldr	r0, .L635+248
 12390 0222 FFF7FEFF 		bl	__aeabi_atexit
 12391              	.LVL803:
 12392              	.LBB2275:
 12393              	.LBI2275:
  42:taptempo.h    ****     {
 12394              		.loc 13 42 5 is_stmt 1 view .LVU3504
 12395              	.LBB2276:
 12396              	.LBB2277:
  44:taptempo.h    ****         tap_tolerance_ = 1.25f;
 12397              		.loc 13 44 9 view .LVU3505
  52:taptempo.h    ****         clockLength_ = 0;
 12398              		.loc 13 52 19 is_stmt 0 view .LVU3506
 12399 0226 4FF07E55 		mov	r5, #1065353216
  44:taptempo.h    ****         tap_tolerance_ = 1.25f;
 12400              		.loc 13 44 18 view .LVU3507
 12401 022a 4C48     		ldr	r0, .L635+252
  46:taptempo.h    ****         mintap_ = 80;
 12402              		.loc 13 46 17 view .LVU3508
 12403 022c 4FF4FA6E 		mov	lr, #2000
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 373


  45:taptempo.h    ****         maxtap_ = 2000;
 12404              		.loc 13 45 24 view .LVU3509
 12405 0230 4B49     		ldr	r1, .L635+256
  47:taptempo.h    ****         lastTapLength_ = 0;
 12406              		.loc 13 47 17 view .LVU3510
 12407 0232 4FF0500C 		mov	ip, #80
  49:taptempo.h    ****         lastTime_ = 0;
 12408              		.loc 13 49 16 view .LVU3511
 12409 0236 4B4F     		ldr	r7, .L635+260
  55:taptempo.h    ****     }
 12410              		.loc 13 55 22 view .LVU3512
 12411 0238 0A23     		movs	r3, #10
 12412              	.LBE2277:
 12413              	.LBE2276:
 12414              	.LBE2275:
 183:Veno-Echo.cpp **** 
 12415              		.loc 20 183 10 view .LVU3513
 12416 023a 2246     		mov	r2, r4
 12417              	.LBB2282:
 12418              	.LBB2280:
 12419              	.LBB2278:
  44:taptempo.h    ****         tap_tolerance_ = 1.25f;
 12420              		.loc 13 44 18 view .LVU3514
 12421 023c 80F82460 		strb	r6, [r0, #36]
  45:taptempo.h    ****         maxtap_ = 2000;
 12422              		.loc 13 45 9 is_stmt 1 view .LVU3515
  51:taptempo.h    ****         tapRatio_ = 1.0f;
 12423              		.loc 13 51 22 is_stmt 0 view .LVU3516
 12424 0240 8660     		str	r6, [r0, #8]
  45:taptempo.h    ****         maxtap_ = 2000;
 12425              		.loc 13 45 24 view .LVU3517
 12426 0242 8162     		str	r1, [r0, #40]	@ float
  46:taptempo.h    ****         mintap_ = 80;
 12427              		.loc 13 46 9 is_stmt 1 view .LVU3518
  49:taptempo.h    ****         lastTime_ = 0;
 12428              		.loc 13 49 16 is_stmt 0 view .LVU3519
 12429 0244 C762     		str	r7, [r0, #44]	@ float
  52:taptempo.h    ****         clockLength_ = 0;
 12430              		.loc 13 52 19 view .LVU3520
 12431 0246 0563     		str	r5, [r0, #48]	@ float
 12432              	.LBE2278:
 12433              	.LBE2280:
 12434              	.LBE2282:
 183:Veno-Echo.cpp **** 
 12435              		.loc 20 183 10 view .LVU3521
 12436 0248 4749     		ldr	r1, .L635+264
 12437              	.LBB2283:
 12438              	.LBB2281:
 12439              	.LBB2279:
  55:taptempo.h    ****     }
 12440              		.loc 13 55 22 view .LVU3522
 12441 024a 0362     		str	r3, [r0, #32]
  50:taptempo.h    ****         currentTime_ = 0;
 12442              		.loc 13 50 19 view .LVU3523
 12443 024c C0E90366 		strd	r6, r6, [r0, #12]
  54:taptempo.h    ****         clockThresh_ = 10; //ms change
 12444              		.loc 13 54 26 view .LVU3524
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 374


 12445 0250 C0E90666 		strd	r6, r6, [r0, #24]
  47:taptempo.h    ****         lastTapLength_ = 0;
 12446              		.loc 13 47 17 view .LVU3525
 12447 0254 C0E900CE 		strd	ip, lr, [r0]
  48:taptempo.h    ****         tempo_ = 500.0f;
 12448              		.loc 13 48 9 is_stmt 1 view .LVU3526
  49:taptempo.h    ****         lastTime_ = 0;
 12449              		.loc 13 49 9 view .LVU3527
  50:taptempo.h    ****         currentTime_ = 0;
 12450              		.loc 13 50 9 view .LVU3528
  51:taptempo.h    ****         tapRatio_ = 1.0f;
 12451              		.loc 13 51 9 view .LVU3529
  52:taptempo.h    ****         clockLength_ = 0;
 12452              		.loc 13 52 9 view .LVU3530
  53:taptempo.h    ****         lastClockLength_ = 0;
 12453              		.loc 13 53 9 view .LVU3531
  54:taptempo.h    ****         clockThresh_ = 10; //ms change
 12454              		.loc 13 54 9 view .LVU3532
  55:taptempo.h    ****     }
 12455              		.loc 13 55 9 view .LVU3533
 12456              	.LVL804:
  55:taptempo.h    ****     }
 12457              		.loc 13 55 9 is_stmt 0 view .LVU3534
 12458              	.LBE2279:
 12459              	.LBE2281:
 12460              	.LBE2283:
 12461              	.LBE2286:
 12462              	.LBE2290:
 12463              		.loc 20 1997 1 view .LVU3535
 12464 0258 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 12465              		.cfi_restore 14
 12466              		.cfi_restore 8
 12467              		.cfi_restore 7
 12468              		.cfi_restore 6
 12469              		.cfi_restore 5
 12470              		.cfi_restore 4
 12471              		.cfi_def_cfa_offset 0
 12472              	.LBB2291:
 12473              	.LBB2287:
 183:Veno-Echo.cpp **** 
 12474              		.loc 20 183 10 view .LVU3536
 12475 025c FFF7FEBF 		b	__aeabi_atexit
 12476              	.LVL805:
 12477              	.L636:
 12478              		.align	2
 12479              	.L635:
 12480 0260 00000000 		.word	.LANCHOR4
 12481 0264 00000000 		.word	__dso_handle
 12482 0268 00000000 		.word	_ZN7daisysp3SvfD1Ev
 12483 026c 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 12484 0270 00000000 		.word	.LANCHOR46
 12485 0274 00000000 		.word	.LANCHOR47
 12486 0278 00000000 		.word	.LANCHOR34
 12487 027c 00000000 		.word	.LANCHOR35
 12488 0280 00000000 		.word	.LANCHOR48
 12489 0284 00000000 		.word	.LANCHOR49
 12490 0288 00000000 		.word	.LANCHOR36
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 375


 12491 028c 00000000 		.word	.LANCHOR37
 12492 0290 00000000 		.word	_ZN7daisysp10OscillatorD1Ev
 12493 0294 00000000 		.word	.LANCHOR75
 12494 0298 17B7D138 		.word	953267991
 12495 029c 00000000 		.word	.LANCHOR127
 12496 02a0 00000000 		.word	_ZN7daisysp9EnvFollowD1Ev
 12497 02a4 00000000 		.word	.LANCHOR128
 12498 02a8 00000000 		.word	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 12499 02ac 00000000 		.word	.LANCHOR104
 12500 02b0 00000000 		.word	.LANCHOR105
 12501 02b4 00000000 		.word	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 12502 02b8 00000000 		.word	delMemsL
 12503 02bc 00000000 		.word	delMemsR
 12504 02c0 00000000 		.word	_ZN10DelayMultiD1Ev
 12505 02c4 00000000 		.word	delMemsL_REV
 12506 02c8 00000000 		.word	delMemsR_REV
 12507 02cc 00000000 		.word	_ZN9ButtonLEDD1Ev
 12508 02d0 00000000 		.word	.LANCHOR0
 12509 02d4 00000000 		.word	.LANCHOR1
 12510 02d8 00000000 		.word	.LANCHOR90
 12511 02dc 00000000 		.word	.LANCHOR91
 12512 02e0 00000000 		.word	.LANCHOR92
 12513 02e4 00000000 		.word	.LANCHOR93
 12514 02e8 00000000 		.word	_ZN7daisysp4AdsrD1Ev
 12515 02ec 00000000 		.word	.LANCHOR94
 12516 02f0 00000000 		.word	_ZN8TempoLEDD1Ev
 12517 02f4 00000000 		.word	.LANCHOR88
 12518 02f8 00000000 		.word	.LANCHOR98
 12519 02fc 00000000 		.word	.LANCHOR99
 12520 0300 00000000 		.word	_ZN7daisysp9CrossFadeD1Ev
 12521 0304 00000000 		.word	.LANCHOR100
 12522 0308 00000000 		.word	.LANCHOR101
 12523 030c 00000000 		.word	.LANCHOR102
 12524 0310 00000000 		.word	.LANCHOR103
 12525 0314 00000000 		.word	.LANCHOR64
 12526 0318 00000000 		.word	.LANCHOR115
 12527 031c 00000000 		.word	.LANCHOR116
 12528 0320 00000000 		.word	.LANCHOR113
 12529 0324 00000000 		.word	.LANCHOR114
 12530 0328 00000000 		.word	.LANCHOR119
 12531 032c 00000000 		.word	.LANCHOR120
 12532 0330 00000000 		.word	.LANCHOR117
 12533 0334 00000000 		.word	.LANCHOR118
 12534 0338 00000000 		.word	.LANCHOR121
 12535 033c 00000000 		.word	.LANCHOR122
 12536 0340 00000000 		.word	_ZN5daisy6SwitchD1Ev
 12537 0344 00000000 		.word	.LANCHOR123
 12538 0348 00000000 		.word	.LANCHOR124
 12539 034c 00000000 		.word	.LANCHOR95
 12540 0350 00000000 		.word	.LANCHOR96
 12541 0354 00000000 		.word	.LANCHOR97
 12542 0358 00000000 		.word	.LANCHOR87
 12543 035c 00000000 		.word	.LANCHOR12
 12544 0360 0000A03F 		.word	1067450368
 12545 0364 0000FA43 		.word	1140457472
 12546 0368 00000000 		.word	_ZN8TaptempoD1Ev
 12547 036c 00000000 		.word	_ZN7daisysp7DcBlockD1Ev
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 376


 12548              	.LBE2287:
 12549              	.LBE2291:
 12550              		.cfi_endproc
 12551              	.LFE4917:
 12553              		.section	.init_array,"aw",%init_array
 12554              		.align	2
 12555 0000 00000000 		.word	_GLOBAL__sub_I_delMemsL(target1)
 12556              		.global	AltControls
 12557              		.global	BaseTempo
 12558              		.global	ClockIn
 12559              		.global	Sync
 12560              		.global	ReverseGateR
 12561              		.global	ReverseGateL
 12562              		.global	save_flag
 12563              		.global	PostFilters
 12564              		.global	ClockInFlag
 12565              		.global	mute
 12566              		.global	shift
 12567              		.global	syncMode
 12568              		.global	modulation_CV_Raw
 12569              		.global	ModDepth
 12570              		.global	div_R
 12571              		.global	div_L
 12572              		.global	filterXfade
 12573              		.global	width_CV
 12574              		.global	width
 12575              		.global	drywet_CV
 12576              		.global	drywet
 12577              		.global	crossfeedback_CV
 12578              		.global	crossfeedback
 12579              		.global	feedbackR_CV
 12580              		.global	feedbackR
 12581              		.global	feedbackL_CV
 12582              		.global	feedbackL
 12583              		.global	delayTimeR_CV
 12584              		.global	delayTimeL_CV
 12585              		.global	tempoLED_BASE
 12586              		.global	Tap_Button
 12587              		.global	Rev_R_sw
 12588              		.global	Rev_L_sw
 12589              		.global	HPF_sw
 12590              		.global	LPF_sw
 12591              		.global	delaysR_REV
 12592              		.global	delaysL_REV
 12593              		.global	delayR
 12594              		.global	delayL
 12595              		.global	delMemsR_REV
 12596              		.global	delMemsL_REV
 12597              		.global	delMemsR
 12598              		.global	delMemsL
 12599              		.section	.bss.AltControls,"aw",%nobits
 12600              		.align	2
 12601              		.set	.LANCHOR16,. + 0
 12604              	AltControls:
 12605 0000 00000000 		.space	32
 12605      00000000 
 12605      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 377


 12605      00000000 
 12605      00000000 
 12606              		.section	.bss.BaseTempo,"aw",%nobits
 12607              		.align	2
 12608              		.set	.LANCHOR12,. + 0
 12611              	BaseTempo:
 12612 0000 00000000 		.space	52
 12612      00000000 
 12612      00000000 
 12612      00000000 
 12612      00000000 
 12613              		.section	.bss.ClockIn,"aw",%nobits
 12614              		.align	2
 12615              		.set	.LANCHOR87,. + 0
 12618              	ClockIn:
 12619 0000 00000000 		.space	16
 12619      00000000 
 12619      00000000 
 12619      00000000 
 12620              		.section	.bss.ClockInFlag,"aw",%nobits
 12623              	ClockInFlag:
 12624 0000 00       		.space	1
 12625              		.section	.bss.HPF_sw,"aw",%nobits
 12626              		.align	2
 12627              		.set	.LANCHOR91,. + 0
 12630              	HPF_sw:
 12631 0000 00000000 		.space	52
 12631      00000000 
 12631      00000000 
 12631      00000000 
 12631      00000000 
 12632              		.section	.bss.LPF_sw,"aw",%nobits
 12633              		.align	2
 12634              		.set	.LANCHOR90,. + 0
 12637              	LPF_sw:
 12638 0000 00000000 		.space	52
 12638      00000000 
 12638      00000000 
 12638      00000000 
 12638      00000000 
 12639              		.section	.bss.ModDepth,"aw",%nobits
 12640              		.align	2
 12641              		.set	.LANCHOR67,. + 0
 12644              	ModDepth:
 12645 0000 00000000 		.space	4
 12646              		.section	.bss.PostFilters,"aw",%nobits
 12647              		.set	.LANCHOR82,. + 0
 12650              	PostFilters:
 12651 0000 00       		.space	1
 12652              		.section	.bss.Rev_L_sw,"aw",%nobits
 12653              		.align	2
 12654              		.set	.LANCHOR92,. + 0
 12657              	Rev_L_sw:
 12658 0000 00000000 		.space	52
 12658      00000000 
 12658      00000000 
 12658      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 378


 12658      00000000 
 12659              		.section	.bss.Rev_R_sw,"aw",%nobits
 12660              		.align	2
 12661              		.set	.LANCHOR93,. + 0
 12664              	Rev_R_sw:
 12665 0000 00000000 		.space	52
 12665      00000000 
 12665      00000000 
 12665      00000000 
 12665      00000000 
 12666              		.section	.bss.ReverseGateL,"aw",%nobits
 12667              		.align	2
 12668              		.set	.LANCHOR95,. + 0
 12671              	ReverseGateL:
 12672 0000 00000000 		.space	16
 12672      00000000 
 12672      00000000 
 12672      00000000 
 12673              		.section	.bss.ReverseGateR,"aw",%nobits
 12674              		.align	2
 12675              		.set	.LANCHOR96,. + 0
 12678              	ReverseGateR:
 12679 0000 00000000 		.space	16
 12679      00000000 
 12679      00000000 
 12679      00000000 
 12680              		.section	.bss.Sync,"aw",%nobits
 12681              		.align	2
 12682              		.set	.LANCHOR97,. + 0
 12685              	Sync:
 12686 0000 00000000 		.space	16
 12686      00000000 
 12686      00000000 
 12686      00000000 
 12687              		.section	.bss.Tap_Button,"aw",%nobits
 12688              		.align	2
 12689              		.set	.LANCHOR94,. + 0
 12692              	Tap_Button:
 12693 0000 00000000 		.space	52
 12693      00000000 
 12693      00000000 
 12693      00000000 
 12693      00000000 
 12694              		.section	.bss._ZL10FwdRevLEnv,"aw",%nobits
 12695              		.align	2
 12696              		.set	.LANCHOR98,. + 0
 12699              	_ZL10FwdRevLEnv:
 12700 0000 00000000 		.space	56
 12700      00000000 
 12700      00000000 
 12700      00000000 
 12700      00000000 
 12701              		.section	.bss._ZL10FwdRevREnv,"aw",%nobits
 12702              		.align	2
 12703              		.set	.LANCHOR99,. + 0
 12706              	_ZL10FwdRevREnv:
 12707 0000 00000000 		.space	56
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 379


 12707      00000000 
 12707      00000000 
 12707      00000000 
 12707      00000000 
 12708              		.section	.bss._ZL10HPF_LXfade,"aw",%nobits
 12709              		.align	2
 12710              		.set	.LANCHOR113,. + 0
 12713              	_ZL10HPF_LXfade:
 12714 0000 00000000 		.space	8
 12714      00000000 
 12715              		.section	.bss._ZL10HPF_L_post,"aw",%nobits
 12716              		.align	2
 12717              		.set	.LANCHOR36,. + 0
 12720              	_ZL10HPF_L_post:
 12721 0000 00000000 		.space	76
 12721      00000000 
 12721      00000000 
 12721      00000000 
 12721      00000000 
 12722              		.section	.bss._ZL10HPF_RXfade,"aw",%nobits
 12723              		.align	2
 12724              		.set	.LANCHOR114,. + 0
 12727              	_ZL10HPF_RXfade:
 12728 0000 00000000 		.space	8
 12728      00000000 
 12729              		.section	.bss._ZL10HPF_R_post,"aw",%nobits
 12730              		.align	2
 12731              		.set	.LANCHOR37,. + 0
 12734              	_ZL10HPF_R_post:
 12735 0000 00000000 		.space	76
 12735      00000000 
 12735      00000000 
 12735      00000000 
 12735      00000000 
 12736              		.section	.bss._ZL10LPF_LXfade,"aw",%nobits
 12737              		.align	2
 12738              		.set	.LANCHOR115,. + 0
 12741              	_ZL10LPF_LXfade:
 12742 0000 00000000 		.space	8
 12742      00000000 
 12743              		.section	.bss._ZL10LPF_L_post,"aw",%nobits
 12744              		.align	2
 12745              		.set	.LANCHOR48,. + 0
 12748              	_ZL10LPF_L_post:
 12749 0000 00000000 		.space	76
 12749      00000000 
 12749      00000000 
 12749      00000000 
 12749      00000000 
 12750              		.section	.bss._ZL10LPF_RXfade,"aw",%nobits
 12751              		.align	2
 12752              		.set	.LANCHOR116,. + 0
 12755              	_ZL10LPF_RXfade:
 12756 0000 00000000 		.space	8
 12756      00000000 
 12757              		.section	.bss._ZL10LPF_R_post,"aw",%nobits
 12758              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 380


 12759              		.set	.LANCHOR49,. + 0
 12762              	_ZL10LPF_R_post:
 12763 0000 00000000 		.space	76
 12763      00000000 
 12763      00000000 
 12763      00000000 
 12763      00000000 
 12764              		.section	.bss._ZL10WidthXfade,"aw",%nobits
 12765              		.align	2
 12766              		.set	.LANCHOR64,. + 0
 12769              	_ZL10WidthXfade:
 12770 0000 00000000 		.space	8
 12770      00000000 
 12771              		.section	.bss._ZL11DcBlock_LFB,"aw",%nobits
 12772              		.align	2
 12773              		.set	.LANCHOR104,. + 0
 12776              	_ZL11DcBlock_LFB:
 12777 0000 00000000 		.space	12
 12777      00000000 
 12777      00000000 
 12778              		.section	.bss._ZL11DcBlock_RFB,"aw",%nobits
 12779              		.align	2
 12780              		.set	.LANCHOR105,. + 0
 12783              	_ZL11DcBlock_RFB:
 12784 0000 00000000 		.space	12
 12784      00000000 
 12784      00000000 
 12785              		.section	.bss._ZL11FilterMix_L,"aw",%nobits
 12786              		.align	2
 12787              		.set	.LANCHOR121,. + 0
 12790              	_ZL11FilterMix_L:
 12791 0000 00000000 		.space	8
 12791      00000000 
 12792              		.section	.bss._ZL11FilterMix_R,"aw",%nobits
 12793              		.align	2
 12794              		.set	.LANCHOR122,. + 0
 12797              	_ZL11FilterMix_R:
 12798 0000 00000000 		.space	8
 12798      00000000 
 12799              		.section	.bss._ZL12FwdRevLXfade,"aw",%nobits
 12800              		.align	2
 12801              		.set	.LANCHOR102,. + 0
 12804              	_ZL12FwdRevLXfade:
 12805 0000 00000000 		.space	8
 12805      00000000 
 12806              		.section	.bss._ZL12FwdRevRXfade,"aw",%nobits
 12807              		.align	2
 12808              		.set	.LANCHOR103,. + 0
 12811              	_ZL12FwdRevRXfade:
 12812 0000 00000000 		.space	8
 12812      00000000 
 12813              		.section	.bss._ZL15HPF_LXfade_post,"aw",%nobits
 12814              		.align	2
 12815              		.set	.LANCHOR117,. + 0
 12818              	_ZL15HPF_LXfade_post:
 12819 0000 00000000 		.space	8
 12819      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 381


 12820              		.section	.bss._ZL15HPF_RXfade_post,"aw",%nobits
 12821              		.align	2
 12822              		.set	.LANCHOR118,. + 0
 12825              	_ZL15HPF_RXfade_post:
 12826 0000 00000000 		.space	8
 12826      00000000 
 12827              		.section	.bss._ZL15LPF_LXfade_post,"aw",%nobits
 12828              		.align	2
 12829              		.set	.LANCHOR119,. + 0
 12832              	_ZL15LPF_LXfade_post:
 12833 0000 00000000 		.space	8
 12833      00000000 
 12834              		.section	.bss._ZL15LPF_RXfade_post,"aw",%nobits
 12835              		.align	2
 12836              		.set	.LANCHOR120,. + 0
 12839              	_ZL15LPF_RXfade_post:
 12840 0000 00000000 		.space	8
 12840      00000000 
 12841              		.section	.bss._ZL16FilterMix_L_post,"aw",%nobits
 12842              		.align	2
 12843              		.set	.LANCHOR123,. + 0
 12846              	_ZL16FilterMix_L_post:
 12847 0000 00000000 		.space	8
 12847      00000000 
 12848              		.section	.bss._ZL16FilterMix_R_post,"aw",%nobits
 12849              		.align	2
 12850              		.set	.LANCHOR124,. + 0
 12853              	_ZL16FilterMix_R_post:
 12854 0000 00000000 		.space	8
 12854      00000000 
 12855              		.section	.bss._ZL2hw,"aw",%nobits
 12856              		.align	2
 12857              		.set	.LANCHOR4,. + 0
 12860              	_ZL2hw:
 12861 0000 00000000 		.space	60
 12861      00000000 
 12861      00000000 
 12861      00000000 
 12861      00000000 
 12862              		.section	.bss._ZL3lfo,"aw",%nobits
 12863              		.align	2
 12864              		.set	.LANCHOR75,. + 0
 12867              	_ZL3lfo:
 12868 0000 00000000 		.space	40
 12868      00000000 
 12868      00000000 
 12868      00000000 
 12868      00000000 
 12869              		.section	.bss._ZL5HPF_L,"aw",%nobits
 12870              		.align	2
 12871              		.set	.LANCHOR34,. + 0
 12874              	_ZL5HPF_L:
 12875 0000 00000000 		.space	76
 12875      00000000 
 12875      00000000 
 12875      00000000 
 12875      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 382


 12876              		.section	.bss._ZL5HPF_R,"aw",%nobits
 12877              		.align	2
 12878              		.set	.LANCHOR35,. + 0
 12881              	_ZL5HPF_R:
 12882 0000 00000000 		.space	76
 12882      00000000 
 12882      00000000 
 12882      00000000 
 12882      00000000 
 12883              		.section	.bss._ZL5LPF_L,"aw",%nobits
 12884              		.align	2
 12885              		.set	.LANCHOR46,. + 0
 12888              	_ZL5LPF_L:
 12889 0000 00000000 		.space	76
 12889      00000000 
 12889      00000000 
 12889      00000000 
 12889      00000000 
 12890              		.section	.bss._ZL5LPF_R,"aw",%nobits
 12891              		.align	2
 12892              		.set	.LANCHOR47,. + 0
 12895              	_ZL5LPF_R:
 12896 0000 00000000 		.space	76
 12896      00000000 
 12896      00000000 
 12896      00000000 
 12896      00000000 
 12897              		.section	.bss._ZL7HPF_Env,"aw",%nobits
 12898              		.align	2
 12899              		.set	.LANCHOR101,. + 0
 12902              	_ZL7HPF_Env:
 12903 0000 00000000 		.space	56
 12903      00000000 
 12903      00000000 
 12903      00000000 
 12903      00000000 
 12904              		.section	.bss._ZL7LPF_Env,"aw",%nobits
 12905              		.align	2
 12906              		.set	.LANCHOR100,. + 0
 12909              	_ZL7LPF_Env:
 12910 0000 00000000 		.space	56
 12910      00000000 
 12910      00000000 
 12910      00000000 
 12910      00000000 
 12911              		.section	.bss._ZL7LeftEnv,"aw",%nobits
 12912              		.align	2
 12913              		.set	.LANCHOR127,. + 0
 12916              	_ZL7LeftEnv:
 12917 0000 00000000 		.space	24
 12917      00000000 
 12917      00000000 
 12917      00000000 
 12917      00000000 
 12918              		.section	.bss._ZL8RightEnv,"aw",%nobits
 12919              		.align	2
 12920              		.set	.LANCHOR128,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 383


 12923              	_ZL8RightEnv:
 12924 0000 00000000 		.space	24
 12924      00000000 
 12924      00000000 
 12924      00000000 
 12924      00000000 
 12925              		.section	.bss._ZZ10Update_ModvE13modulation_CV,"aw",%nobits
 12926              		.align	2
 12927              		.set	.LANCHOR85,. + 0
 12930              	_ZZ10Update_ModvE13modulation_CV:
 12931 0000 00000000 		.space	4
 12932              		.section	.bss._ZZ10Update_ModvE17ModDepth_Filtered,"aw",%nobits
 12933              		.align	2
 12934              		.set	.LANCHOR86,. + 0
 12937              	_ZZ10Update_ModvE17ModDepth_Filtered:
 12938 0000 00000000 		.space	4
 12939              		.section	.bss._ZZ12Update_widthvE10width_Last,"aw",%nobits
 12940              		.align	2
 12941              		.set	.LANCHOR62,. + 0
 12944              	_ZZ12Update_widthvE10width_Last:
 12945 0000 00000000 		.space	4
 12946              		.section	.bss._ZZ12Update_widthvE12ModDepth_new,"aw",%nobits
 12947              		.align	2
 12948              		.set	.LANCHOR66,. + 0
 12951              	_ZZ12Update_widthvE12ModDepth_new:
 12952 0000 00000000 		.space	4
 12953              		.section	.bss._ZZ12Update_widthvE12width_pickup,"aw",%nobits
 12954              		.set	.LANCHOR60,. + 0
 12957              	_ZZ12Update_widthvE12width_pickup:
 12958 0000 00       		.space	1
 12959              		.section	.bss._ZZ12Update_widthvE15ModDepth_pickup,"aw",%nobits
 12960              		.set	.LANCHOR65,. + 0
 12963              	_ZZ12Update_widthvE15ModDepth_pickup:
 12964 0000 00       		.space	1
 12965              		.section	.bss._ZZ12Update_widthvE9lastShift,"aw",%nobits
 12966              		.set	.LANCHOR59,. + 0
 12969              	_ZZ12Update_widthvE9lastShift:
 12970 0000 00       		.space	1
 12971              		.section	.bss._ZZ12Update_widthvE9width_new,"aw",%nobits
 12972              		.align	2
 12973              		.set	.LANCHOR61,. + 0
 12976              	_ZZ12Update_widthvE9width_new:
 12977 0000 00000000 		.space	4
 12978              		.section	.bss._ZZ13Update_drywetvE10Res_pickup,"aw",%nobits
 12979              		.set	.LANCHOR56,. + 0
 12982              	_ZZ13Update_drywetvE10Res_pickup:
 12983 0000 00       		.space	1
 12984              		.section	.bss._ZZ13Update_drywetvE10drywet_new,"aw",%nobits
 12985              		.align	2
 12986              		.set	.LANCHOR53,. + 0
 12989              	_ZZ13Update_drywetvE10drywet_new:
 12990 0000 00000000 		.space	4
 12991              		.section	.bss._ZZ13Update_drywetvE11drywet_Last,"aw",%nobits
 12992              		.align	2
 12993              		.set	.LANCHOR54,. + 0
 12996              	_ZZ13Update_drywetvE11drywet_Last:
 12997 0000 00000000 		.space	4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 384


 12998              		.section	.bss._ZZ13Update_drywetvE13drywet_pickup,"aw",%nobits
 12999              		.set	.LANCHOR52,. + 0
 13002              	_ZZ13Update_drywetvE13drywet_pickup:
 13003 0000 00       		.space	1
 13004              		.section	.bss._ZZ13Update_drywetvE7Res_new,"aw",%nobits
 13005              		.align	2
 13006              		.set	.LANCHOR57,. + 0
 13009              	_ZZ13Update_drywetvE7Res_new:
 13010 0000 00000000 		.space	4
 13011              		.section	.bss._ZZ13Update_drywetvE9lastShift,"aw",%nobits
 13012              		.set	.LANCHOR51,. + 0
 13015              	_ZZ13Update_drywetvE9lastShift:
 13016 0000 00       		.space	1
 13017              		.section	.bss._ZZ14Update_ButtonsvE11buttonstate,"aw",%nobits
 13018              		.align	2
 13019              		.set	.LANCHOR107,. + 0
 13022              	_ZZ14Update_ButtonsvE11buttonstate:
 13023 0000 00000000 		.space	4
 13024              		.section	.bss._ZZ14Update_ButtonsvE9resetTime,"aw",%nobits
 13025              		.align	2
 13026              		.set	.LANCHOR108,. + 0
 13029              	_ZZ14Update_ButtonsvE9resetTime:
 13030 0000 00000000 		.space	4
 13031              		.section	.bss._ZZ14Update_ButtonsvE9shiftTime,"aw",%nobits
 13032              		.align	2
 13033              		.set	.LANCHOR109,. + 0
 13036              	_ZZ14Update_ButtonsvE9shiftTime:
 13037 0000 00000000 		.space	4
 13038              		.section	.bss._ZZ16Update_feedbackLvE12HPCutoff_new,"aw",%nobits
 13039              		.align	2
 13040              		.set	.LANCHOR33,. + 0
 13043              	_ZZ16Update_feedbackLvE12HPCutoff_new:
 13044 0000 00000000 		.space	4
 13045              		.section	.bss._ZZ16Update_feedbackLvE13feedbackL_new,"aw",%nobits
 13046              		.align	2
 13047              		.set	.LANCHOR29,. + 0
 13050              	_ZZ16Update_feedbackLvE13feedbackL_new:
 13051 0000 00000000 		.space	4
 13052              		.section	.bss._ZZ16Update_feedbackLvE14feedbackL_Last,"aw",%nobits
 13053              		.align	2
 13054              		.set	.LANCHOR30,. + 0
 13057              	_ZZ16Update_feedbackLvE14feedbackL_Last:
 13058 0000 00000000 		.space	4
 13059              		.section	.bss._ZZ16Update_feedbackLvE15HPCutoff_pickup,"aw",%nobits
 13060              		.set	.LANCHOR32,. + 0
 13063              	_ZZ16Update_feedbackLvE15HPCutoff_pickup:
 13064 0000 00       		.space	1
 13065              		.section	.bss._ZZ16Update_feedbackLvE16feedbackL_pickup,"aw",%nobits
 13066              		.set	.LANCHOR28,. + 0
 13069              	_ZZ16Update_feedbackLvE16feedbackL_pickup:
 13070 0000 00       		.space	1
 13071              		.section	.bss._ZZ16Update_feedbackLvE9lastShift,"aw",%nobits
 13072              		.set	.LANCHOR27,. + 0
 13075              	_ZZ16Update_feedbackLvE9lastShift:
 13076 0000 00       		.space	1
 13077              		.section	.bss._ZZ16Update_feedbackRvE12LPCutoff_new,"aw",%nobits
 13078              		.align	2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 385


 13079              		.set	.LANCHOR45,. + 0
 13082              	_ZZ16Update_feedbackRvE12LPCutoff_new:
 13083 0000 00000000 		.space	4
 13084              		.section	.bss._ZZ16Update_feedbackRvE13feedbackR_new,"aw",%nobits
 13085              		.align	2
 13086              		.set	.LANCHOR42,. + 0
 13089              	_ZZ16Update_feedbackRvE13feedbackR_new:
 13090 0000 00000000 		.space	4
 13091              		.section	.bss._ZZ16Update_feedbackRvE14feedbackR_Last,"aw",%nobits
 13092              		.align	2
 13093              		.set	.LANCHOR41,. + 0
 13096              	_ZZ16Update_feedbackRvE14feedbackR_Last:
 13097 0000 00000000 		.space	4
 13098              		.section	.bss._ZZ16Update_feedbackRvE15LPCutoff_pickup,"aw",%nobits
 13099              		.set	.LANCHOR44,. + 0
 13102              	_ZZ16Update_feedbackRvE15LPCutoff_pickup:
 13103 0000 00       		.space	1
 13104              		.section	.bss._ZZ16Update_feedbackRvE16feedbackR_pickup,"aw",%nobits
 13105              		.set	.LANCHOR40,. + 0
 13108              	_ZZ16Update_feedbackRvE16feedbackR_pickup:
 13109 0000 00       		.space	1
 13110              		.section	.bss._ZZ16Update_feedbackRvE9lastShift,"aw",%nobits
 13111              		.set	.LANCHOR39,. + 0
 13114              	_ZZ16Update_feedbackRvE9lastShift:
 13115 0000 00       		.space	1
 13116              		.section	.bss._ZZ17Update_DelayTimeLvE14delayTimeL_new,"aw",%nobits
 13117              		.align	2
 13118              		.set	.LANCHOR10,. + 0
 13121              	_ZZ17Update_DelayTimeLvE14delayTimeL_new:
 13122 0000 00000000 		.space	4
 13123              		.section	.bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last,"aw",%nobits
 13124              		.align	2
 13125              		.set	.LANCHOR11,. + 0
 13128              	_ZZ17Update_DelayTimeLvE15delayTimeL_Last:
 13129 0000 00000000 		.space	4
 13130              		.section	.bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new,"aw",%nobits
 13131              		.align	2
 13132              		.set	.LANCHOR15,. + 0
 13135              	_ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:
 13136 0000 00000000 		.space	4
 13137              		.section	.bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup,"aw",%nobits
 13138              		.set	.LANCHOR9,. + 0
 13141              	_ZZ17Update_DelayTimeLvE17delayTimeL_pickup:
 13142 0000 00       		.space	1
 13143              		.section	.bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup,"aw",%nobits
 13144              		.set	.LANCHOR14,. + 0
 13147              	_ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:
 13148 0000 00       		.space	1
 13149              		.section	.bss._ZZ17Update_DelayTimeLvE8counterL,"aw",%nobits
 13150              		.align	2
 13151              		.set	.LANCHOR6,. + 0
 13154              	_ZZ17Update_DelayTimeLvE8counterL:
 13155 0000 00000000 		.space	4
 13156              		.section	.bss._ZZ17Update_DelayTimeLvE9lastShift,"aw",%nobits
 13157              		.set	.LANCHOR8,. + 0
 13160              	_ZZ17Update_DelayTimeLvE9lastShift:
 13161 0000 00       		.space	1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 386


 13162              		.section	.bss._ZZ17Update_DelayTimeRvE12tapRatio_new,"aw",%nobits
 13163              		.align	2
 13164              		.set	.LANCHOR24,. + 0
 13167              	_ZZ17Update_DelayTimeRvE12tapRatio_new:
 13168 0000 00000000 		.space	4
 13169              		.section	.bss._ZZ17Update_DelayTimeRvE14delayTimeR_new,"aw",%nobits
 13170              		.align	2
 13171              		.set	.LANCHOR21,. + 0
 13174              	_ZZ17Update_DelayTimeRvE14delayTimeR_new:
 13175 0000 00000000 		.space	4
 13176              		.section	.bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last,"aw",%nobits
 13177              		.align	2
 13178              		.set	.LANCHOR22,. + 0
 13181              	_ZZ17Update_DelayTimeRvE15delayTimeR_Last:
 13182 0000 00000000 		.space	4
 13183              		.section	.bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup,"aw",%nobits
 13184              		.set	.LANCHOR23,. + 0
 13187              	_ZZ17Update_DelayTimeRvE15tapRatio_pickup:
 13188 0000 00       		.space	1
 13189              		.section	.bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup,"aw",%nobits
 13190              		.set	.LANCHOR20,. + 0
 13193              	_ZZ17Update_DelayTimeRvE17delayTimeR_pickup:
 13194 0000 00       		.space	1
 13195              		.section	.bss._ZZ17Update_DelayTimeRvE8counterR,"aw",%nobits
 13196              		.align	2
 13197              		.set	.LANCHOR18,. + 0
 13200              	_ZZ17Update_DelayTimeRvE8counterR:
 13201 0000 00000000 		.space	4
 13202              		.section	.bss._ZZ17Update_DelayTimeRvE9lastShift,"aw",%nobits
 13203              		.set	.LANCHOR19,. + 0
 13206              	_ZZ17Update_DelayTimeRvE9lastShift:
 13207 0000 00       		.space	1
 13208              		.section	.bss._ZZ18Update_filterXfadevE15PostFilters_new,"aw",%nobits
 13209              		.align	2
 13210              		.set	.LANCHOR81,. + 0
 13213              	_ZZ18Update_filterXfadevE15PostFilters_new:
 13214 0000 00000000 		.space	4
 13215              		.section	.bss._ZZ18Update_filterXfadevE15filterXfade_new,"aw",%nobits
 13216              		.align	2
 13217              		.set	.LANCHOR78,. + 0
 13220              	_ZZ18Update_filterXfadevE15filterXfade_new:
 13221 0000 00000000 		.space	4
 13222              		.section	.bss._ZZ18Update_filterXfadevE16filterXfade_last,"aw",%nobits
 13223              		.align	2
 13224              		.set	.LANCHOR83,. + 0
 13227              	_ZZ18Update_filterXfadevE16filterXfade_last:
 13228 0000 00000000 		.space	4
 13229              		.section	.bss._ZZ18Update_filterXfadevE18PostFilters_pickup,"aw",%nobits
 13230              		.set	.LANCHOR80,. + 0
 13233              	_ZZ18Update_filterXfadevE18PostFilters_pickup:
 13234 0000 00       		.space	1
 13235              		.section	.bss._ZZ18Update_filterXfadevE18filterXfade_pickup,"aw",%nobits
 13236              		.set	.LANCHOR77,. + 0
 13239              	_ZZ18Update_filterXfadevE18filterXfade_pickup:
 13240 0000 00       		.space	1
 13241              		.section	.bss._ZZ18Update_filterXfadevE9lastShift,"aw",%nobits
 13242              		.set	.LANCHOR76,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 387


 13245              	_ZZ18Update_filterXfadevE9lastShift:
 13246 0000 00       		.space	1
 13247              		.section	.bss._ZZ19Update_BaseTempoLEDvE12phaseCounter,"aw",%nobits
 13248              		.align	2
 13249              		.set	.LANCHOR89,. + 0
 13252              	_ZZ19Update_BaseTempoLEDvE12phaseCounter:
 13253 0000 00000000 		.space	4
 13254              		.section	.bss._ZZ20Update_crossfeedbackvE11modRate_new,"aw",%nobits
 13255              		.align	2
 13256              		.set	.LANCHOR73,. + 0
 13259              	_ZZ20Update_crossfeedbackvE11modRate_new:
 13260 0000 00000000 		.space	4
 13261              		.section	.bss._ZZ20Update_crossfeedbackvE14modRate_pickup,"aw",%nobits
 13262              		.set	.LANCHOR72,. + 0
 13265              	_ZZ20Update_crossfeedbackvE14modRate_pickup:
 13266 0000 00       		.space	1
 13267              		.section	.bss._ZZ20Update_crossfeedbackvE17crossfeedback_new,"aw",%nobits
 13268              		.align	2
 13269              		.set	.LANCHOR70,. + 0
 13272              	_ZZ20Update_crossfeedbackvE17crossfeedback_new:
 13273 0000 00000000 		.space	4
 13274              		.section	.bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last,"aw",%nobits
 13275              		.align	2
 13276              		.set	.LANCHOR74,. + 0
 13279              	_ZZ20Update_crossfeedbackvE18crossfeedback_Last:
 13280 0000 00000000 		.space	4
 13281              		.section	.bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup,"aw",%nobits
 13282              		.set	.LANCHOR69,. + 0
 13285              	_ZZ20Update_crossfeedbackvE20crossfeedback_pickup:
 13286 0000 00       		.space	1
 13287              		.section	.bss._ZZ20Update_crossfeedbackvE9lastShift,"aw",%nobits
 13288              		.set	.LANCHOR68,. + 0
 13291              	_ZZ20Update_crossfeedbackvE9lastShift:
 13292 0000 00       		.space	1
 13293              		.section	.bss._ZZL13AudioCallbackPfS_jE6LNegFB,"aw",%nobits
 13294              		.align	2
 13295              		.set	.LANCHOR125,. + 0
 13298              	_ZZL13AudioCallbackPfS_jE6LNegFB:
 13299 0000 00000000 		.space	4
 13300              		.section	.bss._ZZL13AudioCallbackPfS_jE6RNegFB,"aw",%nobits
 13301              		.align	2
 13302              		.set	.LANCHOR126,. + 0
 13305              	_ZZL13AudioCallbackPfS_jE6RNegFB:
 13306 0000 00000000 		.space	4
 13307              		.section	.bss._ZZL13AudioCallbackPfS_jE7Counter,"aw",%nobits
 13308              		.align	2
 13309              		.set	.LANCHOR111,. + 0
 13312              	_ZZL13AudioCallbackPfS_jE7Counter:
 13313 0000 00000000 		.space	4
 13314              		.section	.bss.crossfeedback,"aw",%nobits
 13315              		.align	2
 13316              		.set	.LANCHOR71,. + 0
 13319              	crossfeedback:
 13320 0000 00000000 		.space	4
 13321              		.section	.bss.crossfeedback_CV,"aw",%nobits
 13322              		.align	2
 13325              	crossfeedback_CV:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 388


 13326 0000 00000000 		.space	4
 13327              		.section	.bss.delayL,"aw",%nobits
 13328              		.align	2
 13329              		.set	.LANCHOR0,. + 0
 13332              	delayL:
 13333 0000 00000000 		.space	292
 13333      00000000 
 13333      00000000 
 13333      00000000 
 13333      00000000 
 13334              		.section	.bss.delayR,"aw",%nobits
 13335              		.align	2
 13336              		.set	.LANCHOR1,. + 0
 13339              	delayR:
 13340 0000 00000000 		.space	292
 13340      00000000 
 13340      00000000 
 13340      00000000 
 13340      00000000 
 13341              		.section	.bss.delayTimeL_CV,"aw",%nobits
 13342              		.align	2
 13343              		.set	.LANCHOR5,. + 0
 13346              	delayTimeL_CV:
 13347 0000 00000000 		.space	4
 13348              		.section	.bss.delayTimeR_CV,"aw",%nobits
 13349              		.align	2
 13350              		.set	.LANCHOR17,. + 0
 13353              	delayTimeR_CV:
 13354 0000 00000000 		.space	4
 13355              		.section	.bss.delaysL_REV,"aw",%nobits
 13356              		.align	2
 13357              		.set	.LANCHOR2,. + 0
 13360              	delaysL_REV:
 13361 0000 00000000 		.space	8
 13361      00000000 
 13362              		.section	.bss.delaysR_REV,"aw",%nobits
 13363              		.align	2
 13364              		.set	.LANCHOR3,. + 0
 13367              	delaysR_REV:
 13368 0000 00000000 		.space	8
 13368      00000000 
 13369              		.section	.bss.div_L,"aw",%nobits
 13372              	div_L:
 13373 0000 00       		.space	1
 13374              		.section	.bss.div_R,"aw",%nobits
 13377              	div_R:
 13378 0000 00       		.space	1
 13379              		.section	.bss.drywet_CV,"aw",%nobits
 13380              		.align	2
 13381              		.set	.LANCHOR50,. + 0
 13384              	drywet_CV:
 13385 0000 00000000 		.space	4
 13386              		.section	.bss.feedbackL,"aw",%nobits
 13387              		.align	2
 13388              		.set	.LANCHOR31,. + 0
 13391              	feedbackL:
 13392 0000 00000000 		.space	4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 389


 13393              		.section	.bss.feedbackL_CV,"aw",%nobits
 13394              		.align	2
 13395              		.set	.LANCHOR26,. + 0
 13398              	feedbackL_CV:
 13399 0000 00000000 		.space	4
 13400              		.section	.bss.feedbackR,"aw",%nobits
 13401              		.align	2
 13402              		.set	.LANCHOR43,. + 0
 13405              	feedbackR:
 13406 0000 00000000 		.space	4
 13407              		.section	.bss.feedbackR_CV,"aw",%nobits
 13408              		.align	2
 13409              		.set	.LANCHOR38,. + 0
 13412              	feedbackR_CV:
 13413 0000 00000000 		.space	4
 13414              		.section	.bss.filterXfade,"aw",%nobits
 13415              		.align	2
 13416              		.set	.LANCHOR79,. + 0
 13419              	filterXfade:
 13420 0000 00000000 		.space	4
 13421              		.section	.bss.modulation_CV_Raw,"aw",%nobits
 13422              		.align	2
 13423              		.set	.LANCHOR84,. + 0
 13426              	modulation_CV_Raw:
 13427 0000 00000000 		.space	4
 13428              		.section	.bss.mute,"aw",%nobits
 13429              		.set	.LANCHOR110,. + 0
 13432              	mute:
 13433 0000 00       		.space	1
 13434              		.section	.bss.save_flag,"aw",%nobits
 13435              		.align	2
 13436              		.set	.LANCHOR112,. + 0
 13439              	save_flag:
 13440 0000 00       		.space	1
 13441              		.section	.bss.shift,"aw",%nobits
 13442              		.set	.LANCHOR7,. + 0
 13445              	shift:
 13446 0000 00       		.space	1
 13447              		.section	.bss.syncMode,"aw",%nobits
 13448              		.set	.LANCHOR13,. + 0
 13451              	syncMode:
 13452 0000 00       		.space	1
 13453              		.section	.bss.tempoLED_BASE,"aw",%nobits
 13454              		.align	2
 13455              		.set	.LANCHOR88,. + 0
 13458              	tempoLED_BASE:
 13459 0000 00000000 		.space	72
 13459      00000000 
 13459      00000000 
 13459      00000000 
 13459      00000000 
 13460              		.section	.bss.width_CV,"aw",%nobits
 13461              		.align	2
 13462              		.set	.LANCHOR58,. + 0
 13465              	width_CV:
 13466 0000 00000000 		.space	4
 13467              		.section	.data.drywet,"aw"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 390


 13468              		.align	2
 13469              		.set	.LANCHOR55,. + 0
 13472              	drywet:
 13473 0000 0000003F 		.word	1056964608
 13474              		.section	.data.width,"aw"
 13475              		.align	2
 13476              		.set	.LANCHOR63,. + 0
 13479              	width:
 13480 0000 0000803F 		.word	1065353216
 13481              		.section	.rodata.CSWTCH.351,"a"
 13482              		.align	2
 13483              		.set	.LANCHOR25,. + 0
 13486              	CSWTCH.351:
 13487 0000 0000C03F 		.word	1069547520
 13488 0004 00000040 		.word	1073741824
 13489 0008 00004040 		.word	1077936128
 13490              		.section	.rodata._ZL18defaultAltControls,"a"
 13491              		.align	2
 13492              		.set	.LANCHOR106,. + 0
 13495              	_ZL18defaultAltControls:
 13496 0000 00650148 		.word	1208050944
 13497 0004 0000803F 		.word	1065353216
 13498 0008 00000000 		.word	0
 13499 000c 9A99A140 		.word	1084332442
 13500 0010 00004843 		.word	1128792064
 13501 0014 00803B46 		.word	1178304512
 13502 0018 00000000 		.word	0
 13503 001c 00000000 		.word	0
 13504              		.section	.sdram_bss,"aw"
 13505              		.align	2
 13508              	delMemsR_REV:
 13509 0000 00000000 		.space	2400040
 13509      00000000 
 13509      00000000 
 13509      00000000 
 13509      00000000 
 13512              	delMemsL_REV:
 13513 249f28 00000000 		.space	2400040
 13513      00000000 
 13513      00000000 
 13513      00000000 
 13513      00000000 
 13516              	delMemsR:
 13517 493e50 00000000 		.space	6912136
 13517      00000000 
 13517      00000000 
 13517      00000000 
 13517      00000000 
 13520              	delMemsL:
 13521 b2b6d8 00000000 		.space	6912136
 13521      00000000 
 13521      00000000 
 13521      00000000 
 13521      00000000 
 13522              		.text
 13523              	.Letext0:
 13524              		.file 28 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 391


 13525              		.file 29 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdin
 13526              		.file 30 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdint.h"
 13527              		.file 31 "../libdaisy/Drivers/CMSIS/Include/core_cm7.h"
 13528              		.file 32 "../libdaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 13529              		.file 33 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 13530              		.file 34 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13531              		.file 35 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13532              		.file 36 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13533              		.file 37 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13534              		.file 38 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13535              		.file 39 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13536              		.file 40 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13537              		.file 41 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13538              		.file 42 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13539              		.file 43 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13540              		.file 44 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13541              		.file 45 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13542              		.file 46 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13543              		.file 47 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13544              		.file 48 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13545              		.file 49 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13546              		.file 50 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13547              		.file 51 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13548              		.file 52 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13549              		.file 53 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13550              		.file 54 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13551              		.file 55 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock.h
 13552              		.file 56 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_types
 13553              		.file 57 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reent.
 13554              		.file 58 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
 13555              		.file 59 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdlib.h"
 13556              		.file 60 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13557              		.file 61 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 13558              		.file 62 "../libdaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 13559              		.file 63 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 13560              		.file 64 "../libdaisy/src/daisy_core.h"
 13561              		.file 65 "../libdaisy/src/per/tim.h"
 13562              		.file 66 "../libdaisy/src/per/sai.h"
 13563              		.file 67 "../libdaisy/src/util/wav_format.h"
 13564              		.file 68 "../libdaisy/src/per/qspi.h"
 13565              		.file 69 "../libdaisy/src/per/gpio.h"
 13566              		.file 70 "../libdaisy/src/dev/sdram.h"
 13567              		.file 71 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 13568              		.file 72 "<built-in>"
 13569              		.file 73 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdio.h"
 13570              		.file 74 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/unistd
 13571              		.file 75 "../libdaisy/src/util/oled_fonts.h"
 13572              		.file 76 "../libdaisy/Middlewares/Third_Party/FatFs/src/integer.h"
 13573              		.file 77 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff.h"
 13574              		.file 78 "../libdaisy/Middlewares/Third_Party/FatFs/src/diskio.h"
 13575              		.file 79 "../libdaisy/Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 13576              		.file 80 "../libdaisy/src/util/sd_diskio.h"
 13577              		.file 81 "../libdaisy/src/sys/fatfs.h"
 13578              		.file 82 "../DaisySP/Source/Control/adenv.h"
 13579              		.file 83 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/wchar.h"
 13580              		.file 84 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/locale.h"
 13581              		.file 85 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/ctype.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 392


 13582              		.file 86 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/errno.
 13583              		.file 87 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/string.h"
 13584              		.file 88 "QSPI_Settings.h"
 13585              		.file 89 "scale.h"
 13586              		.file 90 "constants.h"
 13587              		.file 91 "../libdaisy/src/dev/sr_595.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 393


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Veno-Echo.cpp
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:17     .text._ZN5daisy6SwitchD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:43     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:51     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:92     .text._ZN7daisysp4AdsrD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:100    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:100    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:117    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:125    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:125    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:142    .text._ZN7daisysp3SvfD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:150    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:150    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:167    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:175    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:175    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:192    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:200    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 _ZN7daisysp7DcBlockD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:200    .text._ZN7daisysp7DcBlockD2Ev:0000000000000000 _ZN7daisysp7DcBlockD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:217    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:242    .text._ZN8TaptempoD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:267    .text._ZN8TempoLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:304    .text._ZN9ButtonLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:312    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:312    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:338    .text._ZN10DelayMultiD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:346    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:346    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:377    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:385    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:385    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:402    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:410    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:410    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:427    .text._Z10InitDelaysf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:435    .text._Z10InitDelaysf:0000000000000000 _Z10InitDelaysf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:987    .text._Z10InitDelaysf:0000000000000178 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13520  .sdram_bss:0000000000b2b6d8 delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13516  .sdram_bss:0000000000493e50 delMemsR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13512  .sdram_bss:0000000000249f28 delMemsL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13508  .sdram_bss:0000000000000000 delMemsR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:1012   .text._Z20Update_DelayTimeL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:1020   .text._Z20Update_DelayTimeL_CVv:0000000000000000 _Z20Update_DelayTimeL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:1045   .text._Z20Update_DelayTimeL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:1051   .text._Z17Update_DelayTimeLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:1059   .text._Z17Update_DelayTimeLv:0000000000000000 _Z17Update_DelayTimeLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:1634   .text._Z17Update_DelayTimeLv:00000000000001ec $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 394


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:1664   .text._Z20Update_DelayTimeR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:1672   .text._Z20Update_DelayTimeR_CVv:0000000000000000 _Z20Update_DelayTimeR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:1697   .text._Z20Update_DelayTimeR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:1703   .text._Z17Update_DelayTimeRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:1711   .text._Z17Update_DelayTimeRv:0000000000000000 _Z17Update_DelayTimeRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:2169   .text._Z17Update_DelayTimeRv:00000000000001a0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:2195   .text._Z19Update_feedbackL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:2203   .text._Z19Update_feedbackL_CVv:0000000000000000 _Z19Update_feedbackL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:2228   .text._Z19Update_feedbackL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:2234   .text._Z16Update_feedbackLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:2242   .text._Z16Update_feedbackLv:0000000000000000 _Z16Update_feedbackLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:2660   .text._Z16Update_feedbackLv:0000000000000190 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:2688   .text._Z19Update_feedbackR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:2696   .text._Z19Update_feedbackR_CVv:0000000000000000 _Z19Update_feedbackR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:2721   .text._Z19Update_feedbackR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:2727   .text._Z16Update_feedbackRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:2735   .text._Z16Update_feedbackRv:0000000000000000 _Z16Update_feedbackRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:3157   .text._Z16Update_feedbackRv:000000000000019c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:3185   .text._Z16Update_drywet_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:3193   .text._Z16Update_drywet_CVv:0000000000000000 _Z16Update_drywet_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:3218   .text._Z16Update_drywet_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:3224   .text._Z13Update_drywetv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:3232   .text._Z13Update_drywetv:0000000000000000 _Z13Update_drywetv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:3704   .text._Z13Update_drywetv:00000000000001f0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:3740   .text._Z15Update_width_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:3748   .text._Z15Update_width_CVv:0000000000000000 _Z15Update_width_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:3773   .text._Z15Update_width_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:3779   .text._Z12Update_widthv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:3787   .text._Z12Update_widthv:0000000000000000 _Z12Update_widthv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:4211   .text._Z12Update_widthv:0000000000000180 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:4236   .text._Z20Update_crossfeedbackv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:4244   .text._Z20Update_crossfeedbackv:0000000000000000 _Z20Update_crossfeedbackv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:4570   .text._Z20Update_crossfeedbackv:000000000000010c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:4589   .text._Z18Update_filterXfadev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:4597   .text._Z18Update_filterXfadev:0000000000000000 _Z18Update_filterXfadev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:4895   .text._Z18Update_filterXfadev:0000000000000110 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:4917   .text._Z8GetModCVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:4925   .text._Z8GetModCVv:0000000000000000 _Z8GetModCVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:4955   .text._Z8GetModCVv:0000000000000020 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:4963   .text._Z10Update_Modv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:4971   .text._Z10Update_Modv:0000000000000000 _Z10Update_Modv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:5128   .text._Z10Update_Modv:0000000000000058 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:5140   .text._Z11UpdateClockv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:5148   .text._Z11UpdateClockv:0000000000000000 _Z11UpdateClockv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:5211   .text._Z11UpdateClockv:000000000000002c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:5220   .text._Z21Update_DelayTempoLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:5228   .text._Z21Update_DelayTempoLEDsv:0000000000000000 _Z21Update_DelayTempoLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:5261   .text._Z21Update_DelayTempoLEDsv:0000000000000018 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:5268   .text._Z19Update_BaseTempoLEDv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:5276   .text._Z19Update_BaseTempoLEDv:0000000000000000 _Z19Update_BaseTempoLEDv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:5394   .text._Z19Update_BaseTempoLEDv:000000000000005c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:5404   .text._Z13ApplySettingsRK8Settings:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:5412   .text._Z13ApplySettingsRK8Settings:0000000000000000 _Z13ApplySettingsRK8Settings
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:6109   .text._Z13ApplySettingsRK8Settings:0000000000000340 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:6148   .text.startup.main:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:6156   .text.startup.main:0000000000000000 main
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:7028   .text.startup.main:0000000000000344 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 395


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:7060   .text.startup.main:00000000000003b8 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:7424   .text.startup.main:00000000000005a0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:8070   .text._ZL13AudioCallbackPfS_j:0000000000000000 _ZL13AudioCallbackPfS_j
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:7442   .text._Z13TurnOnAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:7450   .text._Z13TurnOnAllLEDsv:0000000000000000 _Z13TurnOnAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:7512   .text._Z13TurnOnAllLEDsv:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:7523   .text._Z12ResetAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:7531   .text._Z12ResetAllLEDsv:0000000000000000 _Z12ResetAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:7634   .text._Z12ResetAllLEDsv:000000000000007c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:7646   .text._Z14Update_Buttonsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:7654   .text._Z14Update_Buttonsv:0000000000000000 _Z14Update_Buttonsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:8040   .text._Z14Update_Buttonsv:0000000000000190 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:8063   .text._ZL13AudioCallbackPfS_j:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:8182   .text._ZL13AudioCallbackPfS_j:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:8197   .text._ZL13AudioCallbackPfS_j:000000000000006a $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:8226   .text._ZL13AudioCallbackPfS_j:0000000000000090 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:8237   .text._ZL13AudioCallbackPfS_j:00000000000000a4 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:9373   .text._ZL13AudioCallbackPfS_j:0000000000000418 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:9429   .text._ZL13AudioCallbackPfS_j:00000000000004c8 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:10055  .text._ZL13AudioCallbackPfS_j:00000000000007a0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:10077  .text._ZL13AudioCallbackPfS_j:00000000000007e8 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:10832  .text._ZL13AudioCallbackPfS_j:0000000000000b44 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:10869  .text._ZL13AudioCallbackPfS_j:0000000000000bac $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:11198  .text._ZL13AudioCallbackPfS_j:0000000000000ca8 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:11209  .text._Z9HardLimitff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:11217  .text._Z9HardLimitff:0000000000000000 _Z9HardLimitff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:11251  .text._Z10PotCVComboff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:11259  .text._Z10PotCVComboff:0000000000000000 _Z10PotCVComboff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:11306  .text._Z10PotCVComboff:0000000000000038 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:11311  .text._Z16checkPickupStateffbb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:11319  .text._Z16checkPickupStateffbb:0000000000000000 _Z16checkPickupStateffbb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:11403  .text._Z16checkPickupStateffbb:000000000000003c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:11408  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:11416  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 _Z20checkPickupState_altff11pickupStateb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:11506  .text._Z20checkPickupState_altff11pickupStateb:000000000000006c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:11511  .text._Z11GetTapRatio9TapRatios:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:11519  .text._Z11GetTapRatio9TapRatios:0000000000000000 _Z11GetTapRatio9TapRatios
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:11549  .text._Z11GetTapRatio9TapRatios:000000000000001c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:11554  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:11561  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 _GLOBAL__sub_I_delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12480  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000260 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12554  .init_array:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12604  .bss.AltControls:0000000000000000 AltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12611  .bss.BaseTempo:0000000000000000 BaseTempo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12618  .bss.ClockIn:0000000000000000 ClockIn
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12685  .bss.Sync:0000000000000000 Sync
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12678  .bss.ReverseGateR:0000000000000000 ReverseGateR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12671  .bss.ReverseGateL:0000000000000000 ReverseGateL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13439  .bss.save_flag:0000000000000000 save_flag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12650  .bss.PostFilters:0000000000000000 PostFilters
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12623  .bss.ClockInFlag:0000000000000000 ClockInFlag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13432  .bss.mute:0000000000000000 mute
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13445  .bss.shift:0000000000000000 shift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13451  .bss.syncMode:0000000000000000 syncMode
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13426  .bss.modulation_CV_Raw:0000000000000000 modulation_CV_Raw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12644  .bss.ModDepth:0000000000000000 ModDepth
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13377  .bss.div_R:0000000000000000 div_R
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 396


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13372  .bss.div_L:0000000000000000 div_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13419  .bss.filterXfade:0000000000000000 filterXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13465  .bss.width_CV:0000000000000000 width_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13479  .data.width:0000000000000000 width
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13384  .bss.drywet_CV:0000000000000000 drywet_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13472  .data.drywet:0000000000000000 drywet
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13325  .bss.crossfeedback_CV:0000000000000000 crossfeedback_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13319  .bss.crossfeedback:0000000000000000 crossfeedback
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13412  .bss.feedbackR_CV:0000000000000000 feedbackR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13405  .bss.feedbackR:0000000000000000 feedbackR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13398  .bss.feedbackL_CV:0000000000000000 feedbackL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13391  .bss.feedbackL:0000000000000000 feedbackL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13353  .bss.delayTimeR_CV:0000000000000000 delayTimeR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13346  .bss.delayTimeL_CV:0000000000000000 delayTimeL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13458  .bss.tempoLED_BASE:0000000000000000 tempoLED_BASE
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12692  .bss.Tap_Button:0000000000000000 Tap_Button
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12664  .bss.Rev_R_sw:0000000000000000 Rev_R_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12657  .bss.Rev_L_sw:0000000000000000 Rev_L_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12630  .bss.HPF_sw:0000000000000000 HPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12637  .bss.LPF_sw:0000000000000000 LPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13367  .bss.delaysR_REV:0000000000000000 delaysR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13360  .bss.delaysL_REV:0000000000000000 delaysL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13339  .bss.delayR:0000000000000000 delayR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13332  .bss.delayL:0000000000000000 delayL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12600  .bss.AltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12607  .bss.BaseTempo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12614  .bss.ClockIn:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12624  .bss.ClockInFlag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12626  .bss.HPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12633  .bss.LPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12640  .bss.ModDepth:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12651  .bss.PostFilters:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12653  .bss.Rev_L_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12660  .bss.Rev_R_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12667  .bss.ReverseGateL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12674  .bss.ReverseGateR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12681  .bss.Sync:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12688  .bss.Tap_Button:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12695  .bss._ZL10FwdRevLEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12699  .bss._ZL10FwdRevLEnv:0000000000000000 _ZL10FwdRevLEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12702  .bss._ZL10FwdRevREnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12706  .bss._ZL10FwdRevREnv:0000000000000000 _ZL10FwdRevREnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12709  .bss._ZL10HPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12713  .bss._ZL10HPF_LXfade:0000000000000000 _ZL10HPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12716  .bss._ZL10HPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12720  .bss._ZL10HPF_L_post:0000000000000000 _ZL10HPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12723  .bss._ZL10HPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12727  .bss._ZL10HPF_RXfade:0000000000000000 _ZL10HPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12730  .bss._ZL10HPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12734  .bss._ZL10HPF_R_post:0000000000000000 _ZL10HPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12737  .bss._ZL10LPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12741  .bss._ZL10LPF_LXfade:0000000000000000 _ZL10LPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12744  .bss._ZL10LPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12748  .bss._ZL10LPF_L_post:0000000000000000 _ZL10LPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12751  .bss._ZL10LPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12755  .bss._ZL10LPF_RXfade:0000000000000000 _ZL10LPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12758  .bss._ZL10LPF_R_post:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 397


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12762  .bss._ZL10LPF_R_post:0000000000000000 _ZL10LPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12765  .bss._ZL10WidthXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12769  .bss._ZL10WidthXfade:0000000000000000 _ZL10WidthXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12772  .bss._ZL11DcBlock_LFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12776  .bss._ZL11DcBlock_LFB:0000000000000000 _ZL11DcBlock_LFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12779  .bss._ZL11DcBlock_RFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12783  .bss._ZL11DcBlock_RFB:0000000000000000 _ZL11DcBlock_RFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12786  .bss._ZL11FilterMix_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12790  .bss._ZL11FilterMix_L:0000000000000000 _ZL11FilterMix_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12793  .bss._ZL11FilterMix_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12797  .bss._ZL11FilterMix_R:0000000000000000 _ZL11FilterMix_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12800  .bss._ZL12FwdRevLXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12804  .bss._ZL12FwdRevLXfade:0000000000000000 _ZL12FwdRevLXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12807  .bss._ZL12FwdRevRXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12811  .bss._ZL12FwdRevRXfade:0000000000000000 _ZL12FwdRevRXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12814  .bss._ZL15HPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12818  .bss._ZL15HPF_LXfade_post:0000000000000000 _ZL15HPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12821  .bss._ZL15HPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12825  .bss._ZL15HPF_RXfade_post:0000000000000000 _ZL15HPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12828  .bss._ZL15LPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12832  .bss._ZL15LPF_LXfade_post:0000000000000000 _ZL15LPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12835  .bss._ZL15LPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12839  .bss._ZL15LPF_RXfade_post:0000000000000000 _ZL15LPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12842  .bss._ZL16FilterMix_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12846  .bss._ZL16FilterMix_L_post:0000000000000000 _ZL16FilterMix_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12849  .bss._ZL16FilterMix_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12853  .bss._ZL16FilterMix_R_post:0000000000000000 _ZL16FilterMix_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12856  .bss._ZL2hw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12860  .bss._ZL2hw:0000000000000000 _ZL2hw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12863  .bss._ZL3lfo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12867  .bss._ZL3lfo:0000000000000000 _ZL3lfo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12870  .bss._ZL5HPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12874  .bss._ZL5HPF_L:0000000000000000 _ZL5HPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12877  .bss._ZL5HPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12881  .bss._ZL5HPF_R:0000000000000000 _ZL5HPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12884  .bss._ZL5LPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12888  .bss._ZL5LPF_L:0000000000000000 _ZL5LPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12891  .bss._ZL5LPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12895  .bss._ZL5LPF_R:0000000000000000 _ZL5LPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12898  .bss._ZL7HPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12902  .bss._ZL7HPF_Env:0000000000000000 _ZL7HPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12905  .bss._ZL7LPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12909  .bss._ZL7LPF_Env:0000000000000000 _ZL7LPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12912  .bss._ZL7LeftEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12916  .bss._ZL7LeftEnv:0000000000000000 _ZL7LeftEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12919  .bss._ZL8RightEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12923  .bss._ZL8RightEnv:0000000000000000 _ZL8RightEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12926  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12930  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 _ZZ10Update_ModvE13modulation_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12933  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12937  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 _ZZ10Update_ModvE17ModDepth_Filtered
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12940  .bss._ZZ12Update_widthvE10width_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12944  .bss._ZZ12Update_widthvE10width_Last:0000000000000000 _ZZ12Update_widthvE10width_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12947  .bss._ZZ12Update_widthvE12ModDepth_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12951  .bss._ZZ12Update_widthvE12ModDepth_new:0000000000000000 _ZZ12Update_widthvE12ModDepth_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12957  .bss._ZZ12Update_widthvE12width_pickup:0000000000000000 _ZZ12Update_widthvE12width_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12958  .bss._ZZ12Update_widthvE12width_pickup:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 398


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12963  .bss._ZZ12Update_widthvE15ModDepth_pickup:0000000000000000 _ZZ12Update_widthvE15ModDepth_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12964  .bss._ZZ12Update_widthvE15ModDepth_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12969  .bss._ZZ12Update_widthvE9lastShift:0000000000000000 _ZZ12Update_widthvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12970  .bss._ZZ12Update_widthvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12972  .bss._ZZ12Update_widthvE9width_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12976  .bss._ZZ12Update_widthvE9width_new:0000000000000000 _ZZ12Update_widthvE9width_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12982  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 _ZZ13Update_drywetvE10Res_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12983  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12985  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12989  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 _ZZ13Update_drywetvE10drywet_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12992  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:12996  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 _ZZ13Update_drywetvE11drywet_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13002  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 _ZZ13Update_drywetvE13drywet_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13003  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13005  .bss._ZZ13Update_drywetvE7Res_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13009  .bss._ZZ13Update_drywetvE7Res_new:0000000000000000 _ZZ13Update_drywetvE7Res_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13015  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 _ZZ13Update_drywetvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13016  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13018  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13022  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 _ZZ14Update_ButtonsvE11buttonstate
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13025  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13029  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 _ZZ14Update_ButtonsvE9resetTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13032  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13036  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 _ZZ14Update_ButtonsvE9shiftTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13039  .bss._ZZ16Update_feedbackLvE12HPCutoff_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13043  .bss._ZZ16Update_feedbackLvE12HPCutoff_new:0000000000000000 _ZZ16Update_feedbackLvE12HPCutoff_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13046  .bss._ZZ16Update_feedbackLvE13feedbackL_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13050  .bss._ZZ16Update_feedbackLvE13feedbackL_new:0000000000000000 _ZZ16Update_feedbackLvE13feedbackL_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13053  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13057  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 _ZZ16Update_feedbackLvE14feedbackL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13063  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackLvE15HPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13064  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13069  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 _ZZ16Update_feedbackLvE16feedbackL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13070  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13075  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 _ZZ16Update_feedbackLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13076  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13078  .bss._ZZ16Update_feedbackRvE12LPCutoff_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13082  .bss._ZZ16Update_feedbackRvE12LPCutoff_new:0000000000000000 _ZZ16Update_feedbackRvE12LPCutoff_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13085  .bss._ZZ16Update_feedbackRvE13feedbackR_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13089  .bss._ZZ16Update_feedbackRvE13feedbackR_new:0000000000000000 _ZZ16Update_feedbackRvE13feedbackR_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13092  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13096  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 _ZZ16Update_feedbackRvE14feedbackR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13102  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackRvE15LPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13103  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13108  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 _ZZ16Update_feedbackRvE16feedbackR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13109  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13114  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 _ZZ16Update_feedbackRvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13115  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13117  .bss._ZZ17Update_DelayTimeLvE14delayTimeL_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13121  .bss._ZZ17Update_DelayTimeLvE14delayTimeL_new:0000000000000000 _ZZ17Update_DelayTimeLvE14delayTimeL_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13124  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13128  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 _ZZ17Update_DelayTimeLvE15delayTimeL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13131  .bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13135  .bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:0000000000000000 _ZZ17Update_DelayTimeLvE17Rev_DelayTime_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13141  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE17delayTimeL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13142  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13147  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 399


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13148  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13150  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13154  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 _ZZ17Update_DelayTimeLvE8counterL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13160  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13161  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13163  .bss._ZZ17Update_DelayTimeRvE12tapRatio_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13167  .bss._ZZ17Update_DelayTimeRvE12tapRatio_new:0000000000000000 _ZZ17Update_DelayTimeRvE12tapRatio_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13170  .bss._ZZ17Update_DelayTimeRvE14delayTimeR_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13174  .bss._ZZ17Update_DelayTimeRvE14delayTimeR_new:0000000000000000 _ZZ17Update_DelayTimeRvE14delayTimeR_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13177  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13181  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 _ZZ17Update_DelayTimeRvE15delayTimeR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13187  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE15tapRatio_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13188  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13193  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE17delayTimeR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13194  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13196  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13200  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 _ZZ17Update_DelayTimeRvE8counterR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13206  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeRvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13207  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13209  .bss._ZZ18Update_filterXfadevE15PostFilters_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13213  .bss._ZZ18Update_filterXfadevE15PostFilters_new:0000000000000000 _ZZ18Update_filterXfadevE15PostFilters_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13216  .bss._ZZ18Update_filterXfadevE15filterXfade_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13220  .bss._ZZ18Update_filterXfadevE15filterXfade_new:0000000000000000 _ZZ18Update_filterXfadevE15filterXfade_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13223  .bss._ZZ18Update_filterXfadevE16filterXfade_last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13227  .bss._ZZ18Update_filterXfadevE16filterXfade_last:0000000000000000 _ZZ18Update_filterXfadevE16filterXfade_last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13233  .bss._ZZ18Update_filterXfadevE18PostFilters_pickup:0000000000000000 _ZZ18Update_filterXfadevE18PostFilters_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13234  .bss._ZZ18Update_filterXfadevE18PostFilters_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13239  .bss._ZZ18Update_filterXfadevE18filterXfade_pickup:0000000000000000 _ZZ18Update_filterXfadevE18filterXfade_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13240  .bss._ZZ18Update_filterXfadevE18filterXfade_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13245  .bss._ZZ18Update_filterXfadevE9lastShift:0000000000000000 _ZZ18Update_filterXfadevE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13246  .bss._ZZ18Update_filterXfadevE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13248  .bss._ZZ19Update_BaseTempoLEDvE12phaseCounter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13252  .bss._ZZ19Update_BaseTempoLEDvE12phaseCounter:0000000000000000 _ZZ19Update_BaseTempoLEDvE12phaseCounter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13255  .bss._ZZ20Update_crossfeedbackvE11modRate_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13259  .bss._ZZ20Update_crossfeedbackvE11modRate_new:0000000000000000 _ZZ20Update_crossfeedbackvE11modRate_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13265  .bss._ZZ20Update_crossfeedbackvE14modRate_pickup:0000000000000000 _ZZ20Update_crossfeedbackvE14modRate_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13266  .bss._ZZ20Update_crossfeedbackvE14modRate_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13268  .bss._ZZ20Update_crossfeedbackvE17crossfeedback_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13272  .bss._ZZ20Update_crossfeedbackvE17crossfeedback_new:0000000000000000 _ZZ20Update_crossfeedbackvE17crossfeedback_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13275  .bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13279  .bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last:0000000000000000 _ZZ20Update_crossfeedbackvE18crossfeedback_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13285  .bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup:0000000000000000 _ZZ20Update_crossfeedbackvE20crossfeedback_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13286  .bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13291  .bss._ZZ20Update_crossfeedbackvE9lastShift:0000000000000000 _ZZ20Update_crossfeedbackvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13292  .bss._ZZ20Update_crossfeedbackvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13294  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13298  .bss._ZZL13AudioCallbackPfS_jE6LNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6LNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13301  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13305  .bss._ZZL13AudioCallbackPfS_jE6RNegFB:0000000000000000 _ZZL13AudioCallbackPfS_jE6RNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13308  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13312  .bss._ZZL13AudioCallbackPfS_jE7Counter:0000000000000000 _ZZL13AudioCallbackPfS_jE7Counter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13315  .bss.crossfeedback:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13322  .bss.crossfeedback_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13328  .bss.delayL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13335  .bss.delayR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13342  .bss.delayTimeL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13349  .bss.delayTimeR_CV:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 400


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13356  .bss.delaysL_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13363  .bss.delaysR_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13373  .bss.div_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13378  .bss.div_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13380  .bss.drywet_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13387  .bss.feedbackL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13394  .bss.feedbackL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13401  .bss.feedbackR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13408  .bss.feedbackR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13415  .bss.filterXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13422  .bss.modulation_CV_Raw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13433  .bss.mute:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13435  .bss.save_flag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13446  .bss.shift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13452  .bss.syncMode:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13454  .bss.tempoLED_BASE:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13461  .bss.width_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13468  .data.drywet:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13475  .data.width:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13482  .rodata.CSWTCH.351:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13486  .rodata.CSWTCH.351:0000000000000000 CSWTCH.351
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13491  .rodata._ZL18defaultAltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13495  .rodata._ZL18defaultAltControls:0000000000000000 _ZL18defaultAltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s:13505  .sdram_bss:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy6SwitchD5Ev
                           .group:0000000000000000 _ZN5daisy9DaisySeedD5Ev
                           .group:0000000000000000 _ZN7daisysp4AdsrD5Ev
                           .group:0000000000000000 _ZN7daisysp10OscillatorD5Ev
                           .group:0000000000000000 _ZN7daisysp3SvfD5Ev
                           .group:0000000000000000 _ZN7daisysp9CrossFadeD5Ev
                           .group:0000000000000000 _ZN7daisysp7DcBlockD5Ev
                           .group:0000000000000000 _ZN7daisysp9EnvFollowD5Ev
                           .group:0000000000000000 _ZN8TaptempoD5Ev
                           .group:0000000000000000 _ZN8TempoLEDD5Ev
                           .group:0000000000000000 _ZN9ButtonLEDD5Ev
                           .group:0000000000000000 _ZN10DelayMultiD5Ev
                           .group:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED5Ev
                           .group:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED5Ev

UNDEFINED SYMBOLS
_ZN5daisy9DaisySeed6GetPinEh
_ZN10DelayMulti4initE12dsy_gpio_pinf
_ZNK5daisy9AdcHandle8GetFloatEh
_ZNK5daisy9AdcHandle11GetMuxFloatEhh
_ZN8Taptempo12getTapLengthEv
_ZN10DelayMulti12SetDelayTimeEffb
_Z5scalefff9CurveType
_ZN8Taptempo11setTapRatioEf
_ZN7daisysp3Svf7SetFreqEf
_ZN7daisysp3Svf6SetResEf
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN7daisysp10Oscillator7ProcessEv
_ZN5daisy6Switch8DebounceEv
_ZN8Taptempo3tapEv
_ZN8Taptempo10getTapFreqEv
_ZN8TempoLED8setTempoEf
_ZN10DelayMulti14updateTempoLEDEb
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//cc1ZdaHf.s 			page 401


_ZN8TempoLED6updateEv
_ZN8TempoLED5isEOCEv
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN7daisysp4Adsr4InitEf
_ZN7daisysp3Svf4InitEf
_ZN7daisysp3Svf8SetDriveEf
_ZN7daisysp7DcBlock4InitEf
_ZN8Taptempo4initEiif
_ZN8TempoLED4initE12dsy_gpio_pinf
_ZN8TempoLED10resetPhaseEv
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed10StartAudioEPFvPfS1_jE
_ZN8TempoLED7LED_setEf
_ZN9ButtonLED7LED_setEf
_ZN9ButtonLED8getStateEv
_ZN9ButtonLED6updateEv
_ZN9ButtonLED10RisingEdgeEv
_ZN9ButtonLED11FallingEdgeEv
_ZN5daisy6System6GetNowEv
_ZN9ButtonLED6toggleEv
_ZN7daisysp7DcBlock7ProcessEf
_ZN10DelayMulti5WriteERKf
_ZN7daisysp9CrossFade7ProcessERfS1_
_ZN7daisysp4Adsr7ProcessEb
sinf
_ZN10DelayMulti9GetOutputEv
_ZN7daisysp3Svf7ProcessEf
__aeabi_atexit
__dso_handle
