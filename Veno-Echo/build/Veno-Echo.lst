ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"Veno-Echo.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy6SwitchD2Ev,"axG",%progbits,_ZN5daisy6SwitchD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy6SwitchD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy6SwitchD2Ev:
  27              	.LVL0:
  28              	.LFB1590:
  29              		.file 1 "../libDaisy/src/hid/switch.h"
   1:../libDaisy/src/hid/switch.h **** #pragma once
   2:../libDaisy/src/hid/switch.h **** #ifndef DSY_SWITCH_H
   3:../libDaisy/src/hid/switch.h **** #define DSY_SWITCH_H
   4:../libDaisy/src/hid/switch.h **** #include "daisy_core.h"
   5:../libDaisy/src/hid/switch.h **** #include "per/gpio.h"
   6:../libDaisy/src/hid/switch.h **** #include "sys/system.h"
   7:../libDaisy/src/hid/switch.h **** 
   8:../libDaisy/src/hid/switch.h **** namespace daisy
   9:../libDaisy/src/hid/switch.h **** {
  10:../libDaisy/src/hid/switch.h **** /** 
  11:../libDaisy/src/hid/switch.h ****     Generic Class for handling momentary/latching switches \n 
  12:../libDaisy/src/hid/switch.h ****     Inspired/influenced by Mutable Instruments (pichenettes) Switch classes
  13:../libDaisy/src/hid/switch.h ****     @author Stephen Hensley
  14:../libDaisy/src/hid/switch.h ****     @date December 2019
  15:../libDaisy/src/hid/switch.h ****     @ingroup controls
  16:../libDaisy/src/hid/switch.h **** */
  17:../libDaisy/src/hid/switch.h **** class Switch
  18:../libDaisy/src/hid/switch.h **** {
  19:../libDaisy/src/hid/switch.h ****   public:
  20:../libDaisy/src/hid/switch.h ****     /** Specifies the expected behavior of the switch */
  21:../libDaisy/src/hid/switch.h ****     enum Type
  22:../libDaisy/src/hid/switch.h ****     {
  23:../libDaisy/src/hid/switch.h ****         TYPE_TOGGLE,    /**< & */
  24:../libDaisy/src/hid/switch.h ****         TYPE_MOMENTARY, /**< & */
  25:../libDaisy/src/hid/switch.h ****     };
  26:../libDaisy/src/hid/switch.h ****     /** Specifies whether the pressed is HIGH or LOW. */
  27:../libDaisy/src/hid/switch.h ****     enum Polarity
  28:../libDaisy/src/hid/switch.h ****     {
  29:../libDaisy/src/hid/switch.h ****         POLARITY_NORMAL,   /**< & */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 2


  30:../libDaisy/src/hid/switch.h ****         POLARITY_INVERTED, /**< & */
  31:../libDaisy/src/hid/switch.h ****     };
  32:../libDaisy/src/hid/switch.h **** 
  33:../libDaisy/src/hid/switch.h ****     /** Specifies whether to use built-in Pull Up/Down resistors to hold button at a given state wh
  34:../libDaisy/src/hid/switch.h ****     enum Pull
  35:../libDaisy/src/hid/switch.h ****     {
  36:../libDaisy/src/hid/switch.h ****         PULL_UP,   /**< & */
  37:../libDaisy/src/hid/switch.h ****         PULL_DOWN, /**< & */
  38:../libDaisy/src/hid/switch.h ****         PULL_NONE, /**< & */
  39:../libDaisy/src/hid/switch.h ****     };
  40:../libDaisy/src/hid/switch.h **** 
  41:../libDaisy/src/hid/switch.h ****     Switch() {}
  42:../libDaisy/src/hid/switch.h ****     ~Switch() {}
  30              		.loc 1 42 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              		.loc 1 42 16 is_stmt 0 view .LVU1
  36 0000 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE1590:
  40              		.weak	_ZN5daisy6SwitchD1Ev
  41              		.thumb_set _ZN5daisy6SwitchD1Ev,_ZN5daisy6SwitchD2Ev
  42 0002 00BF     		.section	.text._ZN5daisy6GateInD2Ev,"axG",%progbits,_ZN5daisy6GateInD5Ev,comdat
  43              		.align	1
  44              		.p2align 2,,3
  45              		.weak	_ZN5daisy6GateInD2Ev
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv5-d16
  51              	_ZN5daisy6GateInD2Ev:
  52              	.LVL1:
  53              	.LFB1632:
  54              		.file 2 "../libDaisy/src/hid/gatein.h"
   1:../libDaisy/src/hid/gatein.h **** #pragma once
   2:../libDaisy/src/hid/gatein.h **** #ifndef DSY_GATEIN_H
   3:../libDaisy/src/hid/gatein.h **** #define DSY_GATEIN_H
   4:../libDaisy/src/hid/gatein.h **** #include "per/gpio.h"
   5:../libDaisy/src/hid/gatein.h **** 
   6:../libDaisy/src/hid/gatein.h **** namespace daisy
   7:../libDaisy/src/hid/gatein.h **** {
   8:../libDaisy/src/hid/gatein.h **** /**
   9:../libDaisy/src/hid/gatein.h ****    @brief Generic Class for handling gate inputs through GPIO.
  10:../libDaisy/src/hid/gatein.h ****    @author Stephen Hensley
  11:../libDaisy/src/hid/gatein.h ****    @date    March 2020
  12:../libDaisy/src/hid/gatein.h ****    @ingroup controls
  13:../libDaisy/src/hid/gatein.h **** */
  14:../libDaisy/src/hid/gatein.h **** class GateIn
  15:../libDaisy/src/hid/gatein.h **** {
  16:../libDaisy/src/hid/gatein.h ****   public:
  17:../libDaisy/src/hid/gatein.h ****     /** GateIn 
  18:../libDaisy/src/hid/gatein.h ****     Constructor 
  19:../libDaisy/src/hid/gatein.h ****     */
  20:../libDaisy/src/hid/gatein.h ****     GateIn() {}
  21:../libDaisy/src/hid/gatein.h ****     /** GateIn~
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 3


  22:../libDaisy/src/hid/gatein.h ****     Destructor 
  23:../libDaisy/src/hid/gatein.h ****     */
  24:../libDaisy/src/hid/gatein.h ****     ~GateIn() {}
  55              		.loc 2 24 5 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              		.loc 2 24 16 is_stmt 0 view .LVU3
  61 0000 7047     		bx	lr
  62              		.cfi_endproc
  63              	.LFE1632:
  65              		.weak	_ZN5daisy6GateInD1Ev
  66              		.thumb_set _ZN5daisy6GateInD1Ev,_ZN5daisy6GateInD2Ev
  67 0002 00BF     		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  68              		.align	1
  69              		.p2align 2,,3
  70              		.weak	_ZN5daisy9DaisySeedD2Ev
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu fpv5-d16
  76              	_ZN5daisy9DaisySeedD2Ev:
  77              	.LVL2:
  78              	.LFB2169:
  79              		.file 3 "../libDaisy/src/daisy_seed.h"
   1:../libDaisy/src/daisy_seed.h **** #pragma once
   2:../libDaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../libDaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../libDaisy/src/daisy_seed.h **** 
   5:../libDaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../libDaisy/src/daisy_seed.h **** 
   7:../libDaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../libDaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../libDaisy/src/daisy_seed.h **** 
  10:../libDaisy/src/daisy_seed.h **** namespace daisy
  11:../libDaisy/src/daisy_seed.h **** {
  12:../libDaisy/src/daisy_seed.h **** /**
  13:../libDaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../libDaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../libDaisy/src/daisy_seed.h **** 
  16:../libDaisy/src/daisy_seed.h ****    @ingroup boards
  17:../libDaisy/src/daisy_seed.h **** */
  18:../libDaisy/src/daisy_seed.h **** class DaisySeed
  19:../libDaisy/src/daisy_seed.h **** {
  20:../libDaisy/src/daisy_seed.h ****   public:
  21:../libDaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../libDaisy/src/daisy_seed.h ****     ~DaisySeed() {}
  80              		.loc 3 22 5 is_stmt 1 view -0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LBB887:
  86              	.LBI887:
  87              		.file 4 "../libDaisy/src/sys/system.h"
   1:../libDaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 4


   2:../libDaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../libDaisy/src/sys/system.h **** 
   4:../libDaisy/src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../libDaisy/src/sys/system.h **** 
   6:../libDaisy/src/sys/system.h **** #include <cstdint>
   7:../libDaisy/src/sys/system.h **** #include "per/tim.h"
   8:../libDaisy/src/sys/system.h **** 
   9:../libDaisy/src/sys/system.h **** namespace daisy
  10:../libDaisy/src/sys/system.h **** {
  11:../libDaisy/src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../libDaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../libDaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../libDaisy/src/sys/system.h ****  **
  15:../libDaisy/src/sys/system.h ****  ** @author shensley
  16:../libDaisy/src/sys/system.h ****  ** @ingroup system
  17:../libDaisy/src/sys/system.h ****  */
  18:../libDaisy/src/sys/system.h **** class System
  19:../libDaisy/src/sys/system.h **** {
  20:../libDaisy/src/sys/system.h ****   public:
  21:../libDaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../libDaisy/src/sys/system.h ****     struct Config
  23:../libDaisy/src/sys/system.h ****     {
  24:../libDaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../libDaisy/src/sys/system.h ****         enum class SysClkFreq
  26:../libDaisy/src/sys/system.h ****         {
  27:../libDaisy/src/sys/system.h ****             FREQ_400MHZ,
  28:../libDaisy/src/sys/system.h ****             FREQ_480MHZ,
  29:../libDaisy/src/sys/system.h ****         };
  30:../libDaisy/src/sys/system.h **** 
  31:../libDaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../libDaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../libDaisy/src/sys/system.h ****          ** Cache Enabled 
  34:../libDaisy/src/sys/system.h ****          ** */
  35:../libDaisy/src/sys/system.h ****         void Defaults()
  36:../libDaisy/src/sys/system.h ****         {
  37:../libDaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../libDaisy/src/sys/system.h ****             use_dcache  = true;
  39:../libDaisy/src/sys/system.h ****             use_icache  = true;
  40:../libDaisy/src/sys/system.h ****             skip_clocks = false;
  41:../libDaisy/src/sys/system.h ****         }
  42:../libDaisy/src/sys/system.h **** 
  43:../libDaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../libDaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../libDaisy/src/sys/system.h ****          ** Cache Enabled 
  46:../libDaisy/src/sys/system.h ****          ** */
  47:../libDaisy/src/sys/system.h ****         void Boost()
  48:../libDaisy/src/sys/system.h ****         {
  49:../libDaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../libDaisy/src/sys/system.h ****             use_dcache  = true;
  51:../libDaisy/src/sys/system.h ****             use_icache  = true;
  52:../libDaisy/src/sys/system.h ****             skip_clocks = false;
  53:../libDaisy/src/sys/system.h ****         }
  54:../libDaisy/src/sys/system.h **** 
  55:../libDaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../libDaisy/src/sys/system.h ****         bool       use_dcache;
  57:../libDaisy/src/sys/system.h ****         bool       use_icache;
  58:../libDaisy/src/sys/system.h ****         bool       skip_clocks;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 5


  59:../libDaisy/src/sys/system.h ****     };
  60:../libDaisy/src/sys/system.h **** 
  61:../libDaisy/src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy
  62:../libDaisy/src/sys/system.h ****      * 
  63:../libDaisy/src/sys/system.h ****      */
  64:../libDaisy/src/sys/system.h ****     enum MemoryRegion
  65:../libDaisy/src/sys/system.h ****     {
  66:../libDaisy/src/sys/system.h ****         INTERNAL_FLASH = 0,
  67:../libDaisy/src/sys/system.h ****         ITCMRAM,
  68:../libDaisy/src/sys/system.h ****         DTCMRAM,
  69:../libDaisy/src/sys/system.h ****         SRAM_D1,
  70:../libDaisy/src/sys/system.h ****         SRAM_D2,
  71:../libDaisy/src/sys/system.h ****         SRAM_D3,
  72:../libDaisy/src/sys/system.h ****         SDRAM,
  73:../libDaisy/src/sys/system.h ****         QSPI,
  74:../libDaisy/src/sys/system.h ****         INVALID_ADDRESS,
  75:../libDaisy/src/sys/system.h ****     };
  76:../libDaisy/src/sys/system.h **** 
  77:../libDaisy/src/sys/system.h ****     System() {}
  78:../libDaisy/src/sys/system.h ****     ~System() {}
  88              		.loc 4 78 5 view .LVU5
  89              		.loc 4 78 5 is_stmt 0 view .LVU6
  90              	.LBE887:
  91              	.LBB888:
  92              	.LBI888:
  93              		.file 5 "../libDaisy/src/hid/usb.h"
   1:../libDaisy/src/hid/usb.h **** #pragma once
   2:../libDaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../libDaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../libDaisy/src/hid/usb.h **** #include <stdint.h>
   5:../libDaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../libDaisy/src/hid/usb.h **** 
   7:../libDaisy/src/hid/usb.h **** namespace daisy
   8:../libDaisy/src/hid/usb.h **** /** @addtogroup human_interface
   9:../libDaisy/src/hid/usb.h ****     @{
  10:../libDaisy/src/hid/usb.h **** */
  11:../libDaisy/src/hid/usb.h **** 
  12:../libDaisy/src/hid/usb.h **** {
  13:../libDaisy/src/hid/usb.h **** /** 
  14:../libDaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../libDaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../libDaisy/src/hid/usb.h ****     @date December 2019
  17:../libDaisy/src/hid/usb.h **** */
  18:../libDaisy/src/hid/usb.h **** class UsbHandle
  19:../libDaisy/src/hid/usb.h **** {
  20:../libDaisy/src/hid/usb.h ****   public:
  21:../libDaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../libDaisy/src/hid/usb.h ****     enum class Result
  23:../libDaisy/src/hid/usb.h ****     {
  24:../libDaisy/src/hid/usb.h ****         OK,
  25:../libDaisy/src/hid/usb.h ****         ERR,
  26:../libDaisy/src/hid/usb.h ****     };
  27:../libDaisy/src/hid/usb.h **** 
  28:../libDaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../libDaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../libDaisy/src/hid/usb.h ****     {
  31:../libDaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 6


  32:../libDaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../libDaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../libDaisy/src/hid/usb.h ****     };
  35:../libDaisy/src/hid/usb.h **** 
  36:../libDaisy/src/hid/usb.h **** 
  37:../libDaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../libDaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../libDaisy/src/hid/usb.h **** 
  40:../libDaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../libDaisy/src/hid/usb.h **** 
  42:../libDaisy/src/hid/usb.h ****     ~UsbHandle() {}
  94              		.loc 5 42 5 is_stmt 1 view .LVU7
  95              		.loc 5 42 5 is_stmt 0 view .LVU8
  96              	.LBE888:
  97              	.LBB889:
  98              	.LBI889:
  99              		.file 6 "../libDaisy/src/per/adc.h"
   1:../libDaisy/src/per/adc.h **** #pragma once
   2:../libDaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../libDaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../libDaisy/src/per/adc.h **** #include <stdint.h>
   5:../libDaisy/src/per/adc.h **** #include <stdlib.h>
   6:../libDaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../libDaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../libDaisy/src/per/adc.h **** 
   9:../libDaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../libDaisy/src/per/adc.h **** 
  11:../libDaisy/src/per/adc.h **** namespace daisy
  12:../libDaisy/src/per/adc.h **** {
  13:../libDaisy/src/per/adc.h **** /** @addtogroup per_analog
  14:../libDaisy/src/per/adc.h ****     @{
  15:../libDaisy/src/per/adc.h **** */
  16:../libDaisy/src/per/adc.h **** 
  17:../libDaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../libDaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../libDaisy/src/per/adc.h **** later without breaking existing functionality.
  20:../libDaisy/src/per/adc.h **** */
  21:../libDaisy/src/per/adc.h **** 
  22:../libDaisy/src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../libDaisy/src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../libDaisy/src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../libDaisy/src/per/adc.h ****  *           one channel.
  26:../libDaisy/src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../libDaisy/src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../libDaisy/src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../libDaisy/src/per/adc.h ****  *           inputs connected.
  30:../libDaisy/src/per/adc.h **** */
  31:../libDaisy/src/per/adc.h **** struct AdcChannelConfig
  32:../libDaisy/src/per/adc.h **** {
  33:../libDaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../libDaisy/src/per/adc.h ****     enum MuxPin
  35:../libDaisy/src/per/adc.h ****     {
  36:../libDaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../libDaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../libDaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../libDaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../libDaisy/src/per/adc.h ****     };
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 7


  41:../libDaisy/src/per/adc.h **** 
  42:../libDaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  43:../libDaisy/src/per/adc.h ****     \param pin Pin to init.
  44:../libDaisy/src/per/adc.h ****      */
  45:../libDaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  46:../libDaisy/src/per/adc.h **** 
  47:../libDaisy/src/per/adc.h ****     /** 
  48:../libDaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  49:../libDaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  50:../libDaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  51:../libDaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  52:../libDaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  53:../libDaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  54:../libDaisy/src/per/adc.h ****     \param mux_0 First mux pin
  55:../libDaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  56:../libDaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  57:../libDaisy/src/per/adc.h ****     \param adc_pin &
  58:../libDaisy/src/per/adc.h ****     */
  59:../libDaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  60:../libDaisy/src/per/adc.h ****                  size_t       mux_channels,
  61:../libDaisy/src/per/adc.h ****                  dsy_gpio_pin mux_0,
  62:../libDaisy/src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  63:../libDaisy/src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  64:../libDaisy/src/per/adc.h **** 
  65:../libDaisy/src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  66:../libDaisy/src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  67:../libDaisy/src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  68:../libDaisy/src/per/adc.h **** };
  69:../libDaisy/src/per/adc.h **** 
  70:../libDaisy/src/per/adc.h **** /**
  71:../libDaisy/src/per/adc.h ****    @brief Handler for analog to digital conversion
  72:../libDaisy/src/per/adc.h **** */
  73:../libDaisy/src/per/adc.h **** class AdcHandle
  74:../libDaisy/src/per/adc.h **** {
  75:../libDaisy/src/per/adc.h ****   public:
  76:../libDaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  77:../libDaisy/src/per/adc.h ****     enum OverSampling
  78:../libDaisy/src/per/adc.h ****     {
  79:../libDaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  80:../libDaisy/src/per/adc.h ****         OVS_4,    /**< & */
  81:../libDaisy/src/per/adc.h ****         OVS_8,    /**< & */
  82:../libDaisy/src/per/adc.h ****         OVS_16,   /**< & */
  83:../libDaisy/src/per/adc.h ****         OVS_32,   /**< & */
  84:../libDaisy/src/per/adc.h ****         OVS_64,   /**< & */
  85:../libDaisy/src/per/adc.h ****         OVS_128,  /**< & */
  86:../libDaisy/src/per/adc.h ****         OVS_256,  /**< & */
  87:../libDaisy/src/per/adc.h ****         OVS_512,  /**< & */
  88:../libDaisy/src/per/adc.h ****         OVS_1024, /**< & */
  89:../libDaisy/src/per/adc.h ****         OVS_LAST, /**< & */
  90:../libDaisy/src/per/adc.h ****     };
  91:../libDaisy/src/per/adc.h **** 
  92:../libDaisy/src/per/adc.h ****     AdcHandle() {}
  93:../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 100              		.loc 6 93 5 is_stmt 1 view .LVU9
 101              		.loc 6 93 5 is_stmt 0 view .LVU10
 102              	.LBE889:
 103              	.LBB890:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 8


 104              	.LBI890:
 105              		.file 7 "../libDaisy/src/hid/audio.h"
   1:../libDaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../libDaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../libDaisy/src/hid/audio.h **** 
   4:../libDaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../libDaisy/src/hid/audio.h **** 
   6:../libDaisy/src/hid/audio.h **** namespace daisy
   7:../libDaisy/src/hid/audio.h **** {
   8:../libDaisy/src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../libDaisy/src/hid/audio.h ****  *  @ingroup audio 
  10:../libDaisy/src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../libDaisy/src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../libDaisy/src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../libDaisy/src/hid/audio.h ****  *            is already taken  care of.
  14:../libDaisy/src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../libDaisy/src/hid/audio.h ****  *           you will have to take the following steps:
  16:../libDaisy/src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../libDaisy/src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../libDaisy/src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../libDaisy/src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../libDaisy/src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../libDaisy/src/hid/audio.h ****  */
  22:../libDaisy/src/hid/audio.h **** class AudioHandle
  23:../libDaisy/src/hid/audio.h **** {
  24:../libDaisy/src/hid/audio.h ****   public:
  25:../libDaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../libDaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../libDaisy/src/hid/audio.h ****     struct Config
  28:../libDaisy/src/hid/audio.h ****     {
  29:../libDaisy/src/hid/audio.h ****         size_t                        blocksize;
  30:../libDaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  31:../libDaisy/src/hid/audio.h ****         float                         postgain;
  32:../libDaisy/src/hid/audio.h ****     };
  33:../libDaisy/src/hid/audio.h **** 
  34:../libDaisy/src/hid/audio.h ****     enum class Result
  35:../libDaisy/src/hid/audio.h ****     {
  36:../libDaisy/src/hid/audio.h ****         OK,
  37:../libDaisy/src/hid/audio.h ****         ERR,
  38:../libDaisy/src/hid/audio.h ****     };
  39:../libDaisy/src/hid/audio.h **** 
  40:../libDaisy/src/hid/audio.h ****     /** Non-Interleaving input buffer
  41:../libDaisy/src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  42:../libDaisy/src/hid/audio.h ****      * const so that the user can't modify the input
  43:../libDaisy/src/hid/audio.h ****      */
  44:../libDaisy/src/hid/audio.h ****     typedef const float* const* InputBuffer;
  45:../libDaisy/src/hid/audio.h **** 
  46:../libDaisy/src/hid/audio.h ****     /** Non-Interleaving output buffer
  47:../libDaisy/src/hid/audio.h ****      * Arranged by float[chn][sample] 
  48:../libDaisy/src/hid/audio.h ****      */
  49:../libDaisy/src/hid/audio.h ****     typedef float** OutputBuffer;
  50:../libDaisy/src/hid/audio.h **** 
  51:../libDaisy/src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  52:../libDaisy/src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  53:../libDaisy/src/hid/audio.h ****      */
  54:../libDaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  55:../libDaisy/src/hid/audio.h ****                                   OutputBuffer out,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 9


  56:../libDaisy/src/hid/audio.h ****                                   size_t       size);
  57:../libDaisy/src/hid/audio.h **** 
  58:../libDaisy/src/hid/audio.h ****     /** Interleaving Input buffer
  59:../libDaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  60:../libDaisy/src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  61:../libDaisy/src/hid/audio.h ****     */
  62:../libDaisy/src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  63:../libDaisy/src/hid/audio.h **** 
  64:../libDaisy/src/hid/audio.h ****     /** Interleaving Output buffer 
  65:../libDaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  66:../libDaisy/src/hid/audio.h ****     */
  67:../libDaisy/src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  68:../libDaisy/src/hid/audio.h **** 
  69:../libDaisy/src/hid/audio.h ****     /** Interleaving Audio Callback 
  70:../libDaisy/src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  71:../libDaisy/src/hid/audio.h ****      */
  72:../libDaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  73:../libDaisy/src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  74:../libDaisy/src/hid/audio.h ****                                               size_t                   size);
  75:../libDaisy/src/hid/audio.h **** 
  76:../libDaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  77:../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 106              		.loc 7 77 5 is_stmt 1 view .LVU11
 107              		.loc 7 77 5 is_stmt 0 view .LVU12
 108              	.LBE890:
 109              		.loc 3 22 19 view .LVU13
 110 0000 7047     		bx	lr
 111              		.cfi_endproc
 112              	.LFE2169:
 114              		.weak	_ZN5daisy9DaisySeedD1Ev
 115              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
 116 0002 00BF     		.section	.text._ZN7daisysp4AdsrD2Ev,"axG",%progbits,_ZN7daisysp4AdsrD5Ev,comdat
 117              		.align	1
 118              		.p2align 2,,3
 119              		.weak	_ZN7daisysp4AdsrD2Ev
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv5-d16
 125              	_ZN7daisysp4AdsrD2Ev:
 126              	.LVL3:
 127              	.LFB2192:
 128              		.file 8 "../DaisySP/Source/Control/adsr.h"
   1:../DaisySP/Source/Control/adsr.h **** #pragma once
   2:../DaisySP/Source/Control/adsr.h **** #ifndef DSY_ADSR_H
   3:../DaisySP/Source/Control/adsr.h **** #define DSY_ADSR_H
   4:../DaisySP/Source/Control/adsr.h **** 
   5:../DaisySP/Source/Control/adsr.h **** #include <stdint.h>
   6:../DaisySP/Source/Control/adsr.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Control/adsr.h **** 
   8:../DaisySP/Source/Control/adsr.h **** namespace daisysp
   9:../DaisySP/Source/Control/adsr.h **** {
  10:../DaisySP/Source/Control/adsr.h **** /** Distinct stages that the phase of the envelope can be located in.
  11:../DaisySP/Source/Control/adsr.h **** - IDLE   = located at phase location 0, and not currently running
  12:../DaisySP/Source/Control/adsr.h **** - ATTACK  = First segment of envelope where phase moves from 0 to 1
  13:../DaisySP/Source/Control/adsr.h **** - DECAY   = Second segment of envelope where phase moves from 1 to SUSTAIN value
  14:../DaisySP/Source/Control/adsr.h **** - SUSTAIN = Third segment of envelope, stays at SUSTAIN level until GATE is released
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 10


  15:../DaisySP/Source/Control/adsr.h **** - RELEASE =     Fourth segment of envelop where phase moves from SUSTAIN to 0
  16:../DaisySP/Source/Control/adsr.h **** - LAST    =  Last segment, aka release
  17:../DaisySP/Source/Control/adsr.h **** */
  18:../DaisySP/Source/Control/adsr.h **** enum
  19:../DaisySP/Source/Control/adsr.h **** {
  20:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_IDLE,
  21:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_ATTACK,
  22:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_DECAY,
  23:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_SUSTAIN,
  24:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_RELEASE,
  25:../DaisySP/Source/Control/adsr.h ****     ADSR_SEG_LAST,
  26:../DaisySP/Source/Control/adsr.h **** };
  27:../DaisySP/Source/Control/adsr.h **** 
  28:../DaisySP/Source/Control/adsr.h **** 
  29:../DaisySP/Source/Control/adsr.h **** /** adsr envelope module
  30:../DaisySP/Source/Control/adsr.h **** 
  31:../DaisySP/Source/Control/adsr.h **** Original author(s) : Paul Batchelor
  32:../DaisySP/Source/Control/adsr.h **** 
  33:../DaisySP/Source/Control/adsr.h **** Ported from Soundpipe by Ben Sergentanis, May 2020
  34:../DaisySP/Source/Control/adsr.h **** */
  35:../DaisySP/Source/Control/adsr.h **** class Adsr
  36:../DaisySP/Source/Control/adsr.h **** {
  37:../DaisySP/Source/Control/adsr.h ****   public:
  38:../DaisySP/Source/Control/adsr.h ****     Adsr() {}
  39:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 129              		.loc 8 39 5 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134              		.loc 8 39 14 is_stmt 0 view .LVU15
 135 0000 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE2192:
 139              		.weak	_ZN7daisysp4AdsrD1Ev
 140              		.thumb_set _ZN7daisysp4AdsrD1Ev,_ZN7daisysp4AdsrD2Ev
 141 0002 00BF     		.section	.text._ZN7daisysp10OscillatorD2Ev,"axG",%progbits,_ZN7daisysp10OscillatorD5Ev,comdat
 142              		.align	1
 143              		.p2align 2,,3
 144              		.weak	_ZN7daisysp10OscillatorD2Ev
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv5-d16
 150              	_ZN7daisysp10OscillatorD2Ev:
 151              	.LVL4:
 152              	.LFB3806:
 153              		.file 9 "../DaisySP/Source/Synthesis/oscillator.h"
   1:../DaisySP/Source/Synthesis/oscillator.h **** #pragma once
   2:../DaisySP/Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
   3:../DaisySP/Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
   4:../DaisySP/Source/Synthesis/oscillator.h **** #include <stdint.h>
   5:../DaisySP/Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
   6:../DaisySP/Source/Synthesis/oscillator.h **** #ifdef __cplusplus
   7:../DaisySP/Source/Synthesis/oscillator.h **** 
   8:../DaisySP/Source/Synthesis/oscillator.h **** namespace daisysp
   9:../DaisySP/Source/Synthesis/oscillator.h **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 11


  10:../DaisySP/Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:../DaisySP/Source/Synthesis/oscillator.h **** */
  12:../DaisySP/Source/Synthesis/oscillator.h **** class Oscillator
  13:../DaisySP/Source/Synthesis/oscillator.h **** {
  14:../DaisySP/Source/Synthesis/oscillator.h ****   public:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     Oscillator() {}
  16:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 154              		.loc 9 16 5 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 159              		.loc 9 16 20 is_stmt 0 view .LVU17
 160 0000 7047     		bx	lr
 161              		.cfi_endproc
 162              	.LFE3806:
 164              		.weak	_ZN7daisysp10OscillatorD1Ev
 165              		.thumb_set _ZN7daisysp10OscillatorD1Ev,_ZN7daisysp10OscillatorD2Ev
 166 0002 00BF     		.section	.text._ZN7daisysp3SvfD2Ev,"axG",%progbits,_ZN7daisysp3SvfD5Ev,comdat
 167              		.align	1
 168              		.p2align 2,,3
 169              		.weak	_ZN7daisysp3SvfD2Ev
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu fpv5-d16
 175              	_ZN7daisysp3SvfD2Ev:
 176              	.LVL5:
 177              	.LFB3822:
 178              		.file 10 "../DaisySP/Source/Filters/svf.h"
   1:../DaisySP/Source/Filters/svf.h **** #pragma once
   2:../DaisySP/Source/Filters/svf.h **** #ifndef DSY_SVF_H
   3:../DaisySP/Source/Filters/svf.h **** #define DSY_SVF_H
   4:../DaisySP/Source/Filters/svf.h **** 
   5:../DaisySP/Source/Filters/svf.h **** namespace daisysp
   6:../DaisySP/Source/Filters/svf.h **** {
   7:../DaisySP/Source/Filters/svf.h **** /**      Double Sampled, Stable State Variable Filter
   8:../DaisySP/Source/Filters/svf.h **** 
   9:../DaisySP/Source/Filters/svf.h **** Credit to Andrew Simper from musicdsp.org
  10:../DaisySP/Source/Filters/svf.h **** 
  11:../DaisySP/Source/Filters/svf.h **** This is his "State Variable Filter (Double Sampled, Stable)"
  12:../DaisySP/Source/Filters/svf.h **** 
  13:../DaisySP/Source/Filters/svf.h **** Additional thanks to Laurent de Soras for stability limit, and 
  14:../DaisySP/Source/Filters/svf.h **** Stefan Diedrichsen for the correct notch output
  15:../DaisySP/Source/Filters/svf.h **** 
  16:../DaisySP/Source/Filters/svf.h **** Ported by: Stephen Hensley
  17:../DaisySP/Source/Filters/svf.h **** */
  18:../DaisySP/Source/Filters/svf.h **** class Svf
  19:../DaisySP/Source/Filters/svf.h **** {
  20:../DaisySP/Source/Filters/svf.h ****   public:
  21:../DaisySP/Source/Filters/svf.h ****     Svf() {}
  22:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 179              		.loc 10 22 5 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 12


 184              		.loc 10 22 13 is_stmt 0 view .LVU19
 185 0000 7047     		bx	lr
 186              		.cfi_endproc
 187              	.LFE3822:
 189              		.weak	_ZN7daisysp3SvfD1Ev
 190              		.thumb_set _ZN7daisysp3SvfD1Ev,_ZN7daisysp3SvfD2Ev
 191 0002 00BF     		.section	.text._ZN7daisysp9CrossFadeD2Ev,"axG",%progbits,_ZN7daisysp9CrossFadeD5Ev,comdat
 192              		.align	1
 193              		.p2align 2,,3
 194              		.weak	_ZN7daisysp9CrossFadeD2Ev
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu fpv5-d16
 200              	_ZN7daisysp9CrossFadeD2Ev:
 201              	.LVL6:
 202              	.LFB3927:
 203              		.file 11 "../DaisySP/Source/Dynamics/crossfade.h"
   1:../DaisySP/Source/Dynamics/crossfade.h **** #pragma once
   2:../DaisySP/Source/Dynamics/crossfade.h **** #ifndef DSY_CROSSFADE_H
   3:../DaisySP/Source/Dynamics/crossfade.h **** #define DSY_CROSSFADE_H
   4:../DaisySP/Source/Dynamics/crossfade.h **** #include <stdint.h>
   5:../DaisySP/Source/Dynamics/crossfade.h **** #ifdef __cplusplus
   6:../DaisySP/Source/Dynamics/crossfade.h **** 
   7:../DaisySP/Source/Dynamics/crossfade.h **** namespace daisysp
   8:../DaisySP/Source/Dynamics/crossfade.h **** {
   9:../DaisySP/Source/Dynamics/crossfade.h **** /** Curve applied to the CrossFade
  10:../DaisySP/Source/Dynamics/crossfade.h **** - LIN = linear
  11:../DaisySP/Source/Dynamics/crossfade.h **** - CPOW = constant power
  12:../DaisySP/Source/Dynamics/crossfade.h **** - LOG = logarithmic
  13:../DaisySP/Source/Dynamics/crossfade.h **** - EXP  exponential
  14:../DaisySP/Source/Dynamics/crossfade.h **** - LAST = end of enum (used for array indexing)
  15:../DaisySP/Source/Dynamics/crossfade.h **** */
  16:../DaisySP/Source/Dynamics/crossfade.h **** enum
  17:../DaisySP/Source/Dynamics/crossfade.h **** {
  18:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LIN,
  19:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_CPOW,
  20:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LOG,
  21:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_EXP,
  22:../DaisySP/Source/Dynamics/crossfade.h ****     CROSSFADE_LAST,
  23:../DaisySP/Source/Dynamics/crossfade.h **** };
  24:../DaisySP/Source/Dynamics/crossfade.h **** 
  25:../DaisySP/Source/Dynamics/crossfade.h **** /** Performs a CrossFade between two signals
  26:../DaisySP/Source/Dynamics/crossfade.h **** 
  27:../DaisySP/Source/Dynamics/crossfade.h ****     Original author: Paul Batchelor
  28:../DaisySP/Source/Dynamics/crossfade.h **** 
  29:../DaisySP/Source/Dynamics/crossfade.h ****     Ported from Soundpipe by Andrew Ikenberry
  30:../DaisySP/Source/Dynamics/crossfade.h **** 
  31:../DaisySP/Source/Dynamics/crossfade.h ****     added curve option for constant power, etc.
  32:../DaisySP/Source/Dynamics/crossfade.h **** */
  33:../DaisySP/Source/Dynamics/crossfade.h **** class CrossFade
  34:../DaisySP/Source/Dynamics/crossfade.h **** {
  35:../DaisySP/Source/Dynamics/crossfade.h ****   public:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     CrossFade() {}
  37:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 204              		.loc 11 37 5 is_stmt 1 view -0
 205              		.cfi_startproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 13


 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 209              		.loc 11 37 19 is_stmt 0 view .LVU21
 210 0000 7047     		bx	lr
 211              		.cfi_endproc
 212              	.LFE3927:
 214              		.weak	_ZN7daisysp9CrossFadeD1Ev
 215              		.thumb_set _ZN7daisysp9CrossFadeD1Ev,_ZN7daisysp9CrossFadeD2Ev
 216 0002 00BF     		.section	.text._ZN7daisysp9EnvFollowD2Ev,"axG",%progbits,_ZN7daisysp9EnvFollowD5Ev,comdat
 217              		.align	1
 218              		.p2align 2,,3
 219              		.weak	_ZN7daisysp9EnvFollowD2Ev
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu fpv5-d16
 225              	_ZN7daisysp9EnvFollowD2Ev:
 226              	.LVL7:
 227              	.LFB4401:
 228              		.file 12 "envFollow.h"
   1:envFollow.h   **** // Copyright 2021 Adam Fulford
   2:envFollow.h   **** // 
   3:envFollow.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:envFollow.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:envFollow.h   **** // in the Software without restriction, including without limitation the rights
   6:envFollow.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:envFollow.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:envFollow.h   **** // furnished to do so, subject to the following conditions:
   9:envFollow.h   **** // 
  10:envFollow.h   **** // The above copyright notice and this permission notice shall be included in
  11:envFollow.h   **** // all copies or substantial portions of the Software.
  12:envFollow.h   **** // 
  13:envFollow.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:envFollow.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:envFollow.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:envFollow.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:envFollow.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:envFollow.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:envFollow.h   **** // THE SOFTWARE.
  20:envFollow.h   **** // 
  21:envFollow.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:envFollow.h   **** 
  23:envFollow.h   **** #ifndef ENV_FOLLOW_H
  24:envFollow.h   **** #define ENV_FOLLOW_H
  25:envFollow.h   **** #include <math.h>
  26:envFollow.h   **** 
  27:envFollow.h   **** namespace daisysp
  28:envFollow.h   **** {
  29:envFollow.h   **** 
  30:envFollow.h   **** class EnvFollow
  31:envFollow.h   **** {
  32:envFollow.h   ****     private:
  33:envFollow.h   ****     
  34:envFollow.h   ****     float avg;      //exp average of input
  35:envFollow.h   ****     float pos_sample;   //positive sample
  36:envFollow.h   ****     float sample_noDC;  //no DC sample
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 14


  37:envFollow.h   ****     float avg_env;  //average envelope
  38:envFollow.h   ****     float w;        //weighting
  39:envFollow.h   ****     float w_env;    //envelope weighting
  40:envFollow.h   **** 
  41:envFollow.h   ****     public:
  42:envFollow.h   **** 
  43:envFollow.h   ****     EnvFollow() //default constructor
  44:envFollow.h   ****     {
  45:envFollow.h   ****         avg = 0.0f;      //exp average of input
  46:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
  47:envFollow.h   ****         avg_env = 0.0f;  //average envelope
  48:envFollow.h   ****         w = 0.0001f;        //weighting
  49:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
  50:envFollow.h   ****         sample_noDC = 0.0f;
  51:envFollow.h   ****     }  
  52:envFollow.h   ****     ~EnvFollow() {}
 229              		.loc 12 52 5 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              		.loc 12 52 19 is_stmt 0 view .LVU23
 235 0000 7047     		bx	lr
 236              		.cfi_endproc
 237              	.LFE4401:
 239              		.weak	_ZN7daisysp9EnvFollowD1Ev
 240              		.thumb_set _ZN7daisysp9EnvFollowD1Ev,_ZN7daisysp9EnvFollowD2Ev
 241 0002 00BF     		.section	.text._ZN8TaptempoD2Ev,"axG",%progbits,_ZN8TaptempoD5Ev,comdat
 242              		.align	1
 243              		.p2align 2,,3
 244              		.weak	_ZN8TaptempoD2Ev
 245              		.syntax unified
 246              		.thumb
 247              		.thumb_func
 248              		.fpu fpv5-d16
 250              	_ZN8TaptempoD2Ev:
 251              	.LVL8:
 252              	.LFB4408:
 253              		.file 13 "taptempo.h"
   1:taptempo.h    **** // Copyright 2021 Adam Fulford
   2:taptempo.h    **** // 
   3:taptempo.h    **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:taptempo.h    **** // of this software and associated documentation files (the "Software"), to deal
   5:taptempo.h    **** // in the Software without restriction, including without limitation the rights
   6:taptempo.h    **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:taptempo.h    **** // copies of the Software, and to permit persons to whom the Software is
   8:taptempo.h    **** // furnished to do so, subject to the following conditions:
   9:taptempo.h    **** // 
  10:taptempo.h    **** // The above copyright notice and this permission notice shall be included in
  11:taptempo.h    **** // all copies or substantial portions of the Software.
  12:taptempo.h    **** // 
  13:taptempo.h    **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:taptempo.h    **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:taptempo.h    **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:taptempo.h    **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:taptempo.h    **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:taptempo.h    **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 15


  19:taptempo.h    **** // THE SOFTWARE.
  20:taptempo.h    **** // 
  21:taptempo.h    **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:taptempo.h    **** 
  23:taptempo.h    **** #ifndef TAP_TEMPO_H
  24:taptempo.h    **** #define TAP_TEMPO_H
  25:taptempo.h    **** 
  26:taptempo.h    **** #include "daisysp.h"
  27:taptempo.h    **** #include "daisy_seed.h"
  28:taptempo.h    **** 
  29:taptempo.h    **** using namespace daisy;
  30:taptempo.h    **** using namespace daisysp;
  31:taptempo.h    **** 
  32:taptempo.h    **** class Taptempo
  33:taptempo.h    **** {
  34:taptempo.h    ****     private:
  35:taptempo.h    ****         uint32_t mintap_,maxtap_;
  36:taptempo.h    ****         uint32_t currentTime_,lastTime_,lastTapLength_,tapLength_;
  37:taptempo.h    ****         uint32_t clockLength_, lastClockLength_, clockThresh_;
  38:taptempo.h    ****         bool tapflag_;
  39:taptempo.h    ****         float tap_tolerance_;
  40:taptempo.h    ****         float tempo_, tapRatio_;
  41:taptempo.h    **** 
  42:taptempo.h    ****     public:
  43:taptempo.h    **** 
  44:taptempo.h    ****     Taptempo()  //default constructor
  45:taptempo.h    ****     {
  46:taptempo.h    ****         tapflag_ = false;
  47:taptempo.h    ****         tap_tolerance_ = 1.25f;
  48:taptempo.h    ****         maxtap_ = 2000000;
  49:taptempo.h    ****         mintap_ = 80000;
  50:taptempo.h    ****         lastTapLength_ = 0;
  51:taptempo.h    ****         tempo_ = 500000.0f;
  52:taptempo.h    ****         lastTime_ = 0;
  53:taptempo.h    ****         currentTime_ = 0;
  54:taptempo.h    ****         tapRatio_ = 1.0f;
  55:taptempo.h    ****         clockLength_ = 0;
  56:taptempo.h    ****         lastClockLength_ = 0;
  57:taptempo.h    ****         clockThresh_ = 10000; //Us change
  58:taptempo.h    ****     }
  59:taptempo.h    ****     ~Taptempo() {}
 254              		.loc 13 59 5 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259              		.loc 13 59 18 is_stmt 0 view .LVU25
 260 0000 7047     		bx	lr
 261              		.cfi_endproc
 262              	.LFE4408:
 264              		.weak	_ZN8TaptempoD1Ev
 265              		.thumb_set _ZN8TaptempoD1Ev,_ZN8TaptempoD2Ev
 266 0002 00BF     		.section	.text._ZN8TempoLEDD2Ev,"axG",%progbits,_ZN8TempoLEDD5Ev,comdat
 267              		.align	1
 268              		.p2align 2,,3
 269              		.weak	_ZN8TempoLEDD2Ev
 270              		.syntax unified
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 16


 271              		.thumb
 272              		.thumb_func
 273              		.fpu fpv5-d16
 275              	_ZN8TempoLEDD2Ev:
 276              	.LVL9:
 277              	.LFB4431:
 278              		.file 14 "LEDs.h"
   1:LEDs.h        **** // Copyright 2021 Adam Fulford
   2:LEDs.h        **** // 
   3:LEDs.h        **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:LEDs.h        **** // of this software and associated documentation files (the "Software"), to deal
   5:LEDs.h        **** // in the Software without restriction, including without limitation the rights
   6:LEDs.h        **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:LEDs.h        **** // copies of the Software, and to permit persons to whom the Software is
   8:LEDs.h        **** // furnished to do so, subject to the following conditions:
   9:LEDs.h        **** // 
  10:LEDs.h        **** // The above copyright notice and this permission notice shall be included in
  11:LEDs.h        **** // all copies or substantial portions of the Software.
  12:LEDs.h        **** // 
  13:LEDs.h        **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:LEDs.h        **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:LEDs.h        **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:LEDs.h        **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:LEDs.h        **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:LEDs.h        **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:LEDs.h        **** // THE SOFTWARE.
  20:LEDs.h        **** // 
  21:LEDs.h        **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:LEDs.h        **** 
  23:LEDs.h        **** #ifndef LEDS_H
  24:LEDs.h        **** #define LEDS_H
  25:LEDs.h        **** 
  26:LEDs.h        **** #include "daisysp.h"
  27:LEDs.h        **** #include "daisy_seed.h"
  28:LEDs.h        **** #include "oscillator_p.h"
  29:LEDs.h        **** #include "constants.h"
  30:LEDs.h        **** 
  31:LEDs.h        **** using namespace daisysp;
  32:LEDs.h        **** using namespace daisy;
  33:LEDs.h        **** 
  34:LEDs.h        **** class TempoLED
  35:LEDs.h        **** {
  36:LEDs.h        **** 
  37:LEDs.h        **** Led led;
  38:LEDs.h        **** Oscillator_p blink;
  39:LEDs.h        **** TempoDivs div_last_;
  40:LEDs.h        **** //int phaseCounter_;
  41:LEDs.h        **** //int div_int;
  42:LEDs.h        **** //float phase_last_;
  43:LEDs.h        **** float GetDivInt(TempoDivs div);
  44:LEDs.h        **** 
  45:LEDs.h        **** public:
  46:LEDs.h        **** 
  47:LEDs.h        **** TempoLED(){}
  48:LEDs.h        **** ~TempoLED(){}   //destructor
 279              		.loc 14 48 1 is_stmt 1 view -0
 280              		.cfi_startproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 17


 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		@ link register save eliminated.
 284              	.LBB891:
 285              	.LBI891:
 286              		.file 15 "oscillator_p.h"
   1:oscillator_p.h **** #pragma once
   2:oscillator_p.h **** #ifndef DSY_OSCILLATOR_P_H
   3:oscillator_p.h **** #define DSY_OSCILLATOR_P_H
   4:oscillator_p.h **** #include <stdint.h>
   5:oscillator_p.h **** #include "Utility/dsp.h"
   6:oscillator_p.h **** #ifdef __cplusplus
   7:oscillator_p.h **** 
   8:oscillator_p.h **** namespace daisysp
   9:oscillator_p.h **** {
  10:oscillator_p.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  11:oscillator_p.h **** */
  12:oscillator_p.h **** class Oscillator_p
  13:oscillator_p.h **** {
  14:oscillator_p.h ****   public:
  15:oscillator_p.h ****     Oscillator_p() {}
  16:oscillator_p.h ****     ~Oscillator_p() {}
 287              		.loc 15 16 5 view .LVU27
 288              		.loc 15 16 5 is_stmt 0 view .LVU28
 289              	.LBE891:
 290              	.LBB892:
 291              	.LBI892:
 292              		.file 16 "../libDaisy/src/hid/led.h"
   1:../libDaisy/src/hid/led.h **** 
   2:../libDaisy/src/hid/led.h **** #pragma once
   3:../libDaisy/src/hid/led.h **** #ifndef DSY_LED_H
   4:../libDaisy/src/hid/led.h **** #define DSY_LED_H
   5:../libDaisy/src/hid/led.h **** #include "daisy_core.h"
   6:../libDaisy/src/hid/led.h **** #include "per/gpio.h"
   7:../libDaisy/src/hid/led.h **** 
   8:../libDaisy/src/hid/led.h **** /* TODO - Get this set up to work with the dev_leddriver stuff as well
   9:../libDaisy/src/hid/led.h **** - Setup Hardware PWM for pins that have it
  10:../libDaisy/src/hid/led.h **** */
  11:../libDaisy/src/hid/led.h **** 
  12:../libDaisy/src/hid/led.h **** namespace daisy
  13:../libDaisy/src/hid/led.h **** {
  14:../libDaisy/src/hid/led.h **** /**
  15:../libDaisy/src/hid/led.h ****     @brief LED Class providing simple Software PWM ability, etc \n 
  16:../libDaisy/src/hid/led.h ****     Eventually this will work with hardware PWM, and external LED Driver devices as well.
  17:../libDaisy/src/hid/led.h ****     @author shensley
  18:../libDaisy/src/hid/led.h ****     @date March 2020
  19:../libDaisy/src/hid/led.h ****     @ingroup feedback
  20:../libDaisy/src/hid/led.h **** */
  21:../libDaisy/src/hid/led.h **** class Led
  22:../libDaisy/src/hid/led.h **** {
  23:../libDaisy/src/hid/led.h ****   public:
  24:../libDaisy/src/hid/led.h ****     Led() {}
  25:../libDaisy/src/hid/led.h ****     ~Led() {}
 293              		.loc 16 25 5 is_stmt 1 view .LVU29
 294              		.loc 16 25 5 is_stmt 0 view .LVU30
 295              	.LBE892:
 296              		.loc 14 48 13 view .LVU31
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 18


 297 0000 7047     		bx	lr
 298              		.cfi_endproc
 299              	.LFE4431:
 301              		.weak	_ZN8TempoLEDD1Ev
 302              		.thumb_set _ZN8TempoLEDD1Ev,_ZN8TempoLEDD2Ev
 303 0002 00BF     		.section	.text._ZN9ButtonLEDD2Ev,"axG",%progbits,_ZN9ButtonLEDD5Ev,comdat
 304              		.align	1
 305              		.p2align 2,,3
 306              		.weak	_ZN9ButtonLEDD2Ev
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 310              		.fpu fpv5-d16
 312              	_ZN9ButtonLEDD2Ev:
 313              	.LVL10:
 314              	.LFB4438:
  49:LEDs.h        **** 
  50:LEDs.h        **** void init(dsy_gpio_pin ledpin, float samplerate);  //led pin number
  51:LEDs.h        **** 
  52:LEDs.h        **** void setTempo(float tempo);
  53:LEDs.h        **** 
  54:LEDs.h        **** void resetPhase();
  55:LEDs.h        **** 
  56:LEDs.h        **** void resetPhaseCounter();
  57:LEDs.h        **** 
  58:LEDs.h        **** //update using oscillator
  59:LEDs.h        **** void update();
  60:LEDs.h        **** 
  61:LEDs.h        **** //update using external sync
  62:LEDs.h        **** void update(TempoDivs div, float phase);
  63:LEDs.h        **** 
  64:LEDs.h        **** void LED_set(float brightness);
  65:LEDs.h        **** 
  66:LEDs.h        **** bool isEOC();
  67:LEDs.h        **** 
  68:LEDs.h        **** //high if just had a div change
  69:LEDs.h        **** //bool divChange();
  70:LEDs.h        **** 
  71:LEDs.h        **** float GetPhase() { return blink.GetPhase(); }
  72:LEDs.h        **** 
  73:LEDs.h        **** };
  74:LEDs.h        **** 
  75:LEDs.h        **** class ButtonLED    //button with status LED
  76:LEDs.h        **** {
  77:LEDs.h        ****     public:
  78:LEDs.h        ****     ButtonLED() {}
  79:LEDs.h        ****     ~ButtonLED() {}
 315              		.loc 14 79 5 is_stmt 1 view -0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              		@ link register save eliminated.
 320              	.LBB893:
 321              	.LBI893:
 322              		.loc 16 25 5 view .LVU33
 323              		.loc 16 25 5 is_stmt 0 view .LVU34
 324              	.LBE893:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 19


 325              	.LBB894:
 326              	.LBI894:
 327              		.loc 1 42 5 is_stmt 1 view .LVU35
 328              		.loc 1 42 5 is_stmt 0 view .LVU36
 329              	.LBE894:
 330              		.loc 14 79 19 view .LVU37
 331 0000 7047     		bx	lr
 332              		.cfi_endproc
 333              	.LFE4438:
 335              		.weak	_ZN9ButtonLEDD1Ev
 336              		.thumb_set _ZN9ButtonLEDD1Ev,_ZN9ButtonLEDD2Ev
 337 0002 00BF     		.section	.text._ZN10DelayMultiD2Ev,"axG",%progbits,_ZN10DelayMultiD5Ev,comdat
 338              		.align	1
 339              		.p2align 2,,3
 340              		.weak	_ZN10DelayMultiD2Ev
 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 344              		.fpu fpv5-d16
 346              	_ZN10DelayMultiD2Ev:
 347              	.LVL11:
 348              	.LFB4444:
 349              		.file 17 "DelayMulti.h"
   1:DelayMulti.h  **** // Copyright 2021 Adam Fulford
   2:DelayMulti.h  **** // 
   3:DelayMulti.h  **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:DelayMulti.h  **** // of this software and associated documentation files (the "Software"), to deal
   5:DelayMulti.h  **** // in the Software without restriction, including without limitation the rights
   6:DelayMulti.h  **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:DelayMulti.h  **** // copies of the Software, and to permit persons to whom the Software is
   8:DelayMulti.h  **** // furnished to do so, subject to the following conditions:
   9:DelayMulti.h  **** // 
  10:DelayMulti.h  **** // The above copyright notice and this permission notice shall be included in
  11:DelayMulti.h  **** // all copies or substantial portions of the Software.
  12:DelayMulti.h  **** // 
  13:DelayMulti.h  **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:DelayMulti.h  **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:DelayMulti.h  **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:DelayMulti.h  **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:DelayMulti.h  **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:DelayMulti.h  **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:DelayMulti.h  **** // THE SOFTWARE.
  20:DelayMulti.h  **** // 
  21:DelayMulti.h  **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:DelayMulti.h  **** 
  23:DelayMulti.h  **** #ifndef DELAYMULTI_H
  24:DelayMulti.h  **** #define DELAYMULTI_H
  25:DelayMulti.h  **** 
  26:DelayMulti.h  **** #include "daisysp.h"
  27:DelayMulti.h  **** #include "daisy_seed.h"
  28:DelayMulti.h  **** #include "delayline_multitap.h" //modified delayline
  29:DelayMulti.h  **** #include "constants.h"
  30:DelayMulti.h  **** #include "LEDs.h"
  31:DelayMulti.h  **** #include "scale.h"
  32:DelayMulti.h  **** 
  33:DelayMulti.h  **** using namespace daisysp;
  34:DelayMulti.h  **** using namespace daisy;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 20


  35:DelayMulti.h  **** 
  36:DelayMulti.h  **** constexpr size_t numHeads{1};
  37:DelayMulti.h  **** //constexpr size_t numHeadsSets{2};
  38:DelayMulti.h  **** constexpr size_t totalNumHeads{2};
  39:DelayMulti.h  **** 
  40:DelayMulti.h  **** constexpr float delaytime_threshold{50};   //in samples
  41:DelayMulti.h  **** constexpr uint32_t timethresh{25}; //length of wait before triggering xfade (used to be 75)
  42:DelayMulti.h  **** 
  43:DelayMulti.h  **** class DelayMulti
  44:DelayMulti.h  **** {
  45:DelayMulti.h  **** public:
  46:DelayMulti.h  **** DelayLineMultiTap <float, static_cast<size_t>(48000 * 36.0f)>  *del; //36 second buffer
  47:DelayMulti.h  **** //tempoLED
  48:DelayMulti.h  **** TempoLED tempoled;
  49:DelayMulti.h  **** DelayMulti() {}
  50:DelayMulti.h  **** ~DelayMulti() {}
 350              		.loc 17 50 1 is_stmt 1 view -0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354              		@ link register save eliminated.
 355              	.LBB895:
 356              	.LBI895:
  48:LEDs.h        **** 
 357              		.loc 14 48 1 view .LVU39
 358              	.LBB896:
 359              	.LBI896:
 360              		.loc 15 16 5 view .LVU40
 361              		.loc 15 16 5 is_stmt 0 view .LVU41
 362              	.LBE896:
 363              	.LBB897:
 364              	.LBI897:
 365              		.loc 16 25 5 is_stmt 1 view .LVU42
 366              		.loc 16 25 5 is_stmt 0 view .LVU43
 367              	.LBE897:
 368              	.LBE895:
 369              		.loc 17 50 16 view .LVU44
 370 0000 7047     		bx	lr
 371              		.cfi_endproc
 372              	.LFE4444:
 374              		.weak	_ZN10DelayMultiD1Ev
 375              		.thumb_set _ZN10DelayMultiD1Ev,_ZN10DelayMultiD2Ev
 376 0002 00BF     		.section	.text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev,"axG",%progbits,_ZN7daisysp17DelayL
 377              		.align	1
 378              		.p2align 2,,3
 379              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 383              		.fpu fpv5-d16
 385              	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:
 386              	.LVL12:
 387              	.LFB5383:
 388              		.file 18 "delayline_multitap.h"
   1:delayline_multitap.h **** // Copyright 2021 Adam Fulford
   2:delayline_multitap.h **** // 
   3:delayline_multitap.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 21


   4:delayline_multitap.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_multitap.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_multitap.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_multitap.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_multitap.h **** // furnished to do so, subject to the following conditions:
   9:delayline_multitap.h **** // 
  10:delayline_multitap.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_multitap.h **** // all copies or substantial portions of the Software.
  12:delayline_multitap.h **** // 
  13:delayline_multitap.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_multitap.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_multitap.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_multitap.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_multitap.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_multitap.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_multitap.h **** // THE SOFTWARE.
  20:delayline_multitap.h **** // 
  21:delayline_multitap.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_multitap.h **** 
  23:delayline_multitap.h **** #pragma once
  24:delayline_multitap.h **** #ifndef DSY_DELAY_MULTITAP_H
  25:delayline_multitap.h **** #define DSY_DELAY_MULTITAP_H
  26:delayline_multitap.h **** #include <stdlib.h>
  27:delayline_multitap.h **** #include <stdint.h>
  28:delayline_multitap.h **** #include <array>
  29:delayline_multitap.h **** namespace daisysp
  30:delayline_multitap.h **** {
  31:delayline_multitap.h **** /** Mulitap Delay line.
  32:delayline_multitap.h **** 
  33:delayline_multitap.h **** DelayLine<float, SAMPLE_RATE> del;
  34:delayline_multitap.h **** 
  35:delayline_multitap.h **** By: Adam Fulford
  36:delayline_multitap.h **** */
  37:delayline_multitap.h **** template <typename T, size_t max_size>
  38:delayline_multitap.h **** class DelayLineMultiTap
  39:delayline_multitap.h **** {
  40:delayline_multitap.h **** private:
  41:delayline_multitap.h ****     size_t write_ptr_;
  42:delayline_multitap.h ****     std::array<size_t, 16> delay_;    //array to hold delay times for upto 16 read heads.
  43:delayline_multitap.h ****     std::array<float, 16> frac_;
  44:delayline_multitap.h ****     T      line_[max_size];
  45:delayline_multitap.h ****     size_t num_heads_;
  46:delayline_multitap.h **** 
  47:delayline_multitap.h ****   public:
  48:delayline_multitap.h ****     DelayLineMultiTap() 
  49:delayline_multitap.h ****     {
  50:delayline_multitap.h ****        // num_heads_ = 16; //Why can't I do this in the default constructor?! Compiles but does not
  51:delayline_multitap.h ****     }
  52:delayline_multitap.h ****     ~DelayLineMultiTap() {}
 389              		.loc 18 52 5 is_stmt 1 view -0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              		@ link register save eliminated.
 394              		.loc 18 52 27 is_stmt 0 view .LVU46
 395 0000 7047     		bx	lr
 396              		.cfi_endproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 22


 397              	.LFE5383:
 399              		.weak	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 400              		.thumb_set _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev,_ZN7daisysp17DelayLineMultiTapIfLj17280
 401 0002 00BF     		.section	.text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev,"axG",%progbits,_ZN7daisysp16DelayLin
 402              		.align	1
 403              		.p2align 2,,3
 404              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu fpv5-d16
 410              	_ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:
 411              	.LVL13:
 412              	.LFB5386:
 413              		.file 19 "delayline_reverse.h"
   1:delayline_reverse.h **** // Copyright 2021 Adam Fulford
   2:delayline_reverse.h **** // 
   3:delayline_reverse.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:delayline_reverse.h **** // of this software and associated documentation files (the "Software"), to deal
   5:delayline_reverse.h **** // in the Software without restriction, including without limitation the rights
   6:delayline_reverse.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:delayline_reverse.h **** // copies of the Software, and to permit persons to whom the Software is
   8:delayline_reverse.h **** // furnished to do so, subject to the following conditions:
   9:delayline_reverse.h **** // 
  10:delayline_reverse.h **** // The above copyright notice and this permission notice shall be included in
  11:delayline_reverse.h **** // all copies or substantial portions of the Software.
  12:delayline_reverse.h **** // 
  13:delayline_reverse.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:delayline_reverse.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:delayline_reverse.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:delayline_reverse.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:delayline_reverse.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:delayline_reverse.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:delayline_reverse.h **** // THE SOFTWARE.
  20:delayline_reverse.h **** // 
  21:delayline_reverse.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:delayline_reverse.h **** 
  23:delayline_reverse.h **** #pragma once
  24:delayline_reverse.h **** #ifndef DSY_DELAY_REVERSE_H
  25:delayline_reverse.h **** #define DSY_DELAY_REVERSE_H
  26:delayline_reverse.h **** #include <stdlib.h>
  27:delayline_reverse.h **** #include <stdint.h>
  28:delayline_reverse.h **** #include <math.h>
  29:delayline_reverse.h **** namespace daisysp
  30:delayline_reverse.h **** {
  31:delayline_reverse.h **** /** Reverse Delay line
  32:delayline_reverse.h **** By: Adam Fulford
  33:delayline_reverse.h **** */
  34:delayline_reverse.h **** template <typename T, size_t max_size>
  35:delayline_reverse.h **** class DelayLineReverse
  36:delayline_reverse.h **** {
  37:delayline_reverse.h ****   public:
  38:delayline_reverse.h ****     DelayLineReverse() {}
  39:delayline_reverse.h ****     ~DelayLineReverse() {}
 414              		.loc 19 39 5 is_stmt 1 view -0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 23


 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              		@ link register save eliminated.
 419              		.loc 19 39 26 is_stmt 0 view .LVU48
 420 0000 7047     		bx	lr
 421              		.cfi_endproc
 422              	.LFE5386:
 424              		.weak	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 425              		.thumb_set _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev,_ZN7daisysp16DelayLineReverseIfLj600000EE
 426 0002 00BF     		.section	.text._Z10InitDelaysf,"ax",%progbits
 427              		.align	1
 428              		.p2align 2,,3
 429              		.global	_Z10InitDelaysf
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 433              		.fpu fpv5-d16
 435              	_Z10InitDelaysf:
 436              	.LVL14:
 437              	.LFB4771:
 438              		.file 20 "Veno-Echo.cpp"
   1:Veno-Echo.cpp **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.cpp **** // 
   3:Veno-Echo.cpp **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.cpp **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.cpp **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.cpp **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.cpp **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.cpp **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.cpp **** // 
  10:Veno-Echo.cpp **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.cpp **** // all copies or substantial portions of the Software.
  12:Veno-Echo.cpp **** // 
  13:Veno-Echo.cpp **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.cpp **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.cpp **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.cpp **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.cpp **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.cpp **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.cpp **** // THE SOFTWARE.
  20:Veno-Echo.cpp **** // 
  21:Veno-Echo.cpp **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.cpp **** 
  23:Veno-Echo.cpp **** #include "Veno-Echo.h"
  24:Veno-Echo.cpp **** #include "QSPI_Settings.h"
  25:Veno-Echo.cpp **** #include "daisysp.h"
  26:Veno-Echo.cpp **** #include "delayline_multitap.h" //modified delayline
  27:Veno-Echo.cpp **** #include "delayline_reverse.h"  //reverse delayline
  28:Veno-Echo.cpp **** #include "envFollow.h"
  29:Veno-Echo.cpp **** #include "scale.h"
  30:Veno-Echo.cpp **** #include "constants.h"
  31:Veno-Echo.cpp **** #include "taptempo.h"
  32:Veno-Echo.cpp **** #include "LEDs.h"
  33:Veno-Echo.cpp **** #include "DelayMulti.h"
  34:Veno-Echo.cpp **** #include <math.h>
  35:Veno-Echo.cpp **** #include <string.h>
  36:Veno-Echo.cpp **** #include <atomic>
  37:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 24


  38:Veno-Echo.cpp **** using namespace daisysp;
  39:Veno-Echo.cpp **** 
  40:Veno-Echo.cpp **** static Svf LPF_L;
  41:Veno-Echo.cpp **** static Svf LPF_R;
  42:Veno-Echo.cpp **** static Svf HPF_L;
  43:Veno-Echo.cpp **** static Svf HPF_R;
  44:Veno-Echo.cpp **** 
  45:Veno-Echo.cpp **** static Svf LPF_L_post;
  46:Veno-Echo.cpp **** static Svf LPF_R_post;
  47:Veno-Echo.cpp **** static Svf HPF_L_post;
  48:Veno-Echo.cpp **** static Svf HPF_R_post;
  49:Veno-Echo.cpp **** 
  50:Veno-Echo.cpp **** static Oscillator lfo;
  51:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
  52:Veno-Echo.cpp **** 
  53:Veno-Echo.cpp **** //static DcBlock DcBlock_LFB, DcBlock_RFB; //DC blocks
  54:Veno-Echo.cpp **** 
  55:Veno-Echo.cpp **** // Declare a DelayLine of MAX_DELAY number of floats.
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsL;
  57:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
  58:Veno-Echo.cpp **** 
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsL_REV; //10 s
  60:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
  61:Veno-Echo.cpp **** 
  62:Veno-Echo.cpp **** struct DelayRev
  63:Veno-Echo.cpp **** {
  64:Veno-Echo.cpp ****     DelayLineReverse <float, static_cast<size_t>(maxRevDelay*2.5f)>  *del;
  65:Veno-Echo.cpp ****     float currentDelay_;
  66:Veno-Echo.cpp ****     //float delayTarget;
  67:Veno-Echo.cpp **** 
  68:Veno-Echo.cpp ****     void SetDelayTime(float delayTime)
  69:Veno-Echo.cpp ****     {
  70:Veno-Echo.cpp ****         if(abs(delayTime - currentDelay_) > (0.005f * currentDelay_) )  
  71:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
  72:Veno-Echo.cpp ****         {
  73:Veno-Echo.cpp ****             currentDelay_ = delayTime;
  74:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
  75:Veno-Echo.cpp ****             //del -> Reset();
  76:Veno-Echo.cpp ****         }
  77:Veno-Echo.cpp ****     }
  78:Veno-Echo.cpp **** 
  79:Veno-Echo.cpp ****     float Read()
  80:Veno-Echo.cpp ****     {
  81:Veno-Echo.cpp ****         //read from head1
  82:Veno-Echo.cpp ****         float read = del -> ReadRev();
  83:Veno-Echo.cpp ****         return read;
  84:Veno-Echo.cpp ****     }
  85:Veno-Echo.cpp **** 
  86:Veno-Echo.cpp ****     float FwdFbk()
  87:Veno-Echo.cpp ****     {
  88:Veno-Echo.cpp ****         float read = del -> ReadFwd();
  89:Veno-Echo.cpp ****         return read;
  90:Veno-Echo.cpp ****     }
  91:Veno-Echo.cpp **** 
  92:Veno-Echo.cpp ****     void Write(float in)    //sort out feedback in audiocallback
  93:Veno-Echo.cpp ****     {
  94:Veno-Echo.cpp ****         del -> Write(in);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 25


  95:Veno-Echo.cpp ****     }
  96:Veno-Echo.cpp **** };
  97:Veno-Echo.cpp **** 
  98:Veno-Echo.cpp **** DelayMulti delayL,delayR;
  99:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 100:Veno-Echo.cpp **** 
 101:Veno-Echo.cpp **** //LED objects:
 102:Veno-Echo.cpp **** ButtonLED LPF_sw,HPF_sw,Rev_L_sw,Rev_R_sw, Tap_Button;
 103:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 104:Veno-Echo.cpp **** 
 105:Veno-Echo.cpp **** 
 106:Veno-Echo.cpp **** float delayTimeL_CV{};
 107:Veno-Echo.cpp **** float delayTimeR_CV{};
 108:Veno-Echo.cpp **** 
 109:Veno-Echo.cpp **** float feedbackL{};
 110:Veno-Echo.cpp **** float feedbackL_CV{};
 111:Veno-Echo.cpp **** 
 112:Veno-Echo.cpp **** float feedbackR{};
 113:Veno-Echo.cpp **** float feedbackR_CV{};
 114:Veno-Echo.cpp **** 
 115:Veno-Echo.cpp **** float crossfeedback{};
 116:Veno-Echo.cpp **** float crossfeedback_CV{};
 117:Veno-Echo.cpp **** 
 118:Veno-Echo.cpp **** float drywet{0.5};
 119:Veno-Echo.cpp **** float drywet_CV{};
 120:Veno-Echo.cpp **** 
 121:Veno-Echo.cpp **** float width{1.0};
 122:Veno-Echo.cpp **** float width_CV{};
 123:Veno-Echo.cpp **** 
 124:Veno-Echo.cpp **** float filterXfade{};
 125:Veno-Echo.cpp **** 
 126:Veno-Echo.cpp **** //TempoDivs div_L{};
 127:Veno-Echo.cpp **** //TempoDivs div_R{};
 128:Veno-Echo.cpp **** 
 129:Veno-Echo.cpp **** float ModDepth{0.0f};   //100.0 is a lot!
 130:Veno-Echo.cpp **** 
 131:Veno-Echo.cpp **** //float modulation_CV{};
 132:Veno-Echo.cpp **** float modulation_CV_Raw{};
 133:Veno-Echo.cpp **** 
 134:Veno-Echo.cpp **** bool syncMode{false};
 135:Veno-Echo.cpp **** bool shift{false};  //global variable for secondary shift functions
 136:Veno-Echo.cpp **** bool mute{};
 137:Veno-Echo.cpp **** 
 138:Veno-Echo.cpp **** bool ClockInFlag{false};
 139:Veno-Echo.cpp **** bool PostFilters{false};
 140:Veno-Echo.cpp **** 
 141:Veno-Echo.cpp **** std::atomic<bool> save_flag{};
 142:Veno-Echo.cpp **** 
 143:Veno-Echo.cpp **** SaveState saveState{IDLE};
 144:Veno-Echo.cpp **** 
 145:Veno-Echo.cpp **** float DELAYL_DEBUG;
 146:Veno-Echo.cpp **** float DELAYR_DEBUG;
 147:Veno-Echo.cpp **** float PHASE_DEBUG;
 148:Veno-Echo.cpp **** float CLOCK_DEBUG;
 149:Veno-Echo.cpp **** 
 150:Veno-Echo.cpp **** static Adsr FwdRevLEnv;
 151:Veno-Echo.cpp **** static Adsr FwdRevREnv;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 26


 152:Veno-Echo.cpp **** 
 153:Veno-Echo.cpp **** static Adsr LPF_Env;
 154:Veno-Echo.cpp **** static Adsr HPF_Env;
 155:Veno-Echo.cpp **** 
 156:Veno-Echo.cpp **** static CrossFade FwdRevLXfade;  //crossfades for reverse delay into fwd delay
 157:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 158:Veno-Echo.cpp **** 
 159:Veno-Echo.cpp **** static CrossFade WidthXfade;
 160:Veno-Echo.cpp **** 
 161:Veno-Echo.cpp **** //crossfades for switching in and out of filters
 162:Veno-Echo.cpp **** static CrossFade LPF_LXfade;
 163:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 164:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 165:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 166:Veno-Echo.cpp **** 
 167:Veno-Echo.cpp **** //crossfades for switching in and out of post filters
 168:Veno-Echo.cpp **** static CrossFade LPF_LXfade_post;
 169:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 170:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 171:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 172:Veno-Echo.cpp **** 
 173:Veno-Echo.cpp **** //cross fades for manual filter crossfading
 174:Veno-Echo.cpp **** static CrossFade FilterMix_L;
 175:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 176:Veno-Echo.cpp **** 
 177:Veno-Echo.cpp **** static CrossFade FilterMix_L_post;
 178:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 179:Veno-Echo.cpp **** 
 180:Veno-Echo.cpp **** //Gate inputs
 181:Veno-Echo.cpp **** Switch ReverseGateL;
 182:Veno-Echo.cpp **** Switch ReverseGateR;
 183:Veno-Echo.cpp **** 
 184:Veno-Echo.cpp **** //Switch TapButton;
 185:Veno-Echo.cpp **** Switch Sync;
 186:Veno-Echo.cpp **** dsy_gpio_pin ClockPin{hw.GetPin(5)};
 187:Veno-Echo.cpp **** GateIn ClockIn;
 188:Veno-Echo.cpp **** //Switch ClockIn;
 189:Veno-Echo.cpp **** 
 190:Veno-Echo.cpp **** //Tap tempo
 191:Veno-Echo.cpp **** Taptempo BaseTempo; 
 192:Veno-Echo.cpp **** 
 193:Veno-Echo.cpp **** Settings AltControls;
 194:Veno-Echo.cpp **** 
 195:Veno-Echo.cpp **** //default alt control values
 196:Veno-Echo.cpp **** constexpr Settings defaultAltControls
 197:Veno-Echo.cpp **** {
 198:Veno-Echo.cpp ****     (minRevDelay + maxRevDelay) / 2.0f, //RevLength
 199:Veno-Echo.cpp ****     1.0f,   //tapRatio
 200:Veno-Echo.cpp ****     0.0f,   //ModDepth
 201:Veno-Echo.cpp ****     (maxModRate + minModRate) / 2.0f,   //ModFreq
 202:Veno-Echo.cpp ****     defaultHPCut,   //HP_Cutoff
 203:Veno-Echo.cpp ****     defaultLPCut,   //LP_Cutoff
 204:Veno-Echo.cpp ****     default_Res,     //Filter Resonance
 205:Veno-Echo.cpp ****     0.0f,    //filter prepost
 206:Veno-Echo.cpp ****     500000.0f,     //base tempo (in us)
 207:Veno-Echo.cpp ****     0.0f,       //L_Rev
 208:Veno-Echo.cpp ****     0.0f    //R_Rev
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 27


 209:Veno-Echo.cpp **** };
 210:Veno-Echo.cpp **** 
 211:Veno-Echo.cpp **** void Update_DelayTimeL_CV();
 212:Veno-Echo.cpp **** void Update_DelayTimeL();
 213:Veno-Echo.cpp **** 
 214:Veno-Echo.cpp **** void Update_DelayTimeR_CV();
 215:Veno-Echo.cpp **** void Update_DelayTimeR();
 216:Veno-Echo.cpp **** 
 217:Veno-Echo.cpp **** void Update_feedbackL_CV();
 218:Veno-Echo.cpp **** void Update_feedbackL();
 219:Veno-Echo.cpp **** 
 220:Veno-Echo.cpp **** void Update_feedbackR_CV();
 221:Veno-Echo.cpp **** void Update_feedbackR();
 222:Veno-Echo.cpp **** 
 223:Veno-Echo.cpp **** void Update_drywet_CV();
 224:Veno-Echo.cpp **** void Update_drywet();
 225:Veno-Echo.cpp **** 
 226:Veno-Echo.cpp **** void Update_width_CV();
 227:Veno-Echo.cpp **** void Update_width();
 228:Veno-Echo.cpp **** 
 229:Veno-Echo.cpp **** void Update_crossfeedback();
 230:Veno-Echo.cpp **** void Update_filterXfade();
 231:Veno-Echo.cpp **** 
 232:Veno-Echo.cpp **** void Update_Buttons();
 233:Veno-Echo.cpp **** void Update_DelayBaseTempo();
 234:Veno-Echo.cpp **** void Update_BaseTempoLED();
 235:Veno-Echo.cpp **** void Update_DelayTempoLEDs();
 236:Veno-Echo.cpp **** void Update_Mod();
 237:Veno-Echo.cpp **** void GetModCV();
 238:Veno-Echo.cpp **** float SetTempoDiv(float input, TempoDivs *div);
 239:Veno-Echo.cpp **** void UpdateClock();
 240:Veno-Echo.cpp **** double GetTapRatio(TapRatios ratio);
 241:Veno-Echo.cpp **** void ApplySettings(const Settings &setting);
 242:Veno-Echo.cpp **** void TurnOnAllLEDs();
 243:Veno-Echo.cpp **** void ResetAllLEDs();
 244:Veno-Echo.cpp **** float HardLimit(float input, float limit);
 245:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val);
 246:Veno-Echo.cpp **** bool checkPickupState(float value, float lastvalue, bool lastState, bool ShiftChange);
 247:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
 248:Veno-Echo.cpp **** 
 249:Veno-Echo.cpp **** //static void AudioCallback(float *in, float *out, size_t size)
 250:Veno-Echo.cpp **** static void AudioCallback(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_t size)
 251:Veno-Echo.cpp **** {
 252:Veno-Echo.cpp **** 
 253:Veno-Echo.cpp **** /*
 254:Veno-Echo.cpp **** static uint32_t funcLength{};
 255:Veno-Echo.cpp **** static uint32_t lastFuncTime{};
 256:Veno-Echo.cpp **** static uint32_t maxFuncLength{};
 257:Veno-Echo.cpp **** static uint32_t minFuncLength{500000000};
 258:Veno-Echo.cpp **** static uint32_t aveFuncLength{};
 259:Veno-Echo.cpp **** 
 260:Veno-Echo.cpp **** */
 261:Veno-Echo.cpp **** 
 262:Veno-Echo.cpp **** static int Counter{};
 263:Veno-Echo.cpp **** 
 264:Veno-Echo.cpp **** /*
 265:Veno-Echo.cpp ****     funcLength = System::GetUs() - lastFuncTime;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 28


 266:Veno-Echo.cpp **** 
 267:Veno-Echo.cpp ****     aveFuncLength = (funcLength + 1023 * aveFuncLength) >> 10;
 268:Veno-Echo.cpp ****     if (funcLength > maxFuncLength)
 269:Veno-Echo.cpp ****     {
 270:Veno-Echo.cpp ****         maxFuncLength = funcLength;
 271:Veno-Echo.cpp ****     }
 272:Veno-Echo.cpp **** 
 273:Veno-Echo.cpp ****     if (funcLength < minFuncLength)
 274:Veno-Echo.cpp ****     {
 275:Veno-Echo.cpp ****         minFuncLength = funcLength;
 276:Veno-Echo.cpp ****     }
 277:Veno-Echo.cpp **** 
 278:Veno-Echo.cpp **** */
 279:Veno-Echo.cpp **** 
 280:Veno-Echo.cpp **** Counter = (Counter + 1) % updateDiv;
 281:Veno-Echo.cpp **** 
 282:Veno-Echo.cpp ****     /*
 283:Veno-Echo.cpp ****         //each call generate random dither length between 0 and 14
 284:Veno-Echo.cpp ****         uint16_t randomDither{uint16_t (rand() % 5)};
 285:Veno-Echo.cpp ****         //init timeofCall as current time
 286:Veno-Echo.cpp ****         uint32_t timeofCall{System::GetUs()};
 287:Veno-Echo.cpp **** 
 288:Veno-Echo.cpp ****         //wait for random Dither time
 289:Veno-Echo.cpp ****         while( (System::GetUs() - timeofCall ) < randomDither)
 290:Veno-Echo.cpp ****         {}
 291:Veno-Echo.cpp ****     */
 292:Veno-Echo.cpp **** 
 293:Veno-Echo.cpp ****         switch (Counter)
 294:Veno-Echo.cpp ****         {
 295:Veno-Echo.cpp ****             case 0:
 296:Veno-Echo.cpp ****                 Update_Buttons();
 297:Veno-Echo.cpp ****                 GetModCV();
 298:Veno-Echo.cpp ****                 Update_DelayBaseTempo();
 299:Veno-Echo.cpp ****                 Update_DelayTempoLEDs();
 300:Veno-Echo.cpp ****             break;
 301:Veno-Echo.cpp **** 
 302:Veno-Echo.cpp ****             case 1:
 303:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 304:Veno-Echo.cpp ****             break;
 305:Veno-Echo.cpp **** 
 306:Veno-Echo.cpp ****             case 2:
 307:Veno-Echo.cpp ****                 if(saveState != SAVING)
 308:Veno-Echo.cpp ****                 {
 309:Veno-Echo.cpp ****                     Update_DelayTimeL();
 310:Veno-Echo.cpp ****                 }
 311:Veno-Echo.cpp ****             break;
 312:Veno-Echo.cpp **** 
 313:Veno-Echo.cpp ****             case 3:
 314:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 315:Veno-Echo.cpp ****             break;
 316:Veno-Echo.cpp **** 
 317:Veno-Echo.cpp ****             case 4:
 318:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 319:Veno-Echo.cpp ****                 {
 320:Veno-Echo.cpp ****                     Update_DelayTimeR();
 321:Veno-Echo.cpp ****                 }
 322:Veno-Echo.cpp ****             break;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 29


 323:Veno-Echo.cpp **** 
 324:Veno-Echo.cpp ****             case 5:
 325:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 326:Veno-Echo.cpp ****             break;
 327:Veno-Echo.cpp **** 
 328:Veno-Echo.cpp ****             case 6:
 329:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 330:Veno-Echo.cpp ****                 {
 331:Veno-Echo.cpp ****                     Update_feedbackL();
 332:Veno-Echo.cpp ****                 }
 333:Veno-Echo.cpp ****             break;
 334:Veno-Echo.cpp **** 
 335:Veno-Echo.cpp ****             case 7:
 336:Veno-Echo.cpp ****                 Update_feedbackR_CV();
 337:Veno-Echo.cpp ****             break;
 338:Veno-Echo.cpp **** 
 339:Veno-Echo.cpp ****             case 8:
 340:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 341:Veno-Echo.cpp ****                 {
 342:Veno-Echo.cpp ****                     Update_feedbackR();
 343:Veno-Echo.cpp ****                 }
 344:Veno-Echo.cpp ****             break;
 345:Veno-Echo.cpp **** 
 346:Veno-Echo.cpp ****             case 9:
 347:Veno-Echo.cpp ****                 Update_drywet_CV();
 348:Veno-Echo.cpp ****             break;
 349:Veno-Echo.cpp **** 
 350:Veno-Echo.cpp ****             case 10:
 351:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 352:Veno-Echo.cpp ****                 {
 353:Veno-Echo.cpp ****                     Update_drywet();
 354:Veno-Echo.cpp ****                 }
 355:Veno-Echo.cpp ****             break;
 356:Veno-Echo.cpp **** 
 357:Veno-Echo.cpp ****             case 11:
 358:Veno-Echo.cpp ****                 Update_width_CV();
 359:Veno-Echo.cpp ****             break;
 360:Veno-Echo.cpp **** 
 361:Veno-Echo.cpp ****             case 12:
 362:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 363:Veno-Echo.cpp ****                 {
 364:Veno-Echo.cpp ****                     Update_width();
 365:Veno-Echo.cpp ****                 }
 366:Veno-Echo.cpp ****             break;
 367:Veno-Echo.cpp **** 
 368:Veno-Echo.cpp ****             case 13:
 369:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 370:Veno-Echo.cpp ****                 {
 371:Veno-Echo.cpp ****                     Update_crossfeedback();
 372:Veno-Echo.cpp ****                 }
 373:Veno-Echo.cpp ****             break;
 374:Veno-Echo.cpp **** 
 375:Veno-Echo.cpp ****             case 14:
 376:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 377:Veno-Echo.cpp ****                 {
 378:Veno-Echo.cpp ****                     Update_filterXfade();
 379:Veno-Echo.cpp ****                 }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 30


 380:Veno-Echo.cpp ****             break;
 381:Veno-Echo.cpp ****         }
 382:Veno-Echo.cpp **** 
 383:Veno-Echo.cpp ****     for(size_t i = 0; i < size; i ++)
 384:Veno-Echo.cpp ****     {   
 385:Veno-Echo.cpp ****         UpdateClock(); 
 386:Veno-Echo.cpp ****         Update_Mod();
 387:Veno-Echo.cpp **** 
 388:Veno-Echo.cpp ****         //get xfade positions from envelopes:
 389:Veno-Echo.cpp ****         float FwdRevLXFadepos = FwdRevLEnv.Process(Rev_L_sw.getState());
 390:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 391:Veno-Echo.cpp ****         
 392:Veno-Echo.cpp ****         float HPFXFadepos = HPF_Env.Process(HPF_sw.getState());
 393:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 394:Veno-Echo.cpp ****         float Left_In = in[0][i];
 395:Veno-Echo.cpp ****         float Right_In = in[1][i];
 396:Veno-Echo.cpp **** 
 397:Veno-Echo.cpp ****         //set xfade positions      
 398:Veno-Echo.cpp ****         FwdRevLXfade.SetPos(FwdRevLXFadepos);
 399:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 400:Veno-Echo.cpp ****         
 401:Veno-Echo.cpp ****         HPF_LXfade.SetPos(HPFXFadepos);
 402:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 403:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 404:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 405:Veno-Echo.cpp **** 
 406:Veno-Echo.cpp ****         HPF_LXfade_post.SetPos(HPFXFadepos);
 407:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 408:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 409:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 410:Veno-Echo.cpp **** 
 411:Veno-Echo.cpp ****         FilterMix_L.SetPos(filterXfade);
 412:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 413:Veno-Echo.cpp **** 
 414:Veno-Echo.cpp ****         FilterMix_L_post.SetPos(filterXfade);
 415:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 416:Veno-Echo.cpp **** 
 417:Veno-Echo.cpp ****         //filter controls, read from reverse delay lines:
 418:Veno-Echo.cpp ****         float delayRevSignalL = delaysL_REV.Read();
 419:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 420:Veno-Echo.cpp **** 
 421:Veno-Echo.cpp ****         //write input to reverse delay (no feedback)
 422:Veno-Echo.cpp ****         delaysL_REV.Write(Left_In);
 423:Veno-Echo.cpp ****         delaysR_REV.Write(Right_In);
 424:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 425:Veno-Echo.cpp ****         //delaysR_REV.Write(Input_R);
 426:Veno-Echo.cpp **** 
 427:Veno-Echo.cpp ****         //process Xfade between reverse and direct input
 428:Veno-Echo.cpp ****         float FwdRevSignalLXFade = FwdRevLXfade.Process(Left_In,delayRevSignalL);
 429:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(Right_In,delayRevSignalR);
 430:Veno-Echo.cpp **** 
 431:Veno-Echo.cpp ****         //Get combined output from all delay heads
 432:Veno-Echo.cpp ****         float delaySignal_L{delayL.GetOutput()};   
 433:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 434:Veno-Echo.cpp **** 
 435:Veno-Echo.cpp ****         //Update Base Tempo LED
 436:Veno-Echo.cpp ****         Update_BaseTempoLED();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 31


 437:Veno-Echo.cpp **** 
 438:Veno-Echo.cpp ****         //hard limit
 439:Veno-Echo.cpp ****         delaySignal_L = HardLimit(delaySignal_L,AudioLimit);
 440:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 441:Veno-Echo.cpp **** 
 442:Veno-Echo.cpp **** if(!PostFilters)
 443:Veno-Echo.cpp **** {
 444:Veno-Echo.cpp **** //****************************************************************************************
 445:Veno-Echo.cpp ****         //pre filters
 446:Veno-Echo.cpp ****         //process LPF
 447:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 448:Veno-Echo.cpp ****         LPF_L.Process(delaySignal_L * 0.1f);
 449:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 450:Veno-Echo.cpp **** 
 451:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 452:Veno-Echo.cpp ****         float LPF_L_signal{LPF_L.Low() * 10.0f};
 453:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 454:Veno-Echo.cpp ****         
 455:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 456:Veno-Echo.cpp ****         float filteredDelay_L{LPF_LXfade.Process(delaySignal_L, LPF_L_signal)};
 457:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 458:Veno-Echo.cpp **** 
 459:Veno-Echo.cpp ****         //hard limit
 460:Veno-Echo.cpp ****         filteredDelay_L = HardLimit(filteredDelay_L,AudioLimit);
 461:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 462:Veno-Echo.cpp **** 
 463:Veno-Echo.cpp ****         //process HPF
 464:Veno-Echo.cpp ****         HPF_L.Process(filteredDelay_L * 0.1f);
 465:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 466:Veno-Echo.cpp **** 
 467:Veno-Echo.cpp ****         float HPF_L_signal{HPF_L.High() * 10.0f};
 468:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 469:Veno-Echo.cpp **** 
 470:Veno-Echo.cpp ****         filteredDelay_L = HPF_LXfade.Process(filteredDelay_L, HPF_L_signal);
 471:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 472:Veno-Echo.cpp **** 
 473:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 474:Veno-Echo.cpp **** 
 475:Veno-Echo.cpp ****         delaySignal_L = FilterMix_L.Process(delaySignal_L,filteredDelay_L);
 476:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 477:Veno-Echo.cpp **** 
 478:Veno-Echo.cpp **** //****************************************************************************************
 479:Veno-Echo.cpp **** }
 480:Veno-Echo.cpp **** 
 481:Veno-Echo.cpp **** else
 482:Veno-Echo.cpp **** {
 483:Veno-Echo.cpp ****     /* code */
 484:Veno-Echo.cpp **** }
 485:Veno-Echo.cpp **** 
 486:Veno-Echo.cpp ****         static float LNegFB{};  //static so value can be used for next sample
 487:Veno-Echo.cpp ****         static float RNegFB{};
 488:Veno-Echo.cpp **** 
 489:Veno-Echo.cpp ****         //ensure we never get inverse feedback
 490:Veno-Echo.cpp ****         if(feedbackL < LNegFB) 
 491:Veno-Echo.cpp ****             LNegFB = 0.0f;
 492:Veno-Echo.cpp ****         
 493:Veno-Echo.cpp ****         if(feedbackR < RNegFB)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 32


 494:Veno-Echo.cpp ****             RNegFB = 0.0f;
 495:Veno-Echo.cpp **** 
 496:Veno-Echo.cpp ****         float feedbackSignalL{ (feedbackL - LNegFB) * delaySignal_L };
 497:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 498:Veno-Echo.cpp **** 
 499:Veno-Echo.cpp ****         //crossfeedback:
 500:Veno-Echo.cpp ****         float feedbackSignalLR{((1 - crossfeedback) * feedbackSignalL) + (crossfeedback * feedbackS
 501:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 502:Veno-Echo.cpp **** 
 503:Veno-Echo.cpp **** 
 504:Veno-Echo.cpp ****         //get envelopes for feedback signals
 505:Veno-Echo.cpp ****         float EnvL{LeftEnv.GetEnv(feedbackSignalL)};  
 506:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 507:Veno-Echo.cpp **** 
 508:Veno-Echo.cpp ****             //if envelope of feedback signal exceeds threshold calculate negative FB factor
 509:Veno-Echo.cpp ****             if (EnvL >= NegFBOffset)
 510:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 511:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 512:Veno-Echo.cpp ****             else LNegFB = 0.0;
 513:Veno-Echo.cpp ****             
 514:Veno-Echo.cpp ****             if (EnvR >= NegFBOffset)
 515:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 516:Veno-Echo.cpp ****             else RNegFB = 0.0;
 517:Veno-Echo.cpp **** 
 518:Veno-Echo.cpp ****         //write to fwd delay lines, including a DC block and hard limit
 519:Veno-Echo.cpp ****         float combinedL{feedbackSignalLR + FwdRevSignalLXFade};
 520:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 521:Veno-Echo.cpp ****  
 522:Veno-Echo.cpp ****         //hard limit
 523:Veno-Echo.cpp ****         combinedL = HardLimit(combinedL,AudioLimit);
 524:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 525:Veno-Echo.cpp **** 
 526:Veno-Echo.cpp ****         delayL.Write( combinedL );
 527:Veno-Echo.cpp ****         delayR.Write( combinedR );
 528:Veno-Echo.cpp **** 
 529:Veno-Echo.cpp ****         // floats for wet dry mix
 530:Veno-Echo.cpp ****         float mixL;
 531:Veno-Echo.cpp ****         float mixR;
 532:Veno-Echo.cpp **** 
 533:Veno-Echo.cpp ****         float delaySignal_L_SUM = WidthXfade.Process(delaySignal_L,delaySignal_R);    //mix to mono
 534:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 535:Veno-Echo.cpp **** 
 536:Veno-Echo.cpp ****         //hard limit
 537:Veno-Echo.cpp ****         delaySignal_L_SUM = HardLimit(delaySignal_L_SUM,AudioLimit);
 538:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 539:Veno-Echo.cpp **** 
 540:Veno-Echo.cpp **** if(PostFilters)
 541:Veno-Echo.cpp **** {
 542:Veno-Echo.cpp ****     //****************************************************************************************
 543:Veno-Echo.cpp ****         //post filters
 544:Veno-Echo.cpp ****         //process LPF
 545:Veno-Echo.cpp ****         //0.1 factor necessary to stop variables going out of range with large amplitude inputs
 546:Veno-Echo.cpp ****         LPF_L_post.Process(delaySignal_L_SUM * 0.1f);
 547:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 548:Veno-Echo.cpp **** 
 549:Veno-Echo.cpp ****         //10.0f factor to bring back to regular level.
 550:Veno-Echo.cpp ****         float LPF_L_signal_post{LPF_L_post.Low() * 10.0f};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 33


 551:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 552:Veno-Echo.cpp ****         
 553:Veno-Echo.cpp ****         //crossfades will need to be tweaked for new switch layout.
 554:Veno-Echo.cpp ****         float filteredDelay_L_post{LPF_LXfade_post.Process(delaySignal_L_SUM, LPF_L_signal_post)};
 555:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 556:Veno-Echo.cpp **** 
 557:Veno-Echo.cpp ****         //hard limit
 558:Veno-Echo.cpp ****         filteredDelay_L_post = HardLimit(filteredDelay_L_post,AudioLimit);
 559:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 560:Veno-Echo.cpp **** 
 561:Veno-Echo.cpp ****         //process HPF
 562:Veno-Echo.cpp ****         HPF_L_post.Process(filteredDelay_L_post * 0.1f);
 563:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 564:Veno-Echo.cpp **** 
 565:Veno-Echo.cpp ****         float HPF_L_signal_post{HPF_L_post.High() * 10.0f};
 566:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 567:Veno-Echo.cpp **** 
 568:Veno-Echo.cpp ****         filteredDelay_L_post = HPF_LXfade_post.Process(filteredDelay_L_post, HPF_L_signal_post);
 569:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 570:Veno-Echo.cpp **** 
 571:Veno-Echo.cpp ****         //crossfade between filtered and unfiltered delays:
 572:Veno-Echo.cpp ****         delaySignal_L_SUM = FilterMix_L_post.Process(delaySignal_L_SUM,filteredDelay_L_post);
 573:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 574:Veno-Echo.cpp **** 
 575:Veno-Echo.cpp ****     //****************************************************************************************
 576:Veno-Echo.cpp **** }
 577:Veno-Echo.cpp **** else
 578:Veno-Echo.cpp **** {
 579:Veno-Echo.cpp ****     /* code */
 580:Veno-Echo.cpp **** }
 581:Veno-Echo.cpp ****         if(drywet < 0.5f)
 582:Veno-Echo.cpp ****         {
 583:Veno-Echo.cpp ****             mixL = Left_In + (2.0f * drywet * delaySignal_L_SUM);
 584:Veno-Echo.cpp ****             mixR = Right_In + (2.0f * drywet * delaySignal_R_SUM);
 585:Veno-Echo.cpp ****         }
 586:Veno-Echo.cpp ****         else if(drywet > 0.5f)
 587:Veno-Echo.cpp ****         {
 588:Veno-Echo.cpp ****             mixL = ((1 - drywet)* 2.0f * Left_In) + delaySignal_L_SUM;
 589:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * Right_In) + delaySignal_R_SUM;
 590:Veno-Echo.cpp ****         }
 591:Veno-Echo.cpp ****         else
 592:Veno-Echo.cpp ****         {
 593:Veno-Echo.cpp ****             mixL = Left_In + delaySignal_L_SUM;
 594:Veno-Echo.cpp ****             mixR = Right_In + delaySignal_R_SUM;
 595:Veno-Echo.cpp ****         }
 596:Veno-Echo.cpp **** 
 597:Veno-Echo.cpp ****         //send mixes to outputs
 598:Veno-Echo.cpp ****         if(mute)
 599:Veno-Echo.cpp ****         {
 600:Veno-Echo.cpp ****             out[0][i] = 0.0f;
 601:Veno-Echo.cpp ****             out[1][i] = 0.0f;
 602:Veno-Echo.cpp ****         }
 603:Veno-Echo.cpp ****         else
 604:Veno-Echo.cpp ****         {
 605:Veno-Echo.cpp ****             out[0][i] = mixL;
 606:Veno-Echo.cpp ****             out[1][i] = mixR;
 607:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 34


 608:Veno-Echo.cpp **** 
 609:Veno-Echo.cpp ****         //write to DAC for debug
 610:Veno-Echo.cpp ****        // dsy_dac_write(DSY_DAC_CHN1, static_cast<int>( EnvL * 4095.0f));
 611:Veno-Echo.cpp **** 
 612:Veno-Echo.cpp ****     }
 613:Veno-Echo.cpp **** 
 614:Veno-Echo.cpp **** }
 615:Veno-Echo.cpp **** 
 616:Veno-Echo.cpp **** void InitDelays(float samplerate)
 617:Veno-Echo.cpp **** {
 439              		.loc 20 617 1 is_stmt 1 view -0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 16
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 618:Veno-Echo.cpp **** 
 619:Veno-Echo.cpp ****     //Init fwd delays
 620:Veno-Echo.cpp ****     delMemsL.Init(2);    //2 heads
 443              		.loc 20 620 5 view .LVU50
 444              	.LBB898:
 445              	.LBI898:
  53:delayline_multitap.h ****     
  54:delayline_multitap.h ****     /** initializes the delay line by clearing the values within, and setting delay head times to 0
  55:delayline_multitap.h ****     */
  56:delayline_multitap.h ****     void Init( size_t num_heads) 
 446              		.loc 18 56 10 view .LVU51
 447              	.LBB899:
 448              	.LBB900:
  57:delayline_multitap.h ****     {
  58:delayline_multitap.h ****         for(size_t i = 0; i < max_size; i++)
 449              		.loc 18 58 29 view .LVU52
 450 0000 5D4B     		ldr	r3, .L36
 451 0002 5E49     		ldr	r1, .L36+4
 452              	.LBE900:
 453              	.LBE899:
 454              	.LBE898:
 617:Veno-Echo.cpp **** 
 455              		.loc 20 617 1 is_stmt 0 view .LVU53
 456 0004 F0B5     		push	{r4, r5, r6, r7, lr}
 457              		.cfi_def_cfa_offset 20
 458              		.cfi_offset 4, -20
 459              		.cfi_offset 5, -16
 460              		.cfi_offset 6, -12
 461              		.cfi_offset 7, -8
 462              		.cfi_offset 14, -4
 463 0006 A3F18405 		sub	r5, r3, #132
 464 000a 85B0     		sub	sp, sp, #20
 465              		.cfi_def_cfa_offset 40
 466 000c 2846     		mov	r0, r5
 467              	.LVL15:
 468              	.L17:
 469              	.LBB905:
 470              	.LBB904:
 471              	.LBB901:
  59:delayline_multitap.h ****         {
  60:delayline_multitap.h ****             line_[i] = T(0);
 472              		.loc 18 60 13 view .LVU54
 473 000e 0022     		movs	r2, #0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 35


 474 0010 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 475              		.loc 18 58 9 is_stmt 1 view .LVU55
  58:delayline_multitap.h ****         {
 476              		.loc 18 58 29 view .LVU56
 477 0014 8B42     		cmp	r3, r1
 478 0016 FAD1     		bne	.L17
 479              	.LBE901:
  61:delayline_multitap.h ****         }
  62:delayline_multitap.h **** 
  63:delayline_multitap.h ****         write_ptr_ = 0;
 480              		.loc 18 63 9 is_stmt 0 view .LVU57
 481 0018 0022     		movs	r2, #0
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 482              		.loc 18 64 9 view .LVU58
 483 001a 594C     		ldr	r4, .L36+8
 484 001c 0226     		movs	r6, #2
 485              	.LBB902:
  65:delayline_multitap.h **** 
  66:delayline_multitap.h ****         for (size_t i{ 0 }; i < num_heads_; ++i)
 486              		.loc 18 66 21 view .LVU59
 487 001e 1346     		mov	r3, r2
 488              	.LBE902:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 489              		.loc 18 63 9 view .LVU60
 490 0020 2A60     		str	r2, [r5]
  64:delayline_multitap.h ****         num_heads_ = num_heads;
 491              		.loc 18 64 9 view .LVU61
 492 0022 2E51     		str	r6, [r5, r4]
 493              	.LVL16:
 494              	.LBB903:
 495              		.loc 18 66 31 is_stmt 1 view .LVU62
 496              	.L18:
  67:delayline_multitap.h ****         {
  68:delayline_multitap.h ****             delay_[i] = 0;  //set all delay heads to 0 (no delay)
 497              		.loc 18 68 13 is_stmt 0 view .LVU63
 498 0024 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
 499              		.loc 18 66 9 view .LVU64
 500 0026 0133     		adds	r3, r3, #1
 501              	.LVL17:
  69:delayline_multitap.h ****             frac_[i] = 0;
 502              		.loc 18 69 13 view .LVU65
 503 0028 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 504              		.loc 18 68 13 view .LVU66
 505 002a 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 506              		.loc 18 66 31 view .LVU67
 507 002e 0A68     		ldr	r2, [r1]
 508              		.loc 18 69 13 view .LVU68
 509 0030 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 510              		.loc 18 66 9 is_stmt 1 view .LVU69
 511              	.LVL18:
  66:delayline_multitap.h ****         {
 512              		.loc 18 66 31 view .LVU70
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 36


 513 0032 9A42     		cmp	r2, r3
 514 0034 F6D8     		bhi	.L18
 515 0036 534B     		ldr	r3, .L36+12
 516              	.LVL19:
  66:delayline_multitap.h ****         {
 517              		.loc 18 66 31 is_stmt 0 view .LVU71
 518 0038 5349     		ldr	r1, .L36+16
 519 003a A3F18406 		sub	r6, r3, #132
 520 003e 3046     		mov	r0, r6
 521              	.LVL20:
 522              	.L19:
  66:delayline_multitap.h ****         {
 523              		.loc 18 66 31 view .LVU72
 524              	.LBE903:
 525              	.LBE904:
 526              	.LBE905:
 527              	.LBB906:
 528              	.LBB907:
 529              	.LBB908:
  60:delayline_multitap.h ****         }
 530              		.loc 18 60 13 view .LVU73
 531 0040 0022     		movs	r2, #0
 532 0042 43F8042B 		str	r2, [r3], #4	@ float
  58:delayline_multitap.h ****         {
 533              		.loc 18 58 9 is_stmt 1 view .LVU74
  58:delayline_multitap.h ****         {
 534              		.loc 18 58 29 view .LVU75
 535 0046 8B42     		cmp	r3, r1
 536 0048 FAD1     		bne	.L19
 537              	.LBE908:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 538              		.loc 18 63 9 is_stmt 0 view .LVU76
 539 004a 0022     		movs	r2, #0
  64:delayline_multitap.h **** 
 540              		.loc 18 64 9 view .LVU77
 541 004c 4C4C     		ldr	r4, .L36+8
 542 004e 0227     		movs	r7, #2
 543              	.LBB909:
  66:delayline_multitap.h ****         {
 544              		.loc 18 66 21 view .LVU78
 545 0050 1346     		mov	r3, r2
 546              	.LBE909:
  63:delayline_multitap.h ****         num_heads_ = num_heads;
 547              		.loc 18 63 9 view .LVU79
 548 0052 3260     		str	r2, [r6]
  64:delayline_multitap.h **** 
 549              		.loc 18 64 9 view .LVU80
 550 0054 3751     		str	r7, [r6, r4]
 551              	.LVL21:
 552              	.LBB910:
  66:delayline_multitap.h ****         {
 553              		.loc 18 66 31 is_stmt 1 view .LVU81
 554              	.L20:
  68:delayline_multitap.h ****             frac_[i] = 0;
 555              		.loc 18 68 13 is_stmt 0 view .LVU82
 556 0056 0022     		movs	r2, #0
  66:delayline_multitap.h ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 37


 557              		.loc 18 66 9 view .LVU83
 558 0058 0133     		adds	r3, r3, #1
 559              	.LVL22:
 560              		.loc 18 69 13 view .LVU84
 561 005a 0024     		movs	r4, #0
  68:delayline_multitap.h ****             frac_[i] = 0;
 562              		.loc 18 68 13 view .LVU85
 563 005c 40F8042F 		str	r2, [r0, #4]!
  66:delayline_multitap.h ****         {
 564              		.loc 18 66 31 view .LVU86
 565 0060 0A68     		ldr	r2, [r1]
 566              		.loc 18 69 13 view .LVU87
 567 0062 0464     		str	r4, [r0, #64]	@ float
  66:delayline_multitap.h ****         {
 568              		.loc 18 66 9 is_stmt 1 view .LVU88
 569              	.LVL23:
  66:delayline_multitap.h ****         {
 570              		.loc 18 66 31 view .LVU89
 571 0064 9A42     		cmp	r2, r3
 572 0066 F6D8     		bhi	.L20
 573              	.LVL24:
  66:delayline_multitap.h ****         {
 574              		.loc 18 66 31 is_stmt 0 view .LVU90
 575              	.LBE910:
 576              	.LBE907:
 577              	.LBE906:
 621:Veno-Echo.cpp ****     delMemsR.Init(2);    //2 heads
 622:Veno-Echo.cpp **** 
 623:Veno-Echo.cpp ****     //point del classes at SDRAM buffers
 624:Veno-Echo.cpp ****     delayL.del = &delMemsL; 
 578              		.loc 20 624 5 is_stmt 1 view .LVU91
 625:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 579              		.loc 20 625 16 is_stmt 0 view .LVU92
 580 0068 484C     		ldr	r4, .L36+20
 626:Veno-Echo.cpp **** 
 627:Veno-Echo.cpp ****     delayL.init(hw.GetPin(8),samplerate);
 581              		.loc 20 627 16 view .LVU93
 582 006a 0820     		movs	r0, #8
 624:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 583              		.loc 20 624 16 view .LVU94
 584 006c 484F     		ldr	r7, .L36+24
 585 006e 8DED010A 		vstr.32	s0, [sp, #4]	@ int
 586 0072 3D60     		str	r5, [r7]
 625:Veno-Echo.cpp ****     delayR.del = &delMemsR;
 587              		.loc 20 625 5 is_stmt 1 view .LVU95
 588              	.LBB911:
 589              	.LBB912:
 590              	.LBB913:
  40:delayline_reverse.h ****     /** initializes the delay line by clearing the values within, and setting delay to min time.
  41:delayline_reverse.h ****     */
  42:delayline_reverse.h ****     void Init() 
  43:delayline_reverse.h ****     { 
  44:delayline_reverse.h ****         Reset(); 
  45:delayline_reverse.h ****     }
  46:delayline_reverse.h ****     /** clears buffer, sets write ptr to 0, and delay to 1 sample.
  47:delayline_reverse.h ****     */
  48:delayline_reverse.h ****     void Reset()
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 38


  49:delayline_reverse.h ****     {
  50:delayline_reverse.h **** 
  51:delayline_reverse.h ****         delay1_  = 25000; //min Reverse delay time
 591              		.loc 19 51 9 is_stmt 0 view .LVU96
 592 0074 46F2A815 		movw	r5, #25000
 593              	.LBE913:
 594              	.LBE912:
 595              	.LBE911:
 625:Veno-Echo.cpp **** 
 596              		.loc 20 625 16 view .LVU97
 597 0078 2660     		str	r6, [r4]
 598              		.loc 20 627 5 is_stmt 1 view .LVU98
 599              		.loc 20 627 16 is_stmt 0 view .LVU99
 600 007a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 601              	.LVL25:
 602              		.loc 20 627 16 view .LVU100
 603 007e 0346     		mov	r3, r0	@ movhi
 604 0080 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 605 0084 3846     		mov	r0, r7
 606 0086 ADF80830 		strh	r3, [sp, #8]	@ movhi
 607 008a 0299     		ldr	r1, [sp, #8]
 608 008c FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 609              	.LVL26:
 628:Veno-Echo.cpp ****     delayR.init(hw.GetPin(9),samplerate);
 610              		.loc 20 628 5 is_stmt 1 view .LVU101
 611              		.loc 20 628 16 is_stmt 0 view .LVU102
 612 0090 0920     		movs	r0, #9
 613 0092 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 614              	.LVL27:
 615 0096 0346     		mov	r3, r0	@ movhi
 616 0098 2046     		mov	r0, r4
 617              	.LBB925:
 618              	.LBB920:
 619              	.LBB915:
 620              		.loc 19 51 9 view .LVU103
 621 009a 3E4C     		ldr	r4, .L36+28
 622              	.LBE915:
 623              	.LBE920:
 624              	.LBE925:
 625              		.loc 20 628 16 view .LVU104
 626 009c ADF80C30 		strh	r3, [sp, #12]	@ movhi
 627 00a0 0399     		ldr	r1, [sp, #12]
 628 00a2 9DED010A 		vldr.32	s0, [sp, #4]	@ int
 629 00a6 FFF7FEFF 		bl	_ZN10DelayMulti4initE12dsy_gpio_pinf
 630              	.LVL28:
 629:Veno-Echo.cpp **** 
 630:Veno-Echo.cpp ****     //delayL.SetDelayTime(500.0f);
 631:Veno-Echo.cpp ****     //delayR.SetDelayTime(500.0f);
 632:Veno-Echo.cpp **** 
 633:Veno-Echo.cpp ****     //Init rev delays
 634:Veno-Echo.cpp ****     delMemsL_REV.Init();
 631              		.loc 20 634 5 is_stmt 1 view .LVU105
 632              	.LBB926:
 633              	.LBI911:
  42:delayline_reverse.h ****     { 
 634              		.loc 19 42 10 view .LVU106
 635              	.LBB921:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 39


 636              	.LBI912:
  48:delayline_reverse.h ****     {
 637              		.loc 19 48 10 view .LVU107
 638              	.LBB916:
  52:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 639              		.loc 19 52 9 is_stmt 0 view .LVU108
 640 00aa 3B4A     		ldr	r2, .L36+32
 641 00ac 45F6C050 		movw	r0, #24000
 642 00b0 04F11803 		add	r3, r4, #24
 643 00b4 3949     		ldr	r1, .L36+36
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 644              		.loc 19 51 9 view .LVU109
 645 00b6 2561     		str	r5, [r4, #16]
 646              		.loc 19 52 9 view .LVU110
 647 00b8 A050     		str	r0, [r4, r2]
 648              	.LVL29:
 649              	.LBB914:
  53:delayline_reverse.h ****         
  54:delayline_reverse.h ****         for(size_t i = 0; i < max_size; i++)
 650              		.loc 19 54 29 is_stmt 1 view .LVU111
 651              	.L21:
  55:delayline_reverse.h ****         {
  56:delayline_reverse.h ****             line_[i] = T(0);
 652              		.loc 19 56 13 is_stmt 0 view .LVU112
 653 00ba 0022     		movs	r2, #0
 654 00bc 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 655              		.loc 19 54 9 is_stmt 1 view .LVU113
  54:delayline_reverse.h ****         {
 656              		.loc 19 54 29 view .LVU114
 657 00c0 8B42     		cmp	r3, r1
 658 00c2 FAD1     		bne	.L21
 659              	.LBE914:
 660              	.LBE916:
 661              	.LBE921:
 662              	.LBE926:
 663              	.LBB927:
 664              	.LBB928:
 665              	.LBB929:
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 666              		.loc 19 51 9 is_stmt 0 view .LVU115
 667 00c4 3648     		ldr	r0, .L36+40
 668 00c6 46F2A811 		movw	r1, #25000
  52:delayline_reverse.h ****         
 669              		.loc 19 52 9 view .LVU116
 670 00ca 334D     		ldr	r5, .L36+32
 671 00cc 45F6C056 		movw	r6, #24000
  51:delayline_reverse.h ****         fadetime = 24000;    //in samples = 0.5 seconds
 672              		.loc 19 51 9 view .LVU117
 673 00d0 0161     		str	r1, [r0, #16]
 674              	.LBE929:
 675              	.LBE928:
 676              	.LBE927:
 677              	.LBB952:
 678              	.LBB922:
 679              	.LBB917:
  57:delayline_reverse.h ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 40


  58:delayline_reverse.h ****         write_ptr_ = 0;
 680              		.loc 19 58 9 view .LVU118
 681 00d2 0021     		movs	r1, #0
 682              	.LBE917:
 683              	.LBE922:
 684              	.LBE952:
 685              	.LBB953:
 686              	.LBB942:
 687              	.LBB932:
  52:delayline_reverse.h ****         
 688              		.loc 19 52 9 view .LVU119
 689 00d4 4651     		str	r6, [r0, r5]
 690              	.LBE932:
 691              	.LBE942:
 692              	.LBE953:
 693              	.LBB954:
 694              	.LBB923:
 695              	.LBB918:
  59:delayline_reverse.h ****         read_ptr1_ = 0;
  60:delayline_reverse.h ****         read_ptr2_ = 0;
  61:delayline_reverse.h ****         headDiff_ = 0;
  62:delayline_reverse.h ****         playinghead_ = false;
 696              		.loc 19 62 9 view .LVU120
 697 00d6 0435     		adds	r5, r5, #4
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
  64:delayline_reverse.h ****         fading_ = false;
 698              		.loc 19 64 9 view .LVU121
 699 00d8 324E     		ldr	r6, .L36+44
 700 00da 00F11803 		add	r3, r0, #24
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 701              		.loc 19 62 9 view .LVU122
 702 00de 6155     		strb	r1, [r4, r5]
  60:delayline_reverse.h ****         headDiff_ = 0;
 703              		.loc 19 60 9 view .LVU123
 704 00e0 E160     		str	r1, [r4, #12]
  63:delayline_reverse.h ****         fadepos_ = 0.0f;
 705              		.loc 19 63 9 view .LVU124
 706 00e2 314D     		ldr	r5, .L36+48
  61:delayline_reverse.h ****         playinghead_ = false;
 707              		.loc 19 61 9 view .LVU125
 708 00e4 6161     		str	r1, [r4, #20]
 709              		.loc 19 64 9 view .LVU126
 710 00e6 A155     		strb	r1, [r4, r6]
 711              	.LVL30:
 712              		.loc 19 64 9 view .LVU127
 713              	.LBE918:
 714              	.LBE923:
 715              	.LBE954:
 635:Veno-Echo.cpp ****     delMemsR_REV.Init();
 716              		.loc 20 635 5 is_stmt 1 view .LVU128
 717              	.LBB955:
 718              	.LBI927:
  42:delayline_reverse.h ****     { 
 719              		.loc 19 42 10 view .LVU129
 720              	.LBB943:
 721              	.LBI928:
  48:delayline_reverse.h ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 41


 722              		.loc 19 48 10 view .LVU130
 723              	.LBB933:
 724              	.LBB930:
  54:delayline_reverse.h ****         {
 725              		.loc 19 54 29 view .LVU131
 726              	.LBE930:
 727              	.LBE933:
 728              	.LBE943:
 729              	.LBE955:
 730              	.LBB956:
 731              	.LBB924:
 732              	.LBB919:
  63:delayline_reverse.h ****         fading_ = false;
 733              		.loc 19 63 9 is_stmt 0 view .LVU132
 734 00e8 2A60     		str	r2, [r5]	@ float
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 735              		.loc 19 59 9 view .LVU133
 736 00ea C4E90111 		strd	r1, r1, [r4, #4]
 737 00ee 2F49     		ldr	r1, .L36+52
 738              	.LVL31:
 739              	.L22:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 740              		.loc 19 59 9 view .LVU134
 741              	.LBE919:
 742              	.LBE924:
 743              	.LBE956:
 744              	.LBB957:
 745              	.LBB944:
 746              	.LBB934:
 747              	.LBB931:
  56:delayline_reverse.h ****         }
 748              		.loc 19 56 13 view .LVU135
 749 00f0 0022     		movs	r2, #0
 750 00f2 43F8042B 		str	r2, [r3], #4	@ float
  54:delayline_reverse.h ****         {
 751              		.loc 19 54 9 is_stmt 1 view .LVU136
  54:delayline_reverse.h ****         {
 752              		.loc 19 54 29 view .LVU137
 753 00f6 8B42     		cmp	r3, r1
 754 00f8 FAD1     		bne	.L22
 755              	.LBE931:
 756              	.LBE934:
 757              	.LBE944:
 758              	.LBE957:
 636:Veno-Echo.cpp **** 
 637:Veno-Echo.cpp ****     //point struct at SDRAM buffers
 638:Veno-Echo.cpp ****     delaysL_REV.del = &delMemsL_REV; 
 759              		.loc 20 638 21 is_stmt 0 view .LVU138
 760 00fa 2D49     		ldr	r1, .L36+56
 761              	.LBB958:
 762              	.LBB945:
 763              	.LBB935:
  58:delayline_reverse.h ****         read_ptr1_ = 0;
 764              		.loc 19 58 9 view .LVU139
 765 00fc 0023     		movs	r3, #0
 766              	.LBE935:
 767              	.LBE945:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 42


 768              	.LBE958:
 769              	.LBB959:
 770              	.LBB960:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 771              		.loc 20 70 15 view .LVU140
 772 00fe DFED2D6A 		vldr.32	s13, .L36+60
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 773              		.loc 20 70 28 view .LVU141
 774 0102 D1ED017A 		vldr.32	s15, [r1, #4]
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 775              		.loc 20 70 53 view .LVU142
 776 0106 9FED2C6A 		vldr.32	s12, .L36+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 777              		.loc 20 70 15 view .LVU143
 778 010a 36EEE77A 		vsub.f32	s14, s13, s15
 779              	.LBE960:
 780              	.LBE959:
 781              	.LBB974:
 782              	.LBB946:
 783              	.LBB936:
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 784              		.loc 19 62 9 view .LVU144
 785 010e 2B4D     		ldr	r5, .L36+68
 786              	.LBE936:
 787              	.LBE946:
 788              	.LBE974:
 789              	.LBB975:
 790              	.LBB969:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 791              		.loc 20 70 53 view .LVU145
 792 0110 67EE867A 		vmul.f32	s15, s15, s12
 793              	.LBE969:
 794              	.LBE975:
 795              	.LBB976:
 796              	.LBB947:
 797              	.LBB937:
 798              		.loc 19 64 9 view .LVU146
 799 0114 234E     		ldr	r6, .L36+44
  62:delayline_reverse.h ****         fadepos_ = 0.0f;
 800              		.loc 19 62 9 view .LVU147
 801 0116 4355     		strb	r3, [r0, r5]
 802              	.LBE937:
 803              	.LBE947:
 804              	.LBE976:
 805              	.LBB977:
 806              	.LBB970:
 807              	.LBB961:
 808              	.LBB962:
 809              		.file 21 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Copyright (C) 2016-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 43


   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** /** @file include/bits/std_abs.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #include_next <stdlib.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** # include_next <math.h>
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #undef abs
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** extern "C++"
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** {
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   using ::abs;
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline long long
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #endif
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 44


  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(double __x)
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabs(__x); }
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h **** 
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   abs(float __x)
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 810              		.loc 21 76 31 view .LVU148
 811 0118 B0EEC77A 		vabs.f32	s14, s14
 812              	.LBE962:
 813              	.LBE961:
 814              	.LBE970:
 815              	.LBE977:
 816              	.LBB978:
 817              	.LBB948:
 818              	.LBB938:
  63:delayline_reverse.h ****         fading_ = false;
 819              		.loc 19 63 9 view .LVU149
 820 011c 284D     		ldr	r5, .L36+72
  60:delayline_reverse.h ****         headDiff_ = 0;
 821              		.loc 19 60 9 view .LVU150
 822 011e C360     		str	r3, [r0, #12]
  61:delayline_reverse.h ****         playinghead_ = false;
 823              		.loc 19 61 9 view .LVU151
 824 0120 4361     		str	r3, [r0, #20]
 825              	.LBE938:
 826              	.LBE948:
 827              	.LBE978:
 828              	.LBB979:
 829              	.LBB971:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 830              		.loc 20 70 9 view .LVU152
 831 0122 B4EEE77A 		vcmpe.f32	s14, s15
 832              	.LBE971:
 833              	.LBE979:
 834              	.LBB980:
 835              	.LBB949:
 836              	.LBB939:
 837              		.loc 19 64 9 view .LVU153
 838 0126 8355     		strb	r3, [r0, r6]
 839              	.LVL32:
 840              		.loc 19 64 9 view .LVU154
 841              	.LBE939:
 842              	.LBE949:
 843              	.LBE980:
 844              		.loc 20 638 5 is_stmt 1 view .LVU155
 639:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 845              		.loc 20 639 5 view .LVU156
 638:Veno-Echo.cpp ****     delaysR_REV.del = &delMemsR_REV; 
 846              		.loc 20 638 21 is_stmt 0 view .LVU157
 847 0128 0C60     		str	r4, [r1]
 848              	.LBB981:
 849              	.LBB950:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 45


 850              	.LBB940:
  63:delayline_reverse.h ****         fading_ = false;
 851              		.loc 19 63 9 view .LVU158
 852 012a 2A60     		str	r2, [r5]	@ float
 853              	.LBE940:
 854              	.LBE950:
 855              	.LBE981:
 856              	.LBB982:
 857              	.LBB972:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 858              		.loc 20 70 9 view .LVU159
 859 012c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 860              	.LBE972:
 861              	.LBE982:
 862              	.LBB983:
 863              	.LBB951:
 864              	.LBB941:
  59:delayline_reverse.h ****         read_ptr2_ = 0;
 865              		.loc 19 59 9 view .LVU160
 866 0130 C0E90133 		strd	r3, r3, [r0, #4]
 867              	.LBE941:
 868              	.LBE951:
 869              	.LBE983:
 870              		.loc 20 639 21 view .LVU161
 871 0134 234B     		ldr	r3, .L36+76
 872 0136 1860     		str	r0, [r3]
 640:Veno-Echo.cpp **** 
 641:Veno-Echo.cpp ****     //Reverse Delay Length. Setup as static value for now. Will make this a shift function
 642:Veno-Echo.cpp ****     delaysL_REV.SetDelayTime(maxRevDelay / 3.f);
 873              		.loc 20 642 5 is_stmt 1 view .LVU162
 874              	.LVL33:
 875              	.LBB984:
 876              	.LBI959:
  68:Veno-Echo.cpp ****     {
 877              		.loc 20 68 10 view .LVU163
 878              	.LBB973:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 879              		.loc 20 70 9 view .LVU164
 880              	.LBB964:
 881              	.LBI961:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 882              		.loc 21 75 3 view .LVU165
 883              	.LBB963:
 884              		.loc 21 76 5 view .LVU166
 885              		.loc 21 76 5 is_stmt 0 view .LVU167
 886              	.LBE963:
 887              	.LBE964:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 888              		.loc 20 70 9 view .LVU168
 889 0138 04DD     		ble	.L23
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 890              		.loc 20 73 13 is_stmt 1 view .LVU169
 891              	.LBB965:
 892              	.LBB966:
  65:delayline_reverse.h ****     }
  66:delayline_reverse.h **** 
  67:delayline_reverse.h ****     /** sets the delay time in samples
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 46


  68:delayline_reverse.h ****     */
  69:delayline_reverse.h ****     inline void SetDelay1(size_t delay)
  70:delayline_reverse.h ****     {
  71:delayline_reverse.h ****         frac1_  = 0.0f;
  72:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 893              		.loc 19 72 9 is_stmt 0 view .LVU170
 894 013a 234D     		ldr	r5, .L36+80
 895              	.LBE966:
 896              	.LBE965:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 897              		.loc 20 73 27 view .LVU171
 898 013c C1ED016A 		vstr.32	s13, [r1, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 899              		.loc 20 74 13 is_stmt 1 view .LVU172
 900              	.LVL34:
 901              	.LBB968:
 902              	.LBI965:
  69:delayline_reverse.h ****     {
 903              		.loc 19 69 17 view .LVU173
 904              	.LBB967:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 905              		.loc 19 71 9 is_stmt 0 view .LVU174
 906 0140 2260     		str	r2, [r4]	@ float
 907              		.loc 19 72 9 view .LVU175
 908 0142 2561     		str	r5, [r4, #16]
 909              	.LVL35:
 910              	.L23:
 911              		.loc 19 72 9 view .LVU176
 912              	.LBE967:
 913              	.LBE968:
 914              	.LBE973:
 915              	.LBE984:
 643:Veno-Echo.cpp ****     delaysR_REV.SetDelayTime(maxRevDelay / 3.f);   //default maxRevDelay / 3.0f
 916              		.loc 20 643 5 is_stmt 1 view .LVU177
 917              	.LBB985:
 918              	.LBI985:
  68:Veno-Echo.cpp ****     {
 919              		.loc 20 68 10 view .LVU178
 920              	.LBB986:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 921              		.loc 20 70 9 view .LVU179
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 922              		.loc 20 70 28 is_stmt 0 view .LVU180
 923 0144 D3ED017A 		vldr.32	s15, [r3, #4]
 924              	.LVL36:
 925              	.LBB987:
 926              	.LBI987:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 927              		.loc 21 75 3 is_stmt 1 view .LVU181
 928              	.LBB988:
 929              		.loc 21 76 5 view .LVU182
 930              		.loc 21 76 5 is_stmt 0 view .LVU183
 931              	.LBE988:
 932              	.LBE987:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 933              		.loc 20 70 15 view .LVU184
 934 0148 DFED1A6A 		vldr.32	s13, .L36+60
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 47


  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 935              		.loc 20 70 53 view .LVU185
 936 014c 9FED1A6A 		vldr.32	s12, .L36+64
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 937              		.loc 20 70 15 view .LVU186
 938 0150 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 939              		.loc 20 70 53 view .LVU187
 940 0154 67EE867A 		vmul.f32	s15, s15, s12
 941              	.LBB990:
 942              	.LBB989:
 943              		.loc 21 76 31 view .LVU188
 944 0158 B0EEC77A 		vabs.f32	s14, s14
 945              	.LBE989:
 946              	.LBE990:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 947              		.loc 20 70 9 view .LVU189
 948 015c B4EEE77A 		vcmpe.f32	s14, s15
 949 0160 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 950 0164 05DD     		ble	.L16
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 951              		.loc 20 73 13 is_stmt 1 view .LVU190
 952              	.LBB991:
 953              	.LBB992:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 954              		.loc 19 71 9 is_stmt 0 view .LVU191
 955 0166 0021     		movs	r1, #0
 956              		.loc 19 72 9 view .LVU192
 957 0168 174A     		ldr	r2, .L36+80
 958              	.LBE992:
 959              	.LBE991:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 960              		.loc 20 73 27 view .LVU193
 961 016a C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 962              		.loc 20 74 13 is_stmt 1 view .LVU194
 963              	.LVL37:
 964              	.LBB994:
 965              	.LBI991:
  69:delayline_reverse.h ****     {
 966              		.loc 19 69 17 view .LVU195
 967              	.LBB993:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 968              		.loc 19 71 9 is_stmt 0 view .LVU196
 969 016e 0160     		str	r1, [r0]	@ float
 970              		.loc 19 72 9 view .LVU197
 971 0170 0261     		str	r2, [r0, #16]
 972              	.LVL38:
 973              	.L16:
 974              		.loc 19 72 9 view .LVU198
 975              	.LBE993:
 976              	.LBE994:
 977              	.LBE986:
 978              	.LBE985:
 644:Veno-Echo.cpp **** 
 645:Veno-Echo.cpp **** }
 979              		.loc 20 645 1 view .LVU199
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 48


 980 0172 05B0     		add	sp, sp, #20
 981              		.cfi_def_cfa_offset 20
 982              		@ sp needed
 983 0174 F0BD     		pop	{r4, r5, r6, r7, pc}
 984              	.L37:
 985 0176 00BF     		.align	2
 986              	.L36:
 987 0178 84000000 		.word	delMemsL+132
 988 017c 84786900 		.word	delMemsL+6912132
 989 0180 84786900 		.word	6912132
 990 0184 84000000 		.word	delMemsR+132
 991 0188 84786900 		.word	delMemsR+6912132
 992 018c 00000000 		.word	.LANCHOR1
 993 0190 00000000 		.word	.LANCHOR0
 994 0194 00000000 		.word	delMemsL_REV
 995 0198 189F2400 		.word	2400024
 996 019c 189F2400 		.word	delMemsL_REV+2400024
 997 01a0 00000000 		.word	delMemsR_REV
 998 01a4 249F2400 		.word	2400036
 999 01a8 209F2400 		.word	delMemsL_REV+2400032
 1000 01ac 189F2400 		.word	delMemsR_REV+2400024
 1001 01b0 00000000 		.word	.LANCHOR2
 1002 01b4 00409C47 		.word	1201422336
 1003 01b8 0AD7A33B 		.word	1000593162
 1004 01bc 1C9F2400 		.word	2400028
 1005 01c0 209F2400 		.word	delMemsR_REV+2400032
 1006 01c4 00000000 		.word	.LANCHOR3
 1007 01c8 80380100 		.word	80000
 1008              		.cfi_endproc
 1009              	.LFE4771:
 1011              		.section	.text._Z20Update_DelayTimeL_CVv,"ax",%progbits
 1012              		.align	1
 1013              		.p2align 2,,3
 1014              		.global	_Z20Update_DelayTimeL_CVv
 1015              		.syntax unified
 1016              		.thumb
 1017              		.thumb_func
 1018              		.fpu fpv5-d16
 1020              	_Z20Update_DelayTimeL_CVv:
 1021              	.LFB4773:
 646:Veno-Echo.cpp **** 
 647:Veno-Echo.cpp **** int main(void)
 648:Veno-Echo.cpp **** {
 649:Veno-Echo.cpp ****     // initialize hardware.
 650:Veno-Echo.cpp ****     hw.Configure();
 651:Veno-Echo.cpp ****     hw.Init();
 652:Veno-Echo.cpp ****     
 653:Veno-Echo.cpp ****     //Buttons or switches with status LEDs
 654:Veno-Echo.cpp **** 
 655:Veno-Echo.cpp ****     LPF_sw.init(hw.GetPin(29),hw.GetPin(6),ButtonLED::Toggle,hw.AudioSampleRate() / static_cast<flo
 656:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 657:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 658:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 659:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 660:Veno-Echo.cpp **** 
 661:Veno-Echo.cpp ****     //Gates
 662:Veno-Echo.cpp ****     ReverseGateL.Init(hw.GetPin(0), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 49


 663:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 664:Veno-Echo.cpp **** 
 665:Veno-Echo.cpp ****     //TapButton.Init(hw.GetPin(4), hw.AudioSampleRate() / 48.f);
 666:Veno-Echo.cpp ****     Sync.Init(hw.GetPin(23), hw.AudioSampleRate() / static_cast<float> (updateDiv));
 667:Veno-Echo.cpp ****      ClockIn.Init(&ClockPin);
 668:Veno-Echo.cpp ****     //ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 669:Veno-Echo.cpp ****     
 670:Veno-Echo.cpp ****     FwdRevLEnv.Init(hw.AudioSampleRate());
 671:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 672:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 673:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 674:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 675:Veno-Echo.cpp **** 
 676:Veno-Echo.cpp ****     FwdRevREnv.Init(hw.AudioSampleRate());
 677:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 678:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 679:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 680:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 681:Veno-Echo.cpp **** 
 682:Veno-Echo.cpp ****     LPF_Env.Init(hw.AudioSampleRate());
 683:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 684:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 685:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 686:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 687:Veno-Echo.cpp **** 
 688:Veno-Echo.cpp ****     HPF_Env.Init(hw.AudioSampleRate());
 689:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 690:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 691:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 692:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 693:Veno-Echo.cpp **** 
 694:Veno-Echo.cpp ****     // set params for CrossFade objects
 695:Veno-Echo.cpp ****     FwdRevLXfade.Init();
 696:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 697:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 698:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 699:Veno-Echo.cpp **** 
 700:Veno-Echo.cpp ****     WidthXfade.Init();
 701:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 702:Veno-Echo.cpp **** 
 703:Veno-Echo.cpp ****     InitDelays(hw.AudioSampleRate());
 704:Veno-Echo.cpp **** 
 705:Veno-Echo.cpp ****     //setup L and R Low Pass filters
 706:Veno-Echo.cpp ****     LPF_L.Init(hw.AudioSampleRate());
 707:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 708:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 709:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 710:Veno-Echo.cpp **** 
 711:Veno-Echo.cpp ****     LPF_R.Init(hw.AudioSampleRate());
 712:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 713:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 714:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 715:Veno-Echo.cpp **** 
 716:Veno-Echo.cpp ****     //setup L and R High Pass filters
 717:Veno-Echo.cpp ****     HPF_L.Init(hw.AudioSampleRate());
 718:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 719:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 50


 720:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 721:Veno-Echo.cpp **** 
 722:Veno-Echo.cpp ****     HPF_R.Init(hw.AudioSampleRate());
 723:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 724:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 725:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 726:Veno-Echo.cpp **** 
 727:Veno-Echo.cpp ****     //post filters
 728:Veno-Echo.cpp ****     LPF_L_post.Init(hw.AudioSampleRate());
 729:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 730:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 731:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 732:Veno-Echo.cpp **** 
 733:Veno-Echo.cpp ****     LPF_R_post.Init(hw.AudioSampleRate());
 734:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 735:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 736:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 737:Veno-Echo.cpp **** 
 738:Veno-Echo.cpp ****     //setup L and R High Pass filters
 739:Veno-Echo.cpp ****     HPF_L_post.Init(hw.AudioSampleRate());
 740:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 741:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 742:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 743:Veno-Echo.cpp **** 
 744:Veno-Echo.cpp ****     HPF_R_post.Init(hw.AudioSampleRate());
 745:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 746:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 747:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 748:Veno-Echo.cpp **** 
 749:Veno-Echo.cpp ****     //DcBlock_LFB.Init(hw.AudioSampleRate());
 750:Veno-Echo.cpp ****     //DcBlock_RFB.Init(hw.AudioSampleRate());
 751:Veno-Echo.cpp **** 
 752:Veno-Echo.cpp ****     //LFO for modulation of fwd delay time
 753:Veno-Echo.cpp ****     lfo.Init(hw.AudioSampleRate());
 754:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 755:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 756:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 757:Veno-Echo.cpp **** 
 758:Veno-Echo.cpp ****     BaseTempo.init(mintap,maxtap,1.25f);  //max 6 second tap
 759:Veno-Echo.cpp **** 
 760:Veno-Echo.cpp ****     //setup tempo indicators
 761:Veno-Echo.cpp ****     //tempoLED_BASE.init(hw.GetPin(14),hw.AudioSampleRate());
 762:Veno-Echo.cpp ****     tempoLED_BASE.init(hw.GetPin(24),hw.AudioSampleRate());
 763:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 764:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 765:Veno-Echo.cpp **** 
 766:Veno-Echo.cpp ****     //load settings from flash
 767:Veno-Echo.cpp **** 
 768:Veno-Echo.cpp ****     Settings SavedSettings{LoadSettings()};
 769:Veno-Echo.cpp ****     //ApplySettings(defaultAltControls);
 770:Veno-Echo.cpp ****     //AltControls = defaultAltControls;
 771:Veno-Echo.cpp **** 
 772:Veno-Echo.cpp ****     ApplySettings(SavedSettings);
 773:Veno-Echo.cpp ****     AltControls = SavedSettings;
 774:Veno-Echo.cpp **** 
 775:Veno-Echo.cpp ****     //initialize DAC
 776:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 51


 777:Veno-Echo.cpp ****    //ADC
 778:Veno-Echo.cpp ****     AdcChannelConfig adcConfig[8];
 779:Veno-Echo.cpp **** 
 780:Veno-Echo.cpp ****     adcConfig[0].InitSingle(hw.GetPin(15));
 781:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 782:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 783:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 784:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 785:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 786:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 787:Veno-Echo.cpp ****     adcConfig[6].InitSingle(hw.GetPin(22));
 788:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 789:Veno-Echo.cpp **** 
 790:Veno-Echo.cpp **** 
 791:Veno-Echo.cpp ****     hw.adc.Init(adcConfig, 8,daisy::AdcHandle::OVS_128);
 792:Veno-Echo.cpp ****     hw.adc.Start();
 793:Veno-Echo.cpp **** 
 794:Veno-Echo.cpp **** 
 795:Veno-Echo.cpp ****     hw.SetAudioBlockSize(1);     //set blocksize.
 796:Veno-Echo.cpp ****     // start audio callback
 797:Veno-Echo.cpp ****     hw.StartAudio(AudioCallback);
 798:Veno-Echo.cpp **** 
 799:Veno-Echo.cpp ****     
 800:Veno-Echo.cpp **** 
 801:Veno-Echo.cpp ****      for(;;)
 802:Veno-Echo.cpp ****      {  
 803:Veno-Echo.cpp **** 
 804:Veno-Echo.cpp ****         static uint32_t saveTimer{};
 805:Veno-Echo.cpp ****         //static bool SaveWaitFlag{};
 806:Veno-Echo.cpp ****        
 807:Veno-Echo.cpp ****         if(save_flag)   //if save_flag is set
 808:Veno-Echo.cpp ****         {
 809:Veno-Echo.cpp ****             save_flag = false;
 810:Veno-Echo.cpp ****             saveState = WAITING;    //set flag - start waiting
 811:Veno-Echo.cpp ****             saveTimer = System::GetNow();   //reset timer
 812:Veno-Echo.cpp ****         }
 813:Veno-Echo.cpp ****         
 814:Veno-Echo.cpp ****         else    //save flag not set
 815:Veno-Echo.cpp ****         {
 816:Veno-Echo.cpp ****            if(saveState == WAITING)    //wait flag set (waiting)
 817:Veno-Echo.cpp ****            {
 818:Veno-Echo.cpp ****                if(System::GetNow() - saveTimer > 1000)  //1second wait to save
 819:Veno-Echo.cpp ****                 {
 820:Veno-Echo.cpp ****                     saveState = SAVING; //stop reading ADCs temporarily
 821:Veno-Echo.cpp ****                     
 822:Veno-Echo.cpp ****                     Settings ToSave{AltControls};   //copy settings
 823:Veno-Echo.cpp ****                     if (SaveSettings(ToSave) == QSPIHandle::Result::OK)  //save settings
 824:Veno-Echo.cpp ****                     {
 825:Veno-Echo.cpp ****                     }
 826:Veno-Echo.cpp ****                 }
 827:Veno-Echo.cpp **** 
 828:Veno-Echo.cpp ****                 else{} //still waiting
 829:Veno-Echo.cpp **** 
 830:Veno-Echo.cpp ****            }
 831:Veno-Echo.cpp **** 
 832:Veno-Echo.cpp ****            if(saveState == SAVING)
 833:Veno-Echo.cpp ****            {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 52


 834:Veno-Echo.cpp ****             if(System::GetNow() - saveTimer > 1200) //additional 0.2 second wait
 835:Veno-Echo.cpp ****             {
 836:Veno-Echo.cpp ****                     saveState = IDLE;   //reset saveState
 837:Veno-Echo.cpp ****             }
 838:Veno-Echo.cpp ****             else{} //ADCs paused
 839:Veno-Echo.cpp **** 
 840:Veno-Echo.cpp ****            }
 841:Veno-Echo.cpp **** 
 842:Veno-Echo.cpp ****            else //IDLE - do nothing
 843:Veno-Echo.cpp ****            {
 844:Veno-Echo.cpp ****            }
 845:Veno-Echo.cpp ****         }
 846:Veno-Echo.cpp **** 
 847:Veno-Echo.cpp ****      }
 848:Veno-Echo.cpp **** 
 849:Veno-Echo.cpp **** }
 850:Veno-Echo.cpp **** 
 851:Veno-Echo.cpp **** void Update_DelayTimeL_CV()
 852:Veno-Echo.cpp **** {
 1022              		.loc 20 852 1 is_stmt 1 view -0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 0
 1025              		@ frame_needed = 0, uses_anonymous_args = 0
 853:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1026              		.loc 20 853 5 view .LVU201
 852:Veno-Echo.cpp ****     delayTimeL_CV = hw.adc.GetFloat(0);
 1027              		.loc 20 852 1 is_stmt 0 view .LVU202
 1028 0000 08B5     		push	{r3, lr}
 1029              		.cfi_def_cfa_offset 8
 1030              		.cfi_offset 3, -8
 1031              		.cfi_offset 14, -4
 1032              		.loc 20 853 36 view .LVU203
 1033 0002 0021     		movs	r1, #0
 1034 0004 0348     		ldr	r0, .L40
 1035 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1036              	.LVL39:
 1037              		.loc 20 853 19 view .LVU204
 1038 000a 034B     		ldr	r3, .L40+4
 1039 000c 83ED000A 		vstr.32	s0, [r3]
 854:Veno-Echo.cpp **** }
 1040              		.loc 20 854 1 view .LVU205
 1041 0010 08BD     		pop	{r3, pc}
 1042              	.L41:
 1043 0012 00BF     		.align	2
 1044              	.L40:
 1045 0014 18000000 		.word	.LANCHOR4+24
 1046 0018 00000000 		.word	.LANCHOR5
 1047              		.cfi_endproc
 1048              	.LFE4773:
 1050              		.section	.text._Z17Update_DelayTimeLv,"ax",%progbits
 1051              		.align	1
 1052              		.p2align 2,,3
 1053              		.global	_Z17Update_DelayTimeLv
 1054              		.syntax unified
 1055              		.thumb
 1056              		.thumb_func
 1057              		.fpu fpv5-d16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 53


 1059              	_Z17Update_DelayTimeLv:
 1060              	.LFB4774:
 855:Veno-Echo.cpp **** 
 856:Veno-Echo.cpp **** void Update_DelayTimeL()
 857:Veno-Echo.cpp **** {
 1061              		.loc 20 857 1 is_stmt 1 view -0
 1062              		.cfi_startproc
 1063              		@ args = 0, pretend = 0, frame = 0
 1064              		@ frame_needed = 0, uses_anonymous_args = 0
 858:Veno-Echo.cpp ****     static bool lastShift{};
 1065              		.loc 20 858 5 view .LVU207
 859:Veno-Echo.cpp ****     static bool delayTimeL_pickup{};
 1066              		.loc 20 859 5 view .LVU208
 860:Veno-Echo.cpp ****     static bool Rev_DelayTime_pickup{};
 1067              		.loc 20 860 5 view .LVU209
 861:Veno-Echo.cpp ****     
 862:Veno-Echo.cpp ****     static float delayTimeL_Last{};
 1068              		.loc 20 862 5 view .LVU210
 863:Veno-Echo.cpp **** 
 864:Veno-Echo.cpp ****     //update pot values
 865:Veno-Echo.cpp ****     float delayTimeL_Pot{hw.adc.GetMuxFloat(7,2)};
 1069              		.loc 20 865 5 view .LVU211
 857:Veno-Echo.cpp ****     static bool lastShift{};
 1070              		.loc 20 857 1 is_stmt 0 view .LVU212
 1071 0000 10B5     		push	{r4, lr}
 1072              		.cfi_def_cfa_offset 8
 1073              		.cfi_offset 4, -8
 1074              		.cfi_offset 14, -4
 1075              		.loc 20 865 44 view .LVU213
 1076 0002 0222     		movs	r2, #2
 1077 0004 0721     		movs	r1, #7
 1078 0006 7648     		ldr	r0, .L75
 1079 0008 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1080              	.LVL40:
 866:Veno-Echo.cpp **** 
 867:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 868:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 869:Veno-Echo.cpp ****     static int counterL{};
 870:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 1081              		.loc 20 870 26 view .LVU214
 1082 000c 7549     		ldr	r1, .L75+4
 1083              		.loc 20 870 31 view .LVU215
 1084 000e 764B     		ldr	r3, .L75+8
 1085              	.LVL41:
 869:Veno-Echo.cpp ****     counterL = (counterL + 1) % (32 * 6);    
 1086              		.loc 20 869 5 is_stmt 1 view .LVU216
 1087              		.loc 20 870 5 view .LVU217
 1088              		.loc 20 870 26 is_stmt 0 view .LVU218
 1089 0010 0A68     		ldr	r2, [r1]
 1090              	.LBB995:
 871:Veno-Echo.cpp **** 
 872:Veno-Echo.cpp ****     if (!shift) //default control
 1091              		.loc 20 872 9 view .LVU219
 1092 0012 7648     		ldr	r0, .L75+12
 1093              	.LBE995:
 870:Veno-Echo.cpp **** 
 1094              		.loc 20 870 26 view .LVU220
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 54


 1095 0014 0132     		adds	r2, r2, #1
 1096              	.LBB1068:
 1097              		.loc 20 872 5 view .LVU221
 1098 0016 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1099              	.LBE1068:
 870:Veno-Echo.cpp **** 
 1100              		.loc 20 870 31 view .LVU222
 1101 0018 83FB0243 		smull	r4, r3, r3, r2
 1102 001c D417     		asrs	r4, r2, #31
 1103 001e C4EB6313 		rsb	r3, r4, r3, asr #5
 1104 0022 03EB4303 		add	r3, r3, r3, lsl #1
 1105 0026 A2EB8313 		sub	r3, r2, r3, lsl #6
 1106              	.LBB1069:
 1107              	.LBB996:
 873:Veno-Echo.cpp ****     {
 874:Veno-Echo.cpp ****         static float delayTimeL_new{};
 875:Veno-Echo.cpp ****         //udpate pickup
 876:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 1108              		.loc 20 876 19 view .LVU223
 1109 002a 714A     		ldr	r2, .L75+16
 1110              	.LBE996:
 1111              	.LBE1069:
 870:Veno-Echo.cpp **** 
 1112              		.loc 20 870 14 view .LVU224
 1113 002c 0B60     		str	r3, [r1]
 872:Veno-Echo.cpp ****     {
 1114              		.loc 20 872 5 is_stmt 1 view .LVU225
 1115              	.LBB1070:
 1116 002e 80BB     		cbnz	r0, .L43
 1117              	.LBB1015:
 874:Veno-Echo.cpp ****         //udpate pickup
 1118              		.loc 20 874 9 view .LVU226
 1119              		.loc 20 876 9 view .LVU227
 1120 0030 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1121 0032 0029     		cmp	r1, #0
 1122 0034 38D0     		beq	.L44
 877:Veno-Echo.cpp ****         {
 878:Veno-Echo.cpp ****             lastShift = shift;
 1123              		.loc 20 878 13 view .LVU228
 879:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1124              		.loc 20 879 31 is_stmt 0 view .LVU229
 1125 0036 6F4C     		ldr	r4, .L75+20
 880:Veno-Echo.cpp ****             delayTimeL_new = delayTimeL_Pot;   //update new value
 1126              		.loc 20 880 28 view .LVU230
 1127 0038 6F49     		ldr	r1, .L75+24
 878:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1128              		.loc 20 878 23 view .LVU231
 1129 003a 1070     		strb	r0, [r2]
 879:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1130              		.loc 20 879 13 is_stmt 1 view .LVU232
 879:Veno-Echo.cpp ****             delayTimeL_pickup = false;  //set to not picked up
 1131              		.loc 20 879 31 is_stmt 0 view .LVU233
 1132 003c 2070     		strb	r0, [r4]
 1133              		.loc 20 880 13 is_stmt 1 view .LVU234
 1134              		.loc 20 880 28 is_stmt 0 view .LVU235
 1135 003e 81ED000A 		vstr.32	s0, [r1]
 1136              	.L45:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 55


 881:Veno-Echo.cpp ****         } 
 882:Veno-Echo.cpp ****         else    //not a recent shift change
 883:Veno-Echo.cpp ****         {
 884:Veno-Echo.cpp ****             if(!delayTimeL_pickup)  //not picked up
 885:Veno-Echo.cpp ****             {
 886:Veno-Echo.cpp ****                 if(abs(delayTimeL_Pot - delayTimeL_new) > pickupTolerance)  //checked if changed fr
 887:Veno-Echo.cpp ****                 {
 888:Veno-Echo.cpp ****                     delayTimeL_pickup = true;   //set to picked up
 889:Veno-Echo.cpp ****                 }
 890:Veno-Echo.cpp ****             }
 891:Veno-Echo.cpp ****         }
 892:Veno-Echo.cpp **** 
 893:Veno-Echo.cpp ****         float delayTimeL{};
 1137              		.loc 20 893 9 is_stmt 1 view .LVU236
 1138              	.LVL42:
 894:Veno-Echo.cpp **** 
 895:Veno-Echo.cpp ****         if(delayTimeL_pickup)
 1139              		.loc 20 895 9 view .LVU237
 896:Veno-Echo.cpp ****         {
 897:Veno-Echo.cpp ****             delayTimeL = PotCVCombo(delayTimeL_Pot,delayTimeL_CV);  //combine pot value and CV
 898:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 899:Veno-Echo.cpp ****         }
 900:Veno-Echo.cpp **** 
 901:Veno-Echo.cpp ****         else
 902:Veno-Echo.cpp ****         {
 903:Veno-Echo.cpp ****             delayTimeL = PotCVCombo(delayTimeL_Last,delayTimeL_CV); //combine last pot value and CV
 1140              		.loc 20 903 13 view .LVU238
 1141              	.LBB997:
 1142              	.LBI997:
 904:Veno-Echo.cpp ****         }
 905:Veno-Echo.cpp **** 
 906:Veno-Echo.cpp ****         if(counterL == 0)
 907:Veno-Echo.cpp ****         {
 908:Veno-Echo.cpp ****             if(delayL.SetDelayTime(delayTimeL,syncMode))
 909:Veno-Echo.cpp ****             {
 910:Veno-Echo.cpp ****             };
 911:Veno-Echo.cpp ****         }
 912:Veno-Echo.cpp **** 
 913:Veno-Echo.cpp ****     }   //not shift mode
 914:Veno-Echo.cpp **** 
 915:Veno-Echo.cpp ****     else    //shift mode
 916:Veno-Echo.cpp ****     {
 917:Veno-Echo.cpp ****         static float Rev_DelayTime_new{};
 918:Veno-Echo.cpp **** 
 919:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 920:Veno-Echo.cpp ****         {
 921:Veno-Echo.cpp ****             lastShift = shift;
 922:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 923:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 924:Veno-Echo.cpp ****         }
 925:Veno-Echo.cpp **** 
 926:Veno-Echo.cpp ****         else    //not a recent shift change
 927:Veno-Echo.cpp ****         {
 928:Veno-Echo.cpp ****             if(!Rev_DelayTime_pickup) //not picked up
 929:Veno-Echo.cpp ****             {
 930:Veno-Echo.cpp ****                 if(abs(delayTimeL_Pot - Rev_DelayTime_new) > pickupTolerance)
 931:Veno-Echo.cpp ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 56


 932:Veno-Echo.cpp ****                     Rev_DelayTime_pickup = true;   //set picked up
 933:Veno-Echo.cpp ****                 }
 934:Veno-Echo.cpp ****             }
 935:Veno-Echo.cpp ****         }
 936:Veno-Echo.cpp **** 
 937:Veno-Echo.cpp ****         if(Rev_DelayTime_pickup)
 938:Veno-Echo.cpp ****         {
 939:Veno-Echo.cpp ****             float Rev_DelayTime{scale(delayTimeL_Pot,maxRevDelay,minRevDelay,EXPONENTIAL)};
 940:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 941:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 942:Veno-Echo.cpp ****             //save setting:
 943:Veno-Echo.cpp ****             AltControls.RevLength = Rev_DelayTime;
 944:Veno-Echo.cpp ****             save_flag = true;
 945:Veno-Echo.cpp ****         }
 946:Veno-Echo.cpp ****     }
 947:Veno-Echo.cpp ****     
 948:Veno-Echo.cpp **** }
 949:Veno-Echo.cpp **** 
 950:Veno-Echo.cpp **** void Update_DelayTimeR_CV()
 951:Veno-Echo.cpp **** {
 952:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 953:Veno-Echo.cpp **** }
 954:Veno-Echo.cpp **** 
 955:Veno-Echo.cpp **** void Update_DelayTimeR()
 956:Veno-Echo.cpp **** {
 957:Veno-Echo.cpp ****     static bool lastShift{};
 958:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 959:Veno-Echo.cpp ****     static bool tapRatio_pickup{};
 960:Veno-Echo.cpp ****     
 961:Veno-Echo.cpp ****     static float delayTimeR_Last{};
 962:Veno-Echo.cpp **** 
 963:Veno-Echo.cpp ****     //update pot values
 964:Veno-Echo.cpp ****     float delayTimeR_Pot{hw.adc.GetMuxFloat(7,6)};
 965:Veno-Echo.cpp **** 
 966:Veno-Echo.cpp ****     //counter used to limit how quickly delay time is changed, 
 967:Veno-Echo.cpp ****     //and to ensure L and R delay times don't change at the same time.
 968:Veno-Echo.cpp ****     static int counterR{};
 969:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 970:Veno-Echo.cpp **** 
 971:Veno-Echo.cpp ****     if (!shift) //default control
 972:Veno-Echo.cpp ****     {
 973:Veno-Echo.cpp ****         static float delayTimeR_new{};
 974:Veno-Echo.cpp ****         //udpate pickup
 975:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
 976:Veno-Echo.cpp ****         {
 977:Veno-Echo.cpp ****             lastShift = shift;
 978:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 979:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 980:Veno-Echo.cpp ****         } 
 981:Veno-Echo.cpp ****         else    //not a default shift change
 982:Veno-Echo.cpp ****         {
 983:Veno-Echo.cpp ****             if(!delayTimeR_pickup)  //not picked up
 984:Veno-Echo.cpp ****             {
 985:Veno-Echo.cpp ****                 if(abs(delayTimeR_Pot - delayTimeR_new) > pickupTolerance)  //checked if changed fr
 986:Veno-Echo.cpp ****                 {
 987:Veno-Echo.cpp ****                     delayTimeR_pickup = true;   //set to picked up
 988:Veno-Echo.cpp ****                 }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 57


 989:Veno-Echo.cpp ****             }
 990:Veno-Echo.cpp ****         }
 991:Veno-Echo.cpp **** 
 992:Veno-Echo.cpp ****         float delayTimeR{};
 993:Veno-Echo.cpp **** 
 994:Veno-Echo.cpp ****         if(delayTimeR_pickup)
 995:Veno-Echo.cpp ****         {
 996:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Pot,delayTimeR_CV);
 997:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 998:Veno-Echo.cpp ****         }
 999:Veno-Echo.cpp **** 
1000:Veno-Echo.cpp ****         else
1001:Veno-Echo.cpp ****         {
1002:Veno-Echo.cpp ****             delayTimeR = PotCVCombo(delayTimeR_Last,delayTimeR_CV);
1003:Veno-Echo.cpp ****         }
1004:Veno-Echo.cpp **** 
1005:Veno-Echo.cpp ****         if(counterR == 0)
1006:Veno-Echo.cpp ****         {
1007:Veno-Echo.cpp ****             if(delayR.SetDelayTime(delayTimeR,syncMode))
1008:Veno-Echo.cpp ****             {
1009:Veno-Echo.cpp ****             };
1010:Veno-Echo.cpp **** 
1011:Veno-Echo.cpp ****         }
1012:Veno-Echo.cpp ****     }   //not shift mode
1013:Veno-Echo.cpp **** 
1014:Veno-Echo.cpp ****     else    //shift mode
1015:Veno-Echo.cpp ****     {
1016:Veno-Echo.cpp **** 
1017:Veno-Echo.cpp ****         static float tapRatio_new{};
1018:Veno-Echo.cpp **** 
1019:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1020:Veno-Echo.cpp ****         {
1021:Veno-Echo.cpp ****             lastShift = shift;
1022:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
1023:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
1024:Veno-Echo.cpp ****         }
1025:Veno-Echo.cpp **** 
1026:Veno-Echo.cpp ****         else    //not a recent shift change
1027:Veno-Echo.cpp ****         {
1028:Veno-Echo.cpp ****             if(!tapRatio_pickup) //not picked up
1029:Veno-Echo.cpp ****             {
1030:Veno-Echo.cpp ****                 if(abs(delayTimeR_Pot - tapRatio_new) > pickupTolerance)
1031:Veno-Echo.cpp ****                 {
1032:Veno-Echo.cpp ****                     tapRatio_pickup = true;   //set picked up
1033:Veno-Echo.cpp ****                 }
1034:Veno-Echo.cpp ****             }
1035:Veno-Echo.cpp ****         }
1036:Veno-Echo.cpp **** 
1037:Veno-Echo.cpp ****         if(tapRatio_pickup)
1038:Veno-Echo.cpp ****         {
1039:Veno-Echo.cpp ****             float tapRatioInput{delayTimeR_Pot};
1040:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
1041:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
1042:Veno-Echo.cpp ****             //save setting:
1043:Veno-Echo.cpp ****             AltControls.tapRatio = GetTapRatio(tapRatio);
1044:Veno-Echo.cpp ****             save_flag = true;
1045:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 58


1046:Veno-Echo.cpp ****     }
1047:Veno-Echo.cpp ****     
1048:Veno-Echo.cpp **** }
1049:Veno-Echo.cpp **** void Update_feedbackL_CV()
1050:Veno-Echo.cpp **** {
1051:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
1052:Veno-Echo.cpp **** }
1053:Veno-Echo.cpp **** void Update_feedbackL()
1054:Veno-Echo.cpp **** {
1055:Veno-Echo.cpp ****     static bool lastShift{};
1056:Veno-Echo.cpp ****     static bool feedbackL_pickup{};
1057:Veno-Echo.cpp ****     static bool HPCutoff_pickup{};
1058:Veno-Echo.cpp **** 
1059:Veno-Echo.cpp ****     static float feedbackL_Last{};
1060:Veno-Echo.cpp **** 
1061:Veno-Echo.cpp ****     //get pot values:
1062:Veno-Echo.cpp ****     //float feedbackL_Pot{hw.adc.GetFloat(2)};
1063:Veno-Echo.cpp ****     float feedbackL_Pot{hw.adc.GetMuxFloat(7,1)};
1064:Veno-Echo.cpp **** 
1065:Veno-Echo.cpp ****     if (!shift) //default controls
1066:Veno-Echo.cpp ****     {   
1067:Veno-Echo.cpp ****         static float feedbackL_new{};
1068:Veno-Echo.cpp ****         //update pickup
1069:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1070:Veno-Echo.cpp ****         {
1071:Veno-Echo.cpp ****             lastShift = shift;
1072:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
1073:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
1074:Veno-Echo.cpp ****         } 
1075:Veno-Echo.cpp ****         else    //not a default shift change
1076:Veno-Echo.cpp ****         {
1077:Veno-Echo.cpp ****             if(!feedbackL_pickup)  //not picked up
1078:Veno-Echo.cpp ****             {
1079:Veno-Echo.cpp ****                 if(abs(feedbackL_Pot - feedbackL_new) > pickupTolerance)  //checked if changed from
1080:Veno-Echo.cpp ****                 {
1081:Veno-Echo.cpp ****                     feedbackL_pickup = true;   //set to picked up
1082:Veno-Echo.cpp ****                 }
1083:Veno-Echo.cpp ****             }
1084:Veno-Echo.cpp ****         }
1085:Veno-Echo.cpp **** 
1086:Veno-Echo.cpp ****         float feedbackL_combo{};
1087:Veno-Echo.cpp **** 
1088:Veno-Echo.cpp ****         if(feedbackL_pickup)
1089:Veno-Echo.cpp ****         {
1090:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Pot,feedbackL_CV);
1091:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
1092:Veno-Echo.cpp ****         }
1093:Veno-Echo.cpp **** 
1094:Veno-Echo.cpp ****         else
1095:Veno-Echo.cpp ****         {
1096:Veno-Echo.cpp ****             feedbackL_combo = PotCVCombo(feedbackL_Last,feedbackL_CV);
1097:Veno-Echo.cpp ****         }
1098:Veno-Echo.cpp ****   
1099:Veno-Echo.cpp ****         float feedbackL_Target{scale(feedbackL_combo,0.0,maxFB,LINEAR)};  
1100:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
1101:Veno-Echo.cpp ****     }
1102:Veno-Echo.cpp ****     else    //alternate controls
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 59


1103:Veno-Echo.cpp ****     {
1104:Veno-Echo.cpp ****         static float HPCutoff_new{};
1105:Veno-Echo.cpp **** 
1106:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1107:Veno-Echo.cpp ****         {
1108:Veno-Echo.cpp ****             lastShift = shift;
1109:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
1110:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
1111:Veno-Echo.cpp ****         }
1112:Veno-Echo.cpp **** 
1113:Veno-Echo.cpp ****         else    //not a recent shift change
1114:Veno-Echo.cpp ****         {
1115:Veno-Echo.cpp ****             if(!HPCutoff_pickup) //not picked up
1116:Veno-Echo.cpp ****             {
1117:Veno-Echo.cpp ****                 if(abs(feedbackL_Pot - HPCutoff_new) > pickupTolerance)
1118:Veno-Echo.cpp ****                 {
1119:Veno-Echo.cpp ****                     HPCutoff_pickup = true;   //set picked up
1120:Veno-Echo.cpp ****                 }
1121:Veno-Echo.cpp ****             }
1122:Veno-Echo.cpp ****         }
1123:Veno-Echo.cpp **** 
1124:Veno-Echo.cpp ****         if(HPCutoff_pickup)
1125:Veno-Echo.cpp ****         {
1126:Veno-Echo.cpp ****             float HPCutoff{};
1127:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
1128:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
1129:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
1130:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
1131:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
1132:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
1133:Veno-Echo.cpp ****             save_flag = true;
1134:Veno-Echo.cpp ****         }
1135:Veno-Echo.cpp ****     }
1136:Veno-Echo.cpp **** }
1137:Veno-Echo.cpp **** 
1138:Veno-Echo.cpp **** void Update_feedbackR_CV()
1139:Veno-Echo.cpp **** {
1140:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
1141:Veno-Echo.cpp **** }
1142:Veno-Echo.cpp **** 
1143:Veno-Echo.cpp **** void Update_feedbackR()
1144:Veno-Echo.cpp **** {
1145:Veno-Echo.cpp ****     static bool lastShift{};
1146:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
1147:Veno-Echo.cpp ****     static bool LPCutoff_pickup{};
1148:Veno-Echo.cpp **** 
1149:Veno-Echo.cpp ****     static float feedbackR_Last{};
1150:Veno-Echo.cpp **** 
1151:Veno-Echo.cpp ****     //get pot values:
1152:Veno-Echo.cpp ****     float feedbackR_Pot{hw.adc.GetMuxFloat(7,4)};
1153:Veno-Echo.cpp **** 
1154:Veno-Echo.cpp ****     if (!shift) //default controls
1155:Veno-Echo.cpp ****     {   
1156:Veno-Echo.cpp ****         static float feedbackR_new{};
1157:Veno-Echo.cpp ****         //update pickup
1158:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1159:Veno-Echo.cpp ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 60


1160:Veno-Echo.cpp ****             lastShift = shift;
1161:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
1162:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
1163:Veno-Echo.cpp ****         } 
1164:Veno-Echo.cpp ****         else    //not a recent shift change
1165:Veno-Echo.cpp ****         {
1166:Veno-Echo.cpp ****             if(!feedbackR_pickup)  //not picked up
1167:Veno-Echo.cpp ****             {
1168:Veno-Echo.cpp ****                 if(abs(feedbackR_Pot - feedbackR_new) > pickupTolerance)  //checked if changed from
1169:Veno-Echo.cpp ****                 {
1170:Veno-Echo.cpp ****                     feedbackR_pickup = true;   //set to picked up
1171:Veno-Echo.cpp ****                 }
1172:Veno-Echo.cpp ****             }
1173:Veno-Echo.cpp ****         }
1174:Veno-Echo.cpp **** 
1175:Veno-Echo.cpp ****         float feedbackR_combo{};
1176:Veno-Echo.cpp ****         
1177:Veno-Echo.cpp ****         if(feedbackR_pickup)
1178:Veno-Echo.cpp ****         {
1179:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Pot,feedbackR_CV);
1180:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
1181:Veno-Echo.cpp ****         }
1182:Veno-Echo.cpp **** 
1183:Veno-Echo.cpp ****         else
1184:Veno-Echo.cpp ****         {
1185:Veno-Echo.cpp ****             feedbackR_combo = PotCVCombo(feedbackR_Last,feedbackR_CV);
1186:Veno-Echo.cpp ****         }
1187:Veno-Echo.cpp **** 
1188:Veno-Echo.cpp ****         float feedbackR_Target{scale(feedbackR_combo,0.0,maxFB,LINEAR)};
1189:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
1190:Veno-Echo.cpp ****     }
1191:Veno-Echo.cpp ****     else    //alternate controls
1192:Veno-Echo.cpp ****     {
1193:Veno-Echo.cpp **** 
1194:Veno-Echo.cpp ****         static float LPCutoff_new{};
1195:Veno-Echo.cpp **** 
1196:Veno-Echo.cpp ****          if (shift != lastShift) //recent shift change
1197:Veno-Echo.cpp ****         {
1198:Veno-Echo.cpp ****             lastShift = shift;
1199:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
1200:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
1201:Veno-Echo.cpp ****         }
1202:Veno-Echo.cpp **** 
1203:Veno-Echo.cpp ****         else    //not a recent shift change
1204:Veno-Echo.cpp ****         {
1205:Veno-Echo.cpp ****             if(!LPCutoff_pickup) //not picked up
1206:Veno-Echo.cpp ****             {
1207:Veno-Echo.cpp ****                 if(abs(feedbackR_Pot - LPCutoff_new) > pickupTolerance)
1208:Veno-Echo.cpp ****                 {
1209:Veno-Echo.cpp ****                     LPCutoff_pickup = true;   //set picked up
1210:Veno-Echo.cpp ****                 }
1211:Veno-Echo.cpp ****             }
1212:Veno-Echo.cpp ****         }
1213:Veno-Echo.cpp **** 
1214:Veno-Echo.cpp ****         if(LPCutoff_pickup)
1215:Veno-Echo.cpp ****         {
1216:Veno-Echo.cpp ****             float LPCutoff{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 61


1217:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
1218:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
1219:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
1220:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
1221:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
1222:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
1223:Veno-Echo.cpp ****             save_flag = true;
1224:Veno-Echo.cpp ****         }
1225:Veno-Echo.cpp ****     }
1226:Veno-Echo.cpp **** }
1227:Veno-Echo.cpp **** 
1228:Veno-Echo.cpp **** void Update_drywet_CV()
1229:Veno-Echo.cpp **** {
1230:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
1231:Veno-Echo.cpp **** }
1232:Veno-Echo.cpp **** 
1233:Veno-Echo.cpp **** void Update_drywet()
1234:Veno-Echo.cpp **** {
1235:Veno-Echo.cpp ****     static bool lastShift{};
1236:Veno-Echo.cpp ****     static bool drywet_pickup{};
1237:Veno-Echo.cpp ****     static bool Res_pickup{};
1238:Veno-Echo.cpp **** 
1239:Veno-Echo.cpp ****     static float drywet_Last{}; //last drywet position (unscaled)
1240:Veno-Echo.cpp ****     //static float Res_Last{}; //last res value (unscaled)
1241:Veno-Echo.cpp **** 
1242:Veno-Echo.cpp ****     //get pot values:
1243:Veno-Echo.cpp ****     //float drywet_Pot{hw.adc.GetFloat(4)};
1244:Veno-Echo.cpp ****     float drywet_Pot{hw.adc.GetMuxFloat(7,5)}; //read current pot position
1245:Veno-Echo.cpp **** 
1246:Veno-Echo.cpp ****     if (!shift) //default controls
1247:Veno-Echo.cpp ****     {   
1248:Veno-Echo.cpp **** 
1249:Veno-Echo.cpp ****         static float drywet_new{};
1250:Veno-Echo.cpp **** 
1251:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1252:Veno-Echo.cpp ****         {
1253:Veno-Echo.cpp ****             lastShift = shift;
1254:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
1255:Veno-Echo.cpp ****             drywet_pickup = false;  //set to not picked up
1256:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
1257:Veno-Echo.cpp ****         } 
1258:Veno-Echo.cpp ****         
1259:Veno-Echo.cpp ****         else    //not a recent shift change
1260:Veno-Echo.cpp ****         {
1261:Veno-Echo.cpp ****             if(!drywet_pickup)  //not pickup
1262:Veno-Echo.cpp ****             {
1263:Veno-Echo.cpp ****                 //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,false);
1264:Veno-Echo.cpp ****                 if(abs(drywet_Pot - drywet_new) > pickupTolerance)  //check if changed from new val
1265:Veno-Echo.cpp ****                 {
1266:Veno-Echo.cpp ****                     drywet_pickup = true;   //set to picked up
1267:Veno-Echo.cpp ****                 }
1268:Veno-Echo.cpp ****             }
1269:Veno-Echo.cpp **** 
1270:Veno-Echo.cpp ****         }
1271:Veno-Echo.cpp ****         
1272:Veno-Echo.cpp ****         float drywetcombo{};
1273:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 62


1274:Veno-Echo.cpp ****         if (drywet_pickup)
1275:Veno-Echo.cpp ****         {
1276:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Pot,drywet_CV);    //combine pot and CV
1277:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
1278:Veno-Echo.cpp ****         }
1279:Veno-Echo.cpp **** 
1280:Veno-Echo.cpp ****         else
1281:Veno-Echo.cpp ****         {
1282:Veno-Echo.cpp ****             drywetcombo = PotCVCombo(drywet_Last,drywet_CV);    //combine last pot value and CV
1283:Veno-Echo.cpp ****         }
1284:Veno-Echo.cpp **** 
1285:Veno-Echo.cpp ****         float drywetTarget{};
1286:Veno-Echo.cpp **** 
1287:Veno-Echo.cpp ****         if(drywetcombo >= 0.98)
1288:Veno-Echo.cpp ****         {
1289:Veno-Echo.cpp ****             drywetTarget = 1.0f;
1290:Veno-Echo.cpp ****         }
1291:Veno-Echo.cpp ****         else if(drywetcombo <= 0.02)
1292:Veno-Echo.cpp ****         {
1293:Veno-Echo.cpp ****             drywetTarget = 0.0f;
1294:Veno-Echo.cpp ****         }
1295:Veno-Echo.cpp ****         else
1296:Veno-Echo.cpp ****         {
1297:Veno-Echo.cpp ****             drywetTarget = scale(drywetcombo,0.0,1.0,LINEAR); 
1298:Veno-Echo.cpp ****         }
1299:Veno-Echo.cpp **** 
1300:Veno-Echo.cpp ****         //fonepole(drywet,drywetTarget,0.032f); 
1301:Veno-Echo.cpp ****         fonepole(drywet,drywetTarget,0.016f); 
1302:Veno-Echo.cpp ****     }
1303:Veno-Echo.cpp ****     else    //alternate controls
1304:Veno-Echo.cpp ****     {
1305:Veno-Echo.cpp ****         static float Res_new{};
1306:Veno-Echo.cpp **** 
1307:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1308:Veno-Echo.cpp ****         {
1309:Veno-Echo.cpp ****             lastShift = shift;
1310:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
1311:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
1312:Veno-Echo.cpp ****         }
1313:Veno-Echo.cpp **** 
1314:Veno-Echo.cpp ****         else    //not a recent shift change
1315:Veno-Echo.cpp ****         {
1316:Veno-Echo.cpp ****             if(!Res_pickup) //not picked up
1317:Veno-Echo.cpp ****             {
1318:Veno-Echo.cpp ****                 if(abs(drywet_Pot - Res_new) > pickupTolerance)
1319:Veno-Echo.cpp ****                 {
1320:Veno-Echo.cpp ****                     Res_pickup = true;  //set picked up
1321:Veno-Echo.cpp ****                 }
1322:Veno-Echo.cpp ****             }
1323:Veno-Echo.cpp ****         }
1324:Veno-Echo.cpp **** 
1325:Veno-Echo.cpp ****         if(Res_pickup)
1326:Veno-Echo.cpp ****         {
1327:Veno-Echo.cpp ****             float Res{};
1328:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
1329:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
1330:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 63


1331:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
1332:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
1333:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
1334:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
1335:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
1336:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
1337:Veno-Echo.cpp ****             AltControls.Resonance = Res;
1338:Veno-Echo.cpp ****             save_flag = true;
1339:Veno-Echo.cpp ****         }
1340:Veno-Echo.cpp ****     }
1341:Veno-Echo.cpp **** }
1342:Veno-Echo.cpp **** 
1343:Veno-Echo.cpp **** void Update_width_CV()
1344:Veno-Echo.cpp **** {
1345:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
1346:Veno-Echo.cpp **** }
1347:Veno-Echo.cpp **** 
1348:Veno-Echo.cpp **** void Update_width()
1349:Veno-Echo.cpp **** {
1350:Veno-Echo.cpp ****     static bool lastShift{};
1351:Veno-Echo.cpp ****     static bool width_pickup{};
1352:Veno-Echo.cpp ****     static bool ModDepth_pickup{};
1353:Veno-Echo.cpp **** 
1354:Veno-Echo.cpp ****     static float width_Last{};
1355:Veno-Echo.cpp **** 
1356:Veno-Echo.cpp ****     //get pot values:
1357:Veno-Echo.cpp ****     float width_Pot{hw.adc.GetMuxFloat(7,7)};
1358:Veno-Echo.cpp **** 
1359:Veno-Echo.cpp ****     if (!shift) //default controls
1360:Veno-Echo.cpp ****     {   
1361:Veno-Echo.cpp ****         static float width_new{};
1362:Veno-Echo.cpp ****         //update pickup
1363:Veno-Echo.cpp ****         if (shift != lastShift)
1364:Veno-Echo.cpp ****         {
1365:Veno-Echo.cpp ****             lastShift = shift;
1366:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
1367:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
1368:Veno-Echo.cpp ****         }
1369:Veno-Echo.cpp **** 
1370:Veno-Echo.cpp ****         else
1371:Veno-Echo.cpp ****         {
1372:Veno-Echo.cpp ****             if(!width_pickup)  //not picked up
1373:Veno-Echo.cpp ****             {
1374:Veno-Echo.cpp ****                 if(abs(width_Pot - width_new) > pickupTolerance)  //checked if changed from new val
1375:Veno-Echo.cpp ****                 {
1376:Veno-Echo.cpp ****                     width_pickup = true;   //set to picked up
1377:Veno-Echo.cpp ****                 }
1378:Veno-Echo.cpp ****             }
1379:Veno-Echo.cpp **** 
1380:Veno-Echo.cpp ****         }
1381:Veno-Echo.cpp **** 
1382:Veno-Echo.cpp ****         float widthTarget{};
1383:Veno-Echo.cpp **** 
1384:Veno-Echo.cpp ****         if(width_pickup)
1385:Veno-Echo.cpp ****         {
1386:Veno-Echo.cpp ****             widthTarget = scale(PotCVCombo(width_Pot,width_CV),0.5f,0.0f,LINEAR);
1387:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 64


1388:Veno-Echo.cpp ****         }
1389:Veno-Echo.cpp **** 
1390:Veno-Echo.cpp ****         else
1391:Veno-Echo.cpp ****         {        
1392:Veno-Echo.cpp ****             widthTarget = scale(PotCVCombo(width_Last,width_CV),0.5f,0.0f,LINEAR);
1393:Veno-Echo.cpp ****         }
1394:Veno-Echo.cpp ****             
1395:Veno-Echo.cpp ****             fonepole(width,widthTarget,0.032f);
1396:Veno-Echo.cpp ****             WidthXfade.SetPos(width);
1397:Veno-Echo.cpp ****     }
1398:Veno-Echo.cpp **** 
1399:Veno-Echo.cpp ****     else    //alternate controls
1400:Veno-Echo.cpp ****     {
1401:Veno-Echo.cpp ****         static float ModDepth_new{};
1402:Veno-Echo.cpp **** 
1403:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1404:Veno-Echo.cpp ****         {
1405:Veno-Echo.cpp ****             lastShift = shift;
1406:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
1407:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
1408:Veno-Echo.cpp ****         }
1409:Veno-Echo.cpp **** 
1410:Veno-Echo.cpp ****         else    //not a recent shift change
1411:Veno-Echo.cpp ****         {
1412:Veno-Echo.cpp ****             if(!ModDepth_pickup) //not picked up
1413:Veno-Echo.cpp ****             {
1414:Veno-Echo.cpp ****                 if(abs(width_Pot - ModDepth_new) > pickupTolerance)
1415:Veno-Echo.cpp ****                 {
1416:Veno-Echo.cpp ****                     ModDepth_pickup = true;   //set picked up
1417:Veno-Echo.cpp ****                 }
1418:Veno-Echo.cpp ****             }
1419:Veno-Echo.cpp ****         }
1420:Veno-Echo.cpp **** 
1421:Veno-Echo.cpp ****         if(ModDepth_pickup)
1422:Veno-Echo.cpp ****         {
1423:Veno-Echo.cpp ****             ModDepth = scale(width_Pot,minModDepth,maxModDepth,LINEAR); 
1424:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
1425:Veno-Echo.cpp ****             save_flag = true;
1426:Veno-Echo.cpp ****         }
1427:Veno-Echo.cpp ****     }
1428:Veno-Echo.cpp **** }
1429:Veno-Echo.cpp **** 
1430:Veno-Echo.cpp **** void Update_crossfeedback()
1431:Veno-Echo.cpp **** {
1432:Veno-Echo.cpp ****     static bool lastShift{};
1433:Veno-Echo.cpp ****     static bool crossfeedback_pickup{};
1434:Veno-Echo.cpp ****     static bool modRate_pickup{};
1435:Veno-Echo.cpp **** 
1436:Veno-Echo.cpp ****     static float crossfeedback_Last{};
1437:Veno-Echo.cpp **** 
1438:Veno-Echo.cpp ****     //get pot values:
1439:Veno-Echo.cpp ****     float crossfeedback_Pot{hw.adc.GetMuxFloat(7,0)};
1440:Veno-Echo.cpp **** 
1441:Veno-Echo.cpp ****     if (!shift) //default controls
1442:Veno-Echo.cpp ****     {   
1443:Veno-Echo.cpp ****         static float crossfeedback_new{};
1444:Veno-Echo.cpp ****         //update pickup
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 65


1445:Veno-Echo.cpp ****         if (shift != lastShift)
1446:Veno-Echo.cpp ****         {
1447:Veno-Echo.cpp ****             lastShift = shift;
1448:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
1449:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
1450:Veno-Echo.cpp ****         }
1451:Veno-Echo.cpp **** 
1452:Veno-Echo.cpp ****         else
1453:Veno-Echo.cpp ****         {
1454:Veno-Echo.cpp ****             if(!crossfeedback_pickup)  //not picked up
1455:Veno-Echo.cpp ****             {
1456:Veno-Echo.cpp ****                 if(abs(crossfeedback_Pot - crossfeedback_new) > pickupTolerance)  //checked if chan
1457:Veno-Echo.cpp ****                 {
1458:Veno-Echo.cpp ****                     crossfeedback_pickup = true;   //set to picked up
1459:Veno-Echo.cpp ****                 }
1460:Veno-Echo.cpp ****             }
1461:Veno-Echo.cpp ****         }
1462:Veno-Echo.cpp ****         float crossfeedbackTarget{};
1463:Veno-Echo.cpp **** 
1464:Veno-Echo.cpp ****         if(crossfeedback_pickup)
1465:Veno-Echo.cpp ****         {
1466:Veno-Echo.cpp ****             crossfeedbackTarget = scale(crossfeedback_Pot,0.0,1.0,LINEAR);
1467:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
1468:Veno-Echo.cpp ****         }
1469:Veno-Echo.cpp **** 
1470:Veno-Echo.cpp ****         else
1471:Veno-Echo.cpp ****         {
1472:Veno-Echo.cpp ****             crossfeedbackTarget = scale(crossfeedback_Last,0.0,1.0,LINEAR);
1473:Veno-Echo.cpp ****         }
1474:Veno-Echo.cpp **** 
1475:Veno-Echo.cpp ****         fonepole(crossfeedback,crossfeedbackTarget,0.032f);
1476:Veno-Echo.cpp ****     }
1477:Veno-Echo.cpp ****     else    //alternate controls
1478:Veno-Echo.cpp ****     {
1479:Veno-Echo.cpp ****         static float modRate_new{};
1480:Veno-Echo.cpp **** 
1481:Veno-Echo.cpp ****         if (shift != lastShift)
1482:Veno-Echo.cpp ****         {
1483:Veno-Echo.cpp ****             lastShift = shift;
1484:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
1485:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
1486:Veno-Echo.cpp ****         }
1487:Veno-Echo.cpp **** 
1488:Veno-Echo.cpp ****         else
1489:Veno-Echo.cpp ****         {
1490:Veno-Echo.cpp ****             if(!modRate_pickup)
1491:Veno-Echo.cpp ****             {
1492:Veno-Echo.cpp ****                 if(abs(crossfeedback_Pot - modRate_new) > pickupTolerance)
1493:Veno-Echo.cpp ****                 {
1494:Veno-Echo.cpp ****                     modRate_pickup = true; //set picked up
1495:Veno-Echo.cpp ****                 }
1496:Veno-Echo.cpp ****             }
1497:Veno-Echo.cpp ****         }
1498:Veno-Echo.cpp **** 
1499:Veno-Echo.cpp ****         if(modRate_pickup)
1500:Veno-Echo.cpp ****         {
1501:Veno-Echo.cpp ****             float modRate{scale(crossfeedback_Pot,minModRate,maxModRate,LINEAR)};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 66


1502:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
1503:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
1504:Veno-Echo.cpp ****             save_flag = true;
1505:Veno-Echo.cpp ****         }
1506:Veno-Echo.cpp ****     }
1507:Veno-Echo.cpp **** }
1508:Veno-Echo.cpp **** 
1509:Veno-Echo.cpp **** void Update_filterXfade()
1510:Veno-Echo.cpp **** {
1511:Veno-Echo.cpp ****     static bool lastShift{};
1512:Veno-Echo.cpp ****     static bool filterXfade_pickup{};
1513:Veno-Echo.cpp ****     static bool PostFilters_pickup{};
1514:Veno-Echo.cpp **** 
1515:Veno-Echo.cpp ****     static float filterXfade_last{};
1516:Veno-Echo.cpp **** 
1517:Veno-Echo.cpp ****     //get pot values:
1518:Veno-Echo.cpp ****     float filterXfade_Pot{hw.adc.GetMuxFloat(7,3)};
1519:Veno-Echo.cpp **** 
1520:Veno-Echo.cpp ****     if (!shift) //default controls
1521:Veno-Echo.cpp ****     {   
1522:Veno-Echo.cpp ****         static float filterXfade_new{};
1523:Veno-Echo.cpp ****         //update pickup
1524:Veno-Echo.cpp ****         if (shift != lastShift)
1525:Veno-Echo.cpp ****         {
1526:Veno-Echo.cpp ****             lastShift = shift;
1527:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
1528:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
1529:Veno-Echo.cpp ****         }
1530:Veno-Echo.cpp **** 
1531:Veno-Echo.cpp ****         else
1532:Veno-Echo.cpp ****         {
1533:Veno-Echo.cpp ****             if(!filterXfade_pickup)  //not picked up
1534:Veno-Echo.cpp ****             {
1535:Veno-Echo.cpp ****                 if(abs(filterXfade_Pot - filterXfade_new) > pickupTolerance)  //checked if changed 
1536:Veno-Echo.cpp ****                 {
1537:Veno-Echo.cpp ****                     filterXfade_pickup = true;   //set to picked up
1538:Veno-Echo.cpp ****                 }
1539:Veno-Echo.cpp ****             }
1540:Veno-Echo.cpp ****         }
1541:Veno-Echo.cpp **** 
1542:Veno-Echo.cpp ****         float filterXfadeTarget{};
1543:Veno-Echo.cpp **** 
1544:Veno-Echo.cpp ****         if(filterXfade_pickup)
1545:Veno-Echo.cpp ****         {
1546:Veno-Echo.cpp ****             filterXfadeTarget = scale(filterXfade_Pot,0.0,1.0,EXPONENTIAL);
1547:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
1548:Veno-Echo.cpp ****         }
1549:Veno-Echo.cpp **** 
1550:Veno-Echo.cpp ****         else
1551:Veno-Echo.cpp ****         {
1552:Veno-Echo.cpp ****             filterXfadeTarget = scale(filterXfade_last,0.0,1.0,EXPONENTIAL);
1553:Veno-Echo.cpp ****         }
1554:Veno-Echo.cpp **** 
1555:Veno-Echo.cpp ****         fonepole(filterXfade,filterXfadeTarget,0.032f);
1556:Veno-Echo.cpp ****     }
1557:Veno-Echo.cpp ****     else    //alternate controls
1558:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 67


1559:Veno-Echo.cpp **** 
1560:Veno-Echo.cpp ****         static float PostFilters_new{};
1561:Veno-Echo.cpp **** 
1562:Veno-Echo.cpp ****         if (shift != lastShift) //recent shift change
1563:Veno-Echo.cpp ****         {
1564:Veno-Echo.cpp ****             lastShift = shift;
1565:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
1566:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
1567:Veno-Echo.cpp ****         }
1568:Veno-Echo.cpp **** 
1569:Veno-Echo.cpp ****         else    //not a recent shift change
1570:Veno-Echo.cpp ****         {
1571:Veno-Echo.cpp ****             if(!PostFilters_pickup) //not picked up
1572:Veno-Echo.cpp ****             {
1573:Veno-Echo.cpp ****                 if(abs(filterXfade_Pot - PostFilters_new) > pickupTolerance)
1574:Veno-Echo.cpp ****                 {
1575:Veno-Echo.cpp ****                     PostFilters_pickup = true;   //set picked up
1576:Veno-Echo.cpp ****                 }
1577:Veno-Echo.cpp ****             }
1578:Veno-Echo.cpp ****         }
1579:Veno-Echo.cpp ****         
1580:Veno-Echo.cpp ****         if(PostFilters_pickup)
1581:Veno-Echo.cpp ****         {
1582:Veno-Echo.cpp ****             if(filterXfade_Pot < 0.45f)
1583:Veno-Echo.cpp ****             {
1584:Veno-Echo.cpp ****                 PostFilters = false;
1585:Veno-Echo.cpp ****             }
1586:Veno-Echo.cpp ****             else if(filterXfade_Pot > 0.55f)
1587:Veno-Echo.cpp ****             {
1588:Veno-Echo.cpp ****                 PostFilters = true;
1589:Veno-Echo.cpp ****             }
1590:Veno-Echo.cpp ****             else
1591:Veno-Echo.cpp ****             {
1592:Veno-Echo.cpp ****               //do nothing
1593:Veno-Echo.cpp ****             }
1594:Veno-Echo.cpp ****             AltControls.FilterPrePost = filterXfade_Pot;
1595:Veno-Echo.cpp ****             save_flag = true;
1596:Veno-Echo.cpp ****         }  
1597:Veno-Echo.cpp ****     }
1598:Veno-Echo.cpp **** }
1599:Veno-Echo.cpp **** 
1600:Veno-Echo.cpp **** void GetModCV()
1601:Veno-Echo.cpp **** {
1602:Veno-Echo.cpp ****     //get modulation CV input
1603:Veno-Echo.cpp ****     modulation_CV_Raw = scale(hw.adc.GetFloat(6),-1.0f * maxModAmp,maxModAmp,LINEAR);
1604:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
1605:Veno-Echo.cpp **** }
1606:Veno-Echo.cpp **** 
1607:Veno-Echo.cpp **** void Update_Mod()
1608:Veno-Echo.cpp **** {    
1609:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
1610:Veno-Echo.cpp ****     static float modulation_CV{};
1611:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
1612:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
1613:Veno-Echo.cpp ****     //calculate InternalMod
1614:Veno-Echo.cpp ****     float internalmod{lfo.Process() * ModDepth_Filtered};
1615:Veno-Echo.cpp ****     //apply modulation to delay lines
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 68


1616:Veno-Echo.cpp ****     delayL.SetModulation(modulation_CV + internalmod);
1617:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
1618:Veno-Echo.cpp **** }
1619:Veno-Echo.cpp **** 
1620:Veno-Echo.cpp **** void UpdateClock()
1621:Veno-Echo.cpp **** {
1622:Veno-Echo.cpp ****     static int divCounter{};
1623:Veno-Echo.cpp ****     //if clock in pulse received
1624:Veno-Echo.cpp ****     if (ClockIn.Trig())     
1625:Veno-Echo.cpp ****     {   
1626:Veno-Echo.cpp ****         divCounter = (divCounter + 1) % PPQN;
1627:Veno-Echo.cpp ****         //tempoLED_BASE.resetPhase();
1628:Veno-Echo.cpp ****         if(divCounter == 0)
1629:Veno-Echo.cpp ****         {
1630:Veno-Echo.cpp ****             if(BaseTempo.tap()) //if valid tap resistered
1631:Veno-Echo.cpp ****             {
1632:Veno-Echo.cpp ****                 tempoLED_BASE.setTempo(BaseTempo.getTapFreq()); //set new base freq
1633:Veno-Echo.cpp ****                 AltControls.tapLength = BaseTempo.getTapLength();
1634:Veno-Echo.cpp ****                 save_flag = true;
1635:Veno-Echo.cpp ****             }
1636:Veno-Echo.cpp ****         }
1637:Veno-Echo.cpp ****     }
1638:Veno-Echo.cpp ****     
1639:Veno-Echo.cpp **** }
1640:Veno-Echo.cpp **** 
1641:Veno-Echo.cpp **** void Update_Buttons()
1642:Veno-Echo.cpp **** {  
1643:Veno-Echo.cpp ****     static uint32_t shiftTime{};
1644:Veno-Echo.cpp ****     static uint32_t resetTime{};
1645:Veno-Echo.cpp ****     static int buttonstate{};
1646:Veno-Echo.cpp **** 
1647:Veno-Echo.cpp ****     Rev_L_sw.update();
1648:Veno-Echo.cpp ****     Rev_R_sw.update();
1649:Veno-Echo.cpp ****     LPF_sw.update();
1650:Veno-Echo.cpp ****     HPF_sw.update();
1651:Veno-Echo.cpp ****     Tap_Button.update();
1652:Veno-Echo.cpp **** 
1653:Veno-Echo.cpp ****     ReverseGateL.Debounce();
1654:Veno-Echo.cpp ****     ReverseGateR.Debounce();
1655:Veno-Echo.cpp ****     //TapButton.Debounce();
1656:Veno-Echo.cpp ****     Sync.Debounce();
1657:Veno-Echo.cpp ****     //ClockIn.Debounce();
1658:Veno-Echo.cpp ****     //gate inputs
1659:Veno-Echo.cpp ****     if (ReverseGateL.RisingEdge())
1660:Veno-Echo.cpp ****     {
1661:Veno-Echo.cpp ****         Rev_L_sw.toggle();
1662:Veno-Echo.cpp ****         if(Rev_L_sw.getState())
1663:Veno-Echo.cpp ****         {
1664:Veno-Echo.cpp ****             AltControls.L_Rev = 1.0f;
1665:Veno-Echo.cpp ****         }
1666:Veno-Echo.cpp ****         else
1667:Veno-Echo.cpp ****         {
1668:Veno-Echo.cpp ****             AltControls.L_Rev = 0.0f;
1669:Veno-Echo.cpp ****         }
1670:Veno-Echo.cpp ****         save_flag = true;
1671:Veno-Echo.cpp ****     }
1672:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 69


1673:Veno-Echo.cpp ****     if (ReverseGateR.RisingEdge())
1674:Veno-Echo.cpp ****     {
1675:Veno-Echo.cpp ****         Rev_R_sw.toggle();
1676:Veno-Echo.cpp ****         if(Rev_R_sw.getState())
1677:Veno-Echo.cpp ****         {
1678:Veno-Echo.cpp ****             AltControls.R_Rev = 1.0f;
1679:Veno-Echo.cpp ****         }
1680:Veno-Echo.cpp ****         else
1681:Veno-Echo.cpp ****         {
1682:Veno-Echo.cpp ****             AltControls.R_Rev = 0.0f;
1683:Veno-Echo.cpp ****         }
1684:Veno-Echo.cpp ****         save_flag = true;
1685:Veno-Echo.cpp ****     }
1686:Veno-Echo.cpp **** 
1687:Veno-Echo.cpp ****     //buttons
1688:Veno-Echo.cpp **** 
1689:Veno-Echo.cpp ****     if (Rev_L_sw.RisingEdge())
1690:Veno-Echo.cpp ****     {
1691:Veno-Echo.cpp ****         buttonstate += 1;
1692:Veno-Echo.cpp ****         if (buttonstate == 3)
1693:Veno-Echo.cpp ****         {
1694:Veno-Echo.cpp ****             resetTime = System::GetNow();
1695:Veno-Echo.cpp ****         }
1696:Veno-Echo.cpp ****         if(Rev_L_sw.getState())
1697:Veno-Echo.cpp ****         {
1698:Veno-Echo.cpp ****             AltControls.L_Rev = 1.0f;
1699:Veno-Echo.cpp ****         }
1700:Veno-Echo.cpp ****         else
1701:Veno-Echo.cpp ****         {
1702:Veno-Echo.cpp ****             AltControls.L_Rev = 0.0f;
1703:Veno-Echo.cpp ****         }
1704:Veno-Echo.cpp ****         save_flag = true;
1705:Veno-Echo.cpp ****     }
1706:Veno-Echo.cpp **** 
1707:Veno-Echo.cpp ****     if (Rev_L_sw.FallingEdge())
1708:Veno-Echo.cpp ****     {
1709:Veno-Echo.cpp ****         buttonstate -= 1;
1710:Veno-Echo.cpp ****     }
1711:Veno-Echo.cpp **** 
1712:Veno-Echo.cpp ****     if (Rev_R_sw.RisingEdge())
1713:Veno-Echo.cpp ****     {
1714:Veno-Echo.cpp ****         buttonstate += 1;
1715:Veno-Echo.cpp ****         if (buttonstate == 3)
1716:Veno-Echo.cpp ****         {
1717:Veno-Echo.cpp ****             resetTime = System::GetNow();
1718:Veno-Echo.cpp ****         }
1719:Veno-Echo.cpp ****         if(Rev_R_sw.getState())
1720:Veno-Echo.cpp ****         {
1721:Veno-Echo.cpp ****             AltControls.R_Rev = 1.0f;
1722:Veno-Echo.cpp ****         }
1723:Veno-Echo.cpp ****         else
1724:Veno-Echo.cpp ****         {
1725:Veno-Echo.cpp ****             AltControls.R_Rev = 0.0f;
1726:Veno-Echo.cpp ****         }
1727:Veno-Echo.cpp ****         save_flag = true;
1728:Veno-Echo.cpp ****     }
1729:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 70


1730:Veno-Echo.cpp ****     if (Rev_R_sw.FallingEdge())
1731:Veno-Echo.cpp ****     {
1732:Veno-Echo.cpp ****         buttonstate -= 1;
1733:Veno-Echo.cpp ****     }
1734:Veno-Echo.cpp **** 
1735:Veno-Echo.cpp ****     if (Tap_Button.RisingEdge())    
1736:Veno-Echo.cpp ****     {
1737:Veno-Echo.cpp ****         if(BaseTempo.tap()) //if tempo changed
1738:Veno-Echo.cpp ****         {
1739:Veno-Echo.cpp ****             tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1740:Veno-Echo.cpp ****             AltControls.tapLength = BaseTempo.getTapLength();
1741:Veno-Echo.cpp ****             save_flag = true;
1742:Veno-Echo.cpp ****         }
1743:Veno-Echo.cpp ****         tempoLED_BASE.resetPhase();
1744:Veno-Echo.cpp ****         
1745:Veno-Echo.cpp **** 
1746:Veno-Echo.cpp ****         shiftTime = System::GetNow();   //reset shift timer
1747:Veno-Echo.cpp ****         buttonstate += 1;
1748:Veno-Echo.cpp ****         
1749:Veno-Echo.cpp ****         if (buttonstate == 3)
1750:Veno-Echo.cpp ****         {
1751:Veno-Echo.cpp ****             resetTime = System::GetNow();
1752:Veno-Echo.cpp ****         }
1753:Veno-Echo.cpp **** 
1754:Veno-Echo.cpp ****     }
1755:Veno-Echo.cpp **** 
1756:Veno-Echo.cpp ****     if (Tap_Button.FallingEdge())    //when button is let go shift is off
1757:Veno-Echo.cpp ****     {
1758:Veno-Echo.cpp ****         shift = false;
1759:Veno-Echo.cpp ****         buttonstate -= 1;
1760:Veno-Echo.cpp ****         mute = false;
1761:Veno-Echo.cpp ****     }
1762:Veno-Echo.cpp **** 
1763:Veno-Echo.cpp ****     if (Tap_Button.getState())
1764:Veno-Echo.cpp ****     {
1765:Veno-Echo.cpp ****         if ( (System::GetNow() - shiftTime) > shiftWait)
1766:Veno-Echo.cpp ****         {
1767:Veno-Echo.cpp ****             shift = true;   //turn on shift if button held for longer than shiftWait
1768:Veno-Echo.cpp ****         } 
1769:Veno-Echo.cpp ****     }
1770:Veno-Echo.cpp **** 
1771:Veno-Echo.cpp ****     if (buttonstate == 3) //all buttons held
1772:Veno-Echo.cpp ****     {
1773:Veno-Echo.cpp **** 
1774:Veno-Echo.cpp ****             if( ((System::GetNow() - resetTime) > resetWait) )
1775:Veno-Echo.cpp ****             {
1776:Veno-Echo.cpp ****                 Rev_L_sw.toggle();
1777:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
1778:Veno-Echo.cpp ****                 ResetAllLEDs();
1779:Veno-Echo.cpp ****                 //don't let reset or shift update
1780:Veno-Echo.cpp ****                 shift = false;
1781:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
1782:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
1783:Veno-Echo.cpp ****                 resetTime = System::GetNow();
1784:Veno-Echo.cpp ****                 save_flag = true;
1785:Veno-Echo.cpp ****             }
1786:Veno-Echo.cpp ****     } 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 71


1787:Veno-Echo.cpp **** 
1788:Veno-Echo.cpp ****     syncMode = Sync.Pressed() ? true : false;
1789:Veno-Echo.cpp **** }
1790:Veno-Echo.cpp **** 
1791:Veno-Echo.cpp **** void Update_DelayBaseTempo()
1792:Veno-Echo.cpp **** {
1793:Veno-Echo.cpp ****     delayL.SetBaseTempo(BaseTempo.getDelayLength());
1794:Veno-Echo.cpp ****     delayR.SetBaseTempo(BaseTempo.getDelayLength());
1795:Veno-Echo.cpp **** }
1796:Veno-Echo.cpp **** 
1797:Veno-Echo.cpp **** void Update_DelayTempoLEDs()
1798:Veno-Echo.cpp **** {    
1799:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
1800:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
1801:Veno-Echo.cpp ****     //DELAYL_DEBUG = delayL.GetDelayTime();
1802:Veno-Echo.cpp ****     //DELAYR_DEBUG = delayR.GetDelayTime();
1803:Veno-Echo.cpp ****     //CLOCK_DEBUG = BaseTempo.getDelayLength();
1804:Veno-Echo.cpp **** }
1805:Veno-Echo.cpp **** 
1806:Veno-Echo.cpp **** void Update_BaseTempoLED()
1807:Veno-Echo.cpp **** {
1808:Veno-Echo.cpp ****     tempoLED_BASE.update();
1809:Veno-Echo.cpp **** 
1810:Veno-Echo.cpp ****     static int phaseCounter{};
1811:Veno-Echo.cpp **** 
1812:Veno-Echo.cpp ****     if(tempoLED_BASE.isEOC())
1813:Veno-Echo.cpp ****     {
1814:Veno-Echo.cpp ****         phaseCounter = (phaseCounter + 1) % 6;
1815:Veno-Echo.cpp ****     }
1816:Veno-Echo.cpp **** 
1817:Veno-Echo.cpp ****     float dividedPhase{(tempoLED_BASE.GetPhase() / 6) + ( (TWOPI_F / 6) * phaseCounter ) };
1818:Veno-Echo.cpp ****     //update base phase for both delay lines
1819:Veno-Echo.cpp ****     delayL.SetBasePhase( dividedPhase );
1820:Veno-Echo.cpp ****     delayR.SetBasePhase( dividedPhase );
1821:Veno-Echo.cpp ****     PHASE_DEBUG = dividedPhase;
1822:Veno-Echo.cpp **** }
1823:Veno-Echo.cpp **** 
1824:Veno-Echo.cpp **** 
1825:Veno-Echo.cpp **** void ApplySettings(const Settings &setting)
1826:Veno-Echo.cpp **** {
1827:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
1828:Veno-Echo.cpp ****     {
1829:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(setting.RevLength);
1830:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
1831:Veno-Echo.cpp ****     }
1832:Veno-Echo.cpp ****     else
1833:Veno-Echo.cpp ****     {
1834:Veno-Echo.cpp ****         delaysL_REV.SetDelayTime(defaultAltControls.RevLength);
1835:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
1836:Veno-Echo.cpp ****     }
1837:Veno-Echo.cpp **** 
1838:Veno-Echo.cpp ****     if((setting.tapRatio >= 1.0f) && (setting.tapRatio <= 3.0f ))
1839:Veno-Echo.cpp ****     {
1840:Veno-Echo.cpp ****         BaseTempo.setTapRatio(setting.tapRatio);
1841:Veno-Echo.cpp ****     }
1842:Veno-Echo.cpp ****     else
1843:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 72


1844:Veno-Echo.cpp ****         BaseTempo.setTapRatio(defaultAltControls.tapRatio);
1845:Veno-Echo.cpp ****     }
1846:Veno-Echo.cpp **** 
1847:Veno-Echo.cpp ****     if((setting.ModDepth >= minModDepth) && (setting.ModDepth <= maxModDepth))
1848:Veno-Echo.cpp ****     {
1849:Veno-Echo.cpp ****         ModDepth = setting.ModDepth;
1850:Veno-Echo.cpp ****     }
1851:Veno-Echo.cpp ****     else
1852:Veno-Echo.cpp ****     {
1853:Veno-Echo.cpp ****         ModDepth = defaultAltControls.ModDepth;
1854:Veno-Echo.cpp ****     }
1855:Veno-Echo.cpp **** 
1856:Veno-Echo.cpp ****     if((setting.ModFreq >= minModRate) && (setting.ModFreq <= maxModRate))
1857:Veno-Echo.cpp ****     {
1858:Veno-Echo.cpp ****         lfo.SetFreq(setting.ModFreq);
1859:Veno-Echo.cpp ****     }
1860:Veno-Echo.cpp ****     else
1861:Veno-Echo.cpp ****     {
1862:Veno-Echo.cpp ****         lfo.SetFreq(defaultAltControls.ModFreq);
1863:Veno-Echo.cpp ****     }
1864:Veno-Echo.cpp **** 
1865:Veno-Echo.cpp ****     if((setting.LP_Cutoff >= minLPCut) && (setting.LP_Cutoff <= maxLPCut))
1866:Veno-Echo.cpp ****     {
1867:Veno-Echo.cpp ****         LPF_L.SetFreq(setting.LP_Cutoff);
1868:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
1869:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
1870:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
1871:Veno-Echo.cpp ****     }
1872:Veno-Echo.cpp ****     else
1873:Veno-Echo.cpp ****     {
1874:Veno-Echo.cpp ****         LPF_L.SetFreq(defaultAltControls.LP_Cutoff);
1875:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
1876:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
1877:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
1878:Veno-Echo.cpp ****     }
1879:Veno-Echo.cpp ****     
1880:Veno-Echo.cpp ****     if((setting.HP_Cutoff >= minHPCut) && (setting.HP_Cutoff <= maxHPCut))
1881:Veno-Echo.cpp ****     {
1882:Veno-Echo.cpp ****         HPF_L.SetFreq(setting.HP_Cutoff);
1883:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
1884:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
1885:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
1886:Veno-Echo.cpp ****     }
1887:Veno-Echo.cpp ****     else
1888:Veno-Echo.cpp ****     {
1889:Veno-Echo.cpp ****         HPF_L.SetFreq(defaultAltControls.HP_Cutoff);
1890:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
1891:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
1892:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
1893:Veno-Echo.cpp **** 
1894:Veno-Echo.cpp ****     }
1895:Veno-Echo.cpp **** 
1896:Veno-Echo.cpp ****     if((setting.Resonance >= minRes) && (setting.Resonance <= maxRes))
1897:Veno-Echo.cpp ****     {
1898:Veno-Echo.cpp ****         LPF_L.SetRes(setting.Resonance);
1899:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
1900:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 73


1901:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
1902:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
1903:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
1904:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
1905:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
1906:Veno-Echo.cpp ****     }
1907:Veno-Echo.cpp **** 
1908:Veno-Echo.cpp ****     else
1909:Veno-Echo.cpp ****     {
1910:Veno-Echo.cpp ****         LPF_L_post.SetRes(defaultAltControls.Resonance);
1911:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
1912:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
1913:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
1914:Veno-Echo.cpp ****     }
1915:Veno-Echo.cpp **** 
1916:Veno-Echo.cpp ****     if(setting.FilterPrePost < 0.45f)
1917:Veno-Echo.cpp ****     {
1918:Veno-Echo.cpp ****         PostFilters = false;
1919:Veno-Echo.cpp ****     }
1920:Veno-Echo.cpp ****         else if(setting.FilterPrePost > 0.55f)
1921:Veno-Echo.cpp ****     {
1922:Veno-Echo.cpp ****         PostFilters = true;
1923:Veno-Echo.cpp ****     }
1924:Veno-Echo.cpp ****     else
1925:Veno-Echo.cpp ****     {
1926:Veno-Echo.cpp ****         PostFilters = false;    //default to pre filter
1927:Veno-Echo.cpp ****     }
1928:Veno-Echo.cpp **** 
1929:Veno-Echo.cpp ****     //if between min and max tap length
1930:Veno-Echo.cpp ****     if( (setting.tapLength >= static_cast<float> (mintap)) 
1931:Veno-Echo.cpp ****         && (setting.tapLength <= static_cast<float> (maxtap)) )
1932:Veno-Echo.cpp ****     {
1933:Veno-Echo.cpp ****         BaseTempo.setTapLength(setting.tapLength);
1934:Veno-Echo.cpp ****         tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1935:Veno-Echo.cpp ****     }
1936:Veno-Echo.cpp **** 
1937:Veno-Echo.cpp ****     else
1938:Veno-Echo.cpp ****     {
1939:Veno-Echo.cpp ****         BaseTempo.setTapLength(defaultAltControls.tapLength);
1940:Veno-Echo.cpp ****         tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
1941:Veno-Echo.cpp ****     }
1942:Veno-Echo.cpp **** 
1943:Veno-Echo.cpp ****     if((setting.L_Rev > 0.49f)) //if more than half
1944:Veno-Echo.cpp ****     {
1945:Veno-Echo.cpp ****         Rev_L_sw.turnON();
1946:Veno-Echo.cpp ****     }
1947:Veno-Echo.cpp ****     else    //default OFF
1948:Veno-Echo.cpp ****     {
1949:Veno-Echo.cpp ****         Rev_L_sw.turnOFF();
1950:Veno-Echo.cpp ****     }
1951:Veno-Echo.cpp **** 
1952:Veno-Echo.cpp ****     if((setting.R_Rev > 0.49f)) //if more than half
1953:Veno-Echo.cpp ****     {
1954:Veno-Echo.cpp ****         Rev_R_sw.turnON();
1955:Veno-Echo.cpp ****     }
1956:Veno-Echo.cpp ****     else    //default OFF
1957:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 74


1958:Veno-Echo.cpp ****         Rev_R_sw.turnOFF();
1959:Veno-Echo.cpp ****     }
1960:Veno-Echo.cpp **** 
1961:Veno-Echo.cpp **** }
1962:Veno-Echo.cpp **** 
1963:Veno-Echo.cpp **** void TurnOnAllLEDs()
1964:Veno-Echo.cpp **** {
1965:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
1966:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
1967:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
1968:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
1969:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
1970:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
1971:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
1972:Veno-Echo.cpp **** }
1973:Veno-Echo.cpp **** 
1974:Veno-Echo.cpp **** void ResetAllLEDs()
1975:Veno-Echo.cpp **** {
1976:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
1977:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
1978:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
1979:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
1980:Veno-Echo.cpp ****     {
1981:Veno-Echo.cpp ****         Rev_L_sw.LED_set(0.0f);
1982:Veno-Echo.cpp ****     }
1983:Veno-Echo.cpp ****     else
1984:Veno-Echo.cpp ****     {
1985:Veno-Echo.cpp ****        Rev_L_sw.LED_set(1.0f);
1986:Veno-Echo.cpp ****     }
1987:Veno-Echo.cpp **** 
1988:Veno-Echo.cpp ****     if(!Rev_R_sw.getState())
1989:Veno-Echo.cpp ****     {
1990:Veno-Echo.cpp ****         Rev_R_sw.LED_set(0.0f);
1991:Veno-Echo.cpp ****     }
1992:Veno-Echo.cpp ****     else
1993:Veno-Echo.cpp ****     {
1994:Veno-Echo.cpp ****         Rev_R_sw.LED_set(1.0f);
1995:Veno-Echo.cpp ****     }
1996:Veno-Echo.cpp ****     
1997:Veno-Echo.cpp ****     LPF_sw.LED_set(0.0f);
1998:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
1999:Veno-Echo.cpp **** }
2000:Veno-Echo.cpp **** 
2001:Veno-Echo.cpp **** float HardLimit(float input, float limit)
2002:Veno-Echo.cpp **** {
2003:Veno-Echo.cpp ****     float returnval{};
2004:Veno-Echo.cpp ****     if (input > limit)
2005:Veno-Echo.cpp ****         returnval = limit;
2006:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
2007:Veno-Echo.cpp ****         returnval = limit * -1.0f;
2008:Veno-Echo.cpp ****     else
2009:Veno-Echo.cpp ****         returnval = input;
2010:Veno-Echo.cpp **** 
2011:Veno-Echo.cpp ****     return returnval;   
2012:Veno-Echo.cpp **** }
2013:Veno-Echo.cpp **** 
2014:Veno-Echo.cpp **** float PotCVCombo(float Pot_Val, float CV_Val)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 75


 1143              		.loc 20 2014 7 view .LVU239
 1144              	.LBB998:
2015:Veno-Echo.cpp **** {
2016:Veno-Echo.cpp ****     float output{};
 1145              		.loc 20 2016 5 view .LVU240
2017:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1146              		.loc 20 2017 5 view .LVU241
 1147              	.LBE998:
 1148              	.LBE997:
 903:Veno-Echo.cpp ****         }
 1149              		.loc 20 903 36 is_stmt 0 view .LVU242
 1150 0042 6E49     		ldr	r1, .L75+28
 1151              	.LBB1002:
 1152              	.LBB999:
 1153              		.loc 20 2017 39 view .LVU243
 1154 0044 F7EE006A 		vmov.f32	s13, #1.0e+0
 1155              		.loc 20 2017 49 view .LVU244
 1156 0048 F6EE005A 		vmov.f32	s11, #5.0e-1
 1157              	.LBE999:
 1158              	.LBE1002:
 903:Veno-Echo.cpp ****         }
 1159              		.loc 20 903 36 view .LVU245
 1160 004c 6C4A     		ldr	r2, .L75+32
 1161              	.LBB1003:
 1162              	.LBB1000:
 1163              		.loc 20 2017 39 view .LVU246
 1164 004e 91ED007A 		vldr.32	s14, [r1]
 1165              		.loc 20 2017 12 view .LVU247
 1166 0052 B0EE006A 		vmov.f32	s12, #2.0e+0
 1167 0056 D2ED007A 		vldr.32	s15, [r2]
 1168              		.loc 20 2017 39 view .LVU248
 1169 005a 36EEC77A 		vsub.f32	s14, s13, s14
 1170              		.loc 20 2017 49 view .LVU249
 1171 005e 37EE657A 		vsub.f32	s14, s14, s11
 1172              		.loc 20 2017 12 view .LVU250
 1173 0062 E7EE067A 		vfma.f32	s15, s14, s12
 1174              	.LVL43:
2018:Veno-Echo.cpp **** 
2019:Veno-Echo.cpp ****     if(output < 0.0f)
 1175              		.loc 20 2019 5 is_stmt 1 view .LVU251
 1176 0066 F5EEC07A 		vcmpe.f32	s15, #0
 1177 006a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1178 006e 00F1B180 		bmi	.L73
2020:Veno-Echo.cpp ****     {
2021:Veno-Echo.cpp ****         output = 0.0f;
2022:Veno-Echo.cpp ****     }
2023:Veno-Echo.cpp **** 
2024:Veno-Echo.cpp ****     if(output > 1.0f)
 1179              		.loc 20 2024 5 view .LVU252
2025:Veno-Echo.cpp ****     {
2026:Veno-Echo.cpp ****         output = 1.0f;
 1180              		.loc 20 2026 16 is_stmt 0 view .LVU253
 1181 0072 F4EE667A 		vcmp.f32	s15, s13
 1182 0076 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1183 007a 76FEA77A 		vselgt.f32	s15, s13, s15
 1184              	.LVL44:
 1185              	.L50:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 76


 1186              		.loc 20 2026 16 view .LVU254
 1187              	.LBE1000:
 1188              	.LBE1003:
 906:Veno-Echo.cpp ****         {
 1189              		.loc 20 906 9 is_stmt 1 view .LVU255
 1190 007e 93B9     		cbnz	r3, .L42
 908:Veno-Echo.cpp ****             {
 1191              		.loc 20 908 13 view .LVU256
 908:Veno-Echo.cpp ****             {
 1192              		.loc 20 908 35 is_stmt 0 view .LVU257
 1193 0080 604B     		ldr	r3, .L75+36
 1194 0082 B0EE670A 		vmov.f32	s0, s15
 1195              	.LVL45:
 908:Veno-Echo.cpp ****             {
 1196              		.loc 20 908 35 view .LVU258
 1197 0086 6048     		ldr	r0, .L75+40
 1198 0088 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1199              	.LBE1015:
 1200              	.LBE1070:
 948:Veno-Echo.cpp **** 
 1201              		.loc 20 948 1 view .LVU259
 1202 008a BDE81040 		pop	{r4, lr}
 1203              		.cfi_remember_state
 1204              		.cfi_restore 14
 1205              		.cfi_restore 4
 1206              		.cfi_def_cfa_offset 0
 1207              	.LBB1071:
 1208              	.LBB1016:
 908:Veno-Echo.cpp ****             {
 1209              		.loc 20 908 35 view .LVU260
 1210 008e FFF7FEBF 		b	_ZN10DelayMulti12SetDelayTimeEfb
 1211              	.LVL46:
 1212              	.L43:
 1213              		.cfi_restore_state
 908:Veno-Echo.cpp ****             {
 1214              		.loc 20 908 35 view .LVU261
 1215              	.LBE1016:
 1216              	.LBB1017:
 917:Veno-Echo.cpp **** 
 1217              		.loc 20 917 9 is_stmt 1 view .LVU262
 919:Veno-Echo.cpp ****         {
 1218              		.loc 20 919 9 view .LVU263
 1219 0092 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1220 0094 002B     		cmp	r3, #0
 1221 0096 3CD1     		bne	.L53
 921:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1222              		.loc 20 921 13 view .LVU264
 921:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
 1223              		.loc 20 921 23 is_stmt 0 view .LVU265
 1224 0098 0124     		movs	r4, #1
 922:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1225              		.loc 20 922 34 view .LVU266
 1226 009a 5C48     		ldr	r0, .L75+44
 923:Veno-Echo.cpp ****         }
 1227              		.loc 20 923 31 view .LVU267
 1228 009c 5C49     		ldr	r1, .L75+48
 921:Veno-Echo.cpp ****             Rev_DelayTime_pickup = false;   //set not picked up
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 77


 1229              		.loc 20 921 23 view .LVU268
 1230 009e 1470     		strb	r4, [r2]
 922:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1231              		.loc 20 922 13 is_stmt 1 view .LVU269
 922:Veno-Echo.cpp ****             Rev_DelayTime_new = delayTimeL_Pot; //update new value
 1232              		.loc 20 922 34 is_stmt 0 view .LVU270
 1233 00a0 0370     		strb	r3, [r0]
 923:Veno-Echo.cpp ****         }
 1234              		.loc 20 923 13 is_stmt 1 view .LVU271
 923:Veno-Echo.cpp ****         }
 1235              		.loc 20 923 31 is_stmt 0 view .LVU272
 1236 00a2 81ED000A 		vstr.32	s0, [r1]
 1237              	.L42:
 923:Veno-Echo.cpp ****         }
 1238              		.loc 20 923 31 view .LVU273
 1239              	.LBE1017:
 1240              	.LBE1071:
 948:Veno-Echo.cpp **** 
 1241              		.loc 20 948 1 view .LVU274
 1242 00a6 10BD     		pop	{r4, pc}
 1243              	.L44:
 1244              	.LBB1072:
 1245              	.LBB1065:
 884:Veno-Echo.cpp ****             {
 1246              		.loc 20 884 13 is_stmt 1 view .LVU275
 884:Veno-Echo.cpp ****             {
 1247              		.loc 20 884 16 is_stmt 0 view .LVU276
 1248 00a8 524A     		ldr	r2, .L75+20
 884:Veno-Echo.cpp ****             {
 1249              		.loc 20 884 13 view .LVU277
 1250 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1251 00ac 79B9     		cbnz	r1, .L46
 886:Veno-Echo.cpp ****                 {
 1252              		.loc 20 886 17 is_stmt 1 view .LVU278
 1253              	.LVL47:
 1254              	.LBB1004:
 1255              	.LBI1004:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1256              		.loc 21 75 3 view .LVU279
 1257              	.LBB1005:
 1258              		.loc 21 76 5 view .LVU280
 1259              		.loc 21 76 5 is_stmt 0 view .LVU281
 1260              	.LBE1005:
 1261              	.LBE1004:
 886:Veno-Echo.cpp ****                 {
 1262              		.loc 20 886 23 view .LVU282
 1263 00ae 5249     		ldr	r1, .L75+24
 886:Veno-Echo.cpp ****                 {
 1264              		.loc 20 886 17 view .LVU283
 1265 00b0 9FED587A 		vldr.32	s14, .L75+52
 886:Veno-Echo.cpp ****                 {
 1266              		.loc 20 886 23 view .LVU284
 1267 00b4 D1ED007A 		vldr.32	s15, [r1]
 1268 00b8 70EE677A 		vsub.f32	s15, s0, s15
 1269              	.LBB1007:
 1270              	.LBB1006:
 1271              		.loc 21 76 31 view .LVU285
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 78


 1272 00bc F0EEE77A 		vabs.f32	s15, s15
 1273              	.LBE1006:
 1274              	.LBE1007:
 886:Veno-Echo.cpp ****                 {
 1275              		.loc 20 886 17 view .LVU286
 1276 00c0 F4EEC77A 		vcmpe.f32	s15, s14
 1277 00c4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1278 00c8 BBDD     		ble	.L45
 888:Veno-Echo.cpp ****                 }
 1279              		.loc 20 888 21 is_stmt 1 view .LVU287
 888:Veno-Echo.cpp ****                 }
 1280              		.loc 20 888 39 is_stmt 0 view .LVU288
 1281 00ca 0121     		movs	r1, #1
 1282 00cc 1170     		strb	r1, [r2]
 1283              	.L46:
 893:Veno-Echo.cpp **** 
 1284              		.loc 20 893 9 is_stmt 1 view .LVU289
 1285              	.LVL48:
 895:Veno-Echo.cpp ****         {
 1286              		.loc 20 895 9 view .LVU290
 897:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 1287              		.loc 20 897 13 view .LVU291
 1288              	.LBB1008:
 1289              	.LBI1008:
2014:Veno-Echo.cpp **** {
 1290              		.loc 20 2014 7 view .LVU292
 1291              	.LBB1009:
2016:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1292              		.loc 20 2016 5 view .LVU293
2017:Veno-Echo.cpp **** 
 1293              		.loc 20 2017 5 view .LVU294
 1294              	.LBE1009:
 1295              	.LBE1008:
 897:Veno-Echo.cpp ****             delayTimeL_Last = delayTimeL_Pot; //update last value
 1296              		.loc 20 897 36 is_stmt 0 view .LVU295
 1297 00ce 4B4A     		ldr	r2, .L75+28
 1298              	.LBB1012:
 1299              	.LBB1010:
2017:Veno-Echo.cpp **** 
 1300              		.loc 20 2017 39 view .LVU296
 1301 00d0 B7EE007A 		vmov.f32	s14, #1.0e+0
2017:Veno-Echo.cpp **** 
 1302              		.loc 20 2017 49 view .LVU297
 1303 00d4 B6EE006A 		vmov.f32	s12, #5.0e-1
2017:Veno-Echo.cpp **** 
 1304              		.loc 20 2017 39 view .LVU298
 1305 00d8 D2ED007A 		vldr.32	s15, [r2]
2017:Veno-Echo.cpp **** 
 1306              		.loc 20 2017 12 view .LVU299
 1307 00dc F0EE006A 		vmov.f32	s13, #2.0e+0
2017:Veno-Echo.cpp **** 
 1308              		.loc 20 2017 39 view .LVU300
 1309 00e0 77EE677A 		vsub.f32	s15, s14, s15
2017:Veno-Echo.cpp **** 
 1310              		.loc 20 2017 49 view .LVU301
 1311 00e4 77EEC67A 		vsub.f32	s15, s15, s12
2017:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 79


 1312              		.loc 20 2017 12 view .LVU302
 1313 00e8 B0EE406A 		vmov.f32	s12, s0
 1314 00ec A7EEA66A 		vfma.f32	s12, s15, s13
2019:Veno-Echo.cpp ****     {
 1315              		.loc 20 2019 5 view .LVU303
 1316 00f0 B5EEC06A 		vcmpe.f32	s12, #0
2017:Veno-Echo.cpp **** 
 1317              		.loc 20 2017 12 view .LVU304
 1318 00f4 F0EE467A 		vmov.f32	s15, s12
 1319              	.LVL49:
2019:Veno-Echo.cpp ****     {
 1320              		.loc 20 2019 5 is_stmt 1 view .LVU305
 1321 00f8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1322 00fc 6DD4     		bmi	.L74
2024:Veno-Echo.cpp ****     {
 1323              		.loc 20 2024 5 view .LVU306
 1324              		.loc 20 2026 16 is_stmt 0 view .LVU307
 1325 00fe F4EE477A 		vcmp.f32	s15, s14
 1326 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1327 0106 77FE277A 		vselgt.f32	s15, s14, s15
 1328              	.L48:
 1329              	.LVL50:
2027:Veno-Echo.cpp ****     }
2028:Veno-Echo.cpp **** 
2029:Veno-Echo.cpp ****     return output;
 1330              		.loc 20 2029 5 is_stmt 1 view .LVU308
 1331              		.loc 20 2029 5 is_stmt 0 view .LVU309
 1332              	.LBE1010:
 1333              	.LBE1012:
 898:Veno-Echo.cpp ****         }
 1334              		.loc 20 898 13 is_stmt 1 view .LVU310
 898:Veno-Echo.cpp ****         }
 1335              		.loc 20 898 29 is_stmt 0 view .LVU311
 1336 010a 3D4A     		ldr	r2, .L75+32
 1337 010c 82ED000A 		vstr.32	s0, [r2]
 1338 0110 B5E7     		b	.L50
 1339              	.LVL51:
 1340              	.L53:
 898:Veno-Echo.cpp ****         }
 1341              		.loc 20 898 29 view .LVU312
 1342              	.LBE1065:
 1343              	.LBB1066:
 928:Veno-Echo.cpp ****             {
 1344              		.loc 20 928 13 is_stmt 1 view .LVU313
 928:Veno-Echo.cpp ****             {
 1345              		.loc 20 928 16 is_stmt 0 view .LVU314
 1346 0112 3E4B     		ldr	r3, .L75+44
 928:Veno-Echo.cpp ****             {
 1347              		.loc 20 928 13 view .LVU315
 1348 0114 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1349 0116 7AB9     		cbnz	r2, .L54
 930:Veno-Echo.cpp ****                 {
 1350              		.loc 20 930 17 is_stmt 1 view .LVU316
 1351              	.LVL52:
 1352              	.LBB1018:
 1353              	.LBI1018:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 80


 1354              		.loc 21 75 3 view .LVU317
 1355              	.LBB1019:
 1356              		.loc 21 76 5 view .LVU318
 1357              		.loc 21 76 5 is_stmt 0 view .LVU319
 1358              	.LBE1019:
 1359              	.LBE1018:
 930:Veno-Echo.cpp ****                 {
 1360              		.loc 20 930 23 view .LVU320
 1361 0118 3D4A     		ldr	r2, .L75+48
 930:Veno-Echo.cpp ****                 {
 1362              		.loc 20 930 17 view .LVU321
 1363 011a 9FED3E7A 		vldr.32	s14, .L75+52
 930:Veno-Echo.cpp ****                 {
 1364              		.loc 20 930 23 view .LVU322
 1365 011e D2ED007A 		vldr.32	s15, [r2]
 1366 0122 70EE677A 		vsub.f32	s15, s0, s15
 1367              	.LBB1021:
 1368              	.LBB1020:
 1369              		.loc 21 76 31 view .LVU323
 1370 0126 F0EEE77A 		vabs.f32	s15, s15
 1371              	.LBE1020:
 1372              	.LBE1021:
 930:Veno-Echo.cpp ****                 {
 1373              		.loc 20 930 17 view .LVU324
 1374 012a F4EEC77A 		vcmpe.f32	s15, s14
 1375 012e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1376 0132 B8DD     		ble	.L42
 932:Veno-Echo.cpp ****                 }
 1377              		.loc 20 932 21 is_stmt 1 view .LVU325
 932:Veno-Echo.cpp ****                 }
 1378              		.loc 20 932 42 is_stmt 0 view .LVU326
 1379 0134 0122     		movs	r2, #1
 1380 0136 1A70     		strb	r2, [r3]
 1381              	.L54:
 937:Veno-Echo.cpp ****         {
 1382              		.loc 20 937 9 is_stmt 1 view .LVU327
 1383              	.LBB1022:
 939:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 1384              		.loc 20 939 13 view .LVU328
 939:Veno-Echo.cpp ****             delaysL_REV.SetDelayTime(Rev_DelayTime);
 1385              		.loc 20 939 38 is_stmt 0 view .LVU329
 1386 0138 0120     		movs	r0, #1
 1387 013a 9FED371A 		vldr.32	s2, .L75+56
 1388 013e DFED370A 		vldr.32	s1, .L75+60
 1389 0142 FFF7FEFF 		bl	_Z5scalefff9CurveType
 1390              	.LVL53:
 1391              	.LBB1023:
 1392              	.LBB1024:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1393              		.loc 20 70 28 view .LVU330
 1394 0146 364B     		ldr	r3, .L75+64
 1395              	.LVL54:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1396              		.loc 20 70 28 view .LVU331
 1397              	.LBE1024:
 1398              	.LBE1023:
 940:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 81


 1399              		.loc 20 940 13 is_stmt 1 view .LVU332
 1400              	.LBB1038:
 1401              	.LBI1023:
  68:Veno-Echo.cpp ****     {
 1402              		.loc 20 68 10 view .LVU333
 1403              	.LBB1036:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1404              		.loc 20 70 9 view .LVU334
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1405              		.loc 20 70 53 is_stmt 0 view .LVU335
 1406 0148 DFED326A 		vldr.32	s13, .L75+52
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1407              		.loc 20 70 28 view .LVU336
 1408 014c D3ED017A 		vldr.32	s15, [r3, #4]
 1409              	.LVL55:
 1410              	.LBB1025:
 1411              	.LBI1025:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1412              		.loc 21 75 3 is_stmt 1 view .LVU337
 1413              	.LBB1026:
 1414              		.loc 21 76 5 view .LVU338
 1415              		.loc 21 76 5 is_stmt 0 view .LVU339
 1416              	.LBE1026:
 1417              	.LBE1025:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1418              		.loc 20 70 15 view .LVU340
 1419 0150 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1420              		.loc 20 70 53 view .LVU341
 1421 0154 67EEA67A 		vmul.f32	s15, s15, s13
 1422              	.LBB1028:
 1423              	.LBB1027:
 1424              		.loc 21 76 31 view .LVU342
 1425 0158 B0EEC77A 		vabs.f32	s14, s14
 1426              	.LBE1027:
 1427              	.LBE1028:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1428              		.loc 20 70 9 view .LVU343
 1429 015c B4EEE77A 		vcmpe.f32	s14, s15
 1430 0160 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1431 0164 0DDD     		ble	.L62
  74:Veno-Echo.cpp ****             //del -> Reset();
 1432              		.loc 20 74 29 view .LVU344
 1433 0166 FCEEC07A 		vcvt.u32.f32	s15, s0
 1434              	.LBB1029:
 1435              	.LBB1030:
 1436              		.loc 19 72 9 view .LVU345
 1437 016a 2E4C     		ldr	r4, .L75+68
 1438              	.LBE1030:
 1439              	.LBE1029:
 1440              	.LBE1036:
 1441              	.LBE1038:
 940:Veno-Echo.cpp ****             delaysR_REV.SetDelayTime(Rev_DelayTime); 
 1442              		.loc 20 940 37 view .LVU346
 1443 016c 1968     		ldr	r1, [r3]
 1444              	.LBB1039:
 1445              	.LBB1037:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 82


  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1446              		.loc 20 73 13 is_stmt 1 view .LVU347
 1447              	.LBB1033:
 1448              	.LBB1031:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1449              		.loc 19 71 9 is_stmt 0 view .LVU348
 1450 016e 0020     		movs	r0, #0
 1451              	.LBE1031:
 1452              	.LBE1033:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1453              		.loc 20 73 27 view .LVU349
 1454 0170 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 1455              		.loc 20 74 13 is_stmt 1 view .LVU350
 1456              	.LVL56:
 1457              	.LBB1034:
 1458              	.LBI1029:
  69:delayline_reverse.h ****     {
 1459              		.loc 19 69 17 view .LVU351
  69:delayline_reverse.h ****     {
 1460              		.loc 19 69 17 is_stmt 0 view .LVU352
 1461              	.LBE1034:
  74:Veno-Echo.cpp ****             //del -> Reset();
 1462              		.loc 20 74 29 view .LVU353
 1463 0174 17EE902A 		vmov	r2, s15	@ int
 1464              	.LBB1035:
 1465              	.LBB1032:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1466              		.loc 19 71 9 view .LVU354
 1467 0178 0860     		str	r0, [r1]	@ float
 1468              		.loc 19 72 9 view .LVU355
 1469 017a A242     		cmp	r2, r4
 1470 017c 28BF     		it	cs
 1471 017e 2246     		movcs	r2, r4
 1472 0180 0A61     		str	r2, [r1, #16]
 1473              	.LVL57:
 1474              	.L62:
 1475              		.loc 19 72 9 view .LVU356
 1476              	.LBE1032:
 1477              	.LBE1035:
 1478              	.LBE1037:
 1479              	.LBE1039:
 941:Veno-Echo.cpp ****             //save setting:
 1480              		.loc 20 941 13 is_stmt 1 view .LVU357
 1481              	.LBB1040:
 1482              	.LBI1040:
  68:Veno-Echo.cpp ****     {
 1483              		.loc 20 68 10 view .LVU358
 1484              	.LBB1041:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1485              		.loc 20 70 9 view .LVU359
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1486              		.loc 20 70 28 is_stmt 0 view .LVU360
 1487 0182 294B     		ldr	r3, .L75+72
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1488              		.loc 20 70 53 view .LVU361
 1489 0184 DFED236A 		vldr.32	s13, .L75+52
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 83


  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1490              		.loc 20 70 28 view .LVU362
 1491 0188 D3ED017A 		vldr.32	s15, [r3, #4]
 1492              	.LVL58:
 1493              	.LBB1042:
 1494              	.LBI1042:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1495              		.loc 21 75 3 is_stmt 1 view .LVU363
 1496              	.LBB1043:
 1497              		.loc 21 76 5 view .LVU364
 1498              		.loc 21 76 5 is_stmt 0 view .LVU365
 1499              	.LBE1043:
 1500              	.LBE1042:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1501              		.loc 20 70 15 view .LVU366
 1502 018c 30EE677A 		vsub.f32	s14, s0, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1503              		.loc 20 70 53 view .LVU367
 1504 0190 67EEA67A 		vmul.f32	s15, s15, s13
 1505              	.LBB1045:
 1506              	.LBB1044:
 1507              		.loc 21 76 31 view .LVU368
 1508 0194 B0EEC77A 		vabs.f32	s14, s14
 1509              	.LBE1044:
 1510              	.LBE1045:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 1511              		.loc 20 70 9 view .LVU369
 1512 0198 B4EEE77A 		vcmpe.f32	s14, s15
 1513 019c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1514 01a0 0DDD     		ble	.L56
  74:Veno-Echo.cpp ****             //del -> Reset();
 1515              		.loc 20 74 29 view .LVU370
 1516 01a2 FCEEC07A 		vcvt.u32.f32	s15, s0
 1517              	.LBB1046:
 1518              	.LBB1047:
 1519              		.loc 19 72 9 view .LVU371
 1520 01a6 1F4C     		ldr	r4, .L75+68
 1521              	.LBE1047:
 1522              	.LBE1046:
 1523              	.LBE1041:
 1524              	.LBE1040:
 941:Veno-Echo.cpp ****             //save setting:
 1525              		.loc 20 941 37 view .LVU372
 1526 01a8 1968     		ldr	r1, [r3]
 1527              	.LBB1054:
 1528              	.LBB1053:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1529              		.loc 20 73 13 is_stmt 1 view .LVU373
 1530              	.LBB1050:
 1531              	.LBB1048:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1532              		.loc 19 71 9 is_stmt 0 view .LVU374
 1533 01aa 0020     		movs	r0, #0
 1534              	.LBE1048:
 1535              	.LBE1050:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 1536              		.loc 20 73 27 view .LVU375
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 84


 1537 01ac 83ED010A 		vstr.32	s0, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 1538              		.loc 20 74 13 is_stmt 1 view .LVU376
 1539              	.LVL59:
 1540              	.LBB1051:
 1541              	.LBI1046:
  69:delayline_reverse.h ****     {
 1542              		.loc 19 69 17 view .LVU377
  69:delayline_reverse.h ****     {
 1543              		.loc 19 69 17 is_stmt 0 view .LVU378
 1544              	.LBE1051:
  74:Veno-Echo.cpp ****             //del -> Reset();
 1545              		.loc 20 74 29 view .LVU379
 1546 01b0 17EE902A 		vmov	r2, s15	@ int
 1547              	.LBB1052:
 1548              	.LBB1049:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 1549              		.loc 19 71 9 view .LVU380
 1550 01b4 0860     		str	r0, [r1]	@ float
 1551              		.loc 19 72 9 view .LVU381
 1552 01b6 A242     		cmp	r2, r4
 1553 01b8 28BF     		it	cs
 1554 01ba 2246     		movcs	r2, r4
 1555 01bc 0A61     		str	r2, [r1, #16]
 1556              	.LVL60:
 1557              	.L56:
 1558              		.loc 19 72 9 view .LVU382
 1559              	.LBE1049:
 1560              	.LBE1052:
 1561              	.LBE1053:
 1562              	.LBE1054:
 943:Veno-Echo.cpp ****             save_flag = true;
 1563              		.loc 20 943 13 is_stmt 1 view .LVU383
 943:Veno-Echo.cpp ****             save_flag = true;
 1564              		.loc 20 943 35 is_stmt 0 view .LVU384
 1565 01be 1B49     		ldr	r1, .L75+76
 1566              	.LBB1055:
 1567              	.LBB1056:
 1568              	.LBB1057:
 1569              	.LBB1058:
 1570              	.LBB1059:
 1571              		.file 22 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 85


  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** /** @file bits/atomic_base.h
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  *  Do not attempt to use it directly. @headername{atomic}
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****  */
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ATOMIC_BASE_H
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ATOMIC_BASE_H 1
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #pragma GCC system_header
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/c++config.h>
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <stdint.h>
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #include <bits/atomic_lockfree_defines.h>
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** namespace std _GLIBCXX_VISIBILITY(default)
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** {
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @defgroup atomics Atomics
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * Components for performing atomic operations.
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    * @{
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    */
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Enumeration for memory_order
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __cplusplus > 201703L
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum class memory_order : int
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       relaxed,
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       consume,
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acquire,
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       release,
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       acq_rel,
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       seq_cst
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_relaxed = memory_order::relaxed;
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_consume = memory_order::consume;
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acquire = memory_order::acquire;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_release = memory_order::release;
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_acq_rel = memory_order::acq_rel;
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   inline constexpr memory_order memory_order_seq_cst = memory_order::seq_cst;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 86


  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   typedef enum memory_order
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_relaxed,
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_consume,
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acquire,
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_release,
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_acq_rel,
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order_seq_cst
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     } memory_order;
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   enum __memory_order_modifier
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_mask          = 0x0ffff,
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_modifier_mask = 0xffff0000,
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_acquire   = 0x10000,
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __memory_order_hle_release   = 0x20000
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     };
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator|(memory_order __m, __memory_order_modifier __mod)
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) | int(__mod));
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   operator&(memory_order __m, __memory_order_modifier __mod)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(int(__m) & int(__mod));
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Drop release ordering as per [atomics.types.operations.req]/21
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order2(memory_order __m) noexcept
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return __m == memory_order_acq_rel ? memory_order_acquire
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __m == memory_order_release ? memory_order_relaxed : __m;
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   constexpr memory_order
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   __cmpexch_failure_order(memory_order __m) noexcept
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     return memory_order(__cmpexch_failure_order2(__m & __memory_order_mask)
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       | __memory_order_modifier(__m & __memory_order_modifier_mask));
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   }
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_thread_fence(memory_order __m) noexcept
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_thread_fence(int(__m)); }
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_ALWAYS_INLINE void
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   atomic_signal_fence(memory_order __m) noexcept
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   { __atomic_signal_fence(int(__m)); }
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// kill_dependency
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     inline _Tp
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 87


 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     kill_dependency(_Tp __y) noexcept
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _Tp __ret(__y);
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __ret;
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // Base types for atomics.
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _IntTp>
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base;
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_VAR_INIT(_VI) { _VI }
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic;
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _Tp>
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct atomic<_Tp*>;
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     /* The target's "set" value for test-and-set may not be exactly 1.  */
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #if __GCC_ATOMIC_TEST_AND_SET_TRUEVAL == 1
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef bool __atomic_flag_data_type;
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #else
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     typedef unsigned char __atomic_flag_data_type;
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #endif
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /**
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  @brief Base type for atomic_flag.
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  Base type is POD with data, allowing atomic_flag to derive from
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  it and meet the standard layout type requirement. In addition to
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  compatibility with a C interface, this allows different
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  implementations of atomic_flag to use the same atomic operation
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  functions, via a standard conversion to the __atomic_flag_base
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****    *  argument.
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   */
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_BEGIN_EXTERN_C
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct __atomic_flag_base
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     __atomic_flag_data_type _M_i;
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   _GLIBCXX_END_EXTERN_C
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** #define ATOMIC_FLAG_INIT { 0 }
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// atomic_flag
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   struct atomic_flag : public __atomic_flag_base
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   {
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag() noexcept = default;
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     ~atomic_flag() noexcept = default;
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag(const atomic_flag&) = delete;
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) = delete;
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     atomic_flag& operator=(const atomic_flag&) volatile = delete;
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 88


 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     // Conversion to ATOMIC_FLAG_INIT.
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     constexpr atomic_flag(bool __i) noexcept
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       : __atomic_flag_base{ _S_init(__i) }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { }
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) noexcept
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE bool
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     test_and_set(memory_order __m = memory_order_seq_cst) volatile noexcept
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       return __atomic_test_and_set (&_M_i, int(__m));
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) noexcept
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _GLIBCXX_ALWAYS_INLINE void
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     clear(memory_order __m = memory_order_seq_cst) volatile noexcept
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       memory_order __b = __m & __memory_order_mask;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_consume);
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acquire);
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __glibcxx_assert(__b != memory_order_acq_rel);
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_clear (&_M_i, int(__m));
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     }
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   private:
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     static constexpr __atomic_flag_data_type
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     _S_init(bool __i)
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     { return __i ? __GCC_ATOMIC_TEST_AND_SET_TRUEVAL : 0; }
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   };
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   /// Base class for atomic integrals.
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // For each of the integral types, define atomic_[integral type] struct
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_bool     bool
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char     char
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_schar    signed char
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uchar    unsigned char
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_short    short
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ushort   unsigned short
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_int      int
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 89


 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_uint     unsigned int
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_long     long
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ulong    unsigned long
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_llong    long long
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_ullong   unsigned long long
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char8_t  char8_t
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char16_t char16_t
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_char32_t char32_t
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // atomic_wchar_t  wchar_t
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   //
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // NB: Assuming _ITp is an integral scalar type that is 1, 2, 4, or
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // 8 bytes, since that is what GCC built-in functions for atomic
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   // memory access expect.
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****   template<typename _ITp>
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     struct __atomic_base
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     {
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using value_type = _ITp;
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       using difference_type = value_type;
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     private:
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       typedef _ITp 	__int_type;
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       static constexpr int _S_alignment =
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	sizeof(_ITp) > alignof(_ITp) ? sizeof(_ITp) : alignof(_ITp);
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       alignas(_S_alignment) __int_type _M_i;
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****     public:
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base() noexcept = default;
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       ~__atomic_base() noexcept = default;
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base(const __atomic_base&) = delete;
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) = delete;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __atomic_base& operator=(const __atomic_base&) volatile = delete;
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       // Requires __int_type convertible to _M_i.
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       constexpr __atomic_base(__int_type __i) noexcept : _M_i (__i) { }
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const noexcept
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator __int_type() const volatile noexcept
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return load(); }
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) noexcept
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator=(__int_type __i) volatile noexcept
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	store(__i);
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __i;
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 90


 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) noexcept
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++(int) volatile noexcept
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_add(1); }
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) noexcept
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--(int) volatile noexcept
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return fetch_sub(1); }
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() noexcept
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator++() volatile noexcept
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() noexcept
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator--() volatile noexcept
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, 1, int(memory_order_seq_cst)); }
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) noexcept
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator+=(__int_type __i) volatile noexcept
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_add_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) noexcept
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator-=(__int_type __i) volatile noexcept
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_sub_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) noexcept
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator&=(__int_type __i) volatile noexcept
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_and_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 91


 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) noexcept
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator|=(__int_type __i) volatile noexcept
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_or_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) noexcept
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       __int_type
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       operator^=(__int_type __i) volatile noexcept
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       { return __atomic_xor_fetch(&_M_i, __i, int(memory_order_seq_cst)); }
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const noexcept
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       bool
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       is_lock_free() const volatile noexcept
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	// Use a fake, minimally aligned pointer.
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_is_lock_free(sizeof(_M_i),
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    reinterpret_cast<void *>(-_S_alignment));
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i, memory_order __m = memory_order_seq_cst) noexcept
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 1572              		.loc 22 397 18 view .LVU385
 1573 01c0 0122     		movs	r2, #1
 1574 01c2 1B4B     		ldr	r3, .L75+80
 1575              	.LBE1059:
 1576              	.LBE1058:
 1577              	.LBE1057:
 1578              	.LBE1056:
 1579              	.LBE1055:
 943:Veno-Echo.cpp ****             save_flag = true;
 1580              		.loc 20 943 35 view .LVU386
 1581 01c4 81ED000A 		vstr.32	s0, [r1]
 944:Veno-Echo.cpp ****         }
 1582              		.loc 20 944 13 is_stmt 1 view .LVU387
 1583              	.LVL61:
 1584              	.LBB1064:
 1585              	.LBI1055:
 1586              		.file 23 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 92


   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // -*- C++ -*- header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** /** @file include/atomic
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  *  This is a Standard C++ Library header.
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****  */
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // Based on "C++ Atomic Types and Operations" by Hans Boehm and Lawrence Crowl.
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** // http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2427.html
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #ifndef _GLIBCXX_ATOMIC
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #define _GLIBCXX_ATOMIC 1
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #pragma GCC system_header
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus < 201103L
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # include <bits/c++0x_warning.h>
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #else
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/atomic_base.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #include <bits/move.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** namespace std _GLIBCXX_VISIBILITY(default)
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** {
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /**
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @addtogroup atomics
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    * @{
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****    */
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #if __cplusplus >= 201703L
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** # define __cpp_lib_atomic_is_always_lock_free 201603
  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** #endif
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<typename _Tp>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 93


  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     struct atomic;
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   /// atomic<bool>
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   // NB: No operators or fetch-operations for this type.
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   template<>
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   struct atomic<bool>
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   {
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     using value_type = bool;
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   private:
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     __atomic_base<bool>	_M_base;
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****   public:
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic() noexcept = default;
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     ~atomic() noexcept = default;
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic(const atomic&) = delete;
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) = delete;
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     atomic& operator=(const atomic&) volatile = delete;
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     constexpr atomic(bool __i) noexcept : _M_base(__i) { }
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) noexcept
 1587              		.loc 23 80 5 view .LVU388
 1588              	.LBB1063:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 1589              		.loc 23 81 7 view .LVU389
 1590              	.LBB1062:
 1591              	.LBI1057:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 1592              		.loc 22 288 7 view .LVU390
 1593              	.LBB1061:
 1594              	.LBI1058:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 1595              		.loc 22 390 7 view .LVU391
 1596              	.LBB1060:
 1597              		.loc 22 397 18 is_stmt 0 view .LVU392
 1598 01c8 BFF35B8F 		dmb	ish
 1599 01cc 1A70     		strb	r2, [r3]
 1600 01ce BFF35B8F 		dmb	ish
 1601              	.LVL62:
 1602              		.loc 22 397 18 view .LVU393
 1603              	.LBE1060:
 1604              	.LBE1061:
 1605              	.LBE1062:
 1606              	.LBE1063:
 1607              	.LBE1064:
 1608              	.LBE1022:
 1609              	.LBE1066:
 1610              	.LBE1072:
 948:Veno-Echo.cpp **** 
 1611              		.loc 20 948 1 view .LVU394
 1612 01d2 10BD     		pop	{r4, pc}
 1613              	.LVL63:
 1614              	.L73:
 1615              	.LBB1073:
 1616              	.LBB1067:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 94


 1617              	.LBB1013:
 1618              	.LBB1001:
2021:Veno-Echo.cpp ****     }
 1619              		.loc 20 2021 16 view .LVU395
 1620 01d4 DFED177A 		vldr.32	s15, .L75+84
 1621              	.LVL64:
2021:Veno-Echo.cpp ****     }
 1622              		.loc 20 2021 16 view .LVU396
 1623 01d8 51E7     		b	.L50
 1624              	.LVL65:
 1625              	.L74:
2021:Veno-Echo.cpp ****     }
 1626              		.loc 20 2021 16 view .LVU397
 1627              	.LBE1001:
 1628              	.LBE1013:
 1629              	.LBB1014:
 1630              	.LBB1011:
 1631 01da DFED167A 		vldr.32	s15, .L75+84
 1632 01de 94E7     		b	.L48
 1633              	.L76:
 1634              		.align	2
 1635              	.L75:
 1636 01e0 18000000 		.word	.LANCHOR4+24
 1637 01e4 00000000 		.word	.LANCHOR6
 1638 01e8 ABAAAA2A 		.word	715827883
 1639 01ec 00000000 		.word	.LANCHOR7
 1640 01f0 00000000 		.word	.LANCHOR8
 1641 01f4 00000000 		.word	.LANCHOR9
 1642 01f8 00000000 		.word	.LANCHOR10
 1643 01fc 00000000 		.word	.LANCHOR5
 1644 0200 00000000 		.word	.LANCHOR11
 1645 0204 00000000 		.word	.LANCHOR12
 1646 0208 00000000 		.word	.LANCHOR0
 1647 020c 00000000 		.word	.LANCHOR13
 1648 0210 00000000 		.word	.LANCHOR14
 1649 0214 0AD7A33B 		.word	1000593162
 1650 0218 0050C346 		.word	1187205120
 1651 021c 00606A48 		.word	1214930944
 1652 0220 00000000 		.word	.LANCHOR2
 1653 0224 BF270900 		.word	599999
 1654 0228 00000000 		.word	.LANCHOR3
 1655 022c 00000000 		.word	.LANCHOR15
 1656 0230 00000000 		.word	.LANCHOR16
 1657 0234 00000000 		.word	0
 1658              	.LBE1011:
 1659              	.LBE1014:
 1660              	.LBE1067:
 1661              	.LBE1073:
 1662              		.cfi_endproc
 1663              	.LFE4774:
 1665              		.section	.text._Z20Update_DelayTimeR_CVv,"ax",%progbits
 1666              		.align	1
 1667              		.p2align 2,,3
 1668              		.global	_Z20Update_DelayTimeR_CVv
 1669              		.syntax unified
 1670              		.thumb
 1671              		.thumb_func
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 95


 1672              		.fpu fpv5-d16
 1674              	_Z20Update_DelayTimeR_CVv:
 1675              	.LFB4775:
 951:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1676              		.loc 20 951 1 is_stmt 1 view -0
 1677              		.cfi_startproc
 1678              		@ args = 0, pretend = 0, frame = 0
 1679              		@ frame_needed = 0, uses_anonymous_args = 0
 952:Veno-Echo.cpp **** }
 1680              		.loc 20 952 5 view .LVU399
 951:Veno-Echo.cpp ****     delayTimeR_CV = hw.adc.GetFloat(1);
 1681              		.loc 20 951 1 is_stmt 0 view .LVU400
 1682 0000 08B5     		push	{r3, lr}
 1683              		.cfi_def_cfa_offset 8
 1684              		.cfi_offset 3, -8
 1685              		.cfi_offset 14, -4
 952:Veno-Echo.cpp **** }
 1686              		.loc 20 952 36 view .LVU401
 1687 0002 0121     		movs	r1, #1
 1688 0004 0348     		ldr	r0, .L79
 1689 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 1690              	.LVL66:
 952:Veno-Echo.cpp **** }
 1691              		.loc 20 952 19 view .LVU402
 1692 000a 034B     		ldr	r3, .L79+4
 1693 000c 83ED000A 		vstr.32	s0, [r3]
 953:Veno-Echo.cpp **** 
 1694              		.loc 20 953 1 view .LVU403
 1695 0010 08BD     		pop	{r3, pc}
 1696              	.L80:
 1697 0012 00BF     		.align	2
 1698              	.L79:
 1699 0014 18000000 		.word	.LANCHOR4+24
 1700 0018 00000000 		.word	.LANCHOR17
 1701              		.cfi_endproc
 1702              	.LFE4775:
 1704              		.section	.text._Z17Update_DelayTimeRv,"ax",%progbits
 1705              		.align	1
 1706              		.p2align 2,,3
 1707              		.global	_Z17Update_DelayTimeRv
 1708              		.syntax unified
 1709              		.thumb
 1710              		.thumb_func
 1711              		.fpu fpv5-d16
 1713              	_Z17Update_DelayTimeRv:
 1714              	.LFB4776:
 956:Veno-Echo.cpp ****     static bool lastShift{};
 1715              		.loc 20 956 1 is_stmt 1 view -0
 1716              		.cfi_startproc
 1717              		@ args = 0, pretend = 0, frame = 0
 1718              		@ frame_needed = 0, uses_anonymous_args = 0
 957:Veno-Echo.cpp ****     static bool delayTimeR_pickup{};
 1719              		.loc 20 957 5 view .LVU405
 958:Veno-Echo.cpp ****     static bool tapRatio_pickup{};
 1720              		.loc 20 958 5 view .LVU406
 959:Veno-Echo.cpp ****     
 1721              		.loc 20 959 5 view .LVU407
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 96


 961:Veno-Echo.cpp **** 
 1722              		.loc 20 961 5 view .LVU408
 964:Veno-Echo.cpp **** 
 1723              		.loc 20 964 5 view .LVU409
 956:Veno-Echo.cpp ****     static bool lastShift{};
 1724              		.loc 20 956 1 is_stmt 0 view .LVU410
 1725 0000 10B5     		push	{r4, lr}
 1726              		.cfi_def_cfa_offset 8
 1727              		.cfi_offset 4, -8
 1728              		.cfi_offset 14, -4
 964:Veno-Echo.cpp **** 
 1729              		.loc 20 964 44 view .LVU411
 1730 0002 0622     		movs	r2, #6
 1731 0004 0721     		movs	r1, #7
 1732 0006 6948     		ldr	r0, .L111
 956:Veno-Echo.cpp ****     static bool lastShift{};
 1733              		.loc 20 956 1 view .LVU412
 1734 0008 2DED028B 		vpush.64	{d8}
 1735              		.cfi_def_cfa_offset 16
 1736              		.cfi_offset 80, -16
 1737              		.cfi_offset 81, -12
 964:Veno-Echo.cpp **** 
 1738              		.loc 20 964 44 view .LVU413
 1739 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 1740              	.LVL67:
 969:Veno-Echo.cpp **** 
 1741              		.loc 20 969 26 view .LVU414
 1742 0010 6749     		ldr	r1, .L111+4
 969:Veno-Echo.cpp **** 
 1743              		.loc 20 969 31 view .LVU415
 1744 0012 684B     		ldr	r3, .L111+8
 1745              	.LVL68:
 968:Veno-Echo.cpp ****     counterR = (counterR + 1) % (32 * 6);
 1746              		.loc 20 968 5 is_stmt 1 view .LVU416
 969:Veno-Echo.cpp **** 
 1747              		.loc 20 969 5 view .LVU417
 969:Veno-Echo.cpp **** 
 1748              		.loc 20 969 26 is_stmt 0 view .LVU418
 1749 0014 0A68     		ldr	r2, [r1]
 1750              	.LBB1074:
 971:Veno-Echo.cpp ****     {
 1751              		.loc 20 971 9 view .LVU419
 1752 0016 6848     		ldr	r0, .L111+12
 1753              	.LBE1074:
 969:Veno-Echo.cpp **** 
 1754              		.loc 20 969 26 view .LVU420
 1755 0018 0132     		adds	r2, r2, #1
 1756              	.LBB1123:
 971:Veno-Echo.cpp ****     {
 1757              		.loc 20 971 5 view .LVU421
 1758 001a 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1759              	.LBE1123:
 969:Veno-Echo.cpp **** 
 1760              		.loc 20 969 31 view .LVU422
 1761 001c 83FB0243 		smull	r4, r3, r3, r2
 1762 0020 D417     		asrs	r4, r2, #31
 1763 0022 C4EB6313 		rsb	r3, r4, r3, asr #5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 97


 1764 0026 03EB4303 		add	r3, r3, r3, lsl #1
 1765 002a A2EB8313 		sub	r3, r2, r3, lsl #6
 1766              	.LBB1124:
 1767              	.LBB1075:
 975:Veno-Echo.cpp ****         {
 1768              		.loc 20 975 19 view .LVU423
 1769 002e 634A     		ldr	r2, .L111+16
 1770              	.LBE1075:
 1771              	.LBE1124:
 969:Veno-Echo.cpp **** 
 1772              		.loc 20 969 14 view .LVU424
 1773 0030 0B60     		str	r3, [r1]
 971:Veno-Echo.cpp ****     {
 1774              		.loc 20 971 5 is_stmt 1 view .LVU425
 1775              	.LBB1125:
 1776 0032 90BB     		cbnz	r0, .L82
 1777              	.LBB1094:
 973:Veno-Echo.cpp ****         //udpate pickup
 1778              		.loc 20 973 9 view .LVU426
 975:Veno-Echo.cpp ****         {
 1779              		.loc 20 975 9 view .LVU427
 1780 0034 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1781 0036 0029     		cmp	r1, #0
 1782 0038 3CD0     		beq	.L83
 977:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 1783              		.loc 20 977 13 view .LVU428
 978:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1784              		.loc 20 978 31 is_stmt 0 view .LVU429
 1785 003a 614C     		ldr	r4, .L111+20
 979:Veno-Echo.cpp ****         } 
 1786              		.loc 20 979 28 view .LVU430
 1787 003c 6149     		ldr	r1, .L111+24
 977:Veno-Echo.cpp ****             delayTimeR_pickup = false;   //set to not picked up
 1788              		.loc 20 977 23 view .LVU431
 1789 003e 1070     		strb	r0, [r2]
 978:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1790              		.loc 20 978 13 is_stmt 1 view .LVU432
 978:Veno-Echo.cpp ****             delayTimeR_new = delayTimeR_Pot;   //update new value
 1791              		.loc 20 978 31 is_stmt 0 view .LVU433
 1792 0040 2070     		strb	r0, [r4]
 979:Veno-Echo.cpp ****         } 
 1793              		.loc 20 979 13 is_stmt 1 view .LVU434
 979:Veno-Echo.cpp ****         } 
 1794              		.loc 20 979 28 is_stmt 0 view .LVU435
 1795 0042 81ED000A 		vstr.32	s0, [r1]
 1796              	.L84:
 992:Veno-Echo.cpp **** 
 1797              		.loc 20 992 9 is_stmt 1 view .LVU436
 1798              	.LVL69:
 994:Veno-Echo.cpp ****         {
 1799              		.loc 20 994 9 view .LVU437
1002:Veno-Echo.cpp ****         }
 1800              		.loc 20 1002 13 view .LVU438
 1801              	.LBB1076:
 1802              	.LBI1076:
2014:Veno-Echo.cpp **** {
 1803              		.loc 20 2014 7 view .LVU439
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 98


 1804              	.LBB1077:
2016:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1805              		.loc 20 2016 5 view .LVU440
2017:Veno-Echo.cpp **** 
 1806              		.loc 20 2017 5 view .LVU441
 1807              	.LBE1077:
 1808              	.LBE1076:
1002:Veno-Echo.cpp ****         }
 1809              		.loc 20 1002 36 is_stmt 0 view .LVU442
 1810 0046 6049     		ldr	r1, .L111+28
 1811              	.LBB1081:
 1812              	.LBB1078:
2017:Veno-Echo.cpp **** 
 1813              		.loc 20 2017 39 view .LVU443
 1814 0048 F7EE006A 		vmov.f32	s13, #1.0e+0
2017:Veno-Echo.cpp **** 
 1815              		.loc 20 2017 49 view .LVU444
 1816 004c F6EE005A 		vmov.f32	s11, #5.0e-1
 1817              	.LBE1078:
 1818              	.LBE1081:
1002:Veno-Echo.cpp ****         }
 1819              		.loc 20 1002 36 view .LVU445
 1820 0050 5E4A     		ldr	r2, .L111+32
 1821              	.LBB1082:
 1822              	.LBB1079:
2017:Veno-Echo.cpp **** 
 1823              		.loc 20 2017 39 view .LVU446
 1824 0052 91ED007A 		vldr.32	s14, [r1]
2017:Veno-Echo.cpp **** 
 1825              		.loc 20 2017 12 view .LVU447
 1826 0056 B0EE006A 		vmov.f32	s12, #2.0e+0
 1827 005a D2ED007A 		vldr.32	s15, [r2]
2017:Veno-Echo.cpp **** 
 1828              		.loc 20 2017 39 view .LVU448
 1829 005e 36EEC77A 		vsub.f32	s14, s13, s14
2017:Veno-Echo.cpp **** 
 1830              		.loc 20 2017 49 view .LVU449
 1831 0062 37EE657A 		vsub.f32	s14, s14, s11
2017:Veno-Echo.cpp **** 
 1832              		.loc 20 2017 12 view .LVU450
 1833 0066 E7EE067A 		vfma.f32	s15, s14, s12
 1834              	.LVL70:
2019:Veno-Echo.cpp ****     {
 1835              		.loc 20 2019 5 is_stmt 1 view .LVU451
 1836 006a F5EEC07A 		vcmpe.f32	s15, #0
 1837 006e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1838 0072 00F18C80 		bmi	.L109
2024:Veno-Echo.cpp ****     {
 1839              		.loc 20 2024 5 view .LVU452
2026:Veno-Echo.cpp ****     }
 1840              		.loc 20 2026 16 is_stmt 0 view .LVU453
 1841 0076 F4EE667A 		vcmp.f32	s15, s13
 1842 007a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1843 007e 76FEA77A 		vselgt.f32	s15, s13, s15
 1844              	.LVL71:
 1845              	.L89:
2026:Veno-Echo.cpp ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 99


 1846              		.loc 20 2026 16 view .LVU454
 1847              	.LBE1079:
 1848              	.LBE1082:
1005:Veno-Echo.cpp ****         {
 1849              		.loc 20 1005 9 is_stmt 1 view .LVU455
 1850 0082 A3B9     		cbnz	r3, .L81
1007:Veno-Echo.cpp ****             {
 1851              		.loc 20 1007 13 view .LVU456
1007:Veno-Echo.cpp ****             {
 1852              		.loc 20 1007 35 is_stmt 0 view .LVU457
 1853 0084 524B     		ldr	r3, .L111+36
 1854 0086 B0EE670A 		vmov.f32	s0, s15
 1855              	.LVL72:
1007:Veno-Echo.cpp ****             {
 1856              		.loc 20 1007 35 view .LVU458
 1857 008a 5248     		ldr	r0, .L111+40
 1858 008c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1859              	.LBE1094:
 1860              	.LBE1125:
1048:Veno-Echo.cpp **** void Update_feedbackL_CV()
 1861              		.loc 20 1048 1 view .LVU459
 1862 008e BDEC028B 		vldm	sp!, {d8}
 1863              		.cfi_remember_state
 1864              		.cfi_restore 80
 1865              		.cfi_restore 81
 1866              		.cfi_def_cfa_offset 8
 1867 0092 BDE81040 		pop	{r4, lr}
 1868              		.cfi_restore 14
 1869              		.cfi_restore 4
 1870              		.cfi_def_cfa_offset 0
 1871              	.LBB1126:
 1872              	.LBB1095:
1007:Veno-Echo.cpp ****             {
 1873              		.loc 20 1007 35 view .LVU460
 1874 0096 FFF7FEBF 		b	_ZN10DelayMulti12SetDelayTimeEfb
 1875              	.LVL73:
 1876              	.L82:
 1877              		.cfi_restore_state
1007:Veno-Echo.cpp ****             {
 1878              		.loc 20 1007 35 view .LVU461
 1879              	.LBE1095:
 1880              	.LBB1096:
1017:Veno-Echo.cpp **** 
 1881              		.loc 20 1017 9 is_stmt 1 view .LVU462
1019:Veno-Echo.cpp ****         {
 1882              		.loc 20 1019 9 view .LVU463
 1883 009a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1884 009c 002B     		cmp	r3, #0
 1885 009e 3ED1     		bne	.L92
1021:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1886              		.loc 20 1021 13 view .LVU464
1021:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1887              		.loc 20 1021 23 is_stmt 0 view .LVU465
 1888 00a0 0124     		movs	r4, #1
1022:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1889              		.loc 20 1022 29 view .LVU466
 1890 00a2 4D48     		ldr	r0, .L111+44
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 100


1023:Veno-Echo.cpp ****         }
 1891              		.loc 20 1023 26 view .LVU467
 1892 00a4 4D49     		ldr	r1, .L111+48
1021:Veno-Echo.cpp ****             tapRatio_pickup = false; //set not picked up
 1893              		.loc 20 1021 23 view .LVU468
 1894 00a6 1470     		strb	r4, [r2]
1022:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1895              		.loc 20 1022 13 is_stmt 1 view .LVU469
1022:Veno-Echo.cpp ****             tapRatio_new = delayTimeR_Pot;  //update new value
 1896              		.loc 20 1022 29 is_stmt 0 view .LVU470
 1897 00a8 0370     		strb	r3, [r0]
1023:Veno-Echo.cpp ****         }
 1898              		.loc 20 1023 13 is_stmt 1 view .LVU471
1023:Veno-Echo.cpp ****         }
 1899              		.loc 20 1023 26 is_stmt 0 view .LVU472
 1900 00aa 81ED000A 		vstr.32	s0, [r1]
 1901              	.L81:
1023:Veno-Echo.cpp ****         }
 1902              		.loc 20 1023 26 view .LVU473
 1903              	.LBE1096:
 1904              	.LBE1126:
1048:Veno-Echo.cpp **** void Update_feedbackL_CV()
 1905              		.loc 20 1048 1 view .LVU474
 1906 00ae BDEC028B 		vldm	sp!, {d8}
 1907              		.cfi_remember_state
 1908              		.cfi_restore 80
 1909              		.cfi_restore 81
 1910              		.cfi_def_cfa_offset 8
 1911 00b2 10BD     		pop	{r4, pc}
 1912              	.L83:
 1913              		.cfi_restore_state
 1914              	.LBB1127:
 1915              	.LBB1119:
 983:Veno-Echo.cpp ****             {
 1916              		.loc 20 983 13 is_stmt 1 view .LVU475
 983:Veno-Echo.cpp ****             {
 1917              		.loc 20 983 16 is_stmt 0 view .LVU476
 1918 00b4 424A     		ldr	r2, .L111+20
 983:Veno-Echo.cpp ****             {
 1919              		.loc 20 983 13 view .LVU477
 1920 00b6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1921 00b8 79B9     		cbnz	r1, .L85
 985:Veno-Echo.cpp ****                 {
 1922              		.loc 20 985 17 is_stmt 1 view .LVU478
 1923              	.LVL74:
 1924              	.LBB1083:
 1925              	.LBI1083:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 1926              		.loc 21 75 3 view .LVU479
 1927              	.LBB1084:
 1928              		.loc 21 76 5 view .LVU480
 1929              		.loc 21 76 5 is_stmt 0 view .LVU481
 1930              	.LBE1084:
 1931              	.LBE1083:
 985:Veno-Echo.cpp ****                 {
 1932              		.loc 20 985 23 view .LVU482
 1933 00ba 4249     		ldr	r1, .L111+24
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 101


 985:Veno-Echo.cpp ****                 {
 1934              		.loc 20 985 17 view .LVU483
 1935 00bc 9FED487A 		vldr.32	s14, .L111+52
 985:Veno-Echo.cpp ****                 {
 1936              		.loc 20 985 23 view .LVU484
 1937 00c0 D1ED007A 		vldr.32	s15, [r1]
 1938 00c4 70EE677A 		vsub.f32	s15, s0, s15
 1939              	.LBB1086:
 1940              	.LBB1085:
 1941              		.loc 21 76 31 view .LVU485
 1942 00c8 F0EEE77A 		vabs.f32	s15, s15
 1943              	.LBE1085:
 1944              	.LBE1086:
 985:Veno-Echo.cpp ****                 {
 1945              		.loc 20 985 17 view .LVU486
 1946 00cc F4EEC77A 		vcmpe.f32	s15, s14
 1947 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1948 00d4 B7DD     		ble	.L84
 987:Veno-Echo.cpp ****                 }
 1949              		.loc 20 987 21 is_stmt 1 view .LVU487
 987:Veno-Echo.cpp ****                 }
 1950              		.loc 20 987 39 is_stmt 0 view .LVU488
 1951 00d6 0121     		movs	r1, #1
 1952 00d8 1170     		strb	r1, [r2]
 1953              	.L85:
 992:Veno-Echo.cpp **** 
 1954              		.loc 20 992 9 is_stmt 1 view .LVU489
 1955              	.LVL75:
 994:Veno-Echo.cpp ****         {
 1956              		.loc 20 994 9 view .LVU490
 996:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 1957              		.loc 20 996 13 view .LVU491
 1958              	.LBB1087:
 1959              	.LBI1087:
2014:Veno-Echo.cpp **** {
 1960              		.loc 20 2014 7 view .LVU492
 1961              	.LBB1088:
2016:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 1962              		.loc 20 2016 5 view .LVU493
2017:Veno-Echo.cpp **** 
 1963              		.loc 20 2017 5 view .LVU494
 1964              	.LBE1088:
 1965              	.LBE1087:
 996:Veno-Echo.cpp ****             delayTimeR_Last = delayTimeR_Pot;
 1966              		.loc 20 996 36 is_stmt 0 view .LVU495
 1967 00da 3B4A     		ldr	r2, .L111+28
 1968              	.LBB1091:
 1969              	.LBB1089:
2017:Veno-Echo.cpp **** 
 1970              		.loc 20 2017 39 view .LVU496
 1971 00dc B7EE007A 		vmov.f32	s14, #1.0e+0
2017:Veno-Echo.cpp **** 
 1972              		.loc 20 2017 49 view .LVU497
 1973 00e0 B6EE006A 		vmov.f32	s12, #5.0e-1
2017:Veno-Echo.cpp **** 
 1974              		.loc 20 2017 39 view .LVU498
 1975 00e4 D2ED007A 		vldr.32	s15, [r2]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 102


2017:Veno-Echo.cpp **** 
 1976              		.loc 20 2017 12 view .LVU499
 1977 00e8 F0EE006A 		vmov.f32	s13, #2.0e+0
2017:Veno-Echo.cpp **** 
 1978              		.loc 20 2017 39 view .LVU500
 1979 00ec 77EE677A 		vsub.f32	s15, s14, s15
2017:Veno-Echo.cpp **** 
 1980              		.loc 20 2017 49 view .LVU501
 1981 00f0 77EEC67A 		vsub.f32	s15, s15, s12
2017:Veno-Echo.cpp **** 
 1982              		.loc 20 2017 12 view .LVU502
 1983 00f4 B0EE406A 		vmov.f32	s12, s0
 1984 00f8 A7EEA66A 		vfma.f32	s12, s15, s13
2019:Veno-Echo.cpp ****     {
 1985              		.loc 20 2019 5 view .LVU503
 1986 00fc B5EEC06A 		vcmpe.f32	s12, #0
2017:Veno-Echo.cpp **** 
 1987              		.loc 20 2017 12 view .LVU504
 1988 0100 F0EE467A 		vmov.f32	s15, s12
 1989              	.LVL76:
2019:Veno-Echo.cpp ****     {
 1990              		.loc 20 2019 5 is_stmt 1 view .LVU505
 1991 0104 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1992 0108 44D4     		bmi	.L110
2024:Veno-Echo.cpp ****     {
 1993              		.loc 20 2024 5 view .LVU506
2026:Veno-Echo.cpp ****     }
 1994              		.loc 20 2026 16 is_stmt 0 view .LVU507
 1995 010a F4EE477A 		vcmp.f32	s15, s14
 1996 010e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1997 0112 77FE277A 		vselgt.f32	s15, s14, s15
 1998              	.L87:
 1999              	.LVL77:
 2000              		.loc 20 2029 5 is_stmt 1 view .LVU508
 2001              		.loc 20 2029 5 is_stmt 0 view .LVU509
 2002              	.LBE1089:
 2003              	.LBE1091:
 997:Veno-Echo.cpp ****         }
 2004              		.loc 20 997 13 is_stmt 1 view .LVU510
 997:Veno-Echo.cpp ****         }
 2005              		.loc 20 997 29 is_stmt 0 view .LVU511
 2006 0116 2D4A     		ldr	r2, .L111+32
 2007 0118 82ED000A 		vstr.32	s0, [r2]
 2008 011c B1E7     		b	.L89
 2009              	.LVL78:
 2010              	.L92:
 997:Veno-Echo.cpp ****         }
 2011              		.loc 20 997 29 view .LVU512
 2012              	.LBE1119:
 2013              	.LBB1120:
1028:Veno-Echo.cpp ****             {
 2014              		.loc 20 1028 13 is_stmt 1 view .LVU513
1028:Veno-Echo.cpp ****             {
 2015              		.loc 20 1028 16 is_stmt 0 view .LVU514
 2016 011e 2E4B     		ldr	r3, .L111+44
1028:Veno-Echo.cpp ****             {
 2017              		.loc 20 1028 13 view .LVU515
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 103


 2018 0120 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2019 0122 7AB9     		cbnz	r2, .L93
1030:Veno-Echo.cpp ****                 {
 2020              		.loc 20 1030 17 is_stmt 1 view .LVU516
 2021              	.LVL79:
 2022              	.LBB1097:
 2023              	.LBI1097:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2024              		.loc 21 75 3 view .LVU517
 2025              	.LBB1098:
 2026              		.loc 21 76 5 view .LVU518
 2027              		.loc 21 76 5 is_stmt 0 view .LVU519
 2028              	.LBE1098:
 2029              	.LBE1097:
1030:Veno-Echo.cpp ****                 {
 2030              		.loc 20 1030 23 view .LVU520
 2031 0124 2D4A     		ldr	r2, .L111+48
1030:Veno-Echo.cpp ****                 {
 2032              		.loc 20 1030 17 view .LVU521
 2033 0126 9FED2E7A 		vldr.32	s14, .L111+52
1030:Veno-Echo.cpp ****                 {
 2034              		.loc 20 1030 23 view .LVU522
 2035 012a D2ED007A 		vldr.32	s15, [r2]
 2036 012e 70EE677A 		vsub.f32	s15, s0, s15
 2037              	.LBB1100:
 2038              	.LBB1099:
 2039              		.loc 21 76 31 view .LVU523
 2040 0132 F0EEE77A 		vabs.f32	s15, s15
 2041              	.LBE1099:
 2042              	.LBE1100:
1030:Veno-Echo.cpp ****                 {
 2043              		.loc 20 1030 17 view .LVU524
 2044 0136 F4EEC77A 		vcmpe.f32	s15, s14
 2045 013a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2046 013e B6DD     		ble	.L81
1032:Veno-Echo.cpp ****                 }
 2047              		.loc 20 1032 21 is_stmt 1 view .LVU525
1032:Veno-Echo.cpp ****                 }
 2048              		.loc 20 1032 37 is_stmt 0 view .LVU526
 2049 0140 0122     		movs	r2, #1
 2050 0142 1A70     		strb	r2, [r3]
 2051              	.L93:
1037:Veno-Echo.cpp ****         {
 2052              		.loc 20 1037 9 is_stmt 1 view .LVU527
 2053              	.LBB1101:
1039:Veno-Echo.cpp ****             TapRatios tapRatio{static_cast<TapRatios> (round(scale(tapRatioInput,static_cast<float>
 2054              		.loc 20 1039 13 view .LVU528
 2055              	.LVL80:
1040:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2056              		.loc 20 1040 13 view .LVU529
1040:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2057              		.loc 20 1040 61 is_stmt 0 view .LVU530
 2058 0144 F0EE080A 		vmov.f32	s1, #3.0e+0
 2059 0148 0020     		movs	r0, #0
 2060 014a 9FED261A 		vldr.32	s2, .L111+56
 2061 014e FFF7FEFF 		bl	_Z5scalefff9CurveType
 2062              	.LVL81:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 104


 2063              	.LBB1102:
 2064              	.LBI1102:
 2065              		.file 24 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
   1:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // -*- C++ -*- C forwarding header.
   2:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
   3:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
   5:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // software; you can redistribute it and/or modify it under the
   7:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // terms of the GNU General Public License as published by the
   8:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // any later version.
  10:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  11:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // This library is distributed in the hope that it will be useful,
  12:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // GNU General Public License for more details.
  15:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  16:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // 3.1, as published by the Free Software Foundation.
  19:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  20:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // You should have received a copy of the GNU General Public License and
  21:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // <http://www.gnu.org/licenses/>.
  24:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  25:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** /** @file include/cmath
  26:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  27:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  28:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *
  29:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  30:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  31:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  contained in the namespace @c std (except for names which are defined
  32:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  *  as macros in C).
  33:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****  */
  34:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  35:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  36:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // ISO C++ 14882: 26.5  C library
  37:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** //
  38:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  39:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #pragma GCC system_header
  40:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  41:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/c++config.h>
  42:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/cpp_type_traits.h>
  43:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <ext/type_traits.h>
  44:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  45:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include_next <math.h>
  46:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  47:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #include <bits/std_abs.h>
  48:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  49:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_CMATH
  50:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #define _GLIBCXX_CMATH 1
  51:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  52:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  53:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef div
  54:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acos
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 105


  55:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asin
  56:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan
  57:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atan2
  58:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ceil
  59:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cos
  60:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cosh
  61:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp
  62:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fabs
  63:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef floor
  64:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmod
  65:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef frexp
  66:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ldexp
  67:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log
  68:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log10
  69:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef modf
  70:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef pow
  71:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sin
  72:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sinh
  73:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef sqrt
  74:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tan
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tanh
  76:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  77:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** extern "C++"
  78:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  79:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** {
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acos;
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(float __x)
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosf(__x); }
  89:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  90:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  91:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acos(long double __x)
  92:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acosl(__x); }
  93:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
  94:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
  95:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
  96:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
  97:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
  98:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
  99:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acos(_Tp __x)
 100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acos(__x); }
 101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asin;
 103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(float __x)
 107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinf(__x); }
 108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asin(long double __x)
 111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinl(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 106


 112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asin(_Tp __x)
 119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asin(__x); }
 120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan;
 122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(float __x)
 126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanf(__x); }
 127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan(long double __x)
 130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanl(__x); }
 131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan(_Tp __x)
 138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atan(__x); }
 139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atan2;
 141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(float __y, float __x)
 145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2f(__y, __x); }
 146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atan2(long double __y, long double __x)
 149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atan2l(__y, __x); }
 150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atan2(_Tp __y, _Up __x)
 156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return atan2(__type(__y), __type(__x));
 159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ceil;
 162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(float __x)
 166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceilf(__x); }
 167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 107


 169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ceil(long double __x)
 170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ceill(__x); }
 171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ceil(_Tp __x)
 178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ceil(__x); }
 179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cos;
 181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(float __x)
 185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosf(__x); }
 186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cos(long double __x)
 189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cosl(__x); }
 190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cos(_Tp __x)
 197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cos(__x); }
 198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cosh;
 200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(float __x)
 204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshf(__x); }
 205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cosh(long double __x)
 208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_coshl(__x); }
 209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cosh(_Tp __x)
 216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cosh(__x); }
 217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp;
 219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(float __x)
 223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expf(__x); }
 224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 108


 226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp(long double __x)
 227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expl(__x); }
 228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp(_Tp __x)
 235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp(__x); }
 236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fabs;
 238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(float __x)
 242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsf(__x); }
 243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fabs(long double __x)
 246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fabsl(__x); }
 247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fabs(_Tp __x)
 254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_fabs(__x); }
 255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::floor;
 257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(float __x)
 261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorf(__x); }
 262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   floor(long double __x)
 265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_floorl(__x); }
 266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     floor(_Tp __x)
 273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_floor(__x); }
 274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmod;
 276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(float __x, float __y)
 280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodf(__x, __y); }
 281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 109


 283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmod(long double __x, long double __y)
 284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmodl(__x, __y); }
 285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmod(_Tp __x, _Up __y)
 291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmod(__type(__x), __type(__y));
 294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::frexp;
 297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(float __x, int* __exp)
 301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpf(__x, __exp); }
 302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   frexp(long double __x, int* __exp)
 305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_frexpl(__x, __exp); }
 306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     frexp(_Tp __x, int* __exp)
 313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_frexp(__x, __exp); }
 314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ldexp;
 316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(float __x, int __exp)
 320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ldexp(long double __x, int __exp)
 324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ldexp(_Tp __x, int __exp)
 332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ldexp(__x, __exp); }
 333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log;
 335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(float __x)
 339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logf(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 110


 340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log(long double __x)
 343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logl(__x); }
 344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log(_Tp __x)
 351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log(__x); }
 352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log10;
 354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(float __x)
 358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10f(__x); }
 359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log10(long double __x)
 362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log10l(__x); }
 363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log10(_Tp __x)
 370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log10(__x); }
 371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::modf;
 373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(float __x, float* __iptr)
 377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modff(__x, __iptr); }
 378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   modf(long double __x, long double* __iptr)
 381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_modfl(__x, __iptr); }
 382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::pow;
 385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, float __y)
 389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powf(__x, __y); }
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, long double __y)
 393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powl(__x, __y); }
 394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus < 201103L
 396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 111


 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline double
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(double __x, int __i)
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powi(__x, __i); }
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(float __x, int __n)
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powif(__x, __n); }
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   pow(long double __x, int __n)
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_powil(__x, __n); }
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     pow(_Tp __x, _Up __y)
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return pow(__type(__x), __type(__y));
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sin;
 422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(float __x)
 426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinf(__x); }
 427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sin(long double __x)
 430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinl(__x); }
 431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sin(_Tp __x)
 438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sin(__x); }
 439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sinh;
 441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(float __x)
 445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhf(__x); }
 446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sinh(long double __x)
 449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sinhl(__x); }
 450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 112


 454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sinh(_Tp __x)
 457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sinh(__x); }
 458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::sqrt;
 460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(float __x)
 464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtf(__x); }
 465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   sqrt(long double __x)
 468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_sqrtl(__x); }
 469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     sqrt(_Tp __x)
 476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_sqrt(__x); }
 477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tan;
 479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(float __x)
 483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanf(__x); }
 484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tan(long double __x)
 487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanl(__x); }
 488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
 492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tan(_Tp __x)
 495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tan(__x); }
 496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tanh;
 498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR float
 501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(float __x)
 502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhf(__x); }
 503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   tanh(long double __x)
 506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_tanhl(__x); }
 507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline _GLIBCXX_CONSTEXPR
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 113


 511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     double>::__type
 513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     tanh(_Tp __x)
 514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_tanh(__x); }
 515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_USE_C99_MATH
 517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC
 518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** // These are possible macros imported from C99-land.
 520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fpclassify
 521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isfinite
 522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isinf
 523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnan
 524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isnormal
 525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef signbit
 526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreater
 527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isgreaterequal
 528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isless
 529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessequal
 530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef islessgreater
 531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef isunordered
 532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(float __x)
 538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(double __x)
 543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
 547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fpclassify(long double __x)
 548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				FP_SUBNORMAL, FP_ZERO, __x); }
 550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               int>::__type
 556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __x)
 557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? FP_NORMAL : FP_ZERO; }
 558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(float __x)
 563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(double __x)
 567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 114


 568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isfinite(long double __x)
 571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isfinite(__x); }
 572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __x)
 579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return true; }
 580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(float __x)
 585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISINF \
 588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isinf;
 590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(double __x)
 593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isinf(long double __x)
 598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isinf(__x); }
 599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __x)
 606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(float __x)
 612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if _GLIBCXX_HAVE_OBSOLETE_ISNAN \
 615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   && !_GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC
 616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::isnan;
 617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(double __x)
 620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnan(long double __x)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 115


 625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnan(__x); }
 626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __x)
 633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return false; }
 634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(float __x)
 639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(double __x)
 643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isnormal(long double __x)
 647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isnormal(__x); }
 648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __x)
 655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x != 0 ? true : false; }
 656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // Note: middle-end/36757 is fixed, __builtin_signbit is type-generic.
 660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(float __x)
 662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(double __x)
 666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   signbit(long double __x)
 670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_signbit(__x); }
 671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               bool>::__type
 677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __x)
 678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __x < 0 ? true : false; }
 679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 116


 682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(float __x, float __y)
 684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(double __x, double __y)
 688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreater(long double __x, long double __y)
 692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreater(__x, __y); }
 693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __x, _Up __y)
 701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__x), __type(__y));
 704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(float __x, float __y)
 710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(double __x, double __y)
 714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isgreaterequal(long double __x, long double __y)
 718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isgreaterequal(__x, __y); }
 719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __x, _Up __y)
 727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__x), __type(__y));
 730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(float __x, float __y)
 736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 117


 739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(double __x, double __y)
 740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isless(long double __x, long double __y)
 744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isless(__x, __y); }
 745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __x, _Up __y)
 753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__x), __type(__y));
 756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 758:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 759:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 760:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 761:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(float __x, float __y)
 762:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 763:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 764:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 765:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(double __x, double __y)
 766:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 767:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 768:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 769:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessequal(long double __x, long double __y)
 770:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessequal(__x, __y); }
 771:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 772:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 773:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 774:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 775:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 776:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 777:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 778:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __x, _Up __y)
 779:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 780:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 781:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__x), __type(__y));
 782:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 783:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 784:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 785:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 786:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 787:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(float __x, float __y)
 788:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 789:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 790:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 791:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(double __x, double __y)
 792:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 793:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 794:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 795:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   islessgreater(long double __x, long double __y)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 118


 796:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_islessgreater(__x, __y); }
 797:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 798:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 799:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 800:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 801:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 802:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 803:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 804:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __x, _Up __y)
 805:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 806:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 807:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__x), __type(__y));
 808:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 809:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 810:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 811:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
 812:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 813:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(float __x, float __y)
 814:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 815:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 816:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 817:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(double __x, double __y)
 818:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 819:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 820:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr bool
 821:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   isunordered(long double __x, long double __y)
 822:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_isunordered(__x, __y); }
 823:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 824:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 825:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
 826:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
 827:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename
 828:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     __gnu_cxx::__enable_if<(__is_arithmetic<_Tp>::__value
 829:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 			    && __is_arithmetic<_Up>::__value), bool>::__type
 830:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __x, _Up __y)
 831:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 832:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 833:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__x), __type(__y));
 834:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 835:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
 836:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 837:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #else
 838:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 839:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 840:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 841:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 842:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fpclassify(_Tp __f)
 843:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 844:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 845:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL,
 846:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 				  FP_SUBNORMAL, FP_ZERO, __type(__f));
 847:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 848:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 849:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 850:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 851:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 852:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isfinite(_Tp __f)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 119


 853:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 854:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 855:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isfinite(__type(__f));
 856:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 857:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 858:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 859:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 860:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 861:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isinf(_Tp __f)
 862:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 863:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 864:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isinf(__type(__f));
 865:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 866:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 867:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 868:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 869:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 870:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnan(_Tp __f)
 871:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 872:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 873:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnan(__type(__f));
 874:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 875:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 876:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 877:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 878:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 879:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isnormal(_Tp __f)
 880:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 881:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 882:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isnormal(__type(__f));
 883:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 884:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 885:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 886:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 887:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 888:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     signbit(_Tp __f)
 889:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 890:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 891:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_signbit(__type(__f));
 892:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 893:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 894:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 895:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 896:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 897:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreater(_Tp __f1, _Tp __f2)
 898:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 899:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 900:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreater(__type(__f1), __type(__f2));
 901:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 902:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 903:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 904:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 905:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 906:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isgreaterequal(_Tp __f1, _Tp __f2)
 907:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 908:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 909:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isgreaterequal(__type(__f1), __type(__f2));
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 120


 910:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 911:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 912:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 913:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 914:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 915:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isless(_Tp __f1, _Tp __f2)
 916:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 917:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 918:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isless(__type(__f1), __type(__f2));
 919:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 920:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 921:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 922:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 923:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 924:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessequal(_Tp __f1, _Tp __f2)
 925:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 926:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 927:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessequal(__type(__f1), __type(__f2));
 928:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 929:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 930:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 931:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 932:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 933:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     islessgreater(_Tp __f1, _Tp __f2)
 934:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 935:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 936:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_islessgreater(__type(__f1), __type(__f2));
 937:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 938:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 939:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
 940:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__enable_if<__is_arithmetic<_Tp>::__value,
 941:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 					   int>::__type
 942:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     isunordered(_Tp __f1, _Tp __f2)
 943:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
 944:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote<_Tp>::__type __type;
 945:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return __builtin_isunordered(__type(__f1), __type(__f2));
 946:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
 947:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 948:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif // C++11
 949:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_FP_MACROS_DYNAMIC */
 950:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif /* _GLIBCXX_USE_C99_MATH */
 951:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 952:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #if __cplusplus >= 201103L
 953:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 954:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifdef _GLIBCXX_USE_C99_MATH_TR1
 955:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
 956:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acosh
 957:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshf
 958:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef acoshl
 959:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinh
 960:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhf
 961:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef asinhl
 962:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanh
 963:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhf
 964:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef atanhl
 965:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrt
 966:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 121


 967:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef cbrtl
 968:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysign
 969:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignf
 970:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef copysignl
 971:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erf
 972:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erff
 973:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfl
 974:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfc
 975:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcf
 976:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef erfcl
 977:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2
 978:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2f
 979:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef exp2l
 980:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1
 981:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1f
 982:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef expm1l
 983:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdim
 984:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdimf
 985:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fdiml
 986:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fma
 987:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaf
 988:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmal
 989:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmax
 990:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxf
 991:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmaxl
 992:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fmin
 993:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminf
 994:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef fminl
 995:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypot
 996:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotf
 997:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef hypotl
 998:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogb
 999:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbf
1000:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef ilogbl
1001:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgamma
1002:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammaf
1003:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lgammal
1004:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1005:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrint
1006:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintf
1007:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llrintl
1008:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llround
1009:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundf
1010:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef llroundl
1011:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1012:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1p
1013:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pf
1014:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log1pl
1015:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2
1016:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2f
1017:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef log2l
1018:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logb
1019:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbf
1020:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef logbl
1021:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrint
1022:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintf
1023:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lrintl
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 122


1024:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lround
1025:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundf
1026:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef lroundl
1027:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nan
1028:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanf
1029:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nanl
1030:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyint
1031:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintf
1032:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nearbyintl
1033:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafter
1034:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterf
1035:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nextafterl
1036:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttoward
1037:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardf
1038:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef nexttowardl
1039:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainder
1040:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderf
1041:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remainderl
1042:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquo
1043:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquof
1044:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef remquol
1045:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rint
1046:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintf
1047:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef rintl
1048:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef round
1049:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundf
1050:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef roundl
1051:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbln
1052:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnf
1053:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalblnl
1054:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbn
1055:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnf
1056:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef scalbnl
1057:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgamma
1058:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammaf
1059:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef tgammal
1060:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef trunc
1061:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncf
1062:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #undef truncl
1063:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1064:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // types
1065:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::double_t;
1066:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::float_t;
1067:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1068:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // functions
1069:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acosh;
1070:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshf;
1071:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::acoshl;
1072:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1073:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinh;
1074:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhf;
1075:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::asinhl;
1076:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1077:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanh;
1078:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhf;
1079:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::atanhl;
1080:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 123


1081:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrt;
1082:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtf;
1083:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::cbrtl;
1084:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1085:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysign;
1086:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignf;
1087:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::copysignl;
1088:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1089:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erf;
1090:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erff;
1091:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfl;
1092:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1093:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfc;
1094:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcf;
1095:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::erfcl;
1096:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1097:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2;
1098:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2f;
1099:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::exp2l;
1100:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1101:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1;
1102:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1f;
1103:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::expm1l;
1104:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1105:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdim;
1106:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdimf;
1107:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fdiml;
1108:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1109:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fma;
1110:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaf;
1111:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmal;
1112:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1113:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmax;
1114:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxf;
1115:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmaxl;
1116:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1117:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fmin;
1118:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminf;
1119:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::fminl;
1120:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1121:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypot;
1122:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotf;
1123:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::hypotl;
1124:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1125:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogb;
1126:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbf;
1127:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::ilogbl;
1128:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1129:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgamma;
1130:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammaf;
1131:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lgammal;
1132:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1133:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef _GLIBCXX_NO_C99_ROUNDING_FUNCS
1134:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrint;
1135:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintf;
1136:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llrintl;
1137:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 124


1138:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llround;
1139:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundf;
1140:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::llroundl;
1141:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1142:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1143:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1p;
1144:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pf;
1145:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log1pl;
1146:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1147:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2;
1148:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2f;
1149:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::log2l;
1150:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1151:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logb;
1152:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbf;
1153:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::logbl;
1154:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1155:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrint;
1156:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintf;
1157:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lrintl;
1158:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1159:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lround;
1160:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundf;
1161:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::lroundl;
1162:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1163:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nan;
1164:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanf;
1165:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nanl;
1166:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1167:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyint;
1168:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintf;
1169:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nearbyintl;
1170:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1171:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafter;
1172:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterf;
1173:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nextafterl;
1174:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1175:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttoward;
1176:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardf;
1177:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::nexttowardl;
1178:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1179:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainder;
1180:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderf;
1181:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remainderl;
1182:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1183:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquo;
1184:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquof;
1185:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::remquol;
1186:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1187:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rint;
1188:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintf;
1189:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::rintl;
1190:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1191:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::round;
1192:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundf;
1193:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::roundl;
1194:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 125


1195:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbln;
1196:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnf;
1197:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalblnl;
1198:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1199:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbn;
1200:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnf;
1201:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::scalbnl;
1202:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1203:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgamma;
1204:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammaf;
1205:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::tgammal;
1206:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1207:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::trunc;
1208:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncf;
1209:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   using ::truncl;
1210:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1211:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   /// Additional overloads.
1212:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1213:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1214:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(float __x)
1215:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshf(__x); }
1216:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1217:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1218:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   acosh(long double __x)
1219:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_acoshl(__x); }
1220:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1221:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1222:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1223:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1224:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1225:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1226:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     acosh(_Tp __x)
1227:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_acosh(__x); }
1228:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1229:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1230:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1231:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1232:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(float __x)
1233:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhf(__x); }
1234:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1235:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1236:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   asinh(long double __x)
1237:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_asinhl(__x); }
1238:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1239:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1240:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1241:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1242:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1243:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1244:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     asinh(_Tp __x)
1245:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_asinh(__x); }
1246:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1247:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1248:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1249:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1250:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(float __x)
1251:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhf(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 126


1252:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1253:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1254:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   atanh(long double __x)
1255:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_atanhl(__x); }
1256:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1257:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1258:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1259:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1260:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1261:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1262:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     atanh(_Tp __x)
1263:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_atanh(__x); }
1264:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1265:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1266:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1267:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1268:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(float __x)
1269:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtf(__x); }
1270:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1271:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1272:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   cbrt(long double __x)
1273:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_cbrtl(__x); }
1274:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1275:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1276:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1277:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1278:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1279:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1280:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     cbrt(_Tp __x)
1281:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_cbrt(__x); }
1282:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1283:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1284:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1285:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1286:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(float __x, float __y)
1287:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignf(__x, __y); }
1288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1289:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1290:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   copysign(long double __x, long double __y)
1291:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_copysignl(__x, __y); }
1292:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1293:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1294:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1295:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1296:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1297:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     copysign(_Tp __x, _Up __y)
1298:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1299:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1300:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return copysign(__type(__x), __type(__y));
1301:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1302:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1303:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1304:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1305:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1306:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(float __x)
1307:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erff(__x); }
1308:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 127


1309:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1310:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erf(long double __x)
1311:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfl(__x); }
1312:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1313:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1314:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1315:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1316:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1317:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1318:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erf(_Tp __x)
1319:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erf(__x); }
1320:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1321:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1322:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1323:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1324:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(float __x)
1325:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcf(__x); }
1326:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1327:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1328:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   erfc(long double __x)
1329:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_erfcl(__x); }
1330:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1331:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1332:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1333:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1334:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1335:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1336:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     erfc(_Tp __x)
1337:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_erfc(__x); }
1338:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1339:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1340:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1341:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1342:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(float __x)
1343:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2f(__x); }
1344:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1345:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1346:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   exp2(long double __x)
1347:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_exp2l(__x); }
1348:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1349:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1350:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1351:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1352:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1353:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1354:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     exp2(_Tp __x)
1355:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_exp2(__x); }
1356:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1357:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1358:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1359:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1360:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(float __x)
1361:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1f(__x); }
1362:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1363:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1364:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   expm1(long double __x)
1365:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_expm1l(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 128


1366:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1367:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1368:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1369:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1370:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1371:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1372:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     expm1(_Tp __x)
1373:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_expm1(__x); }
1374:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1375:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1376:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1377:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1378:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(float __x, float __y)
1379:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdimf(__x, __y); }
1380:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1381:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1382:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fdim(long double __x, long double __y)
1383:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fdiml(__x, __y); }
1384:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1385:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1386:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1387:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1388:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1389:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fdim(_Tp __x, _Up __y)
1390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1391:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1392:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fdim(__type(__x), __type(__y));
1393:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1394:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1395:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1396:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(float __x, float __y, float __z)
1399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaf(__x, __y, __z); }
1400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fma(long double __x, long double __y, long double __z)
1403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmal(__x, __y, __z); }
1404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up, typename _Vp>
1408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type
1409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fma(_Tp __x, _Up __y, _Vp __z)
1410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_3<_Tp, _Up, _Vp>::__type __type;
1412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fma(__type(__x), __type(__y), __type(__z));
1413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(float __x, float __y)
1419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxf(__x, __y); }
1420:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1421:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1422:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmax(long double __x, long double __y)
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 129


1423:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fmaxl(__x, __y); }
1424:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1425:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1426:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1427:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1428:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1429:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmax(_Tp __x, _Up __y)
1430:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1431:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1432:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmax(__type(__x), __type(__y));
1433:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1434:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1435:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1436:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1437:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1438:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(float __x, float __y)
1439:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminf(__x, __y); }
1440:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1441:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1442:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   fmin(long double __x, long double __y)
1443:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_fminl(__x, __y); }
1444:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1445:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1446:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1447:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1448:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1449:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     fmin(_Tp __x, _Up __y)
1450:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1451:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1452:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return fmin(__type(__x), __type(__y));
1453:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1454:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1455:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1456:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1457:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1458:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(float __x, float __y)
1459:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotf(__x, __y); }
1460:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1461:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1462:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   hypot(long double __x, long double __y)
1463:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_hypotl(__x, __y); }
1464:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1465:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1466:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1467:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1468:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1469:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     hypot(_Tp __x, _Up __y)
1470:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1471:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1472:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return hypot(__type(__x), __type(__y));
1473:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1474:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1475:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1476:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1477:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1478:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(float __x)
1479:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbf(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 130


1480:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1481:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr int
1482:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   ilogb(long double __x)
1483:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_ilogbl(__x); }
1484:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1485:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1486:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1487:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1488:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr
1489:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1490:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                     int>::__type
1491:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     ilogb(_Tp __x)
1492:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_ilogb(__x); }
1493:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1494:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1495:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1496:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1497:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(float __x)
1498:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammaf(__x); }
1499:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1500:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1501:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lgamma(long double __x)
1502:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lgammal(__x); }
1503:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1504:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1505:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1506:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1507:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1508:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1509:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lgamma(_Tp __x)
1510:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lgamma(__x); }
1511:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1512:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1513:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1514:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1515:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(float __x)
1516:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintf(__x); }
1517:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1518:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1519:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llrint(long double __x)
1520:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llrintl(__x); }
1521:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1522:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1523:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1524:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1525:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1526:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1527:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llrint(_Tp __x)
1528:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llrint(__x); }
1529:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1530:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1531:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1532:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
1533:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(float __x)
1534:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundf(__x); }
1535:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1536:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long long
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 131


1537:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   llround(long double __x)
1538:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_llroundl(__x); }
1539:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1540:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1541:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1542:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1543:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1544:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long long>::__type
1545:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     llround(_Tp __x)
1546:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_llround(__x); }
1547:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1548:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1549:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1550:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1551:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(float __x)
1552:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pf(__x); }
1553:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1554:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1555:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log1p(long double __x)
1556:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log1pl(__x); }
1557:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1558:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1559:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1560:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1561:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1562:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1563:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log1p(_Tp __x)
1564:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log1p(__x); }
1565:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1566:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1567:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1568:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   // DR 568.
1569:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1570:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(float __x)
1571:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2f(__x); }
1572:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1573:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1574:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   log2(long double __x)
1575:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_log2l(__x); }
1576:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1577:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1578:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1579:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1580:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1581:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1582:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     log2(_Tp __x)
1583:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_log2(__x); }
1584:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1585:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1586:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1587:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1588:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(float __x)
1589:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbf(__x); }
1590:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1591:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1592:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   logb(long double __x)
1593:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_logbl(__x); }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 132


1594:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1595:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1596:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1597:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1598:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1599:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1600:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     logb(_Tp __x)
1601:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_logb(__x); }
1602:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1603:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1604:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1605:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1606:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(float __x)
1607:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintf(__x); }
1608:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1609:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1610:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lrint(long double __x)
1611:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lrintl(__x); }
1612:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1613:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1614:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1615:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1616:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1617:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1618:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lrint(_Tp __x)
1619:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lrint(__x); }
1620:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1621:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1622:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1623:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1624:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(float __x)
1625:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundf(__x); }
1626:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1627:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long
1628:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   lround(long double __x)
1629:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_lroundl(__x); }
1630:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1631:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1632:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1633:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1634:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1635:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               long>::__type
1636:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     lround(_Tp __x)
1637:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_lround(__x); }
1638:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1639:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1640:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1641:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1642:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(float __x)
1643:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintf(__x); }
1644:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1645:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1646:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nearbyint(long double __x)
1647:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nearbyintl(__x); }
1648:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1649:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1650:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 133


1651:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1652:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1653:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1654:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nearbyint(_Tp __x)
1655:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nearbyint(__x); }
1656:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1657:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1658:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1659:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1660:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(float __x, float __y)
1661:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterf(__x, __y); }
1662:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1663:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1664:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nextafter(long double __x, long double __y)
1665:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nextafterl(__x, __y); }
1666:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1667:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1668:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1669:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1670:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1671:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nextafter(_Tp __x, _Up __y)
1672:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1673:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1674:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return nextafter(__type(__x), __type(__y));
1675:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1676:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1677:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1678:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1679:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1680:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(float __x, long double __y)
1681:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardf(__x, __y); }
1682:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1683:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1684:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   nexttoward(long double __x, long double __y)
1685:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_nexttowardl(__x, __y); }
1686:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1687:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1688:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1689:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1690:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1691:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1692:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     nexttoward(_Tp __x, long double __y)
1693:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_nexttoward(__x, __y); }
1694:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1695:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1696:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1697:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1698:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(float __x, float __y)
1699:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderf(__x, __y); }
1700:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1701:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1702:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remainder(long double __x, long double __y)
1703:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remainderl(__x, __y); }
1704:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1705:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1706:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1707:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 134


1708:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1709:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remainder(_Tp __x, _Up __y)
1710:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1711:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1712:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remainder(__type(__x), __type(__y));
1713:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1714:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1715:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1716:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1717:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline float
1718:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(float __x, float __y, int* __pquo)
1719:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquof(__x, __y, __pquo); }
1720:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1721:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   inline long double
1722:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   remquo(long double __x, long double __y, int* __pquo)
1723:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_remquol(__x, __y, __pquo); }
1724:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1725:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1726:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1727:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp, typename _Up>
1728:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     inline typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
1729:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     remquo(_Tp __x, _Up __y, int* __pquo)
1730:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     {
1731:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
1732:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****       return remquo(__type(__x), __type(__y), __pquo);
1733:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     }
1734:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1735:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1736:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1737:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1738:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(float __x)
1739:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintf(__x); }
1740:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1741:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr long double
1742:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   rint(long double __x)
1743:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_rintl(__x); }
1744:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1745:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1746:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT
1747:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   template<typename _Tp>
1748:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     constexpr typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
1749:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****                                               double>::__type
1750:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     rint(_Tp __x)
1751:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****     { return __builtin_rint(__x); }
1752:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #endif
1753:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** 
1754:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath **** #ifndef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP
1755:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   constexpr float
1756:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   round(float __x)
 2066              		.loc 24 1756 3 is_stmt 1 view .LVU531
 2067              	.LBB1103:
1757:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/cmath ****   { return __builtin_roundf(__x); }
 2068              		.loc 24 1757 5 view .LVU532
 2069              		.loc 24 1757 28 is_stmt 0 view .LVU533
 2070 0152 B8FE400A 		vrinta.f32	s0, s0
 2071              	.LVL82:
 2072              		.loc 24 1757 28 view .LVU534
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 135


 2073              	.LBE1103:
 2074              	.LBE1102:
1041:Veno-Echo.cpp ****             //save setting:
 2075              		.loc 20 1041 13 is_stmt 1 view .LVU535
 2076              	.LBB1104:
 2077              	.LBI1104:
2030:Veno-Echo.cpp **** }
2031:Veno-Echo.cpp **** 
2032:Veno-Echo.cpp **** //checks pickup state of primary controls
2033:Veno-Echo.cpp **** bool checkPickupState(float value, float lastValue, bool lastState, bool ShiftChange)
2034:Veno-Echo.cpp **** {
2035:Veno-Echo.cpp ****     bool retval{};
2036:Veno-Echo.cpp ****     
2037:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change to not picked up, unless there's been no change
2038:Veno-Echo.cpp ****     {
2039:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
2040:Veno-Echo.cpp ****         {
2041:Veno-Echo.cpp ****             retval = false;
2042:Veno-Echo.cpp ****         }
2043:Veno-Echo.cpp ****         else
2044:Veno-Echo.cpp ****         {
2045:Veno-Echo.cpp ****             retval = true;
2046:Veno-Echo.cpp ****         }
2047:Veno-Echo.cpp ****     }
2048:Veno-Echo.cpp **** 
2049:Veno-Echo.cpp ****     else //not recent shift change, change to pickup if there's been a change since last shift chan
2050:Veno-Echo.cpp ****     {
2051:Veno-Echo.cpp ****     if(!lastState) //if not picked up
2052:Veno-Echo.cpp ****     {
2053:Veno-Echo.cpp ****         if(abs(value - lastValue) > pickupTolerance)
2054:Veno-Echo.cpp ****         {
2055:Veno-Echo.cpp ****             retval = true;
2056:Veno-Echo.cpp ****         }
2057:Veno-Echo.cpp **** 
2058:Veno-Echo.cpp ****         else
2059:Veno-Echo.cpp ****         {
2060:Veno-Echo.cpp ****             retval = false;
2061:Veno-Echo.cpp ****         }
2062:Veno-Echo.cpp **** 
2063:Veno-Echo.cpp ****     }
2064:Veno-Echo.cpp ****     else    //previous state is picked up
2065:Veno-Echo.cpp ****     {
2066:Veno-Echo.cpp ****         retval = true;  //always return true
2067:Veno-Echo.cpp ****     }
2068:Veno-Echo.cpp **** 
2069:Veno-Echo.cpp ****     }
2070:Veno-Echo.cpp ****     return retval;
2071:Veno-Echo.cpp **** 
2072:Veno-Echo.cpp **** }
2073:Veno-Echo.cpp **** 
2074:Veno-Echo.cpp **** //Checks pickup state of secondary controls
2075:Veno-Echo.cpp **** pickupState checkPickupState_alt(float value, float lastValue, pickupState lastState, bool ShiftCha
2076:Veno-Echo.cpp **** {
2077:Veno-Echo.cpp ****     pickupState retval{};
2078:Veno-Echo.cpp **** 
2079:Veno-Echo.cpp ****     if(ShiftChange) //recent shift change
2080:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 136


2081:Veno-Echo.cpp ****         if(value < (lastValue - pickupTolerance) ) //less than  last value 
2082:Veno-Echo.cpp ****         {
2083:Veno-Echo.cpp ****             retval = BELOW;
2084:Veno-Echo.cpp ****         }
2085:Veno-Echo.cpp ****         
2086:Veno-Echo.cpp ****         else if(value > (lastValue + pickupTolerance) )  //more than last value
2087:Veno-Echo.cpp ****         {
2088:Veno-Echo.cpp ****             retval = ABOVE;
2089:Veno-Echo.cpp ****         }
2090:Veno-Echo.cpp **** 
2091:Veno-Echo.cpp ****         else    //within tolerance i.e. unchanged
2092:Veno-Echo.cpp ****         {
2093:Veno-Echo.cpp ****             retval = PICKEDUP;
2094:Veno-Echo.cpp ****         }
2095:Veno-Echo.cpp ****     }
2096:Veno-Echo.cpp **** 
2097:Veno-Echo.cpp ****     else    //not a recent shift change
2098:Veno-Echo.cpp ****     {
2099:Veno-Echo.cpp ****         switch(lastState)
2100:Veno-Echo.cpp ****         {
2101:Veno-Echo.cpp ****             case BELOW:
2102:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
2103:Veno-Echo.cpp ****                 retval = PICKEDUP;
2104:Veno-Echo.cpp ****             else
2105:Veno-Echo.cpp ****                 retval = lastState;
2106:Veno-Echo.cpp ****             break;
2107:Veno-Echo.cpp **** 
2108:Veno-Echo.cpp ****             case ABOVE:
2109:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
2110:Veno-Echo.cpp ****                 retval = PICKEDUP;
2111:Veno-Echo.cpp ****             else
2112:Veno-Echo.cpp ****                 retval = lastState;
2113:Veno-Echo.cpp ****             break;
2114:Veno-Echo.cpp ****             case PICKEDUP:
2115:Veno-Echo.cpp ****                 retval = lastState;
2116:Veno-Echo.cpp ****             break;
2117:Veno-Echo.cpp ****         }
2118:Veno-Echo.cpp ****     }
2119:Veno-Echo.cpp ****     
2120:Veno-Echo.cpp ****     return retval;
2121:Veno-Echo.cpp **** }
2122:Veno-Echo.cpp **** 
2123:Veno-Echo.cpp **** double GetTapRatio(TapRatios ratio)
 2078              		.loc 20 2123 8 view .LVU536
 2079              	.LBB1105:
2124:Veno-Echo.cpp **** {
2125:Veno-Echo.cpp **** double retVal{};
 2080              		.loc 20 2125 1 view .LVU537
2126:Veno-Echo.cpp ****     switch(ratio)
 2081              		.loc 20 2126 5 view .LVU538
 2082              	.LBE1105:
 2083              	.LBE1104:
1040:Veno-Echo.cpp ****             BaseTempo.setTapRatio(GetTapRatio(tapRatio));
 2084              		.loc 20 1040 130 is_stmt 0 view .LVU539
 2085 0156 FCEEC07A 		vcvt.u32.f32	s15, s0
 2086 015a 17EE903A 		vmov	r3, s15	@ int
 2087 015e 013B     		subs	r3, r3, #1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 137


 2088 0160 DBB2     		uxtb	r3, r3
 2089 0162 022B     		cmp	r3, #2
 2090 0164 19D9     		bls	.L97
 2091 0166 B7EE008A 		vmov.f32	s16, #1.0e+0
 2092              	.L98:
 2093              	.LVL83:
 2094              	.LBB1107:
 2095              	.LBB1106:
2127:Veno-Echo.cpp ****     {
2128:Veno-Echo.cpp ****         case QUARTER:
2129:Veno-Echo.cpp ****         retVal = 1.0;
2130:Veno-Echo.cpp ****         break;
2131:Veno-Echo.cpp **** 
2132:Veno-Echo.cpp ****         case DOTTED_EIGHT:
2133:Veno-Echo.cpp ****         retVal = 3.0/2.0;
2134:Veno-Echo.cpp ****         break;
2135:Veno-Echo.cpp **** 
2136:Veno-Echo.cpp ****         case EIGHT:
2137:Veno-Echo.cpp ****         retVal = 2.0;
2138:Veno-Echo.cpp ****         break;
2139:Veno-Echo.cpp **** 
2140:Veno-Echo.cpp ****         case TWELVE:
2141:Veno-Echo.cpp ****         retVal = 3.0;
2142:Veno-Echo.cpp ****         break;
2143:Veno-Echo.cpp **** 
2144:Veno-Echo.cpp ****         default:
2145:Veno-Echo.cpp ****         retVal = 1.0;
2146:Veno-Echo.cpp ****         break;
2147:Veno-Echo.cpp ****     }
2148:Veno-Echo.cpp **** 
2149:Veno-Echo.cpp **** return retVal;
 2096              		.loc 20 2149 1 is_stmt 1 view .LVU540
 2097              		.loc 20 2149 1 is_stmt 0 view .LVU541
 2098              	.LBE1106:
 2099              	.LBE1107:
1041:Veno-Echo.cpp ****             //save setting:
 2100              		.loc 20 1041 34 view .LVU542
 2101 016a B0EE480A 		vmov.f32	s0, s16
 2102              	.LVL84:
1041:Veno-Echo.cpp ****             //save setting:
 2103              		.loc 20 1041 34 view .LVU543
 2104 016e 1E48     		ldr	r0, .L111+60
 2105 0170 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 2106              	.LVL85:
1043:Veno-Echo.cpp ****             save_flag = true;
 2107              		.loc 20 1043 13 is_stmt 1 view .LVU544
1043:Veno-Echo.cpp ****             save_flag = true;
 2108              		.loc 20 1043 13 is_stmt 0 view .LVU545
 2109              	.LBE1101:
 2110              	.LBE1120:
 2111              	.LBE1127:
2125:Veno-Echo.cpp ****     switch(ratio)
 2112              		.loc 20 2125 1 is_stmt 1 view .LVU546
2126:Veno-Echo.cpp ****     {
 2113              		.loc 20 2126 5 view .LVU547
 2114              		.loc 20 2149 1 view .LVU548
 2115              	.LBB1128:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 138


 2116              	.LBB1121:
 2117              	.LBB1118:
1043:Veno-Echo.cpp ****             save_flag = true;
 2118              		.loc 20 1043 34 is_stmt 0 view .LVU549
 2119 0174 1D49     		ldr	r1, .L111+64
 2120              	.LBB1108:
 2121              	.LBB1109:
 2122              	.LBB1110:
 2123              	.LBB1111:
 2124              	.LBB1112:
 2125              		.loc 22 397 18 view .LVU550
 2126 0176 1E4B     		ldr	r3, .L111+68
 2127 0178 0122     		movs	r2, #1
 2128              	.LBE1112:
 2129              	.LBE1111:
 2130              	.LBE1110:
 2131              	.LBE1109:
 2132              	.LBE1108:
1043:Veno-Echo.cpp ****             save_flag = true;
 2133              		.loc 20 1043 34 view .LVU551
 2134 017a 81ED018A 		vstr.32	s16, [r1, #4]
1044:Veno-Echo.cpp ****         }
 2135              		.loc 20 1044 13 is_stmt 1 view .LVU552
 2136              	.LVL86:
 2137              	.LBB1117:
 2138              	.LBI1108:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 2139              		.loc 23 80 5 view .LVU553
 2140              	.LBB1116:
 2141              		.loc 23 81 7 view .LVU554
 2142              	.LBB1115:
 2143              	.LBI1110:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 2144              		.loc 22 288 7 view .LVU555
 2145              	.LBB1114:
 2146              	.LBI1111:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 2147              		.loc 22 390 7 view .LVU556
 2148              	.LBB1113:
 2149              		.loc 22 397 18 is_stmt 0 view .LVU557
 2150 017e BFF35B8F 		dmb	ish
 2151 0182 1A70     		strb	r2, [r3]
 2152 0184 BFF35B8F 		dmb	ish
 2153              	.LVL87:
 2154              		.loc 22 397 18 view .LVU558
 2155              	.LBE1113:
 2156              	.LBE1114:
 2157              	.LBE1115:
 2158              	.LBE1116:
 2159              	.LBE1117:
 2160              	.LBE1118:
 2161              	.LBE1121:
 2162              	.LBE1128:
1048:Veno-Echo.cpp **** void Update_feedbackL_CV()
 2163              		.loc 20 1048 1 view .LVU559
 2164 0188 BDEC028B 		vldm	sp!, {d8}
 2165              		.cfi_remember_state
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 139


 2166              		.cfi_restore 80
 2167              		.cfi_restore 81
 2168              		.cfi_def_cfa_offset 8
 2169 018c 10BD     		pop	{r4, pc}
 2170              	.LVL88:
 2171              	.L109:
 2172              		.cfi_restore_state
 2173              	.LBB1129:
 2174              	.LBB1122:
 2175              	.LBB1092:
 2176              	.LBB1080:
2021:Veno-Echo.cpp ****     }
 2177              		.loc 20 2021 16 view .LVU560
 2178 018e DFED157A 		vldr.32	s15, .L111+56
 2179              	.LVL89:
2021:Veno-Echo.cpp ****     }
 2180              		.loc 20 2021 16 view .LVU561
 2181 0192 76E7     		b	.L89
 2182              	.LVL90:
 2183              	.L110:
2021:Veno-Echo.cpp ****     }
 2184              		.loc 20 2021 16 view .LVU562
 2185              	.LBE1080:
 2186              	.LBE1092:
 2187              	.LBB1093:
 2188              	.LBB1090:
 2189 0194 DFED137A 		vldr.32	s15, .L111+56
 2190 0198 BDE7     		b	.L87
 2191              	.LVL91:
 2192              	.L97:
2021:Veno-Echo.cpp ****     }
 2193              		.loc 20 2021 16 view .LVU563
 2194 019a 164A     		ldr	r2, .L111+72
 2195 019c 02EBC303 		add	r3, r2, r3, lsl #3
 2196 01a0 93ED008B 		vldr.64	d8, [r3]
 2197 01a4 B7EEC88B 		vcvt.f32.f64	s16, d8
 2198 01a8 DFE7     		b	.L98
 2199              	.L112:
 2200 01aa 00BF     		.align	2
 2201              	.L111:
 2202 01ac 18000000 		.word	.LANCHOR4+24
 2203 01b0 00000000 		.word	.LANCHOR18
 2204 01b4 ABAAAA2A 		.word	715827883
 2205 01b8 00000000 		.word	.LANCHOR7
 2206 01bc 00000000 		.word	.LANCHOR19
 2207 01c0 00000000 		.word	.LANCHOR20
 2208 01c4 00000000 		.word	.LANCHOR21
 2209 01c8 00000000 		.word	.LANCHOR17
 2210 01cc 00000000 		.word	.LANCHOR22
 2211 01d0 00000000 		.word	.LANCHOR12
 2212 01d4 00000000 		.word	.LANCHOR1
 2213 01d8 00000000 		.word	.LANCHOR23
 2214 01dc 00000000 		.word	.LANCHOR24
 2215 01e0 0AD7A33B 		.word	1000593162
 2216 01e4 00000000 		.word	0
 2217 01e8 00000000 		.word	.LANCHOR26
 2218 01ec 00000000 		.word	.LANCHOR15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 140


 2219 01f0 00000000 		.word	.LANCHOR16
 2220 01f4 00000000 		.word	.LANCHOR25
 2221              	.LBE1090:
 2222              	.LBE1093:
 2223              	.LBE1122:
 2224              	.LBE1129:
 2225              		.cfi_endproc
 2226              	.LFE4776:
 2228              		.section	.text._Z19Update_feedbackL_CVv,"ax",%progbits
 2229              		.align	1
 2230              		.p2align 2,,3
 2231              		.global	_Z19Update_feedbackL_CVv
 2232              		.syntax unified
 2233              		.thumb
 2234              		.thumb_func
 2235              		.fpu fpv5-d16
 2237              	_Z19Update_feedbackL_CVv:
 2238              	.LFB4777:
1050:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 2239              		.loc 20 1050 1 is_stmt 1 view -0
 2240              		.cfi_startproc
 2241              		@ args = 0, pretend = 0, frame = 0
 2242              		@ frame_needed = 0, uses_anonymous_args = 0
1051:Veno-Echo.cpp **** }
 2243              		.loc 20 1051 5 view .LVU565
1050:Veno-Echo.cpp ****     feedbackL_CV = hw.adc.GetFloat(2);
 2244              		.loc 20 1050 1 is_stmt 0 view .LVU566
 2245 0000 08B5     		push	{r3, lr}
 2246              		.cfi_def_cfa_offset 8
 2247              		.cfi_offset 3, -8
 2248              		.cfi_offset 14, -4
1051:Veno-Echo.cpp **** }
 2249              		.loc 20 1051 35 view .LVU567
 2250 0002 0221     		movs	r1, #2
 2251 0004 0348     		ldr	r0, .L115
 2252 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2253              	.LVL92:
1051:Veno-Echo.cpp **** }
 2254              		.loc 20 1051 18 view .LVU568
 2255 000a 034B     		ldr	r3, .L115+4
 2256 000c 83ED000A 		vstr.32	s0, [r3]
1052:Veno-Echo.cpp **** void Update_feedbackL()
 2257              		.loc 20 1052 1 view .LVU569
 2258 0010 08BD     		pop	{r3, pc}
 2259              	.L116:
 2260 0012 00BF     		.align	2
 2261              	.L115:
 2262 0014 18000000 		.word	.LANCHOR4+24
 2263 0018 00000000 		.word	.LANCHOR27
 2264              		.cfi_endproc
 2265              	.LFE4777:
 2267              		.section	.text._Z16Update_feedbackLv,"ax",%progbits
 2268              		.align	1
 2269              		.p2align 2,,3
 2270              		.global	_Z16Update_feedbackLv
 2271              		.syntax unified
 2272              		.thumb
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 141


 2273              		.thumb_func
 2274              		.fpu fpv5-d16
 2276              	_Z16Update_feedbackLv:
 2277              	.LFB4778:
1054:Veno-Echo.cpp ****     static bool lastShift{};
 2278              		.loc 20 1054 1 is_stmt 1 view -0
 2279              		.cfi_startproc
 2280              		@ args = 0, pretend = 0, frame = 0
 2281              		@ frame_needed = 0, uses_anonymous_args = 0
1055:Veno-Echo.cpp ****     static bool feedbackL_pickup{};
 2282              		.loc 20 1055 5 view .LVU571
1056:Veno-Echo.cpp ****     static bool HPCutoff_pickup{};
 2283              		.loc 20 1056 5 view .LVU572
1057:Veno-Echo.cpp **** 
 2284              		.loc 20 1057 5 view .LVU573
1059:Veno-Echo.cpp **** 
 2285              		.loc 20 1059 5 view .LVU574
1063:Veno-Echo.cpp **** 
 2286              		.loc 20 1063 5 view .LVU575
1063:Veno-Echo.cpp **** 
 2287              		.loc 20 1063 43 is_stmt 0 view .LVU576
 2288 0000 0122     		movs	r2, #1
 2289 0002 0721     		movs	r1, #7
 2290 0004 6548     		ldr	r0, .L145
1054:Veno-Echo.cpp ****     static bool lastShift{};
 2291              		.loc 20 1054 1 view .LVU577
 2292 0006 10B5     		push	{r4, lr}
 2293              		.cfi_def_cfa_offset 8
 2294              		.cfi_offset 4, -8
 2295              		.cfi_offset 14, -4
 2296 0008 2DED028B 		vpush.64	{d8}
 2297              		.cfi_def_cfa_offset 16
 2298              		.cfi_offset 80, -16
 2299              		.cfi_offset 81, -12
1063:Veno-Echo.cpp **** 
 2300              		.loc 20 1063 43 view .LVU578
 2301 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2302              	.LVL93:
 2303              	.LBB1130:
1065:Veno-Echo.cpp ****     {   
 2304              		.loc 20 1065 9 view .LVU579
 2305 0010 634B     		ldr	r3, .L145+4
 2306              	.LVL94:
1065:Veno-Echo.cpp ****     {   
 2307              		.loc 20 1065 9 view .LVU580
 2308              	.LBE1130:
1065:Veno-Echo.cpp ****     {   
 2309              		.loc 20 1065 5 is_stmt 1 view .LVU581
 2310              	.LBB1175:
 2311              	.LBB1131:
1069:Veno-Echo.cpp ****         {
 2312              		.loc 20 1069 19 is_stmt 0 view .LVU582
 2313 0012 644A     		ldr	r2, .L145+8
 2314              	.LBE1131:
1065:Veno-Echo.cpp ****     {   
 2315              		.loc 20 1065 5 view .LVU583
 2316 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 142


 2317 0016 002B     		cmp	r3, #0
 2318 0018 3DD1     		bne	.L118
 2319              	.LBB1154:
1067:Veno-Echo.cpp ****         //update pickup
 2320              		.loc 20 1067 9 is_stmt 1 view .LVU584
1069:Veno-Echo.cpp ****         {
 2321              		.loc 20 1069 9 view .LVU585
 2322 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2323 001c 0029     		cmp	r1, #0
 2324 001e 47D0     		beq	.L119
1071:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 2325              		.loc 20 1071 13 view .LVU586
1072:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2326              		.loc 20 1072 30 is_stmt 0 view .LVU587
 2327 0020 6148     		ldr	r0, .L145+12
1073:Veno-Echo.cpp ****         } 
 2328              		.loc 20 1073 27 view .LVU588
 2329 0022 6249     		ldr	r1, .L145+16
1071:Veno-Echo.cpp ****             feedbackL_pickup = false; //set to not picked up
 2330              		.loc 20 1071 23 view .LVU589
 2331 0024 1370     		strb	r3, [r2]
1072:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2332              		.loc 20 1072 13 is_stmt 1 view .LVU590
1072:Veno-Echo.cpp ****             feedbackL_new = feedbackL_Pot; //update new value
 2333              		.loc 20 1072 30 is_stmt 0 view .LVU591
 2334 0026 0370     		strb	r3, [r0]
1073:Veno-Echo.cpp ****         } 
 2335              		.loc 20 1073 13 is_stmt 1 view .LVU592
1073:Veno-Echo.cpp ****         } 
 2336              		.loc 20 1073 27 is_stmt 0 view .LVU593
 2337 0028 81ED000A 		vstr.32	s0, [r1]
 2338              	.L120:
1086:Veno-Echo.cpp **** 
 2339              		.loc 20 1086 9 is_stmt 1 view .LVU594
 2340              	.LVL95:
1088:Veno-Echo.cpp ****         {
 2341              		.loc 20 1088 9 view .LVU595
1096:Veno-Echo.cpp ****         }
 2342              		.loc 20 1096 13 view .LVU596
 2343              	.LBB1132:
 2344              	.LBI1132:
2014:Veno-Echo.cpp **** {
 2345              		.loc 20 2014 7 view .LVU597
 2346              	.LBB1133:
2016:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2347              		.loc 20 2016 5 view .LVU598
2017:Veno-Echo.cpp **** 
 2348              		.loc 20 2017 5 view .LVU599
 2349              	.LBE1133:
 2350              	.LBE1132:
1096:Veno-Echo.cpp ****         }
 2351              		.loc 20 1096 41 is_stmt 0 view .LVU600
 2352 002c 604A     		ldr	r2, .L145+20
 2353              	.LBB1137:
 2354              	.LBB1134:
2017:Veno-Echo.cpp **** 
 2355              		.loc 20 2017 39 view .LVU601
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 143


 2356 002e F7EE006A 		vmov.f32	s13, #1.0e+0
2017:Veno-Echo.cpp **** 
 2357              		.loc 20 2017 49 view .LVU602
 2358 0032 F6EE005A 		vmov.f32	s11, #5.0e-1
 2359              	.LBE1134:
 2360              	.LBE1137:
1096:Veno-Echo.cpp ****         }
 2361              		.loc 20 1096 41 view .LVU603
 2362 0036 5F4B     		ldr	r3, .L145+24
 2363              	.LBB1138:
 2364              	.LBB1135:
2017:Veno-Echo.cpp **** 
 2365              		.loc 20 2017 39 view .LVU604
 2366 0038 92ED007A 		vldr.32	s14, [r2]
2017:Veno-Echo.cpp **** 
 2367              		.loc 20 2017 12 view .LVU605
 2368 003c B0EE006A 		vmov.f32	s12, #2.0e+0
 2369 0040 D3ED007A 		vldr.32	s15, [r3]
2017:Veno-Echo.cpp **** 
 2370              		.loc 20 2017 39 view .LVU606
 2371 0044 36EEC77A 		vsub.f32	s14, s13, s14
2017:Veno-Echo.cpp **** 
 2372              		.loc 20 2017 49 view .LVU607
 2373 0048 37EE657A 		vsub.f32	s14, s14, s11
2017:Veno-Echo.cpp **** 
 2374              		.loc 20 2017 12 view .LVU608
 2375 004c E7EE067A 		vfma.f32	s15, s14, s12
 2376              	.LVL96:
2019:Veno-Echo.cpp ****     {
 2377              		.loc 20 2019 5 is_stmt 1 view .LVU609
 2378 0050 F5EEC07A 		vcmpe.f32	s15, #0
 2379 0054 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2380 0058 00F19A80 		bmi	.L143
2024:Veno-Echo.cpp ****     {
 2381              		.loc 20 2024 5 view .LVU610
2026:Veno-Echo.cpp ****     }
 2382              		.loc 20 2026 16 is_stmt 0 view .LVU611
 2383 005c F4EE667A 		vcmp.f32	s15, s13
 2384 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2385 0064 76FEA77A 		vselgt.f32	s15, s13, s15
 2386              	.LVL97:
 2387              	.L125:
2026:Veno-Echo.cpp ****     }
 2388              		.loc 20 2026 16 view .LVU612
 2389              	.LBE1135:
 2390              	.LBE1138:
1099:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2391              		.loc 20 1099 9 is_stmt 1 view .LVU613
1099:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2392              		.loc 20 1099 37 is_stmt 0 view .LVU614
 2393 0068 B0EE670A 		vmov.f32	s0, s15
 2394              	.LVL98:
1099:Veno-Echo.cpp ****         fonepole(feedbackL,feedbackL_Target,0.032f);
 2395              		.loc 20 1099 37 view .LVU615
 2396 006c 0020     		movs	r0, #0
 2397 006e B7EE041A 		vmov.f32	s2, #1.25e+0
 2398 0072 DFED510A 		vldr.32	s1, .L145+28
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 144


 2399 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2400              	.LVL99:
1100:Veno-Echo.cpp ****     }
 2401              		.loc 20 1100 9 is_stmt 1 view .LVU616
 2402              	.LBB1139:
 2403              	.LBI1139:
 2404              		.file 25 "../DaisySP/Source/Utility/dsp.h"
   1:../DaisySP/Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
   2:../DaisySP/Source/Utility/dsp.h **** */
   3:../DaisySP/Source/Utility/dsp.h **** #pragma once
   4:../DaisySP/Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
   5:../DaisySP/Source/Utility/dsp.h **** #define DSY_CORE_DSP
   6:../DaisySP/Source/Utility/dsp.h **** #include <cassert>
   7:../DaisySP/Source/Utility/dsp.h **** #include <cstdint>
   8:../DaisySP/Source/Utility/dsp.h **** #include <random>
   9:../DaisySP/Source/Utility/dsp.h **** #include <cmath>
  10:../DaisySP/Source/Utility/dsp.h **** 
  11:../DaisySP/Source/Utility/dsp.h **** /** PIs
  12:../DaisySP/Source/Utility/dsp.h **** */
  13:../DaisySP/Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  14:../DaisySP/Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  15:../DaisySP/Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  16:../DaisySP/Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  17:../DaisySP/Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  18:../DaisySP/Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  19:../DaisySP/Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  20:../DaisySP/Source/Utility/dsp.h **** 
  21:../DaisySP/Source/Utility/dsp.h **** namespace daisysp
  22:../DaisySP/Source/Utility/dsp.h **** {
  23:../DaisySP/Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  24:../DaisySP/Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  25:../DaisySP/Source/Utility/dsp.h **** 
  26:../DaisySP/Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  27:../DaisySP/Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  28:../DaisySP/Source/Utility/dsp.h **** 
  29:../DaisySP/Source/Utility/dsp.h **** /** efficient floating point min/max
  30:../DaisySP/Source/Utility/dsp.h **** c/o stephen mccaul
  31:../DaisySP/Source/Utility/dsp.h **** */
  32:../DaisySP/Source/Utility/dsp.h **** inline float fmax(float a, float b)
  33:../DaisySP/Source/Utility/dsp.h **** {
  34:../DaisySP/Source/Utility/dsp.h ****     float r;
  35:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  36:../DaisySP/Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  37:../DaisySP/Source/Utility/dsp.h **** #else
  38:../DaisySP/Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  39:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
  40:../DaisySP/Source/Utility/dsp.h ****     return r;
  41:../DaisySP/Source/Utility/dsp.h **** }
  42:../DaisySP/Source/Utility/dsp.h **** 
  43:../DaisySP/Source/Utility/dsp.h **** inline float fmin(float a, float b)
  44:../DaisySP/Source/Utility/dsp.h **** {
  45:../DaisySP/Source/Utility/dsp.h ****     float r;
  46:../DaisySP/Source/Utility/dsp.h **** #ifdef __arm__
  47:../DaisySP/Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  48:../DaisySP/Source/Utility/dsp.h **** #else
  49:../DaisySP/Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  50:../DaisySP/Source/Utility/dsp.h **** #endif // __arm__
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 145


  51:../DaisySP/Source/Utility/dsp.h ****     return r;
  52:../DaisySP/Source/Utility/dsp.h **** }
  53:../DaisySP/Source/Utility/dsp.h **** 
  54:../DaisySP/Source/Utility/dsp.h **** /** quick fp clamp
  55:../DaisySP/Source/Utility/dsp.h **** */
  56:../DaisySP/Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
  57:../DaisySP/Source/Utility/dsp.h **** {
  58:../DaisySP/Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
  59:../DaisySP/Source/Utility/dsp.h **** }
  60:../DaisySP/Source/Utility/dsp.h **** 
  61:../DaisySP/Source/Utility/dsp.h **** /** From Musicdsp.org "Fast power and root estimates for 32bit floats)
  62:../DaisySP/Source/Utility/dsp.h **** Original code by Stefan Stenzel
  63:../DaisySP/Source/Utility/dsp.h **** These are approximations
  64:../DaisySP/Source/Utility/dsp.h **** */
  65:../DaisySP/Source/Utility/dsp.h **** inline float fastpower(float f, int n)
  66:../DaisySP/Source/Utility/dsp.h **** {
  67:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  68:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  69:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  70:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  71:../DaisySP/Source/Utility/dsp.h ****     l <<= (n - 1);
  72:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  73:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  74:../DaisySP/Source/Utility/dsp.h ****     return f;
  75:../DaisySP/Source/Utility/dsp.h **** }
  76:../DaisySP/Source/Utility/dsp.h **** 
  77:../DaisySP/Source/Utility/dsp.h **** inline float fastroot(float f, int n)
  78:../DaisySP/Source/Utility/dsp.h **** {
  79:../DaisySP/Source/Utility/dsp.h ****     long *lp, l;
  80:../DaisySP/Source/Utility/dsp.h ****     lp = (long *)(&f);
  81:../DaisySP/Source/Utility/dsp.h ****     l  = *lp;
  82:../DaisySP/Source/Utility/dsp.h ****     l -= 0x3F800000;
  83:../DaisySP/Source/Utility/dsp.h ****     l >>= (n = 1);
  84:../DaisySP/Source/Utility/dsp.h ****     l += 0x3F800000;
  85:../DaisySP/Source/Utility/dsp.h ****     *lp = l;
  86:../DaisySP/Source/Utility/dsp.h ****     return f;
  87:../DaisySP/Source/Utility/dsp.h **** }
  88:../DaisySP/Source/Utility/dsp.h **** 
  89:../DaisySP/Source/Utility/dsp.h **** /** From http://openaudio.blogspot.com/2017/02/faster-log10-and-pow.html
  90:../DaisySP/Source/Utility/dsp.h **** No approximation, pow10f(x) gives a 90% speed increase over powf(10.f, x)
  91:../DaisySP/Source/Utility/dsp.h **** */
  92:../DaisySP/Source/Utility/dsp.h **** inline float pow10f(float f)
  93:../DaisySP/Source/Utility/dsp.h **** {
  94:../DaisySP/Source/Utility/dsp.h ****     return expf(2.302585092994046f * f);
  95:../DaisySP/Source/Utility/dsp.h **** }
  96:../DaisySP/Source/Utility/dsp.h **** 
  97:../DaisySP/Source/Utility/dsp.h **** /* Original code for fastlog2f by Dr. Paul Beckmann from the ARM community forum, adapted from the 
  98:../DaisySP/Source/Utility/dsp.h **** About 25% performance increase over std::log10f
  99:../DaisySP/Source/Utility/dsp.h **** */
 100:../DaisySP/Source/Utility/dsp.h **** inline float fastlog2f(float f)
 101:../DaisySP/Source/Utility/dsp.h **** {
 102:../DaisySP/Source/Utility/dsp.h ****     float frac;
 103:../DaisySP/Source/Utility/dsp.h ****     int   exp;
 104:../DaisySP/Source/Utility/dsp.h ****     frac = frexpf(fabsf(f), &exp);
 105:../DaisySP/Source/Utility/dsp.h ****     f    = 1.23149591368684f;
 106:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 107:../DaisySP/Source/Utility/dsp.h ****     f += -4.11852516267426f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 146


 108:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 109:../DaisySP/Source/Utility/dsp.h ****     f += 6.02197014179219f;
 110:../DaisySP/Source/Utility/dsp.h ****     f *= frac;
 111:../DaisySP/Source/Utility/dsp.h ****     f += -3.13396450166353f;
 112:../DaisySP/Source/Utility/dsp.h ****     f += exp;
 113:../DaisySP/Source/Utility/dsp.h ****     return (f);
 114:../DaisySP/Source/Utility/dsp.h **** }
 115:../DaisySP/Source/Utility/dsp.h **** 
 116:../DaisySP/Source/Utility/dsp.h **** inline float fastlog10f(float f)
 117:../DaisySP/Source/Utility/dsp.h **** {
 118:../DaisySP/Source/Utility/dsp.h ****     return fastlog2f(f) * 0.3010299956639812f;
 119:../DaisySP/Source/Utility/dsp.h **** }
 120:../DaisySP/Source/Utility/dsp.h **** 
 121:../DaisySP/Source/Utility/dsp.h **** /** Midi to frequency helper
 122:../DaisySP/Source/Utility/dsp.h **** */
 123:../DaisySP/Source/Utility/dsp.h **** inline float mtof(float m)
 124:../DaisySP/Source/Utility/dsp.h **** {
 125:../DaisySP/Source/Utility/dsp.h ****     return powf(2, (m - 69.0f) / 12.0f) * 440.0f;
 126:../DaisySP/Source/Utility/dsp.h **** }
 127:../DaisySP/Source/Utility/dsp.h **** 
 128:../DaisySP/Source/Utility/dsp.h **** 
 129:../DaisySP/Source/Utility/dsp.h **** /** one pole lpf
 130:../DaisySP/Source/Utility/dsp.h **** out is passed by reference, and must be retained between
 131:../DaisySP/Source/Utility/dsp.h **** calls to properly filter the signal
 132:../DaisySP/Source/Utility/dsp.h **** coeff can be calculated:
 133:../DaisySP/Source/Utility/dsp.h **** coeff = 1.0 / (time * sample_rate) ; where time is in seconds
 134:../DaisySP/Source/Utility/dsp.h **** */
 135:../DaisySP/Source/Utility/dsp.h **** inline void fonepole(float &out, float in, float coeff)
 2405              		.loc 25 135 13 view .LVU617
 2406              	.LBB1140:
 136:../DaisySP/Source/Utility/dsp.h **** {
 137:../DaisySP/Source/Utility/dsp.h ****     out += coeff * (in - out);
 2407              		.loc 25 137 5 view .LVU618
 2408              		.loc 25 137 9 is_stmt 0 view .LVU619
 2409 007a 504B     		ldr	r3, .L145+32
 2410 007c 9FED507A 		vldr.32	s14, .L145+36
 2411 0080 D3ED007A 		vldr.32	s15, [r3]
 2412              		.loc 25 137 24 view .LVU620
 2413 0084 30EE670A 		vsub.f32	s0, s0, s15
 2414              	.LVL100:
 2415              		.loc 25 137 24 view .LVU621
 2416              	.LBE1140:
 2417              	.LBE1139:
 2418              	.LBE1154:
 2419              	.LBE1175:
1136:Veno-Echo.cpp **** 
 2420              		.loc 20 1136 1 view .LVU622
 2421 0088 BDEC028B 		vldm	sp!, {d8}
 2422              		.cfi_remember_state
 2423              		.cfi_restore 80
 2424              		.cfi_restore 81
 2425              		.cfi_def_cfa_offset 8
 2426              	.LBB1176:
 2427              	.LBB1155:
 2428              	.LBB1142:
 2429              	.LBB1141:
 2430              		.loc 25 137 9 view .LVU623
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 147


 2431 008c E0EE077A 		vfma.f32	s15, s0, s14
 2432 0090 C3ED007A 		vstr.32	s15, [r3]
 2433              	.LBE1141:
 2434              	.LBE1142:
 2435              	.LBE1155:
 2436              	.LBE1176:
1136:Veno-Echo.cpp **** 
 2437              		.loc 20 1136 1 view .LVU624
 2438 0094 10BD     		pop	{r4, pc}
 2439              	.LVL101:
 2440              	.L118:
 2441              		.cfi_restore_state
 2442              	.LBB1177:
 2443              	.LBB1156:
1104:Veno-Echo.cpp **** 
 2444              		.loc 20 1104 9 is_stmt 1 view .LVU625
1106:Veno-Echo.cpp ****         {
 2445              		.loc 20 1106 9 view .LVU626
 2446 0096 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2447 0098 002B     		cmp	r3, #0
 2448 009a 3ED1     		bne	.L128
1108:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2449              		.loc 20 1108 13 view .LVU627
1108:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2450              		.loc 20 1108 23 is_stmt 0 view .LVU628
 2451 009c 0124     		movs	r4, #1
1109:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2452              		.loc 20 1109 29 view .LVU629
 2453 009e 4948     		ldr	r0, .L145+40
1110:Veno-Echo.cpp ****         }
 2454              		.loc 20 1110 26 view .LVU630
 2455 00a0 4949     		ldr	r1, .L145+44
1108:Veno-Echo.cpp ****             HPCutoff_pickup = false;    //set to not picked up
 2456              		.loc 20 1108 23 view .LVU631
 2457 00a2 1470     		strb	r4, [r2]
1109:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2458              		.loc 20 1109 13 is_stmt 1 view .LVU632
1109:Veno-Echo.cpp ****             HPCutoff_new = feedbackL_Pot;   //update new
 2459              		.loc 20 1109 29 is_stmt 0 view .LVU633
 2460 00a4 0370     		strb	r3, [r0]
1110:Veno-Echo.cpp ****         }
 2461              		.loc 20 1110 13 is_stmt 1 view .LVU634
1110:Veno-Echo.cpp ****         }
 2462              		.loc 20 1110 26 is_stmt 0 view .LVU635
 2463 00a6 81ED000A 		vstr.32	s0, [r1]
 2464              	.L117:
1110:Veno-Echo.cpp ****         }
 2465              		.loc 20 1110 26 view .LVU636
 2466              	.LBE1156:
 2467              	.LBE1177:
1136:Veno-Echo.cpp **** 
 2468              		.loc 20 1136 1 view .LVU637
 2469 00aa BDEC028B 		vldm	sp!, {d8}
 2470              		.cfi_remember_state
 2471              		.cfi_restore 80
 2472              		.cfi_restore 81
 2473              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 148


 2474 00ae 10BD     		pop	{r4, pc}
 2475              	.L119:
 2476              		.cfi_restore_state
 2477              	.LBB1178:
 2478              	.LBB1172:
1077:Veno-Echo.cpp ****             {
 2479              		.loc 20 1077 13 is_stmt 1 view .LVU638
1077:Veno-Echo.cpp ****             {
 2480              		.loc 20 1077 16 is_stmt 0 view .LVU639
 2481 00b0 3D4B     		ldr	r3, .L145+12
1077:Veno-Echo.cpp ****             {
 2482              		.loc 20 1077 13 view .LVU640
 2483 00b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2484 00b4 7AB9     		cbnz	r2, .L121
1079:Veno-Echo.cpp ****                 {
 2485              		.loc 20 1079 17 is_stmt 1 view .LVU641
 2486              	.LVL102:
 2487              	.LBB1143:
 2488              	.LBI1143:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2489              		.loc 21 75 3 view .LVU642
 2490              	.LBB1144:
 2491              		.loc 21 76 5 view .LVU643
 2492              		.loc 21 76 5 is_stmt 0 view .LVU644
 2493              	.LBE1144:
 2494              	.LBE1143:
1079:Veno-Echo.cpp ****                 {
 2495              		.loc 20 1079 23 view .LVU645
 2496 00b6 3D4A     		ldr	r2, .L145+16
1079:Veno-Echo.cpp ****                 {
 2497              		.loc 20 1079 17 view .LVU646
 2498 00b8 9FED447A 		vldr.32	s14, .L145+48
1079:Veno-Echo.cpp ****                 {
 2499              		.loc 20 1079 23 view .LVU647
 2500 00bc D2ED007A 		vldr.32	s15, [r2]
 2501 00c0 70EE677A 		vsub.f32	s15, s0, s15
 2502              	.LBB1146:
 2503              	.LBB1145:
 2504              		.loc 21 76 31 view .LVU648
 2505 00c4 F0EEE77A 		vabs.f32	s15, s15
 2506              	.LBE1145:
 2507              	.LBE1146:
1079:Veno-Echo.cpp ****                 {
 2508              		.loc 20 1079 17 view .LVU649
 2509 00c8 F4EEC77A 		vcmpe.f32	s15, s14
 2510 00cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2511 00d0 ACDD     		ble	.L120
1081:Veno-Echo.cpp ****                 }
 2512              		.loc 20 1081 21 is_stmt 1 view .LVU650
1081:Veno-Echo.cpp ****                 }
 2513              		.loc 20 1081 38 is_stmt 0 view .LVU651
 2514 00d2 0122     		movs	r2, #1
 2515 00d4 1A70     		strb	r2, [r3]
 2516              	.L121:
1086:Veno-Echo.cpp **** 
 2517              		.loc 20 1086 9 is_stmt 1 view .LVU652
 2518              	.LVL103:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 149


1088:Veno-Echo.cpp ****         {
 2519              		.loc 20 1088 9 view .LVU653
1090:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 2520              		.loc 20 1090 13 view .LVU654
 2521              	.LBB1147:
 2522              	.LBI1147:
2014:Veno-Echo.cpp **** {
 2523              		.loc 20 2014 7 view .LVU655
 2524              	.LBB1148:
2016:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2525              		.loc 20 2016 5 view .LVU656
2017:Veno-Echo.cpp **** 
 2526              		.loc 20 2017 5 view .LVU657
 2527              	.LBE1148:
 2528              	.LBE1147:
1090:Veno-Echo.cpp ****             feedbackL_Last = feedbackL_Pot; //update last value
 2529              		.loc 20 1090 41 is_stmt 0 view .LVU658
 2530 00d6 364B     		ldr	r3, .L145+20
 2531              	.LBB1151:
 2532              	.LBB1149:
2017:Veno-Echo.cpp **** 
 2533              		.loc 20 2017 39 view .LVU659
 2534 00d8 B7EE007A 		vmov.f32	s14, #1.0e+0
2017:Veno-Echo.cpp **** 
 2535              		.loc 20 2017 49 view .LVU660
 2536 00dc B6EE006A 		vmov.f32	s12, #5.0e-1
2017:Veno-Echo.cpp **** 
 2537              		.loc 20 2017 39 view .LVU661
 2538 00e0 D3ED007A 		vldr.32	s15, [r3]
2017:Veno-Echo.cpp **** 
 2539              		.loc 20 2017 12 view .LVU662
 2540 00e4 F0EE006A 		vmov.f32	s13, #2.0e+0
2017:Veno-Echo.cpp **** 
 2541              		.loc 20 2017 39 view .LVU663
 2542 00e8 77EE677A 		vsub.f32	s15, s14, s15
2017:Veno-Echo.cpp **** 
 2543              		.loc 20 2017 49 view .LVU664
 2544 00ec 77EEC67A 		vsub.f32	s15, s15, s12
2017:Veno-Echo.cpp **** 
 2545              		.loc 20 2017 12 view .LVU665
 2546 00f0 B0EE406A 		vmov.f32	s12, s0
 2547 00f4 A7EEA66A 		vfma.f32	s12, s15, s13
2019:Veno-Echo.cpp ****     {
 2548              		.loc 20 2019 5 view .LVU666
 2549 00f8 B5EEC06A 		vcmpe.f32	s12, #0
2017:Veno-Echo.cpp **** 
 2550              		.loc 20 2017 12 view .LVU667
 2551 00fc F0EE467A 		vmov.f32	s15, s12
 2552              	.LVL104:
2019:Veno-Echo.cpp ****     {
 2553              		.loc 20 2019 5 is_stmt 1 view .LVU668
 2554 0100 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2555 0104 47D4     		bmi	.L144
2024:Veno-Echo.cpp ****     {
 2556              		.loc 20 2024 5 view .LVU669
2026:Veno-Echo.cpp ****     }
 2557              		.loc 20 2026 16 is_stmt 0 view .LVU670
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 150


 2558 0106 F4EE477A 		vcmp.f32	s15, s14
 2559 010a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2560 010e 77FE277A 		vselgt.f32	s15, s14, s15
 2561              	.L123:
 2562              	.LVL105:
2029:Veno-Echo.cpp **** }
 2563              		.loc 20 2029 5 is_stmt 1 view .LVU671
2029:Veno-Echo.cpp **** }
 2564              		.loc 20 2029 5 is_stmt 0 view .LVU672
 2565              	.LBE1149:
 2566              	.LBE1151:
1091:Veno-Echo.cpp ****         }
 2567              		.loc 20 1091 13 is_stmt 1 view .LVU673
1091:Veno-Echo.cpp ****         }
 2568              		.loc 20 1091 28 is_stmt 0 view .LVU674
 2569 0112 284B     		ldr	r3, .L145+24
 2570 0114 83ED000A 		vstr.32	s0, [r3]
 2571 0118 A6E7     		b	.L125
 2572              	.LVL106:
 2573              	.L128:
1091:Veno-Echo.cpp ****         }
 2574              		.loc 20 1091 28 view .LVU675
 2575              	.LBE1172:
 2576              	.LBB1173:
1115:Veno-Echo.cpp ****             {
 2577              		.loc 20 1115 13 is_stmt 1 view .LVU676
1115:Veno-Echo.cpp ****             {
 2578              		.loc 20 1115 16 is_stmt 0 view .LVU677
 2579 011a 2A4B     		ldr	r3, .L145+40
1115:Veno-Echo.cpp ****             {
 2580              		.loc 20 1115 13 view .LVU678
 2581 011c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2582 011e 7AB9     		cbnz	r2, .L130
1117:Veno-Echo.cpp ****                 {
 2583              		.loc 20 1117 17 is_stmt 1 view .LVU679
 2584              	.LVL107:
 2585              	.LBB1157:
 2586              	.LBI1157:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 2587              		.loc 21 75 3 view .LVU680
 2588              	.LBB1158:
 2589              		.loc 21 76 5 view .LVU681
 2590              		.loc 21 76 5 is_stmt 0 view .LVU682
 2591              	.LBE1158:
 2592              	.LBE1157:
1117:Veno-Echo.cpp ****                 {
 2593              		.loc 20 1117 23 view .LVU683
 2594 0120 294A     		ldr	r2, .L145+44
1117:Veno-Echo.cpp ****                 {
 2595              		.loc 20 1117 17 view .LVU684
 2596 0122 9FED2A7A 		vldr.32	s14, .L145+48
1117:Veno-Echo.cpp ****                 {
 2597              		.loc 20 1117 23 view .LVU685
 2598 0126 D2ED007A 		vldr.32	s15, [r2]
 2599 012a 70EE677A 		vsub.f32	s15, s0, s15
 2600              	.LBB1160:
 2601              	.LBB1159:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 151


 2602              		.loc 21 76 31 view .LVU686
 2603 012e F0EEE77A 		vabs.f32	s15, s15
 2604              	.LBE1159:
 2605              	.LBE1160:
1117:Veno-Echo.cpp ****                 {
 2606              		.loc 20 1117 17 view .LVU687
 2607 0132 F4EEC77A 		vcmpe.f32	s15, s14
 2608 0136 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2609 013a B6DD     		ble	.L117
1119:Veno-Echo.cpp ****                 }
 2610              		.loc 20 1119 21 is_stmt 1 view .LVU688
1119:Veno-Echo.cpp ****                 }
 2611              		.loc 20 1119 37 is_stmt 0 view .LVU689
 2612 013c 0122     		movs	r2, #1
 2613 013e 1A70     		strb	r2, [r3]
 2614              	.L130:
1124:Veno-Echo.cpp ****         {
 2615              		.loc 20 1124 9 is_stmt 1 view .LVU690
 2616              	.LBB1161:
1126:Veno-Echo.cpp ****             HPCutoff = scale(feedbackL_Pot,minHPCut,maxHPCut,EXPONENTIAL);
 2617              		.loc 20 1126 13 view .LVU691
 2618              	.LVL108:
1127:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2619              		.loc 20 1127 13 view .LVU692
1127:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2620              		.loc 20 1127 29 is_stmt 0 view .LVU693
 2621 0140 9FED231A 		vldr.32	s2, .L145+52
 2622 0144 0120     		movs	r0, #1
 2623 0146 DFED230A 		vldr.32	s1, .L145+56
 2624 014a FFF7FEFF 		bl	_Z5scalefff9CurveType
 2625              	.LVL109:
1127:Veno-Echo.cpp ****             HPF_L.SetFreq(HPCutoff);
 2626              		.loc 20 1127 29 view .LVU694
 2627 014e B0EE408A 		vmov.f32	s16, s0
 2628              	.LVL110:
1128:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 2629              		.loc 20 1128 13 is_stmt 1 view .LVU695
1128:Veno-Echo.cpp ****             HPF_R.SetFreq(HPCutoff);
 2630              		.loc 20 1128 26 is_stmt 0 view .LVU696
 2631 0152 2148     		ldr	r0, .L145+60
 2632 0154 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2633              	.LVL111:
1129:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 2634              		.loc 20 1129 13 is_stmt 1 view .LVU697
1129:Veno-Echo.cpp ****             HPF_L_post.SetFreq(HPCutoff);
 2635              		.loc 20 1129 26 is_stmt 0 view .LVU698
 2636 0158 2048     		ldr	r0, .L145+64
 2637 015a B0EE480A 		vmov.f32	s0, s16
 2638 015e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2639              	.LVL112:
1130:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 2640              		.loc 20 1130 13 is_stmt 1 view .LVU699
1130:Veno-Echo.cpp ****             HPF_R_post.SetFreq(HPCutoff);
 2641              		.loc 20 1130 31 is_stmt 0 view .LVU700
 2642 0162 B0EE480A 		vmov.f32	s0, s16
 2643 0166 1E48     		ldr	r0, .L145+68
 2644 0168 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 152


 2645              	.LVL113:
1131:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 2646              		.loc 20 1131 13 is_stmt 1 view .LVU701
1131:Veno-Echo.cpp ****             AltControls.HP_Cutoff = HPCutoff;
 2647              		.loc 20 1131 31 is_stmt 0 view .LVU702
 2648 016c B0EE480A 		vmov.f32	s0, s16
 2649 0170 1C48     		ldr	r0, .L145+72
 2650 0172 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 2651              	.LVL114:
1132:Veno-Echo.cpp ****             save_flag = true;
 2652              		.loc 20 1132 13 is_stmt 1 view .LVU703
1132:Veno-Echo.cpp ****             save_flag = true;
 2653              		.loc 20 1132 35 is_stmt 0 view .LVU704
 2654 0176 1C49     		ldr	r1, .L145+76
 2655              	.LBB1162:
 2656              	.LBB1163:
 2657              	.LBB1164:
 2658              	.LBB1165:
 2659              	.LBB1166:
 2660              		.loc 22 397 18 view .LVU705
 2661 0178 1C4B     		ldr	r3, .L145+80
 2662 017a 0122     		movs	r2, #1
 2663              	.LBE1166:
 2664              	.LBE1165:
 2665              	.LBE1164:
 2666              	.LBE1163:
 2667              	.LBE1162:
1132:Veno-Echo.cpp ****             save_flag = true;
 2668              		.loc 20 1132 35 view .LVU706
 2669 017c 81ED048A 		vstr.32	s16, [r1, #16]
1133:Veno-Echo.cpp ****         }
 2670              		.loc 20 1133 13 is_stmt 1 view .LVU707
 2671              	.LVL115:
 2672              	.LBB1171:
 2673              	.LBI1162:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 2674              		.loc 23 80 5 view .LVU708
 2675              	.LBB1170:
 2676              		.loc 23 81 7 view .LVU709
 2677              	.LBB1169:
 2678              	.LBI1164:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 2679              		.loc 22 288 7 view .LVU710
 2680              	.LBB1168:
 2681              	.LBI1165:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 2682              		.loc 22 390 7 view .LVU711
 2683              	.LBB1167:
 2684              		.loc 22 397 18 is_stmt 0 view .LVU712
 2685 0180 BFF35B8F 		dmb	ish
 2686 0184 1A70     		strb	r2, [r3]
 2687 0186 BFF35B8F 		dmb	ish
 2688              	.LVL116:
 2689              		.loc 22 397 18 view .LVU713
 2690              	.LBE1167:
 2691              	.LBE1168:
 2692              	.LBE1169:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 153


 2693              	.LBE1170:
 2694              	.LBE1171:
 2695              	.LBE1161:
 2696              	.LBE1173:
 2697              	.LBE1178:
1136:Veno-Echo.cpp **** 
 2698              		.loc 20 1136 1 view .LVU714
 2699 018a BDEC028B 		vldm	sp!, {d8}
 2700              		.cfi_remember_state
 2701              		.cfi_restore 80
 2702              		.cfi_restore 81
 2703              		.cfi_def_cfa_offset 8
 2704              	.LVL117:
1136:Veno-Echo.cpp **** 
 2705              		.loc 20 1136 1 view .LVU715
 2706 018e 10BD     		pop	{r4, pc}
 2707              	.LVL118:
 2708              	.L143:
 2709              		.cfi_restore_state
 2710              	.LBB1179:
 2711              	.LBB1174:
 2712              	.LBB1152:
 2713              	.LBB1136:
2021:Veno-Echo.cpp ****     }
 2714              		.loc 20 2021 16 view .LVU716
 2715 0190 DFED097A 		vldr.32	s15, .L145+28
 2716              	.LVL119:
2021:Veno-Echo.cpp ****     }
 2717              		.loc 20 2021 16 view .LVU717
 2718 0194 68E7     		b	.L125
 2719              	.LVL120:
 2720              	.L144:
2021:Veno-Echo.cpp ****     }
 2721              		.loc 20 2021 16 view .LVU718
 2722              	.LBE1136:
 2723              	.LBE1152:
 2724              	.LBB1153:
 2725              	.LBB1150:
 2726 0196 DFED087A 		vldr.32	s15, .L145+28
 2727 019a BAE7     		b	.L123
 2728              	.L146:
 2729              		.align	2
 2730              	.L145:
 2731 019c 18000000 		.word	.LANCHOR4+24
 2732 01a0 00000000 		.word	.LANCHOR7
 2733 01a4 00000000 		.word	.LANCHOR28
 2734 01a8 00000000 		.word	.LANCHOR29
 2735 01ac 00000000 		.word	.LANCHOR30
 2736 01b0 00000000 		.word	.LANCHOR27
 2737 01b4 00000000 		.word	.LANCHOR31
 2738 01b8 00000000 		.word	0
 2739 01bc 00000000 		.word	.LANCHOR32
 2740 01c0 6F12033D 		.word	1023611503
 2741 01c4 00000000 		.word	.LANCHOR33
 2742 01c8 00000000 		.word	.LANCHOR34
 2743 01cc 0AD7A33B 		.word	1000593162
 2744 01d0 00004844 		.word	1145569280
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 154


 2745 01d4 0000C842 		.word	1120403456
 2746 01d8 00000000 		.word	.LANCHOR35
 2747 01dc 00000000 		.word	.LANCHOR36
 2748 01e0 00000000 		.word	.LANCHOR37
 2749 01e4 00000000 		.word	.LANCHOR38
 2750 01e8 00000000 		.word	.LANCHOR15
 2751 01ec 00000000 		.word	.LANCHOR16
 2752              	.LBE1150:
 2753              	.LBE1153:
 2754              	.LBE1174:
 2755              	.LBE1179:
 2756              		.cfi_endproc
 2757              	.LFE4778:
 2759              		.section	.text._Z19Update_feedbackR_CVv,"ax",%progbits
 2760              		.align	1
 2761              		.p2align 2,,3
 2762              		.global	_Z19Update_feedbackR_CVv
 2763              		.syntax unified
 2764              		.thumb
 2765              		.thumb_func
 2766              		.fpu fpv5-d16
 2768              	_Z19Update_feedbackR_CVv:
 2769              	.LFB4779:
1139:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 2770              		.loc 20 1139 1 is_stmt 1 view -0
 2771              		.cfi_startproc
 2772              		@ args = 0, pretend = 0, frame = 0
 2773              		@ frame_needed = 0, uses_anonymous_args = 0
1140:Veno-Echo.cpp **** }
 2774              		.loc 20 1140 5 view .LVU720
1139:Veno-Echo.cpp ****     feedbackR_CV = hw.adc.GetFloat(3);
 2775              		.loc 20 1139 1 is_stmt 0 view .LVU721
 2776 0000 08B5     		push	{r3, lr}
 2777              		.cfi_def_cfa_offset 8
 2778              		.cfi_offset 3, -8
 2779              		.cfi_offset 14, -4
1140:Veno-Echo.cpp **** }
 2780              		.loc 20 1140 35 view .LVU722
 2781 0002 0321     		movs	r1, #3
 2782 0004 0348     		ldr	r0, .L149
 2783 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 2784              	.LVL121:
1140:Veno-Echo.cpp **** }
 2785              		.loc 20 1140 18 view .LVU723
 2786 000a 034B     		ldr	r3, .L149+4
 2787 000c 83ED000A 		vstr.32	s0, [r3]
1141:Veno-Echo.cpp **** 
 2788              		.loc 20 1141 1 view .LVU724
 2789 0010 08BD     		pop	{r3, pc}
 2790              	.L150:
 2791 0012 00BF     		.align	2
 2792              	.L149:
 2793 0014 18000000 		.word	.LANCHOR4+24
 2794 0018 00000000 		.word	.LANCHOR39
 2795              		.cfi_endproc
 2796              	.LFE4779:
 2798              		.section	.text._Z16Update_feedbackRv,"ax",%progbits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 155


 2799              		.align	1
 2800              		.p2align 2,,3
 2801              		.global	_Z16Update_feedbackRv
 2802              		.syntax unified
 2803              		.thumb
 2804              		.thumb_func
 2805              		.fpu fpv5-d16
 2807              	_Z16Update_feedbackRv:
 2808              	.LFB4780:
1144:Veno-Echo.cpp ****     static bool lastShift{};
 2809              		.loc 20 1144 1 is_stmt 1 view -0
 2810              		.cfi_startproc
 2811              		@ args = 0, pretend = 0, frame = 0
 2812              		@ frame_needed = 0, uses_anonymous_args = 0
1145:Veno-Echo.cpp ****     static bool feedbackR_pickup{};
 2813              		.loc 20 1145 5 view .LVU726
1146:Veno-Echo.cpp ****     static bool LPCutoff_pickup{};
 2814              		.loc 20 1146 5 view .LVU727
1147:Veno-Echo.cpp **** 
 2815              		.loc 20 1147 5 view .LVU728
1149:Veno-Echo.cpp **** 
 2816              		.loc 20 1149 5 view .LVU729
1152:Veno-Echo.cpp **** 
 2817              		.loc 20 1152 5 view .LVU730
1152:Veno-Echo.cpp **** 
 2818              		.loc 20 1152 43 is_stmt 0 view .LVU731
 2819 0000 0422     		movs	r2, #4
 2820 0002 0721     		movs	r1, #7
 2821 0004 6548     		ldr	r0, .L179
1144:Veno-Echo.cpp ****     static bool lastShift{};
 2822              		.loc 20 1144 1 view .LVU732
 2823 0006 10B5     		push	{r4, lr}
 2824              		.cfi_def_cfa_offset 8
 2825              		.cfi_offset 4, -8
 2826              		.cfi_offset 14, -4
 2827 0008 2DED028B 		vpush.64	{d8}
 2828              		.cfi_def_cfa_offset 16
 2829              		.cfi_offset 80, -16
 2830              		.cfi_offset 81, -12
1152:Veno-Echo.cpp **** 
 2831              		.loc 20 1152 43 view .LVU733
 2832 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 2833              	.LVL122:
 2834              	.LBB1180:
1154:Veno-Echo.cpp ****     {   
 2835              		.loc 20 1154 9 view .LVU734
 2836 0010 634B     		ldr	r3, .L179+4
 2837              	.LVL123:
1154:Veno-Echo.cpp ****     {   
 2838              		.loc 20 1154 9 view .LVU735
 2839              	.LBE1180:
1154:Veno-Echo.cpp ****     {   
 2840              		.loc 20 1154 5 is_stmt 1 view .LVU736
 2841              	.LBB1225:
 2842              	.LBB1181:
1158:Veno-Echo.cpp ****         {
 2843              		.loc 20 1158 19 is_stmt 0 view .LVU737
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 156


 2844 0012 644A     		ldr	r2, .L179+8
 2845              	.LBE1181:
1154:Veno-Echo.cpp ****     {   
 2846              		.loc 20 1154 5 view .LVU738
 2847 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2848 0016 002B     		cmp	r3, #0
 2849 0018 3DD1     		bne	.L152
 2850              	.LBB1204:
1156:Veno-Echo.cpp ****         //update pickup
 2851              		.loc 20 1156 9 is_stmt 1 view .LVU739
1158:Veno-Echo.cpp ****         {
 2852              		.loc 20 1158 9 view .LVU740
 2853 001a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2854 001c 0029     		cmp	r1, #0
 2855 001e 47D0     		beq	.L153
1160:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
 2856              		.loc 20 1160 13 view .LVU741
1161:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2857              		.loc 20 1161 30 is_stmt 0 view .LVU742
 2858 0020 6148     		ldr	r0, .L179+12
1162:Veno-Echo.cpp ****         } 
 2859              		.loc 20 1162 27 view .LVU743
 2860 0022 6249     		ldr	r1, .L179+16
1160:Veno-Echo.cpp ****             feedbackR_pickup = false;   //set to not picked up
 2861              		.loc 20 1160 23 view .LVU744
 2862 0024 1370     		strb	r3, [r2]
1161:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2863              		.loc 20 1161 13 is_stmt 1 view .LVU745
1161:Veno-Echo.cpp ****             feedbackR_new = feedbackR_Pot;  //update new value
 2864              		.loc 20 1161 30 is_stmt 0 view .LVU746
 2865 0026 0370     		strb	r3, [r0]
1162:Veno-Echo.cpp ****         } 
 2866              		.loc 20 1162 13 is_stmt 1 view .LVU747
1162:Veno-Echo.cpp ****         } 
 2867              		.loc 20 1162 27 is_stmt 0 view .LVU748
 2868 0028 81ED000A 		vstr.32	s0, [r1]
 2869              	.L154:
1175:Veno-Echo.cpp ****         
 2870              		.loc 20 1175 9 is_stmt 1 view .LVU749
 2871              	.LVL124:
1177:Veno-Echo.cpp ****         {
 2872              		.loc 20 1177 9 view .LVU750
1185:Veno-Echo.cpp ****         }
 2873              		.loc 20 1185 13 view .LVU751
 2874              	.LBB1182:
 2875              	.LBI1182:
2014:Veno-Echo.cpp **** {
 2876              		.loc 20 2014 7 view .LVU752
 2877              	.LBB1183:
2016:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 2878              		.loc 20 2016 5 view .LVU753
2017:Veno-Echo.cpp **** 
 2879              		.loc 20 2017 5 view .LVU754
 2880              	.LBE1183:
 2881              	.LBE1182:
1185:Veno-Echo.cpp ****         }
 2882              		.loc 20 1185 41 is_stmt 0 view .LVU755
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 157


 2883 002c 604A     		ldr	r2, .L179+20
 2884              	.LBB1187:
 2885              	.LBB1184:
2017:Veno-Echo.cpp **** 
 2886              		.loc 20 2017 39 view .LVU756
 2887 002e F7EE006A 		vmov.f32	s13, #1.0e+0
2017:Veno-Echo.cpp **** 
 2888              		.loc 20 2017 49 view .LVU757
 2889 0032 F6EE005A 		vmov.f32	s11, #5.0e-1
 2890              	.LBE1184:
 2891              	.LBE1187:
1185:Veno-Echo.cpp ****         }
 2892              		.loc 20 1185 41 view .LVU758
 2893 0036 5F4B     		ldr	r3, .L179+24
 2894              	.LBB1188:
 2895              	.LBB1185:
2017:Veno-Echo.cpp **** 
 2896              		.loc 20 2017 39 view .LVU759
 2897 0038 92ED007A 		vldr.32	s14, [r2]
2017:Veno-Echo.cpp **** 
 2898              		.loc 20 2017 12 view .LVU760
 2899 003c B0EE006A 		vmov.f32	s12, #2.0e+0
 2900 0040 D3ED007A 		vldr.32	s15, [r3]
2017:Veno-Echo.cpp **** 
 2901              		.loc 20 2017 39 view .LVU761
 2902 0044 36EEC77A 		vsub.f32	s14, s13, s14
2017:Veno-Echo.cpp **** 
 2903              		.loc 20 2017 49 view .LVU762
 2904 0048 37EE657A 		vsub.f32	s14, s14, s11
2017:Veno-Echo.cpp **** 
 2905              		.loc 20 2017 12 view .LVU763
 2906 004c E7EE067A 		vfma.f32	s15, s14, s12
 2907              	.LVL125:
2019:Veno-Echo.cpp ****     {
 2908              		.loc 20 2019 5 is_stmt 1 view .LVU764
 2909 0050 F5EEC07A 		vcmpe.f32	s15, #0
 2910 0054 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2911 0058 00F19A80 		bmi	.L177
2024:Veno-Echo.cpp ****     {
 2912              		.loc 20 2024 5 view .LVU765
2026:Veno-Echo.cpp ****     }
 2913              		.loc 20 2026 16 is_stmt 0 view .LVU766
 2914 005c F4EE667A 		vcmp.f32	s15, s13
 2915 0060 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2916 0064 76FEA77A 		vselgt.f32	s15, s13, s15
 2917              	.LVL126:
 2918              	.L159:
2026:Veno-Echo.cpp ****     }
 2919              		.loc 20 2026 16 view .LVU767
 2920              	.LBE1185:
 2921              	.LBE1188:
1188:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2922              		.loc 20 1188 9 is_stmt 1 view .LVU768
1188:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2923              		.loc 20 1188 37 is_stmt 0 view .LVU769
 2924 0068 B0EE670A 		vmov.f32	s0, s15
 2925              	.LVL127:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 158


1188:Veno-Echo.cpp ****         fonepole(feedbackR,feedbackR_Target,0.032f);
 2926              		.loc 20 1188 37 view .LVU770
 2927 006c 0020     		movs	r0, #0
 2928 006e B7EE041A 		vmov.f32	s2, #1.25e+0
 2929 0072 DFED510A 		vldr.32	s1, .L179+28
 2930 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 2931              	.LVL128:
1189:Veno-Echo.cpp ****     }
 2932              		.loc 20 1189 9 is_stmt 1 view .LVU771
 2933              	.LBB1189:
 2934              	.LBI1189:
 135:../DaisySP/Source/Utility/dsp.h **** {
 2935              		.loc 25 135 13 view .LVU772
 2936              	.LBB1190:
 2937              		.loc 25 137 5 view .LVU773
 2938              		.loc 25 137 9 is_stmt 0 view .LVU774
 2939 007a 504B     		ldr	r3, .L179+32
 2940 007c 9FED507A 		vldr.32	s14, .L179+36
 2941 0080 D3ED007A 		vldr.32	s15, [r3]
 2942              		.loc 25 137 24 view .LVU775
 2943 0084 30EE670A 		vsub.f32	s0, s0, s15
 2944              	.LVL129:
 2945              		.loc 25 137 24 view .LVU776
 2946              	.LBE1190:
 2947              	.LBE1189:
 2948              	.LBE1204:
 2949              	.LBE1225:
1226:Veno-Echo.cpp **** 
 2950              		.loc 20 1226 1 view .LVU777
 2951 0088 BDEC028B 		vldm	sp!, {d8}
 2952              		.cfi_remember_state
 2953              		.cfi_restore 80
 2954              		.cfi_restore 81
 2955              		.cfi_def_cfa_offset 8
 2956              	.LBB1226:
 2957              	.LBB1205:
 2958              	.LBB1192:
 2959              	.LBB1191:
 2960              		.loc 25 137 9 view .LVU778
 2961 008c E0EE077A 		vfma.f32	s15, s0, s14
 2962 0090 C3ED007A 		vstr.32	s15, [r3]
 2963              	.LBE1191:
 2964              	.LBE1192:
 2965              	.LBE1205:
 2966              	.LBE1226:
1226:Veno-Echo.cpp **** 
 2967              		.loc 20 1226 1 view .LVU779
 2968 0094 10BD     		pop	{r4, pc}
 2969              	.LVL130:
 2970              	.L152:
 2971              		.cfi_restore_state
 2972              	.LBB1227:
 2973              	.LBB1206:
1194:Veno-Echo.cpp **** 
 2974              		.loc 20 1194 9 is_stmt 1 view .LVU780
1196:Veno-Echo.cpp ****         {
 2975              		.loc 20 1196 10 view .LVU781
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 159


 2976 0096 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 2977 0098 002B     		cmp	r3, #0
 2978 009a 3ED1     		bne	.L162
1198:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2979              		.loc 20 1198 13 view .LVU782
1198:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2980              		.loc 20 1198 23 is_stmt 0 view .LVU783
 2981 009c 0124     		movs	r4, #1
1199:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2982              		.loc 20 1199 29 view .LVU784
 2983 009e 4948     		ldr	r0, .L179+40
1200:Veno-Echo.cpp ****         }
 2984              		.loc 20 1200 26 view .LVU785
 2985 00a0 4949     		ldr	r1, .L179+44
1198:Veno-Echo.cpp ****             LPCutoff_pickup = false;    //set to not picked up
 2986              		.loc 20 1198 23 view .LVU786
 2987 00a2 1470     		strb	r4, [r2]
1199:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2988              		.loc 20 1199 13 is_stmt 1 view .LVU787
1199:Veno-Echo.cpp ****             LPCutoff_new = feedbackR_Pot;   //update new
 2989              		.loc 20 1199 29 is_stmt 0 view .LVU788
 2990 00a4 0370     		strb	r3, [r0]
1200:Veno-Echo.cpp ****         }
 2991              		.loc 20 1200 13 is_stmt 1 view .LVU789
1200:Veno-Echo.cpp ****         }
 2992              		.loc 20 1200 26 is_stmt 0 view .LVU790
 2993 00a6 81ED000A 		vstr.32	s0, [r1]
 2994              	.L151:
1200:Veno-Echo.cpp ****         }
 2995              		.loc 20 1200 26 view .LVU791
 2996              	.LBE1206:
 2997              	.LBE1227:
1226:Veno-Echo.cpp **** 
 2998              		.loc 20 1226 1 view .LVU792
 2999 00aa BDEC028B 		vldm	sp!, {d8}
 3000              		.cfi_remember_state
 3001              		.cfi_restore 80
 3002              		.cfi_restore 81
 3003              		.cfi_def_cfa_offset 8
 3004 00ae 10BD     		pop	{r4, pc}
 3005              	.L153:
 3006              		.cfi_restore_state
 3007              	.LBB1228:
 3008              	.LBB1222:
1166:Veno-Echo.cpp ****             {
 3009              		.loc 20 1166 13 is_stmt 1 view .LVU793
1166:Veno-Echo.cpp ****             {
 3010              		.loc 20 1166 16 is_stmt 0 view .LVU794
 3011 00b0 3D4B     		ldr	r3, .L179+12
1166:Veno-Echo.cpp ****             {
 3012              		.loc 20 1166 13 view .LVU795
 3013 00b2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3014 00b4 7AB9     		cbnz	r2, .L155
1168:Veno-Echo.cpp ****                 {
 3015              		.loc 20 1168 17 is_stmt 1 view .LVU796
 3016              	.LVL131:
 3017              	.LBB1193:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 160


 3018              	.LBI1193:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3019              		.loc 21 75 3 view .LVU797
 3020              	.LBB1194:
 3021              		.loc 21 76 5 view .LVU798
 3022              		.loc 21 76 5 is_stmt 0 view .LVU799
 3023              	.LBE1194:
 3024              	.LBE1193:
1168:Veno-Echo.cpp ****                 {
 3025              		.loc 20 1168 23 view .LVU800
 3026 00b6 3D4A     		ldr	r2, .L179+16
1168:Veno-Echo.cpp ****                 {
 3027              		.loc 20 1168 17 view .LVU801
 3028 00b8 9FED447A 		vldr.32	s14, .L179+48
1168:Veno-Echo.cpp ****                 {
 3029              		.loc 20 1168 23 view .LVU802
 3030 00bc D2ED007A 		vldr.32	s15, [r2]
 3031 00c0 70EE677A 		vsub.f32	s15, s0, s15
 3032              	.LBB1196:
 3033              	.LBB1195:
 3034              		.loc 21 76 31 view .LVU803
 3035 00c4 F0EEE77A 		vabs.f32	s15, s15
 3036              	.LBE1195:
 3037              	.LBE1196:
1168:Veno-Echo.cpp ****                 {
 3038              		.loc 20 1168 17 view .LVU804
 3039 00c8 F4EEC77A 		vcmpe.f32	s15, s14
 3040 00cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3041 00d0 ACDD     		ble	.L154
1170:Veno-Echo.cpp ****                 }
 3042              		.loc 20 1170 21 is_stmt 1 view .LVU805
1170:Veno-Echo.cpp ****                 }
 3043              		.loc 20 1170 38 is_stmt 0 view .LVU806
 3044 00d2 0122     		movs	r2, #1
 3045 00d4 1A70     		strb	r2, [r3]
 3046              	.L155:
1175:Veno-Echo.cpp ****         
 3047              		.loc 20 1175 9 is_stmt 1 view .LVU807
 3048              	.LVL132:
1177:Veno-Echo.cpp ****         {
 3049              		.loc 20 1177 9 view .LVU808
1179:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
 3050              		.loc 20 1179 13 view .LVU809
 3051              	.LBB1197:
 3052              	.LBI1197:
2014:Veno-Echo.cpp **** {
 3053              		.loc 20 2014 7 view .LVU810
 3054              	.LBB1198:
2016:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3055              		.loc 20 2016 5 view .LVU811
2017:Veno-Echo.cpp **** 
 3056              		.loc 20 2017 5 view .LVU812
 3057              	.LBE1198:
 3058              	.LBE1197:
1179:Veno-Echo.cpp ****             feedbackR_Last = feedbackR_Pot;  //update last value
 3059              		.loc 20 1179 41 is_stmt 0 view .LVU813
 3060 00d6 364B     		ldr	r3, .L179+20
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 161


 3061              	.LBB1201:
 3062              	.LBB1199:
2017:Veno-Echo.cpp **** 
 3063              		.loc 20 2017 39 view .LVU814
 3064 00d8 B7EE007A 		vmov.f32	s14, #1.0e+0
2017:Veno-Echo.cpp **** 
 3065              		.loc 20 2017 49 view .LVU815
 3066 00dc B6EE006A 		vmov.f32	s12, #5.0e-1
2017:Veno-Echo.cpp **** 
 3067              		.loc 20 2017 39 view .LVU816
 3068 00e0 D3ED007A 		vldr.32	s15, [r3]
2017:Veno-Echo.cpp **** 
 3069              		.loc 20 2017 12 view .LVU817
 3070 00e4 F0EE006A 		vmov.f32	s13, #2.0e+0
2017:Veno-Echo.cpp **** 
 3071              		.loc 20 2017 39 view .LVU818
 3072 00e8 77EE677A 		vsub.f32	s15, s14, s15
2017:Veno-Echo.cpp **** 
 3073              		.loc 20 2017 49 view .LVU819
 3074 00ec 77EEC67A 		vsub.f32	s15, s15, s12
2017:Veno-Echo.cpp **** 
 3075              		.loc 20 2017 12 view .LVU820
 3076 00f0 B0EE406A 		vmov.f32	s12, s0
 3077 00f4 A7EEA66A 		vfma.f32	s12, s15, s13
2019:Veno-Echo.cpp ****     {
 3078              		.loc 20 2019 5 view .LVU821
 3079 00f8 B5EEC06A 		vcmpe.f32	s12, #0
2017:Veno-Echo.cpp **** 
 3080              		.loc 20 2017 12 view .LVU822
 3081 00fc F0EE467A 		vmov.f32	s15, s12
 3082              	.LVL133:
2019:Veno-Echo.cpp ****     {
 3083              		.loc 20 2019 5 is_stmt 1 view .LVU823
 3084 0100 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3085 0104 47D4     		bmi	.L178
2024:Veno-Echo.cpp ****     {
 3086              		.loc 20 2024 5 view .LVU824
2026:Veno-Echo.cpp ****     }
 3087              		.loc 20 2026 16 is_stmt 0 view .LVU825
 3088 0106 F4EE477A 		vcmp.f32	s15, s14
 3089 010a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3090 010e 77FE277A 		vselgt.f32	s15, s14, s15
 3091              	.L157:
 3092              	.LVL134:
2029:Veno-Echo.cpp **** }
 3093              		.loc 20 2029 5 is_stmt 1 view .LVU826
2029:Veno-Echo.cpp **** }
 3094              		.loc 20 2029 5 is_stmt 0 view .LVU827
 3095              	.LBE1199:
 3096              	.LBE1201:
1180:Veno-Echo.cpp ****         }
 3097              		.loc 20 1180 13 is_stmt 1 view .LVU828
1180:Veno-Echo.cpp ****         }
 3098              		.loc 20 1180 28 is_stmt 0 view .LVU829
 3099 0112 284B     		ldr	r3, .L179+24
 3100 0114 83ED000A 		vstr.32	s0, [r3]
 3101 0118 A6E7     		b	.L159
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 162


 3102              	.LVL135:
 3103              	.L162:
1180:Veno-Echo.cpp ****         }
 3104              		.loc 20 1180 28 view .LVU830
 3105              	.LBE1222:
 3106              	.LBB1223:
1205:Veno-Echo.cpp ****             {
 3107              		.loc 20 1205 13 is_stmt 1 view .LVU831
1205:Veno-Echo.cpp ****             {
 3108              		.loc 20 1205 16 is_stmt 0 view .LVU832
 3109 011a 2A4B     		ldr	r3, .L179+40
1205:Veno-Echo.cpp ****             {
 3110              		.loc 20 1205 13 view .LVU833
 3111 011c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3112 011e 7AB9     		cbnz	r2, .L164
1207:Veno-Echo.cpp ****                 {
 3113              		.loc 20 1207 17 is_stmt 1 view .LVU834
 3114              	.LVL136:
 3115              	.LBB1207:
 3116              	.LBI1207:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3117              		.loc 21 75 3 view .LVU835
 3118              	.LBB1208:
 3119              		.loc 21 76 5 view .LVU836
 3120              		.loc 21 76 5 is_stmt 0 view .LVU837
 3121              	.LBE1208:
 3122              	.LBE1207:
1207:Veno-Echo.cpp ****                 {
 3123              		.loc 20 1207 23 view .LVU838
 3124 0120 294A     		ldr	r2, .L179+44
1207:Veno-Echo.cpp ****                 {
 3125              		.loc 20 1207 17 view .LVU839
 3126 0122 9FED2A7A 		vldr.32	s14, .L179+48
1207:Veno-Echo.cpp ****                 {
 3127              		.loc 20 1207 23 view .LVU840
 3128 0126 D2ED007A 		vldr.32	s15, [r2]
 3129 012a 70EE677A 		vsub.f32	s15, s0, s15
 3130              	.LBB1210:
 3131              	.LBB1209:
 3132              		.loc 21 76 31 view .LVU841
 3133 012e F0EEE77A 		vabs.f32	s15, s15
 3134              	.LBE1209:
 3135              	.LBE1210:
1207:Veno-Echo.cpp ****                 {
 3136              		.loc 20 1207 17 view .LVU842
 3137 0132 F4EEC77A 		vcmpe.f32	s15, s14
 3138 0136 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3139 013a B6DD     		ble	.L151
1209:Veno-Echo.cpp ****                 }
 3140              		.loc 20 1209 21 is_stmt 1 view .LVU843
1209:Veno-Echo.cpp ****                 }
 3141              		.loc 20 1209 37 is_stmt 0 view .LVU844
 3142 013c 0122     		movs	r2, #1
 3143 013e 1A70     		strb	r2, [r3]
 3144              	.L164:
1214:Veno-Echo.cpp ****         {
 3145              		.loc 20 1214 9 is_stmt 1 view .LVU845
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 163


 3146              	.LBB1211:
1216:Veno-Echo.cpp ****             LPCutoff = scale(feedbackR_Pot,minLPCut,maxLPCut,EXPONENTIAL);
 3147              		.loc 20 1216 13 view .LVU846
 3148              	.LVL137:
1217:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3149              		.loc 20 1217 13 view .LVU847
1217:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3150              		.loc 20 1217 29 is_stmt 0 view .LVU848
 3151 0140 9FED231A 		vldr.32	s2, .L179+52
 3152 0144 0120     		movs	r0, #1
 3153 0146 DFED230A 		vldr.32	s1, .L179+56
 3154 014a FFF7FEFF 		bl	_Z5scalefff9CurveType
 3155              	.LVL138:
1217:Veno-Echo.cpp ****             LPF_L.SetFreq(LPCutoff);
 3156              		.loc 20 1217 29 view .LVU849
 3157 014e B0EE408A 		vmov.f32	s16, s0
 3158              	.LVL139:
1218:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 3159              		.loc 20 1218 13 is_stmt 1 view .LVU850
1218:Veno-Echo.cpp ****             LPF_R.SetFreq(LPCutoff);
 3160              		.loc 20 1218 26 is_stmt 0 view .LVU851
 3161 0152 2148     		ldr	r0, .L179+60
 3162 0154 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3163              	.LVL140:
1219:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 3164              		.loc 20 1219 13 is_stmt 1 view .LVU852
1219:Veno-Echo.cpp ****             LPF_L_post.SetFreq(LPCutoff);
 3165              		.loc 20 1219 26 is_stmt 0 view .LVU853
 3166 0158 2048     		ldr	r0, .L179+64
 3167 015a B0EE480A 		vmov.f32	s0, s16
 3168 015e FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3169              	.LVL141:
1220:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 3170              		.loc 20 1220 13 is_stmt 1 view .LVU854
1220:Veno-Echo.cpp ****             LPF_R_post.SetFreq(LPCutoff);
 3171              		.loc 20 1220 31 is_stmt 0 view .LVU855
 3172 0162 B0EE480A 		vmov.f32	s0, s16
 3173 0166 1E48     		ldr	r0, .L179+68
 3174 0168 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3175              	.LVL142:
1221:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 3176              		.loc 20 1221 13 is_stmt 1 view .LVU856
1221:Veno-Echo.cpp ****             AltControls.LP_Cutoff = LPCutoff;
 3177              		.loc 20 1221 31 is_stmt 0 view .LVU857
 3178 016c B0EE480A 		vmov.f32	s0, s16
 3179 0170 1C48     		ldr	r0, .L179+72
 3180 0172 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 3181              	.LVL143:
1222:Veno-Echo.cpp ****             save_flag = true;
 3182              		.loc 20 1222 13 is_stmt 1 view .LVU858
1222:Veno-Echo.cpp ****             save_flag = true;
 3183              		.loc 20 1222 35 is_stmt 0 view .LVU859
 3184 0176 1C49     		ldr	r1, .L179+76
 3185              	.LBB1212:
 3186              	.LBB1213:
 3187              	.LBB1214:
 3188              	.LBB1215:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 164


 3189              	.LBB1216:
 3190              		.loc 22 397 18 view .LVU860
 3191 0178 1C4B     		ldr	r3, .L179+80
 3192 017a 0122     		movs	r2, #1
 3193              	.LBE1216:
 3194              	.LBE1215:
 3195              	.LBE1214:
 3196              	.LBE1213:
 3197              	.LBE1212:
1222:Veno-Echo.cpp ****             save_flag = true;
 3198              		.loc 20 1222 35 view .LVU861
 3199 017c 81ED058A 		vstr.32	s16, [r1, #20]
1223:Veno-Echo.cpp ****         }
 3200              		.loc 20 1223 13 is_stmt 1 view .LVU862
 3201              	.LVL144:
 3202              	.LBB1221:
 3203              	.LBI1212:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 3204              		.loc 23 80 5 view .LVU863
 3205              	.LBB1220:
 3206              		.loc 23 81 7 view .LVU864
 3207              	.LBB1219:
 3208              	.LBI1214:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 3209              		.loc 22 288 7 view .LVU865
 3210              	.LBB1218:
 3211              	.LBI1215:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 3212              		.loc 22 390 7 view .LVU866
 3213              	.LBB1217:
 3214              		.loc 22 397 18 is_stmt 0 view .LVU867
 3215 0180 BFF35B8F 		dmb	ish
 3216 0184 1A70     		strb	r2, [r3]
 3217 0186 BFF35B8F 		dmb	ish
 3218              	.LVL145:
 3219              		.loc 22 397 18 view .LVU868
 3220              	.LBE1217:
 3221              	.LBE1218:
 3222              	.LBE1219:
 3223              	.LBE1220:
 3224              	.LBE1221:
 3225              	.LBE1211:
 3226              	.LBE1223:
 3227              	.LBE1228:
1226:Veno-Echo.cpp **** 
 3228              		.loc 20 1226 1 view .LVU869
 3229 018a BDEC028B 		vldm	sp!, {d8}
 3230              		.cfi_remember_state
 3231              		.cfi_restore 80
 3232              		.cfi_restore 81
 3233              		.cfi_def_cfa_offset 8
 3234              	.LVL146:
1226:Veno-Echo.cpp **** 
 3235              		.loc 20 1226 1 view .LVU870
 3236 018e 10BD     		pop	{r4, pc}
 3237              	.LVL147:
 3238              	.L177:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 165


 3239              		.cfi_restore_state
 3240              	.LBB1229:
 3241              	.LBB1224:
 3242              	.LBB1202:
 3243              	.LBB1186:
2021:Veno-Echo.cpp ****     }
 3244              		.loc 20 2021 16 view .LVU871
 3245 0190 DFED097A 		vldr.32	s15, .L179+28
 3246              	.LVL148:
2021:Veno-Echo.cpp ****     }
 3247              		.loc 20 2021 16 view .LVU872
 3248 0194 68E7     		b	.L159
 3249              	.LVL149:
 3250              	.L178:
2021:Veno-Echo.cpp ****     }
 3251              		.loc 20 2021 16 view .LVU873
 3252              	.LBE1186:
 3253              	.LBE1202:
 3254              	.LBB1203:
 3255              	.LBB1200:
 3256 0196 DFED087A 		vldr.32	s15, .L179+28
 3257 019a BAE7     		b	.L157
 3258              	.L180:
 3259              		.align	2
 3260              	.L179:
 3261 019c 18000000 		.word	.LANCHOR4+24
 3262 01a0 00000000 		.word	.LANCHOR7
 3263 01a4 00000000 		.word	.LANCHOR40
 3264 01a8 00000000 		.word	.LANCHOR41
 3265 01ac 00000000 		.word	.LANCHOR42
 3266 01b0 00000000 		.word	.LANCHOR39
 3267 01b4 00000000 		.word	.LANCHOR43
 3268 01b8 00000000 		.word	0
 3269 01bc 00000000 		.word	.LANCHOR44
 3270 01c0 6F12033D 		.word	1023611503
 3271 01c4 00000000 		.word	.LANCHOR45
 3272 01c8 00000000 		.word	.LANCHOR46
 3273 01cc 0AD7A33B 		.word	1000593162
 3274 01d0 00803B46 		.word	1178304512
 3275 01d4 0080BB44 		.word	1153138688
 3276 01d8 00000000 		.word	.LANCHOR47
 3277 01dc 00000000 		.word	.LANCHOR48
 3278 01e0 00000000 		.word	.LANCHOR49
 3279 01e4 00000000 		.word	.LANCHOR50
 3280 01e8 00000000 		.word	.LANCHOR15
 3281 01ec 00000000 		.word	.LANCHOR16
 3282              	.LBE1200:
 3283              	.LBE1203:
 3284              	.LBE1224:
 3285              	.LBE1229:
 3286              		.cfi_endproc
 3287              	.LFE4780:
 3289              		.section	.text._Z16Update_drywet_CVv,"ax",%progbits
 3290              		.align	1
 3291              		.p2align 2,,3
 3292              		.global	_Z16Update_drywet_CVv
 3293              		.syntax unified
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 166


 3294              		.thumb
 3295              		.thumb_func
 3296              		.fpu fpv5-d16
 3298              	_Z16Update_drywet_CVv:
 3299              	.LFB4781:
1229:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 3300              		.loc 20 1229 1 is_stmt 1 view -0
 3301              		.cfi_startproc
 3302              		@ args = 0, pretend = 0, frame = 0
 3303              		@ frame_needed = 0, uses_anonymous_args = 0
1230:Veno-Echo.cpp **** }
 3304              		.loc 20 1230 5 view .LVU875
1229:Veno-Echo.cpp ****     drywet_CV = hw.adc.GetFloat(4);
 3305              		.loc 20 1229 1 is_stmt 0 view .LVU876
 3306 0000 08B5     		push	{r3, lr}
 3307              		.cfi_def_cfa_offset 8
 3308              		.cfi_offset 3, -8
 3309              		.cfi_offset 14, -4
1230:Veno-Echo.cpp **** }
 3310              		.loc 20 1230 32 view .LVU877
 3311 0002 0421     		movs	r1, #4
 3312 0004 0348     		ldr	r0, .L183
 3313 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3314              	.LVL150:
1230:Veno-Echo.cpp **** }
 3315              		.loc 20 1230 15 view .LVU878
 3316 000a 034B     		ldr	r3, .L183+4
 3317 000c 83ED000A 		vstr.32	s0, [r3]
1231:Veno-Echo.cpp **** 
 3318              		.loc 20 1231 1 view .LVU879
 3319 0010 08BD     		pop	{r3, pc}
 3320              	.L184:
 3321 0012 00BF     		.align	2
 3322              	.L183:
 3323 0014 18000000 		.word	.LANCHOR4+24
 3324 0018 00000000 		.word	.LANCHOR51
 3325              		.cfi_endproc
 3326              	.LFE4781:
 3328              		.section	.text._Z13Update_drywetv,"ax",%progbits
 3329              		.align	1
 3330              		.p2align 2,,3
 3331              		.global	_Z13Update_drywetv
 3332              		.syntax unified
 3333              		.thumb
 3334              		.thumb_func
 3335              		.fpu fpv5-d16
 3337              	_Z13Update_drywetv:
 3338              	.LFB4782:
1234:Veno-Echo.cpp ****     static bool lastShift{};
 3339              		.loc 20 1234 1 is_stmt 1 view -0
 3340              		.cfi_startproc
 3341              		@ args = 0, pretend = 0, frame = 0
 3342              		@ frame_needed = 0, uses_anonymous_args = 0
1235:Veno-Echo.cpp ****     static bool drywet_pickup{};
 3343              		.loc 20 1235 5 view .LVU881
1236:Veno-Echo.cpp ****     static bool Res_pickup{};
 3344              		.loc 20 1236 5 view .LVU882
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 167


1237:Veno-Echo.cpp **** 
 3345              		.loc 20 1237 5 view .LVU883
1239:Veno-Echo.cpp ****     //static float Res_Last{}; //last res value (unscaled)
 3346              		.loc 20 1239 5 view .LVU884
1244:Veno-Echo.cpp **** 
 3347              		.loc 20 1244 5 view .LVU885
1244:Veno-Echo.cpp **** 
 3348              		.loc 20 1244 40 is_stmt 0 view .LVU886
 3349 0000 0522     		movs	r2, #5
 3350 0002 0721     		movs	r1, #7
 3351 0004 8248     		ldr	r0, .L218+24
1234:Veno-Echo.cpp ****     static bool lastShift{};
 3352              		.loc 20 1234 1 view .LVU887
 3353 0006 10B5     		push	{r4, lr}
 3354              		.cfi_def_cfa_offset 8
 3355              		.cfi_offset 4, -8
 3356              		.cfi_offset 14, -4
 3357 0008 2DED028B 		vpush.64	{d8}
 3358              		.cfi_def_cfa_offset 16
 3359              		.cfi_offset 80, -16
 3360              		.cfi_offset 81, -12
1244:Veno-Echo.cpp **** 
 3361              		.loc 20 1244 40 view .LVU888
 3362 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3363              	.LVL151:
 3364              	.LBB1230:
1246:Veno-Echo.cpp ****     {   
 3365              		.loc 20 1246 9 view .LVU889
 3366 0010 804B     		ldr	r3, .L218+28
 3367              	.LVL152:
1246:Veno-Echo.cpp ****     {   
 3368              		.loc 20 1246 9 view .LVU890
 3369              	.LBE1230:
1246:Veno-Echo.cpp ****     {   
 3370              		.loc 20 1246 5 is_stmt 1 view .LVU891
 3371              	.LBB1273:
 3372              	.LBB1231:
1251:Veno-Echo.cpp ****         {
 3373              		.loc 20 1251 19 is_stmt 0 view .LVU892
 3374 0012 814A     		ldr	r2, .L218+32
 3375              	.LBE1231:
1246:Veno-Echo.cpp ****     {   
 3376              		.loc 20 1246 5 view .LVU893
 3377 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3378 0016 B3BB     		cbnz	r3, .L186
 3379              	.LBB1252:
1249:Veno-Echo.cpp **** 
 3380              		.loc 20 1249 9 is_stmt 1 view .LVU894
1251:Veno-Echo.cpp ****         {
 3381              		.loc 20 1251 9 view .LVU895
 3382 0018 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3383 001a 0029     		cmp	r1, #0
 3384 001c 40D0     		beq	.L187
1253:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 3385              		.loc 20 1253 13 view .LVU896
1255:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3386              		.loc 20 1255 27 is_stmt 0 view .LVU897
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 168


 3387 001e 7F48     		ldr	r0, .L218+36
1256:Veno-Echo.cpp ****         } 
 3388              		.loc 20 1256 24 view .LVU898
 3389 0020 7F49     		ldr	r1, .L218+40
1253:Veno-Echo.cpp ****             //drywet_pickup = checkPickupState(drywet_Pot,drywet_Last,drywet_pickup,true);
 3390              		.loc 20 1253 23 view .LVU899
 3391 0022 1370     		strb	r3, [r2]
1255:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3392              		.loc 20 1255 13 is_stmt 1 view .LVU900
1255:Veno-Echo.cpp ****             drywet_new = drywet_Pot; //update new value
 3393              		.loc 20 1255 27 is_stmt 0 view .LVU901
 3394 0024 0370     		strb	r3, [r0]
1256:Veno-Echo.cpp ****         } 
 3395              		.loc 20 1256 13 is_stmt 1 view .LVU902
1256:Veno-Echo.cpp ****         } 
 3396              		.loc 20 1256 24 is_stmt 0 view .LVU903
 3397 0026 81ED000A 		vstr.32	s0, [r1]
 3398              	.L188:
1272:Veno-Echo.cpp **** 
 3399              		.loc 20 1272 9 is_stmt 1 view .LVU904
 3400              	.LVL153:
1274:Veno-Echo.cpp ****         {
 3401              		.loc 20 1274 9 view .LVU905
1282:Veno-Echo.cpp ****         }
 3402              		.loc 20 1282 13 view .LVU906
 3403              	.LBB1232:
 3404              	.LBI1232:
2014:Veno-Echo.cpp **** {
 3405              		.loc 20 2014 7 view .LVU907
 3406              	.LBB1233:
2016:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3407              		.loc 20 2016 5 view .LVU908
2017:Veno-Echo.cpp **** 
 3408              		.loc 20 2017 5 view .LVU909
 3409              	.LBE1233:
 3410              	.LBE1232:
1282:Veno-Echo.cpp ****         }
 3411              		.loc 20 1282 37 is_stmt 0 view .LVU910
 3412 002a 7E4A     		ldr	r2, .L218+44
 3413              	.LBB1236:
 3414              	.LBB1234:
2017:Veno-Echo.cpp **** 
 3415              		.loc 20 2017 39 view .LVU911
 3416 002c F7EE006A 		vmov.f32	s13, #1.0e+0
2017:Veno-Echo.cpp **** 
 3417              		.loc 20 2017 49 view .LVU912
 3418 0030 F6EE005A 		vmov.f32	s11, #5.0e-1
 3419              	.LBE1234:
 3420              	.LBE1236:
1282:Veno-Echo.cpp ****         }
 3421              		.loc 20 1282 37 view .LVU913
 3422 0034 7C4B     		ldr	r3, .L218+48
 3423              	.LBB1237:
 3424              	.LBB1235:
2017:Veno-Echo.cpp **** 
 3425              		.loc 20 2017 39 view .LVU914
 3426 0036 92ED007A 		vldr.32	s14, [r2]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 169


2017:Veno-Echo.cpp **** 
 3427              		.loc 20 2017 12 view .LVU915
 3428 003a B0EE006A 		vmov.f32	s12, #2.0e+0
 3429 003e D3ED007A 		vldr.32	s15, [r3]
2017:Veno-Echo.cpp **** 
 3430              		.loc 20 2017 39 view .LVU916
 3431 0042 36EEC77A 		vsub.f32	s14, s13, s14
2017:Veno-Echo.cpp **** 
 3432              		.loc 20 2017 49 view .LVU917
 3433 0046 37EE657A 		vsub.f32	s14, s14, s11
2017:Veno-Echo.cpp **** 
 3434              		.loc 20 2017 12 view .LVU918
 3435 004a E7EE067A 		vfma.f32	s15, s14, s12
 3436              	.LVL154:
2019:Veno-Echo.cpp ****     {
 3437              		.loc 20 2019 5 is_stmt 1 view .LVU919
 3438 004e F5EEC07A 		vcmpe.f32	s15, #0
 3439 0052 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3440 0056 00F1C180 		bmi	.L205
2024:Veno-Echo.cpp ****     {
 3441              		.loc 20 2024 5 view .LVU920
 3442 005a F4EEE67A 		vcmpe.f32	s15, s13
 3443 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3444 0062 40F3C680 		ble	.L211
 3445              	.LVL155:
 3446              	.L196:
2024:Veno-Echo.cpp ****     {
 3447              		.loc 20 2024 5 is_stmt 0 view .LVU921
 3448              	.LBE1235:
 3449              	.LBE1237:
1289:Veno-Echo.cpp ****         }
 3450              		.loc 20 1289 26 view .LVU922
 3451 0066 B7EE000A 		vmov.f32	s0, #1.0e+0
 3452              	.LVL156:
 3453              	.L195:
1301:Veno-Echo.cpp ****     }
 3454              		.loc 20 1301 9 is_stmt 1 view .LVU923
 3455              	.LBB1238:
 3456              	.LBI1238:
 135:../DaisySP/Source/Utility/dsp.h **** {
 3457              		.loc 25 135 13 view .LVU924
 3458              	.LBB1239:
 3459              		.loc 25 137 5 view .LVU925
 3460              		.loc 25 137 9 is_stmt 0 view .LVU926
 3461 006a 704B     		ldr	r3, .L218+52
 3462 006c 9FED707A 		vldr.32	s14, .L218+56
 3463 0070 D3ED007A 		vldr.32	s15, [r3]
 3464              		.loc 25 137 24 view .LVU927
 3465 0074 30EE670A 		vsub.f32	s0, s0, s15
 3466              	.LVL157:
 3467              		.loc 25 137 24 view .LVU928
 3468              	.LBE1239:
 3469              	.LBE1238:
 3470              	.LBE1252:
 3471              	.LBE1273:
1341:Veno-Echo.cpp **** 
 3472              		.loc 20 1341 1 view .LVU929
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 170


 3473 0078 BDEC028B 		vldm	sp!, {d8}
 3474              		.cfi_remember_state
 3475              		.cfi_restore 80
 3476              		.cfi_restore 81
 3477              		.cfi_def_cfa_offset 8
 3478              	.LBB1274:
 3479              	.LBB1253:
 3480              	.LBB1241:
 3481              	.LBB1240:
 3482              		.loc 25 137 9 view .LVU930
 3483 007c E0EE077A 		vfma.f32	s15, s0, s14
 3484 0080 C3ED007A 		vstr.32	s15, [r3]
 3485              	.LBE1240:
 3486              	.LBE1241:
 3487              	.LBE1253:
 3488              	.LBE1274:
1341:Veno-Echo.cpp **** 
 3489              		.loc 20 1341 1 view .LVU931
 3490 0084 10BD     		pop	{r4, pc}
 3491              	.LVL158:
 3492              	.L186:
 3493              		.cfi_restore_state
 3494              	.LBB1275:
 3495              	.LBB1254:
1305:Veno-Echo.cpp **** 
 3496              		.loc 20 1305 9 is_stmt 1 view .LVU932
1307:Veno-Echo.cpp ****         {
 3497              		.loc 20 1307 9 view .LVU933
 3498 0086 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 3499 0088 002B     		cmp	r3, #0
 3500 008a 58D1     		bne	.L200
1309:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3501              		.loc 20 1309 13 view .LVU934
1309:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3502              		.loc 20 1309 23 is_stmt 0 view .LVU935
 3503 008c 0124     		movs	r4, #1
1310:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3504              		.loc 20 1310 24 view .LVU936
 3505 008e 6948     		ldr	r0, .L218+60
1311:Veno-Echo.cpp ****         }
 3506              		.loc 20 1311 21 view .LVU937
 3507 0090 6949     		ldr	r1, .L218+64
1309:Veno-Echo.cpp ****             Res_pickup = false; //set not picked up
 3508              		.loc 20 1309 23 view .LVU938
 3509 0092 1470     		strb	r4, [r2]
1310:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3510              		.loc 20 1310 13 is_stmt 1 view .LVU939
1310:Veno-Echo.cpp ****             Res_new = drywet_Pot;   //update new
 3511              		.loc 20 1310 24 is_stmt 0 view .LVU940
 3512 0094 0370     		strb	r3, [r0]
1311:Veno-Echo.cpp ****         }
 3513              		.loc 20 1311 13 is_stmt 1 view .LVU941
1311:Veno-Echo.cpp ****         }
 3514              		.loc 20 1311 21 is_stmt 0 view .LVU942
 3515 0096 81ED000A 		vstr.32	s0, [r1]
 3516              	.L185:
1311:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 171


 3517              		.loc 20 1311 21 view .LVU943
 3518              	.LBE1254:
 3519              	.LBE1275:
1341:Veno-Echo.cpp **** 
 3520              		.loc 20 1341 1 view .LVU944
 3521 009a BDEC028B 		vldm	sp!, {d8}
 3522              		.cfi_remember_state
 3523              		.cfi_restore 80
 3524              		.cfi_restore 81
 3525              		.cfi_def_cfa_offset 8
 3526 009e 10BD     		pop	{r4, pc}
 3527              	.L187:
 3528              		.cfi_restore_state
 3529              	.LBB1276:
 3530              	.LBB1270:
1261:Veno-Echo.cpp ****             {
 3531              		.loc 20 1261 13 is_stmt 1 view .LVU945
1261:Veno-Echo.cpp ****             {
 3532              		.loc 20 1261 16 is_stmt 0 view .LVU946
 3533 00a0 5E4B     		ldr	r3, .L218+36
1261:Veno-Echo.cpp ****             {
 3534              		.loc 20 1261 13 view .LVU947
 3535 00a2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3536 00a4 7AB9     		cbnz	r2, .L189
1264:Veno-Echo.cpp ****                 {
 3537              		.loc 20 1264 17 is_stmt 1 view .LVU948
 3538              	.LVL159:
 3539              	.LBB1242:
 3540              	.LBI1242:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3541              		.loc 21 75 3 view .LVU949
 3542              	.LBB1243:
 3543              		.loc 21 76 5 view .LVU950
 3544              		.loc 21 76 5 is_stmt 0 view .LVU951
 3545              	.LBE1243:
 3546              	.LBE1242:
1264:Veno-Echo.cpp ****                 {
 3547              		.loc 20 1264 23 view .LVU952
 3548 00a6 5E4A     		ldr	r2, .L218+40
1264:Veno-Echo.cpp ****                 {
 3549              		.loc 20 1264 17 view .LVU953
 3550 00a8 9FED647A 		vldr.32	s14, .L218+68
1264:Veno-Echo.cpp ****                 {
 3551              		.loc 20 1264 23 view .LVU954
 3552 00ac D2ED007A 		vldr.32	s15, [r2]
 3553 00b0 70EE677A 		vsub.f32	s15, s0, s15
 3554              	.LBB1245:
 3555              	.LBB1244:
 3556              		.loc 21 76 31 view .LVU955
 3557 00b4 F0EEE77A 		vabs.f32	s15, s15
 3558              	.LBE1244:
 3559              	.LBE1245:
1264:Veno-Echo.cpp ****                 {
 3560              		.loc 20 1264 17 view .LVU956
 3561 00b8 F4EEC77A 		vcmpe.f32	s15, s14
 3562 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3563 00c0 B3DD     		ble	.L188
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 172


1266:Veno-Echo.cpp ****                 }
 3564              		.loc 20 1266 21 is_stmt 1 view .LVU957
1266:Veno-Echo.cpp ****                 }
 3565              		.loc 20 1266 35 is_stmt 0 view .LVU958
 3566 00c2 0122     		movs	r2, #1
 3567 00c4 1A70     		strb	r2, [r3]
 3568              	.L189:
1272:Veno-Echo.cpp **** 
 3569              		.loc 20 1272 9 is_stmt 1 view .LVU959
 3570              	.LVL160:
1274:Veno-Echo.cpp ****         {
 3571              		.loc 20 1274 9 view .LVU960
1276:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 3572              		.loc 20 1276 13 view .LVU961
 3573              	.LBB1246:
 3574              	.LBI1246:
2014:Veno-Echo.cpp **** {
 3575              		.loc 20 2014 7 view .LVU962
 3576              	.LBB1247:
2016:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 3577              		.loc 20 2016 5 view .LVU963
2017:Veno-Echo.cpp **** 
 3578              		.loc 20 2017 5 view .LVU964
 3579              	.LBE1247:
 3580              	.LBE1246:
1276:Veno-Echo.cpp ****             drywet_Last = drywet_Pot; //update last value
 3581              		.loc 20 1276 37 is_stmt 0 view .LVU965
 3582 00c6 574B     		ldr	r3, .L218+44
 3583              	.LBB1250:
 3584              	.LBB1248:
2017:Veno-Echo.cpp **** 
 3585              		.loc 20 2017 39 view .LVU966
 3586 00c8 B7EE007A 		vmov.f32	s14, #1.0e+0
2017:Veno-Echo.cpp **** 
 3587              		.loc 20 2017 49 view .LVU967
 3588 00cc B6EE006A 		vmov.f32	s12, #5.0e-1
2017:Veno-Echo.cpp **** 
 3589              		.loc 20 2017 39 view .LVU968
 3590 00d0 D3ED007A 		vldr.32	s15, [r3]
2017:Veno-Echo.cpp **** 
 3591              		.loc 20 2017 12 view .LVU969
 3592 00d4 F0EE006A 		vmov.f32	s13, #2.0e+0
2017:Veno-Echo.cpp **** 
 3593              		.loc 20 2017 39 view .LVU970
 3594 00d8 77EE677A 		vsub.f32	s15, s14, s15
2017:Veno-Echo.cpp **** 
 3595              		.loc 20 2017 49 view .LVU971
 3596 00dc 77EEC67A 		vsub.f32	s15, s15, s12
2017:Veno-Echo.cpp **** 
 3597              		.loc 20 2017 12 view .LVU972
 3598 00e0 B0EE406A 		vmov.f32	s12, s0
 3599 00e4 A7EEA66A 		vfma.f32	s12, s15, s13
2019:Veno-Echo.cpp ****     {
 3600              		.loc 20 2019 5 view .LVU973
 3601 00e8 B5EEC06A 		vcmpe.f32	s12, #0
2017:Veno-Echo.cpp **** 
 3602              		.loc 20 2017 12 view .LVU974
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 173


 3603 00ec F0EE467A 		vmov.f32	s15, s12
 3604              	.LVL161:
2019:Veno-Echo.cpp ****     {
 3605              		.loc 20 2019 5 is_stmt 1 view .LVU975
 3606 00f0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3607 00f4 75D4     		bmi	.L216
2024:Veno-Echo.cpp ****     {
 3608              		.loc 20 2024 5 view .LVU976
 3609 00f6 F4EEC77A 		vcmpe.f32	s15, s14
 3610 00fa F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3611 00fe 75DD     		ble	.L217
2026:Veno-Echo.cpp ****     }
 3612              		.loc 20 2026 16 is_stmt 0 view .LVU977
 3613 0100 F0EE477A 		vmov.f32	s15, s14
 3614 0104 B7EE006B 		vmov.f64	d6, #1.0e+0
 3615              	.LVL162:
 3616              	.L191:
2029:Veno-Echo.cpp **** }
 3617              		.loc 20 2029 5 is_stmt 1 view .LVU978
2029:Veno-Echo.cpp **** }
 3618              		.loc 20 2029 5 is_stmt 0 view .LVU979
 3619              	.LBE1248:
 3620              	.LBE1250:
1277:Veno-Echo.cpp ****         }
 3621              		.loc 20 1277 13 is_stmt 1 view .LVU980
1277:Veno-Echo.cpp ****         }
 3622              		.loc 20 1277 25 is_stmt 0 view .LVU981
 3623 0108 474B     		ldr	r3, .L218+48
 3624 010a 83ED000A 		vstr.32	s0, [r3]
 3625              	.LVL163:
 3626              	.L192:
1285:Veno-Echo.cpp **** 
 3627              		.loc 20 1285 9 is_stmt 1 view .LVU982
1287:Veno-Echo.cpp ****         {
 3628              		.loc 20 1287 9 view .LVU983
 3629 010e 9FED3A5B 		vldr.64	d5, .L218
 3630 0112 B4EEC56B 		vcmpe.f64	d6, d5
 3631 0116 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3632 011a A4DA     		bge	.L196
1291:Veno-Echo.cpp ****         {
 3633              		.loc 20 1291 14 view .LVU984
 3634 011c 9FED385B 		vldr.64	d5, .L218+8
 3635 0120 B4EEC56B 		vcmpe.f64	d6, d5
 3636 0124 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3637 0128 58D9     		bls	.L205
1297:Veno-Echo.cpp ****         }
 3638              		.loc 20 1297 13 view .LVU985
1297:Veno-Echo.cpp ****         }
 3639              		.loc 20 1297 33 is_stmt 0 view .LVU986
 3640 012a B0EE670A 		vmov.f32	s0, s15
 3641              	.LVL164:
1297:Veno-Echo.cpp ****         }
 3642              		.loc 20 1297 33 view .LVU987
 3643 012e 0020     		movs	r0, #0
 3644 0130 B7EE001A 		vmov.f32	s2, #1.0e+0
 3645 0134 DFED420A 		vldr.32	s1, .L218+72
 3646 0138 FFF7FEFF 		bl	_Z5scalefff9CurveType
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 174


 3647              	.LVL165:
1297:Veno-Echo.cpp ****         }
 3648              		.loc 20 1297 33 view .LVU988
 3649 013c 95E7     		b	.L195
 3650              	.LVL166:
 3651              	.L200:
1297:Veno-Echo.cpp ****         }
 3652              		.loc 20 1297 33 view .LVU989
 3653              	.LBE1270:
 3654              	.LBB1271:
1316:Veno-Echo.cpp ****             {
 3655              		.loc 20 1316 13 is_stmt 1 view .LVU990
1316:Veno-Echo.cpp ****             {
 3656              		.loc 20 1316 16 is_stmt 0 view .LVU991
 3657 013e 3D4B     		ldr	r3, .L218+60
1316:Veno-Echo.cpp ****             {
 3658              		.loc 20 1316 13 view .LVU992
 3659 0140 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3660 0142 7AB9     		cbnz	r2, .L202
1318:Veno-Echo.cpp ****                 {
 3661              		.loc 20 1318 17 is_stmt 1 view .LVU993
 3662              	.LVL167:
 3663              	.LBB1255:
 3664              	.LBI1255:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 3665              		.loc 21 75 3 view .LVU994
 3666              	.LBB1256:
 3667              		.loc 21 76 5 view .LVU995
 3668              		.loc 21 76 5 is_stmt 0 view .LVU996
 3669              	.LBE1256:
 3670              	.LBE1255:
1318:Veno-Echo.cpp ****                 {
 3671              		.loc 20 1318 23 view .LVU997
 3672 0144 3C4A     		ldr	r2, .L218+64
1318:Veno-Echo.cpp ****                 {
 3673              		.loc 20 1318 17 view .LVU998
 3674 0146 9FED3D7A 		vldr.32	s14, .L218+68
1318:Veno-Echo.cpp ****                 {
 3675              		.loc 20 1318 23 view .LVU999
 3676 014a D2ED007A 		vldr.32	s15, [r2]
 3677 014e 70EE677A 		vsub.f32	s15, s0, s15
 3678              	.LBB1258:
 3679              	.LBB1257:
 3680              		.loc 21 76 31 view .LVU1000
 3681 0152 F0EEE77A 		vabs.f32	s15, s15
 3682              	.LBE1257:
 3683              	.LBE1258:
1318:Veno-Echo.cpp ****                 {
 3684              		.loc 20 1318 17 view .LVU1001
 3685 0156 F4EEC77A 		vcmpe.f32	s15, s14
 3686 015a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 3687 015e 9CDD     		ble	.L185
1320:Veno-Echo.cpp ****                 }
 3688              		.loc 20 1320 21 is_stmt 1 view .LVU1002
1320:Veno-Echo.cpp ****                 }
 3689              		.loc 20 1320 32 is_stmt 0 view .LVU1003
 3690 0160 0122     		movs	r2, #1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 175


 3691 0162 1A70     		strb	r2, [r3]
 3692              	.L202:
1325:Veno-Echo.cpp ****         {
 3693              		.loc 20 1325 9 is_stmt 1 view .LVU1004
 3694              	.LBB1259:
1327:Veno-Echo.cpp ****             Res = scale(drywet_Pot,minRes,maxRes,LINEAR);
 3695              		.loc 20 1327 13 view .LVU1005
 3696              	.LVL168:
1328:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3697              		.loc 20 1328 13 view .LVU1006
1328:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3698              		.loc 20 1328 24 is_stmt 0 view .LVU1007
 3699 0164 B6EE001A 		vmov.f32	s2, #5.0e-1
 3700 0168 DFED350A 		vldr.32	s1, .L218+72
 3701 016c 0020     		movs	r0, #0
 3702 016e FFF7FEFF 		bl	_Z5scalefff9CurveType
 3703              	.LVL169:
1328:Veno-Echo.cpp ****             LPF_L.SetRes(Res);
 3704              		.loc 20 1328 24 view .LVU1008
 3705 0172 B0EE408A 		vmov.f32	s16, s0
 3706              	.LVL170:
1329:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 3707              		.loc 20 1329 13 is_stmt 1 view .LVU1009
1329:Veno-Echo.cpp ****             LPF_R.SetRes(Res);
 3708              		.loc 20 1329 25 is_stmt 0 view .LVU1010
 3709 0176 3348     		ldr	r0, .L218+76
 3710 0178 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3711              	.LVL171:
1330:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 3712              		.loc 20 1330 13 is_stmt 1 view .LVU1011
1330:Veno-Echo.cpp ****             HPF_L.SetRes(Res);
 3713              		.loc 20 1330 25 is_stmt 0 view .LVU1012
 3714 017c 3248     		ldr	r0, .L218+80
 3715 017e B0EE480A 		vmov.f32	s0, s16
 3716 0182 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3717              	.LVL172:
1331:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 3718              		.loc 20 1331 13 is_stmt 1 view .LVU1013
1331:Veno-Echo.cpp ****             HPF_R.SetRes(Res);
 3719              		.loc 20 1331 25 is_stmt 0 view .LVU1014
 3720 0186 B0EE480A 		vmov.f32	s0, s16
 3721 018a 3048     		ldr	r0, .L218+84
 3722 018c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3723              	.LVL173:
1332:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 3724              		.loc 20 1332 13 is_stmt 1 view .LVU1015
1332:Veno-Echo.cpp ****             LPF_L_post.SetRes(Res);
 3725              		.loc 20 1332 25 is_stmt 0 view .LVU1016
 3726 0190 B0EE480A 		vmov.f32	s0, s16
 3727 0194 2E48     		ldr	r0, .L218+88
 3728 0196 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3729              	.LVL174:
1333:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 3730              		.loc 20 1333 13 is_stmt 1 view .LVU1017
1333:Veno-Echo.cpp ****             LPF_R_post.SetRes(Res);
 3731              		.loc 20 1333 30 is_stmt 0 view .LVU1018
 3732 019a B0EE480A 		vmov.f32	s0, s16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 176


 3733 019e 2D48     		ldr	r0, .L218+92
 3734 01a0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3735              	.LVL175:
1334:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 3736              		.loc 20 1334 13 is_stmt 1 view .LVU1019
1334:Veno-Echo.cpp ****             HPF_L_post.SetRes(Res);
 3737              		.loc 20 1334 30 is_stmt 0 view .LVU1020
 3738 01a4 B0EE480A 		vmov.f32	s0, s16
 3739 01a8 2B48     		ldr	r0, .L218+96
 3740 01aa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3741              	.LVL176:
1335:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 3742              		.loc 20 1335 13 is_stmt 1 view .LVU1021
1335:Veno-Echo.cpp ****             HPF_R_post.SetRes(Res);
 3743              		.loc 20 1335 30 is_stmt 0 view .LVU1022
 3744 01ae B0EE480A 		vmov.f32	s0, s16
 3745 01b2 2A48     		ldr	r0, .L218+100
 3746 01b4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3747              	.LVL177:
1336:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 3748              		.loc 20 1336 13 is_stmt 1 view .LVU1023
1336:Veno-Echo.cpp ****             AltControls.Resonance = Res;
 3749              		.loc 20 1336 30 is_stmt 0 view .LVU1024
 3750 01b8 B0EE480A 		vmov.f32	s0, s16
 3751 01bc 2848     		ldr	r0, .L218+104
 3752 01be FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 3753              	.LVL178:
1337:Veno-Echo.cpp ****             save_flag = true;
 3754              		.loc 20 1337 13 is_stmt 1 view .LVU1025
1337:Veno-Echo.cpp ****             save_flag = true;
 3755              		.loc 20 1337 35 is_stmt 0 view .LVU1026
 3756 01c2 2849     		ldr	r1, .L218+108
 3757              	.LBB1260:
 3758              	.LBB1261:
 3759              	.LBB1262:
 3760              	.LBB1263:
 3761              	.LBB1264:
 3762              		.loc 22 397 18 view .LVU1027
 3763 01c4 284B     		ldr	r3, .L218+112
 3764 01c6 0122     		movs	r2, #1
 3765              	.LBE1264:
 3766              	.LBE1263:
 3767              	.LBE1262:
 3768              	.LBE1261:
 3769              	.LBE1260:
1337:Veno-Echo.cpp ****             save_flag = true;
 3770              		.loc 20 1337 35 view .LVU1028
 3771 01c8 81ED068A 		vstr.32	s16, [r1, #24]
1338:Veno-Echo.cpp ****         }
 3772              		.loc 20 1338 13 is_stmt 1 view .LVU1029
 3773              	.LVL179:
 3774              	.LBB1269:
 3775              	.LBI1260:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 3776              		.loc 23 80 5 view .LVU1030
 3777              	.LBB1268:
 3778              		.loc 23 81 7 view .LVU1031
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 177


 3779              	.LBB1267:
 3780              	.LBI1262:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 3781              		.loc 22 288 7 view .LVU1032
 3782              	.LBB1266:
 3783              	.LBI1263:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 3784              		.loc 22 390 7 view .LVU1033
 3785              	.LBB1265:
 3786              		.loc 22 397 18 is_stmt 0 view .LVU1034
 3787 01cc BFF35B8F 		dmb	ish
 3788 01d0 1A70     		strb	r2, [r3]
 3789 01d2 BFF35B8F 		dmb	ish
 3790              	.LVL180:
 3791              		.loc 22 397 18 view .LVU1035
 3792              	.LBE1265:
 3793              	.LBE1266:
 3794              	.LBE1267:
 3795              	.LBE1268:
 3796              	.LBE1269:
 3797              	.LBE1259:
 3798              	.LBE1271:
 3799              	.LBE1276:
1341:Veno-Echo.cpp **** 
 3800              		.loc 20 1341 1 view .LVU1036
 3801 01d6 BDEC028B 		vldm	sp!, {d8}
 3802              		.cfi_remember_state
 3803              		.cfi_restore 80
 3804              		.cfi_restore 81
 3805              		.cfi_def_cfa_offset 8
 3806              	.LVL181:
1341:Veno-Echo.cpp **** 
 3807              		.loc 20 1341 1 view .LVU1037
 3808 01da 10BD     		pop	{r4, pc}
 3809              	.LVL182:
 3810              	.L205:
 3811              		.cfi_restore_state
 3812              	.LBB1277:
 3813              	.LBB1272:
1293:Veno-Echo.cpp ****         }
 3814              		.loc 20 1293 26 view .LVU1038
 3815 01dc 9FED180A 		vldr.32	s0, .L218+72
 3816              	.LVL183:
1293:Veno-Echo.cpp ****         }
 3817              		.loc 20 1293 26 view .LVU1039
 3818 01e0 43E7     		b	.L195
 3819              	.LVL184:
 3820              	.L216:
 3821              	.LBB1251:
 3822              	.LBB1249:
1293:Veno-Echo.cpp ****         }
 3823              		.loc 20 1293 26 view .LVU1040
 3824 01e2 9FED096B 		vldr.64	d6, .L218+16
 3825              	.LVL185:
2021:Veno-Echo.cpp ****     }
 3826              		.loc 20 2021 16 view .LVU1041
 3827 01e6 DFED167A 		vldr.32	s15, .L218+72
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 178


 3828              	.LVL186:
2021:Veno-Echo.cpp ****     }
 3829              		.loc 20 2021 16 view .LVU1042
 3830 01ea 8DE7     		b	.L191
 3831              	.LVL187:
 3832              	.L217:
2021:Veno-Echo.cpp ****     }
 3833              		.loc 20 2021 16 view .LVU1043
 3834 01ec B7EEE76A 		vcvt.f64.f32	d6, s15
 3835              	.LVL188:
2021:Veno-Echo.cpp ****     }
 3836              		.loc 20 2021 16 view .LVU1044
 3837 01f0 8AE7     		b	.L191
 3838              	.LVL189:
 3839              	.L211:
2021:Veno-Echo.cpp ****     }
 3840              		.loc 20 2021 16 view .LVU1045
 3841 01f2 B7EEE76A 		vcvt.f64.f32	d6, s15
 3842 01f6 8AE7     		b	.L192
 3843              	.L219:
 3844              		.align	3
 3845              	.L218:
 3846 01f8 5C8FC2F5 		.word	4123168604
 3847 01fc 285CEF3F 		.word	1072651304
 3848 0200 7B14AE47 		.word	1202590843
 3849 0204 E17A943F 		.word	1066695393
 3850 0208 00000000 		.word	0
 3851 020c 00000000 		.word	0
 3852 0210 18000000 		.word	.LANCHOR4+24
 3853 0214 00000000 		.word	.LANCHOR7
 3854 0218 00000000 		.word	.LANCHOR52
 3855 021c 00000000 		.word	.LANCHOR53
 3856 0220 00000000 		.word	.LANCHOR54
 3857 0224 00000000 		.word	.LANCHOR51
 3858 0228 00000000 		.word	.LANCHOR55
 3859 022c 00000000 		.word	.LANCHOR56
 3860 0230 6F12833C 		.word	1015222895
 3861 0234 00000000 		.word	.LANCHOR57
 3862 0238 00000000 		.word	.LANCHOR58
 3863 023c 0AD7A33B 		.word	1000593162
 3864 0240 00000000 		.word	0
 3865 0244 00000000 		.word	.LANCHOR47
 3866 0248 00000000 		.word	.LANCHOR48
 3867 024c 00000000 		.word	.LANCHOR35
 3868 0250 00000000 		.word	.LANCHOR36
 3869 0254 00000000 		.word	.LANCHOR49
 3870 0258 00000000 		.word	.LANCHOR50
 3871 025c 00000000 		.word	.LANCHOR37
 3872 0260 00000000 		.word	.LANCHOR38
 3873 0264 00000000 		.word	.LANCHOR15
 3874 0268 00000000 		.word	.LANCHOR16
 3875              	.LBE1249:
 3876              	.LBE1251:
 3877              	.LBE1272:
 3878              	.LBE1277:
 3879              		.cfi_endproc
 3880              	.LFE4782:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 179


 3882              		.section	.text._Z15Update_width_CVv,"ax",%progbits
 3883              		.align	1
 3884              		.p2align 2,,3
 3885              		.global	_Z15Update_width_CVv
 3886              		.syntax unified
 3887              		.thumb
 3888              		.thumb_func
 3889              		.fpu fpv5-d16
 3891              	_Z15Update_width_CVv:
 3892              	.LFB4783:
1344:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 3893              		.loc 20 1344 1 is_stmt 1 view -0
 3894              		.cfi_startproc
 3895              		@ args = 0, pretend = 0, frame = 0
 3896              		@ frame_needed = 0, uses_anonymous_args = 0
1345:Veno-Echo.cpp **** }
 3897              		.loc 20 1345 5 view .LVU1047
1344:Veno-Echo.cpp ****     width_CV= hw.adc.GetFloat(5);
 3898              		.loc 20 1344 1 is_stmt 0 view .LVU1048
 3899 0000 08B5     		push	{r3, lr}
 3900              		.cfi_def_cfa_offset 8
 3901              		.cfi_offset 3, -8
 3902              		.cfi_offset 14, -4
1345:Veno-Echo.cpp **** }
 3903              		.loc 20 1345 30 view .LVU1049
 3904 0002 0521     		movs	r1, #5
 3905 0004 0348     		ldr	r0, .L222
 3906 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 3907              	.LVL190:
1345:Veno-Echo.cpp **** }
 3908              		.loc 20 1345 13 view .LVU1050
 3909 000a 034B     		ldr	r3, .L222+4
 3910 000c 83ED000A 		vstr.32	s0, [r3]
1346:Veno-Echo.cpp **** 
 3911              		.loc 20 1346 1 view .LVU1051
 3912 0010 08BD     		pop	{r3, pc}
 3913              	.L223:
 3914 0012 00BF     		.align	2
 3915              	.L222:
 3916 0014 18000000 		.word	.LANCHOR4+24
 3917 0018 00000000 		.word	.LANCHOR59
 3918              		.cfi_endproc
 3919              	.LFE4783:
 3921              		.section	.text._Z12Update_widthv,"ax",%progbits
 3922              		.align	1
 3923              		.p2align 2,,3
 3924              		.global	_Z12Update_widthv
 3925              		.syntax unified
 3926              		.thumb
 3927              		.thumb_func
 3928              		.fpu fpv5-d16
 3930              	_Z12Update_widthv:
 3931              	.LFB4784:
1349:Veno-Echo.cpp ****     static bool lastShift{};
 3932              		.loc 20 1349 1 is_stmt 1 view -0
 3933              		.cfi_startproc
 3934              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 180


 3935              		@ frame_needed = 0, uses_anonymous_args = 0
1350:Veno-Echo.cpp ****     static bool width_pickup{};
 3936              		.loc 20 1350 5 view .LVU1053
1351:Veno-Echo.cpp ****     static bool ModDepth_pickup{};
 3937              		.loc 20 1351 5 view .LVU1054
1352:Veno-Echo.cpp **** 
 3938              		.loc 20 1352 5 view .LVU1055
1354:Veno-Echo.cpp **** 
 3939              		.loc 20 1354 5 view .LVU1056
1357:Veno-Echo.cpp **** 
 3940              		.loc 20 1357 5 view .LVU1057
1357:Veno-Echo.cpp **** 
 3941              		.loc 20 1357 39 is_stmt 0 view .LVU1058
 3942 0000 0722     		movs	r2, #7
 3943 0002 6348     		ldr	r0, .L253
 3944 0004 1146     		mov	r1, r2
1349:Veno-Echo.cpp ****     static bool lastShift{};
 3945              		.loc 20 1349 1 view .LVU1059
 3946 0006 10B5     		push	{r4, lr}
 3947              		.cfi_def_cfa_offset 8
 3948              		.cfi_offset 4, -8
 3949              		.cfi_offset 14, -4
 3950 0008 2DED028B 		vpush.64	{d8}
 3951              		.cfi_def_cfa_offset 16
 3952              		.cfi_offset 80, -16
 3953              		.cfi_offset 81, -12
1357:Veno-Echo.cpp **** 
 3954              		.loc 20 1357 39 view .LVU1060
 3955 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 3956              	.LVL191:
 3957              	.LBB1278:
1359:Veno-Echo.cpp ****     {   
 3958              		.loc 20 1359 9 view .LVU1061
 3959 0010 604B     		ldr	r3, .L253+4
 3960              	.LBE1278:
1357:Veno-Echo.cpp **** 
 3961              		.loc 20 1357 39 view .LVU1062
 3962 0012 B0EE408A 		vmov.f32	s16, s0
 3963              	.LVL192:
1359:Veno-Echo.cpp ****     {   
 3964              		.loc 20 1359 5 is_stmt 1 view .LVU1063
 3965              	.LBB1333:
 3966              	.LBB1279:
1363:Veno-Echo.cpp ****         {
 3967              		.loc 20 1363 19 is_stmt 0 view .LVU1064
 3968 0016 604A     		ldr	r2, .L253+8
 3969              	.LBE1279:
1359:Veno-Echo.cpp ****     {   
 3970              		.loc 20 1359 5 view .LVU1065
 3971 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3972 001a 002B     		cmp	r3, #0
 3973 001c 3ED1     		bne	.L225
 3974              	.LBB1308:
1361:Veno-Echo.cpp ****         //update pickup
 3975              		.loc 20 1361 9 is_stmt 1 view .LVU1066
1363:Veno-Echo.cpp ****         {
 3976              		.loc 20 1363 9 view .LVU1067
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 181


 3977 001e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3978 0020 0029     		cmp	r1, #0
 3979 0022 48D0     		beq	.L226
1365:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
 3980              		.loc 20 1365 13 view .LVU1068
1366:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3981              		.loc 20 1366 26 is_stmt 0 view .LVU1069
 3982 0024 5D48     		ldr	r0, .L253+12
1367:Veno-Echo.cpp ****         }
 3983              		.loc 20 1367 23 view .LVU1070
 3984 0026 5E49     		ldr	r1, .L253+16
1365:Veno-Echo.cpp ****             width_pickup = false; //set to not picked up
 3985              		.loc 20 1365 23 view .LVU1071
 3986 0028 1370     		strb	r3, [r2]
1366:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3987              		.loc 20 1366 13 is_stmt 1 view .LVU1072
1366:Veno-Echo.cpp ****             width_new = width_Pot;  //update new value    
 3988              		.loc 20 1366 26 is_stmt 0 view .LVU1073
 3989 002a 0370     		strb	r3, [r0]
1367:Veno-Echo.cpp ****         }
 3990              		.loc 20 1367 13 is_stmt 1 view .LVU1074
1367:Veno-Echo.cpp ****         }
 3991              		.loc 20 1367 23 is_stmt 0 view .LVU1075
 3992 002c 81ED000A 		vstr.32	s0, [r1]
 3993              	.L227:
1382:Veno-Echo.cpp **** 
 3994              		.loc 20 1382 9 is_stmt 1 view .LVU1076
 3995              	.LVL193:
1384:Veno-Echo.cpp ****         {
 3996              		.loc 20 1384 9 view .LVU1077
1392:Veno-Echo.cpp ****         }
 3997              		.loc 20 1392 13 view .LVU1078
 3998              	.LBB1280:
 3999              	.LBI1280:
2014:Veno-Echo.cpp **** {
 4000              		.loc 20 2014 7 view .LVU1079
 4001              	.LBB1281:
2016:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4002              		.loc 20 2016 5 view .LVU1080
2017:Veno-Echo.cpp **** 
 4003              		.loc 20 2017 5 view .LVU1081
 4004              	.LBE1281:
 4005              	.LBE1280:
1392:Veno-Echo.cpp ****         }
 4006              		.loc 20 1392 32 is_stmt 0 view .LVU1082
 4007 0030 5C4A     		ldr	r2, .L253+20
 4008              	.LBB1285:
 4009              	.LBB1282:
2017:Veno-Echo.cpp **** 
 4010              		.loc 20 2017 39 view .LVU1083
 4011 0032 B7EE007A 		vmov.f32	s14, #1.0e+0
2017:Veno-Echo.cpp **** 
 4012              		.loc 20 2017 49 view .LVU1084
 4013 0036 B6EE006A 		vmov.f32	s12, #5.0e-1
 4014              	.LBE1282:
 4015              	.LBE1285:
1392:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 182


 4016              		.loc 20 1392 32 view .LVU1085
 4017 003a 5B4B     		ldr	r3, .L253+24
 4018              	.LBB1286:
 4019              	.LBB1283:
2017:Veno-Echo.cpp **** 
 4020              		.loc 20 2017 39 view .LVU1086
 4021 003c D2ED007A 		vldr.32	s15, [r2]
2017:Veno-Echo.cpp **** 
 4022              		.loc 20 2017 12 view .LVU1087
 4023 0040 F0EE006A 		vmov.f32	s13, #2.0e+0
 4024 0044 93ED000A 		vldr.32	s0, [r3]
 4025              	.LVL194:
2017:Veno-Echo.cpp **** 
 4026              		.loc 20 2017 39 view .LVU1088
 4027 0048 77EE677A 		vsub.f32	s15, s14, s15
2017:Veno-Echo.cpp **** 
 4028              		.loc 20 2017 49 view .LVU1089
 4029 004c 77EEC67A 		vsub.f32	s15, s15, s12
2017:Veno-Echo.cpp **** 
 4030              		.loc 20 2017 12 view .LVU1090
 4031 0050 A7EEA60A 		vfma.f32	s0, s15, s13
 4032              	.LVL195:
2019:Veno-Echo.cpp ****     {
 4033              		.loc 20 2019 5 is_stmt 1 view .LVU1091
 4034 0054 B5EEC00A 		vcmpe.f32	s0, #0
 4035 0058 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4036 005c 00F19180 		bmi	.L251
2024:Veno-Echo.cpp ****     {
 4037              		.loc 20 2024 5 view .LVU1092
2026:Veno-Echo.cpp ****     }
 4038              		.loc 20 2026 16 is_stmt 0 view .LVU1093
 4039 0060 B4EE470A 		vcmp.f32	s0, s14
 4040 0064 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4041 0068 37FE000A 		vselgt.f32	s0, s14, s0
 4042              	.LVL196:
 4043              	.L233:
2029:Veno-Echo.cpp **** }
 4044              		.loc 20 2029 5 is_stmt 1 view .LVU1094
2029:Veno-Echo.cpp **** }
 4045              		.loc 20 2029 5 is_stmt 0 view .LVU1095
 4046              	.LBE1283:
 4047              	.LBE1286:
1392:Veno-Echo.cpp ****         }
 4048              		.loc 20 1392 32 view .LVU1096
 4049 006c F6EE000A 		vmov.f32	s1, #5.0e-1
 4050 0070 0020     		movs	r0, #0
 4051 0072 9FED4E1A 		vldr.32	s2, .L253+28
 4052 0076 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4053              	.LVL197:
 4054              	.L232:
1395:Veno-Echo.cpp ****             WidthXfade.SetPos(width);
 4055              		.loc 20 1395 13 is_stmt 1 view .LVU1097
 4056              	.LBB1287:
 4057              	.LBI1287:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4058              		.loc 25 135 13 view .LVU1098
 4059              	.LBB1288:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 183


 4060              		.loc 25 137 5 view .LVU1099
 4061              		.loc 25 137 9 is_stmt 0 view .LVU1100
 4062 007a 4D4B     		ldr	r3, .L253+32
 4063 007c 9FED4D7A 		vldr.32	s14, .L253+36
 4064 0080 D3ED007A 		vldr.32	s15, [r3]
 4065              	.LBE1288:
 4066              	.LBE1287:
 4067              	.LBB1291:
 4068              	.LBB1292:
  38:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initializes CrossFade module
  39:../DaisySP/Source/Dynamics/crossfade.h ****         Defaults
  40:../DaisySP/Source/Dynamics/crossfade.h ****         - current position = .5
  41:../DaisySP/Source/Dynamics/crossfade.h ****         - curve = linear
  42:../DaisySP/Source/Dynamics/crossfade.h ****     */
  43:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init(int curve)
  44:../DaisySP/Source/Dynamics/crossfade.h ****     {
  45:../DaisySP/Source/Dynamics/crossfade.h ****         pos_   = 0.5f;
  46:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
  47:../DaisySP/Source/Dynamics/crossfade.h ****     }
  48:../DaisySP/Source/Dynamics/crossfade.h **** 
  49:../DaisySP/Source/Dynamics/crossfade.h ****     /** Initialize with default linear curve 
  50:../DaisySP/Source/Dynamics/crossfade.h ****     */
  51:../DaisySP/Source/Dynamics/crossfade.h ****     inline void Init() { Init(CROSSFADE_LIN); }
  52:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
  53:../DaisySP/Source/Dynamics/crossfade.h ****     */
  54:../DaisySP/Source/Dynamics/crossfade.h ****     float Process(float &in1, float &in2);
  55:../DaisySP/Source/Dynamics/crossfade.h **** 
  56:../DaisySP/Source/Dynamics/crossfade.h **** 
  57:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets position of CrossFade between two input signals
  58:../DaisySP/Source/Dynamics/crossfade.h ****         Input range: 0 to 1
  59:../DaisySP/Source/Dynamics/crossfade.h ****     */
  60:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetPos(float pos) { pos_ = pos; }
 4069              		.loc 11 60 42 view .LVU1101
 4070 0084 4C4A     		ldr	r2, .L253+40
 4071              	.LBE1292:
 4072              	.LBE1291:
 4073              	.LBB1294:
 4074              	.LBB1289:
 4075              		.loc 25 137 24 view .LVU1102
 4076 0086 30EE670A 		vsub.f32	s0, s0, s15
 4077              	.LVL198:
 4078              		.loc 25 137 24 view .LVU1103
 4079              	.LBE1289:
 4080              	.LBE1294:
 4081              	.LBE1308:
 4082              	.LBE1333:
1428:Veno-Echo.cpp **** 
 4083              		.loc 20 1428 1 view .LVU1104
 4084 008a BDEC028B 		vldm	sp!, {d8}
 4085              		.cfi_remember_state
 4086              		.cfi_restore 80
 4087              		.cfi_restore 81
 4088              		.cfi_def_cfa_offset 8
 4089              	.LVL199:
 4090              	.LBB1334:
 4091              	.LBB1309:
 4092              	.LBB1295:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 184


 4093              	.LBB1290:
 4094              		.loc 25 137 9 view .LVU1105
 4095 008e E0EE077A 		vfma.f32	s15, s0, s14
 4096 0092 C3ED007A 		vstr.32	s15, [r3]
 4097              	.LVL200:
 4098              		.loc 25 137 9 view .LVU1106
 4099              	.LBE1290:
 4100              	.LBE1295:
1396:Veno-Echo.cpp ****     }
 4101              		.loc 20 1396 13 is_stmt 1 view .LVU1107
 4102              	.LBB1296:
 4103              	.LBI1291:
 4104              		.loc 11 60 17 view .LVU1108
 4105              	.LBB1293:
 4106              		.loc 11 60 37 view .LVU1109
 4107              		.loc 11 60 42 is_stmt 0 view .LVU1110
 4108 0096 C2ED007A 		vstr.32	s15, [r2]
 4109              	.LBE1293:
 4110              	.LBE1296:
 4111              	.LBE1309:
 4112              	.LBE1334:
1428:Veno-Echo.cpp **** 
 4113              		.loc 20 1428 1 view .LVU1111
 4114 009a 10BD     		pop	{r4, pc}
 4115              	.LVL201:
 4116              	.L225:
 4117              		.cfi_restore_state
 4118              	.LBB1335:
 4119              	.LBB1310:
1401:Veno-Echo.cpp **** 
 4120              		.loc 20 1401 9 is_stmt 1 view .LVU1112
1403:Veno-Echo.cpp ****         {
 4121              		.loc 20 1403 9 view .LVU1113
 4122 009c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4123 009e 002B     		cmp	r3, #0
 4124 00a0 43D1     		bne	.L236
1405:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 4125              		.loc 20 1405 13 view .LVU1114
1405:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 4126              		.loc 20 1405 23 is_stmt 0 view .LVU1115
 4127 00a2 0124     		movs	r4, #1
1406:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 4128              		.loc 20 1406 29 view .LVU1116
 4129 00a4 4548     		ldr	r0, .L253+44
1407:Veno-Echo.cpp ****         }
 4130              		.loc 20 1407 26 view .LVU1117
 4131 00a6 4649     		ldr	r1, .L253+48
1405:Veno-Echo.cpp ****             ModDepth_pickup = false;    //set not picked up
 4132              		.loc 20 1405 23 view .LVU1118
 4133 00a8 1470     		strb	r4, [r2]
1406:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 4134              		.loc 20 1406 13 is_stmt 1 view .LVU1119
1406:Veno-Echo.cpp ****             ModDepth_new = width_Pot;   //update new value
 4135              		.loc 20 1406 29 is_stmt 0 view .LVU1120
 4136 00aa 0370     		strb	r3, [r0]
1407:Veno-Echo.cpp ****         }
 4137              		.loc 20 1407 13 is_stmt 1 view .LVU1121
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 185


1407:Veno-Echo.cpp ****         }
 4138              		.loc 20 1407 26 is_stmt 0 view .LVU1122
 4139 00ac 81ED000A 		vstr.32	s0, [r1]
 4140              	.L224:
1407:Veno-Echo.cpp ****         }
 4141              		.loc 20 1407 26 view .LVU1123
 4142              	.LBE1310:
 4143              	.LBE1335:
1428:Veno-Echo.cpp **** 
 4144              		.loc 20 1428 1 view .LVU1124
 4145 00b0 BDEC028B 		vldm	sp!, {d8}
 4146              		.cfi_remember_state
 4147              		.cfi_restore 80
 4148              		.cfi_restore 81
 4149              		.cfi_def_cfa_offset 8
 4150 00b4 10BD     		pop	{r4, pc}
 4151              	.L226:
 4152              		.cfi_restore_state
 4153              	.LBB1336:
 4154              	.LBB1330:
1372:Veno-Echo.cpp ****             {
 4155              		.loc 20 1372 13 is_stmt 1 view .LVU1125
1372:Veno-Echo.cpp ****             {
 4156              		.loc 20 1372 16 is_stmt 0 view .LVU1126
 4157 00b6 394B     		ldr	r3, .L253+12
1372:Veno-Echo.cpp ****             {
 4158              		.loc 20 1372 13 view .LVU1127
 4159 00b8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4160 00ba 7AB9     		cbnz	r2, .L228
1374:Veno-Echo.cpp ****                 {
 4161              		.loc 20 1374 17 is_stmt 1 view .LVU1128
 4162              	.LVL202:
 4163              	.LBB1297:
 4164              	.LBI1297:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4165              		.loc 21 75 3 view .LVU1129
 4166              	.LBB1298:
 4167              		.loc 21 76 5 view .LVU1130
 4168              		.loc 21 76 5 is_stmt 0 view .LVU1131
 4169              	.LBE1298:
 4170              	.LBE1297:
1374:Veno-Echo.cpp ****                 {
 4171              		.loc 20 1374 23 view .LVU1132
 4172 00bc 384A     		ldr	r2, .L253+16
1374:Veno-Echo.cpp ****                 {
 4173              		.loc 20 1374 17 view .LVU1133
 4174 00be 9FED417A 		vldr.32	s14, .L253+52
1374:Veno-Echo.cpp ****                 {
 4175              		.loc 20 1374 23 view .LVU1134
 4176 00c2 D2ED007A 		vldr.32	s15, [r2]
 4177 00c6 70EE677A 		vsub.f32	s15, s0, s15
 4178              	.LBB1300:
 4179              	.LBB1299:
 4180              		.loc 21 76 31 view .LVU1135
 4181 00ca F0EEE77A 		vabs.f32	s15, s15
 4182              	.LBE1299:
 4183              	.LBE1300:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 186


1374:Veno-Echo.cpp ****                 {
 4184              		.loc 20 1374 17 view .LVU1136
 4185 00ce F4EEC77A 		vcmpe.f32	s15, s14
 4186 00d2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4187 00d6 ABDD     		ble	.L227
1376:Veno-Echo.cpp ****                 }
 4188              		.loc 20 1376 21 is_stmt 1 view .LVU1137
1376:Veno-Echo.cpp ****                 }
 4189              		.loc 20 1376 34 is_stmt 0 view .LVU1138
 4190 00d8 0122     		movs	r2, #1
 4191 00da 1A70     		strb	r2, [r3]
 4192              	.L228:
1382:Veno-Echo.cpp **** 
 4193              		.loc 20 1382 9 is_stmt 1 view .LVU1139
 4194              	.LVL203:
1384:Veno-Echo.cpp ****         {
 4195              		.loc 20 1384 9 view .LVU1140
1386:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4196              		.loc 20 1386 13 view .LVU1141
 4197              	.LBB1301:
 4198              	.LBI1301:
2014:Veno-Echo.cpp **** {
 4199              		.loc 20 2014 7 view .LVU1142
 4200              	.LBB1302:
2016:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 4201              		.loc 20 2016 5 view .LVU1143
2017:Veno-Echo.cpp **** 
 4202              		.loc 20 2017 5 view .LVU1144
 4203              	.LBE1302:
 4204              	.LBE1301:
1386:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4205              		.loc 20 1386 32 is_stmt 0 view .LVU1145
 4206 00dc 314B     		ldr	r3, .L253+20
 4207              	.LBB1305:
 4208              	.LBB1303:
2017:Veno-Echo.cpp **** 
 4209              		.loc 20 2017 39 view .LVU1146
 4210 00de B7EE007A 		vmov.f32	s14, #1.0e+0
2017:Veno-Echo.cpp **** 
 4211              		.loc 20 2017 49 view .LVU1147
 4212 00e2 B6EE006A 		vmov.f32	s12, #5.0e-1
2017:Veno-Echo.cpp **** 
 4213              		.loc 20 2017 39 view .LVU1148
 4214 00e6 D3ED007A 		vldr.32	s15, [r3]
2017:Veno-Echo.cpp **** 
 4215              		.loc 20 2017 12 view .LVU1149
 4216 00ea F0EE006A 		vmov.f32	s13, #2.0e+0
 4217 00ee B0EE480A 		vmov.f32	s0, s16
 4218              	.LVL204:
2017:Veno-Echo.cpp **** 
 4219              		.loc 20 2017 39 view .LVU1150
 4220 00f2 77EE677A 		vsub.f32	s15, s14, s15
2017:Veno-Echo.cpp **** 
 4221              		.loc 20 2017 49 view .LVU1151
 4222 00f6 77EEC67A 		vsub.f32	s15, s15, s12
2017:Veno-Echo.cpp **** 
 4223              		.loc 20 2017 12 view .LVU1152
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 187


 4224 00fa A7EEA60A 		vfma.f32	s0, s15, s13
 4225              	.LVL205:
2019:Veno-Echo.cpp ****     {
 4226              		.loc 20 2019 5 is_stmt 1 view .LVU1153
 4227 00fe B5EEC00A 		vcmpe.f32	s0, #0
 4228 0102 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4229 0106 3FD4     		bmi	.L252
2024:Veno-Echo.cpp ****     {
 4230              		.loc 20 2024 5 view .LVU1154
2026:Veno-Echo.cpp ****     }
 4231              		.loc 20 2026 16 is_stmt 0 view .LVU1155
 4232 0108 B4EE470A 		vcmp.f32	s0, s14
 4233 010c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4234 0110 37FE000A 		vselgt.f32	s0, s14, s0
 4235              	.LVL206:
 4236              	.L230:
2029:Veno-Echo.cpp **** }
 4237              		.loc 20 2029 5 is_stmt 1 view .LVU1156
2029:Veno-Echo.cpp **** }
 4238              		.loc 20 2029 5 is_stmt 0 view .LVU1157
 4239              	.LBE1303:
 4240              	.LBE1305:
1386:Veno-Echo.cpp ****             width_Last = width_Pot; //update last value
 4241              		.loc 20 1386 32 view .LVU1158
 4242 0114 F6EE000A 		vmov.f32	s1, #5.0e-1
 4243 0118 0020     		movs	r0, #0
 4244 011a 9FED241A 		vldr.32	s2, .L253+28
 4245 011e FFF7FEFF 		bl	_Z5scalefff9CurveType
 4246              	.LVL207:
1387:Veno-Echo.cpp ****         }
 4247              		.loc 20 1387 24 view .LVU1159
 4248 0122 214B     		ldr	r3, .L253+24
 4249              	.LVL208:
1387:Veno-Echo.cpp ****         }
 4250              		.loc 20 1387 13 is_stmt 1 view .LVU1160
1387:Veno-Echo.cpp ****         }
 4251              		.loc 20 1387 24 is_stmt 0 view .LVU1161
 4252 0124 83ED008A 		vstr.32	s16, [r3]
 4253 0128 A7E7     		b	.L232
 4254              	.LVL209:
 4255              	.L236:
1387:Veno-Echo.cpp ****         }
 4256              		.loc 20 1387 24 view .LVU1162
 4257              	.LBE1330:
 4258              	.LBB1331:
1412:Veno-Echo.cpp ****             {
 4259              		.loc 20 1412 13 is_stmt 1 view .LVU1163
1412:Veno-Echo.cpp ****             {
 4260              		.loc 20 1412 16 is_stmt 0 view .LVU1164
 4261 012a 244B     		ldr	r3, .L253+44
1412:Veno-Echo.cpp ****             {
 4262              		.loc 20 1412 13 view .LVU1165
 4263 012c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4264 012e 7AB9     		cbnz	r2, .L238
1414:Veno-Echo.cpp ****                 {
 4265              		.loc 20 1414 17 is_stmt 1 view .LVU1166
 4266              	.LVL210:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 188


 4267              	.LBB1311:
 4268              	.LBI1311:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4269              		.loc 21 75 3 view .LVU1167
 4270              	.LBB1312:
 4271              		.loc 21 76 5 view .LVU1168
 4272              		.loc 21 76 5 is_stmt 0 view .LVU1169
 4273              	.LBE1312:
 4274              	.LBE1311:
1414:Veno-Echo.cpp ****                 {
 4275              		.loc 20 1414 23 view .LVU1170
 4276 0130 234A     		ldr	r2, .L253+48
1414:Veno-Echo.cpp ****                 {
 4277              		.loc 20 1414 17 view .LVU1171
 4278 0132 9FED247A 		vldr.32	s14, .L253+52
1414:Veno-Echo.cpp ****                 {
 4279              		.loc 20 1414 23 view .LVU1172
 4280 0136 D2ED007A 		vldr.32	s15, [r2]
 4281 013a 70EE677A 		vsub.f32	s15, s0, s15
 4282              	.LBB1314:
 4283              	.LBB1313:
 4284              		.loc 21 76 31 view .LVU1173
 4285 013e F0EEE77A 		vabs.f32	s15, s15
 4286              	.LBE1313:
 4287              	.LBE1314:
1414:Veno-Echo.cpp ****                 {
 4288              		.loc 20 1414 17 view .LVU1174
 4289 0142 F4EEC77A 		vcmpe.f32	s15, s14
 4290 0146 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4291 014a B1DD     		ble	.L224
1416:Veno-Echo.cpp ****                 }
 4292              		.loc 20 1416 21 is_stmt 1 view .LVU1175
1416:Veno-Echo.cpp ****                 }
 4293              		.loc 20 1416 37 is_stmt 0 view .LVU1176
 4294 014c 0122     		movs	r2, #1
 4295 014e 1A70     		strb	r2, [r3]
 4296              	.L238:
1421:Veno-Echo.cpp ****         {
 4297              		.loc 20 1421 9 is_stmt 1 view .LVU1177
1423:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4298              		.loc 20 1423 13 view .LVU1178
1423:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4299              		.loc 20 1423 29 is_stmt 0 view .LVU1179
 4300 0150 B0EE480A 		vmov.f32	s0, s16
 4301              	.LVL211:
1423:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4302              		.loc 20 1423 29 view .LVU1180
 4303 0154 0020     		movs	r0, #0
 4304 0156 9FED1C1A 		vldr.32	s2, .L253+56
 4305 015a DFED140A 		vldr.32	s1, .L253+28
 4306 015e FFF7FEFF 		bl	_Z5scalefff9CurveType
 4307              	.LVL212:
1423:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4308              		.loc 20 1423 22 view .LVU1181
 4309 0162 1A48     		ldr	r0, .L253+60
 4310              	.LBB1315:
 4311              	.LBB1316:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 189


 4312              	.LBB1317:
 4313              	.LBB1318:
 4314              	.LBB1319:
 4315              		.loc 22 397 18 view .LVU1182
 4316 0164 0122     		movs	r2, #1
 4317              	.LBE1319:
 4318              	.LBE1318:
 4319              	.LBE1317:
 4320              	.LBE1316:
 4321              	.LBE1315:
1424:Veno-Echo.cpp ****             save_flag = true;
 4322              		.loc 20 1424 34 view .LVU1183
 4323 0166 1A49     		ldr	r1, .L253+64
 4324              	.LBB1328:
 4325              	.LBB1326:
 4326              	.LBB1324:
 4327              	.LBB1322:
 4328              	.LBB1320:
 4329              		.loc 22 397 18 view .LVU1184
 4330 0168 1A4B     		ldr	r3, .L253+68
 4331              	.LBE1320:
 4332              	.LBE1322:
 4333              	.LBE1324:
 4334              	.LBE1326:
 4335              	.LBE1328:
1423:Veno-Echo.cpp ****             AltControls.ModDepth = ModDepth;
 4336              		.loc 20 1423 22 view .LVU1185
 4337 016a 80ED000A 		vstr.32	s0, [r0]
1424:Veno-Echo.cpp ****             save_flag = true;
 4338              		.loc 20 1424 13 is_stmt 1 view .LVU1186
1424:Veno-Echo.cpp ****             save_flag = true;
 4339              		.loc 20 1424 34 is_stmt 0 view .LVU1187
 4340 016e 81ED020A 		vstr.32	s0, [r1, #8]
1425:Veno-Echo.cpp ****         }
 4341              		.loc 20 1425 13 is_stmt 1 view .LVU1188
 4342              	.LVL213:
 4343              	.LBB1329:
 4344              	.LBI1315:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 4345              		.loc 23 80 5 view .LVU1189
 4346              	.LBB1327:
 4347              		.loc 23 81 7 view .LVU1190
 4348              	.LBB1325:
 4349              	.LBI1317:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 4350              		.loc 22 288 7 view .LVU1191
 4351              	.LBB1323:
 4352              	.LBI1318:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 4353              		.loc 22 390 7 view .LVU1192
 4354              	.LBB1321:
 4355              		.loc 22 397 18 is_stmt 0 view .LVU1193
 4356 0172 BFF35B8F 		dmb	ish
 4357 0176 1A70     		strb	r2, [r3]
 4358 0178 BFF35B8F 		dmb	ish
 4359              	.LVL214:
 4360              		.loc 22 397 18 view .LVU1194
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 190


 4361              	.LBE1321:
 4362              	.LBE1323:
 4363              	.LBE1325:
 4364              	.LBE1327:
 4365              	.LBE1329:
 4366              	.LBE1331:
 4367              	.LBE1336:
1428:Veno-Echo.cpp **** 
 4368              		.loc 20 1428 1 view .LVU1195
 4369 017c BDEC028B 		vldm	sp!, {d8}
 4370              		.cfi_remember_state
 4371              		.cfi_restore 80
 4372              		.cfi_restore 81
 4373              		.cfi_def_cfa_offset 8
 4374              	.LVL215:
1428:Veno-Echo.cpp **** 
 4375              		.loc 20 1428 1 view .LVU1196
 4376 0180 10BD     		pop	{r4, pc}
 4377              	.LVL216:
 4378              	.L251:
 4379              		.cfi_restore_state
 4380              	.LBB1337:
 4381              	.LBB1332:
 4382              	.LBB1306:
 4383              	.LBB1284:
2021:Veno-Echo.cpp ****     }
 4384              		.loc 20 2021 16 view .LVU1197
 4385 0182 9FED0A0A 		vldr.32	s0, .L253+28
 4386              	.LVL217:
2021:Veno-Echo.cpp ****     }
 4387              		.loc 20 2021 16 view .LVU1198
 4388 0186 71E7     		b	.L233
 4389              	.LVL218:
 4390              	.L252:
2021:Veno-Echo.cpp ****     }
 4391              		.loc 20 2021 16 view .LVU1199
 4392              	.LBE1284:
 4393              	.LBE1306:
 4394              	.LBB1307:
 4395              	.LBB1304:
 4396 0188 9FED080A 		vldr.32	s0, .L253+28
 4397              	.LVL219:
2021:Veno-Echo.cpp ****     }
 4398              		.loc 20 2021 16 view .LVU1200
 4399 018c C2E7     		b	.L230
 4400              	.L254:
 4401 018e 00BF     		.align	2
 4402              	.L253:
 4403 0190 18000000 		.word	.LANCHOR4+24
 4404 0194 00000000 		.word	.LANCHOR7
 4405 0198 00000000 		.word	.LANCHOR60
 4406 019c 00000000 		.word	.LANCHOR61
 4407 01a0 00000000 		.word	.LANCHOR62
 4408 01a4 00000000 		.word	.LANCHOR59
 4409 01a8 00000000 		.word	.LANCHOR63
 4410 01ac 00000000 		.word	0
 4411 01b0 00000000 		.word	.LANCHOR64
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 191


 4412 01b4 6F12033D 		.word	1023611503
 4413 01b8 00000000 		.word	.LANCHOR65
 4414 01bc 00000000 		.word	.LANCHOR66
 4415 01c0 00000000 		.word	.LANCHOR67
 4416 01c4 0AD7A33B 		.word	1000593162
 4417 01c8 0000FA43 		.word	1140457472
 4418 01cc 00000000 		.word	.LANCHOR68
 4419 01d0 00000000 		.word	.LANCHOR15
 4420 01d4 00000000 		.word	.LANCHOR16
 4421              	.LBE1304:
 4422              	.LBE1307:
 4423              	.LBE1332:
 4424              	.LBE1337:
 4425              		.cfi_endproc
 4426              	.LFE4784:
 4428              		.section	.text._Z20Update_crossfeedbackv,"ax",%progbits
 4429              		.align	1
 4430              		.p2align 2,,3
 4431              		.global	_Z20Update_crossfeedbackv
 4432              		.syntax unified
 4433              		.thumb
 4434              		.thumb_func
 4435              		.fpu fpv5-d16
 4437              	_Z20Update_crossfeedbackv:
 4438              	.LFB4785:
1431:Veno-Echo.cpp ****     static bool lastShift{};
 4439              		.loc 20 1431 1 is_stmt 1 view -0
 4440              		.cfi_startproc
 4441              		@ args = 0, pretend = 0, frame = 0
 4442              		@ frame_needed = 0, uses_anonymous_args = 0
1432:Veno-Echo.cpp ****     static bool crossfeedback_pickup{};
 4443              		.loc 20 1432 5 view .LVU1202
1433:Veno-Echo.cpp ****     static bool modRate_pickup{};
 4444              		.loc 20 1433 5 view .LVU1203
1434:Veno-Echo.cpp **** 
 4445              		.loc 20 1434 5 view .LVU1204
1436:Veno-Echo.cpp **** 
 4446              		.loc 20 1436 5 view .LVU1205
1439:Veno-Echo.cpp **** 
 4447              		.loc 20 1439 5 view .LVU1206
1439:Veno-Echo.cpp **** 
 4448              		.loc 20 1439 47 is_stmt 0 view .LVU1207
 4449 0000 0022     		movs	r2, #0
 4450 0002 0721     		movs	r1, #7
 4451 0004 4548     		ldr	r0, .L270
1431:Veno-Echo.cpp ****     static bool lastShift{};
 4452              		.loc 20 1431 1 view .LVU1208
 4453 0006 10B5     		push	{r4, lr}
 4454              		.cfi_def_cfa_offset 8
 4455              		.cfi_offset 4, -8
 4456              		.cfi_offset 14, -4
 4457 0008 2DED028B 		vpush.64	{d8}
 4458              		.cfi_def_cfa_offset 16
 4459              		.cfi_offset 80, -16
 4460              		.cfi_offset 81, -12
1439:Veno-Echo.cpp **** 
 4461              		.loc 20 1439 47 view .LVU1209
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 192


 4462 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 4463              	.LVL220:
 4464              	.LBB1338:
1441:Veno-Echo.cpp ****     {   
 4465              		.loc 20 1441 9 view .LVU1210
 4466 0010 434B     		ldr	r3, .L270+4
 4467              	.LBE1338:
1439:Veno-Echo.cpp **** 
 4468              		.loc 20 1439 47 view .LVU1211
 4469 0012 B0EE408A 		vmov.f32	s16, s0
 4470              	.LVL221:
1441:Veno-Echo.cpp ****     {   
 4471              		.loc 20 1441 5 is_stmt 1 view .LVU1212
 4472              	.LBB1376:
 4473              	.LBB1339:
1445:Veno-Echo.cpp ****         {
 4474              		.loc 20 1445 19 is_stmt 0 view .LVU1213
 4475 0016 434A     		ldr	r2, .L270+8
 4476              	.LBE1339:
1441:Veno-Echo.cpp ****     {   
 4477              		.loc 20 1441 5 view .LVU1214
 4478 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4479 001a FBB9     		cbnz	r3, .L256
 4480              	.LBB1348:
1443:Veno-Echo.cpp ****         //update pickup
 4481              		.loc 20 1443 9 is_stmt 1 view .LVU1215
1445:Veno-Echo.cpp ****         {
 4482              		.loc 20 1445 9 view .LVU1216
 4483 001c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4484 001e 49B3     		cbz	r1, .L257
1447:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
 4485              		.loc 20 1447 13 view .LVU1217
1448:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4486              		.loc 20 1448 34 is_stmt 0 view .LVU1218
 4487 0020 4148     		ldr	r0, .L270+12
1449:Veno-Echo.cpp ****         }
 4488              		.loc 20 1449 31 view .LVU1219
 4489 0022 4249     		ldr	r1, .L270+16
1447:Veno-Echo.cpp ****             crossfeedback_pickup = false; //set to not picked up
 4490              		.loc 20 1447 23 view .LVU1220
 4491 0024 1370     		strb	r3, [r2]
1448:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4492              		.loc 20 1448 13 is_stmt 1 view .LVU1221
1448:Veno-Echo.cpp ****             crossfeedback_new = crossfeedback_Pot;  //update new value
 4493              		.loc 20 1448 34 is_stmt 0 view .LVU1222
 4494 0026 0370     		strb	r3, [r0]
1449:Veno-Echo.cpp ****         }
 4495              		.loc 20 1449 13 is_stmt 1 view .LVU1223
1449:Veno-Echo.cpp ****         }
 4496              		.loc 20 1449 31 is_stmt 0 view .LVU1224
 4497 0028 81ED000A 		vstr.32	s0, [r1]
 4498              	.L258:
1462:Veno-Echo.cpp **** 
 4499              		.loc 20 1462 9 is_stmt 1 view .LVU1225
 4500              	.LVL222:
1464:Veno-Echo.cpp ****         {
 4501              		.loc 20 1464 9 view .LVU1226
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 193


1472:Veno-Echo.cpp ****         }
 4502              		.loc 20 1472 13 view .LVU1227
1472:Veno-Echo.cpp ****         }
 4503              		.loc 20 1472 40 is_stmt 0 view .LVU1228
 4504 002c 404B     		ldr	r3, .L270+20
 4505 002e B7EE001A 		vmov.f32	s2, #1.0e+0
 4506 0032 0020     		movs	r0, #0
 4507 0034 DFED3F0A 		vldr.32	s1, .L270+24
 4508 0038 93ED000A 		vldr.32	s0, [r3]
 4509              	.LVL223:
1472:Veno-Echo.cpp ****         }
 4510              		.loc 20 1472 40 view .LVU1229
 4511 003c FFF7FEFF 		bl	_Z5scalefff9CurveType
 4512              	.LVL224:
 4513              	.L266:
1475:Veno-Echo.cpp ****     }
 4514              		.loc 20 1475 9 is_stmt 1 view .LVU1230
 4515              	.LBB1340:
 4516              	.LBI1340:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4517              		.loc 25 135 13 view .LVU1231
 4518              	.LBB1341:
 4519              		.loc 25 137 5 view .LVU1232
 4520              		.loc 25 137 9 is_stmt 0 view .LVU1233
 4521 0040 3D4B     		ldr	r3, .L270+28
 4522 0042 9FED3E7A 		vldr.32	s14, .L270+32
 4523 0046 D3ED007A 		vldr.32	s15, [r3]
 4524              		.loc 25 137 24 view .LVU1234
 4525 004a 30EE670A 		vsub.f32	s0, s0, s15
 4526              	.LVL225:
 4527              		.loc 25 137 24 view .LVU1235
 4528              	.LBE1341:
 4529              	.LBE1340:
 4530              	.LBE1348:
 4531              	.LBE1376:
1507:Veno-Echo.cpp **** 
 4532              		.loc 20 1507 1 view .LVU1236
 4533 004e BDEC028B 		vldm	sp!, {d8}
 4534              		.cfi_remember_state
 4535              		.cfi_restore 80
 4536              		.cfi_restore 81
 4537              		.cfi_def_cfa_offset 8
 4538              	.LVL226:
 4539              	.LBB1377:
 4540              	.LBB1349:
 4541              	.LBB1343:
 4542              	.LBB1342:
 4543              		.loc 25 137 9 view .LVU1237
 4544 0052 E0EE077A 		vfma.f32	s15, s0, s14
 4545 0056 C3ED007A 		vstr.32	s15, [r3]
 4546              	.LBE1342:
 4547              	.LBE1343:
 4548              	.LBE1349:
 4549              	.LBE1377:
1507:Veno-Echo.cpp **** 
 4550              		.loc 20 1507 1 view .LVU1238
 4551 005a 10BD     		pop	{r4, pc}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 194


 4552              	.LVL227:
 4553              	.L256:
 4554              		.cfi_restore_state
 4555              	.LBB1378:
 4556              	.LBB1350:
1479:Veno-Echo.cpp **** 
 4557              		.loc 20 1479 9 is_stmt 1 view .LVU1239
1481:Veno-Echo.cpp ****         {
 4558              		.loc 20 1481 9 view .LVU1240
 4559 005c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4560 005e 4BBB     		cbnz	r3, .L262
1483:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4561              		.loc 20 1483 13 view .LVU1241
1483:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4562              		.loc 20 1483 23 is_stmt 0 view .LVU1242
 4563 0060 0124     		movs	r4, #1
1484:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4564              		.loc 20 1484 28 view .LVU1243
 4565 0062 3748     		ldr	r0, .L270+36
1485:Veno-Echo.cpp ****         }
 4566              		.loc 20 1485 25 view .LVU1244
 4567 0064 3749     		ldr	r1, .L270+40
1483:Veno-Echo.cpp ****             modRate_pickup = false; //set not picked up
 4568              		.loc 20 1483 23 view .LVU1245
 4569 0066 1470     		strb	r4, [r2]
1484:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4570              		.loc 20 1484 13 is_stmt 1 view .LVU1246
1484:Veno-Echo.cpp ****             modRate_new = crossfeedback_Pot;
 4571              		.loc 20 1484 28 is_stmt 0 view .LVU1247
 4572 0068 0370     		strb	r3, [r0]
1485:Veno-Echo.cpp ****         }
 4573              		.loc 20 1485 13 is_stmt 1 view .LVU1248
1485:Veno-Echo.cpp ****         }
 4574              		.loc 20 1485 25 is_stmt 0 view .LVU1249
 4575 006a 81ED000A 		vstr.32	s0, [r1]
 4576              	.L255:
1485:Veno-Echo.cpp ****         }
 4577              		.loc 20 1485 25 view .LVU1250
 4578              	.LBE1350:
 4579              	.LBE1378:
1507:Veno-Echo.cpp **** 
 4580              		.loc 20 1507 1 view .LVU1251
 4581 006e BDEC028B 		vldm	sp!, {d8}
 4582              		.cfi_remember_state
 4583              		.cfi_restore 80
 4584              		.cfi_restore 81
 4585              		.cfi_def_cfa_offset 8
 4586 0072 10BD     		pop	{r4, pc}
 4587              	.L257:
 4588              		.cfi_restore_state
 4589              	.LBB1379:
 4590              	.LBB1374:
1454:Veno-Echo.cpp ****             {
 4591              		.loc 20 1454 13 is_stmt 1 view .LVU1252
1454:Veno-Echo.cpp ****             {
 4592              		.loc 20 1454 16 is_stmt 0 view .LVU1253
 4593 0074 2C4B     		ldr	r3, .L270+12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 195


1454:Veno-Echo.cpp ****             {
 4594              		.loc 20 1454 13 view .LVU1254
 4595 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4596 0078 7AB9     		cbnz	r2, .L259
1456:Veno-Echo.cpp ****                 {
 4597              		.loc 20 1456 17 is_stmt 1 view .LVU1255
 4598              	.LVL228:
 4599              	.LBB1344:
 4600              	.LBI1344:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4601              		.loc 21 75 3 view .LVU1256
 4602              	.LBB1345:
 4603              		.loc 21 76 5 view .LVU1257
 4604              		.loc 21 76 5 is_stmt 0 view .LVU1258
 4605              	.LBE1345:
 4606              	.LBE1344:
1456:Veno-Echo.cpp ****                 {
 4607              		.loc 20 1456 23 view .LVU1259
 4608 007a 2C4A     		ldr	r2, .L270+16
1456:Veno-Echo.cpp ****                 {
 4609              		.loc 20 1456 17 view .LVU1260
 4610 007c 9FED327A 		vldr.32	s14, .L270+44
1456:Veno-Echo.cpp ****                 {
 4611              		.loc 20 1456 23 view .LVU1261
 4612 0080 D2ED007A 		vldr.32	s15, [r2]
 4613 0084 70EE677A 		vsub.f32	s15, s0, s15
 4614              	.LBB1347:
 4615              	.LBB1346:
 4616              		.loc 21 76 31 view .LVU1262
 4617 0088 F0EEE77A 		vabs.f32	s15, s15
 4618              	.LBE1346:
 4619              	.LBE1347:
1456:Veno-Echo.cpp ****                 {
 4620              		.loc 20 1456 17 view .LVU1263
 4621 008c F4EEC77A 		vcmpe.f32	s15, s14
 4622 0090 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4623 0094 CADD     		ble	.L258
1458:Veno-Echo.cpp ****                 }
 4624              		.loc 20 1458 21 is_stmt 1 view .LVU1264
1458:Veno-Echo.cpp ****                 }
 4625              		.loc 20 1458 42 is_stmt 0 view .LVU1265
 4626 0096 0122     		movs	r2, #1
 4627 0098 1A70     		strb	r2, [r3]
 4628              	.L259:
1462:Veno-Echo.cpp **** 
 4629              		.loc 20 1462 9 is_stmt 1 view .LVU1266
 4630              	.LVL229:
1464:Veno-Echo.cpp ****         {
 4631              		.loc 20 1464 9 view .LVU1267
1466:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4632              		.loc 20 1466 13 view .LVU1268
1466:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4633              		.loc 20 1466 40 is_stmt 0 view .LVU1269
 4634 009a B7EE001A 		vmov.f32	s2, #1.0e+0
 4635 009e 0020     		movs	r0, #0
 4636 00a0 B0EE480A 		vmov.f32	s0, s16
 4637              	.LVL230:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 196


1466:Veno-Echo.cpp ****             crossfeedback_Last = crossfeedback_Pot; //update last
 4638              		.loc 20 1466 40 view .LVU1270
 4639 00a4 DFED230A 		vldr.32	s1, .L270+24
 4640 00a8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 4641              	.LVL231:
1467:Veno-Echo.cpp ****         }
 4642              		.loc 20 1467 32 view .LVU1271
 4643 00ac 204B     		ldr	r3, .L270+20
 4644              	.LVL232:
1467:Veno-Echo.cpp ****         }
 4645              		.loc 20 1467 13 is_stmt 1 view .LVU1272
1467:Veno-Echo.cpp ****         }
 4646              		.loc 20 1467 32 is_stmt 0 view .LVU1273
 4647 00ae 83ED008A 		vstr.32	s16, [r3]
 4648 00b2 C5E7     		b	.L266
 4649              	.LVL233:
 4650              	.L262:
1467:Veno-Echo.cpp ****         }
 4651              		.loc 20 1467 32 view .LVU1274
 4652              	.LBE1374:
 4653              	.LBB1375:
1490:Veno-Echo.cpp ****             {
 4654              		.loc 20 1490 13 is_stmt 1 view .LVU1275
1490:Veno-Echo.cpp ****             {
 4655              		.loc 20 1490 16 is_stmt 0 view .LVU1276
 4656 00b4 224B     		ldr	r3, .L270+36
1490:Veno-Echo.cpp ****             {
 4657              		.loc 20 1490 13 view .LVU1277
 4658 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4659 00b8 7AB9     		cbnz	r2, .L264
1492:Veno-Echo.cpp ****                 {
 4660              		.loc 20 1492 17 is_stmt 1 view .LVU1278
 4661              	.LVL234:
 4662              	.LBB1351:
 4663              	.LBI1351:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4664              		.loc 21 75 3 view .LVU1279
 4665              	.LBB1352:
 4666              		.loc 21 76 5 view .LVU1280
 4667              		.loc 21 76 5 is_stmt 0 view .LVU1281
 4668              	.LBE1352:
 4669              	.LBE1351:
1492:Veno-Echo.cpp ****                 {
 4670              		.loc 20 1492 23 view .LVU1282
 4671 00ba 224A     		ldr	r2, .L270+40
1492:Veno-Echo.cpp ****                 {
 4672              		.loc 20 1492 17 view .LVU1283
 4673 00bc 9FED227A 		vldr.32	s14, .L270+44
1492:Veno-Echo.cpp ****                 {
 4674              		.loc 20 1492 23 view .LVU1284
 4675 00c0 D2ED007A 		vldr.32	s15, [r2]
 4676 00c4 70EE677A 		vsub.f32	s15, s0, s15
 4677              	.LBB1354:
 4678              	.LBB1353:
 4679              		.loc 21 76 31 view .LVU1285
 4680 00c8 F0EEE77A 		vabs.f32	s15, s15
 4681              	.LBE1353:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 197


 4682              	.LBE1354:
1492:Veno-Echo.cpp ****                 {
 4683              		.loc 20 1492 17 view .LVU1286
 4684 00cc F4EEC77A 		vcmpe.f32	s15, s14
 4685 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 4686 00d4 CBDD     		ble	.L255
1494:Veno-Echo.cpp ****                 }
 4687              		.loc 20 1494 21 is_stmt 1 view .LVU1287
1494:Veno-Echo.cpp ****                 }
 4688              		.loc 20 1494 36 is_stmt 0 view .LVU1288
 4689 00d6 0122     		movs	r2, #1
 4690 00d8 1A70     		strb	r2, [r3]
 4691              	.L264:
1499:Veno-Echo.cpp ****         {
 4692              		.loc 20 1499 9 is_stmt 1 view .LVU1289
 4693              	.LBB1355:
1501:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4694              		.loc 20 1501 13 view .LVU1290
 4695              	.LBB1356:
 4696              	.LBB1357:
  17:../DaisySP/Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:../DaisySP/Source/Synthesis/oscillator.h ****     */
  19:../DaisySP/Source/Synthesis/oscillator.h ****     enum
  20:../DaisySP/Source/Synthesis/oscillator.h ****     {
  21:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SIN,
  22:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_TRI,
  23:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SAW,
  24:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  25:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  26:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  27:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  28:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  29:../DaisySP/Source/Synthesis/oscillator.h ****         WAVE_LAST,
  30:../DaisySP/Source/Synthesis/oscillator.h ****     };
  31:../DaisySP/Source/Synthesis/oscillator.h **** 
  32:../DaisySP/Source/Synthesis/oscillator.h **** 
  33:../DaisySP/Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  34:../DaisySP/Source/Synthesis/oscillator.h **** 
  35:../DaisySP/Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:../DaisySP/Source/Synthesis/oscillator.h **** 
  37:../DaisySP/Source/Synthesis/oscillator.h ****         Defaults:
  38:../DaisySP/Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
  39:../DaisySP/Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  40:../DaisySP/Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  41:../DaisySP/Source/Synthesis/oscillator.h ****     */
  42:../DaisySP/Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  43:../DaisySP/Source/Synthesis/oscillator.h ****     {
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
  45:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  46:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  47:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
  49:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
  52:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
  53:../DaisySP/Source/Synthesis/oscillator.h ****     }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 198


  54:../DaisySP/Source/Synthesis/oscillator.h **** 
  55:../DaisySP/Source/Synthesis/oscillator.h **** 
  56:../DaisySP/Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:../DaisySP/Source/Synthesis/oscillator.h ****     */
  58:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
  59:../DaisySP/Source/Synthesis/oscillator.h ****     {
  60:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = f;
 4697              		.loc 9 60 20 is_stmt 0 view .LVU1291
 4698 00da 1C4C     		ldr	r4, .L270+48
 4699              	.LBE1357:
 4700              	.LBE1356:
1501:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4701              		.loc 20 1501 32 view .LVU1292
 4702 00dc B0EE480A 		vmov.f32	s0, s16
 4703              	.LVL235:
1501:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4704              		.loc 20 1501 32 view .LVU1293
 4705 00e0 B2EE041A 		vmov.f32	s2, #1.0e+1
 4706 00e4 0020     		movs	r0, #0
 4707 00e6 DFED1A0A 		vldr.32	s1, .L270+52
 4708 00ea FFF7FEFF 		bl	_Z5scalefff9CurveType
 4709              	.LVL236:
 4710              	.LBB1361:
 4711              	.LBB1358:
  61:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4712              		.loc 9 61 34 view .LVU1294
 4713 00ee 2046     		mov	r0, r4
 4714              	.LBE1358:
 4715              	.LBE1361:
1501:Veno-Echo.cpp ****             lfo.SetFreq(modRate);
 4716              		.loc 20 1501 32 view .LVU1295
 4717 00f0 B0EE408A 		vmov.f32	s16, s0
 4718              	.LVL237:
1502:Veno-Echo.cpp ****             AltControls.ModFreq = modRate;
 4719              		.loc 20 1502 13 is_stmt 1 view .LVU1296
 4720              	.LBB1362:
 4721              	.LBI1356:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 4722              		.loc 9 58 17 view .LVU1297
 4723              	.LBB1359:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4724              		.loc 9 60 9 view .LVU1298
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 4725              		.loc 9 60 20 is_stmt 0 view .LVU1299
 4726 00f4 84ED020A 		vstr.32	s0, [r4, #8]
 4727              		.loc 9 61 9 is_stmt 1 view .LVU1300
 4728              		.loc 9 61 34 is_stmt 0 view .LVU1301
 4729 00f8 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 4730              	.LVL238:
 4731              		.loc 9 61 34 view .LVU1302
 4732              	.LBE1359:
 4733              	.LBE1362:
1503:Veno-Echo.cpp ****             save_flag = true;
 4734              		.loc 20 1503 33 view .LVU1303
 4735 00fc 1549     		ldr	r1, .L270+56
 4736              	.LBB1363:
 4737              	.LBB1364:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 199


 4738              	.LBB1365:
 4739              	.LBB1366:
 4740              	.LBB1367:
 4741              		.loc 22 397 18 view .LVU1304
 4742 00fe 164B     		ldr	r3, .L270+60
 4743 0100 0122     		movs	r2, #1
 4744              	.LBE1367:
 4745              	.LBE1366:
 4746              	.LBE1365:
 4747              	.LBE1364:
 4748              	.LBE1363:
1503:Veno-Echo.cpp ****             save_flag = true;
 4749              		.loc 20 1503 33 view .LVU1305
 4750 0102 81ED038A 		vstr.32	s16, [r1, #12]
 4751              	.LBB1372:
 4752              	.LBB1360:
 4753              		.loc 9 61 20 view .LVU1306
 4754 0106 84ED060A 		vstr.32	s0, [r4, #24]
 4755              	.LVL239:
 4756              		.loc 9 61 20 view .LVU1307
 4757              	.LBE1360:
 4758              	.LBE1372:
1503:Veno-Echo.cpp ****             save_flag = true;
 4759              		.loc 20 1503 13 is_stmt 1 view .LVU1308
1504:Veno-Echo.cpp ****         }
 4760              		.loc 20 1504 13 view .LVU1309
 4761              	.LBB1373:
 4762              	.LBI1363:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 4763              		.loc 23 80 5 view .LVU1310
 4764              	.LBB1371:
 4765              		.loc 23 81 7 view .LVU1311
 4766              	.LBB1370:
 4767              	.LBI1365:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 4768              		.loc 22 288 7 view .LVU1312
 4769              	.LBB1369:
 4770              	.LBI1366:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 4771              		.loc 22 390 7 view .LVU1313
 4772              	.LBB1368:
 4773              		.loc 22 397 18 is_stmt 0 view .LVU1314
 4774 010a BFF35B8F 		dmb	ish
 4775 010e 1A70     		strb	r2, [r3]
 4776 0110 BFF35B8F 		dmb	ish
 4777              	.LVL240:
 4778              		.loc 22 397 18 view .LVU1315
 4779              	.LBE1368:
 4780              	.LBE1369:
 4781              	.LBE1370:
 4782              	.LBE1371:
 4783              	.LBE1373:
 4784              	.LBE1355:
 4785              	.LBE1375:
 4786              	.LBE1379:
1507:Veno-Echo.cpp **** 
 4787              		.loc 20 1507 1 view .LVU1316
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 200


 4788 0114 BDEC028B 		vldm	sp!, {d8}
 4789              		.cfi_restore 80
 4790              		.cfi_restore 81
 4791              		.cfi_def_cfa_offset 8
 4792              	.LVL241:
1507:Veno-Echo.cpp **** 
 4793              		.loc 20 1507 1 view .LVU1317
 4794 0118 10BD     		pop	{r4, pc}
 4795              	.L271:
 4796 011a 00BF     		.align	2
 4797              	.L270:
 4798 011c 18000000 		.word	.LANCHOR4+24
 4799 0120 00000000 		.word	.LANCHOR7
 4800 0124 00000000 		.word	.LANCHOR69
 4801 0128 00000000 		.word	.LANCHOR70
 4802 012c 00000000 		.word	.LANCHOR71
 4803 0130 00000000 		.word	.LANCHOR75
 4804 0134 00000000 		.word	0
 4805 0138 00000000 		.word	.LANCHOR72
 4806 013c 6F12033D 		.word	1023611503
 4807 0140 00000000 		.word	.LANCHOR73
 4808 0144 00000000 		.word	.LANCHOR74
 4809 0148 0AD7A33B 		.word	1000593162
 4810 014c 00000000 		.word	.LANCHOR76
 4811 0150 CDCCCC3D 		.word	1036831949
 4812 0154 00000000 		.word	.LANCHOR15
 4813 0158 00000000 		.word	.LANCHOR16
 4814              		.cfi_endproc
 4815              	.LFE4785:
 4817              		.section	.text._Z18Update_filterXfadev,"ax",%progbits
 4818              		.align	1
 4819              		.p2align 2,,3
 4820              		.global	_Z18Update_filterXfadev
 4821              		.syntax unified
 4822              		.thumb
 4823              		.thumb_func
 4824              		.fpu fpv5-d16
 4826              	_Z18Update_filterXfadev:
 4827              	.LFB4786:
1510:Veno-Echo.cpp ****     static bool lastShift{};
 4828              		.loc 20 1510 1 is_stmt 1 view -0
 4829              		.cfi_startproc
 4830              		@ args = 0, pretend = 0, frame = 0
 4831              		@ frame_needed = 0, uses_anonymous_args = 0
1511:Veno-Echo.cpp ****     static bool filterXfade_pickup{};
 4832              		.loc 20 1511 5 view .LVU1319
1512:Veno-Echo.cpp ****     static bool PostFilters_pickup{};
 4833              		.loc 20 1512 5 view .LVU1320
1513:Veno-Echo.cpp **** 
 4834              		.loc 20 1513 5 view .LVU1321
1515:Veno-Echo.cpp **** 
 4835              		.loc 20 1515 5 view .LVU1322
1518:Veno-Echo.cpp **** 
 4836              		.loc 20 1518 5 view .LVU1323
1518:Veno-Echo.cpp **** 
 4837              		.loc 20 1518 45 is_stmt 0 view .LVU1324
 4838 0000 0322     		movs	r2, #3
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 201


 4839 0002 0721     		movs	r1, #7
 4840 0004 4648     		ldr	r0, .L294
1510:Veno-Echo.cpp ****     static bool lastShift{};
 4841              		.loc 20 1510 1 view .LVU1325
 4842 0006 10B5     		push	{r4, lr}
 4843              		.cfi_def_cfa_offset 8
 4844              		.cfi_offset 4, -8
 4845              		.cfi_offset 14, -4
 4846 0008 2DED028B 		vpush.64	{d8}
 4847              		.cfi_def_cfa_offset 16
 4848              		.cfi_offset 80, -16
 4849              		.cfi_offset 81, -12
1518:Veno-Echo.cpp **** 
 4850              		.loc 20 1518 45 view .LVU1326
 4851 000c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle11GetMuxFloatEhh
 4852              	.LVL242:
 4853              	.LBB1380:
1520:Veno-Echo.cpp ****     {   
 4854              		.loc 20 1520 9 view .LVU1327
 4855 0010 444B     		ldr	r3, .L294+4
 4856              	.LBE1380:
1518:Veno-Echo.cpp **** 
 4857              		.loc 20 1518 45 view .LVU1328
 4858 0012 B0EE408A 		vmov.f32	s16, s0
 4859              	.LVL243:
1520:Veno-Echo.cpp ****     {   
 4860              		.loc 20 1520 5 is_stmt 1 view .LVU1329
 4861              	.LBB1410:
 4862              	.LBB1381:
1524:Veno-Echo.cpp ****         {
 4863              		.loc 20 1524 19 is_stmt 0 view .LVU1330
 4864 0016 444A     		ldr	r2, .L294+8
 4865              	.LBE1381:
1520:Veno-Echo.cpp ****     {   
 4866              		.loc 20 1520 5 view .LVU1331
 4867 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4868 001a FBB9     		cbnz	r3, .L273
 4869              	.LBB1390:
1522:Veno-Echo.cpp ****         //update pickup
 4870              		.loc 20 1522 9 is_stmt 1 view .LVU1332
1524:Veno-Echo.cpp ****         {
 4871              		.loc 20 1524 9 view .LVU1333
 4872 001c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4873 001e 49B3     		cbz	r1, .L274
1526:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
 4874              		.loc 20 1526 13 view .LVU1334
1527:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4875              		.loc 20 1527 32 is_stmt 0 view .LVU1335
 4876 0020 4248     		ldr	r0, .L294+12
1528:Veno-Echo.cpp ****         }
 4877              		.loc 20 1528 29 view .LVU1336
 4878 0022 4349     		ldr	r1, .L294+16
1526:Veno-Echo.cpp ****             filterXfade_pickup = false; //set to not picked up
 4879              		.loc 20 1526 23 view .LVU1337
 4880 0024 1370     		strb	r3, [r2]
1527:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4881              		.loc 20 1527 13 is_stmt 1 view .LVU1338
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 202


1527:Veno-Echo.cpp ****             filterXfade_new = filterXfade_Pot;  //update new
 4882              		.loc 20 1527 32 is_stmt 0 view .LVU1339
 4883 0026 0370     		strb	r3, [r0]
1528:Veno-Echo.cpp ****         }
 4884              		.loc 20 1528 13 is_stmt 1 view .LVU1340
1528:Veno-Echo.cpp ****         }
 4885              		.loc 20 1528 29 is_stmt 0 view .LVU1341
 4886 0028 81ED000A 		vstr.32	s0, [r1]
 4887              	.L275:
1542:Veno-Echo.cpp **** 
 4888              		.loc 20 1542 9 is_stmt 1 view .LVU1342
 4889              	.LVL244:
1544:Veno-Echo.cpp ****         {
 4890              		.loc 20 1544 9 view .LVU1343
1552:Veno-Echo.cpp ****         }
 4891              		.loc 20 1552 13 view .LVU1344
1552:Veno-Echo.cpp ****         }
 4892              		.loc 20 1552 38 is_stmt 0 view .LVU1345
 4893 002c 414B     		ldr	r3, .L294+20
 4894 002e B7EE001A 		vmov.f32	s2, #1.0e+0
 4895 0032 0120     		movs	r0, #1
 4896 0034 DFED400A 		vldr.32	s1, .L294+24
 4897 0038 93ED000A 		vldr.32	s0, [r3]
 4898              	.LVL245:
1552:Veno-Echo.cpp ****         }
 4899              		.loc 20 1552 38 view .LVU1346
 4900 003c FFF7FEFF 		bl	_Z5scalefff9CurveType
 4901              	.LVL246:
 4902              	.L285:
1555:Veno-Echo.cpp ****     }
 4903              		.loc 20 1555 9 is_stmt 1 view .LVU1347
 4904              	.LBB1382:
 4905              	.LBI1382:
 135:../DaisySP/Source/Utility/dsp.h **** {
 4906              		.loc 25 135 13 view .LVU1348
 4907              	.LBB1383:
 4908              		.loc 25 137 5 view .LVU1349
 4909              		.loc 25 137 9 is_stmt 0 view .LVU1350
 4910 0040 3E4B     		ldr	r3, .L294+28
 4911 0042 9FED3F7A 		vldr.32	s14, .L294+32
 4912 0046 D3ED007A 		vldr.32	s15, [r3]
 4913              		.loc 25 137 24 view .LVU1351
 4914 004a 30EE670A 		vsub.f32	s0, s0, s15
 4915              	.LVL247:
 4916              		.loc 25 137 24 view .LVU1352
 4917              	.LBE1383:
 4918              	.LBE1382:
 4919              	.LBE1390:
 4920              	.LBE1410:
1598:Veno-Echo.cpp **** 
 4921              		.loc 20 1598 1 view .LVU1353
 4922 004e BDEC028B 		vldm	sp!, {d8}
 4923              		.cfi_remember_state
 4924              		.cfi_restore 80
 4925              		.cfi_restore 81
 4926              		.cfi_def_cfa_offset 8
 4927              	.LVL248:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 203


 4928              	.LBB1411:
 4929              	.LBB1391:
 4930              	.LBB1385:
 4931              	.LBB1384:
 4932              		.loc 25 137 9 view .LVU1354
 4933 0052 E0EE077A 		vfma.f32	s15, s0, s14
 4934 0056 C3ED007A 		vstr.32	s15, [r3]
 4935              	.LBE1384:
 4936              	.LBE1385:
 4937              	.LBE1391:
 4938              	.LBE1411:
1598:Veno-Echo.cpp **** 
 4939              		.loc 20 1598 1 view .LVU1355
 4940 005a 10BD     		pop	{r4, pc}
 4941              	.LVL249:
 4942              	.L273:
 4943              		.cfi_restore_state
 4944              	.LBB1412:
 4945              	.LBB1392:
1560:Veno-Echo.cpp **** 
 4946              		.loc 20 1560 9 is_stmt 1 view .LVU1356
1562:Veno-Echo.cpp ****         {
 4947              		.loc 20 1562 9 view .LVU1357
 4948 005c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4949 005e 4BBB     		cbnz	r3, .L279
1564:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4950              		.loc 20 1564 13 view .LVU1358
1564:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4951              		.loc 20 1564 23 is_stmt 0 view .LVU1359
 4952 0060 0124     		movs	r4, #1
1565:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4953              		.loc 20 1565 32 view .LVU1360
 4954 0062 3848     		ldr	r0, .L294+36
1566:Veno-Echo.cpp ****         }
 4955              		.loc 20 1566 29 view .LVU1361
 4956 0064 3849     		ldr	r1, .L294+40
1564:Veno-Echo.cpp ****             PostFilters_pickup = false; //set not picked up
 4957              		.loc 20 1564 23 view .LVU1362
 4958 0066 1470     		strb	r4, [r2]
1565:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4959              		.loc 20 1565 13 is_stmt 1 view .LVU1363
1565:Veno-Echo.cpp ****             PostFilters_new = filterXfade_Pot;
 4960              		.loc 20 1565 32 is_stmt 0 view .LVU1364
 4961 0068 0370     		strb	r3, [r0]
1566:Veno-Echo.cpp ****         }
 4962              		.loc 20 1566 13 is_stmt 1 view .LVU1365
1566:Veno-Echo.cpp ****         }
 4963              		.loc 20 1566 29 is_stmt 0 view .LVU1366
 4964 006a 81ED000A 		vstr.32	s0, [r1]
 4965              	.L272:
1566:Veno-Echo.cpp ****         }
 4966              		.loc 20 1566 29 view .LVU1367
 4967              	.LBE1392:
 4968              	.LBE1412:
1598:Veno-Echo.cpp **** 
 4969              		.loc 20 1598 1 view .LVU1368
 4970 006e BDEC028B 		vldm	sp!, {d8}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 204


 4971              		.cfi_remember_state
 4972              		.cfi_restore 80
 4973              		.cfi_restore 81
 4974              		.cfi_def_cfa_offset 8
 4975 0072 10BD     		pop	{r4, pc}
 4976              	.L274:
 4977              		.cfi_restore_state
 4978              	.LBB1413:
 4979              	.LBB1407:
1533:Veno-Echo.cpp ****             {
 4980              		.loc 20 1533 13 is_stmt 1 view .LVU1369
1533:Veno-Echo.cpp ****             {
 4981              		.loc 20 1533 16 is_stmt 0 view .LVU1370
 4982 0074 2D4B     		ldr	r3, .L294+12
1533:Veno-Echo.cpp ****             {
 4983              		.loc 20 1533 13 view .LVU1371
 4984 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4985 0078 7AB9     		cbnz	r2, .L276
1535:Veno-Echo.cpp ****                 {
 4986              		.loc 20 1535 17 is_stmt 1 view .LVU1372
 4987              	.LVL250:
 4988              	.LBB1386:
 4989              	.LBI1386:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 4990              		.loc 21 75 3 view .LVU1373
 4991              	.LBB1387:
 4992              		.loc 21 76 5 view .LVU1374
 4993              		.loc 21 76 5 is_stmt 0 view .LVU1375
 4994              	.LBE1387:
 4995              	.LBE1386:
1535:Veno-Echo.cpp ****                 {
 4996              		.loc 20 1535 23 view .LVU1376
 4997 007a 2D4A     		ldr	r2, .L294+16
1535:Veno-Echo.cpp ****                 {
 4998              		.loc 20 1535 17 view .LVU1377
 4999 007c 9FED337A 		vldr.32	s14, .L294+44
1535:Veno-Echo.cpp ****                 {
 5000              		.loc 20 1535 23 view .LVU1378
 5001 0080 D2ED007A 		vldr.32	s15, [r2]
 5002 0084 70EE677A 		vsub.f32	s15, s0, s15
 5003              	.LBB1389:
 5004              	.LBB1388:
 5005              		.loc 21 76 31 view .LVU1379
 5006 0088 F0EEE77A 		vabs.f32	s15, s15
 5007              	.LBE1388:
 5008              	.LBE1389:
1535:Veno-Echo.cpp ****                 {
 5009              		.loc 20 1535 17 view .LVU1380
 5010 008c F4EEC77A 		vcmpe.f32	s15, s14
 5011 0090 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5012 0094 CADD     		ble	.L275
1537:Veno-Echo.cpp ****                 }
 5013              		.loc 20 1537 21 is_stmt 1 view .LVU1381
1537:Veno-Echo.cpp ****                 }
 5014              		.loc 20 1537 40 is_stmt 0 view .LVU1382
 5015 0096 0122     		movs	r2, #1
 5016 0098 1A70     		strb	r2, [r3]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 205


 5017              	.L276:
1542:Veno-Echo.cpp **** 
 5018              		.loc 20 1542 9 is_stmt 1 view .LVU1383
 5019              	.LVL251:
1544:Veno-Echo.cpp ****         {
 5020              		.loc 20 1544 9 view .LVU1384
1546:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 5021              		.loc 20 1546 13 view .LVU1385
1546:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 5022              		.loc 20 1546 38 is_stmt 0 view .LVU1386
 5023 009a B7EE001A 		vmov.f32	s2, #1.0e+0
 5024 009e 0120     		movs	r0, #1
 5025 00a0 B0EE480A 		vmov.f32	s0, s16
 5026              	.LVL252:
1546:Veno-Echo.cpp ****             filterXfade_last = filterXfade_Pot; //update last value
 5027              		.loc 20 1546 38 view .LVU1387
 5028 00a4 DFED240A 		vldr.32	s1, .L294+24
 5029 00a8 FFF7FEFF 		bl	_Z5scalefff9CurveType
 5030              	.LVL253:
1547:Veno-Echo.cpp ****         }
 5031              		.loc 20 1547 30 view .LVU1388
 5032 00ac 214B     		ldr	r3, .L294+20
 5033              	.LVL254:
1547:Veno-Echo.cpp ****         }
 5034              		.loc 20 1547 13 is_stmt 1 view .LVU1389
1547:Veno-Echo.cpp ****         }
 5035              		.loc 20 1547 30 is_stmt 0 view .LVU1390
 5036 00ae 83ED008A 		vstr.32	s16, [r3]
 5037 00b2 C5E7     		b	.L285
 5038              	.LVL255:
 5039              	.L279:
1547:Veno-Echo.cpp ****         }
 5040              		.loc 20 1547 30 view .LVU1391
 5041              	.LBE1407:
 5042              	.LBB1408:
1571:Veno-Echo.cpp ****             {
 5043              		.loc 20 1571 13 is_stmt 1 view .LVU1392
1571:Veno-Echo.cpp ****             {
 5044              		.loc 20 1571 16 is_stmt 0 view .LVU1393
 5045 00b4 234B     		ldr	r3, .L294+36
1571:Veno-Echo.cpp ****             {
 5046              		.loc 20 1571 13 view .LVU1394
 5047 00b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5048 00b8 7AB9     		cbnz	r2, .L281
1573:Veno-Echo.cpp ****                 {
 5049              		.loc 20 1573 17 is_stmt 1 view .LVU1395
 5050              	.LVL256:
 5051              	.LBB1393:
 5052              	.LBI1393:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5053              		.loc 21 75 3 view .LVU1396
 5054              	.LBB1394:
 5055              		.loc 21 76 5 view .LVU1397
 5056              		.loc 21 76 5 is_stmt 0 view .LVU1398
 5057              	.LBE1394:
 5058              	.LBE1393:
1573:Veno-Echo.cpp ****                 {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 206


 5059              		.loc 20 1573 23 view .LVU1399
 5060 00ba 234A     		ldr	r2, .L294+40
1573:Veno-Echo.cpp ****                 {
 5061              		.loc 20 1573 17 view .LVU1400
 5062 00bc 9FED237A 		vldr.32	s14, .L294+44
1573:Veno-Echo.cpp ****                 {
 5063              		.loc 20 1573 23 view .LVU1401
 5064 00c0 D2ED007A 		vldr.32	s15, [r2]
 5065 00c4 70EE677A 		vsub.f32	s15, s0, s15
 5066              	.LBB1396:
 5067              	.LBB1395:
 5068              		.loc 21 76 31 view .LVU1402
 5069 00c8 F0EEE77A 		vabs.f32	s15, s15
 5070              	.LBE1395:
 5071              	.LBE1396:
1573:Veno-Echo.cpp ****                 {
 5072              		.loc 20 1573 17 view .LVU1403
 5073 00cc F4EEC77A 		vcmpe.f32	s15, s14
 5074 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5075 00d4 CBDD     		ble	.L272
1575:Veno-Echo.cpp ****                 }
 5076              		.loc 20 1575 21 is_stmt 1 view .LVU1404
1575:Veno-Echo.cpp ****                 }
 5077              		.loc 20 1575 40 is_stmt 0 view .LVU1405
 5078 00d6 0122     		movs	r2, #1
 5079 00d8 1A70     		strb	r2, [r3]
 5080              	.L281:
1580:Veno-Echo.cpp ****         {
 5081              		.loc 20 1580 9 is_stmt 1 view .LVU1406
1582:Veno-Echo.cpp ****             {
 5082              		.loc 20 1582 13 view .LVU1407
 5083 00da DFED1D7A 		vldr.32	s15, .L294+48
 5084 00de B4EEE78A 		vcmpe.f32	s16, s15
 5085 00e2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5086 00e6 0FD5     		bpl	.L293
1584:Veno-Echo.cpp ****             }
 5087              		.loc 20 1584 17 view .LVU1408
1584:Veno-Echo.cpp ****             }
 5088              		.loc 20 1584 29 is_stmt 0 view .LVU1409
 5089 00e8 1A4B     		ldr	r3, .L294+52
 5090 00ea 0022     		movs	r2, #0
 5091 00ec 1A70     		strb	r2, [r3]
 5092              	.L283:
1594:Veno-Echo.cpp ****             save_flag = true;
 5093              		.loc 20 1594 13 is_stmt 1 view .LVU1410
1594:Veno-Echo.cpp ****             save_flag = true;
 5094              		.loc 20 1594 39 is_stmt 0 view .LVU1411
 5095 00ee 1A49     		ldr	r1, .L294+56
 5096              	.LBB1397:
 5097              	.LBB1398:
 5098              	.LBB1399:
 5099              	.LBB1400:
 5100              	.LBB1401:
 5101              		.loc 22 397 18 view .LVU1412
 5102 00f0 0122     		movs	r2, #1
 5103 00f2 1A4B     		ldr	r3, .L294+60
 5104              	.LBE1401:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 207


 5105              	.LBE1400:
 5106              	.LBE1399:
 5107              	.LBE1398:
 5108              	.LBE1397:
1594:Veno-Echo.cpp ****             save_flag = true;
 5109              		.loc 20 1594 39 view .LVU1413
 5110 00f4 81ED078A 		vstr.32	s16, [r1, #28]
1595:Veno-Echo.cpp ****         }  
 5111              		.loc 20 1595 13 is_stmt 1 view .LVU1414
 5112              	.LVL257:
 5113              	.LBB1406:
 5114              	.LBI1397:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 5115              		.loc 23 80 5 view .LVU1415
 5116              	.LBB1405:
 5117              		.loc 23 81 7 view .LVU1416
 5118              	.LBB1404:
 5119              	.LBI1399:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 5120              		.loc 22 288 7 view .LVU1417
 5121              	.LBB1403:
 5122              	.LBI1400:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 5123              		.loc 22 390 7 view .LVU1418
 5124              	.LBB1402:
 5125              		.loc 22 397 18 is_stmt 0 view .LVU1419
 5126 00f8 BFF35B8F 		dmb	ish
 5127 00fc 1A70     		strb	r2, [r3]
 5128 00fe BFF35B8F 		dmb	ish
 5129              	.LVL258:
 5130              		.loc 22 397 18 view .LVU1420
 5131              	.LBE1402:
 5132              	.LBE1403:
 5133              	.LBE1404:
 5134              	.LBE1405:
 5135              	.LBE1406:
 5136              	.LBE1408:
 5137              	.LBE1413:
1598:Veno-Echo.cpp **** 
 5138              		.loc 20 1598 1 view .LVU1421
 5139 0102 BDEC028B 		vldm	sp!, {d8}
 5140              		.cfi_remember_state
 5141              		.cfi_restore 80
 5142              		.cfi_restore 81
 5143              		.cfi_def_cfa_offset 8
 5144 0106 10BD     		pop	{r4, pc}
 5145              	.L293:
 5146              		.cfi_restore_state
 5147              	.LBB1414:
 5148              	.LBB1409:
1586:Veno-Echo.cpp ****             {
 5149              		.loc 20 1586 18 is_stmt 1 view .LVU1422
 5150 0108 DFED157A 		vldr.32	s15, .L294+64
 5151 010c B4EEE78A 		vcmpe.f32	s16, s15
 5152 0110 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5153 0114 EBDD     		ble	.L283
1588:Veno-Echo.cpp ****             }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 208


 5154              		.loc 20 1588 17 view .LVU1423
1588:Veno-Echo.cpp ****             }
 5155              		.loc 20 1588 29 is_stmt 0 view .LVU1424
 5156 0116 0F4B     		ldr	r3, .L294+52
 5157 0118 0122     		movs	r2, #1
 5158 011a 1A70     		strb	r2, [r3]
 5159 011c E7E7     		b	.L283
 5160              	.L295:
 5161 011e 00BF     		.align	2
 5162              	.L294:
 5163 0120 18000000 		.word	.LANCHOR4+24
 5164 0124 00000000 		.word	.LANCHOR7
 5165 0128 00000000 		.word	.LANCHOR77
 5166 012c 00000000 		.word	.LANCHOR78
 5167 0130 00000000 		.word	.LANCHOR79
 5168 0134 00000000 		.word	.LANCHOR84
 5169 0138 00000000 		.word	0
 5170 013c 00000000 		.word	.LANCHOR80
 5171 0140 6F12033D 		.word	1023611503
 5172 0144 00000000 		.word	.LANCHOR81
 5173 0148 00000000 		.word	.LANCHOR82
 5174 014c 0AD7A33B 		.word	1000593162
 5175 0150 6666E63E 		.word	1055286886
 5176 0154 00000000 		.word	.LANCHOR83
 5177 0158 00000000 		.word	.LANCHOR15
 5178 015c 00000000 		.word	.LANCHOR16
 5179 0160 CDCC0C3F 		.word	1057803469
 5180              	.LBE1409:
 5181              	.LBE1414:
 5182              		.cfi_endproc
 5183              	.LFE4786:
 5185              		.section	.text._Z8GetModCVv,"ax",%progbits
 5186              		.align	1
 5187              		.p2align 2,,3
 5188              		.global	_Z8GetModCVv
 5189              		.syntax unified
 5190              		.thumb
 5191              		.thumb_func
 5192              		.fpu fpv5-d16
 5194              	_Z8GetModCVv:
 5195              	.LFB4787:
1601:Veno-Echo.cpp ****     //get modulation CV input
 5196              		.loc 20 1601 1 is_stmt 1 view -0
 5197              		.cfi_startproc
 5198              		@ args = 0, pretend = 0, frame = 0
 5199              		@ frame_needed = 0, uses_anonymous_args = 0
1603:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 5200              		.loc 20 1603 5 view .LVU1426
1601:Veno-Echo.cpp ****     //get modulation CV input
 5201              		.loc 20 1601 1 is_stmt 0 view .LVU1427
 5202 0000 08B5     		push	{r3, lr}
 5203              		.cfi_def_cfa_offset 8
 5204              		.cfi_offset 3, -8
 5205              		.cfi_offset 14, -4
1603:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 5206              		.loc 20 1603 30 view .LVU1428
 5207 0002 0621     		movs	r1, #6
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 209


 5208 0004 0648     		ldr	r0, .L298
 5209 0006 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 5210              	.LVL259:
 5211 000a 0020     		movs	r0, #0
 5212 000c 9FED051A 		vldr.32	s2, .L298+4
 5213 0010 DFED050A 		vldr.32	s1, .L298+8
 5214 0014 FFF7FEFF 		bl	_Z5scalefff9CurveType
 5215              	.LVL260:
1603:Veno-Echo.cpp ****     //LPF CV input and ModDepth control
 5216              		.loc 20 1603 23 view .LVU1429
 5217 0018 044B     		ldr	r3, .L298+12
 5218 001a 83ED000A 		vstr.32	s0, [r3]
1605:Veno-Echo.cpp **** 
 5219              		.loc 20 1605 1 view .LVU1430
 5220 001e 08BD     		pop	{r3, pc}
 5221              	.L299:
 5222              		.align	2
 5223              	.L298:
 5224 0020 18000000 		.word	.LANCHOR4+24
 5225 0024 00004843 		.word	1128792064
 5226 0028 000048C3 		.word	3276275712
 5227 002c 00000000 		.word	.LANCHOR85
 5228              		.cfi_endproc
 5229              	.LFE4787:
 5231              		.section	.text._Z10Update_Modv,"ax",%progbits
 5232              		.align	1
 5233              		.p2align 2,,3
 5234              		.global	_Z10Update_Modv
 5235              		.syntax unified
 5236              		.thumb
 5237              		.thumb_func
 5238              		.fpu fpv5-d16
 5240              	_Z10Update_Modv:
 5241              	.LFB4788:
1608:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 5242              		.loc 20 1608 1 is_stmt 1 view -0
 5243              		.cfi_startproc
 5244              		@ args = 0, pretend = 0, frame = 0
 5245              		@ frame_needed = 0, uses_anonymous_args = 0
1609:Veno-Echo.cpp ****     static float modulation_CV{};
 5246              		.loc 20 1609 5 view .LVU1432
1610:Veno-Echo.cpp ****     fonepole(modulation_CV,modulation_CV_Raw,0.01f);
 5247              		.loc 20 1610 5 view .LVU1433
1611:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 5248              		.loc 20 1611 5 view .LVU1434
 5249              	.LVL261:
 5250              	.LBB1415:
 5251              	.LBI1415:
 135:../DaisySP/Source/Utility/dsp.h **** {
 5252              		.loc 25 135 13 view .LVU1435
 5253              	.LBB1416:
 5254              		.loc 25 137 5 view .LVU1436
 5255              	.LBE1416:
 5256              	.LBE1415:
1608:Veno-Echo.cpp ****     static float ModDepth_Filtered; 
 5257              		.loc 20 1608 1 is_stmt 0 view .LVU1437
 5258 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 210


 5259              		.cfi_def_cfa_offset 16
 5260              		.cfi_offset 3, -16
 5261              		.cfi_offset 4, -12
 5262              		.cfi_offset 5, -8
 5263              		.cfi_offset 14, -4
1611:Veno-Echo.cpp ****     fonepole(ModDepth_Filtered,ModDepth,0.01f);
 5264              		.loc 20 1611 13 view .LVU1438
 5265 0002 154A     		ldr	r2, .L302
 5266              	.LBB1423:
 5267              	.LBB1417:
 5268              		.loc 25 137 9 view .LVU1439
 5269 0004 154C     		ldr	r4, .L302+4
 5270              	.LBE1417:
 5271              	.LBE1423:
 5272              	.LBB1424:
 5273              	.LBB1425:
 5274 0006 164D     		ldr	r5, .L302+8
 5275              	.LBE1425:
 5276              	.LBE1424:
1612:Veno-Echo.cpp ****     //calculate InternalMod
 5277              		.loc 20 1612 13 view .LVU1440
 5278 0008 164B     		ldr	r3, .L302+12
 5279              	.LBB1431:
 5280              	.LBB1418:
 5281              		.loc 25 137 9 view .LVU1441
 5282 000a 94ED007A 		vldr.32	s14, [r4]
 5283              	.LBE1418:
 5284              	.LBE1431:
 5285              	.LBB1432:
 5286              	.LBB1426:
 5287 000e D5ED007A 		vldr.32	s15, [r5]
 5288              	.LBE1426:
 5289              	.LBE1432:
 5290              	.LBB1433:
 5291              	.LBB1419:
 5292              		.loc 25 137 24 view .LVU1442
 5293 0012 92ED006A 		vldr.32	s12, [r2]
 5294              	.LBE1419:
 5295              	.LBE1433:
 5296              	.LBB1434:
 5297              	.LBB1427:
 5298 0016 D3ED006A 		vldr.32	s13, [r3]
 5299              	.LBE1427:
 5300              	.LBE1434:
 5301              	.LBB1435:
 5302              	.LBB1420:
 5303 001a 36EE476A 		vsub.f32	s12, s12, s14
 5304              		.loc 25 137 9 view .LVU1443
 5305 001e DFED125A 		vldr.32	s11, .L302+16
 5306              	.LBE1420:
 5307              	.LBE1435:
 5308              	.LBB1436:
 5309              	.LBB1428:
 5310              		.loc 25 137 24 view .LVU1444
 5311 0022 76EEE76A 		vsub.f32	s13, s13, s15
 5312              	.LBE1428:
 5313              	.LBE1436:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 211


1614:Veno-Echo.cpp ****     //apply modulation to delay lines
 5314              		.loc 20 1614 34 view .LVU1445
 5315 0026 1148     		ldr	r0, .L302+20
 5316              	.LBB1437:
 5317              	.LBB1421:
 5318              		.loc 25 137 9 view .LVU1446
 5319 0028 A6EE257A 		vfma.f32	s14, s12, s11
 5320              	.LBE1421:
 5321              	.LBE1437:
 5322              	.LBB1438:
 5323              	.LBB1429:
 5324 002c E6EEA57A 		vfma.f32	s15, s13, s11
 5325              	.LBE1429:
 5326              	.LBE1438:
 5327              	.LBB1439:
 5328              	.LBB1422:
 5329 0030 84ED007A 		vstr.32	s14, [r4]
 5330              	.LVL262:
 5331              		.loc 25 137 9 view .LVU1447
 5332              	.LBE1422:
 5333              	.LBE1439:
1612:Veno-Echo.cpp ****     //calculate InternalMod
 5334              		.loc 20 1612 5 is_stmt 1 view .LVU1448
 5335              	.LBB1440:
 5336              	.LBI1424:
 135:../DaisySP/Source/Utility/dsp.h **** {
 5337              		.loc 25 135 13 view .LVU1449
 5338              	.LBB1430:
 5339              		.loc 25 137 5 view .LVU1450
 5340              		.loc 25 137 9 is_stmt 0 view .LVU1451
 5341 0034 C5ED007A 		vstr.32	s15, [r5]
 5342              	.LVL263:
 5343              		.loc 25 137 9 view .LVU1452
 5344              	.LBE1430:
 5345              	.LBE1440:
1614:Veno-Echo.cpp ****     //apply modulation to delay lines
 5346              		.loc 20 1614 5 is_stmt 1 view .LVU1453
1614:Veno-Echo.cpp ****     //apply modulation to delay lines
 5347              		.loc 20 1614 34 is_stmt 0 view .LVU1454
 5348 0038 FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 5349              	.LVL264:
1616:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5350              		.loc 20 1616 5 is_stmt 1 view .LVU1455
1616:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5351              		.loc 20 1616 40 is_stmt 0 view .LVU1456
 5352 003c 95ED007A 		vldr.32	s14, [r5]
 5353 0040 D4ED007A 		vldr.32	s15, [r4]
 5354              	.LBB1441:
 5355              	.LBB1442:
  51:DelayMulti.h  **** 
  52:DelayMulti.h  **** //functions:
  53:DelayMulti.h  **** 
  54:DelayMulti.h  **** //initialises delay class
  55:DelayMulti.h  **** void init(dsy_gpio_pin ledpin, float samplerate);
  56:DelayMulti.h  **** 
  57:DelayMulti.h  **** //Updates delay time from pot value and base tempo (set ratio)
  58:DelayMulti.h  **** bool SetDelayTime(float delaytime_pot, bool syncMode);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 212


  59:DelayMulti.h  **** 
  60:DelayMulti.h  **** //Updates xfades, updates delayline with delayTime[] + modulation and 
  61:DelayMulti.h  **** //returns combined output from delay heads, and updates LEDs. 
  62:DelayMulti.h  **** //Call at audio samplerate
  63:DelayMulti.h  **** const float& GetOutput();
  64:DelayMulti.h  **** 
  65:DelayMulti.h  **** //Writes to delayline
  66:DelayMulti.h  **** void Write(const float& in);
  67:DelayMulti.h  **** 
  68:DelayMulti.h  **** //this must be called once per sample
  69:DelayMulti.h  **** void SetModulation(const float& mod){mod_ = mod;}
 5356              		.loc 17 69 43 view .LVU1457
 5357 0044 0A4A     		ldr	r2, .L302+24
 5358              	.LBE1442:
 5359              	.LBE1441:
1616:Veno-Echo.cpp ****     delayR.SetModulation(modulation_CV + internalmod);
 5360              		.loc 20 1616 40 view .LVU1458
 5361 0046 E0EE077A 		vfma.f32	s15, s0, s14
 5362              	.LBB1445:
 5363              	.LBI1441:
 5364              		.loc 17 69 6 is_stmt 1 view .LVU1459
 5365              	.LVL265:
 5366              	.LBB1443:
 5367              		.loc 17 69 38 view .LVU1460
 5368              	.LBE1443:
 5369              	.LBE1445:
 5370              	.LBB1446:
 5371              	.LBB1447:
 5372              		.loc 17 69 43 is_stmt 0 view .LVU1461
 5373 004a 0A4B     		ldr	r3, .L302+28
 5374              	.LBE1447:
 5375              	.LBE1446:
 5376              	.LBB1449:
 5377              	.LBB1444:
 5378 004c C2ED3E7A 		vstr.32	s15, [r2, #248]
 5379              	.LBE1444:
 5380              	.LBE1449:
1617:Veno-Echo.cpp **** }
 5381              		.loc 20 1617 5 is_stmt 1 view .LVU1462
 5382              	.LVL266:
 5383              	.LBB1450:
 5384              	.LBI1446:
 5385              		.loc 17 69 6 view .LVU1463
 5386              	.LBB1448:
 5387              		.loc 17 69 38 view .LVU1464
 5388              		.loc 17 69 43 is_stmt 0 view .LVU1465
 5389 0050 C3ED3E7A 		vstr.32	s15, [r3, #248]
 5390              	.LBE1448:
 5391              	.LBE1450:
1618:Veno-Echo.cpp **** 
 5392              		.loc 20 1618 1 view .LVU1466
 5393 0054 38BD     		pop	{r3, r4, r5, pc}
 5394              	.L303:
 5395 0056 00BF     		.align	2
 5396              	.L302:
 5397 0058 00000000 		.word	.LANCHOR85
 5398 005c 00000000 		.word	.LANCHOR86
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 213


 5399 0060 00000000 		.word	.LANCHOR87
 5400 0064 00000000 		.word	.LANCHOR68
 5401 0068 0AD7233C 		.word	1008981770
 5402 006c 00000000 		.word	.LANCHOR76
 5403 0070 00000000 		.word	.LANCHOR0
 5404 0074 00000000 		.word	.LANCHOR1
 5405              		.cfi_endproc
 5406              	.LFE4788:
 5408              		.section	.text._Z11UpdateClockv,"ax",%progbits
 5409              		.align	1
 5410              		.p2align 2,,3
 5411              		.global	_Z11UpdateClockv
 5412              		.syntax unified
 5413              		.thumb
 5414              		.thumb_func
 5415              		.fpu fpv5-d16
 5417              	_Z11UpdateClockv:
 5418              	.LFB4789:
1621:Veno-Echo.cpp ****     static int divCounter{};
 5419              		.loc 20 1621 1 is_stmt 1 view -0
 5420              		.cfi_startproc
 5421              		@ args = 0, pretend = 0, frame = 0
 5422              		@ frame_needed = 0, uses_anonymous_args = 0
1622:Veno-Echo.cpp ****     //if clock in pulse received
 5423              		.loc 20 1622 5 view .LVU1468
1624:Veno-Echo.cpp ****     {   
 5424              		.loc 20 1624 5 view .LVU1469
1621:Veno-Echo.cpp ****     static int divCounter{};
 5425              		.loc 20 1621 1 is_stmt 0 view .LVU1470
 5426 0000 08B5     		push	{r3, lr}
 5427              		.cfi_def_cfa_offset 8
 5428              		.cfi_offset 3, -8
 5429              		.cfi_offset 14, -4
1624:Veno-Echo.cpp ****     {   
 5430              		.loc 20 1624 21 view .LVU1471
 5431 0002 0F48     		ldr	r0, .L313
 5432 0004 FFF7FEFF 		bl	_ZN5daisy6GateIn4TrigEv
 5433              	.LVL267:
1624:Veno-Echo.cpp ****     {   
 5434              		.loc 20 1624 5 view .LVU1472
 5435 0008 00B9     		cbnz	r0, .L312
 5436              	.L304:
1639:Veno-Echo.cpp **** 
 5437              		.loc 20 1639 1 view .LVU1473
 5438 000a 08BD     		pop	{r3, pc}
 5439              	.L312:
1626:Veno-Echo.cpp ****         //tempoLED_BASE.resetPhase();
 5440              		.loc 20 1626 9 is_stmt 1 view .LVU1474
1628:Veno-Echo.cpp ****         {
 5441              		.loc 20 1628 9 view .LVU1475
1630:Veno-Echo.cpp ****             {
 5442              		.loc 20 1630 13 view .LVU1476
1630:Veno-Echo.cpp ****             {
 5443              		.loc 20 1630 29 is_stmt 0 view .LVU1477
 5444 000c 0D48     		ldr	r0, .L313+4
 5445 000e FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 5446              	.LVL268:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 214


1630:Veno-Echo.cpp ****             {
 5447              		.loc 20 1630 13 view .LVU1478
 5448 0012 0028     		cmp	r0, #0
 5449 0014 F9D0     		beq	.L304
 5450              	.LBB1458:
 5451              	.LBI1458:
1620:Veno-Echo.cpp **** {
 5452              		.loc 20 1620 6 is_stmt 1 view .LVU1479
 5453              	.LBB1459:
1632:Veno-Echo.cpp ****                 AltControls.tapLength = BaseTempo.getTapLength();
 5454              		.loc 20 1632 17 view .LVU1480
1632:Veno-Echo.cpp ****                 AltControls.tapLength = BaseTempo.getTapLength();
 5455              		.loc 20 1632 39 is_stmt 0 view .LVU1481
 5456 0016 0B48     		ldr	r0, .L313+4
 5457 0018 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 5458              	.LVL269:
 5459 001c 0A48     		ldr	r0, .L313+8
 5460 001e FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 5461              	.LVL270:
1633:Veno-Echo.cpp ****                 save_flag = true;
 5462              		.loc 20 1633 17 is_stmt 1 view .LVU1482
1633:Veno-Echo.cpp ****                 save_flag = true;
 5463              		.loc 20 1633 63 is_stmt 0 view .LVU1483
 5464 0022 0848     		ldr	r0, .L313+4
 5465 0024 FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 5466              	.LVL271:
1633:Veno-Echo.cpp ****                 save_flag = true;
 5467              		.loc 20 1633 39 view .LVU1484
 5468 0028 0849     		ldr	r1, .L313+12
 5469              	.LBB1460:
 5470              	.LBB1461:
 5471              	.LBB1462:
 5472              	.LBB1463:
 5473              		.loc 22 397 18 view .LVU1485
 5474 002a 0122     		movs	r2, #1
 5475 002c 084B     		ldr	r3, .L313+16
 5476              	.LBE1463:
 5477              	.LBE1462:
 5478              	.LBE1461:
 5479              	.LBE1460:
1633:Veno-Echo.cpp ****                 save_flag = true;
 5480              		.loc 20 1633 39 view .LVU1486
 5481 002e 81ED080A 		vstr.32	s0, [r1, #32]
1634:Veno-Echo.cpp ****             }
 5482              		.loc 20 1634 17 is_stmt 1 view .LVU1487
 5483              	.LVL272:
 5484              	.LBB1467:
 5485              	.LBI1460:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 5486              		.loc 23 80 5 view .LVU1488
 5487              	.LBE1467:
 5488              	.LBE1459:
 5489              	.LBE1458:
 5490              		.loc 23 81 7 view .LVU1489
 5491              	.LBB1470:
 5492              	.LBB1469:
 5493              	.LBB1468:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 215


 5494              	.LBB1466:
 5495              	.LBI1461:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 5496              		.loc 22 288 7 view .LVU1490
 5497              	.LBB1465:
 5498              	.LBI1462:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 5499              		.loc 22 390 7 view .LVU1491
 5500              	.LBB1464:
 5501              		.loc 22 397 18 is_stmt 0 view .LVU1492
 5502 0032 BFF35B8F 		dmb	ish
 5503 0036 1A70     		strb	r2, [r3]
 5504 0038 BFF35B8F 		dmb	ish
 5505              	.LVL273:
 5506              		.loc 22 397 18 view .LVU1493
 5507              	.LBE1464:
 5508              	.LBE1465:
 5509              	.LBE1466:
 5510              	.LBE1468:
 5511              	.LBE1469:
 5512              	.LBE1470:
1639:Veno-Echo.cpp **** 
 5513              		.loc 20 1639 1 view .LVU1494
 5514 003c 08BD     		pop	{r3, pc}
 5515              	.L314:
 5516 003e 00BF     		.align	2
 5517              	.L313:
 5518 0040 00000000 		.word	.LANCHOR88
 5519 0044 00000000 		.word	.LANCHOR26
 5520 0048 00000000 		.word	.LANCHOR89
 5521 004c 00000000 		.word	.LANCHOR15
 5522 0050 00000000 		.word	.LANCHOR16
 5523              		.cfi_endproc
 5524              	.LFE4789:
 5526              		.section	.text._Z21Update_DelayBaseTempov,"ax",%progbits
 5527              		.align	1
 5528              		.p2align 2,,3
 5529              		.global	_Z21Update_DelayBaseTempov
 5530              		.syntax unified
 5531              		.thumb
 5532              		.thumb_func
 5533              		.fpu fpv5-d16
 5535              	_Z21Update_DelayBaseTempov:
 5536              	.LFB4791:
1792:Veno-Echo.cpp ****     delayL.SetBaseTempo(BaseTempo.getDelayLength());
 5537              		.loc 20 1792 1 is_stmt 1 view -0
 5538              		.cfi_startproc
 5539              		@ args = 0, pretend = 0, frame = 0
 5540              		@ frame_needed = 0, uses_anonymous_args = 0
1793:Veno-Echo.cpp ****     delayR.SetBaseTempo(BaseTempo.getDelayLength());
 5541              		.loc 20 1793 5 view .LVU1496
1792:Veno-Echo.cpp ****     delayL.SetBaseTempo(BaseTempo.getDelayLength());
 5542              		.loc 20 1792 1 is_stmt 0 view .LVU1497
 5543 0000 08B5     		push	{r3, lr}
 5544              		.cfi_def_cfa_offset 8
 5545              		.cfi_offset 3, -8
 5546              		.cfi_offset 14, -4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 216


1793:Veno-Echo.cpp ****     delayR.SetBaseTempo(BaseTempo.getDelayLength());
 5547              		.loc 20 1793 49 view .LVU1498
 5548 0002 0648     		ldr	r0, .L317
 5549 0004 FFF7FEFF 		bl	_ZN8Taptempo14getDelayLengthEv
 5550              	.LVL274:
 5551              	.LBB1471:
 5552              	.LBI1471:
  70:DelayMulti.h  **** //void SetSync(const bool& syncMode){syncMode_ = syncMode;}
  71:DelayMulti.h  **** void SetBaseTempo(const float& tempo){baseTempo_ = tempo;}
 5553              		.loc 17 71 6 is_stmt 1 view .LVU1499
 5554              	.LBB1472:
 5555              		.loc 17 71 39 view .LVU1500
 5556              		.loc 17 71 50 is_stmt 0 view .LVU1501
 5557 0008 054B     		ldr	r3, .L317+4
 5558              	.LBE1472:
 5559              	.LBE1471:
1794:Veno-Echo.cpp **** }
 5560              		.loc 20 1794 49 view .LVU1502
 5561 000a 0448     		ldr	r0, .L317
 5562              	.LBB1474:
 5563              	.LBB1473:
 5564              		.loc 17 71 50 view .LVU1503
 5565 000c 83ED480A 		vstr.32	s0, [r3, #288]
 5566              	.LBE1473:
 5567              	.LBE1474:
1794:Veno-Echo.cpp **** }
 5568              		.loc 20 1794 5 is_stmt 1 view .LVU1504
1794:Veno-Echo.cpp **** }
 5569              		.loc 20 1794 49 is_stmt 0 view .LVU1505
 5570 0010 FFF7FEFF 		bl	_ZN8Taptempo14getDelayLengthEv
 5571              	.LVL275:
 5572              	.LBB1475:
 5573              	.LBI1475:
 5574              		.loc 17 71 6 is_stmt 1 view .LVU1506
 5575              	.LBB1476:
 5576              		.loc 17 71 39 view .LVU1507
 5577              		.loc 17 71 50 is_stmt 0 view .LVU1508
 5578 0014 034B     		ldr	r3, .L317+8
 5579 0016 83ED480A 		vstr.32	s0, [r3, #288]
 5580              	.LBE1476:
 5581              	.LBE1475:
1795:Veno-Echo.cpp **** 
 5582              		.loc 20 1795 1 view .LVU1509
 5583 001a 08BD     		pop	{r3, pc}
 5584              	.L318:
 5585              		.align	2
 5586              	.L317:
 5587 001c 00000000 		.word	.LANCHOR26
 5588 0020 00000000 		.word	.LANCHOR0
 5589 0024 00000000 		.word	.LANCHOR1
 5590              		.cfi_endproc
 5591              	.LFE4791:
 5593              		.section	.text._Z21Update_DelayTempoLEDsv,"ax",%progbits
 5594              		.align	1
 5595              		.p2align 2,,3
 5596              		.global	_Z21Update_DelayTempoLEDsv
 5597              		.syntax unified
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 217


 5598              		.thumb
 5599              		.thumb_func
 5600              		.fpu fpv5-d16
 5602              	_Z21Update_DelayTempoLEDsv:
 5603              	.LFB4792:
1798:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
 5604              		.loc 20 1798 1 is_stmt 1 view -0
 5605              		.cfi_startproc
 5606              		@ args = 0, pretend = 0, frame = 0
 5607              		@ frame_needed = 0, uses_anonymous_args = 0
1799:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
 5608              		.loc 20 1799 5 view .LVU1511
1798:Veno-Echo.cpp ****     delayL.updateTempoLED(syncMode);
 5609              		.loc 20 1798 1 is_stmt 0 view .LVU1512
 5610 0000 10B5     		push	{r4, lr}
 5611              		.cfi_def_cfa_offset 8
 5612              		.cfi_offset 4, -8
 5613              		.cfi_offset 14, -4
1799:Veno-Echo.cpp ****     delayR.updateTempoLED(syncMode);
 5614              		.loc 20 1799 26 view .LVU1513
 5615 0002 054C     		ldr	r4, .L321
 5616 0004 0548     		ldr	r0, .L321+4
 5617 0006 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 5618 0008 FFF7FEFF 		bl	_ZN10DelayMulti14updateTempoLEDEb
 5619              	.LVL276:
1800:Veno-Echo.cpp ****     //DELAYL_DEBUG = delayL.GetDelayTime();
 5620              		.loc 20 1800 5 is_stmt 1 view .LVU1514
1800:Veno-Echo.cpp ****     //DELAYL_DEBUG = delayL.GetDelayTime();
 5621              		.loc 20 1800 26 is_stmt 0 view .LVU1515
 5622 000c 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 5623 000e 0448     		ldr	r0, .L321+8
1804:Veno-Echo.cpp **** 
 5624              		.loc 20 1804 1 view .LVU1516
 5625 0010 BDE81040 		pop	{r4, lr}
 5626              		.cfi_restore 14
 5627              		.cfi_restore 4
 5628              		.cfi_def_cfa_offset 0
1800:Veno-Echo.cpp ****     //DELAYL_DEBUG = delayL.GetDelayTime();
 5629              		.loc 20 1800 26 view .LVU1517
 5630 0014 FFF7FEBF 		b	_ZN10DelayMulti14updateTempoLEDEb
 5631              	.LVL277:
 5632              	.L322:
 5633              		.align	2
 5634              	.L321:
 5635 0018 00000000 		.word	.LANCHOR12
 5636 001c 00000000 		.word	.LANCHOR0
 5637 0020 00000000 		.word	.LANCHOR1
 5638              		.cfi_endproc
 5639              	.LFE4792:
 5641              		.section	.text._Z19Update_BaseTempoLEDv,"ax",%progbits
 5642              		.align	1
 5643              		.p2align 2,,3
 5644              		.global	_Z19Update_BaseTempoLEDv
 5645              		.syntax unified
 5646              		.thumb
 5647              		.thumb_func
 5648              		.fpu fpv5-d16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 218


 5650              	_Z19Update_BaseTempoLEDv:
 5651              	.LFB4793:
1807:Veno-Echo.cpp ****     tempoLED_BASE.update();
 5652              		.loc 20 1807 1 is_stmt 1 view -0
 5653              		.cfi_startproc
 5654              		@ args = 0, pretend = 0, frame = 0
 5655              		@ frame_needed = 0, uses_anonymous_args = 0
1808:Veno-Echo.cpp **** 
 5656              		.loc 20 1808 5 view .LVU1519
1808:Veno-Echo.cpp **** 
 5657              		.loc 20 1808 25 is_stmt 0 view .LVU1520
 5658 0000 1848     		ldr	r0, .L327
1807:Veno-Echo.cpp ****     tempoLED_BASE.update();
 5659              		.loc 20 1807 1 view .LVU1521
 5660 0002 08B5     		push	{r3, lr}
 5661              		.cfi_def_cfa_offset 8
 5662              		.cfi_offset 3, -8
 5663              		.cfi_offset 14, -4
1808:Veno-Echo.cpp **** 
 5664              		.loc 20 1808 25 view .LVU1522
 5665 0004 FFF7FEFF 		bl	_ZN8TempoLED6updateEv
 5666              	.LVL278:
1810:Veno-Echo.cpp **** 
 5667              		.loc 20 1810 5 is_stmt 1 view .LVU1523
1812:Veno-Echo.cpp ****     {
 5668              		.loc 20 1812 5 view .LVU1524
1812:Veno-Echo.cpp ****     {
 5669              		.loc 20 1812 27 is_stmt 0 view .LVU1525
 5670 0008 1648     		ldr	r0, .L327
 5671 000a FFF7FEFF 		bl	_ZN8TempoLED5isEOCEv
 5672              	.LVL279:
1812:Veno-Echo.cpp ****     {
 5673              		.loc 20 1812 5 view .LVU1526
 5674 000e D0B9     		cbnz	r0, .L324
 5675 0010 154B     		ldr	r3, .L327+4
 5676 0012 1B68     		ldr	r3, [r3]
 5677              	.L325:
1817:Veno-Echo.cpp ****     //update base phase for both delay lines
 5678              		.loc 20 1817 5 is_stmt 1 view .LVU1527
 5679              	.LVL280:
 5680              	.LBB1477:
 5681              	.LBI1477:
  71:LEDs.h        **** 
 5682              		.loc 14 71 7 view .LVU1528
 5683              	.LBB1478:
  71:LEDs.h        **** 
 5684              		.loc 14 71 20 view .LVU1529
  71:LEDs.h        **** 
 5685              		.loc 14 71 20 is_stmt 0 view .LVU1530
 5686              	.LBE1478:
 5687              	.LBE1477:
  17:oscillator_p.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  18:oscillator_p.h ****     */
  19:oscillator_p.h ****     enum
  20:oscillator_p.h ****     {
  21:oscillator_p.h ****         WAVE_SIN,
  22:oscillator_p.h ****         WAVE_TRI,
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 219


  23:oscillator_p.h ****         WAVE_SAW,
  24:oscillator_p.h ****         WAVE_RAMP,
  25:oscillator_p.h ****         WAVE_SQUARE,
  26:oscillator_p.h ****         WAVE_POLYBLEP_TRI,
  27:oscillator_p.h ****         WAVE_POLYBLEP_SAW,
  28:oscillator_p.h ****         WAVE_POLYBLEP_SQUARE,
  29:oscillator_p.h ****         WAVE_LAST,
  30:oscillator_p.h ****     };
  31:oscillator_p.h **** 
  32:oscillator_p.h **** 
  33:oscillator_p.h ****     /** Initializes the Oscillator
  34:oscillator_p.h **** 
  35:oscillator_p.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  36:oscillator_p.h **** 
  37:oscillator_p.h ****         Defaults:
  38:oscillator_p.h ****         - freq_ = 100 Hz
  39:oscillator_p.h ****         - amp_ = 0.5
  40:oscillator_p.h ****         - waveform_ = sine wave.
  41:oscillator_p.h ****     */
  42:oscillator_p.h ****     void Init(float sample_rate)
  43:oscillator_p.h ****     {
  44:oscillator_p.h ****         sr_        = sample_rate;
  45:oscillator_p.h ****         sr_recip_  = 1.0f / sample_rate;
  46:oscillator_p.h ****         freq_      = 100.0f;
  47:oscillator_p.h ****         amp_       = 0.5f;
  48:oscillator_p.h ****         phase_     = 0.0f;
  49:oscillator_p.h ****         phase_inc_ = CalcPhaseInc(freq_);
  50:oscillator_p.h ****         waveform_  = WAVE_SIN;
  51:oscillator_p.h ****         eoc_       = true;
  52:oscillator_p.h ****         eor_       = true;
  53:oscillator_p.h ****     }
  54:oscillator_p.h **** 
  55:oscillator_p.h **** 
  56:oscillator_p.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  57:oscillator_p.h ****     */
  58:oscillator_p.h ****     inline void SetFreq(const float f)
  59:oscillator_p.h ****     {
  60:oscillator_p.h ****         freq_      = f;
  61:oscillator_p.h ****         phase_inc_ = CalcPhaseInc(f);
  62:oscillator_p.h ****     }
  63:oscillator_p.h **** 
  64:oscillator_p.h **** 
  65:oscillator_p.h ****     /** Sets the amplitude of the waveform.
  66:oscillator_p.h ****     */
  67:oscillator_p.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:oscillator_p.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:oscillator_p.h ****     */
  70:oscillator_p.h ****     inline void SetWaveform(const uint8_t wf)
  71:oscillator_p.h ****     {
  72:oscillator_p.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
  73:oscillator_p.h ****     }
  74:oscillator_p.h **** 
  75:oscillator_p.h ****     /** Returns true if cycle is at end of rise. Set during call to Process.
  76:oscillator_p.h ****     */
  77:oscillator_p.h ****     inline bool IsEOR() { return eor_; }
  78:oscillator_p.h **** 
  79:oscillator_p.h ****     /** Returns true if cycle is at end of cycle. Set during call to Process.
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 220


  80:oscillator_p.h ****     */
  81:oscillator_p.h ****     inline bool IsEOC() { return eoc_; }
  82:oscillator_p.h **** 
  83:oscillator_p.h ****     /** Returns true if cycle rising.
  84:oscillator_p.h ****     */
  85:oscillator_p.h ****     inline bool IsRising() { return phase_ < PI_F; }
  86:oscillator_p.h **** 
  87:oscillator_p.h ****     /** Returns true if cycle falling.
  88:oscillator_p.h ****     */
  89:oscillator_p.h ****     inline bool IsFalling() { return phase_ >= PI_F; }
  90:oscillator_p.h **** 
  91:oscillator_p.h ****     //Returns phase angle
  92:oscillator_p.h ****     inline float GetPhase() { return phase_; }
 5688              		.loc 15 92 31 is_stmt 1 view .LVU1531
 5689              	.LBB1480:
 5690              	.LBB1479:
  71:LEDs.h        **** 
 5691              		.loc 14 71 41 is_stmt 0 view .LVU1532
 5692 0014 134A     		ldr	r2, .L327
 5693              	.LBE1479:
 5694              	.LBE1480:
1817:Veno-Echo.cpp ****     //update base phase for both delay lines
 5695              		.loc 20 1817 50 view .LVU1533
 5696 0016 B1EE086A 		vmov.f32	s12, #6.0e+0
1817:Veno-Echo.cpp ****     //update base phase for both delay lines
 5697              		.loc 20 1817 73 view .LVU1534
 5698 001a 07EE903A 		vmov	s15, r3	@ int
1817:Veno-Echo.cpp ****     //update base phase for both delay lines
 5699              		.loc 20 1817 55 view .LVU1535
 5700 001e DFED136A 		vldr.32	s13, .L327+8
1817:Veno-Echo.cpp ****     //update base phase for both delay lines
 5701              		.loc 20 1817 50 view .LVU1536
 5702 0022 D2ED0C5A 		vldr.32	s11, [r2, #48]
1817:Veno-Echo.cpp ****     //update base phase for both delay lines
 5703              		.loc 20 1817 73 view .LVU1537
 5704 0026 F8EEE77A 		vcvt.f32.s32	s15, s15
 5705              	.LBB1481:
 5706              	.LBB1482:
  72:DelayMulti.h  **** void SetBasePhase(const float& basePhase){basePhase_ = basePhase;}
 5707              		.loc 17 72 54 view .LVU1538
 5708 002a 1149     		ldr	r1, .L327+12
 5709              	.LBE1482:
 5710              	.LBE1481:
1817:Veno-Echo.cpp ****     //update base phase for both delay lines
 5711              		.loc 20 1817 50 view .LVU1539
 5712 002c 85EE867A 		vdiv.f32	s14, s11, s12
 5713              	.LBB1484:
 5714              	.LBB1485:
 5715              		.loc 17 72 54 view .LVU1540
 5716 0030 104A     		ldr	r2, .L327+16
 5717              	.LBE1485:
 5718              	.LBE1484:
1821:Veno-Echo.cpp **** }
 5719              		.loc 20 1821 17 view .LVU1541
 5720 0032 114B     		ldr	r3, .L327+20
1817:Veno-Echo.cpp ****     //update base phase for both delay lines
 5721              		.loc 20 1817 55 view .LVU1542
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 221


 5722 0034 A7EEA67A 		vfma.f32	s14, s15, s13
 5723              	.LVL281:
1819:Veno-Echo.cpp ****     delayR.SetBasePhase( dividedPhase );
 5724              		.loc 20 1819 5 is_stmt 1 view .LVU1543
 5725              	.LBB1487:
 5726              	.LBI1481:
 5727              		.loc 17 72 6 view .LVU1544
 5728              	.LBB1483:
 5729              		.loc 17 72 43 view .LVU1545
 5730              		.loc 17 72 54 is_stmt 0 view .LVU1546
 5731 0038 81ED477A 		vstr.32	s14, [r1, #284]
 5732              	.LBE1483:
 5733              	.LBE1487:
1820:Veno-Echo.cpp ****     PHASE_DEBUG = dividedPhase;
 5734              		.loc 20 1820 5 is_stmt 1 view .LVU1547
 5735              	.LVL282:
 5736              	.LBB1488:
 5737              	.LBI1484:
 5738              		.loc 17 72 6 view .LVU1548
 5739              	.LBB1486:
 5740              		.loc 17 72 43 view .LVU1549
 5741              		.loc 17 72 54 is_stmt 0 view .LVU1550
 5742 003c 82ED477A 		vstr.32	s14, [r2, #284]
 5743              	.LBE1486:
 5744              	.LBE1488:
1821:Veno-Echo.cpp **** }
 5745              		.loc 20 1821 5 is_stmt 1 view .LVU1551
1821:Veno-Echo.cpp **** }
 5746              		.loc 20 1821 17 is_stmt 0 view .LVU1552
 5747 0040 83ED007A 		vstr.32	s14, [r3]
 5748              	.LVL283:
1822:Veno-Echo.cpp **** 
 5749              		.loc 20 1822 1 view .LVU1553
 5750 0044 08BD     		pop	{r3, pc}
 5751              	.LVL284:
 5752              	.L324:
1814:Veno-Echo.cpp ****     }
 5753              		.loc 20 1814 9 is_stmt 1 view .LVU1554
1814:Veno-Echo.cpp ****     }
 5754              		.loc 20 1814 38 is_stmt 0 view .LVU1555
 5755 0046 0849     		ldr	r1, .L327+4
1814:Veno-Echo.cpp ****     }
 5756              		.loc 20 1814 43 view .LVU1556
 5757 0048 0C4B     		ldr	r3, .L327+24
1814:Veno-Echo.cpp ****     }
 5758              		.loc 20 1814 38 view .LVU1557
 5759 004a 0A68     		ldr	r2, [r1]
 5760 004c 0132     		adds	r2, r2, #1
1814:Veno-Echo.cpp ****     }
 5761              		.loc 20 1814 43 view .LVU1558
 5762 004e 83FB0203 		smull	r0, r3, r3, r2
 5763 0052 A3EBE273 		sub	r3, r3, r2, asr #31
 5764 0056 03EB4303 		add	r3, r3, r3, lsl #1
 5765 005a A2EB4303 		sub	r3, r2, r3, lsl #1
1814:Veno-Echo.cpp ****     }
 5766              		.loc 20 1814 22 view .LVU1559
 5767 005e 0B60     		str	r3, [r1]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 222


 5768 0060 D8E7     		b	.L325
 5769              	.L328:
 5770 0062 00BF     		.align	2
 5771              	.L327:
 5772 0064 00000000 		.word	.LANCHOR89
 5773 0068 00000000 		.word	.LANCHOR90
 5774 006c 920A863F 		.word	1065749138
 5775 0070 00000000 		.word	.LANCHOR0
 5776 0074 00000000 		.word	.LANCHOR1
 5777 0078 00000000 		.word	.LANCHOR91
 5778 007c ABAAAA2A 		.word	715827883
 5779              		.cfi_endproc
 5780              	.LFE4793:
 5782              		.section	.text._Z13ApplySettingsRK8Settings,"ax",%progbits
 5783              		.align	1
 5784              		.p2align 2,,3
 5785              		.global	_Z13ApplySettingsRK8Settings
 5786              		.syntax unified
 5787              		.thumb
 5788              		.thumb_func
 5789              		.fpu fpv5-d16
 5791              	_Z13ApplySettingsRK8Settings:
 5792              	.LVL285:
 5793              	.LFB4794:
1826:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5794              		.loc 20 1826 1 is_stmt 1 view -0
 5795              		.cfi_startproc
 5796              		@ args = 0, pretend = 0, frame = 0
 5797              		@ frame_needed = 0, uses_anonymous_args = 0
1827:Veno-Echo.cpp ****     {
 5798              		.loc 20 1827 5 view .LVU1561
 5799 0000 9FEDDA7A 		vldr.32	s14, .L414
1827:Veno-Echo.cpp ****     {
 5800              		.loc 20 1827 17 is_stmt 0 view .LVU1562
 5801 0004 D0ED007A 		vldr.32	s15, [r0]
1827:Veno-Echo.cpp ****     {
 5802              		.loc 20 1827 5 view .LVU1563
 5803 0008 F4EEC77A 		vcmpe.f32	s15, s14
1826:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5804              		.loc 20 1826 1 view .LVU1564
 5805 000c 38B5     		push	{r3, r4, r5, lr}
 5806              		.cfi_def_cfa_offset 16
 5807              		.cfi_offset 3, -16
 5808              		.cfi_offset 4, -12
 5809              		.cfi_offset 5, -8
 5810              		.cfi_offset 14, -4
1827:Veno-Echo.cpp ****     {
 5811              		.loc 20 1827 5 view .LVU1565
 5812 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
1826:Veno-Echo.cpp ****     if((setting.RevLength >= minRevDelay) && (setting.RevLength <= maxRevDelay))
 5813              		.loc 20 1826 1 view .LVU1566
 5814 0012 0446     		mov	r4, r0
 5815              	.LBB1489:
 5816              	.LBB1490:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5817              		.loc 20 70 28 view .LVU1567
 5818 0014 D64B     		ldr	r3, .L414+4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 223


 5819              	.LBE1490:
 5820              	.LBE1489:
1827:Veno-Echo.cpp ****     {
 5821              		.loc 20 1827 5 view .LVU1568
 5822 0016 C0F23281 		blt	.L330
1827:Veno-Echo.cpp ****     {
 5823              		.loc 20 1827 43 discriminator 1 view .LVU1569
 5824 001a 9FEDD67A 		vldr.32	s14, .L414+8
 5825 001e F4EEC77A 		vcmpe.f32	s15, s14
 5826 0022 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5827 0026 00F22A81 		bhi	.L330
1829:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5828              		.loc 20 1829 9 is_stmt 1 view .LVU1570
 5829              	.LVL286:
 5830              	.LBB1504:
 5831              	.LBI1489:
  68:Veno-Echo.cpp ****     {
 5832              		.loc 20 68 10 view .LVU1571
 5833              	.LBB1502:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5834              		.loc 20 70 9 view .LVU1572
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5835              		.loc 20 70 28 is_stmt 0 view .LVU1573
 5836 002a 93ED017A 		vldr.32	s14, [r3, #4]
 5837              	.LVL287:
 5838              	.LBB1491:
 5839              	.LBI1491:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5840              		.loc 21 75 3 is_stmt 1 view .LVU1574
 5841              	.LBB1492:
 5842              		.loc 21 76 5 view .LVU1575
 5843              		.loc 21 76 5 is_stmt 0 view .LVU1576
 5844              	.LBE1492:
 5845              	.LBE1491:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5846              		.loc 20 70 53 view .LVU1577
 5847 002e 9FEDD26A 		vldr.32	s12, .L414+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5848              		.loc 20 70 15 view .LVU1578
 5849 0032 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5850              		.loc 20 70 53 view .LVU1579
 5851 0036 27EE067A 		vmul.f32	s14, s14, s12
 5852              	.LBB1494:
 5853              	.LBB1493:
 5854              		.loc 21 76 31 view .LVU1580
 5855 003a F0EEE66A 		vabs.f32	s13, s13
 5856              	.LBE1493:
 5857              	.LBE1494:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5858              		.loc 20 70 9 view .LVU1581
 5859 003e F4EEC76A 		vcmpe.f32	s13, s14
 5860 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5861 0046 0FDD     		ble	.L333
  74:Veno-Echo.cpp ****             //del -> Reset();
 5862              		.loc 20 74 29 view .LVU1582
 5863 0048 BCEEE77A 		vcvt.u32.f32	s14, s15
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 224


 5864              	.LBB1495:
 5865              	.LBB1496:
 5866              		.loc 19 72 9 view .LVU1583
 5867 004c CB4D     		ldr	r5, .L414+16
 5868              	.LBE1496:
 5869              	.LBE1495:
 5870              	.LBE1502:
 5871              	.LBE1504:
1829:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(setting.RevLength); 
 5872              		.loc 20 1829 33 view .LVU1584
 5873 004e 1968     		ldr	r1, [r3]
 5874              	.LBB1505:
 5875              	.LBB1503:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5876              		.loc 20 73 13 is_stmt 1 view .LVU1585
 5877              	.LBB1499:
 5878              	.LBB1497:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5879              		.loc 19 71 9 is_stmt 0 view .LVU1586
 5880 0050 0020     		movs	r0, #0
 5881              	.LVL288:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5882              		.loc 19 71 9 view .LVU1587
 5883              	.LBE1497:
 5884              	.LBE1499:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 5885              		.loc 20 73 27 view .LVU1588
 5886 0052 C3ED017A 		vstr.32	s15, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 5887              		.loc 20 74 13 is_stmt 1 view .LVU1589
 5888              	.LVL289:
 5889              	.LBB1500:
 5890              	.LBI1495:
  69:delayline_reverse.h ****     {
 5891              		.loc 19 69 17 view .LVU1590
  69:delayline_reverse.h ****     {
 5892              		.loc 19 69 17 is_stmt 0 view .LVU1591
 5893              	.LBE1500:
  74:Veno-Echo.cpp ****             //del -> Reset();
 5894              		.loc 20 74 29 view .LVU1592
 5895 0056 17EE102A 		vmov	r2, s14	@ int
 5896              	.LBB1501:
 5897              	.LBB1498:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 5898              		.loc 19 71 9 view .LVU1593
 5899 005a 0860     		str	r0, [r1]	@ float
 5900 005c D4ED007A 		vldr.32	s15, [r4]
 5901              	.LVL290:
 5902              		.loc 19 72 9 view .LVU1594
 5903 0060 AA42     		cmp	r2, r5
 5904 0062 28BF     		it	cs
 5905 0064 2A46     		movcs	r2, r5
 5906 0066 0A61     		str	r2, [r1, #16]
 5907              	.LVL291:
 5908              	.L333:
 5909              		.loc 19 72 9 view .LVU1595
 5910              	.LBE1498:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 225


 5911              	.LBE1501:
 5912              	.LBE1503:
 5913              	.LBE1505:
1830:Veno-Echo.cpp ****     }
 5914              		.loc 20 1830 9 is_stmt 1 view .LVU1596
 5915              	.LBB1506:
 5916              	.LBI1506:
  68:Veno-Echo.cpp ****     {
 5917              		.loc 20 68 10 view .LVU1597
 5918              	.LBB1507:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5919              		.loc 20 70 9 view .LVU1598
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5920              		.loc 20 70 28 is_stmt 0 view .LVU1599
 5921 0068 C54B     		ldr	r3, .L414+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5922              		.loc 20 70 53 view .LVU1600
 5923 006a 9FEDC36A 		vldr.32	s12, .L414+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5924              		.loc 20 70 28 view .LVU1601
 5925 006e 93ED017A 		vldr.32	s14, [r3, #4]
 5926              	.LVL292:
 5927              	.LBB1508:
 5928              	.LBI1508:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 5929              		.loc 21 75 3 is_stmt 1 view .LVU1602
 5930              	.LBB1509:
 5931              		.loc 21 76 5 view .LVU1603
 5932              		.loc 21 76 5 is_stmt 0 view .LVU1604
 5933              	.LBE1509:
 5934              	.LBE1508:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5935              		.loc 20 70 15 view .LVU1605
 5936 0072 77EEC76A 		vsub.f32	s13, s15, s14
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5937              		.loc 20 70 53 view .LVU1606
 5938 0076 27EE067A 		vmul.f32	s14, s14, s12
 5939              	.LBB1511:
 5940              	.LBB1510:
 5941              		.loc 21 76 31 view .LVU1607
 5942 007a F0EEE66A 		vabs.f32	s13, s13
 5943              	.LBE1510:
 5944              	.LBE1511:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5945              		.loc 20 70 9 view .LVU1608
 5946 007e F4EEC76A 		vcmpe.f32	s13, s14
 5947 0082 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5948 0086 00F3D381 		bgt	.L409
 5949              	.LVL293:
 5950              	.L336:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 5951              		.loc 20 70 9 view .LVU1609
 5952              	.LBE1507:
 5953              	.LBE1506:
1838:Veno-Echo.cpp ****     {
 5954              		.loc 20 1838 5 is_stmt 1 view .LVU1610
 5955 008a F7EE007A 		vmov.f32	s15, #1.0e+0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 226


1838:Veno-Echo.cpp ****     {
 5956              		.loc 20 1838 17 is_stmt 0 view .LVU1611
 5957 008e 94ED010A 		vldr.32	s0, [r4, #4]
1838:Veno-Echo.cpp ****     {
 5958              		.loc 20 1838 5 view .LVU1612
 5959 0092 B4EEE70A 		vcmpe.f32	s0, s15
 5960 0096 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5961 009a 06DB     		blt	.L341
1838:Veno-Echo.cpp ****     {
 5962              		.loc 20 1838 35 discriminator 1 view .LVU1613
 5963 009c F0EE087A 		vmov.f32	s15, #3.0e+0
 5964 00a0 B4EEE70A 		vcmpe.f32	s0, s15
 5965 00a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5966 00a8 01D9     		bls	.L406
 5967              	.L341:
1844:Veno-Echo.cpp ****     }
 5968              		.loc 20 1844 9 is_stmt 1 view .LVU1614
1844:Veno-Echo.cpp ****     }
 5969              		.loc 20 1844 30 is_stmt 0 view .LVU1615
 5970 00aa B7EE000A 		vmov.f32	s0, #1.0e+0
 5971              	.L406:
 5972 00ae B548     		ldr	r0, .L414+24
 5973 00b0 FFF7FEFF 		bl	_ZN8Taptempo11setTapRatioEf
 5974              	.LVL294:
1847:Veno-Echo.cpp ****     {
 5975              		.loc 20 1847 5 is_stmt 1 view .LVU1616
1847:Veno-Echo.cpp ****     {
 5976              		.loc 20 1847 17 is_stmt 0 view .LVU1617
 5977 00b4 D4ED027A 		vldr.32	s15, [r4, #8]
1847:Veno-Echo.cpp ****     {
 5978              		.loc 20 1847 5 view .LVU1618
 5979 00b8 F5EEC07A 		vcmpe.f32	s15, #0
 5980 00bc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5981 00c0 C0F2B381 		blt	.L401
1847:Veno-Echo.cpp ****     {
 5982              		.loc 20 1847 42 discriminator 1 view .LVU1619
 5983 00c4 DFEDB06A 		vldr.32	s13, .L414+28
1853:Veno-Echo.cpp ****     }
 5984              		.loc 20 1853 18 discriminator 1 view .LVU1620
 5985 00c8 9FEDB07A 		vldr.32	s14, .L414+32
 5986 00cc F4EEE67A 		vcmpe.f32	s15, s13
 5987 00d0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 5988 00d4 88BF     		it	hi
 5989 00d6 F0EE477A 		vmovhi.f32	s15, s14
 5990              	.L345:
1856:Veno-Echo.cpp ****     {
 5991              		.loc 20 1856 17 view .LVU1621
 5992 00da 94ED030A 		vldr.32	s0, [r4, #12]
1856:Veno-Echo.cpp ****     {
 5993              		.loc 20 1856 5 view .LVU1622
 5994 00de 9FEDAC7A 		vldr.32	s14, .L414+36
 5995 00e2 AC4B     		ldr	r3, .L414+40
 5996 00e4 B4EEC70A 		vcmpe.f32	s0, s14
 5997              	.LBB1522:
 5998              	.LBB1523:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 5999              		.loc 9 60 20 view .LVU1623
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 227


 6000 00e8 AB4D     		ldr	r5, .L414+44
 6001 00ea C3ED007A 		vstr.32	s15, [r3]
 6002              	.LBE1523:
 6003              	.LBE1522:
1856:Veno-Echo.cpp ****     {
 6004              		.loc 20 1856 5 is_stmt 1 view .LVU1624
 6005 00ee F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6006 00f2 06DB     		blt	.L348
1856:Veno-Echo.cpp ****     {
 6007              		.loc 20 1856 40 is_stmt 0 discriminator 1 view .LVU1625
 6008 00f4 F2EE047A 		vmov.f32	s15, #1.0e+1
 6009 00f8 B4EEE70A 		vcmpe.f32	s0, s15
 6010 00fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6011 0100 01D9     		bls	.L407
 6012              	.L348:
1862:Veno-Echo.cpp ****     }
 6013              		.loc 20 1862 9 is_stmt 1 view .LVU1626
 6014              	.LVL295:
 6015              	.LBB1524:
 6016              	.LBI1524:
  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 6017              		.loc 9 58 17 view .LVU1627
 6018              	.LBB1525:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6019              		.loc 9 60 9 view .LVU1628
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6020              		.loc 9 60 20 is_stmt 0 view .LVU1629
 6021 0102 9FEDA60A 		vldr.32	s0, .L414+48
 6022              	.LVL296:
 6023              	.L407:
 6024              		.loc 9 61 34 view .LVU1630
 6025 0106 2846     		mov	r0, r5
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 6026              		.loc 9 60 20 view .LVU1631
 6027 0108 85ED020A 		vstr.32	s0, [r5, #8]
 6028              		.loc 9 61 9 is_stmt 1 view .LVU1632
 6029              		.loc 9 61 34 is_stmt 0 view .LVU1633
 6030 010c FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 6031              	.LVL297:
 6032              	.LBE1525:
 6033              	.LBE1524:
1865:Veno-Echo.cpp ****     {
 6034              		.loc 20 1865 5 view .LVU1634
 6035 0110 DFEDA37A 		vldr.32	s15, .L414+52
 6036              	.LBB1527:
 6037              	.LBB1526:
 6038              		.loc 9 61 20 view .LVU1635
 6039 0114 85ED060A 		vstr.32	s0, [r5, #24]
 6040              	.LBE1526:
 6041              	.LBE1527:
1865:Veno-Echo.cpp ****     {
 6042              		.loc 20 1865 5 is_stmt 1 view .LVU1636
1865:Veno-Echo.cpp ****     {
 6043              		.loc 20 1865 17 is_stmt 0 view .LVU1637
 6044 0118 94ED050A 		vldr.32	s0, [r4, #20]
1865:Veno-Echo.cpp ****     {
 6045              		.loc 20 1865 5 view .LVU1638
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 228


 6046 011c B4EEE70A 		vcmpe.f32	s0, s15
 6047 0120 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6048 0124 07DB     		blt	.L352
1865:Veno-Echo.cpp ****     {
 6049              		.loc 20 1865 40 discriminator 1 view .LVU1639
 6050 0126 DFED9F7A 		vldr.32	s15, .L414+56
 6051 012a B4EEE70A 		vcmpe.f32	s0, s15
 6052 012e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6053 0132 40F26781 		bls	.L410
 6054              	.L352:
1874:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 6055              		.loc 20 1874 9 is_stmt 1 view .LVU1640
1874:Veno-Echo.cpp ****         LPF_R.SetFreq(defaultAltControls.LP_Cutoff);
 6056              		.loc 20 1874 22 is_stmt 0 view .LVU1641
 6057 0136 9FED9B0A 		vldr.32	s0, .L414+56
 6058 013a 9B48     		ldr	r0, .L414+60
 6059 013c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6060              	.LVL298:
1875:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 6061              		.loc 20 1875 9 is_stmt 1 view .LVU1642
1875:Veno-Echo.cpp ****         LPF_L_post.SetFreq(defaultAltControls.LP_Cutoff);
 6062              		.loc 20 1875 22 is_stmt 0 view .LVU1643
 6063 0140 9FED980A 		vldr.32	s0, .L414+56
 6064 0144 9948     		ldr	r0, .L414+64
 6065 0146 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6066              	.LVL299:
1876:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 6067              		.loc 20 1876 9 is_stmt 1 view .LVU1644
1876:Veno-Echo.cpp ****         LPF_R_post.SetFreq(defaultAltControls.LP_Cutoff);
 6068              		.loc 20 1876 27 is_stmt 0 view .LVU1645
 6069 014a 9FED960A 		vldr.32	s0, .L414+56
 6070 014e 9848     		ldr	r0, .L414+68
 6071 0150 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6072              	.LVL300:
1877:Veno-Echo.cpp ****     }
 6073              		.loc 20 1877 9 is_stmt 1 view .LVU1646
1877:Veno-Echo.cpp ****     }
 6074              		.loc 20 1877 27 is_stmt 0 view .LVU1647
 6075 0154 9FED930A 		vldr.32	s0, .L414+56
 6076 0158 9648     		ldr	r0, .L414+72
 6077 015a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6078              	.LVL301:
 6079              	.L355:
1880:Veno-Echo.cpp ****     {
 6080              		.loc 20 1880 5 is_stmt 1 view .LVU1648
1880:Veno-Echo.cpp ****     {
 6081              		.loc 20 1880 17 is_stmt 0 view .LVU1649
 6082 015e 94ED040A 		vldr.32	s0, [r4, #16]
1880:Veno-Echo.cpp ****     {
 6083              		.loc 20 1880 5 view .LVU1650
 6084 0162 DFED957A 		vldr.32	s15, .L414+76
 6085 0166 B4EEE70A 		vcmpe.f32	s0, s15
 6086 016a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6087 016e 07DB     		blt	.L356
1880:Veno-Echo.cpp ****     {
 6088              		.loc 20 1880 40 discriminator 1 view .LVU1651
 6089 0170 DFED927A 		vldr.32	s15, .L414+80
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 229


 6090 0174 B4EEE70A 		vcmpe.f32	s0, s15
 6091 0178 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6092 017c 40F2E380 		bls	.L411
 6093              	.L356:
1889:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 6094              		.loc 20 1889 9 is_stmt 1 view .LVU1652
1889:Veno-Echo.cpp ****         HPF_R.SetFreq(defaultAltControls.HP_Cutoff);
 6095              		.loc 20 1889 22 is_stmt 0 view .LVU1653
 6096 0180 9FED8F0A 		vldr.32	s0, .L414+84
 6097 0184 8F48     		ldr	r0, .L414+88
 6098 0186 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6099              	.LVL302:
1890:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 6100              		.loc 20 1890 9 is_stmt 1 view .LVU1654
1890:Veno-Echo.cpp ****         HPF_L_post.SetFreq(defaultAltControls.HP_Cutoff);
 6101              		.loc 20 1890 22 is_stmt 0 view .LVU1655
 6102 018a 9FED8D0A 		vldr.32	s0, .L414+84
 6103 018e 8E48     		ldr	r0, .L414+92
 6104 0190 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6105              	.LVL303:
1891:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 6106              		.loc 20 1891 9 is_stmt 1 view .LVU1656
1891:Veno-Echo.cpp ****         HPF_R_post.SetFreq(defaultAltControls.HP_Cutoff);
 6107              		.loc 20 1891 27 is_stmt 0 view .LVU1657
 6108 0194 9FED8A0A 		vldr.32	s0, .L414+84
 6109 0198 8C48     		ldr	r0, .L414+96
 6110 019a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6111              	.LVL304:
1892:Veno-Echo.cpp **** 
 6112              		.loc 20 1892 9 is_stmt 1 view .LVU1658
1892:Veno-Echo.cpp **** 
 6113              		.loc 20 1892 27 is_stmt 0 view .LVU1659
 6114 019e 9FED880A 		vldr.32	s0, .L414+84
 6115 01a2 8B48     		ldr	r0, .L414+100
 6116 01a4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6117              	.LVL305:
 6118              	.L359:
1896:Veno-Echo.cpp ****     {
 6119              		.loc 20 1896 5 is_stmt 1 view .LVU1660
1896:Veno-Echo.cpp ****     {
 6120              		.loc 20 1896 17 is_stmt 0 view .LVU1661
 6121 01a8 94ED060A 		vldr.32	s0, [r4, #24]
1896:Veno-Echo.cpp ****     {
 6122              		.loc 20 1896 5 view .LVU1662
 6123 01ac B5EEC00A 		vcmpe.f32	s0, #0
 6124 01b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6125 01b4 07DB     		blt	.L360
1896:Veno-Echo.cpp ****     {
 6126              		.loc 20 1896 38 discriminator 1 view .LVU1663
 6127 01b6 F6EE007A 		vmov.f32	s15, #5.0e-1
 6128 01ba B4EEE70A 		vcmpe.f32	s0, s15
 6129 01be F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6130 01c2 40F29980 		bls	.L412
 6131              	.L360:
1910:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
 6132              		.loc 20 1910 9 is_stmt 1 view .LVU1664
1910:Veno-Echo.cpp ****         HPF_L_post.SetRes(defaultAltControls.Resonance);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 230


 6133              		.loc 20 1910 26 is_stmt 0 view .LVU1665
 6134 01c6 9FED710A 		vldr.32	s0, .L414+32
 6135 01ca 7948     		ldr	r0, .L414+68
 6136 01cc FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6137              	.LVL306:
1911:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 6138              		.loc 20 1911 9 is_stmt 1 view .LVU1666
1911:Veno-Echo.cpp ****         LPF_R_post.SetRes(defaultAltControls.Resonance);
 6139              		.loc 20 1911 26 is_stmt 0 view .LVU1667
 6140 01d0 9FED6E0A 		vldr.32	s0, .L414+32
 6141 01d4 7D48     		ldr	r0, .L414+96
 6142 01d6 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6143              	.LVL307:
1912:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 6144              		.loc 20 1912 9 is_stmt 1 view .LVU1668
1912:Veno-Echo.cpp ****         HPF_R_post.SetRes(defaultAltControls.Resonance);
 6145              		.loc 20 1912 26 is_stmt 0 view .LVU1669
 6146 01da 9FED6C0A 		vldr.32	s0, .L414+32
 6147 01de 7548     		ldr	r0, .L414+72
 6148 01e0 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6149              	.LVL308:
1913:Veno-Echo.cpp ****     }
 6150              		.loc 20 1913 9 is_stmt 1 view .LVU1670
1913:Veno-Echo.cpp ****     }
 6151              		.loc 20 1913 26 is_stmt 0 view .LVU1671
 6152 01e4 9FED690A 		vldr.32	s0, .L414+32
 6153 01e8 7948     		ldr	r0, .L414+100
 6154 01ea FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6155              	.LVL309:
 6156              	.L363:
1916:Veno-Echo.cpp ****     {
 6157              		.loc 20 1916 5 is_stmt 1 view .LVU1672
1916:Veno-Echo.cpp ****     {
 6158              		.loc 20 1916 16 is_stmt 0 view .LVU1673
 6159 01ee D4ED077A 		vldr.32	s15, [r4, #28]
1916:Veno-Echo.cpp ****     {
 6160              		.loc 20 1916 5 view .LVU1674
 6161 01f2 9FED787A 		vldr.32	s14, .L414+104
1922:Veno-Echo.cpp ****     }
 6162              		.loc 20 1922 21 view .LVU1675
 6163 01f6 784B     		ldr	r3, .L414+108
1916:Veno-Echo.cpp ****     {
 6164              		.loc 20 1916 5 view .LVU1676
 6165 01f8 F4EEC77A 		vcmpe.f32	s15, s14
 6166 01fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6167 0200 06D4     		bmi	.L367
1920:Veno-Echo.cpp ****     {
 6168              		.loc 20 1920 14 is_stmt 1 view .LVU1677
 6169 0202 9FED767A 		vldr.32	s14, .L414+112
 6170 0206 F4EEC77A 		vcmpe.f32	s15, s14
 6171 020a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6172 020e 70DC     		bgt	.L413
 6173              	.L367:
1918:Veno-Echo.cpp ****     }
 6174              		.loc 20 1918 9 view .LVU1678
1918:Veno-Echo.cpp ****     }
 6175              		.loc 20 1918 21 is_stmt 0 view .LVU1679
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 231


 6176 0210 0022     		movs	r2, #0
 6177 0212 1A70     		strb	r2, [r3]
 6178              	.L366:
1930:Veno-Echo.cpp ****         && (setting.tapLength <= static_cast<float> (maxtap)) )
 6179              		.loc 20 1930 5 is_stmt 1 view .LVU1680
1930:Veno-Echo.cpp ****         && (setting.tapLength <= static_cast<float> (maxtap)) )
 6180              		.loc 20 1930 18 is_stmt 0 view .LVU1681
 6181 0214 94ED080A 		vldr.32	s0, [r4, #32]
1930:Veno-Echo.cpp ****         && (setting.tapLength <= static_cast<float> (maxtap)) )
 6182              		.loc 20 1930 5 view .LVU1682
 6183 0218 DFED717A 		vldr.32	s15, .L414+116
 6184 021c B4EEE70A 		vcmpe.f32	s0, s15
 6185 0220 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6186 0224 06DB     		blt	.L369
1931:Veno-Echo.cpp ****     {
 6187              		.loc 20 1931 9 view .LVU1683
 6188 0226 DFED6F7A 		vldr.32	s15, .L414+120
 6189 022a B4EEE70A 		vcmpe.f32	s0, s15
 6190 022e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6191 0232 01D9     		bls	.L408
 6192              	.L369:
1939:Veno-Echo.cpp ****         tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 6193              		.loc 20 1939 9 is_stmt 1 view .LVU1684
1939:Veno-Echo.cpp ****         tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 6194              		.loc 20 1939 31 is_stmt 0 view .LVU1685
 6195 0234 9FED6C0A 		vldr.32	s0, .L414+124
 6196              	.L408:
 6197 0238 5248     		ldr	r0, .L414+24
 6198 023a FFF7FEFF 		bl	_ZN8Taptempo12setTapLengthEf
 6199              	.LVL310:
1940:Veno-Echo.cpp ****     }
 6200              		.loc 20 1940 9 is_stmt 1 view .LVU1686
1940:Veno-Echo.cpp ****     }
 6201              		.loc 20 1940 31 is_stmt 0 view .LVU1687
 6202 023e 5148     		ldr	r0, .L414+24
 6203 0240 FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 6204              	.LVL311:
 6205 0244 6948     		ldr	r0, .L414+128
 6206 0246 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 6207              	.LVL312:
1943:Veno-Echo.cpp ****     {
 6208              		.loc 20 1943 5 is_stmt 1 view .LVU1688
 6209 024a DFED697A 		vldr.32	s15, .L414+132
 6210 024e 94ED097A 		vldr.32	s14, [r4, #36]
1945:Veno-Echo.cpp ****     }
 6211              		.loc 20 1945 24 is_stmt 0 view .LVU1689
 6212 0252 6848     		ldr	r0, .L414+136
1943:Veno-Echo.cpp ****     {
 6213              		.loc 20 1943 5 view .LVU1690
 6214 0254 B4EEE77A 		vcmpe.f32	s14, s15
 6215 0258 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6216 025c 42DD     		ble	.L403
1945:Veno-Echo.cpp ****     }
 6217              		.loc 20 1945 9 is_stmt 1 view .LVU1691
1945:Veno-Echo.cpp ****     }
 6218              		.loc 20 1945 24 is_stmt 0 view .LVU1692
 6219 025e FFF7FEFF 		bl	_ZN9ButtonLED6turnONEv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 232


 6220              	.LVL313:
 6221              	.L375:
1952:Veno-Echo.cpp ****     {
 6222              		.loc 20 1952 5 is_stmt 1 view .LVU1693
 6223 0262 DFED637A 		vldr.32	s15, .L414+132
 6224 0266 94ED0A7A 		vldr.32	s14, [r4, #40]
1954:Veno-Echo.cpp ****     }
 6225              		.loc 20 1954 24 is_stmt 0 view .LVU1694
 6226 026a 6348     		ldr	r0, .L414+140
1952:Veno-Echo.cpp ****     {
 6227              		.loc 20 1952 5 view .LVU1695
 6228 026c B4EEE77A 		vcmpe.f32	s14, s15
 6229 0270 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6230 0274 39DD     		ble	.L404
1954:Veno-Echo.cpp ****     }
 6231              		.loc 20 1954 9 is_stmt 1 view .LVU1696
1961:Veno-Echo.cpp **** 
 6232              		.loc 20 1961 1 is_stmt 0 view .LVU1697
 6233 0276 BDE83840 		pop	{r3, r4, r5, lr}
 6234              		.cfi_remember_state
 6235              		.cfi_restore 14
 6236              		.cfi_restore 5
 6237              		.cfi_restore 4
 6238              		.cfi_restore 3
 6239              		.cfi_def_cfa_offset 0
 6240              	.LVL314:
1954:Veno-Echo.cpp ****     }
 6241              		.loc 20 1954 24 view .LVU1698
 6242 027a FFF7FEBF 		b	_ZN9ButtonLED6turnONEv
 6243              	.LVL315:
 6244              	.L330:
 6245              		.cfi_restore_state
1834:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 6246              		.loc 20 1834 9 is_stmt 1 view .LVU1699
 6247              	.LBB1528:
 6248              	.LBI1528:
  68:Veno-Echo.cpp ****     {
 6249              		.loc 20 68 10 view .LVU1700
 6250              	.LBB1529:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6251              		.loc 20 70 9 view .LVU1701
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6252              		.loc 20 70 28 is_stmt 0 view .LVU1702
 6253 027e D3ED017A 		vldr.32	s15, [r3, #4]
 6254              	.LVL316:
 6255              	.LBB1530:
 6256              	.LBI1530:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 6257              		.loc 21 75 3 is_stmt 1 view .LVU1703
 6258              	.LBB1531:
 6259              		.loc 21 76 5 view .LVU1704
 6260              		.loc 21 76 5 is_stmt 0 view .LVU1705
 6261              	.LBE1531:
 6262              	.LBE1530:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6263              		.loc 20 70 15 view .LVU1706
 6264 0282 DFED5E6A 		vldr.32	s13, .L414+144
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 233


  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6265              		.loc 20 70 53 view .LVU1707
 6266 0286 9FED3C6A 		vldr.32	s12, .L414+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6267              		.loc 20 70 15 view .LVU1708
 6268 028a 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6269              		.loc 20 70 53 view .LVU1709
 6270 028e 67EE867A 		vmul.f32	s15, s15, s12
 6271              	.LBB1533:
 6272              	.LBB1532:
 6273              		.loc 21 76 31 view .LVU1710
 6274 0292 B0EEC77A 		vabs.f32	s14, s14
 6275              	.LBE1532:
 6276              	.LBE1533:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6277              		.loc 20 70 9 view .LVU1711
 6278 0296 B4EEE77A 		vcmpe.f32	s14, s15
 6279 029a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6280 029e 06DD     		ble	.L337
 6281              	.LBE1529:
 6282              	.LBE1528:
1834:Veno-Echo.cpp ****         delaysR_REV.SetDelayTime(defaultAltControls.RevLength); 
 6283              		.loc 20 1834 33 view .LVU1712
 6284 02a0 1A68     		ldr	r2, [r3]
 6285              	.LBB1539:
 6286              	.LBB1538:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6287              		.loc 20 73 13 is_stmt 1 view .LVU1713
 6288              	.LBB1534:
 6289              	.LBB1535:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6290              		.loc 19 71 9 is_stmt 0 view .LVU1714
 6291 02a2 0021     		movs	r1, #0
 6292              		.loc 19 72 9 view .LVU1715
 6293 02a4 5648     		ldr	r0, .L414+148
 6294              	.LVL317:
 6295              		.loc 19 72 9 view .LVU1716
 6296              	.LBE1535:
 6297              	.LBE1534:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6298              		.loc 20 73 27 view .LVU1717
 6299 02a6 C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6300              		.loc 20 74 13 is_stmt 1 view .LVU1718
 6301              	.LVL318:
 6302              	.LBB1537:
 6303              	.LBI1534:
  69:delayline_reverse.h ****     {
 6304              		.loc 19 69 17 view .LVU1719
 6305              	.LBB1536:
 6306              		.loc 19 72 9 is_stmt 0 view .LVU1720
 6307 02aa 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6308              		.loc 19 71 9 view .LVU1721
 6309 02ac 1160     		str	r1, [r2]	@ float
 6310              	.LVL319:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 234


 6311              	.L337:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6312              		.loc 19 71 9 view .LVU1722
 6313              	.LBE1536:
 6314              	.LBE1537:
 6315              	.LBE1538:
 6316              	.LBE1539:
1835:Veno-Echo.cpp ****     }
 6317              		.loc 20 1835 9 is_stmt 1 view .LVU1723
 6318              	.LBB1540:
 6319              	.LBI1540:
  68:Veno-Echo.cpp ****     {
 6320              		.loc 20 68 10 view .LVU1724
 6321              	.LBB1541:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6322              		.loc 20 70 9 view .LVU1725
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6323              		.loc 20 70 28 is_stmt 0 view .LVU1726
 6324 02ae 344B     		ldr	r3, .L414+20
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6325              		.loc 20 70 15 view .LVU1727
 6326 02b0 DFED526A 		vldr.32	s13, .L414+144
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6327              		.loc 20 70 28 view .LVU1728
 6328 02b4 D3ED017A 		vldr.32	s15, [r3, #4]
 6329              	.LVL320:
 6330              	.LBB1542:
 6331              	.LBI1542:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 6332              		.loc 21 75 3 is_stmt 1 view .LVU1729
 6333              	.LBB1543:
 6334              		.loc 21 76 5 view .LVU1730
 6335              		.loc 21 76 5 is_stmt 0 view .LVU1731
 6336              	.LBE1543:
 6337              	.LBE1542:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6338              		.loc 20 70 53 view .LVU1732
 6339 02b8 9FED2F6A 		vldr.32	s12, .L414+12
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6340              		.loc 20 70 15 view .LVU1733
 6341 02bc 36EEE77A 		vsub.f32	s14, s13, s15
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6342              		.loc 20 70 53 view .LVU1734
 6343 02c0 67EE867A 		vmul.f32	s15, s15, s12
 6344              	.LBB1545:
 6345              	.LBB1544:
 6346              		.loc 21 76 31 view .LVU1735
 6347 02c4 B0EEC77A 		vabs.f32	s14, s14
 6348              	.LBE1544:
 6349              	.LBE1545:
  70:Veno-Echo.cpp ****         //only update if more than 0.5% of last value
 6350              		.loc 20 70 9 view .LVU1736
 6351 02c8 B4EEE77A 		vcmpe.f32	s14, s15
 6352 02cc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 6353 02d0 7FF7DBAE 		ble	.L336
 6354              	.LBE1541:
 6355              	.LBE1540:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 235


1835:Veno-Echo.cpp ****     }
 6356              		.loc 20 1835 33 view .LVU1737
 6357 02d4 1A68     		ldr	r2, [r3]
 6358              	.LBB1551:
 6359              	.LBB1550:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6360              		.loc 20 73 13 is_stmt 1 view .LVU1738
 6361              	.LBB1546:
 6362              	.LBB1547:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6363              		.loc 19 71 9 is_stmt 0 view .LVU1739
 6364 02d6 0021     		movs	r1, #0
 6365              		.loc 19 72 9 view .LVU1740
 6366 02d8 4948     		ldr	r0, .L414+148
 6367              	.LBE1547:
 6368              	.LBE1546:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6369              		.loc 20 73 27 view .LVU1741
 6370 02da C3ED016A 		vstr.32	s13, [r3, #4]
  74:Veno-Echo.cpp ****             //del -> Reset();
 6371              		.loc 20 74 13 is_stmt 1 view .LVU1742
 6372              	.LVL321:
 6373              	.LBB1549:
 6374              	.LBI1546:
  69:delayline_reverse.h ****     {
 6375              		.loc 19 69 17 view .LVU1743
 6376              	.LBB1548:
 6377              		.loc 19 72 9 is_stmt 0 view .LVU1744
 6378 02de 1061     		str	r0, [r2, #16]
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6379              		.loc 19 71 9 view .LVU1745
 6380 02e0 1160     		str	r1, [r2]	@ float
  73:delayline_reverse.h ****     }
 6381              		.loc 19 73 5 view .LVU1746
 6382 02e2 D2E6     		b	.L336
 6383              	.LVL322:
 6384              	.L403:
 6385              		.loc 19 73 5 view .LVU1747
 6386              	.LBE1548:
 6387              	.LBE1549:
 6388              	.LBE1550:
 6389              	.LBE1551:
1949:Veno-Echo.cpp ****     }
 6390              		.loc 20 1949 9 is_stmt 1 view .LVU1748
1949:Veno-Echo.cpp ****     }
 6391              		.loc 20 1949 25 is_stmt 0 view .LVU1749
 6392 02e4 FFF7FEFF 		bl	_ZN9ButtonLED7turnOFFEv
 6393              	.LVL323:
 6394 02e8 BBE7     		b	.L375
 6395              	.L404:
1958:Veno-Echo.cpp ****     }
 6396              		.loc 20 1958 9 is_stmt 1 view .LVU1750
1961:Veno-Echo.cpp **** 
 6397              		.loc 20 1961 1 is_stmt 0 view .LVU1751
 6398 02ea BDE83840 		pop	{r3, r4, r5, lr}
 6399              		.cfi_remember_state
 6400              		.cfi_restore 14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 236


 6401              		.cfi_restore 5
 6402              		.cfi_restore 4
 6403              		.cfi_restore 3
 6404              		.cfi_def_cfa_offset 0
 6405              	.LVL324:
1958:Veno-Echo.cpp ****     }
 6406              		.loc 20 1958 25 view .LVU1752
 6407 02ee FFF7FEBF 		b	_ZN9ButtonLED7turnOFFEv
 6408              	.LVL325:
 6409              	.L413:
 6410              		.cfi_restore_state
1922:Veno-Echo.cpp ****     }
 6411              		.loc 20 1922 9 is_stmt 1 view .LVU1753
1922:Veno-Echo.cpp ****     }
 6412              		.loc 20 1922 21 is_stmt 0 view .LVU1754
 6413 02f2 0122     		movs	r2, #1
 6414 02f4 1A70     		strb	r2, [r3]
 6415 02f6 8DE7     		b	.L366
 6416              	.L412:
1898:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 6417              		.loc 20 1898 9 is_stmt 1 view .LVU1755
1898:Veno-Echo.cpp ****         HPF_L.SetRes(setting.Resonance);
 6418              		.loc 20 1898 21 is_stmt 0 view .LVU1756
 6419 02f8 2B48     		ldr	r0, .L414+60
 6420 02fa FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6421              	.LVL326:
1899:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 6422              		.loc 20 1899 9 is_stmt 1 view .LVU1757
1899:Veno-Echo.cpp ****         LPF_R.SetRes(setting.Resonance);
 6423              		.loc 20 1899 21 is_stmt 0 view .LVU1758
 6424 02fe 94ED060A 		vldr.32	s0, [r4, #24]
 6425 0302 3048     		ldr	r0, .L414+88
 6426 0304 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6427              	.LVL327:
1900:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 6428              		.loc 20 1900 9 is_stmt 1 view .LVU1759
1900:Veno-Echo.cpp ****         HPF_R.SetRes(setting.Resonance);
 6429              		.loc 20 1900 21 is_stmt 0 view .LVU1760
 6430 0308 94ED060A 		vldr.32	s0, [r4, #24]
 6431 030c 2748     		ldr	r0, .L414+64
 6432 030e FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6433              	.LVL328:
1901:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 6434              		.loc 20 1901 9 is_stmt 1 view .LVU1761
1901:Veno-Echo.cpp ****         LPF_L_post.SetRes(setting.Resonance);
 6435              		.loc 20 1901 21 is_stmt 0 view .LVU1762
 6436 0312 94ED060A 		vldr.32	s0, [r4, #24]
 6437 0316 2C48     		ldr	r0, .L414+92
 6438 0318 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6439              	.LVL329:
1902:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 6440              		.loc 20 1902 9 is_stmt 1 view .LVU1763
1902:Veno-Echo.cpp ****         HPF_L_post.SetRes(setting.Resonance);
 6441              		.loc 20 1902 26 is_stmt 0 view .LVU1764
 6442 031c 94ED060A 		vldr.32	s0, [r4, #24]
 6443 0320 2348     		ldr	r0, .L414+68
 6444 0322 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 237


 6445              	.LVL330:
1903:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 6446              		.loc 20 1903 9 is_stmt 1 view .LVU1765
1903:Veno-Echo.cpp ****         LPF_R_post.SetRes(setting.Resonance);
 6447              		.loc 20 1903 26 is_stmt 0 view .LVU1766
 6448 0326 94ED060A 		vldr.32	s0, [r4, #24]
 6449 032a 2848     		ldr	r0, .L414+96
 6450 032c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6451              	.LVL331:
1904:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 6452              		.loc 20 1904 9 is_stmt 1 view .LVU1767
1904:Veno-Echo.cpp ****         HPF_R_post.SetRes(setting.Resonance);
 6453              		.loc 20 1904 26 is_stmt 0 view .LVU1768
 6454 0330 94ED060A 		vldr.32	s0, [r4, #24]
 6455 0334 1F48     		ldr	r0, .L414+72
 6456 0336 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6457              	.LVL332:
1905:Veno-Echo.cpp ****     }
 6458              		.loc 20 1905 9 is_stmt 1 view .LVU1769
1905:Veno-Echo.cpp ****     }
 6459              		.loc 20 1905 26 is_stmt 0 view .LVU1770
 6460 033a 94ED060A 		vldr.32	s0, [r4, #24]
 6461 033e 2448     		ldr	r0, .L414+100
 6462 0340 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 6463              	.LVL333:
 6464 0344 53E7     		b	.L363
 6465              	.L411:
1882:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 6466              		.loc 20 1882 9 is_stmt 1 view .LVU1771
1882:Veno-Echo.cpp ****         HPF_R.SetFreq(setting.HP_Cutoff);
 6467              		.loc 20 1882 22 is_stmt 0 view .LVU1772
 6468 0346 1F48     		ldr	r0, .L414+88
 6469 0348 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6470              	.LVL334:
1883:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 6471              		.loc 20 1883 9 is_stmt 1 view .LVU1773
1883:Veno-Echo.cpp ****         HPF_L_post.SetFreq(setting.HP_Cutoff);
 6472              		.loc 20 1883 22 is_stmt 0 view .LVU1774
 6473 034c 94ED040A 		vldr.32	s0, [r4, #16]
 6474 0350 1D48     		ldr	r0, .L414+92
 6475 0352 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6476              	.LVL335:
1884:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 6477              		.loc 20 1884 9 is_stmt 1 view .LVU1775
1884:Veno-Echo.cpp ****         HPF_R_post.SetFreq(setting.HP_Cutoff);
 6478              		.loc 20 1884 27 is_stmt 0 view .LVU1776
 6479 0356 94ED040A 		vldr.32	s0, [r4, #16]
 6480 035a 1C48     		ldr	r0, .L414+96
 6481 035c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6482              	.LVL336:
1885:Veno-Echo.cpp ****     }
 6483              		.loc 20 1885 9 is_stmt 1 view .LVU1777
1885:Veno-Echo.cpp ****     }
 6484              		.loc 20 1885 27 is_stmt 0 view .LVU1778
 6485 0360 94ED040A 		vldr.32	s0, [r4, #16]
 6486 0364 1A48     		ldr	r0, .L414+100
 6487 0366 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 238


 6488              	.LVL337:
 6489 036a 1DE7     		b	.L359
 6490              	.L415:
 6491              		.align	2
 6492              	.L414:
 6493 036c 0050C346 		.word	1187205120
 6494 0370 00000000 		.word	.LANCHOR2
 6495 0374 00606A48 		.word	1214930944
 6496 0378 0AD7A33B 		.word	1000593162
 6497 037c BF270900 		.word	599999
 6498 0380 00000000 		.word	.LANCHOR3
 6499 0384 00000000 		.word	.LANCHOR26
 6500 0388 0000FA43 		.word	1140457472
 6501 038c 00000000 		.word	0
 6502 0390 CDCCCC3D 		.word	1036831949
 6503 0394 00000000 		.word	.LANCHOR68
 6504 0398 00000000 		.word	.LANCHOR76
 6505 039c 9A99A140 		.word	1084332442
 6506 03a0 0080BB44 		.word	1153138688
 6507 03a4 00803B46 		.word	1178304512
 6508 03a8 00000000 		.word	.LANCHOR47
 6509 03ac 00000000 		.word	.LANCHOR48
 6510 03b0 00000000 		.word	.LANCHOR49
 6511 03b4 00000000 		.word	.LANCHOR50
 6512 03b8 0000C842 		.word	1120403456
 6513 03bc 00004844 		.word	1145569280
 6514 03c0 00004843 		.word	1128792064
 6515 03c4 00000000 		.word	.LANCHOR35
 6516 03c8 00000000 		.word	.LANCHOR36
 6517 03cc 00000000 		.word	.LANCHOR37
 6518 03d0 00000000 		.word	.LANCHOR38
 6519 03d4 6666E63E 		.word	1055286886
 6520 03d8 00000000 		.word	.LANCHOR83
 6521 03dc CDCC0C3F 		.word	1057803469
 6522 03e0 00409C46 		.word	1184645120
 6523 03e4 001BB74A 		.word	1253513984
 6524 03e8 0024F448 		.word	1223959552
 6525 03ec 00000000 		.word	.LANCHOR89
 6526 03f0 48E1FA3E 		.word	1056629064
 6527 03f4 00000000 		.word	.LANCHOR92
 6528 03f8 00000000 		.word	.LANCHOR93
 6529 03fc 00650148 		.word	1208050944
 6530 0400 94050200 		.word	132500
 6531              	.L410:
1867:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 6532              		.loc 20 1867 9 is_stmt 1 view .LVU1779
1867:Veno-Echo.cpp ****         LPF_R.SetFreq(setting.LP_Cutoff);
 6533              		.loc 20 1867 22 is_stmt 0 view .LVU1780
 6534 0404 1248     		ldr	r0, .L416
 6535 0406 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6536              	.LVL338:
1868:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 6537              		.loc 20 1868 9 is_stmt 1 view .LVU1781
1868:Veno-Echo.cpp ****         LPF_L_post.SetFreq(setting.LP_Cutoff);
 6538              		.loc 20 1868 22 is_stmt 0 view .LVU1782
 6539 040a 94ED050A 		vldr.32	s0, [r4, #20]
 6540 040e 1148     		ldr	r0, .L416+4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 239


 6541 0410 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6542              	.LVL339:
1869:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 6543              		.loc 20 1869 9 is_stmt 1 view .LVU1783
1869:Veno-Echo.cpp ****         LPF_R_post.SetFreq(setting.LP_Cutoff);
 6544              		.loc 20 1869 27 is_stmt 0 view .LVU1784
 6545 0414 94ED050A 		vldr.32	s0, [r4, #20]
 6546 0418 0F48     		ldr	r0, .L416+8
 6547 041a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6548              	.LVL340:
1870:Veno-Echo.cpp ****     }
 6549              		.loc 20 1870 9 is_stmt 1 view .LVU1785
1870:Veno-Echo.cpp ****     }
 6550              		.loc 20 1870 27 is_stmt 0 view .LVU1786
 6551 041e 94ED050A 		vldr.32	s0, [r4, #20]
 6552 0422 0E48     		ldr	r0, .L416+12
 6553 0424 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 6554              	.LVL341:
 6555 0428 99E6     		b	.L355
 6556              	.L401:
1853:Veno-Echo.cpp ****     }
 6557              		.loc 20 1853 18 view .LVU1787
 6558 042a DFED0D7A 		vldr.32	s15, .L416+16
 6559 042e 54E6     		b	.L345
 6560              	.LVL342:
 6561              	.L409:
 6562              	.LBB1552:
 6563              	.LBB1520:
  74:Veno-Echo.cpp ****             //del -> Reset();
 6564              		.loc 20 74 29 view .LVU1788
 6565 0430 BCEEE77A 		vcvt.u32.f32	s14, s15
 6566              	.LBB1512:
 6567              	.LBB1513:
  72:delayline_reverse.h ****     }
 6568              		.loc 19 72 9 view .LVU1789
 6569 0434 0B4D     		ldr	r5, .L416+20
 6570              	.LBE1513:
 6571              	.LBE1512:
 6572              	.LBE1520:
 6573              	.LBE1552:
1830:Veno-Echo.cpp ****     }
 6574              		.loc 20 1830 33 view .LVU1790
 6575 0436 1968     		ldr	r1, [r3]
 6576              	.LBB1553:
 6577              	.LBB1521:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6578              		.loc 20 73 13 is_stmt 1 view .LVU1791
 6579              	.LBB1517:
 6580              	.LBB1514:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6581              		.loc 19 71 9 is_stmt 0 view .LVU1792
 6582 0438 0020     		movs	r0, #0
 6583              	.LBE1514:
 6584              	.LBE1517:
  73:Veno-Echo.cpp ****             del -> SetDelay1(static_cast<size_t>(currentDelay_));
 6585              		.loc 20 73 27 view .LVU1793
 6586 043a C3ED017A 		vstr.32	s15, [r3, #4]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 240


  74:Veno-Echo.cpp ****             //del -> Reset();
 6587              		.loc 20 74 29 view .LVU1794
 6588 043e 17EE102A 		vmov	r2, s14	@ int
 6589              	.LBB1518:
 6590              	.LBB1515:
  71:delayline_reverse.h ****         delay1_ = delay < max_size ? delay : max_size - 1;
 6591              		.loc 19 71 9 view .LVU1795
 6592 0442 0860     		str	r0, [r1]	@ float
 6593              	.LVL343:
  72:delayline_reverse.h ****     }
 6594              		.loc 19 72 9 view .LVU1796
 6595 0444 AA42     		cmp	r2, r5
 6596 0446 28BF     		it	cs
 6597 0448 2A46     		movcs	r2, r5
 6598              	.LBE1515:
 6599              	.LBE1518:
  74:Veno-Echo.cpp ****             //del -> Reset();
 6600              		.loc 20 74 13 is_stmt 1 view .LVU1797
 6601              	.LVL344:
 6602              	.LBB1519:
 6603              	.LBI1512:
  69:delayline_reverse.h ****     {
 6604              		.loc 19 69 17 view .LVU1798
 6605              	.LBB1516:
  72:delayline_reverse.h ****     }
 6606              		.loc 19 72 9 is_stmt 0 view .LVU1799
 6607 044a 0A61     		str	r2, [r1, #16]
 6608              		.loc 19 73 5 view .LVU1800
 6609 044c 1DE6     		b	.L336
 6610              	.L417:
 6611 044e 00BF     		.align	2
 6612              	.L416:
 6613 0450 00000000 		.word	.LANCHOR47
 6614 0454 00000000 		.word	.LANCHOR48
 6615 0458 00000000 		.word	.LANCHOR49
 6616 045c 00000000 		.word	.LANCHOR50
 6617 0460 00000000 		.word	0
 6618 0464 BF270900 		.word	599999
 6619              	.LBE1516:
 6620              	.LBE1519:
 6621              	.LBE1521:
 6622              	.LBE1553:
 6623              		.cfi_endproc
 6624              	.LFE4794:
 6626              		.section	.text.startup.main,"ax",%progbits
 6627              		.align	1
 6628              		.p2align 2,,3
 6629              		.global	main
 6630              		.syntax unified
 6631              		.thumb
 6632              		.thumb_func
 6633              		.fpu fpv5-d16
 6635              	main:
 6636              	.LFB4772:
 648:Veno-Echo.cpp ****     // initialize hardware.
 6637              		.loc 20 648 1 is_stmt 1 view -0
 6638              		.cfi_startproc
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 241


 6639              		@ Volatile: function does not return.
 6640              		@ args = 0, pretend = 0, frame = 328
 6641              		@ frame_needed = 0, uses_anonymous_args = 0
 650:Veno-Echo.cpp ****     hw.Init();
 6642              		.loc 20 650 5 view .LVU1802
 648:Veno-Echo.cpp ****     // initialize hardware.
 6643              		.loc 20 648 1 is_stmt 0 view .LVU1803
 6644 0000 80B5     		push	{r7, lr}
 6645              		.cfi_def_cfa_offset 8
 6646              		.cfi_offset 7, -8
 6647              		.cfi_offset 14, -4
 650:Veno-Echo.cpp ****     hw.Init();
 6648              		.loc 20 650 17 view .LVU1804
 6649 0002 CF48     		ldr	r0, .L428
 648:Veno-Echo.cpp ****     // initialize hardware.
 6650              		.loc 20 648 1 view .LVU1805
 6651 0004 D4B0     		sub	sp, sp, #336
 6652              		.cfi_def_cfa_offset 344
 650:Veno-Echo.cpp ****     hw.Init();
 6653              		.loc 20 650 17 view .LVU1806
 6654 0006 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 6655              	.LVL345:
 651:Veno-Echo.cpp ****     
 6656              		.loc 20 651 5 is_stmt 1 view .LVU1807
 651:Veno-Echo.cpp ****     
 6657              		.loc 20 651 12 is_stmt 0 view .LVU1808
 6658 000a 0021     		movs	r1, #0
 6659 000c CC48     		ldr	r0, .L428
 655:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6660              		.loc 20 655 16 view .LVU1809
 6661 000e B2EE0E8A 		vmov.f32	s16, #1.5e+1
 651:Veno-Echo.cpp ****     
 6662              		.loc 20 651 12 view .LVU1810
 6663 0012 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 6664              	.LVL346:
 655:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6665              		.loc 20 655 5 is_stmt 1 view .LVU1811
 655:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6666              		.loc 20 655 16 is_stmt 0 view .LVU1812
 6667 0016 1D20     		movs	r0, #29
 6668 0018 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6669              	.LVL347:
 6670 001c 0346     		mov	r3, r0	@ movhi
 6671 001e 0620     		movs	r0, #6
 662:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6672              		.loc 20 662 22 view .LVU1813
 6673 0020 0224     		movs	r4, #2
 655:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6674              		.loc 20 655 16 view .LVU1814
 6675 0022 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 6676 0026 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6677              	.LVL348:
 6678 002a 0346     		mov	r3, r0	@ movhi
 655:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6679              		.loc 20 655 80 view .LVU1815
 6680 002c C448     		ldr	r0, .L428
 6681              	.LBB1554:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 242


 6682              	.LBB1555:
  61:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
  62:../DaisySP/Source/Dynamics/crossfade.h ****     Expected input: See [Curve Options](##curve-options)
  63:../DaisySP/Source/Dynamics/crossfade.h ****     */
  64:../DaisySP/Source/Dynamics/crossfade.h ****     inline void SetCurve(uint8_t curve) { curve_ = curve; }
 6683              		.loc 11 64 50 view .LVU1816
 6684 002e 4FF00108 		mov	r8, #1
 6685              	.LBE1555:
 6686              	.LBE1554:
 6687              	.LBB1558:
 6688              	.LBB1559:
  40:../DaisySP/Source/Control/adsr.h ****     /** Initializes the Adsr module.
  41:../DaisySP/Source/Control/adsr.h ****         \param sample_rate - The sample rate of the audio engine being run. 
  42:../DaisySP/Source/Control/adsr.h ****     */
  43:../DaisySP/Source/Control/adsr.h ****     void Init(float sample_rate);
  44:../DaisySP/Source/Control/adsr.h **** 
  45:../DaisySP/Source/Control/adsr.h **** 
  46:../DaisySP/Source/Control/adsr.h ****     /** Processes one sample through the filter and returns one sample.
  47:../DaisySP/Source/Control/adsr.h ****         \param gate - trigger the envelope, hold it to sustain 
  48:../DaisySP/Source/Control/adsr.h ****     */
  49:../DaisySP/Source/Control/adsr.h ****     float Process(bool gate);
  50:../DaisySP/Source/Control/adsr.h **** 
  51:../DaisySP/Source/Control/adsr.h ****     /** Sets time
  52:../DaisySP/Source/Control/adsr.h ****         Set time per segment in seconds
  53:../DaisySP/Source/Control/adsr.h ****     */
  54:../DaisySP/Source/Control/adsr.h ****     inline void SetTime(int seg, float time) { seg_time_[seg] = time; }
  55:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
  56:../DaisySP/Source/Control/adsr.h ****         \param sus_level - sets sustain level
  57:../DaisySP/Source/Control/adsr.h ****     */
  58:../DaisySP/Source/Control/adsr.h ****     inline void SetSustainLevel(float sus_level) { sus_ = sus_level; }
 6689              		.loc 8 58 57 view .LVU1817
 6690 0032 F7EE008A 		vmov.f32	s17, #1.0e+0
 6691              	.LBE1559:
 6692              	.LBE1558:
 655:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6693              		.loc 20 655 16 view .LVU1818
 6694 0036 ADF81030 		strh	r3, [sp, #16]	@ movhi
 655:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6695              		.loc 20 655 80 view .LVU1819
 6696 003a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6697              	.LVL349:
 655:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6698              		.loc 20 655 16 view .LVU1820
 6699 003e 0123     		movs	r3, #1
 6700 0040 80EE080A 		vdiv.f32	s0, s0, s16
 6701 0044 BF48     		ldr	r0, .L428+4
 670:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6702              		.loc 20 670 20 view .LVU1821
 6703 0046 C04F     		ldr	r7, .L428+8
 6704              	.LBB1562:
 6705              	.LBB1563:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6706              		.loc 8 54 63 view .LVU1822
 6707 0048 C04D     		ldr	r5, .L428+12
 6708              	.LBE1563:
 6709              	.LBE1562:
 676:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 243


 6710              		.loc 20 676 20 view .LVU1823
 6711 004a C14E     		ldr	r6, .L428+16
 655:Veno-Echo.cpp ****     HPF_sw.init(hw.GetPin(30),hw.GetPin(7),ButtonLED::Toggle,hw.AudioSampleRate()/ static_cast<floa
 6712              		.loc 20 655 16 view .LVU1824
 6713 004c DDE90312 		ldrd	r1, r2, [sp, #12]
 6714 0050 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6715              	.LVL350:
 656:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6716              		.loc 20 656 5 is_stmt 1 view .LVU1825
 656:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6717              		.loc 20 656 16 is_stmt 0 view .LVU1826
 6718 0054 1E20     		movs	r0, #30
 6719 0056 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6720              	.LVL351:
 6721 005a 0346     		mov	r3, r0	@ movhi
 6722 005c 0720     		movs	r0, #7
 6723 005e ADF81430 		strh	r3, [sp, #20]	@ movhi
 6724 0062 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6725              	.LVL352:
 6726 0066 0346     		mov	r3, r0	@ movhi
 656:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6727              		.loc 20 656 80 view .LVU1827
 6728 0068 B548     		ldr	r0, .L428
 656:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6729              		.loc 20 656 16 view .LVU1828
 6730 006a ADF81830 		strh	r3, [sp, #24]	@ movhi
 656:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6731              		.loc 20 656 80 view .LVU1829
 6732 006e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6733              	.LVL353:
 656:Veno-Echo.cpp ****     Rev_L_sw.init(hw.GetPin(10),hw.GetPin(2),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6734              		.loc 20 656 16 view .LVU1830
 6735 0072 0123     		movs	r3, #1
 6736 0074 80EE080A 		vdiv.f32	s0, s0, s16
 6737 0078 B648     		ldr	r0, .L428+20
 6738 007a DDE90512 		ldrd	r1, r2, [sp, #20]
 6739 007e FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6740              	.LVL354:
 657:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6741              		.loc 20 657 5 is_stmt 1 view .LVU1831
 657:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6742              		.loc 20 657 18 is_stmt 0 view .LVU1832
 6743 0082 0A20     		movs	r0, #10
 6744 0084 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6745              	.LVL355:
 6746 0088 0346     		mov	r3, r0	@ movhi
 6747 008a 0220     		movs	r0, #2
 6748 008c ADF81C30 		strh	r3, [sp, #28]	@ movhi
 6749 0090 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6750              	.LVL356:
 6751 0094 0346     		mov	r3, r0	@ movhi
 657:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6752              		.loc 20 657 85 view .LVU1833
 6753 0096 AA48     		ldr	r0, .L428
 657:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6754              		.loc 20 657 18 view .LVU1834
 6755 0098 ADF82030 		strh	r3, [sp, #32]	@ movhi
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 244


 657:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6756              		.loc 20 657 85 view .LVU1835
 6757 009c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6758              	.LVL357:
 657:Veno-Echo.cpp ****     Rev_R_sw.init(hw.GetPin(11),hw.GetPin(3),ButtonLED::Momentary,hw.AudioSampleRate() / static_cas
 6759              		.loc 20 657 18 view .LVU1836
 6760 00a0 0023     		movs	r3, #0
 6761 00a2 80EE080A 		vdiv.f32	s0, s0, s16
 6762 00a6 AC48     		ldr	r0, .L428+24
 6763 00a8 DDE90712 		ldrd	r1, r2, [sp, #28]
 6764 00ac FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6765              	.LVL358:
 658:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6766              		.loc 20 658 5 is_stmt 1 view .LVU1837
 658:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6767              		.loc 20 658 18 is_stmt 0 view .LVU1838
 6768 00b0 0B20     		movs	r0, #11
 6769 00b2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6770              	.LVL359:
 6771 00b6 0346     		mov	r3, r0	@ movhi
 6772 00b8 0320     		movs	r0, #3
 6773 00ba ADF82430 		strh	r3, [sp, #36]	@ movhi
 6774 00be FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6775              	.LVL360:
 6776 00c2 0346     		mov	r3, r0	@ movhi
 658:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6777              		.loc 20 658 85 view .LVU1839
 6778 00c4 9E48     		ldr	r0, .L428
 658:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6779              		.loc 20 658 18 view .LVU1840
 6780 00c6 ADF82830 		strh	r3, [sp, #40]	@ movhi
 658:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6781              		.loc 20 658 85 view .LVU1841
 6782 00ca FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6783              	.LVL361:
 658:Veno-Echo.cpp ****     Tap_Button.init(hw.GetPin(24),hw.GetPin(4),ButtonLED::Toggle_inverted,hw.AudioSampleRate() / st
 6784              		.loc 20 658 18 view .LVU1842
 6785 00ce 0023     		movs	r3, #0
 6786 00d0 80EE080A 		vdiv.f32	s0, s0, s16
 6787 00d4 A148     		ldr	r0, .L428+28
 6788 00d6 DDE90912 		ldrd	r1, r2, [sp, #36]
 6789 00da FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6790              	.LVL362:
 659:Veno-Echo.cpp **** 
 6791              		.loc 20 659 5 is_stmt 1 view .LVU1843
 659:Veno-Echo.cpp **** 
 6792              		.loc 20 659 20 is_stmt 0 view .LVU1844
 6793 00de 1820     		movs	r0, #24
 6794 00e0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6795              	.LVL363:
 6796 00e4 0346     		mov	r3, r0	@ movhi
 6797 00e6 0420     		movs	r0, #4
 6798 00e8 ADF82C30 		strh	r3, [sp, #44]	@ movhi
 6799 00ec FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6800              	.LVL364:
 6801 00f0 0346     		mov	r3, r0	@ movhi
 659:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 245


 6802              		.loc 20 659 93 view .LVU1845
 6803 00f2 9348     		ldr	r0, .L428
 659:Veno-Echo.cpp **** 
 6804              		.loc 20 659 20 view .LVU1846
 6805 00f4 ADF83030 		strh	r3, [sp, #48]	@ movhi
 659:Veno-Echo.cpp **** 
 6806              		.loc 20 659 93 view .LVU1847
 6807 00f8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6808              	.LVL365:
 659:Veno-Echo.cpp **** 
 6809              		.loc 20 659 20 view .LVU1848
 6810 00fc 2346     		mov	r3, r4
 6811 00fe 80EE080A 		vdiv.f32	s0, s0, s16
 6812 0102 9748     		ldr	r0, .L428+32
 6813 0104 DDE90B12 		ldrd	r1, r2, [sp, #44]
 6814 0108 FFF7FEFF 		bl	_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
 6815              	.LVL366:
 662:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6816              		.loc 20 662 5 is_stmt 1 view .LVU1849
 662:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6817              		.loc 20 662 22 is_stmt 0 view .LVU1850
 6818 010c 0020     		movs	r0, #0
 6819 010e FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6820              	.LVL367:
 6821 0112 0346     		mov	r3, r0	@ movhi
 662:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6822              		.loc 20 662 55 view .LVU1851
 6823 0114 8A48     		ldr	r0, .L428
 662:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6824              		.loc 20 662 22 view .LVU1852
 6825 0116 ADF83430 		strh	r3, [sp, #52]	@ movhi
 662:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6826              		.loc 20 662 55 view .LVU1853
 6827 011a FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6828              	.LVL368:
 662:Veno-Echo.cpp ****     ReverseGateR.Init(hw.GetPin(1), hw.AudioSampleRate() / static_cast<float> (updateDiv),Switch::T
 6829              		.loc 20 662 22 view .LVU1854
 6830 011e 0D99     		ldr	r1, [sp, #52]
 6831 0120 80EE080A 		vdiv.f32	s0, s0, s16
 6832 0124 4246     		mov	r2, r8
 6833 0126 4346     		mov	r3, r8
 6834 0128 8E48     		ldr	r0, .L428+36
 6835 012a 0094     		str	r4, [sp]
 6836 012c FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6837              	.LVL369:
 663:Veno-Echo.cpp **** 
 6838              		.loc 20 663 5 is_stmt 1 view .LVU1855
 663:Veno-Echo.cpp **** 
 6839              		.loc 20 663 22 is_stmt 0 view .LVU1856
 6840 0130 4046     		mov	r0, r8
 6841 0132 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6842              	.LVL370:
 6843 0136 0346     		mov	r3, r0	@ movhi
 663:Veno-Echo.cpp **** 
 6844              		.loc 20 663 55 view .LVU1857
 6845 0138 8148     		ldr	r0, .L428
 663:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 246


 6846              		.loc 20 663 22 view .LVU1858
 6847 013a ADF83830 		strh	r3, [sp, #56]	@ movhi
 663:Veno-Echo.cpp **** 
 6848              		.loc 20 663 55 view .LVU1859
 6849 013e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6850              	.LVL371:
 663:Veno-Echo.cpp **** 
 6851              		.loc 20 663 22 view .LVU1860
 6852 0142 4246     		mov	r2, r8
 6853 0144 80EE080A 		vdiv.f32	s0, s0, s16
 6854 0148 0E99     		ldr	r1, [sp, #56]
 6855 014a 4346     		mov	r3, r8
 6856 014c 8648     		ldr	r0, .L428+40
 6857 014e 0094     		str	r4, [sp]
 6858              	.LBB1566:
 6859              	.LBB1567:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6860              		.loc 8 54 63 view .LVU1861
 6861 0150 4FF07C54 		mov	r4, #1056964608
 6862              	.LBE1567:
 6863              	.LBE1566:
 663:Veno-Echo.cpp **** 
 6864              		.loc 20 663 22 view .LVU1862
 6865 0154 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
 6866              	.LVL372:
 666:Veno-Echo.cpp ****      ClockIn.Init(&ClockPin);
 6867              		.loc 20 666 5 is_stmt 1 view .LVU1863
 666:Veno-Echo.cpp ****      ClockIn.Init(&ClockPin);
 6868              		.loc 20 666 14 is_stmt 0 view .LVU1864
 6869 0158 1720     		movs	r0, #23
 6870 015a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 6871              	.LVL373:
 6872 015e 0346     		mov	r3, r0	@ movhi
 666:Veno-Echo.cpp ****      ClockIn.Init(&ClockPin);
 6873              		.loc 20 666 48 view .LVU1865
 6874 0160 7748     		ldr	r0, .L428
 666:Veno-Echo.cpp ****      ClockIn.Init(&ClockPin);
 6875              		.loc 20 666 14 view .LVU1866
 6876 0162 ADF83C30 		strh	r3, [sp, #60]	@ movhi
 666:Veno-Echo.cpp ****      ClockIn.Init(&ClockPin);
 6877              		.loc 20 666 48 view .LVU1867
 6878 0166 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6879              	.LVL374:
 666:Veno-Echo.cpp ****      ClockIn.Init(&ClockPin);
 6880              		.loc 20 666 14 view .LVU1868
 6881 016a 0F99     		ldr	r1, [sp, #60]
 6882 016c 80EE080A 		vdiv.f32	s0, s0, s16
 6883 0170 7E48     		ldr	r0, .L428+44
 6884 0172 FFF7FEFF 		bl	_ZN5daisy6Switch4InitE12dsy_gpio_pinf
 6885              	.LVL375:
 667:Veno-Echo.cpp ****     //ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6886              		.loc 20 667 6 is_stmt 1 view .LVU1869
 667:Veno-Echo.cpp ****     //ClockIn.Init(hw.GetPin(5), hw.AudioSampleRate());
 6887              		.loc 20 667 18 is_stmt 0 view .LVU1870
 6888 0176 7E49     		ldr	r1, .L428+48
 6889 0178 7E48     		ldr	r0, .L428+52
 6890 017a FFF7FEFF 		bl	_ZN5daisy6GateIn4InitEP12dsy_gpio_pin
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 247


 6891              	.LVL376:
 670:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6892              		.loc 20 670 5 is_stmt 1 view .LVU1871
 670:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6893              		.loc 20 670 20 is_stmt 0 view .LVU1872
 6894 017e 7048     		ldr	r0, .L428
 6895 0180 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6896              	.LVL377:
 6897 0184 3846     		mov	r0, r7
 6898 0186 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6899              	.LVL378:
 671:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADENV_SEG_DECAY, 0.01);
 6900              		.loc 20 671 5 is_stmt 1 view .LVU1873
 6901              	.LBB1570:
 6902              	.LBI1566:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6903              		.loc 8 54 17 view .LVU1874
 6904              	.LBB1568:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6905              		.loc 8 54 48 view .LVU1875
 6906              	.LBE1568:
 6907              	.LBE1570:
 676:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6908              		.loc 20 676 20 is_stmt 0 view .LVU1876
 6909 018a 6D48     		ldr	r0, .L428
 6910              	.LBB1571:
 6911              	.LBB1560:
 6912              		.loc 8 58 57 view .LVU1877
 6913 018c C7ED008A 		vstr.32	s17, [r7]
 6914              	.LBE1560:
 6915              	.LBE1571:
 6916              	.LBB1572:
 6917              	.LBB1569:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6918              		.loc 8 54 63 view .LVU1878
 6919 0190 BC60     		str	r4, [r7, #8]	@ float
 6920              	.LVL379:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6921              		.loc 8 54 63 view .LVU1879
 6922              	.LBE1569:
 6923              	.LBE1572:
 672:Veno-Echo.cpp ****     FwdRevLEnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 6924              		.loc 20 672 5 is_stmt 1 view .LVU1880
 6925              	.LBB1573:
 6926              	.LBI1562:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6927              		.loc 8 54 17 view .LVU1881
 6928              	.LBB1564:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6929              		.loc 8 54 48 view .LVU1882
 6930              	.LBE1564:
 6931              	.LBE1573:
 6932              	.LBB1574:
 6933              	.LBB1575:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6934              		.loc 8 54 63 is_stmt 0 view .LVU1883
 6935 0192 7C61     		str	r4, [r7, #20]	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 248


 6936              	.LBE1575:
 6937              	.LBE1574:
 6938              	.LBB1577:
 6939              	.LBB1565:
 6940 0194 FD60     		str	r5, [r7, #12]	@ float
 6941              	.LVL380:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6942              		.loc 8 54 63 view .LVU1884
 6943              	.LBE1565:
 6944              	.LBE1577:
 673:Veno-Echo.cpp ****     FwdRevLEnv.SetSustainLevel(1.0);
 6945              		.loc 20 673 5 is_stmt 1 view .LVU1885
 6946              	.LBB1578:
 6947              	.LBI1574:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6948              		.loc 8 54 17 view .LVU1886
 6949              	.LBB1576:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6950              		.loc 8 54 48 view .LVU1887
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6951              		.loc 8 54 48 is_stmt 0 view .LVU1888
 6952              	.LBE1576:
 6953              	.LBE1578:
 674:Veno-Echo.cpp **** 
 6954              		.loc 20 674 5 is_stmt 1 view .LVU1889
 6955              	.LBB1579:
 6956              	.LBI1558:
 6957              		.loc 8 58 17 view .LVU1890
 6958              	.LBB1561:
 6959              		.loc 8 58 52 view .LVU1891
 6960              		.loc 8 58 52 is_stmt 0 view .LVU1892
 6961              	.LBE1561:
 6962              	.LBE1579:
 676:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6963              		.loc 20 676 5 is_stmt 1 view .LVU1893
 676:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6964              		.loc 20 676 20 is_stmt 0 view .LVU1894
 6965 0196 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 6966              	.LVL381:
 682:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6967              		.loc 20 682 17 view .LVU1895
 6968 019a 774F     		ldr	r7, .L428+56
 676:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_ATTACK, FwdRevXFadeTime);
 6969              		.loc 20 676 20 view .LVU1896
 6970 019c 3046     		mov	r0, r6
 6971 019e FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 6972              	.LVL382:
 677:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADENV_SEG_DECAY, 0.01);
 6973              		.loc 20 677 5 is_stmt 1 view .LVU1897
 6974              	.LBB1580:
 6975              	.LBI1580:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6976              		.loc 8 54 17 view .LVU1898
 6977              	.LBB1581:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6978              		.loc 8 54 48 view .LVU1899
 6979              	.LBE1581:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 249


 6980              	.LBE1580:
 682:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 6981              		.loc 20 682 17 is_stmt 0 view .LVU1900
 6982 01a2 6748     		ldr	r0, .L428
 6983              	.LBB1583:
 6984              	.LBB1584:
 6985              		.loc 8 58 57 view .LVU1901
 6986 01a4 C6ED008A 		vstr.32	s17, [r6]
 6987              	.LBE1584:
 6988              	.LBE1583:
 6989              	.LBB1586:
 6990              	.LBB1582:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6991              		.loc 8 54 63 view .LVU1902
 6992 01a8 B460     		str	r4, [r6, #8]	@ float
 6993              	.LVL383:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 6994              		.loc 8 54 63 view .LVU1903
 6995              	.LBE1582:
 6996              	.LBE1586:
 678:Veno-Echo.cpp ****     FwdRevREnv.SetTime(ADSR_SEG_RELEASE, FwdRevXFadeTime);
 6997              		.loc 20 678 5 is_stmt 1 view .LVU1904
 6998              	.LBB1587:
 6999              	.LBI1587:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7000              		.loc 8 54 17 view .LVU1905
 7001              	.LBB1588:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7002              		.loc 8 54 48 view .LVU1906
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7003              		.loc 8 54 63 is_stmt 0 view .LVU1907
 7004 01aa F560     		str	r5, [r6, #12]	@ float
 7005              	.LVL384:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7006              		.loc 8 54 63 view .LVU1908
 7007              	.LBE1588:
 7008              	.LBE1587:
 679:Veno-Echo.cpp ****     FwdRevREnv.SetSustainLevel(1.0);
 7009              		.loc 20 679 5 is_stmt 1 view .LVU1909
 7010              	.LBB1589:
 7011              	.LBI1589:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7012              		.loc 8 54 17 view .LVU1910
 7013              	.LBB1590:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7014              		.loc 8 54 48 view .LVU1911
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7015              		.loc 8 54 63 is_stmt 0 view .LVU1912
 7016 01ac 7461     		str	r4, [r6, #20]	@ float
 7017              	.LVL385:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7018              		.loc 8 54 63 view .LVU1913
 7019              	.LBE1590:
 7020              	.LBE1589:
 680:Veno-Echo.cpp **** 
 7021              		.loc 20 680 5 is_stmt 1 view .LVU1914
 7022              	.LBB1591:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 250


 7023              	.LBI1583:
 7024              		.loc 8 58 17 view .LVU1915
 7025              	.LBB1585:
 7026              		.loc 8 58 52 view .LVU1916
 7027              		.loc 8 58 52 is_stmt 0 view .LVU1917
 7028              	.LBE1585:
 7029              	.LBE1591:
 682:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7030              		.loc 20 682 5 is_stmt 1 view .LVU1918
 682:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7031              		.loc 20 682 17 is_stmt 0 view .LVU1919
 7032 01ae FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7033              	.LVL386:
 688:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7034              		.loc 20 688 17 view .LVU1920
 7035 01b2 724E     		ldr	r6, .L428+60
 682:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7036              		.loc 20 682 17 view .LVU1921
 7037 01b4 3846     		mov	r0, r7
 7038 01b6 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 7039              	.LVL387:
 683:Veno-Echo.cpp ****     LPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 7040              		.loc 20 683 5 is_stmt 1 view .LVU1922
 7041              	.LBB1592:
 7042              	.LBI1592:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7043              		.loc 8 54 17 view .LVU1923
 7044              	.LBB1593:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7045              		.loc 8 54 48 view .LVU1924
 7046              	.LBE1593:
 7047              	.LBE1592:
 688:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7048              		.loc 20 688 17 is_stmt 0 view .LVU1925
 7049 01ba 6148     		ldr	r0, .L428
 7050              	.LBB1595:
 7051              	.LBB1596:
 7052              		.loc 8 58 57 view .LVU1926
 7053 01bc C7ED008A 		vstr.32	s17, [r7]
 7054              	.LBE1596:
 7055              	.LBE1595:
 7056              	.LBB1598:
 7057              	.LBB1594:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7058              		.loc 8 54 63 view .LVU1927
 7059 01c0 BD60     		str	r5, [r7, #8]	@ float
 7060              	.LVL388:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7061              		.loc 8 54 63 view .LVU1928
 7062              	.LBE1594:
 7063              	.LBE1598:
 684:Veno-Echo.cpp ****     LPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 7064              		.loc 20 684 5 is_stmt 1 view .LVU1929
 7065              	.LBB1599:
 7066              	.LBI1599:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7067              		.loc 8 54 17 view .LVU1930
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 251


 7068              	.LBB1600:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7069              		.loc 8 54 48 view .LVU1931
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7070              		.loc 8 54 63 is_stmt 0 view .LVU1932
 7071 01c2 FD60     		str	r5, [r7, #12]	@ float
 7072              	.LVL389:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7073              		.loc 8 54 63 view .LVU1933
 7074              	.LBE1600:
 7075              	.LBE1599:
 685:Veno-Echo.cpp ****     LPF_Env.SetSustainLevel(1.0);
 7076              		.loc 20 685 5 is_stmt 1 view .LVU1934
 7077              	.LBB1601:
 7078              	.LBI1601:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7079              		.loc 8 54 17 view .LVU1935
 7080              	.LBB1602:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7081              		.loc 8 54 48 view .LVU1936
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7082              		.loc 8 54 63 is_stmt 0 view .LVU1937
 7083 01c4 7D61     		str	r5, [r7, #20]	@ float
 7084              	.LVL390:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7085              		.loc 8 54 63 view .LVU1938
 7086              	.LBE1602:
 7087              	.LBE1601:
 686:Veno-Echo.cpp **** 
 7088              		.loc 20 686 5 is_stmt 1 view .LVU1939
 7089              	.LBB1603:
 7090              	.LBI1595:
 7091              		.loc 8 58 17 view .LVU1940
 7092              	.LBB1597:
 7093              		.loc 8 58 52 view .LVU1941
 7094              		.loc 8 58 52 is_stmt 0 view .LVU1942
 7095              	.LBE1597:
 7096              	.LBE1603:
 688:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7097              		.loc 20 688 5 is_stmt 1 view .LVU1943
 688:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7098              		.loc 20 688 17 is_stmt 0 view .LVU1944
 7099 01c6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7100              	.LVL391:
 7101 01ca 3046     		mov	r0, r6
 707:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 7102              		.loc 20 707 17 view .LVU1945
 7103 01cc 9FED6C8A 		vldr.32	s16, .L428+64
 688:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_ATTACK, XFadeTime);
 7104              		.loc 20 688 17 view .LVU1946
 7105 01d0 FFF7FEFF 		bl	_ZN7daisysp4Adsr4InitEf
 7106              	.LVL392:
 689:Veno-Echo.cpp ****     HPF_Env.SetTime(ADENV_SEG_DECAY, 0.01);
 7107              		.loc 20 689 5 is_stmt 1 view .LVU1947
 7108              	.LBB1604:
 7109              	.LBI1604:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 252


 7110              		.loc 8 54 17 view .LVU1948
 7111              	.LBB1605:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7112              		.loc 8 54 48 view .LVU1949
 7113              	.LBE1605:
 7114              	.LBE1604:
 7115              	.LBB1607:
 7116              	.LBB1608:
 7117              	.LBB1609:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7118              		.loc 11 45 16 is_stmt 0 view .LVU1950
 7119 01d4 6B49     		ldr	r1, .L428+68
 7120              	.LBE1609:
 7121              	.LBE1608:
 7122              	.LBE1607:
 7123              	.LBB1614:
 7124              	.LBB1615:
 7125              	.LBB1616:
 7126 01d6 6C4A     		ldr	r2, .L428+72
 7127              	.LBE1616:
 7128              	.LBE1615:
 7129              	.LBE1614:
 7130              	.LBB1621:
 7131              	.LBB1622:
 7132              	.LBB1623:
 7133 01d8 6C4B     		ldr	r3, .L428+76
 7134              	.LBE1623:
 7135              	.LBE1622:
 7136              	.LBE1621:
 7137              	.LBB1628:
 7138              	.LBB1612:
 7139              	.LBB1610:
 7140 01da 0C60     		str	r4, [r1]	@ float
 7141              	.LBE1610:
 7142              	.LBE1612:
 7143              	.LBE1628:
 7144              	.LBB1629:
 7145              	.LBB1619:
 7146              	.LBB1617:
 7147 01dc 1460     		str	r4, [r2]	@ float
 7148              	.LBE1617:
 7149              	.LBE1619:
 7150              	.LBE1629:
 7151              	.LBB1630:
 7152              	.LBB1626:
 7153              	.LBB1624:
 7154 01de 1C60     		str	r4, [r3]	@ float
 7155              	.LBE1624:
 7156              	.LBE1626:
 7157              	.LBE1630:
 7158              	.LBB1631:
 7159              	.LBB1556:
 7160              		.loc 11 64 50 view .LVU1951
 7161 01e0 81F80480 		strb	r8, [r1, #4]
 7162              	.LBE1556:
 7163              	.LBE1631:
 7164              	.LBB1632:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 253


 7165              	.LBB1633:
 7166 01e4 82F80480 		strb	r8, [r2, #4]
 7167              	.LBE1633:
 7168              	.LBE1632:
 7169              	.LBB1635:
 7170              	.LBB1636:
 7171 01e8 83F80480 		strb	r8, [r3, #4]
 7172              	.LBE1636:
 7173              	.LBE1635:
 703:Veno-Echo.cpp **** 
 7174              		.loc 20 703 15 view .LVU1952
 7175 01ec 5448     		ldr	r0, .L428
 7176              	.LBB1638:
 7177              	.LBB1639:
 7178              		.loc 8 58 57 view .LVU1953
 7179 01ee C6ED008A 		vstr.32	s17, [r6]
 7180              	.LBE1639:
 7181              	.LBE1638:
 7182              	.LBB1641:
 7183              	.LBB1606:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7184              		.loc 8 54 63 view .LVU1954
 7185 01f2 B560     		str	r5, [r6, #8]	@ float
 7186              	.LVL393:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7187              		.loc 8 54 63 view .LVU1955
 7188              	.LBE1606:
 7189              	.LBE1641:
 690:Veno-Echo.cpp ****     HPF_Env.SetTime(ADSR_SEG_RELEASE, XFadeTime);
 7190              		.loc 20 690 5 is_stmt 1 view .LVU1956
 7191              	.LBB1642:
 7192              	.LBI1642:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7193              		.loc 8 54 17 view .LVU1957
 7194              	.LBB1643:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7195              		.loc 8 54 48 view .LVU1958
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7196              		.loc 8 54 63 is_stmt 0 view .LVU1959
 7197 01f4 F560     		str	r5, [r6, #12]	@ float
 7198              	.LVL394:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7199              		.loc 8 54 63 view .LVU1960
 7200              	.LBE1643:
 7201              	.LBE1642:
 691:Veno-Echo.cpp ****     HPF_Env.SetSustainLevel(1.0);
 7202              		.loc 20 691 5 is_stmt 1 view .LVU1961
 7203              	.LBB1644:
 7204              	.LBI1644:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7205              		.loc 8 54 17 view .LVU1962
 7206              	.LBB1645:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7207              		.loc 8 54 48 view .LVU1963
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7208              		.loc 8 54 63 is_stmt 0 view .LVU1964
 7209 01f6 7561     		str	r5, [r6, #20]	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 254


 7210              	.LVL395:
  54:../DaisySP/Source/Control/adsr.h ****     /** Sustain level
 7211              		.loc 8 54 63 view .LVU1965
 7212              	.LBE1645:
 7213              	.LBE1644:
 692:Veno-Echo.cpp **** 
 7214              		.loc 20 692 5 is_stmt 1 view .LVU1966
 7215              	.LBB1646:
 7216              	.LBI1638:
 7217              		.loc 8 58 17 view .LVU1967
 7218              	.LBB1640:
 7219              		.loc 8 58 52 view .LVU1968
 7220              		.loc 8 58 52 is_stmt 0 view .LVU1969
 7221              	.LBE1640:
 7222              	.LBE1646:
 695:Veno-Echo.cpp ****     FwdRevLXfade.SetCurve(CROSSFADE_CPOW);
 7223              		.loc 20 695 5 is_stmt 1 view .LVU1970
 7224              	.LBB1647:
 7225              	.LBI1607:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7226              		.loc 11 51 17 view .LVU1971
 7227              	.LBE1647:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7228              		.loc 11 51 26 view .LVU1972
 7229              	.LBB1648:
 7230              	.LBB1613:
 7231              	.LBI1608:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7232              		.loc 11 43 17 view .LVU1973
 7233              	.LBB1611:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7234              		.loc 11 45 9 view .LVU1974
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7235              		.loc 11 46 9 view .LVU1975
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7236              		.loc 11 46 9 is_stmt 0 view .LVU1976
 7237              	.LBE1611:
 7238              	.LBE1613:
 7239              	.LBE1648:
 696:Veno-Echo.cpp ****     FwdRevRXfade.Init();
 7240              		.loc 20 696 5 is_stmt 1 view .LVU1977
 7241              	.LBB1649:
 7242              	.LBI1554:
 7243              		.loc 11 64 17 view .LVU1978
 7244              	.LBB1557:
 7245              		.loc 11 64 43 view .LVU1979
 7246              		.loc 11 64 43 is_stmt 0 view .LVU1980
 7247              	.LBE1557:
 7248              	.LBE1649:
 697:Veno-Echo.cpp ****     FwdRevRXfade.SetCurve(CROSSFADE_CPOW);
 7249              		.loc 20 697 5 is_stmt 1 view .LVU1981
 7250              	.LBB1650:
 7251              	.LBI1614:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7252              		.loc 11 51 17 view .LVU1982
 7253              	.LBE1650:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 255


 7254              		.loc 11 51 26 view .LVU1983
 7255              	.LBB1651:
 7256              	.LBB1620:
 7257              	.LBI1615:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7258              		.loc 11 43 17 view .LVU1984
 7259              	.LBB1618:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7260              		.loc 11 45 9 view .LVU1985
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7261              		.loc 11 46 9 view .LVU1986
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7262              		.loc 11 46 9 is_stmt 0 view .LVU1987
 7263              	.LBE1618:
 7264              	.LBE1620:
 7265              	.LBE1651:
 698:Veno-Echo.cpp **** 
 7266              		.loc 20 698 5 is_stmt 1 view .LVU1988
 7267              	.LBB1652:
 7268              	.LBI1632:
 7269              		.loc 11 64 17 view .LVU1989
 7270              	.LBB1634:
 7271              		.loc 11 64 43 view .LVU1990
 7272              		.loc 11 64 43 is_stmt 0 view .LVU1991
 7273              	.LBE1634:
 7274              	.LBE1652:
 700:Veno-Echo.cpp ****     WidthXfade.SetCurve(CROSSFADE_CPOW);
 7275              		.loc 20 700 5 is_stmt 1 view .LVU1992
 7276              	.LBB1653:
 7277              	.LBI1621:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7278              		.loc 11 51 17 view .LVU1993
 7279              	.LBE1653:
  51:../DaisySP/Source/Dynamics/crossfade.h ****     /** processes CrossFade and returns single sample
 7280              		.loc 11 51 26 view .LVU1994
 7281              	.LBB1654:
 7282              	.LBB1627:
 7283              	.LBI1622:
  43:../DaisySP/Source/Dynamics/crossfade.h ****     {
 7284              		.loc 11 43 17 view .LVU1995
 7285              	.LBB1625:
  45:../DaisySP/Source/Dynamics/crossfade.h ****         curve_ = curve < CROSSFADE_LAST ? curve : CROSSFADE_LIN;
 7286              		.loc 11 45 9 view .LVU1996
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7287              		.loc 11 46 9 view .LVU1997
  46:../DaisySP/Source/Dynamics/crossfade.h ****     }
 7288              		.loc 11 46 9 is_stmt 0 view .LVU1998
 7289              	.LBE1625:
 7290              	.LBE1627:
 7291              	.LBE1654:
 701:Veno-Echo.cpp **** 
 7292              		.loc 20 701 5 is_stmt 1 view .LVU1999
 7293              	.LBB1655:
 7294              	.LBI1635:
 7295              		.loc 11 64 17 view .LVU2000
 7296              	.LBB1637:
 7297              		.loc 11 64 43 view .LVU2001
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 256


 7298              		.loc 11 64 43 is_stmt 0 view .LVU2002
 7299              	.LBE1637:
 7300              	.LBE1655:
 703:Veno-Echo.cpp **** 
 7301              		.loc 20 703 5 is_stmt 1 view .LVU2003
 703:Veno-Echo.cpp **** 
 7302              		.loc 20 703 15 is_stmt 0 view .LVU2004
 7303 01f8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7304              	.LVL396:
 7305 01fc FFF7FEFF 		bl	_Z10InitDelaysf
 7306              	.LVL397:
 706:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 7307              		.loc 20 706 5 is_stmt 1 view .LVU2005
 706:Veno-Echo.cpp ****     LPF_L.SetRes(default_Res);
 7308              		.loc 20 706 15 is_stmt 0 view .LVU2006
 7309 0200 4F48     		ldr	r0, .L428
 7310 0202 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7311              	.LVL398:
 7312 0206 6248     		ldr	r0, .L428+80
 7313 0208 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7314              	.LVL399:
 707:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 7315              		.loc 20 707 5 is_stmt 1 view .LVU2007
 707:Veno-Echo.cpp ****     LPF_L.SetFreq(defaultLPCut);
 7316              		.loc 20 707 17 is_stmt 0 view .LVU2008
 7317 020c B0EE480A 		vmov.f32	s0, s16
 7318 0210 5F48     		ldr	r0, .L428+80
 7319 0212 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7320              	.LVL400:
 708:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 7321              		.loc 20 708 5 is_stmt 1 view .LVU2009
 708:Veno-Echo.cpp ****     LPF_L.SetDrive(defaultDrive);
 7322              		.loc 20 708 18 is_stmt 0 view .LVU2010
 7323 0216 9FED5F0A 		vldr.32	s0, .L428+84
 7324 021a 5D48     		ldr	r0, .L428+80
 7325 021c FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7326              	.LVL401:
 709:Veno-Echo.cpp **** 
 7327              		.loc 20 709 5 is_stmt 1 view .LVU2011
 709:Veno-Echo.cpp **** 
 7328              		.loc 20 709 19 is_stmt 0 view .LVU2012
 7329 0220 9FED5D0A 		vldr.32	s0, .L428+88
 7330 0224 5A48     		ldr	r0, .L428+80
 7331 0226 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7332              	.LVL402:
 711:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 7333              		.loc 20 711 5 is_stmt 1 view .LVU2013
 711:Veno-Echo.cpp ****     LPF_R.SetRes(default_Res);
 7334              		.loc 20 711 15 is_stmt 0 view .LVU2014
 7335 022a 4548     		ldr	r0, .L428
 7336 022c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7337              	.LVL403:
 7338 0230 5A48     		ldr	r0, .L428+92
 7339 0232 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7340              	.LVL404:
 712:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 7341              		.loc 20 712 5 is_stmt 1 view .LVU2015
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 257


 712:Veno-Echo.cpp ****     LPF_R.SetFreq(defaultLPCut);
 7342              		.loc 20 712 17 is_stmt 0 view .LVU2016
 7343 0236 B0EE480A 		vmov.f32	s0, s16
 7344 023a 5848     		ldr	r0, .L428+92
 7345 023c FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7346              	.LVL405:
 713:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 7347              		.loc 20 713 5 is_stmt 1 view .LVU2017
 713:Veno-Echo.cpp ****     LPF_R.SetDrive(defaultDrive);
 7348              		.loc 20 713 18 is_stmt 0 view .LVU2018
 7349 0240 9FED540A 		vldr.32	s0, .L428+84
 7350 0244 5548     		ldr	r0, .L428+92
 7351 0246 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7352              	.LVL406:
 714:Veno-Echo.cpp **** 
 7353              		.loc 20 714 5 is_stmt 1 view .LVU2019
 714:Veno-Echo.cpp **** 
 7354              		.loc 20 714 19 is_stmt 0 view .LVU2020
 7355 024a 9FED530A 		vldr.32	s0, .L428+88
 7356 024e 5348     		ldr	r0, .L428+92
 7357 0250 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7358              	.LVL407:
 717:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 7359              		.loc 20 717 5 is_stmt 1 view .LVU2021
 717:Veno-Echo.cpp ****     HPF_L.SetRes(default_Res);
 7360              		.loc 20 717 15 is_stmt 0 view .LVU2022
 7361 0254 3A48     		ldr	r0, .L428
 7362 0256 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7363              	.LVL408:
 7364 025a 5148     		ldr	r0, .L428+96
 7365 025c FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7366              	.LVL409:
 718:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 7367              		.loc 20 718 5 is_stmt 1 view .LVU2023
 718:Veno-Echo.cpp ****     HPF_L.SetFreq(defaultHPCut);
 7368              		.loc 20 718 17 is_stmt 0 view .LVU2024
 7369 0260 B0EE480A 		vmov.f32	s0, s16
 7370 0264 4E48     		ldr	r0, .L428+96
 7371 0266 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7372              	.LVL410:
 719:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 7373              		.loc 20 719 5 is_stmt 1 view .LVU2025
 719:Veno-Echo.cpp ****     HPF_L.SetDrive(defaultDrive);
 7374              		.loc 20 719 18 is_stmt 0 view .LVU2026
 7375 026a 9FED530A 		vldr.32	s0, .L428+120
 7376 026e 4C48     		ldr	r0, .L428+96
 7377 0270 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7378              	.LVL411:
 720:Veno-Echo.cpp **** 
 7379              		.loc 20 720 5 is_stmt 1 view .LVU2027
 720:Veno-Echo.cpp **** 
 7380              		.loc 20 720 19 is_stmt 0 view .LVU2028
 7381 0274 9FED480A 		vldr.32	s0, .L428+88
 7382 0278 4948     		ldr	r0, .L428+96
 7383 027a FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7384              	.LVL412:
 722:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 258


 7385              		.loc 20 722 5 is_stmt 1 view .LVU2029
 722:Veno-Echo.cpp ****     HPF_R.SetRes(default_Res);
 7386              		.loc 20 722 15 is_stmt 0 view .LVU2030
 7387 027e 3048     		ldr	r0, .L428
 7388 0280 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7389              	.LVL413:
 7390 0284 4748     		ldr	r0, .L428+100
 7391 0286 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7392              	.LVL414:
 723:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 7393              		.loc 20 723 5 is_stmt 1 view .LVU2031
 723:Veno-Echo.cpp ****     HPF_R.SetFreq(defaultHPCut);
 7394              		.loc 20 723 17 is_stmt 0 view .LVU2032
 7395 028a B0EE480A 		vmov.f32	s0, s16
 7396 028e 4548     		ldr	r0, .L428+100
 7397 0290 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7398              	.LVL415:
 724:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 7399              		.loc 20 724 5 is_stmt 1 view .LVU2033
 724:Veno-Echo.cpp ****     HPF_R.SetDrive(defaultDrive);
 7400              		.loc 20 724 18 is_stmt 0 view .LVU2034
 7401 0294 9FED480A 		vldr.32	s0, .L428+120
 7402 0298 4248     		ldr	r0, .L428+100
 7403 029a FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7404              	.LVL416:
 725:Veno-Echo.cpp **** 
 7405              		.loc 20 725 5 is_stmt 1 view .LVU2035
 725:Veno-Echo.cpp **** 
 7406              		.loc 20 725 19 is_stmt 0 view .LVU2036
 7407 029e 9FED3E0A 		vldr.32	s0, .L428+88
 7408 02a2 4048     		ldr	r0, .L428+100
 7409 02a4 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7410              	.LVL417:
 728:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 7411              		.loc 20 728 5 is_stmt 1 view .LVU2037
 728:Veno-Echo.cpp ****     LPF_L_post.SetRes(default_Res);
 7412              		.loc 20 728 20 is_stmt 0 view .LVU2038
 7413 02a8 2548     		ldr	r0, .L428
 7414 02aa FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7415              	.LVL418:
 7416 02ae 3E48     		ldr	r0, .L428+104
 7417 02b0 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7418              	.LVL419:
 729:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 7419              		.loc 20 729 5 is_stmt 1 view .LVU2039
 729:Veno-Echo.cpp ****     LPF_L_post.SetFreq(defaultLPCut);
 7420              		.loc 20 729 22 is_stmt 0 view .LVU2040
 7421 02b4 B0EE480A 		vmov.f32	s0, s16
 7422 02b8 3B48     		ldr	r0, .L428+104
 7423 02ba FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7424              	.LVL420:
 730:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 7425              		.loc 20 730 5 is_stmt 1 view .LVU2041
 730:Veno-Echo.cpp ****     LPF_L_post.SetDrive(defaultDrive);
 7426              		.loc 20 730 23 is_stmt 0 view .LVU2042
 7427 02be 9FED350A 		vldr.32	s0, .L428+84
 7428 02c2 3948     		ldr	r0, .L428+104
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 259


 7429 02c4 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7430              	.LVL421:
 731:Veno-Echo.cpp **** 
 7431              		.loc 20 731 5 is_stmt 1 view .LVU2043
 731:Veno-Echo.cpp **** 
 7432              		.loc 20 731 24 is_stmt 0 view .LVU2044
 7433 02c8 9FED330A 		vldr.32	s0, .L428+88
 7434 02cc 3648     		ldr	r0, .L428+104
 7435 02ce FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7436              	.LVL422:
 733:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 7437              		.loc 20 733 5 is_stmt 1 view .LVU2045
 733:Veno-Echo.cpp ****     LPF_R_post.SetRes(default_Res);
 7438              		.loc 20 733 20 is_stmt 0 view .LVU2046
 7439 02d2 1B48     		ldr	r0, .L428
 7440 02d4 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7441              	.LVL423:
 7442 02d8 3448     		ldr	r0, .L428+108
 7443 02da FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7444              	.LVL424:
 734:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 7445              		.loc 20 734 5 is_stmt 1 view .LVU2047
 734:Veno-Echo.cpp ****     LPF_R_post.SetFreq(defaultLPCut);
 7446              		.loc 20 734 22 is_stmt 0 view .LVU2048
 7447 02de B0EE480A 		vmov.f32	s0, s16
 7448 02e2 3248     		ldr	r0, .L428+108
 7449 02e4 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7450              	.LVL425:
 735:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 7451              		.loc 20 735 5 is_stmt 1 view .LVU2049
 735:Veno-Echo.cpp ****     LPF_R_post.SetDrive(defaultDrive);
 7452              		.loc 20 735 23 is_stmt 0 view .LVU2050
 7453 02e8 9FED2A0A 		vldr.32	s0, .L428+84
 7454 02ec 2F48     		ldr	r0, .L428+108
 7455 02ee FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7456              	.LVL426:
 736:Veno-Echo.cpp **** 
 7457              		.loc 20 736 5 is_stmt 1 view .LVU2051
 736:Veno-Echo.cpp **** 
 7458              		.loc 20 736 24 is_stmt 0 view .LVU2052
 7459 02f2 9FED290A 		vldr.32	s0, .L428+88
 7460 02f6 2D48     		ldr	r0, .L428+108
 7461 02f8 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7462              	.LVL427:
 739:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 7463              		.loc 20 739 5 is_stmt 1 view .LVU2053
 739:Veno-Echo.cpp ****     HPF_L_post.SetRes(default_Res);
 7464              		.loc 20 739 20 is_stmt 0 view .LVU2054
 7465 02fc 1048     		ldr	r0, .L428
 7466 02fe FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7467              	.LVL428:
 7468 0302 2B48     		ldr	r0, .L428+112
 7469 0304 FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7470              	.LVL429:
 740:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
 7471              		.loc 20 740 5 is_stmt 1 view .LVU2055
 740:Veno-Echo.cpp ****     HPF_L_post.SetFreq(defaultHPCut);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 260


 7472              		.loc 20 740 22 is_stmt 0 view .LVU2056
 7473 0308 B0EE480A 		vmov.f32	s0, s16
 7474 030c 2848     		ldr	r0, .L428+112
 7475 030e FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7476              	.LVL430:
 741:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 7477              		.loc 20 741 5 is_stmt 1 view .LVU2057
 741:Veno-Echo.cpp ****     HPF_L_post.SetDrive(defaultDrive);
 7478              		.loc 20 741 23 is_stmt 0 view .LVU2058
 7479 0312 9FED290A 		vldr.32	s0, .L428+120
 7480 0316 2648     		ldr	r0, .L428+112
 7481 0318 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7482              	.LVL431:
 742:Veno-Echo.cpp **** 
 7483              		.loc 20 742 5 is_stmt 1 view .LVU2059
 742:Veno-Echo.cpp **** 
 7484              		.loc 20 742 24 is_stmt 0 view .LVU2060
 7485 031c 9FED1E0A 		vldr.32	s0, .L428+88
 7486 0320 2348     		ldr	r0, .L428+112
 7487 0322 FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7488              	.LVL432:
 744:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 7489              		.loc 20 744 5 is_stmt 1 view .LVU2061
 744:Veno-Echo.cpp ****     HPF_R_post.SetRes(default_Res);
 7490              		.loc 20 744 20 is_stmt 0 view .LVU2062
 7491 0326 0648     		ldr	r0, .L428
 7492 0328 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7493              	.LVL433:
 7494 032c 2148     		ldr	r0, .L428+116
 7495 032e FFF7FEFF 		bl	_ZN7daisysp3Svf4InitEf
 7496              	.LVL434:
 745:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 7497              		.loc 20 745 5 is_stmt 1 view .LVU2063
 745:Veno-Echo.cpp ****     HPF_R_post.SetFreq(defaultHPCut);
 7498              		.loc 20 745 22 is_stmt 0 view .LVU2064
 7499 0332 B0EE480A 		vmov.f32	s0, s16
 7500 0336 1F48     		ldr	r0, .L428+116
 7501 0338 FFF7FEFF 		bl	_ZN7daisysp3Svf6SetResEf
 7502              	.LVL435:
 7503 033c 3EE0     		b	.L429
 7504              	.L430:
 7505 033e 00BF     		.align	2
 7506              	.L428:
 7507 0340 00000000 		.word	.LANCHOR4
 7508 0344 00000000 		.word	.LANCHOR94
 7509 0348 00000000 		.word	.LANCHOR101
 7510 034c 0AD7233C 		.word	1008981770
 7511 0350 00000000 		.word	.LANCHOR102
 7512 0354 00000000 		.word	.LANCHOR95
 7513 0358 00000000 		.word	.LANCHOR92
 7514 035c 00000000 		.word	.LANCHOR93
 7515 0360 00000000 		.word	.LANCHOR96
 7516 0364 00000000 		.word	.LANCHOR97
 7517 0368 00000000 		.word	.LANCHOR98
 7518 036c 00000000 		.word	.LANCHOR99
 7519 0370 00000000 		.word	.LANCHOR100
 7520 0374 00000000 		.word	.LANCHOR88
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 261


 7521 0378 00000000 		.word	.LANCHOR103
 7522 037c 00000000 		.word	.LANCHOR104
 7523 0380 00000000 		.word	0
 7524 0384 00000000 		.word	.LANCHOR105
 7525 0388 00000000 		.word	.LANCHOR106
 7526 038c 00000000 		.word	.LANCHOR65
 7527 0390 00000000 		.word	.LANCHOR47
 7528 0394 00803B46 		.word	1178304512
 7529 0398 3333333F 		.word	1060320051
 7530 039c 00000000 		.word	.LANCHOR48
 7531 03a0 00000000 		.word	.LANCHOR35
 7532 03a4 00000000 		.word	.LANCHOR36
 7533 03a8 00000000 		.word	.LANCHOR49
 7534 03ac 00000000 		.word	.LANCHOR50
 7535 03b0 00000000 		.word	.LANCHOR37
 7536 03b4 00000000 		.word	.LANCHOR38
 7537 03b8 00004843 		.word	1128792064
 7538              	.L429:
 746:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 7539              		.loc 20 746 5 is_stmt 1 view .LVU2065
 746:Veno-Echo.cpp ****     HPF_R_post.SetDrive(defaultDrive);
 7540              		.loc 20 746 23 is_stmt 0 view .LVU2066
 7541 03bc 1FED020A 		vldr.32	s0, .L428+120
 7542 03c0 9348     		ldr	r0, .L431
 7543 03c2 FFF7FEFF 		bl	_ZN7daisysp3Svf7SetFreqEf
 7544              	.LVL436:
 747:Veno-Echo.cpp **** 
 7545              		.loc 20 747 5 is_stmt 1 view .LVU2067
 747:Veno-Echo.cpp **** 
 7546              		.loc 20 747 24 is_stmt 0 view .LVU2068
 7547 03c6 9FED930A 		vldr.32	s0, .L431+4
 7548 03ca 9148     		ldr	r0, .L431
 7549 03cc FFF7FEFF 		bl	_ZN7daisysp3Svf8SetDriveEf
 7550              	.LVL437:
 753:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 7551              		.loc 20 753 5 is_stmt 1 view .LVU2069
 753:Veno-Echo.cpp ****     lfo.SetWaveform(lfo.WAVE_TRI);
 7552              		.loc 20 753 13 is_stmt 0 view .LVU2070
 7553 03d0 9148     		ldr	r0, .L431+8
 7554 03d2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7555              	.LVL438:
 7556 03d6 F0EE407A 		vmov.f32	s15, s0
 7557              	.LVL439:
 7558              	.LBB1656:
 7559              	.LBI1656:
  42:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7560              		.loc 9 42 10 is_stmt 1 view .LVU2071
 7561              	.LBB1657:
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7562              		.loc 9 44 9 view .LVU2072
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7563              		.loc 9 44 20 is_stmt 0 view .LVU2073
 7564 03da 904F     		ldr	r7, .L431+12
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7565              		.loc 9 46 20 view .LVU2074
 7566 03dc 9FED900A 		vldr.32	s0, .L431+16
 7567              	.LVL440:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 262


  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7568              		.loc 9 45 27 view .LVU2075
 7569 03e0 88EEA77A 		vdiv.f32	s14, s17, s15
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7570              		.loc 9 49 34 view .LVU2076
 7571 03e4 3846     		mov	r0, r7
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 7572              		.loc 9 47 20 view .LVU2077
 7573 03e6 7C60     		str	r4, [r7, #4]	@ float
  44:../DaisySP/Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 7574              		.loc 9 44 20 view .LVU2078
 7575 03e8 C7ED037A 		vstr.32	s15, [r7, #12]
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7576              		.loc 9 45 9 is_stmt 1 view .LVU2079
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 7577              		.loc 9 48 20 is_stmt 0 view .LVU2080
 7578 03ec 87ED058A 		vstr.32	s16, [r7, #20]
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7579              		.loc 9 46 20 view .LVU2081
 7580 03f0 87ED020A 		vstr.32	s0, [r7, #8]
 7581 03f4 8B4C     		ldr	r4, .L431+20
 7582 03f6 8C4D     		ldr	r5, .L431+24
 7583 03f8 8C4E     		ldr	r6, .L431+28
  45:../DaisySP/Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 7584              		.loc 9 45 20 view .LVU2082
 7585 03fa 87ED047A 		vstr.32	s14, [r7, #16]
  46:../DaisySP/Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 7586              		.loc 9 46 9 is_stmt 1 view .LVU2083
  47:../DaisySP/Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 7587              		.loc 9 47 9 view .LVU2084
  48:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 7588              		.loc 9 48 9 view .LVU2085
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7589              		.loc 9 49 9 view .LVU2086
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7590              		.loc 9 49 34 is_stmt 0 view .LVU2087
 7591 03fe FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 7592              	.LVL441:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7593              		.loc 9 52 20 view .LVU2088
 7594 0402 40F20113 		movw	r3, #257
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7595              		.loc 9 49 34 view .LVU2089
 7596 0406 F0EE407A 		vmov.f32	s15, s0
 7597              	.LBE1657:
 7598              	.LBE1656:
 7599              	.LBB1660:
 7600              	.LBB1661:
 7601              		.loc 9 61 34 view .LVU2090
 7602 040a 3846     		mov	r0, r7
 7603              	.LBE1661:
 7604              	.LBE1660:
 7605              	.LBB1665:
 7606              	.LBB1666:
  62:../DaisySP/Source/Synthesis/oscillator.h ****     }
  63:../DaisySP/Source/Synthesis/oscillator.h **** 
  64:../DaisySP/Source/Synthesis/oscillator.h **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 263


  65:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  66:../DaisySP/Source/Synthesis/oscillator.h ****     */
  67:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
  68:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  69:../DaisySP/Source/Synthesis/oscillator.h ****     */
  70:../DaisySP/Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  71:../DaisySP/Source/Synthesis/oscillator.h ****     {
  72:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 7607              		.loc 9 72 19 view .LVU2091
 7608 040c 87F80080 		strb	r8, [r7]
 7609              	.LBE1666:
 7610              	.LBE1665:
 7611              	.LBB1668:
 7612              	.LBB1658:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7613              		.loc 9 52 20 view .LVU2092
 7614 0410 BB84     		strh	r3, [r7, #36]	@ movhi
 7615              	.LBE1658:
 7616              	.LBE1668:
 7617              	.LBB1669:
 7618              	.LBB1662:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7619              		.loc 9 61 34 view .LVU2093
 7620 0412 B0EE680A 		vmov.f32	s0, s17
 7621              	.LBE1662:
 7622              	.LBE1669:
 7623              	.LBB1670:
 7624              	.LBB1659:
  49:../DaisySP/Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 7625              		.loc 9 49 20 view .LVU2094
 7626 0416 C7ED067A 		vstr.32	s15, [r7, #24]
  50:../DaisySP/Source/Synthesis/oscillator.h ****         eoc_       = true;
 7627              		.loc 9 50 9 is_stmt 1 view .LVU2095
  51:../DaisySP/Source/Synthesis/oscillator.h ****         eor_       = true;
 7628              		.loc 9 51 9 view .LVU2096
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7629              		.loc 9 52 9 view .LVU2097
 7630              	.LVL442:
  52:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7631              		.loc 9 52 9 is_stmt 0 view .LVU2098
 7632              	.LBE1659:
 7633              	.LBE1670:
 754:Veno-Echo.cpp ****     lfo.SetFreq(1.0f);
 7634              		.loc 20 754 5 is_stmt 1 view .LVU2099
 7635              	.LBB1671:
 7636              	.LBI1665:
  70:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7637              		.loc 9 70 17 view .LVU2100
 7638              	.LBB1667:
 7639              		.loc 9 72 9 view .LVU2101
 7640              		.loc 9 72 9 is_stmt 0 view .LVU2102
 7641              	.LBE1667:
 7642              	.LBE1671:
 755:Veno-Echo.cpp ****     lfo.SetAmp(1.0f);
 7643              		.loc 20 755 5 is_stmt 1 view .LVU2103
 7644              	.LBB1672:
 7645              	.LBI1660:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 264


  58:../DaisySP/Source/Synthesis/oscillator.h ****     {
 7646              		.loc 9 58 17 view .LVU2104
 7647              	.LBB1663:
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 7648              		.loc 9 60 9 view .LVU2105
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7649              		.loc 9 61 9 view .LVU2106
  60:../DaisySP/Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 7650              		.loc 9 60 20 is_stmt 0 view .LVU2107
 7651 041a C7ED028A 		vstr.32	s17, [r7, #8]
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7652              		.loc 9 61 34 view .LVU2108
 7653 041e FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 7654              	.LVL443:
 7655 0422 F0EE407A 		vmov.f32	s15, s0
 7656              	.LBE1663:
 7657              	.LBE1672:
 758:Veno-Echo.cpp **** 
 7658              		.loc 20 758 19 view .LVU2109
 7659 0426 824A     		ldr	r2, .L431+32
 7660 0428 44F62061 		movw	r1, #20000
 7661 042c B7EE040A 		vmov.f32	s0, #1.25e+0
 7662 0430 8048     		ldr	r0, .L431+36
 7663              	.LBB1673:
 7664              	.LBB1674:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7665              		.loc 9 67 46 view .LVU2110
 7666 0432 C7ED018A 		vstr.32	s17, [r7, #4]
 7667              	.LBE1674:
 7668              	.LBE1673:
 7669              	.LBB1676:
 7670              	.LBB1664:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7671              		.loc 9 61 20 view .LVU2111
 7672 0436 C7ED067A 		vstr.32	s15, [r7, #24]
 7673              	.LVL444:
  61:../DaisySP/Source/Synthesis/oscillator.h ****     }
 7674              		.loc 9 61 20 view .LVU2112
 7675              	.LBE1664:
 7676              	.LBE1676:
 756:Veno-Echo.cpp **** 
 7677              		.loc 20 756 5 is_stmt 1 view .LVU2113
 7678              	.LBB1677:
 7679              	.LBI1673:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7680              		.loc 9 67 17 view .LVU2114
 7681              	.LBB1675:
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7682              		.loc 9 67 41 view .LVU2115
  67:../DaisySP/Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 7683              		.loc 9 67 41 is_stmt 0 view .LVU2116
 7684              	.LBE1675:
 7685              	.LBE1677:
 758:Veno-Echo.cpp **** 
 7686              		.loc 20 758 5 is_stmt 1 view .LVU2117
 758:Veno-Echo.cpp **** 
 7687              		.loc 20 758 19 is_stmt 0 view .LVU2118
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 265


 7688 043a FFF7FEFF 		bl	_ZN8Taptempo4initEmmf
 7689              	.LVL445:
 762:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7690              		.loc 20 762 5 is_stmt 1 view .LVU2119
 762:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7691              		.loc 20 762 23 is_stmt 0 view .LVU2120
 7692 043e 1820     		movs	r0, #24
 773:Veno-Echo.cpp **** 
 7693              		.loc 20 773 17 view .LVU2121
 7694 0440 1CAF     		add	r7, sp, #112
 762:Veno-Echo.cpp ****     tempoLED_BASE.setTempo(BaseTempo.getTapFreq());
 7695              		.loc 20 762 23 view .LVU2122
 7696 0442 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7697              	.LVL446:
 7698 0446 0346     		mov	r3, r0	@ movhi
 7699 0448 7348     		ldr	r0, .L431+8
 7700 044a ADF84030 		strh	r3, [sp, #64]	@ movhi
 7701 044e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 7702              	.LVL447:
 7703 0452 1099     		ldr	r1, [sp, #64]
 7704 0454 7848     		ldr	r0, .L431+40
 7705 0456 FFF7FEFF 		bl	_ZN8TempoLED4initE12dsy_gpio_pinf
 7706              	.LVL448:
 763:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7707              		.loc 20 763 5 is_stmt 1 view .LVU2123
 763:Veno-Echo.cpp ****     tempoLED_BASE.resetPhase();
 7708              		.loc 20 763 27 is_stmt 0 view .LVU2124
 7709 045a 7648     		ldr	r0, .L431+36
 7710 045c FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 7711              	.LVL449:
 7712 0460 7548     		ldr	r0, .L431+40
 7713 0462 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 7714              	.LVL450:
 764:Veno-Echo.cpp **** 
 7715              		.loc 20 764 5 is_stmt 1 view .LVU2125
 764:Veno-Echo.cpp **** 
 7716              		.loc 20 764 29 is_stmt 0 view .LVU2126
 7717 0466 7448     		ldr	r0, .L431+40
 7718 0468 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 7719              	.LVL451:
 768:Veno-Echo.cpp ****     //ApplySettings(defaultAltControls);
 7720              		.loc 20 768 5 is_stmt 1 view .LVU2127
 768:Veno-Echo.cpp ****     //ApplySettings(defaultAltControls);
 7721              		.loc 20 768 41 is_stmt 0 view .LVU2128
 7722 046c 1CA8     		add	r0, sp, #112
 7723 046e FFF7FEFF 		bl	_Z12LoadSettingsv
 7724              	.LVL452:
 772:Veno-Echo.cpp ****     AltControls = SavedSettings;
 7725              		.loc 20 772 5 is_stmt 1 view .LVU2129
 772:Veno-Echo.cpp ****     AltControls = SavedSettings;
 7726              		.loc 20 772 18 is_stmt 0 view .LVU2130
 7727 0472 1CA8     		add	r0, sp, #112
 7728 0474 FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 7729              	.LVL453:
 773:Veno-Echo.cpp **** 
 7730              		.loc 20 773 5 is_stmt 1 view .LVU2131
 773:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 266


 7731              		.loc 20 773 17 is_stmt 0 view .LVU2132
 7732 0478 DFF8C8C1 		ldr	ip, .L431+52
 7733 047c 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 7734 047e ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 7735 0482 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 7736 0484 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 7737 0488 97E80700 		ldm	r7, {r0, r1, r2}
 7738 048c 8CE80700 		stm	ip, {r0, r1, r2}
 778:Veno-Echo.cpp **** 
 7739              		.loc 20 778 5 is_stmt 1 view .LVU2133
 780:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 7740              		.loc 20 780 5 view .LVU2134
 780:Veno-Echo.cpp ****     adcConfig[1].InitSingle(hw.GetPin(16));
 7741              		.loc 20 780 28 is_stmt 0 view .LVU2135
 7742 0490 0F20     		movs	r0, #15
 7743 0492 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7744              	.LVL454:
 7745 0496 0346     		mov	r3, r0	@ movhi
 7746 0498 32A8     		add	r0, sp, #200
 7747 049a ADF84430 		strh	r3, [sp, #68]	@ movhi
 7748 049e 1199     		ldr	r1, [sp, #68]
 7749 04a0 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7750              	.LVL455:
 781:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 7751              		.loc 20 781 5 is_stmt 1 view .LVU2136
 781:Veno-Echo.cpp ****     adcConfig[2].InitSingle(hw.GetPin(17));
 7752              		.loc 20 781 28 is_stmt 0 view .LVU2137
 7753 04a4 1020     		movs	r0, #16
 7754 04a6 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7755              	.LVL456:
 7756 04aa 0346     		mov	r3, r0	@ movhi
 7757 04ac 0DF1D900 		add	r0, sp, #217
 7758 04b0 ADF84830 		strh	r3, [sp, #72]	@ movhi
 7759 04b4 1299     		ldr	r1, [sp, #72]
 7760 04b6 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7761              	.LVL457:
 782:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 7762              		.loc 20 782 5 is_stmt 1 view .LVU2138
 782:Veno-Echo.cpp ****     adcConfig[3].InitSingle(hw.GetPin(18));
 7763              		.loc 20 782 28 is_stmt 0 view .LVU2139
 7764 04ba 1120     		movs	r0, #17
 7765 04bc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7766              	.LVL458:
 7767 04c0 0346     		mov	r3, r0	@ movhi
 7768 04c2 0DF1EA00 		add	r0, sp, #234
 7769 04c6 ADF84C30 		strh	r3, [sp, #76]	@ movhi
 7770 04ca 1399     		ldr	r1, [sp, #76]
 7771 04cc FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7772              	.LVL459:
 783:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 7773              		.loc 20 783 5 is_stmt 1 view .LVU2140
 783:Veno-Echo.cpp ****     adcConfig[4].InitSingle(hw.GetPin(19));
 7774              		.loc 20 783 28 is_stmt 0 view .LVU2141
 7775 04d0 1220     		movs	r0, #18
 7776 04d2 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7777              	.LVL460:
 7778 04d6 0346     		mov	r3, r0	@ movhi
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 267


 7779 04d8 0DF1FB00 		add	r0, sp, #251
 7780 04dc ADF85030 		strh	r3, [sp, #80]	@ movhi
 7781 04e0 1499     		ldr	r1, [sp, #80]
 7782 04e2 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7783              	.LVL461:
 784:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 7784              		.loc 20 784 5 is_stmt 1 view .LVU2142
 784:Veno-Echo.cpp ****     adcConfig[5].InitSingle(hw.GetPin(20));
 7785              		.loc 20 784 28 is_stmt 0 view .LVU2143
 7786 04e6 1320     		movs	r0, #19
 7787 04e8 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7788              	.LVL462:
 7789 04ec 0346     		mov	r3, r0	@ movhi
 7790 04ee 43A8     		add	r0, sp, #268
 7791 04f0 ADF85430 		strh	r3, [sp, #84]	@ movhi
 7792 04f4 1599     		ldr	r1, [sp, #84]
 7793 04f6 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7794              	.LVL463:
 785:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 7795              		.loc 20 785 5 is_stmt 1 view .LVU2144
 785:Veno-Echo.cpp ****     //adc[6].InitSingle(hw.GetPin(21));
 7796              		.loc 20 785 28 is_stmt 0 view .LVU2145
 7797 04fa 1420     		movs	r0, #20
 7798 04fc FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7799              	.LVL464:
 7800 0500 0346     		mov	r3, r0	@ movhi
 7801 0502 0DF21D10 		addw	r0, sp, #285
 7802 0506 ADF85830 		strh	r3, [sp, #88]	@ movhi
 7803 050a 1699     		ldr	r1, [sp, #88]
 7804 050c FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7805              	.LVL465:
 787:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 7806              		.loc 20 787 5 is_stmt 1 view .LVU2146
 787:Veno-Echo.cpp ****     adcConfig[7].InitMux(hw.GetPin(25),8,hw.GetPin(14),hw.GetPin(13),hw.GetPin(12));
 7807              		.loc 20 787 28 is_stmt 0 view .LVU2147
 7808 0510 1620     		movs	r0, #22
 7809 0512 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7810              	.LVL466:
 7811 0516 0346     		mov	r3, r0	@ movhi
 7812 0518 0DF59770 		add	r0, sp, #302
 7813 051c ADF85C30 		strh	r3, [sp, #92]	@ movhi
 7814 0520 1799     		ldr	r1, [sp, #92]
 7815 0522 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 7816              	.LVL467:
 788:Veno-Echo.cpp **** 
 7817              		.loc 20 788 5 is_stmt 1 view .LVU2148
 788:Veno-Echo.cpp **** 
 7818              		.loc 20 788 25 is_stmt 0 view .LVU2149
 7819 0526 1920     		movs	r0, #25
 7820 0528 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7821              	.LVL468:
 7822 052c 0346     		mov	r3, r0	@ movhi
 7823 052e 0E20     		movs	r0, #14
 7824 0530 ADF86030 		strh	r3, [sp, #96]	@ movhi
 7825 0534 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7826              	.LVL469:
 7827 0538 0346     		mov	r3, r0	@ movhi
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 268


 7828 053a 0D20     		movs	r0, #13
 7829 053c ADF86430 		strh	r3, [sp, #100]	@ movhi
 7830 0540 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7831              	.LVL470:
 7832 0544 0346     		mov	r3, r0	@ movhi
 7833 0546 0C20     		movs	r0, #12
 7834 0548 ADF86830 		strh	r3, [sp, #104]	@ movhi
 7835 054c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 7836              	.LVL471:
 7837 0550 BDF86810 		ldrh	r1, [sp, #104]
 7838 0554 0822     		movs	r2, #8
 7839 0556 199B     		ldr	r3, [sp, #100]
 7840 0558 ADF80010 		strh	r1, [sp]	@ movhi
 7841 055c ADF80400 		strh	r0, [sp, #4]	@ movhi
 7842 0560 1899     		ldr	r1, [sp, #96]
 7843 0562 ADF86C00 		strh	r0, [sp, #108]	@ movhi
 7844 0566 0DF23F10 		addw	r0, sp, #319
 7845 056a FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
 7846              	.LVL472:
 791:Veno-Echo.cpp ****     hw.adc.Start();
 7847              		.loc 20 791 5 is_stmt 1 view .LVU2150
 791:Veno-Echo.cpp ****     hw.adc.Start();
 7848              		.loc 20 791 16 is_stmt 0 view .LVU2151
 7849 056e 32A9     		add	r1, sp, #200
 7850 0570 0623     		movs	r3, #6
 7851 0572 0822     		movs	r2, #8
 7852 0574 3148     		ldr	r0, .L431+44
 7853 0576 FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 7854              	.LVL473:
 792:Veno-Echo.cpp **** 
 7855              		.loc 20 792 5 is_stmt 1 view .LVU2152
 792:Veno-Echo.cpp **** 
 7856              		.loc 20 792 17 is_stmt 0 view .LVU2153
 7857 057a 3048     		ldr	r0, .L431+44
 7858 057c FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 7859              	.LVL474:
 795:Veno-Echo.cpp ****     // start audio callback
 7860              		.loc 20 795 5 is_stmt 1 view .LVU2154
 795:Veno-Echo.cpp ****     // start audio callback
 7861              		.loc 20 795 25 is_stmt 0 view .LVU2155
 7862 0580 4146     		mov	r1, r8
 7863 0582 2548     		ldr	r0, .L431+8
 7864 0584 FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 7865              	.LVL475:
 797:Veno-Echo.cpp **** 
 7866              		.loc 20 797 5 is_stmt 1 view .LVU2156
 797:Veno-Echo.cpp **** 
 7867              		.loc 20 797 18 is_stmt 0 view .LVU2157
 7868 0588 2D49     		ldr	r1, .L431+48
 7869 058a 2348     		ldr	r0, .L431+8
 7870 058c FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
 7871              	.LVL476:
 7872              	.L419:
 801:Veno-Echo.cpp ****      {  
 7873              		.loc 20 801 6 is_stmt 1 view .LVU2158
 7874              	.LBB1678:
 804:Veno-Echo.cpp ****         //static bool SaveWaitFlag{};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 269


 7875              		.loc 20 804 9 view .LVU2159
 807:Veno-Echo.cpp ****         {
 7876              		.loc 20 807 9 view .LVU2160
 7877              	.LBB1679:
 7878              	.LBB1680:
 7879              	.LBI1680:
  82:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  83:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     bool
  84:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator=(bool __i) volatile noexcept
  85:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
  86:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
  87:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     operator bool() const noexcept
 7880              		.loc 23 87 5 view .LVU2161
 7881              	.LBE1680:
 7882              	.LBE1679:
 7883              	.LBE1678:
  88:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.load(); }
 7884              		.loc 23 88 7 view .LVU2162
 7885              	.LBB1711:
 7886              	.LBB1708:
 7887              	.LBB1686:
 7888              	.LBB1681:
 7889              	.LBI1681:
 398:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 399:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 400:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE void
 401:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       store(__int_type __i,
 402:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	    memory_order __m = memory_order_seq_cst) volatile noexcept
 403:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 404:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 405:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acquire);
 406:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 407:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_consume);
 408:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 409:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__atomic_store_n(&_M_i, __i, int(__m));
 410:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 411:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 412:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       _GLIBCXX_ALWAYS_INLINE __int_type
 413:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       load(memory_order __m = memory_order_seq_cst) const noexcept
 7890              		.loc 22 413 7 view .LVU2163
 7891              		.loc 22 413 7 is_stmt 0 view .LVU2164
 7892              	.LBE1681:
 7893              	.LBE1686:
 809:Veno-Echo.cpp ****             saveState = WAITING;    //set flag - start waiting
 7894              		.loc 20 809 13 is_stmt 1 view .LVU2165
 7895              	.LBB1687:
 7896              	.LBI1687:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 7897              		.loc 23 80 5 view .LVU2166
 7898              	.LBE1687:
 7899              	.LBE1708:
 7900              	.LBE1711:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 7901              		.loc 23 81 7 view .LVU2167
 7902              	.LBB1712:
 7903              	.LBB1709:
 7904              	.LBB1696:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 270


 7905              	.LBB1688:
 7906              	.LBI1688:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 7907              		.loc 22 288 7 view .LVU2168
 7908              	.LBB1689:
 7909              	.LBI1689:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 7910              		.loc 22 390 7 view .LVU2169
 7911              	.LBE1689:
 7912              	.LBE1688:
 7913              	.LBE1696:
 7914              	.LBB1697:
 816:Veno-Echo.cpp ****            {
 7915              		.loc 20 816 12 view .LVU2170
 7916              	.LBE1697:
 7917              	.LBB1702:
 7918              	.LBB1684:
 7919              	.LBB1682:
 414:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 415:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	memory_order __b = __m & __memory_order_mask;
 416:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_release);
 417:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	__glibcxx_assert(__b != memory_order_acq_rel);
 418:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 
 419:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h **** 	return __atomic_load_n(&_M_i, int(__m));
 7920              		.loc 22 419 24 is_stmt 0 view .LVU2171
 7921 0590 BFF35B8F 		dmb	ish
 7922 0594 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 7923              	.LBE1682:
 7924              	.LBE1684:
 7925              	.LBE1702:
 7926              	.LBB1703:
 7927              	.LBB1694:
 7928              	.LBB1692:
 7929              	.LBB1690:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 7930              		.loc 22 397 18 view .LVU2172
 7931 0596 0021     		movs	r1, #0
 7932              	.LBE1690:
 7933              	.LBE1692:
 7934              	.LBE1694:
 7935              	.LBE1703:
 810:Veno-Echo.cpp ****             saveTimer = System::GetNow();   //reset timer
 7936              		.loc 20 810 23 view .LVU2173
 7937 0598 0122     		movs	r2, #1
 7938              	.LBB1704:
 7939              	.LBB1685:
 7940              	.LBB1683:
 7941              		.loc 22 419 24 view .LVU2174
 7942 059a BFF35B8F 		dmb	ish
 7943              	.LBE1683:
 7944              	.LBE1685:
 7945              	.LBE1704:
 807:Veno-Echo.cpp ****         {
 7946              		.loc 20 807 9 view .LVU2175
 7947 059e 4BB1     		cbz	r3, .L420
 7948              	.LBB1705:
 7949              	.LBB1695:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 271


 7950              	.LBB1693:
 7951              	.LBB1691:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 7952              		.loc 22 397 18 view .LVU2176
 7953 05a0 BFF35B8F 		dmb	ish
 7954 05a4 2170     		strb	r1, [r4]
 7955 05a6 BFF35B8F 		dmb	ish
 7956              	.LVL477:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 7957              		.loc 22 397 18 view .LVU2177
 7958              	.LBE1691:
 7959              	.LBE1693:
 7960              	.LBE1695:
 7961              	.LBE1705:
 810:Veno-Echo.cpp ****             saveTimer = System::GetNow();   //reset timer
 7962              		.loc 20 810 13 is_stmt 1 view .LVU2178
 810:Veno-Echo.cpp ****             saveTimer = System::GetNow();   //reset timer
 7963              		.loc 20 810 23 is_stmt 0 view .LVU2179
 7964 05aa 2A70     		strb	r2, [r5]
 811:Veno-Echo.cpp ****         }
 7965              		.loc 20 811 13 is_stmt 1 view .LVU2180
 811:Veno-Echo.cpp ****         }
 7966              		.loc 20 811 39 is_stmt 0 view .LVU2181
 7967 05ac FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7968              	.LVL478:
 811:Veno-Echo.cpp ****         }
 7969              		.loc 20 811 23 view .LVU2182
 7970 05b0 3060     		str	r0, [r6]
 7971 05b2 EDE7     		b	.L419
 7972              	.LVL479:
 7973              	.L420:
 7974              	.LBB1706:
 7975              	.LBB1698:
 816:Veno-Echo.cpp ****            {
 7976              		.loc 20 816 25 view .LVU2183
 7977 05b4 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 816:Veno-Echo.cpp ****            {
 7978              		.loc 20 816 12 view .LVU2184
 7979 05b6 012B     		cmp	r3, #1
 7980 05b8 0BD0     		beq	.L427
 7981              	.L422:
 7982              	.LBE1698:
 832:Veno-Echo.cpp ****            {
 7983              		.loc 20 832 12 is_stmt 1 view .LVU2185
 7984 05ba 022B     		cmp	r3, #2
 7985 05bc E8D1     		bne	.L419
 834:Veno-Echo.cpp ****             {
 7986              		.loc 20 834 13 view .LVU2186
 834:Veno-Echo.cpp ****             {
 7987              		.loc 20 834 30 is_stmt 0 view .LVU2187
 7988 05be FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 7989              	.LVL480:
 836:Veno-Echo.cpp ****             }
 7990              		.loc 20 836 21 is_stmt 1 view .LVU2188
 834:Veno-Echo.cpp ****             {
 7991              		.loc 20 834 33 is_stmt 0 view .LVU2189
 7992 05c2 3368     		ldr	r3, [r6]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 272


 836:Veno-Echo.cpp ****             }
 7993              		.loc 20 836 31 view .LVU2190
 7994 05c4 0022     		movs	r2, #0
 834:Veno-Echo.cpp ****             {
 7995              		.loc 20 834 33 view .LVU2191
 7996 05c6 C01A     		subs	r0, r0, r3
 834:Veno-Echo.cpp ****             {
 7997              		.loc 20 834 13 view .LVU2192
 7998 05c8 B0F5966F 		cmp	r0, #1200
 7999 05cc E0D9     		bls	.L419
 836:Veno-Echo.cpp ****             }
 8000              		.loc 20 836 31 view .LVU2193
 8001 05ce 2A70     		strb	r2, [r5]
 8002 05d0 DEE7     		b	.L419
 8003              	.L427:
 8004              	.LBE1706:
 8005              	.LBE1709:
 8006              	.LBE1712:
 818:Veno-Echo.cpp ****                 {
 8007              		.loc 20 818 16 is_stmt 1 view .LVU2194
 8008              	.LBB1713:
 8009              	.LBB1710:
 8010              	.LBB1707:
 8011              	.LBB1701:
 8012              	.LBB1699:
 818:Veno-Echo.cpp ****                 {
 8013              		.loc 20 818 33 is_stmt 0 view .LVU2195
 8014 05d2 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8015              	.LVL481:
 818:Veno-Echo.cpp ****                 {
 8016              		.loc 20 818 36 view .LVU2196
 8017 05d6 3368     		ldr	r3, [r6]
 8018 05d8 C01A     		subs	r0, r0, r3
 818:Veno-Echo.cpp ****                 {
 8019              		.loc 20 818 16 view .LVU2197
 8020 05da B0F57A7F 		cmp	r0, #1000
 8021 05de 01D8     		bhi	.L423
 8022              	.L426:
 8023 05e0 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 8024 05e2 EAE7     		b	.L422
 8025              	.L423:
 8026              	.LBB1700:
 820:Veno-Echo.cpp ****                     
 8027              		.loc 20 820 21 is_stmt 1 view .LVU2198
 822:Veno-Echo.cpp ****                     if (SaveSettings(ToSave) == QSPIHandle::Result::OK)  //save settings
 8028              		.loc 20 822 30 is_stmt 0 view .LVU2199
 8029 05e4 DFF85CC0 		ldr	ip, .L431+52
 8030 05e8 27AF     		add	r7, sp, #156
 820:Veno-Echo.cpp ****                     
 8031              		.loc 20 820 31 view .LVU2200
 8032 05ea 4FF0020E 		mov	lr, #2
 822:Veno-Echo.cpp ****                     if (SaveSettings(ToSave) == QSPIHandle::Result::OK)  //save settings
 8033              		.loc 20 822 30 view .LVU2201
 8034 05ee BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 8035 05f2 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 8036 05f4 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 8037 05f8 0FC7     		stmia	r7!, {r0, r1, r2, r3}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 273


 8038 05fa 9CE80700 		ldm	ip, {r0, r1, r2}
 8039 05fe 87E80700 		stm	r7, {r0, r1, r2}
 823:Veno-Echo.cpp ****                     {
 8040              		.loc 20 823 37 view .LVU2202
 8041 0602 27A8     		add	r0, sp, #156
 820:Veno-Echo.cpp ****                     
 8042              		.loc 20 820 31 view .LVU2203
 8043 0604 85F800E0 		strb	lr, [r5]
 822:Veno-Echo.cpp ****                     if (SaveSettings(ToSave) == QSPIHandle::Result::OK)  //save settings
 8044              		.loc 20 822 21 is_stmt 1 view .LVU2204
 823:Veno-Echo.cpp ****                     {
 8045              		.loc 20 823 21 view .LVU2205
 823:Veno-Echo.cpp ****                     {
 8046              		.loc 20 823 37 is_stmt 0 view .LVU2206
 8047 0608 FFF7FEFF 		bl	_Z12SaveSettingsRK8Settings
 8048              	.LVL482:
 8049 060c E8E7     		b	.L426
 8050              	.L432:
 8051 060e 00BF     		.align	2
 8052              	.L431:
 8053 0610 00000000 		.word	.LANCHOR38
 8054 0614 3333333F 		.word	1060320051
 8055 0618 00000000 		.word	.LANCHOR4
 8056 061c 00000000 		.word	.LANCHOR76
 8057 0620 0000C842 		.word	1120403456
 8058 0624 00000000 		.word	.LANCHOR16
 8059 0628 00000000 		.word	.LANCHOR107
 8060 062c 00000000 		.word	.LANCHOR108
 8061 0630 808D5B00 		.word	6000000
 8062 0634 00000000 		.word	.LANCHOR26
 8063 0638 00000000 		.word	.LANCHOR89
 8064 063c 18000000 		.word	.LANCHOR4+24
 8065 0640 00000000 		.word	_ZL13AudioCallbackPKPKfPPfj
 8066 0644 00000000 		.word	.LANCHOR15
 8067              	.LBE1700:
 8068              	.LBE1699:
 8069              	.LBE1701:
 8070              	.LBE1707:
 8071              	.LBE1710:
 8072              	.LBE1713:
 8073              		.cfi_endproc
 8074              	.LFE4772:
 8076              		.section	.text._Z13TurnOnAllLEDsv,"ax",%progbits
 8077              		.align	1
 8078              		.p2align 2,,3
 8079              		.global	_Z13TurnOnAllLEDsv
 8080              		.syntax unified
 8081              		.thumb
 8082              		.thumb_func
 8083              		.fpu fpv5-d16
 8085              	_Z13TurnOnAllLEDsv:
 8086              	.LFB4795:
1964:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 8087              		.loc 20 1964 1 is_stmt 1 view -0
 8088              		.cfi_startproc
 8089              		@ args = 0, pretend = 0, frame = 0
 8090              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 274


1965:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 8091              		.loc 20 1965 5 view .LVU2208
1964:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(1.0f);
 8092              		.loc 20 1964 1 is_stmt 0 view .LVU2209
 8093 0000 08B5     		push	{r3, lr}
 8094              		.cfi_def_cfa_offset 8
 8095              		.cfi_offset 3, -8
 8096              		.cfi_offset 14, -4
1965:Veno-Echo.cpp ****     delayL.tempoled.LED_set(1.0f);
 8097              		.loc 20 1965 26 view .LVU2210
 8098 0002 B7EE000A 		vmov.f32	s0, #1.0e+0
 8099 0006 1148     		ldr	r0, .L435
 8100 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8101              	.LVL483:
1966:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 8102              		.loc 20 1966 5 is_stmt 1 view .LVU2211
1966:Veno-Echo.cpp ****     delayR.tempoled.LED_set(1.0f);
 8103              		.loc 20 1966 28 is_stmt 0 view .LVU2212
 8104 000c B7EE000A 		vmov.f32	s0, #1.0e+0
 8105 0010 0F48     		ldr	r0, .L435+4
 8106 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8107              	.LVL484:
1967:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 8108              		.loc 20 1967 5 is_stmt 1 view .LVU2213
1967:Veno-Echo.cpp ****     Rev_L_sw.LED_set(1.0f);
 8109              		.loc 20 1967 28 is_stmt 0 view .LVU2214
 8110 0016 B7EE000A 		vmov.f32	s0, #1.0e+0
 8111 001a 0E48     		ldr	r0, .L435+8
 8112 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8113              	.LVL485:
1968:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 8114              		.loc 20 1968 5 is_stmt 1 view .LVU2215
1968:Veno-Echo.cpp ****     Rev_R_sw.LED_set(1.0f);
 8115              		.loc 20 1968 21 is_stmt 0 view .LVU2216
 8116 0020 B7EE000A 		vmov.f32	s0, #1.0e+0
 8117 0024 0C48     		ldr	r0, .L435+12
 8118 0026 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8119              	.LVL486:
1969:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 8120              		.loc 20 1969 5 is_stmt 1 view .LVU2217
1969:Veno-Echo.cpp ****     LPF_sw.LED_set(1.0f);
 8121              		.loc 20 1969 21 is_stmt 0 view .LVU2218
 8122 002a B7EE000A 		vmov.f32	s0, #1.0e+0
 8123 002e 0B48     		ldr	r0, .L435+16
 8124 0030 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8125              	.LVL487:
1970:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 8126              		.loc 20 1970 5 is_stmt 1 view .LVU2219
1970:Veno-Echo.cpp ****     HPF_sw.LED_set(1.0f);
 8127              		.loc 20 1970 19 is_stmt 0 view .LVU2220
 8128 0034 B7EE000A 		vmov.f32	s0, #1.0e+0
 8129 0038 0948     		ldr	r0, .L435+20
 8130 003a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8131              	.LVL488:
1971:Veno-Echo.cpp **** }
 8132              		.loc 20 1971 5 is_stmt 1 view .LVU2221
1971:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 275


 8133              		.loc 20 1971 19 is_stmt 0 view .LVU2222
 8134 003e B7EE000A 		vmov.f32	s0, #1.0e+0
 8135 0042 0848     		ldr	r0, .L435+24
1972:Veno-Echo.cpp **** 
 8136              		.loc 20 1972 1 view .LVU2223
 8137 0044 BDE80840 		pop	{r3, lr}
 8138              		.cfi_restore 14
 8139              		.cfi_restore 3
 8140              		.cfi_def_cfa_offset 0
1971:Veno-Echo.cpp **** }
 8141              		.loc 20 1971 19 view .LVU2224
 8142 0048 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 8143              	.LVL489:
 8144              	.L436:
 8145              		.align	2
 8146              	.L435:
 8147 004c 00000000 		.word	.LANCHOR89
 8148 0050 04000000 		.word	.LANCHOR0+4
 8149 0054 04000000 		.word	.LANCHOR1+4
 8150 0058 00000000 		.word	.LANCHOR92
 8151 005c 00000000 		.word	.LANCHOR93
 8152 0060 00000000 		.word	.LANCHOR94
 8153 0064 00000000 		.word	.LANCHOR95
 8154              		.cfi_endproc
 8155              	.LFE4795:
 8157              		.section	.text._Z12ResetAllLEDsv,"ax",%progbits
 8158              		.align	1
 8159              		.p2align 2,,3
 8160              		.global	_Z12ResetAllLEDsv
 8161              		.syntax unified
 8162              		.thumb
 8163              		.thumb_func
 8164              		.fpu fpv5-d16
 8166              	_Z12ResetAllLEDsv:
 8167              	.LFB4796:
1975:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 8168              		.loc 20 1975 1 is_stmt 1 view -0
 8169              		.cfi_startproc
 8170              		@ args = 0, pretend = 0, frame = 0
 8171              		@ frame_needed = 0, uses_anonymous_args = 0
1976:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 8172              		.loc 20 1976 5 view .LVU2226
1975:Veno-Echo.cpp ****     tempoLED_BASE.LED_set(0.0f);
 8173              		.loc 20 1975 1 is_stmt 0 view .LVU2227
 8174 0000 08B5     		push	{r3, lr}
 8175              		.cfi_def_cfa_offset 8
 8176              		.cfi_offset 3, -8
 8177              		.cfi_offset 14, -4
1976:Veno-Echo.cpp ****     delayL.tempoled.LED_set(0.0f);
 8178              		.loc 20 1976 26 view .LVU2228
 8179 0002 9FED1E0A 		vldr.32	s0, .L444
 8180 0006 1E48     		ldr	r0, .L444+4
 8181 0008 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8182              	.LVL490:
1977:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
 8183              		.loc 20 1977 5 is_stmt 1 view .LVU2229
1977:Veno-Echo.cpp ****     delayR.tempoled.LED_set(0.0f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 276


 8184              		.loc 20 1977 28 is_stmt 0 view .LVU2230
 8185 000c 9FED1B0A 		vldr.32	s0, .L444
 8186 0010 1C48     		ldr	r0, .L444+8
 8187 0012 FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8188              	.LVL491:
1978:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 8189              		.loc 20 1978 5 is_stmt 1 view .LVU2231
1978:Veno-Echo.cpp ****     if(!Rev_L_sw.getState())
 8190              		.loc 20 1978 28 is_stmt 0 view .LVU2232
 8191 0016 1C48     		ldr	r0, .L444+12
 8192 0018 9FED180A 		vldr.32	s0, .L444
 8193 001c FFF7FEFF 		bl	_ZN8TempoLED7LED_setEf
 8194              	.LVL492:
1979:Veno-Echo.cpp ****     {
 8195              		.loc 20 1979 5 is_stmt 1 view .LVU2233
1979:Veno-Echo.cpp ****     {
 8196              		.loc 20 1979 26 is_stmt 0 view .LVU2234
 8197 0020 1A48     		ldr	r0, .L444+16
 8198 0022 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8199              	.LVL493:
1979:Veno-Echo.cpp ****     {
 8200              		.loc 20 1979 5 view .LVU2235
 8201 0026 C8B9     		cbnz	r0, .L438
1981:Veno-Echo.cpp ****     }
 8202              		.loc 20 1981 9 is_stmt 1 view .LVU2236
1981:Veno-Echo.cpp ****     }
 8203              		.loc 20 1981 25 is_stmt 0 view .LVU2237
 8204 0028 1848     		ldr	r0, .L444+16
 8205 002a 9FED140A 		vldr.32	s0, .L444
 8206 002e FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8207              	.LVL494:
1988:Veno-Echo.cpp ****     {
 8208              		.loc 20 1988 5 is_stmt 1 view .LVU2238
1988:Veno-Echo.cpp ****     {
 8209              		.loc 20 1988 26 is_stmt 0 view .LVU2239
 8210 0032 1748     		ldr	r0, .L444+20
 8211 0034 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8212              	.LVL495:
1988:Veno-Echo.cpp ****     {
 8213              		.loc 20 1988 5 view .LVU2240
 8214 0038 D0B9     		cbnz	r0, .L440
 8215              	.L443:
1990:Veno-Echo.cpp ****     }
 8216              		.loc 20 1990 9 is_stmt 1 view .LVU2241
1990:Veno-Echo.cpp ****     }
 8217              		.loc 20 1990 25 is_stmt 0 view .LVU2242
 8218 003a 9FED100A 		vldr.32	s0, .L444
 8219 003e 1448     		ldr	r0, .L444+20
 8220 0040 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8221              	.LVL496:
 8222              	.L441:
1997:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 8223              		.loc 20 1997 5 is_stmt 1 view .LVU2243
1997:Veno-Echo.cpp ****     HPF_sw.LED_set(0.0f);
 8224              		.loc 20 1997 19 is_stmt 0 view .LVU2244
 8225 0044 9FED0D0A 		vldr.32	s0, .L444
 8226 0048 1248     		ldr	r0, .L444+24
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 277


 8227 004a FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8228              	.LVL497:
1998:Veno-Echo.cpp **** }
 8229              		.loc 20 1998 5 is_stmt 1 view .LVU2245
1998:Veno-Echo.cpp **** }
 8230              		.loc 20 1998 19 is_stmt 0 view .LVU2246
 8231 004e 9FED0B0A 		vldr.32	s0, .L444
 8232 0052 1148     		ldr	r0, .L444+28
1999:Veno-Echo.cpp **** 
 8233              		.loc 20 1999 1 view .LVU2247
 8234 0054 BDE80840 		pop	{r3, lr}
 8235              		.cfi_remember_state
 8236              		.cfi_restore 14
 8237              		.cfi_restore 3
 8238              		.cfi_def_cfa_offset 0
1998:Veno-Echo.cpp **** }
 8239              		.loc 20 1998 19 view .LVU2248
 8240 0058 FFF7FEBF 		b	_ZN9ButtonLED7LED_setEf
 8241              	.LVL498:
 8242              	.L438:
 8243              		.cfi_restore_state
1985:Veno-Echo.cpp ****     }
 8244              		.loc 20 1985 8 is_stmt 1 view .LVU2249
1985:Veno-Echo.cpp ****     }
 8245              		.loc 20 1985 24 is_stmt 0 view .LVU2250
 8246 005c 0B48     		ldr	r0, .L444+16
 8247 005e B7EE000A 		vmov.f32	s0, #1.0e+0
 8248 0062 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8249              	.LVL499:
1988:Veno-Echo.cpp ****     {
 8250              		.loc 20 1988 5 is_stmt 1 view .LVU2251
1988:Veno-Echo.cpp ****     {
 8251              		.loc 20 1988 26 is_stmt 0 view .LVU2252
 8252 0066 0A48     		ldr	r0, .L444+20
 8253 0068 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8254              	.LVL500:
1988:Veno-Echo.cpp ****     {
 8255              		.loc 20 1988 5 view .LVU2253
 8256 006c 0028     		cmp	r0, #0
 8257 006e E4D0     		beq	.L443
 8258              	.L440:
1994:Veno-Echo.cpp ****     }
 8259              		.loc 20 1994 9 is_stmt 1 view .LVU2254
1994:Veno-Echo.cpp ****     }
 8260              		.loc 20 1994 25 is_stmt 0 view .LVU2255
 8261 0070 B7EE000A 		vmov.f32	s0, #1.0e+0
 8262 0074 0648     		ldr	r0, .L444+20
 8263 0076 FFF7FEFF 		bl	_ZN9ButtonLED7LED_setEf
 8264              	.LVL501:
 8265 007a E3E7     		b	.L441
 8266              	.L445:
 8267              		.align	2
 8268              	.L444:
 8269 007c 00000000 		.word	0
 8270 0080 00000000 		.word	.LANCHOR89
 8271 0084 04000000 		.word	.LANCHOR0+4
 8272 0088 04000000 		.word	.LANCHOR1+4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 278


 8273 008c 00000000 		.word	.LANCHOR92
 8274 0090 00000000 		.word	.LANCHOR93
 8275 0094 00000000 		.word	.LANCHOR94
 8276 0098 00000000 		.word	.LANCHOR95
 8277              		.cfi_endproc
 8278              	.LFE4796:
 8280              		.section	.text._Z14Update_Buttonsv,"ax",%progbits
 8281              		.align	1
 8282              		.p2align 2,,3
 8283              		.global	_Z14Update_Buttonsv
 8284              		.syntax unified
 8285              		.thumb
 8286              		.thumb_func
 8287              		.fpu fpv5-d16
 8289              	_Z14Update_Buttonsv:
 8290              	.LFB4790:
1642:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 8291              		.loc 20 1642 1 is_stmt 1 view -0
 8292              		.cfi_startproc
 8293              		@ args = 0, pretend = 0, frame = 0
 8294              		@ frame_needed = 0, uses_anonymous_args = 0
1643:Veno-Echo.cpp ****     static uint32_t resetTime{};
 8295              		.loc 20 1643 5 view .LVU2257
1644:Veno-Echo.cpp ****     static int buttonstate{};
 8296              		.loc 20 1644 5 view .LVU2258
1645:Veno-Echo.cpp **** 
 8297              		.loc 20 1645 5 view .LVU2259
1647:Veno-Echo.cpp ****     Rev_R_sw.update();
 8298              		.loc 20 1647 5 view .LVU2260
1642:Veno-Echo.cpp ****     static uint32_t shiftTime{};
 8299              		.loc 20 1642 1 is_stmt 0 view .LVU2261
 8300 0000 70B5     		push	{r4, r5, r6, lr}
 8301              		.cfi_def_cfa_offset 16
 8302              		.cfi_offset 4, -16
 8303              		.cfi_offset 5, -12
 8304              		.cfi_offset 6, -8
 8305              		.cfi_offset 14, -4
1647:Veno-Echo.cpp ****     Rev_R_sw.update();
 8306              		.loc 20 1647 20 view .LVU2262
 8307 0002 9848     		ldr	r0, .L501
 8308 0004 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8309              	.LVL502:
1648:Veno-Echo.cpp ****     LPF_sw.update();
 8310              		.loc 20 1648 5 is_stmt 1 view .LVU2263
1648:Veno-Echo.cpp ****     LPF_sw.update();
 8311              		.loc 20 1648 20 is_stmt 0 view .LVU2264
 8312 0008 9748     		ldr	r0, .L501+4
 8313 000a FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8314              	.LVL503:
1649:Veno-Echo.cpp ****     HPF_sw.update();
 8315              		.loc 20 1649 5 is_stmt 1 view .LVU2265
1649:Veno-Echo.cpp ****     HPF_sw.update();
 8316              		.loc 20 1649 18 is_stmt 0 view .LVU2266
 8317 000e 9748     		ldr	r0, .L501+8
 8318 0010 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8319              	.LVL504:
1650:Veno-Echo.cpp ****     Tap_Button.update();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 279


 8320              		.loc 20 1650 5 is_stmt 1 view .LVU2267
1653:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8321              		.loc 20 1653 26 is_stmt 0 view .LVU2268
 8322 0014 964C     		ldr	r4, .L501+12
1650:Veno-Echo.cpp ****     Tap_Button.update();
 8323              		.loc 20 1650 18 view .LVU2269
 8324 0016 9748     		ldr	r0, .L501+16
 8325 0018 FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8326              	.LVL505:
1651:Veno-Echo.cpp **** 
 8327              		.loc 20 1651 5 is_stmt 1 view .LVU2270
1651:Veno-Echo.cpp **** 
 8328              		.loc 20 1651 22 is_stmt 0 view .LVU2271
 8329 001c 9648     		ldr	r0, .L501+20
 8330 001e FFF7FEFF 		bl	_ZN9ButtonLED6updateEv
 8331              	.LVL506:
1653:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8332              		.loc 20 1653 5 is_stmt 1 view .LVU2272
1653:Veno-Echo.cpp ****     ReverseGateR.Debounce();
 8333              		.loc 20 1653 26 is_stmt 0 view .LVU2273
 8334 0022 2046     		mov	r0, r4
 8335 0024 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8336              	.LVL507:
1654:Veno-Echo.cpp ****     //TapButton.Debounce();
 8337              		.loc 20 1654 5 is_stmt 1 view .LVU2274
1654:Veno-Echo.cpp ****     //TapButton.Debounce();
 8338              		.loc 20 1654 26 is_stmt 0 view .LVU2275
 8339 0028 9448     		ldr	r0, .L501+24
 8340 002a FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8341              	.LVL508:
1656:Veno-Echo.cpp ****     //ClockIn.Debounce();
 8342              		.loc 20 1656 5 is_stmt 1 view .LVU2276
1656:Veno-Echo.cpp ****     //ClockIn.Debounce();
 8343              		.loc 20 1656 18 is_stmt 0 view .LVU2277
 8344 002e 9448     		ldr	r0, .L501+28
 8345 0030 FFF7FEFF 		bl	_ZN5daisy6Switch8DebounceEv
 8346              	.LVL509:
1659:Veno-Echo.cpp ****     {
 8347              		.loc 20 1659 5 is_stmt 1 view .LVU2278
  43:../libDaisy/src/hid/switch.h **** 
  44:../libDaisy/src/hid/switch.h ****     /** 
  45:../libDaisy/src/hid/switch.h ****     Initializes the switch object with a given port/pin combo.
  46:../libDaisy/src/hid/switch.h ****     \param pin port/pin object to tell the switch which hardware pin to use.
  47:../libDaisy/src/hid/switch.h ****     \param update_rate Does nothing. Backwards compatibility until next breaking update.
  48:../libDaisy/src/hid/switch.h ****     \param t switch type -- Default: TYPE_MOMENTARY
  49:../libDaisy/src/hid/switch.h ****     \param pol switch polarity -- Default: POLARITY_INVERTED
  50:../libDaisy/src/hid/switch.h ****     \param pu switch pull up/down -- Default: PULL_UP
  51:../libDaisy/src/hid/switch.h ****     */
  52:../libDaisy/src/hid/switch.h ****     void
  53:../libDaisy/src/hid/switch.h ****     Init(dsy_gpio_pin pin, float update_rate, Type t, Polarity pol, Pull pu);
  54:../libDaisy/src/hid/switch.h **** 
  55:../libDaisy/src/hid/switch.h ****     /**
  56:../libDaisy/src/hid/switch.h ****        Simplified Init.
  57:../libDaisy/src/hid/switch.h ****        \param pin port/pin object to tell the switch which hardware pin to use.
  58:../libDaisy/src/hid/switch.h ****        \param update_rate Left for backwards compatibility until next breaking change.
  59:../libDaisy/src/hid/switch.h ****     */
  60:../libDaisy/src/hid/switch.h ****     void Init(dsy_gpio_pin pin, float update_rate = 0.f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 280


  61:../libDaisy/src/hid/switch.h **** 
  62:../libDaisy/src/hid/switch.h ****     /** 
  63:../libDaisy/src/hid/switch.h ****     Called at update_rate to debounce and handle timing for the switch.
  64:../libDaisy/src/hid/switch.h ****     In order for events not to be missed, its important that the Edge/Pressed checks
  65:../libDaisy/src/hid/switch.h ****     be made at the same rate as the debounce function is being called.
  66:../libDaisy/src/hid/switch.h ****     */
  67:../libDaisy/src/hid/switch.h ****     void Debounce();
  68:../libDaisy/src/hid/switch.h **** 
  69:../libDaisy/src/hid/switch.h ****     /** \return true if a button was just pressed. */
  70:../libDaisy/src/hid/switch.h ****     inline bool RisingEdge() const { return state_ == 0x7f; }
 8348              		.loc 1 70 38 view .LVU2279
1659:Veno-Echo.cpp ****     {
 8349              		.loc 20 1659 5 is_stmt 0 view .LVU2280
 8350 0034 6379     		ldrb	r3, [r4, #5]	@ zero_extendqisi2
 8351 0036 7F2B     		cmp	r3, #127
 8352 0038 00F0DC80 		beq	.L493
 8353              	.L447:
1673:Veno-Echo.cpp ****     {
 8354              		.loc 20 1673 5 is_stmt 1 view .LVU2281
 8355              	.LVL510:
 8356              		.loc 1 70 38 view .LVU2282
1673:Veno-Echo.cpp ****     {
 8357              		.loc 20 1673 32 is_stmt 0 view .LVU2283
 8358 003c 8F4B     		ldr	r3, .L501+24
1673:Veno-Echo.cpp ****     {
 8359              		.loc 20 1673 5 view .LVU2284
 8360 003e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8361 0040 7F2B     		cmp	r3, #127
 8362 0042 00F0BE80 		beq	.L494
 8363              	.L449:
1689:Veno-Echo.cpp ****     {
 8364              		.loc 20 1689 5 is_stmt 1 view .LVU2285
1689:Veno-Echo.cpp ****     {
 8365              		.loc 20 1689 28 is_stmt 0 view .LVU2286
 8366 0046 8748     		ldr	r0, .L501
1691:Veno-Echo.cpp ****         if (buttonstate == 3)
 8367              		.loc 20 1691 21 view .LVU2287
 8368 0048 8E4C     		ldr	r4, .L501+32
1689:Veno-Echo.cpp ****     {
 8369              		.loc 20 1689 28 view .LVU2288
 8370 004a FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8371              	.LVL511:
1689:Veno-Echo.cpp ****     {
 8372              		.loc 20 1689 5 view .LVU2289
 8373 004e D0B1     		cbz	r0, .L451
1691:Veno-Echo.cpp ****         if (buttonstate == 3)
 8374              		.loc 20 1691 9 is_stmt 1 view .LVU2290
1691:Veno-Echo.cpp ****         if (buttonstate == 3)
 8375              		.loc 20 1691 21 is_stmt 0 view .LVU2291
 8376 0050 2368     		ldr	r3, [r4]
 8377 0052 0133     		adds	r3, r3, #1
1692:Veno-Echo.cpp ****         {
 8378              		.loc 20 1692 9 view .LVU2292
 8379 0054 032B     		cmp	r3, #3
1691:Veno-Echo.cpp ****         if (buttonstate == 3)
 8380              		.loc 20 1691 21 view .LVU2293
 8381 0056 2360     		str	r3, [r4]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 281


1692:Veno-Echo.cpp ****         {
 8382              		.loc 20 1692 9 is_stmt 1 view .LVU2294
 8383 0058 00F0E580 		beq	.L495
 8384              	.L452:
1696:Veno-Echo.cpp ****         {
 8385              		.loc 20 1696 9 view .LVU2295
1696:Veno-Echo.cpp ****         {
 8386              		.loc 20 1696 29 is_stmt 0 view .LVU2296
 8387 005c 8148     		ldr	r0, .L501
 8388 005e FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8389              	.LVL512:
1702:Veno-Echo.cpp ****         }
 8390              		.loc 20 1702 31 view .LVU2297
 8391 0062 F7EE007A 		vmov.f32	s15, #1.0e+0
 8392 0066 9FED887A 		vldr.32	s14, .L501+36
 8393 006a 0028     		cmp	r0, #0
 8394 006c 8749     		ldr	r1, .L501+40
 8395              	.LBB1714:
 8396              	.LBB1715:
 8397              	.LBB1716:
 8398              	.LBB1717:
 8399              	.LBB1718:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8400              		.loc 22 397 18 view .LVU2298
 8401 006e 4FF00102 		mov	r2, #1
 8402 0072 874B     		ldr	r3, .L501+44
 8403              	.LBE1718:
 8404              	.LBE1717:
 8405              	.LBE1716:
 8406              	.LBE1715:
 8407              	.LBE1714:
1702:Veno-Echo.cpp ****         }
 8408              		.loc 20 1702 31 view .LVU2299
 8409 0074 47FE277A 		vseleq.f32	s15, s14, s15
 8410 0078 C1ED097A 		vstr.32	s15, [r1, #36]
1704:Veno-Echo.cpp ****     }
 8411              		.loc 20 1704 9 is_stmt 1 view .LVU2300
 8412              	.LVL513:
 8413              	.LBB1723:
 8414              	.LBI1714:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8415              		.loc 23 80 5 view .LVU2301
 8416              	.LBB1722:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8417              		.loc 23 81 7 view .LVU2302
 8418              	.LBB1721:
 8419              	.LBI1716:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8420              		.loc 22 288 7 view .LVU2303
 8421              	.LBB1720:
 8422              	.LBI1717:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8423              		.loc 22 390 7 view .LVU2304
 8424              	.LBB1719:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8425              		.loc 22 397 18 is_stmt 0 view .LVU2305
 8426 007c BFF35B8F 		dmb	ish
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 282


 8427 0080 1A70     		strb	r2, [r3]
 8428 0082 BFF35B8F 		dmb	ish
 8429              	.LVL514:
 8430              	.L451:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8431              		.loc 22 397 18 view .LVU2306
 8432              	.LBE1719:
 8433              	.LBE1720:
 8434              	.LBE1721:
 8435              	.LBE1722:
 8436              	.LBE1723:
1707:Veno-Echo.cpp ****     {
 8437              		.loc 20 1707 5 is_stmt 1 view .LVU2307
1707:Veno-Echo.cpp ****     {
 8438              		.loc 20 1707 29 is_stmt 0 view .LVU2308
 8439 0086 7748     		ldr	r0, .L501
 8440 0088 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8441              	.LVL515:
1707:Veno-Echo.cpp ****     {
 8442              		.loc 20 1707 5 view .LVU2309
 8443 008c 10B1     		cbz	r0, .L454
1709:Veno-Echo.cpp ****     }
 8444              		.loc 20 1709 9 is_stmt 1 view .LVU2310
1709:Veno-Echo.cpp ****     }
 8445              		.loc 20 1709 21 is_stmt 0 view .LVU2311
 8446 008e 2368     		ldr	r3, [r4]
 8447 0090 013B     		subs	r3, r3, #1
 8448 0092 2360     		str	r3, [r4]
 8449              	.L454:
1712:Veno-Echo.cpp ****     {
 8450              		.loc 20 1712 5 is_stmt 1 view .LVU2312
1712:Veno-Echo.cpp ****     {
 8451              		.loc 20 1712 28 is_stmt 0 view .LVU2313
 8452 0094 7448     		ldr	r0, .L501+4
 8453 0096 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8454              	.LVL516:
1712:Veno-Echo.cpp ****     {
 8455              		.loc 20 1712 5 view .LVU2314
 8456 009a D0B1     		cbz	r0, .L455
1714:Veno-Echo.cpp ****         if (buttonstate == 3)
 8457              		.loc 20 1714 9 is_stmt 1 view .LVU2315
1714:Veno-Echo.cpp ****         if (buttonstate == 3)
 8458              		.loc 20 1714 21 is_stmt 0 view .LVU2316
 8459 009c 2368     		ldr	r3, [r4]
 8460 009e 0133     		adds	r3, r3, #1
1715:Veno-Echo.cpp ****         {
 8461              		.loc 20 1715 9 view .LVU2317
 8462 00a0 032B     		cmp	r3, #3
1714:Veno-Echo.cpp ****         if (buttonstate == 3)
 8463              		.loc 20 1714 21 view .LVU2318
 8464 00a2 2360     		str	r3, [r4]
1715:Veno-Echo.cpp ****         {
 8465              		.loc 20 1715 9 is_stmt 1 view .LVU2319
 8466 00a4 00F0C480 		beq	.L496
 8467              	.L456:
1719:Veno-Echo.cpp ****         {
 8468              		.loc 20 1719 9 view .LVU2320
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 283


1719:Veno-Echo.cpp ****         {
 8469              		.loc 20 1719 29 is_stmt 0 view .LVU2321
 8470 00a8 6F48     		ldr	r0, .L501+4
 8471 00aa FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8472              	.LVL517:
1725:Veno-Echo.cpp ****         }
 8473              		.loc 20 1725 31 view .LVU2322
 8474 00ae F7EE007A 		vmov.f32	s15, #1.0e+0
 8475 00b2 9FED757A 		vldr.32	s14, .L501+36
 8476 00b6 0028     		cmp	r0, #0
 8477 00b8 7449     		ldr	r1, .L501+40
 8478              	.LBB1724:
 8479              	.LBB1725:
 8480              	.LBB1726:
 8481              	.LBB1727:
 8482              	.LBB1728:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8483              		.loc 22 397 18 view .LVU2323
 8484 00ba 4FF00102 		mov	r2, #1
 8485 00be 744B     		ldr	r3, .L501+44
 8486              	.LBE1728:
 8487              	.LBE1727:
 8488              	.LBE1726:
 8489              	.LBE1725:
 8490              	.LBE1724:
1725:Veno-Echo.cpp ****         }
 8491              		.loc 20 1725 31 view .LVU2324
 8492 00c0 47FE277A 		vseleq.f32	s15, s14, s15
 8493 00c4 C1ED0A7A 		vstr.32	s15, [r1, #40]
1727:Veno-Echo.cpp ****     }
 8494              		.loc 20 1727 9 is_stmt 1 view .LVU2325
 8495              	.LVL518:
 8496              	.LBB1733:
 8497              	.LBI1724:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8498              		.loc 23 80 5 view .LVU2326
 8499              	.LBB1732:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8500              		.loc 23 81 7 view .LVU2327
 8501              	.LBB1731:
 8502              	.LBI1726:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8503              		.loc 22 288 7 view .LVU2328
 8504              	.LBB1730:
 8505              	.LBI1727:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8506              		.loc 22 390 7 view .LVU2329
 8507              	.LBB1729:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8508              		.loc 22 397 18 is_stmt 0 view .LVU2330
 8509 00c8 BFF35B8F 		dmb	ish
 8510 00cc 1A70     		strb	r2, [r3]
 8511 00ce BFF35B8F 		dmb	ish
 8512              	.LVL519:
 8513              	.L455:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8514              		.loc 22 397 18 view .LVU2331
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 284


 8515              	.LBE1729:
 8516              	.LBE1730:
 8517              	.LBE1731:
 8518              	.LBE1732:
 8519              	.LBE1733:
1730:Veno-Echo.cpp ****     {
 8520              		.loc 20 1730 5 is_stmt 1 view .LVU2332
1730:Veno-Echo.cpp ****     {
 8521              		.loc 20 1730 29 is_stmt 0 view .LVU2333
 8522 00d2 6548     		ldr	r0, .L501+4
 8523 00d4 FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8524              	.LVL520:
1730:Veno-Echo.cpp ****     {
 8525              		.loc 20 1730 5 view .LVU2334
 8526 00d8 10B1     		cbz	r0, .L458
1732:Veno-Echo.cpp ****     }
 8527              		.loc 20 1732 9 is_stmt 1 view .LVU2335
1732:Veno-Echo.cpp ****     }
 8528              		.loc 20 1732 21 is_stmt 0 view .LVU2336
 8529 00da 2368     		ldr	r3, [r4]
 8530 00dc 013B     		subs	r3, r3, #1
 8531 00de 2360     		str	r3, [r4]
 8532              	.L458:
1735:Veno-Echo.cpp ****     {
 8533              		.loc 20 1735 5 is_stmt 1 view .LVU2337
1735:Veno-Echo.cpp ****     {
 8534              		.loc 20 1735 30 is_stmt 0 view .LVU2338
 8535 00e0 6548     		ldr	r0, .L501+20
 8536 00e2 FFF7FEFF 		bl	_ZN9ButtonLED10RisingEdgeEv
 8537              	.LVL521:
1735:Veno-Echo.cpp ****     {
 8538              		.loc 20 1735 5 view .LVU2339
 8539 00e6 0028     		cmp	r0, #0
 8540 00e8 55D1     		bne	.L497
 8541              	.L460:
1756:Veno-Echo.cpp ****     {
 8542              		.loc 20 1756 5 is_stmt 1 view .LVU2340
1756:Veno-Echo.cpp ****     {
 8543              		.loc 20 1756 31 is_stmt 0 view .LVU2341
 8544 00ea 6348     		ldr	r0, .L501+20
 8545 00ec FFF7FEFF 		bl	_ZN9ButtonLED11FallingEdgeEv
 8546              	.LVL522:
1756:Veno-Echo.cpp ****     {
 8547              		.loc 20 1756 5 view .LVU2342
 8548 00f0 38B1     		cbz	r0, .L463
1758:Veno-Echo.cpp ****         buttonstate -= 1;
 8549              		.loc 20 1758 9 is_stmt 1 view .LVU2343
1759:Veno-Echo.cpp ****         mute = false;
 8550              		.loc 20 1759 21 is_stmt 0 view .LVU2344
 8551 00f2 2368     		ldr	r3, [r4]
1758:Veno-Echo.cpp ****         buttonstate -= 1;
 8552              		.loc 20 1758 15 view .LVU2345
 8553 00f4 0022     		movs	r2, #0
 8554 00f6 6748     		ldr	r0, .L501+48
1759:Veno-Echo.cpp ****         mute = false;
 8555              		.loc 20 1759 21 view .LVU2346
 8556 00f8 013B     		subs	r3, r3, #1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 285


1760:Veno-Echo.cpp ****     }
 8557              		.loc 20 1760 14 view .LVU2347
 8558 00fa 6749     		ldr	r1, .L501+52
1758:Veno-Echo.cpp ****         buttonstate -= 1;
 8559              		.loc 20 1758 15 view .LVU2348
 8560 00fc 0270     		strb	r2, [r0]
1759:Veno-Echo.cpp ****         mute = false;
 8561              		.loc 20 1759 9 is_stmt 1 view .LVU2349
1759:Veno-Echo.cpp ****         mute = false;
 8562              		.loc 20 1759 21 is_stmt 0 view .LVU2350
 8563 00fe 2360     		str	r3, [r4]
1760:Veno-Echo.cpp ****     }
 8564              		.loc 20 1760 9 is_stmt 1 view .LVU2351
1760:Veno-Echo.cpp ****     }
 8565              		.loc 20 1760 14 is_stmt 0 view .LVU2352
 8566 0100 0A70     		strb	r2, [r1]
 8567              	.L463:
1763:Veno-Echo.cpp ****     {
 8568              		.loc 20 1763 5 is_stmt 1 view .LVU2353
1763:Veno-Echo.cpp ****     {
 8569              		.loc 20 1763 28 is_stmt 0 view .LVU2354
 8570 0102 5D48     		ldr	r0, .L501+20
 8571 0104 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8572              	.LVL523:
1763:Veno-Echo.cpp ****     {
 8573              		.loc 20 1763 5 view .LVU2355
 8574 0108 60B9     		cbnz	r0, .L498
 8575              	.L465:
1771:Veno-Echo.cpp ****     {
 8576              		.loc 20 1771 5 is_stmt 1 view .LVU2356
 8577 010a 2368     		ldr	r3, [r4]
 8578 010c 032B     		cmp	r3, #3
 8579 010e 16D0     		beq	.L499
 8580              	.L468:
1788:Veno-Echo.cpp **** }
 8581              		.loc 20 1788 5 view .LVU2357
 8582              	.LBB1734:
 8583              	.LBI1734:
  71:../libDaisy/src/hid/switch.h **** 
  72:../libDaisy/src/hid/switch.h ****     /** \return true if the button was just released */
  73:../libDaisy/src/hid/switch.h ****     inline bool FallingEdge() const { return state_ == 0x80; }
  74:../libDaisy/src/hid/switch.h **** 
  75:../libDaisy/src/hid/switch.h ****     /** \return true if the button is held down (or if the toggle is on) */
  76:../libDaisy/src/hid/switch.h ****     inline bool Pressed() const { return state_ == 0xff; }
 8584              		.loc 1 76 17 view .LVU2358
 8585              	.LVL524:
 8586              	.LBB1735:
 8587              		.loc 1 76 35 view .LVU2359
 8588              	.LBE1735:
 8589              	.LBE1734:
1788:Veno-Echo.cpp **** }
 8590              		.loc 20 1788 31 is_stmt 0 view .LVU2360
 8591 0110 5B4B     		ldr	r3, .L501+28
1788:Veno-Echo.cpp **** }
 8592              		.loc 20 1788 14 view .LVU2361
 8593 0112 624A     		ldr	r2, .L501+56
 8594              	.LBB1737:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 286


 8595              	.LBB1736:
 8596              		.loc 1 76 52 view .LVU2362
 8597 0114 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8598 0116 A3F1FF03 		sub	r3, #255
 8599 011a B3FA83F3 		clz	r3, r3
 8600 011e 5B09     		lsrs	r3, r3, #5
 8601 0120 1370     		strb	r3, [r2]
 8602              	.LBE1736:
 8603              	.LBE1737:
1789:Veno-Echo.cpp **** 
 8604              		.loc 20 1789 1 view .LVU2363
 8605 0122 70BD     		pop	{r4, r5, r6, pc}
 8606              	.LVL525:
 8607              	.L498:
1765:Veno-Echo.cpp ****         {
 8608              		.loc 20 1765 9 is_stmt 1 view .LVU2364
1765:Veno-Echo.cpp ****         {
 8609              		.loc 20 1765 29 is_stmt 0 view .LVU2365
 8610 0124 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8611              	.LVL526:
1765:Veno-Echo.cpp ****         {
 8612              		.loc 20 1765 32 view .LVU2366
 8613 0128 5D4B     		ldr	r3, .L501+60
 8614 012a 1B68     		ldr	r3, [r3]
 8615 012c C01A     		subs	r0, r0, r3
1765:Veno-Echo.cpp ****         {
 8616              		.loc 20 1765 9 view .LVU2367
 8617 012e 3228     		cmp	r0, #50
 8618 0130 EBD9     		bls	.L465
1767:Veno-Echo.cpp ****         } 
 8619              		.loc 20 1767 13 is_stmt 1 view .LVU2368
1767:Veno-Echo.cpp ****         } 
 8620              		.loc 20 1767 19 is_stmt 0 view .LVU2369
 8621 0132 584B     		ldr	r3, .L501+48
 8622 0134 0122     		movs	r2, #1
 8623 0136 1A70     		strb	r2, [r3]
1771:Veno-Echo.cpp ****     {
 8624              		.loc 20 1771 5 is_stmt 1 view .LVU2370
 8625 0138 2368     		ldr	r3, [r4]
 8626 013a 032B     		cmp	r3, #3
 8627 013c E8D1     		bne	.L468
 8628              	.L499:
1774:Veno-Echo.cpp ****             {
 8629              		.loc 20 1774 13 view .LVU2371
1774:Veno-Echo.cpp ****             {
 8630              		.loc 20 1774 36 is_stmt 0 view .LVU2372
 8631 013e 594E     		ldr	r6, .L501+64
1774:Veno-Echo.cpp ****             {
 8632              		.loc 20 1774 33 view .LVU2373
 8633 0140 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8634              	.LVL527:
1774:Veno-Echo.cpp ****             {
 8635              		.loc 20 1774 13 view .LVU2374
 8636 0144 40F6B833 		movw	r3, #3000
1774:Veno-Echo.cpp ****             {
 8637              		.loc 20 1774 36 view .LVU2375
 8638 0148 3268     		ldr	r2, [r6]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 287


 8639 014a 801A     		subs	r0, r0, r2
1774:Veno-Echo.cpp ****             {
 8640              		.loc 20 1774 13 view .LVU2376
 8641 014c 9842     		cmp	r0, r3
 8642 014e DFD9     		bls	.L468
1776:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 8643              		.loc 20 1776 17 is_stmt 1 view .LVU2377
1776:Veno-Echo.cpp ****                 Rev_R_sw.toggle();
 8644              		.loc 20 1776 32 is_stmt 0 view .LVU2378
 8645 0150 4448     		ldr	r0, .L501
 8646 0152 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8647              	.LVL528:
1777:Veno-Echo.cpp ****                 ResetAllLEDs();
 8648              		.loc 20 1777 17 is_stmt 1 view .LVU2379
1777:Veno-Echo.cpp ****                 ResetAllLEDs();
 8649              		.loc 20 1777 32 is_stmt 0 view .LVU2380
 8650 0156 4448     		ldr	r0, .L501+4
 8651 0158 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8652              	.LVL529:
1778:Veno-Echo.cpp ****                 //don't let reset or shift update
 8653              		.loc 20 1778 17 is_stmt 1 view .LVU2381
1782:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8654              		.loc 20 1782 29 is_stmt 0 view .LVU2382
 8655 015c 524D     		ldr	r5, .L501+68
1778:Veno-Echo.cpp ****                 //don't let reset or shift update
 8656              		.loc 20 1778 29 view .LVU2383
 8657 015e FFF7FEFF 		bl	_Z12ResetAllLEDsv
 8658              	.LVL530:
1780:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8659              		.loc 20 1780 17 is_stmt 1 view .LVU2384
1780:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8660              		.loc 20 1780 23 is_stmt 0 view .LVU2385
 8661 0162 4C4B     		ldr	r3, .L501+48
 8662 0164 0022     		movs	r2, #0
1781:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8663              		.loc 20 1781 30 view .LVU2386
 8664 0166 5048     		ldr	r0, .L501+68
1782:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8665              		.loc 20 1782 29 view .LVU2387
 8666 0168 484C     		ldr	r4, .L501+40
1780:Veno-Echo.cpp ****                 ApplySettings(defaultAltControls);
 8667              		.loc 20 1780 23 view .LVU2388
 8668 016a 1A70     		strb	r2, [r3]
1781:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8669              		.loc 20 1781 17 is_stmt 1 view .LVU2389
1781:Veno-Echo.cpp ****                 AltControls = defaultAltControls;
 8670              		.loc 20 1781 30 is_stmt 0 view .LVU2390
 8671 016c FFF7FEFF 		bl	_Z13ApplySettingsRK8Settings
 8672              	.LVL531:
1782:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8673              		.loc 20 1782 17 is_stmt 1 view .LVU2391
1782:Veno-Echo.cpp ****                 resetTime = System::GetNow();
 8674              		.loc 20 1782 29 is_stmt 0 view .LVU2392
 8675 0170 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8676 0172 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8677 0174 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8678 0176 0FC4     		stmia	r4!, {r0, r1, r2, r3}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 288


 8679 0178 95E80700 		ldm	r5, {r0, r1, r2}
 8680 017c 84E80700 		stm	r4, {r0, r1, r2}
1783:Veno-Echo.cpp ****                 save_flag = true;
 8681              		.loc 20 1783 17 is_stmt 1 view .LVU2393
1783:Veno-Echo.cpp ****                 save_flag = true;
 8682              		.loc 20 1783 43 is_stmt 0 view .LVU2394
 8683 0180 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8684              	.LVL532:
 8685              	.LBB1738:
 8686              	.LBB1739:
 8687              	.LBB1740:
 8688              	.LBB1741:
 8689              	.LBB1742:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8690              		.loc 22 397 18 view .LVU2395
 8691 0184 424B     		ldr	r3, .L501+44
 8692 0186 0122     		movs	r2, #1
 8693              	.LBE1742:
 8694              	.LBE1741:
 8695              	.LBE1740:
 8696              	.LBE1739:
 8697              	.LBE1738:
1783:Veno-Echo.cpp ****                 save_flag = true;
 8698              		.loc 20 1783 27 view .LVU2396
 8699 0188 3060     		str	r0, [r6]
1784:Veno-Echo.cpp ****             }
 8700              		.loc 20 1784 17 is_stmt 1 view .LVU2397
 8701              	.LVL533:
 8702              	.LBB1747:
 8703              	.LBI1738:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8704              		.loc 23 80 5 view .LVU2398
 8705              	.LBB1746:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8706              		.loc 23 81 7 view .LVU2399
 8707              	.LBB1745:
 8708              	.LBI1740:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8709              		.loc 22 288 7 view .LVU2400
 8710              	.LBB1744:
 8711              	.LBI1741:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8712              		.loc 22 390 7 view .LVU2401
 8713              	.LBB1743:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8714              		.loc 22 397 18 is_stmt 0 view .LVU2402
 8715 018a BFF35B8F 		dmb	ish
 8716 018e 1A70     		strb	r2, [r3]
 8717 0190 BFF35B8F 		dmb	ish
 8718              	.LVL534:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8719              		.loc 22 397 18 view .LVU2403
 8720              	.LBE1743:
 8721              	.LBE1744:
 8722              	.LBE1745:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8723              		.loc 23 81 35 view .LVU2404
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 289


 8724 0194 BCE7     		b	.L468
 8725              	.LVL535:
 8726              	.L497:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8727              		.loc 23 81 35 view .LVU2405
 8728              	.LBE1746:
 8729              	.LBE1747:
1737:Veno-Echo.cpp ****         {
 8730              		.loc 20 1737 9 is_stmt 1 view .LVU2406
1737:Veno-Echo.cpp ****         {
 8731              		.loc 20 1737 25 is_stmt 0 view .LVU2407
 8732 0196 4548     		ldr	r0, .L501+72
 8733 0198 FFF7FEFF 		bl	_ZN8Taptempo3tapEv
 8734              	.LVL536:
1737:Veno-Echo.cpp ****         {
 8735              		.loc 20 1737 9 view .LVU2408
 8736 019c 0028     		cmp	r0, #0
 8737 019e 4CD1     		bne	.L500
 8738              	.L461:
1743:Veno-Echo.cpp ****         
 8739              		.loc 20 1743 9 is_stmt 1 view .LVU2409
1743:Veno-Echo.cpp ****         
 8740              		.loc 20 1743 33 is_stmt 0 view .LVU2410
 8741 01a0 4348     		ldr	r0, .L501+76
 8742 01a2 FFF7FEFF 		bl	_ZN8TempoLED10resetPhaseEv
 8743              	.LVL537:
1746:Veno-Echo.cpp ****         buttonstate += 1;
 8744              		.loc 20 1746 9 is_stmt 1 view .LVU2411
1746:Veno-Echo.cpp ****         buttonstate += 1;
 8745              		.loc 20 1746 35 is_stmt 0 view .LVU2412
 8746 01a6 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8747              	.LVL538:
1747:Veno-Echo.cpp ****         
 8748              		.loc 20 1747 21 view .LVU2413
 8749 01aa 2368     		ldr	r3, [r4]
1746:Veno-Echo.cpp ****         buttonstate += 1;
 8750              		.loc 20 1746 19 view .LVU2414
 8751 01ac 3C4A     		ldr	r2, .L501+60
1747:Veno-Echo.cpp ****         
 8752              		.loc 20 1747 21 view .LVU2415
 8753 01ae 0133     		adds	r3, r3, #1
1746:Veno-Echo.cpp ****         buttonstate += 1;
 8754              		.loc 20 1746 19 view .LVU2416
 8755 01b0 1060     		str	r0, [r2]
1747:Veno-Echo.cpp ****         
 8756              		.loc 20 1747 9 is_stmt 1 view .LVU2417
1749:Veno-Echo.cpp ****         {
 8757              		.loc 20 1749 9 is_stmt 0 view .LVU2418
 8758 01b2 032B     		cmp	r3, #3
1747:Veno-Echo.cpp ****         
 8759              		.loc 20 1747 21 view .LVU2419
 8760 01b4 2360     		str	r3, [r4]
1749:Veno-Echo.cpp ****         {
 8761              		.loc 20 1749 9 is_stmt 1 view .LVU2420
 8762 01b6 98D1     		bne	.L460
1751:Veno-Echo.cpp ****         }
 8763              		.loc 20 1751 13 view .LVU2421
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 290


1751:Veno-Echo.cpp ****         }
 8764              		.loc 20 1751 39 is_stmt 0 view .LVU2422
 8765 01b8 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8766              	.LVL539:
1751:Veno-Echo.cpp ****         }
 8767              		.loc 20 1751 23 view .LVU2423
 8768 01bc 394B     		ldr	r3, .L501+64
 8769 01be 1860     		str	r0, [r3]
 8770 01c0 93E7     		b	.L460
 8771              	.L494:
1675:Veno-Echo.cpp ****         if(Rev_R_sw.getState())
 8772              		.loc 20 1675 9 is_stmt 1 view .LVU2424
1675:Veno-Echo.cpp ****         if(Rev_R_sw.getState())
 8773              		.loc 20 1675 24 is_stmt 0 view .LVU2425
 8774 01c2 2948     		ldr	r0, .L501+4
 8775 01c4 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8776              	.LVL540:
1676:Veno-Echo.cpp ****         {
 8777              		.loc 20 1676 9 is_stmt 1 view .LVU2426
1676:Veno-Echo.cpp ****         {
 8778              		.loc 20 1676 29 is_stmt 0 view .LVU2427
 8779 01c8 2748     		ldr	r0, .L501+4
 8780 01ca FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8781              	.LVL541:
1682:Veno-Echo.cpp ****         }
 8782              		.loc 20 1682 31 view .LVU2428
 8783 01ce F7EE007A 		vmov.f32	s15, #1.0e+0
 8784 01d2 9FED2D7A 		vldr.32	s14, .L501+36
 8785 01d6 0028     		cmp	r0, #0
 8786 01d8 2C49     		ldr	r1, .L501+40
 8787              	.LBB1748:
 8788              	.LBB1749:
 8789              	.LBB1750:
 8790              	.LBB1751:
 8791              	.LBB1752:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8792              		.loc 22 397 18 view .LVU2429
 8793 01da 4FF00102 		mov	r2, #1
 8794 01de 2C4B     		ldr	r3, .L501+44
 8795              	.LBE1752:
 8796              	.LBE1751:
 8797              	.LBE1750:
 8798              	.LBE1749:
 8799              	.LBE1748:
1682:Veno-Echo.cpp ****         }
 8800              		.loc 20 1682 31 view .LVU2430
 8801 01e0 47FE277A 		vseleq.f32	s15, s14, s15
 8802 01e4 C1ED0A7A 		vstr.32	s15, [r1, #40]
1684:Veno-Echo.cpp ****     }
 8803              		.loc 20 1684 9 is_stmt 1 view .LVU2431
 8804              	.LVL542:
 8805              	.LBB1757:
 8806              	.LBI1748:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8807              		.loc 23 80 5 view .LVU2432
 8808              	.LBB1756:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 291


 8809              		.loc 23 81 7 view .LVU2433
 8810              	.LBB1755:
 8811              	.LBI1750:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8812              		.loc 22 288 7 view .LVU2434
 8813              	.LBB1754:
 8814              	.LBI1751:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8815              		.loc 22 390 7 view .LVU2435
 8816              	.LBB1753:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8817              		.loc 22 397 18 is_stmt 0 view .LVU2436
 8818 01e8 BFF35B8F 		dmb	ish
 8819 01ec 1A70     		strb	r2, [r3]
 8820 01ee BFF35B8F 		dmb	ish
 8821              	.LVL543:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8822              		.loc 22 397 18 view .LVU2437
 8823              	.LBE1753:
 8824              	.LBE1754:
 8825              	.LBE1755:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8826              		.loc 23 81 35 view .LVU2438
 8827 01f2 28E7     		b	.L449
 8828              	.LVL544:
 8829              	.L493:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8830              		.loc 23 81 35 view .LVU2439
 8831              	.LBE1756:
 8832              	.LBE1757:
1661:Veno-Echo.cpp ****         if(Rev_L_sw.getState())
 8833              		.loc 20 1661 9 is_stmt 1 view .LVU2440
1661:Veno-Echo.cpp ****         if(Rev_L_sw.getState())
 8834              		.loc 20 1661 24 is_stmt 0 view .LVU2441
 8835 01f4 1B48     		ldr	r0, .L501
 8836 01f6 FFF7FEFF 		bl	_ZN9ButtonLED6toggleEv
 8837              	.LVL545:
1662:Veno-Echo.cpp ****         {
 8838              		.loc 20 1662 9 is_stmt 1 view .LVU2442
1662:Veno-Echo.cpp ****         {
 8839              		.loc 20 1662 29 is_stmt 0 view .LVU2443
 8840 01fa 1A48     		ldr	r0, .L501
 8841 01fc FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 8842              	.LVL546:
1668:Veno-Echo.cpp ****         }
 8843              		.loc 20 1668 31 view .LVU2444
 8844 0200 F7EE007A 		vmov.f32	s15, #1.0e+0
 8845 0204 9FED207A 		vldr.32	s14, .L501+36
 8846 0208 0028     		cmp	r0, #0
 8847 020a 2049     		ldr	r1, .L501+40
 8848              	.LBB1758:
 8849              	.LBB1759:
 8850              	.LBB1760:
 8851              	.LBB1761:
 8852              	.LBB1762:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8853              		.loc 22 397 18 view .LVU2445
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 292


 8854 020c 4FF00102 		mov	r2, #1
 8855 0210 1F4B     		ldr	r3, .L501+44
 8856              	.LBE1762:
 8857              	.LBE1761:
 8858              	.LBE1760:
 8859              	.LBE1759:
 8860              	.LBE1758:
1668:Veno-Echo.cpp ****         }
 8861              		.loc 20 1668 31 view .LVU2446
 8862 0212 47FE277A 		vseleq.f32	s15, s14, s15
 8863 0216 C1ED097A 		vstr.32	s15, [r1, #36]
1670:Veno-Echo.cpp ****     }
 8864              		.loc 20 1670 9 is_stmt 1 view .LVU2447
 8865              	.LVL547:
 8866              	.LBB1767:
 8867              	.LBI1758:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8868              		.loc 23 80 5 view .LVU2448
 8869              	.LBB1766:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8870              		.loc 23 81 7 view .LVU2449
 8871              	.LBB1765:
 8872              	.LBI1760:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8873              		.loc 22 288 7 view .LVU2450
 8874              	.LBB1764:
 8875              	.LBI1761:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8876              		.loc 22 390 7 view .LVU2451
 8877              	.LBB1763:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8878              		.loc 22 397 18 is_stmt 0 view .LVU2452
 8879 021a BFF35B8F 		dmb	ish
 8880 021e 1A70     		strb	r2, [r3]
 8881 0220 BFF35B8F 		dmb	ish
 8882              	.LVL548:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8883              		.loc 22 397 18 view .LVU2453
 8884              	.LBE1763:
 8885              	.LBE1764:
 8886              	.LBE1765:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8887              		.loc 23 81 35 view .LVU2454
 8888 0224 0AE7     		b	.L447
 8889              	.LVL549:
 8890              	.L495:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8891              		.loc 23 81 35 view .LVU2455
 8892              	.LBE1766:
 8893              	.LBE1767:
1694:Veno-Echo.cpp ****         }
 8894              		.loc 20 1694 13 is_stmt 1 view .LVU2456
1694:Veno-Echo.cpp ****         }
 8895              		.loc 20 1694 39 is_stmt 0 view .LVU2457
 8896 0226 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8897              	.LVL550:
1694:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 293


 8898              		.loc 20 1694 23 view .LVU2458
 8899 022a 1E4B     		ldr	r3, .L501+64
 8900 022c 1860     		str	r0, [r3]
 8901 022e 15E7     		b	.L452
 8902              	.L496:
1717:Veno-Echo.cpp ****         }
 8903              		.loc 20 1717 13 is_stmt 1 view .LVU2459
1717:Veno-Echo.cpp ****         }
 8904              		.loc 20 1717 39 is_stmt 0 view .LVU2460
 8905 0230 FFF7FEFF 		bl	_ZN5daisy6System6GetNowEv
 8906              	.LVL551:
1717:Veno-Echo.cpp ****         }
 8907              		.loc 20 1717 23 view .LVU2461
 8908 0234 1B4B     		ldr	r3, .L501+64
 8909 0236 1860     		str	r0, [r3]
 8910 0238 36E7     		b	.L456
 8911              	.L500:
1739:Veno-Echo.cpp ****             AltControls.tapLength = BaseTempo.getTapLength();
 8912              		.loc 20 1739 13 is_stmt 1 view .LVU2462
1739:Veno-Echo.cpp ****             AltControls.tapLength = BaseTempo.getTapLength();
 8913              		.loc 20 1739 35 is_stmt 0 view .LVU2463
 8914 023a 1C48     		ldr	r0, .L501+72
 8915 023c FFF7FEFF 		bl	_ZN8Taptempo10getTapFreqEv
 8916              	.LVL552:
 8917 0240 1B48     		ldr	r0, .L501+76
 8918 0242 FFF7FEFF 		bl	_ZN8TempoLED8setTempoEf
 8919              	.LVL553:
1740:Veno-Echo.cpp ****             save_flag = true;
 8920              		.loc 20 1740 13 is_stmt 1 view .LVU2464
1740:Veno-Echo.cpp ****             save_flag = true;
 8921              		.loc 20 1740 59 is_stmt 0 view .LVU2465
 8922 0246 1948     		ldr	r0, .L501+72
 8923 0248 FFF7FEFF 		bl	_ZN8Taptempo12getTapLengthEv
 8924              	.LVL554:
1740:Veno-Echo.cpp ****             save_flag = true;
 8925              		.loc 20 1740 35 view .LVU2466
 8926 024c 0F49     		ldr	r1, .L501+40
 8927              	.LBB1768:
 8928              	.LBB1769:
 8929              	.LBB1770:
 8930              	.LBB1771:
 8931              	.LBB1772:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8932              		.loc 22 397 18 view .LVU2467
 8933 024e 0122     		movs	r2, #1
 8934 0250 0F4B     		ldr	r3, .L501+44
 8935              	.LBE1772:
 8936              	.LBE1771:
 8937              	.LBE1770:
 8938              	.LBE1769:
 8939              	.LBE1768:
1740:Veno-Echo.cpp ****             save_flag = true;
 8940              		.loc 20 1740 35 view .LVU2468
 8941 0252 81ED080A 		vstr.32	s0, [r1, #32]
1741:Veno-Echo.cpp ****         }
 8942              		.loc 20 1741 13 is_stmt 1 view .LVU2469
 8943              	.LVL555:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 294


 8944              	.LBB1777:
 8945              	.LBI1768:
  80:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic ****     { return _M_base.operator=(__i); }
 8946              		.loc 23 80 5 view .LVU2470
 8947              	.LBB1776:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8948              		.loc 23 81 7 view .LVU2471
 8949              	.LBB1775:
 8950              	.LBI1770:
 288:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8951              		.loc 22 288 7 view .LVU2472
 8952              	.LBB1774:
 8953              	.LBI1771:
 390:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       {
 8954              		.loc 22 390 7 view .LVU2473
 8955              	.LBB1773:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8956              		.loc 22 397 18 is_stmt 0 view .LVU2474
 8957 0256 BFF35B8F 		dmb	ish
 8958 025a 1A70     		strb	r2, [r3]
 8959 025c BFF35B8F 		dmb	ish
 8960              	.LVL556:
 397:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/atomic_base.h ****       }
 8961              		.loc 22 397 18 view .LVU2475
 8962              	.LBE1773:
 8963              	.LBE1774:
 8964              	.LBE1775:
  81:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/atomic **** 
 8965              		.loc 23 81 35 view .LVU2476
 8966 0260 9EE7     		b	.L461
 8967              	.L502:
 8968 0262 00BF     		.align	2
 8969              	.L501:
 8970 0264 00000000 		.word	.LANCHOR92
 8971 0268 00000000 		.word	.LANCHOR93
 8972 026c 00000000 		.word	.LANCHOR94
 8973 0270 00000000 		.word	.LANCHOR97
 8974 0274 00000000 		.word	.LANCHOR95
 8975 0278 00000000 		.word	.LANCHOR96
 8976 027c 00000000 		.word	.LANCHOR98
 8977 0280 00000000 		.word	.LANCHOR99
 8978 0284 00000000 		.word	.LANCHOR109
 8979 0288 00000000 		.word	0
 8980 028c 00000000 		.word	.LANCHOR15
 8981 0290 00000000 		.word	.LANCHOR16
 8982 0294 00000000 		.word	.LANCHOR7
 8983 0298 00000000 		.word	.LANCHOR112
 8984 029c 00000000 		.word	.LANCHOR12
 8985 02a0 00000000 		.word	.LANCHOR111
 8986 02a4 00000000 		.word	.LANCHOR110
 8987 02a8 00000000 		.word	.LANCHOR113
 8988 02ac 00000000 		.word	.LANCHOR26
 8989 02b0 00000000 		.word	.LANCHOR89
 8990              	.LBE1776:
 8991              	.LBE1777:
 8992              		.cfi_endproc
 8993              	.LFE4790:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 295


 8995              		.section	.text._ZL13AudioCallbackPKPKfPPfj,"ax",%progbits
 8996              		.align	1
 8997              		.p2align 2,,3
 8998              		.syntax unified
 8999              		.thumb
 9000              		.thumb_func
 9001              		.fpu fpv5-d16
 9003              	_ZL13AudioCallbackPKPKfPPfj:
 9004              	.LVL557:
 9005              	.LFB4770:
 251:Veno-Echo.cpp **** 
 9006              		.loc 20 251 1 is_stmt 1 view -0
 9007              		.cfi_startproc
 9008              		@ args = 0, pretend = 0, frame = 96
 9009              		@ frame_needed = 0, uses_anonymous_args = 0
 262:Veno-Echo.cpp **** 
 9010              		.loc 20 262 1 view .LVU2478
 280:Veno-Echo.cpp **** 
 9011              		.loc 20 280 1 view .LVU2479
 251:Veno-Echo.cpp **** 
 9012              		.loc 20 251 1 is_stmt 0 view .LVU2480
 9013 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 9014              		.cfi_def_cfa_offset 36
 9015              		.cfi_offset 4, -36
 9016              		.cfi_offset 5, -32
 9017              		.cfi_offset 6, -28
 9018              		.cfi_offset 7, -24
 9019              		.cfi_offset 8, -20
 9020              		.cfi_offset 9, -16
 9021              		.cfi_offset 10, -12
 9022              		.cfi_offset 11, -8
 9023              		.cfi_offset 14, -4
 280:Veno-Echo.cpp **** 
 9024              		.loc 20 280 20 view .LVU2481
 9025 0004 1B4D     		ldr	r5, .L644
 280:Veno-Echo.cpp **** 
 9026              		.loc 20 280 25 view .LVU2482
 9027 0006 1C4B     		ldr	r3, .L644+4
 280:Veno-Echo.cpp **** 
 9028              		.loc 20 280 20 view .LVU2483
 9029 0008 2C68     		ldr	r4, [r5]
 251:Veno-Echo.cpp **** 
 9030              		.loc 20 251 1 view .LVU2484
 9031 000a 2DED108B 		vpush.64	{d8, d9, d10, d11, d12, d13, d14, d15}
 9032              		.cfi_def_cfa_offset 100
 9033              		.cfi_offset 80, -100
 9034              		.cfi_offset 81, -96
 9035              		.cfi_offset 82, -92
 9036              		.cfi_offset 83, -88
 9037              		.cfi_offset 84, -84
 9038              		.cfi_offset 85, -80
 9039              		.cfi_offset 86, -76
 9040              		.cfi_offset 87, -72
 9041              		.cfi_offset 88, -68
 9042              		.cfi_offset 89, -64
 9043              		.cfi_offset 90, -60
 9044              		.cfi_offset 91, -56
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 296


 9045              		.cfi_offset 92, -52
 9046              		.cfi_offset 93, -48
 9047              		.cfi_offset 94, -44
 9048              		.cfi_offset 95, -40
 9049 000e 99B0     		sub	sp, sp, #100
 9050              		.cfi_def_cfa_offset 200
 251:Veno-Echo.cpp **** 
 9051              		.loc 20 251 1 view .LVU2485
 9052 0010 CDE90601 		strd	r0, r1, [sp, #24]
 280:Veno-Echo.cpp **** 
 9053              		.loc 20 280 20 view .LVU2486
 9054 0014 611C     		adds	r1, r4, #1
 9055              	.LVL558:
 251:Veno-Echo.cpp **** 
 9056              		.loc 20 251 1 view .LVU2487
 9057 0016 0592     		str	r2, [sp, #20]
 280:Veno-Echo.cpp **** 
 9058              		.loc 20 280 25 view .LVU2488
 9059 0018 83FB0132 		smull	r3, r2, r3, r1
 9060              	.LVL559:
 280:Veno-Echo.cpp **** 
 9061              		.loc 20 280 25 view .LVU2489
 9062 001c CB17     		asrs	r3, r1, #31
 9063 001e 0A44     		add	r2, r2, r1
 9064 0020 C3EBE203 		rsb	r3, r3, r2, asr #3
 9065 0024 C3EB0313 		rsb	r3, r3, r3, lsl #4
 9066 0028 CB1A     		subs	r3, r1, r3
 280:Veno-Echo.cpp **** 
 9067              		.loc 20 280 9 view .LVU2490
 9068 002a 2B60     		str	r3, [r5]
 293:Veno-Echo.cpp ****         {
 9069              		.loc 20 293 9 is_stmt 1 view .LVU2491
 9070 002c 0E2B     		cmp	r3, #14
 9071 002e 17D8     		bhi	.L504
 9072 0030 DFE813F0 		tbh	[pc, r3, lsl #1]
 9073              	.L506:
 9074 0034 9705     		.2byte	(.L520-.L506)/2
 9075 0036 0F00     		.2byte	(.L519-.L506)/2
 9076 0038 A105     		.2byte	(.L518-.L506)/2
 9077 003a AA05     		.2byte	(.L517-.L506)/2
 9078 003c EC05     		.2byte	(.L516-.L506)/2
 9079 003e F505     		.2byte	(.L515-.L506)/2
 9080 0040 FE05     		.2byte	(.L514-.L506)/2
 9081 0042 0706     		.2byte	(.L513-.L506)/2
 9082 0044 1006     		.2byte	(.L512-.L506)/2
 9083 0046 1906     		.2byte	(.L511-.L506)/2
 9084 0048 2206     		.2byte	(.L510-.L506)/2
 9085 004a 2B06     		.2byte	(.L509-.L506)/2
 9086 004c 3406     		.2byte	(.L508-.L506)/2
 9087 004e 3D06     		.2byte	(.L507-.L506)/2
 9088 0050 8E05     		.2byte	(.L505-.L506)/2
 9089              		.p2align 1
 9090              	.L519:
 302:Veno-Echo.cpp ****                 Update_DelayTimeL_CV();
 9091              		.loc 20 302 13 view .LVU2492
 303:Veno-Echo.cpp ****             break;
 9092              		.loc 20 303 17 view .LVU2493
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 297


 9093              	.LBB1864:
 9094              	.LBI1864:
 851:Veno-Echo.cpp **** {
 9095              		.loc 20 851 6 view .LVU2494
 9096              	.LBB1865:
 853:Veno-Echo.cpp **** }
 9097              		.loc 20 853 5 view .LVU2495
 853:Veno-Echo.cpp **** }
 9098              		.loc 20 853 36 is_stmt 0 view .LVU2496
 9099 0052 0021     		movs	r1, #0
 9100 0054 0948     		ldr	r0, .L644+8
 9101              	.LVL560:
 853:Veno-Echo.cpp **** }
 9102              		.loc 20 853 36 view .LVU2497
 9103 0056 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 9104              	.LVL561:
 853:Veno-Echo.cpp **** }
 9105              		.loc 20 853 19 view .LVU2498
 9106 005a 094B     		ldr	r3, .L644+12
 9107 005c 83ED000A 		vstr.32	s0, [r3]
 9108              	.L504:
 9109              	.LVL562:
 853:Veno-Echo.cpp **** }
 9110              		.loc 20 853 19 view .LVU2499
 9111              	.LBE1865:
 9112              	.LBE1864:
 9113              	.LBB1866:
 383:Veno-Echo.cpp ****     {   
 9114              		.loc 20 383 25 is_stmt 1 discriminator 1 view .LVU2500
 9115 0060 059B     		ldr	r3, [sp, #20]
 9116 0062 002B     		cmp	r3, #0
 9117 0064 00F05685 		beq	.L503
 383:Veno-Echo.cpp ****     {   
 9118              		.loc 20 383 25 is_stmt 0 view .LVU2501
 9119 0068 0023     		movs	r3, #0
 9120 006a DFF81C90 		ldr	r9, .L644+20
 9121 006e 054E     		ldr	r6, .L644+16
 9122 0070 0193     		str	r3, [sp, #4]
 9123 0072 58E1     		b	.L521
 9124              	.L645:
 9125              		.align	2
 9126              	.L644:
 9127 0074 00000000 		.word	.LANCHOR114
 9128 0078 89888888 		.word	-2004318071
 9129 007c 18000000 		.word	.LANCHOR4+24
 9130 0080 00000000 		.word	.LANCHOR5
 9131 0084 00000000 		.word	.LANCHOR130
 9132 0088 00000000 		.word	.LANCHOR129
 9133              	.LVL563:
 9134              	.L643:
 9135              	.LBB1867:
 9136              	.LBB1868:
 9137              	.LBB1869:
2006:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9138              		.loc 20 2006 10 is_stmt 1 view .LVU2502
 9139 008c B8EE007A 		vmov.f32	s14, #-2.0e+0
2007:Veno-Echo.cpp ****     else
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 298


 9140              		.loc 20 2007 19 is_stmt 0 view .LVU2503
 9141 0090 F4EE477A 		vcmp.f32	s15, s14
 9142 0094 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9143 0098 48BF     		it	mi
 9144 009a F0EE477A 		vmovmi.f32	s15, s14
 9145              	.LVL564:
 9146              	.L542:
2011:Veno-Echo.cpp **** }
 9147              		.loc 20 2011 5 is_stmt 1 view .LVU2504
2011:Veno-Echo.cpp **** }
 9148              		.loc 20 2011 5 is_stmt 0 view .LVU2505
 9149              	.LBE1869:
 9150              	.LBE1868:
 9151              	.LBB1872:
 9152              	.LBB1873:
2004:Veno-Echo.cpp ****         returnval = limit;
 9153              		.loc 20 2004 5 view .LVU2506
 9154 009e B0EE007A 		vmov.f32	s14, #2.0e+0
 9155              	.LBE1873:
 9156              	.LBE1872:
 440:Veno-Echo.cpp **** 
 9157              		.loc 20 440 34 view .LVU2507
 9158 00a2 9DED0D0A 		vldr.32	s0, [sp, #52]
 439:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 9159              		.loc 20 439 23 view .LVU2508
 9160 00a6 CDED0C7A 		vstr.32	s15, [sp, #48]
 440:Veno-Echo.cpp **** 
 9161              		.loc 20 440 9 is_stmt 1 view .LVU2509
 9162              	.LVL565:
 9163              	.LBB1877:
 9164              	.LBI1872:
2001:Veno-Echo.cpp **** {
 9165              		.loc 20 2001 7 view .LVU2510
 9166              	.LBB1874:
2003:Veno-Echo.cpp ****     if (input > limit)
 9167              		.loc 20 2003 5 view .LVU2511
2004:Veno-Echo.cpp ****         returnval = limit;
 9168              		.loc 20 2004 5 view .LVU2512
 9169 00aa B4EEC70A 		vcmpe.f32	s0, s14
 9170 00ae F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9171 00b2 00F36E84 		bgt	.L580
2006:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9172              		.loc 20 2006 10 view .LVU2513
 9173 00b6 B8EE007A 		vmov.f32	s14, #-2.0e+0
 9174              	.LBE1874:
 9175              	.LBE1877:
 9176              	.LBB1878:
 442:Veno-Echo.cpp **** {
 9177              		.loc 20 442 1 is_stmt 0 view .LVU2514
 9178 00ba DA4B     		ldr	r3, .L646
 9179 00bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9180              	.LBE1878:
 9181              	.LBB1900:
 9182              	.LBB1875:
2007:Veno-Echo.cpp ****     else
 9183              		.loc 20 2007 19 view .LVU2515
 9184 00be B4EE470A 		vcmp.f32	s0, s14
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 299


 9185 00c2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9186 00c6 48BF     		it	mi
 9187 00c8 B0EE470A 		vmovmi.f32	s0, s14
 9188              	.LVL566:
2011:Veno-Echo.cpp **** }
 9189              		.loc 20 2011 5 is_stmt 1 view .LVU2516
2011:Veno-Echo.cpp **** }
 9190              		.loc 20 2011 5 is_stmt 0 view .LVU2517
 9191              	.LBE1875:
 9192              	.LBE1900:
 440:Veno-Echo.cpp **** 
 9193              		.loc 20 440 23 view .LVU2518
 9194 00cc 8DED0D0A 		vstr.32	s0, [sp, #52]
 442:Veno-Echo.cpp **** {
 9195              		.loc 20 442 1 is_stmt 1 view .LVU2519
 9196              	.LBB1901:
 9197 00d0 002B     		cmp	r3, #0
 9198 00d2 00F06784 		beq	.L640
 9199              	.L546:
 9200              	.LBE1901:
 486:Veno-Echo.cpp ****         static float RNegFB{};
 9201              		.loc 20 486 9 view .LVU2520
 487:Veno-Echo.cpp **** 
 9202              		.loc 20 487 9 view .LVU2521
 490:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9203              		.loc 20 490 9 view .LVU2522
 490:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9204              		.loc 20 490 22 is_stmt 0 view .LVU2523
 9205 00d6 D44B     		ldr	r3, .L646+4
 9206              	.LBB1902:
 9207              	.LBB1903:
  53:envFollow.h   **** 
  54:envFollow.h   ****     float GetEnv(float sample)
  55:envFollow.h   ****     {
  56:envFollow.h   ****         //remove average DC offset:
  57:envFollow.h   ****         avg = (w * sample) + ((1-w) * avg);
 9208              		.loc 12 57 16 view .LVU2524
 9209 00d8 D9ED042A 		vldr.32	s5, [r9, #16]
 9210              	.LBE1903:
 9211              	.LBE1902:
 490:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9212              		.loc 20 490 22 view .LVU2525
 9213 00dc D3ED004A 		vldr.32	s9, [r3]
 9214 00e0 D24B     		ldr	r3, .L646+8
 9215              	.LBB1915:
 9216              	.LBB1904:
 9217              		.loc 12 57 37 view .LVU2526
 9218 00e2 99ED006A 		vldr.32	s12, [r9]
 9219              	.LBE1904:
 9220              	.LBE1915:
 490:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9221              		.loc 20 490 22 view .LVU2527
 9222 00e6 93ED007A 		vldr.32	s14, [r3]
 493:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9223              		.loc 20 493 22 view .LVU2528
 9224 00ea D14B     		ldr	r3, .L646+12
 490:Veno-Echo.cpp ****             LNegFB = 0.0f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 300


 9225              		.loc 20 490 9 view .LVU2529
 9226 00ec F4EEC74A 		vcmpe.f32	s9, s14
 9227              	.LBB1916:
 9228              	.LBB1917:
 9229              		.loc 12 57 16 view .LVU2530
 9230 00f0 D6ED043A 		vldr.32	s7, [r6, #16]
  58:envFollow.h   ****         sample_noDC = sample - avg;
  59:envFollow.h   **** 
  60:envFollow.h   ****         //take absolute
  61:envFollow.h   ****         pos_sample = fabsf(sample_noDC);
  62:envFollow.h   ****         //return static_cast<int>(pos_sample);
  63:envFollow.h   **** 
  64:envFollow.h   ****         //remove ripple
  65:envFollow.h   ****         avg_env = (w_env * pos_sample) + ((1-w_env) * avg_env);
 9231              		.loc 12 65 20 view .LVU2531
 9232 00f4 96ED054A 		vldr.32	s8, [r6, #20]
 9233              		.loc 12 65 53 view .LVU2532
 9234 00f8 96ED032A 		vldr.32	s4, [r6, #12]
 9235              	.LBE1917:
 9236              	.LBE1916:
 490:Veno-Echo.cpp ****             LNegFB = 0.0f;
 9237              		.loc 20 490 9 view .LVU2533
 9238 00fc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9239              	.LBB1926:
 9240              	.LBB1905:
 9241              		.loc 12 65 20 view .LVU2534
 9242 0100 99ED053A 		vldr.32	s6, [r9, #20]
 9243              		.loc 12 65 53 view .LVU2535
 9244 0104 99ED031A 		vldr.32	s2, [r9, #12]
 9245              	.LBE1905:
 9246              	.LBE1926:
 509:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9247              		.loc 20 509 13 view .LVU2536
 9248 0108 DFEDCA1A 		vldr.32	s3, .L646+16
 9249 010c 58BF     		it	pl
 9250 010e 74EEC74A 		vsubpl.f32	s9, s9, s14
 493:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9251              		.loc 20 493 9 is_stmt 1 view .LVU2537
 493:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9252              		.loc 20 493 22 is_stmt 0 view .LVU2538
 9253 0112 93ED007A 		vldr.32	s14, [r3]
 9254 0116 C84B     		ldr	r3, .L646+20
 9255 0118 D3ED006A 		vldr.32	s13, [r3]
 496:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 9256              		.loc 20 496 15 view .LVU2539
 9257 011c 67EEA44A 		vmul.f32	s9, s15, s9
 9258              	.LBB1927:
 9259              	.LBB1918:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9260              		.loc 12 57 37 view .LVU2540
 9261 0120 D6ED007A 		vldr.32	s15, [r6]
 9262              	.LBE1918:
 9263              	.LBE1927:
 493:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9264              		.loc 20 493 9 view .LVU2541
 9265 0124 B4EEE67A 		vcmpe.f32	s14, s13
 500:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 301


 9266              		.loc 20 500 36 view .LVU2542
 9267 0128 C44B     		ldr	r3, .L646+24
 493:Veno-Echo.cpp ****             RNegFB = 0.0f;
 9268              		.loc 20 493 9 view .LVU2543
 9269 012a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9270 012e 58BF     		it	pl
 9271 0130 37EE667A 		vsubpl.f32	s14, s14, s13
 496:Veno-Echo.cpp ****         float feedbackSignalR{ (feedbackR - RNegFB)  * delaySignal_R };
 9272              		.loc 20 496 9 is_stmt 1 view .LVU2544
 9273              	.LVL567:
 497:Veno-Echo.cpp **** 
 9274              		.loc 20 497 9 view .LVU2545
 500:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9275              		.loc 20 500 36 is_stmt 0 view .LVU2546
 9276 0134 F7EE006A 		vmov.f32	s13, #1.0e+0
 497:Veno-Echo.cpp **** 
 9277              		.loc 20 497 15 view .LVU2547
 9278 0138 20EE070A 		vmul.f32	s0, s0, s14
 9279              	.LVL568:
 500:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9280              		.loc 20 500 9 is_stmt 1 view .LVU2548
 9281              	.LBB1928:
 9282              	.LBB1906:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9283              		.loc 12 57 33 is_stmt 0 view .LVU2549
 9284 013c 36EEE25A 		vsub.f32	s10, s13, s5
 9285              	.LBE1906:
 9286              	.LBE1928:
 9287              	.LBB1929:
 9288              	.LBB1919:
 9289 0140 76EEE35A 		vsub.f32	s11, s13, s7
 9290              	.LBE1919:
 9291              	.LBE1929:
 9292              	.LBB1930:
 9293              	.LBB1907:
 9294              		.loc 12 65 45 view .LVU2550
 9295 0144 36EEC37A 		vsub.f32	s14, s13, s6
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9296              		.loc 12 57 37 view .LVU2551
 9297 0148 25EE065A 		vmul.f32	s10, s10, s12
 9298              	.LBE1907:
 9299              	.LBE1930:
 500:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9300              		.loc 20 500 36 view .LVU2552
 9301 014c 93ED006A 		vldr.32	s12, [r3]
 9302              	.LBB1931:
 9303              	.LBB1920:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9304              		.loc 12 57 37 view .LVU2553
 9305 0150 65EEA75A 		vmul.f32	s11, s11, s15
 9306              		.loc 12 65 45 view .LVU2554
 9307 0154 76EEC47A 		vsub.f32	s15, s13, s8
 9308              	.LBE1920:
 9309              	.LBE1931:
 9310              	.LBB1932:
 9311              	.LBB1908:
  57:envFollow.h   ****         sample_noDC = sample - avg;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 302


 9312              		.loc 12 57 28 view .LVU2555
 9313 0158 A4EEA25A 		vfma.f32	s10, s9, s5
 9314              	.LBE1908:
 9315              	.LBE1932:
 9316              	.LBB1933:
 9317              	.LBB1921:
 9318 015c E0EE235A 		vfma.f32	s11, s0, s7
 9319              		.loc 12 65 53 view .LVU2556
 9320 0160 67EE827A 		vmul.f32	s15, s15, s4
 9321              	.LBE1921:
 9322              	.LBE1933:
 9323              	.LBB1934:
 9324              	.LBB1909:
 9325 0164 27EE017A 		vmul.f32	s14, s14, s2
 9326              	.LBE1909:
 9327              	.LBE1934:
 500:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9328              		.loc 20 500 36 view .LVU2557
 9329 0168 76EEC66A 		vsub.f32	s13, s13, s12
 9330              	.LBB1935:
 9331              	.LBB1910:
  58:envFollow.h   **** 
 9332              		.loc 12 58 30 view .LVU2558
 9333 016c 34EEC52A 		vsub.f32	s4, s9, s10
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9334              		.loc 12 57 13 view .LVU2559
 9335 0170 89ED005A 		vstr.32	s10, [r9]
 9336              	.LBE1910:
 9337              	.LBE1935:
 9338              	.LBB1936:
 9339              	.LBB1922:
  58:envFollow.h   **** 
 9340              		.loc 12 58 30 view .LVU2560
 9341 0174 70EE652A 		vsub.f32	s5, s0, s11
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9342              		.loc 12 57 13 view .LVU2561
 9343 0178 C6ED005A 		vstr.32	s11, [r6]
 9344              	.LBE1922:
 9345              	.LBE1936:
 500:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9346              		.loc 20 500 89 view .LVU2562
 9347 017c 66EE005A 		vmul.f32	s11, s12, s0
 9348              	.LBB1937:
 9349              	.LBB1911:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9350              		.loc 12 61 27 view .LVU2563
 9351 0180 F0EEC23A 		vabs.f32	s7, s4
  58:envFollow.h   **** 
 9352              		.loc 12 58 21 view .LVU2564
 9353 0184 89ED022A 		vstr.32	s4, [r9, #8]
 9354              	.LBE1911:
 9355              	.LBE1937:
 9356              	.LBB1938:
 9357              	.LBB1923:
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9358              		.loc 12 61 27 view .LVU2565
 9359 0188 B0EEE25A 		vabs.f32	s10, s5
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 303


  58:envFollow.h   **** 
 9360              		.loc 12 58 21 view .LVU2566
 9361 018c C6ED022A 		vstr.32	s5, [r6, #8]
 9362              	.LBE1923:
 9363              	.LBE1938:
 501:Veno-Echo.cpp **** 
 9364              		.loc 20 501 89 view .LVU2567
 9365 0190 26EE246A 		vmul.f32	s12, s12, s9
 9366              	.LBB1939:
 9367              	.LBB1912:
 9368              		.loc 12 65 40 view .LVU2568
 9369 0194 A3EE837A 		vfma.f32	s14, s7, s6
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9370              		.loc 12 61 20 view .LVU2569
 9371 0198 C9ED013A 		vstr.32	s7, [r9, #4]
 9372              	.LBE1912:
 9373              	.LBE1939:
 9374              	.LBB1940:
 9375              	.LBB1924:
 9376              		.loc 12 65 40 view .LVU2570
 9377 019c E5EE047A 		vfma.f32	s15, s10, s8
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9378              		.loc 12 61 20 view .LVU2571
 9379 01a0 86ED015A 		vstr.32	s10, [r6, #4]
 9380              	.LBE1924:
 9381              	.LBE1940:
 500:Veno-Echo.cpp ****         float feedbackSignalRL{((1 - crossfeedback) * feedbackSignalR) + (crossfeedback * feedbackS
 9382              		.loc 20 500 15 view .LVU2572
 9383 01a4 E6EEA45A 		vfma.f32	s11, s13, s9
 9384              	.LVL569:
 501:Veno-Echo.cpp **** 
 9385              		.loc 20 501 9 is_stmt 1 view .LVU2573
 501:Veno-Echo.cpp **** 
 9386              		.loc 20 501 15 is_stmt 0 view .LVU2574
 9387 01a8 A6EE806A 		vfma.f32	s12, s13, s0
 9388              	.LVL570:
 505:Veno-Echo.cpp ****         float EnvR{RightEnv.GetEnv(feedbackSignalR)};  
 9389              		.loc 20 505 9 is_stmt 1 view .LVU2575
 9390              	.LBB1941:
 9391              	.LBI1902:
  54:envFollow.h   ****     {
 9392              		.loc 12 54 11 view .LVU2576
 9393              	.LBB1913:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9394              		.loc 12 57 9 view .LVU2577
  58:envFollow.h   **** 
 9395              		.loc 12 58 9 view .LVU2578
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9396              		.loc 12 61 9 view .LVU2579
 9397              		.loc 12 65 9 view .LVU2580
 9398              	.LBE1913:
 9399              	.LBE1941:
 509:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9400              		.loc 20 509 13 is_stmt 0 view .LVU2581
 9401 01ac B4EEE17A 		vcmpe.f32	s14, s3
 9402              	.LBB1942:
 9403              	.LBB1914:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 304


 9404              		.loc 12 65 17 view .LVU2582
 9405 01b0 89ED037A 		vstr.32	s14, [r9, #12]
  66:envFollow.h   **** 
  67:envFollow.h   ****         return avg_env;
 9406              		.loc 12 67 9 is_stmt 1 view .LVU2583
 9407              	.LVL571:
 9408              		.loc 12 67 9 is_stmt 0 view .LVU2584
 9409              	.LBE1914:
 9410              	.LBE1942:
 506:Veno-Echo.cpp **** 
 9411              		.loc 20 506 9 is_stmt 1 view .LVU2585
 9412              	.LBB1943:
 9413              	.LBI1916:
  54:envFollow.h   ****     {
 9414              		.loc 12 54 11 view .LVU2586
 9415              	.LBB1925:
  57:envFollow.h   ****         sample_noDC = sample - avg;
 9416              		.loc 12 57 9 view .LVU2587
  58:envFollow.h   **** 
 9417              		.loc 12 58 9 view .LVU2588
  61:envFollow.h   ****         //return static_cast<int>(pos_sample);
 9418              		.loc 12 61 9 view .LVU2589
  65:envFollow.h   **** 
 9419              		.loc 12 65 9 view .LVU2590
  65:envFollow.h   **** 
 9420              		.loc 12 65 17 is_stmt 0 view .LVU2591
 9421 01b4 C6ED037A 		vstr.32	s15, [r6, #12]
 9422              		.loc 12 67 9 is_stmt 1 view .LVU2592
 9423              	.LVL572:
 9424              		.loc 12 67 9 is_stmt 0 view .LVU2593
 9425              	.LBE1925:
 9426              	.LBE1943:
 509:Veno-Echo.cpp ****                 LNegFB = (EnvL - NegFBOffset) * NegFBCoeff;
 9427              		.loc 20 509 13 is_stmt 1 view .LVU2594
 9428 01b8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9429 01bc C0F2E683 		blt	.L632
 510:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9430              		.loc 20 510 17 view .LVU2595
 510:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9431              		.loc 20 510 32 is_stmt 0 view .LVU2596
 9432 01c0 37EE617A 		vsub.f32	s14, s14, s3
 9433              	.LVL573:
 510:Veno-Echo.cpp ****             //else set negative feedback factor to zero
 9434              		.loc 20 510 47 view .LVU2597
 9435 01c4 F0EE086A 		vmov.f32	s13, #3.0e+0
 9436 01c8 27EE267A 		vmul.f32	s14, s14, s13
 9437              	.L552:
 514:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 9438              		.loc 20 514 13 view .LVU2598
 9439 01cc DFED996A 		vldr.32	s13, .L646+16
 9440 01d0 964B     		ldr	r3, .L646+8
 9441 01d2 F4EEE67A 		vcmpe.f32	s15, s13
 9442 01d6 83ED007A 		vstr.32	s14, [r3]
 514:Veno-Echo.cpp ****                 RNegFB = (EnvR - NegFBOffset) * NegFBCoeff;
 9443              		.loc 20 514 13 is_stmt 1 view .LVU2599
 9444 01da F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9445 01de C0F2D283 		blt	.L633
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 305


 515:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9446              		.loc 20 515 17 view .LVU2600
 515:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9447              		.loc 20 515 32 is_stmt 0 view .LVU2601
 9448 01e2 77EEE67A 		vsub.f32	s15, s15, s13
 9449              	.LVL574:
 515:Veno-Echo.cpp ****             else RNegFB = 0.0;
 9450              		.loc 20 515 47 view .LVU2602
 9451 01e6 B0EE087A 		vmov.f32	s14, #3.0e+0
 9452 01ea 67EE877A 		vmul.f32	s15, s15, s14
 9453              	.L554:
 9454 01ee 924B     		ldr	r3, .L646+20
 519:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 9455              		.loc 20 519 42 view .LVU2603
 9456 01f0 78EEA58A 		vadd.f32	s17, s17, s11
 9457              	.LVL575:
 520:Veno-Echo.cpp ****  
 9458              		.loc 20 520 42 view .LVU2604
 9459 01f4 38EE066A 		vadd.f32	s12, s16, s12
 9460              	.LVL576:
 520:Veno-Echo.cpp ****  
 9461              		.loc 20 520 42 view .LVU2605
 9462 01f8 C3ED007A 		vstr.32	s15, [r3]
 519:Veno-Echo.cpp ****         float combinedR{feedbackSignalRL + FwdRevSignalRXFade};
 9463              		.loc 20 519 9 is_stmt 1 view .LVU2606
 520:Veno-Echo.cpp ****  
 9464              		.loc 20 520 9 view .LVU2607
 523:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 9465              		.loc 20 523 9 view .LVU2608
 9466              	.LVL577:
 9467              	.LBB1944:
 9468              	.LBI1944:
2001:Veno-Echo.cpp **** {
 9469              		.loc 20 2001 7 view .LVU2609
 9470              	.LBB1945:
2003:Veno-Echo.cpp ****     if (input > limit)
 9471              		.loc 20 2003 5 view .LVU2610
2004:Veno-Echo.cpp ****         returnval = limit;
 9472              		.loc 20 2004 5 view .LVU2611
 9473 01fc F0EE007A 		vmov.f32	s15, #2.0e+0
 9474 0200 F4EEE78A 		vcmpe.f32	s17, s15
 9475 0204 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9476 0208 00F35F84 		bgt	.L586
2006:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9477              		.loc 20 2006 10 view .LVU2612
 9478 020c F8EE007A 		vmov.f32	s15, #-2.0e+0
2007:Veno-Echo.cpp ****     else
 9479              		.loc 20 2007 19 is_stmt 0 view .LVU2613
 9480 0210 F4EE678A 		vcmp.f32	s17, s15
 9481 0214 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9482 0218 48BF     		it	mi
 9483 021a F0EE678A 		vmovmi.f32	s17, s15
 9484              	.LVL578:
 9485              	.L556:
2011:Veno-Echo.cpp **** }
 9486              		.loc 20 2011 5 is_stmt 1 view .LVU2614
2011:Veno-Echo.cpp **** }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 306


 9487              		.loc 20 2011 5 is_stmt 0 view .LVU2615
 9488              	.LBE1945:
 9489              	.LBE1944:
 9490              	.LBB1947:
 9491              	.LBB1948:
2004:Veno-Echo.cpp ****         returnval = limit;
 9492              		.loc 20 2004 5 view .LVU2616
 9493 021e F0EE007A 		vmov.f32	s15, #2.0e+0
 9494              	.LBE1948:
 9495              	.LBE1947:
 523:Veno-Echo.cpp ****         combinedR = HardLimit(combinedR,AudioLimit);
 9496              		.loc 20 523 19 view .LVU2617
 9497 0222 CDED0E8A 		vstr.32	s17, [sp, #56]
 524:Veno-Echo.cpp **** 
 9498              		.loc 20 524 9 is_stmt 1 view .LVU2618
 9499              	.LVL579:
 9500              	.LBB1951:
 9501              	.LBI1947:
2001:Veno-Echo.cpp **** {
 9502              		.loc 20 2001 7 view .LVU2619
 9503              	.LBB1949:
2003:Veno-Echo.cpp ****     if (input > limit)
 9504              		.loc 20 2003 5 view .LVU2620
2004:Veno-Echo.cpp ****         returnval = limit;
 9505              		.loc 20 2004 5 view .LVU2621
 9506 0226 B4EEE76A 		vcmpe.f32	s12, s15
 9507 022a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9508 022e 00F34884 		bgt	.L587
2006:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9509              		.loc 20 2006 10 view .LVU2622
 9510 0232 F8EE007A 		vmov.f32	s15, #-2.0e+0
2007:Veno-Echo.cpp ****     else
 9511              		.loc 20 2007 19 is_stmt 0 view .LVU2623
 9512 0236 B4EE676A 		vcmp.f32	s12, s15
 9513 023a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9514 023e 48BF     		it	mi
 9515 0240 B0EE676A 		vmovmi.f32	s12, s15
 9516              	.LVL580:
 9517              	.L558:
2011:Veno-Echo.cpp **** }
 9518              		.loc 20 2011 5 is_stmt 1 view .LVU2624
2011:Veno-Echo.cpp **** }
 9519              		.loc 20 2011 5 is_stmt 0 view .LVU2625
 9520              	.LBE1949:
 9521              	.LBE1951:
 526:Veno-Echo.cpp ****         delayR.Write( combinedR );
 9522              		.loc 20 526 21 view .LVU2626
 9523 0244 0EA9     		add	r1, sp, #56
 9524 0246 7E48     		ldr	r0, .L646+28
 524:Veno-Echo.cpp **** 
 9525              		.loc 20 524 19 view .LVU2627
 9526 0248 8DED0F6A 		vstr.32	s12, [sp, #60]
 526:Veno-Echo.cpp ****         delayR.Write( combinedR );
 9527              		.loc 20 526 9 is_stmt 1 view .LVU2628
 526:Veno-Echo.cpp ****         delayR.Write( combinedR );
 9528              		.loc 20 526 21 is_stmt 0 view .LVU2629
 9529 024c FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 307


 9530              	.LVL581:
 527:Veno-Echo.cpp **** 
 9531              		.loc 20 527 9 is_stmt 1 view .LVU2630
 527:Veno-Echo.cpp **** 
 9532              		.loc 20 527 21 is_stmt 0 view .LVU2631
 9533 0250 0FA9     		add	r1, sp, #60
 9534 0252 7C48     		ldr	r0, .L646+32
 9535 0254 FFF7FEFF 		bl	_ZN10DelayMulti5WriteERKf
 9536              	.LVL582:
 530:Veno-Echo.cpp ****         float mixR;
 9537              		.loc 20 530 9 is_stmt 1 view .LVU2632
 531:Veno-Echo.cpp **** 
 9538              		.loc 20 531 9 view .LVU2633
 533:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 9539              		.loc 20 533 9 view .LVU2634
 533:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 9540              		.loc 20 533 53 is_stmt 0 view .LVU2635
 9541 0258 0DAA     		add	r2, sp, #52
 9542 025a 0CA9     		add	r1, sp, #48
 9543 025c 7A48     		ldr	r0, .L646+36
 9544 025e FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9545              	.LVL583:
 534:Veno-Echo.cpp **** 
 9546              		.loc 20 534 53 view .LVU2636
 9547 0262 0CAA     		add	r2, sp, #48
 9548 0264 0DA9     		add	r1, sp, #52
 9549 0266 7848     		ldr	r0, .L646+36
 533:Veno-Echo.cpp ****         float delaySignal_R_SUM = WidthXfade.Process(delaySignal_R,delaySignal_L);
 9550              		.loc 20 533 81 view .LVU2637
 9551 0268 8DED100A 		vstr.32	s0, [sp, #64]
 534:Veno-Echo.cpp **** 
 9552              		.loc 20 534 9 is_stmt 1 view .LVU2638
 534:Veno-Echo.cpp **** 
 9553              		.loc 20 534 53 is_stmt 0 view .LVU2639
 9554 026c FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 9555              	.LVL584:
 9556              	.LBB1952:
 9557              	.LBB1953:
2004:Veno-Echo.cpp ****         returnval = limit;
 9558              		.loc 20 2004 5 view .LVU2640
 9559 0270 B0EE007A 		vmov.f32	s14, #2.0e+0
 9560              	.LBE1953:
 9561              	.LBE1952:
 537:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 9562              		.loc 20 537 38 view .LVU2641
 9563 0274 DDED107A 		vldr.32	s15, [sp, #64]
 537:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 9564              		.loc 20 537 9 is_stmt 1 view .LVU2642
 9565              	.LVL585:
 9566              	.LBB1956:
 9567              	.LBI1952:
2001:Veno-Echo.cpp **** {
 9568              		.loc 20 2001 7 view .LVU2643
 9569              	.LBB1954:
2003:Veno-Echo.cpp ****     if (input > limit)
 9570              		.loc 20 2003 5 view .LVU2644
2004:Veno-Echo.cpp ****         returnval = limit;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 308


 9571              		.loc 20 2004 5 view .LVU2645
 9572 0278 F4EEC77A 		vcmpe.f32	s15, s14
 9573 027c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9574 0280 00F32784 		bgt	.L588
2006:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9575              		.loc 20 2006 10 view .LVU2646
 9576 0284 B8EE007A 		vmov.f32	s14, #-2.0e+0
2007:Veno-Echo.cpp ****     else
 9577              		.loc 20 2007 19 is_stmt 0 view .LVU2647
 9578 0288 F4EE477A 		vcmp.f32	s15, s14
 9579 028c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9580 0290 48BF     		it	mi
 9581 0292 F0EE477A 		vmovmi.f32	s15, s14
 9582              	.LVL586:
 9583              	.L560:
2011:Veno-Echo.cpp **** }
 9584              		.loc 20 2011 5 is_stmt 1 view .LVU2648
2011:Veno-Echo.cpp **** }
 9585              		.loc 20 2011 5 is_stmt 0 view .LVU2649
 9586              	.LBE1954:
 9587              	.LBE1956:
 9588              	.LBB1957:
 9589              	.LBB1958:
2004:Veno-Echo.cpp ****         returnval = limit;
 9590              		.loc 20 2004 5 view .LVU2650
 9591 0296 B0EE007A 		vmov.f32	s14, #2.0e+0
 9592              	.LBE1958:
 9593              	.LBE1957:
 537:Veno-Echo.cpp ****         delaySignal_R_SUM = HardLimit(delaySignal_R_SUM,AudioLimit);
 9594              		.loc 20 537 27 view .LVU2651
 9595 029a CDED107A 		vstr.32	s15, [sp, #64]
 538:Veno-Echo.cpp **** 
 9596              		.loc 20 538 9 is_stmt 1 view .LVU2652
 9597              	.LVL587:
 9598              	.LBB1962:
 9599              	.LBI1957:
2001:Veno-Echo.cpp **** {
 9600              		.loc 20 2001 7 view .LVU2653
 9601              	.LBB1959:
2003:Veno-Echo.cpp ****     if (input > limit)
 9602              		.loc 20 2003 5 view .LVU2654
2004:Veno-Echo.cpp ****         returnval = limit;
 9603              		.loc 20 2004 5 view .LVU2655
 9604 029e B4EEC70A 		vcmpe.f32	s0, s14
 9605 02a2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9606 02a6 00F3D582 		bgt	.L589
2006:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 9607              		.loc 20 2006 10 view .LVU2656
 9608 02aa B8EE007A 		vmov.f32	s14, #-2.0e+0
 9609              	.LBE1959:
 9610              	.LBE1962:
 9611              	.LBB1963:
 540:Veno-Echo.cpp **** {
 9612              		.loc 20 540 1 is_stmt 0 view .LVU2657
 9613 02ae 5D4B     		ldr	r3, .L646
 9614 02b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9615              	.LBE1963:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 309


 9616              	.LBB1986:
 9617              	.LBB1960:
2007:Veno-Echo.cpp ****     else
 9618              		.loc 20 2007 19 view .LVU2658
 9619 02b2 B4EE470A 		vcmp.f32	s0, s14
 9620 02b6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9621 02ba 48BF     		it	mi
 9622 02bc B0EE470A 		vmovmi.f32	s0, s14
 9623              	.LVL588:
2011:Veno-Echo.cpp **** }
 9624              		.loc 20 2011 5 is_stmt 1 view .LVU2659
2011:Veno-Echo.cpp **** }
 9625              		.loc 20 2011 5 is_stmt 0 view .LVU2660
 9626              	.LBE1960:
 9627              	.LBE1986:
 538:Veno-Echo.cpp **** 
 9628              		.loc 20 538 27 view .LVU2661
 9629 02c0 8DED110A 		vstr.32	s0, [sp, #68]
 540:Veno-Echo.cpp **** {
 9630              		.loc 20 540 1 is_stmt 1 view .LVU2662
 9631              	.LBB1987:
 9632 02c4 002B     		cmp	r3, #0
 9633 02c6 40F0CE82 		bne	.L641
 9634              	.LVL589:
 9635              	.L564:
 540:Veno-Echo.cpp **** {
 9636              		.loc 20 540 1 is_stmt 0 view .LVU2663
 9637              	.LBE1987:
 581:Veno-Echo.cpp ****         {
 9638              		.loc 20 581 9 is_stmt 1 view .LVU2664
 581:Veno-Echo.cpp ****         {
 9639              		.loc 20 581 19 is_stmt 0 view .LVU2665
 9640 02ca 604B     		ldr	r3, .L646+40
 581:Veno-Echo.cpp ****         {
 9641              		.loc 20 581 9 view .LVU2666
 9642 02cc F6EE006A 		vmov.f32	s13, #5.0e-1
 581:Veno-Echo.cpp ****         {
 9643              		.loc 20 581 19 view .LVU2667
 9644 02d0 93ED007A 		vldr.32	s14, [r3]
 581:Veno-Echo.cpp ****         {
 9645              		.loc 20 581 9 view .LVU2668
 9646 02d4 B4EEE67A 		vcmpe.f32	s14, s13
 9647 02d8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 9648 02dc 40F19182 		bpl	.L634
 583:Veno-Echo.cpp ****             mixR = Right_In + (2.0f * drywet * delaySignal_R_SUM);
 9649              		.loc 20 583 13 is_stmt 1 view .LVU2669
 583:Veno-Echo.cpp ****             mixR = Right_In + (2.0f * drywet * delaySignal_R_SUM);
 9650              		.loc 20 583 36 is_stmt 0 view .LVU2670
 9651 02e0 37EE077A 		vadd.f32	s14, s14, s14
 583:Veno-Echo.cpp ****             mixR = Right_In + (2.0f * drywet * delaySignal_R_SUM);
 9652              		.loc 20 583 18 view .LVU2671
 9653 02e4 9DED086A 		vldr.32	s12, [sp, #32]
 584:Veno-Echo.cpp ****         }
 9654              		.loc 20 584 18 view .LVU2672
 9655 02e8 DDED096A 		vldr.32	s13, [sp, #36]
 583:Veno-Echo.cpp ****             mixR = Right_In + (2.0f * drywet * delaySignal_R_SUM);
 9656              		.loc 20 583 18 view .LVU2673
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 310


 9657 02ec A7EE276A 		vfma.f32	s12, s14, s15
 584:Veno-Echo.cpp ****         }
 9658              		.loc 20 584 18 view .LVU2674
 9659 02f0 E7EE006A 		vfma.f32	s13, s14, s0
 583:Veno-Echo.cpp ****             mixR = Right_In + (2.0f * drywet * delaySignal_R_SUM);
 9660              		.loc 20 583 18 view .LVU2675
 9661 02f4 F0EE467A 		vmov.f32	s15, s12
 9662              	.LVL590:
 584:Veno-Echo.cpp ****         }
 9663              		.loc 20 584 13 is_stmt 1 view .LVU2676
 584:Veno-Echo.cpp ****         }
 9664              		.loc 20 584 18 is_stmt 0 view .LVU2677
 9665 02f8 B0EE660A 		vmov.f32	s0, s13
 9666              	.LVL591:
 9667              	.L570:
 598:Veno-Echo.cpp ****         {
 9668              		.loc 20 598 9 is_stmt 1 view .LVU2678
 9669 02fc 544B     		ldr	r3, .L646+44
 9670 02fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9671 0300 002B     		cmp	r3, #0
 9672 0302 00F07382 		beq	.L573
 600:Veno-Echo.cpp ****             out[1][i] = 0.0f;
 9673              		.loc 20 600 13 view .LVU2679
 600:Veno-Echo.cpp ****             out[1][i] = 0.0f;
 9674              		.loc 20 600 23 is_stmt 0 view .LVU2680
 9675 0306 079B     		ldr	r3, [sp, #28]
 9676 0308 0021     		movs	r1, #0
 9677 030a 0298     		ldr	r0, [sp, #8]
 9678 030c 1A68     		ldr	r2, [r3]
 601:Veno-Echo.cpp ****         }
 9679              		.loc 20 601 23 view .LVU2681
 9680 030e 5B68     		ldr	r3, [r3, #4]
 600:Veno-Echo.cpp ****             out[1][i] = 0.0f;
 9681              		.loc 20 600 23 view .LVU2682
 9682 0310 0244     		add	r2, r2, r0
 601:Veno-Echo.cpp ****         }
 9683              		.loc 20 601 23 view .LVU2683
 9684 0312 0344     		add	r3, r3, r0
 600:Veno-Echo.cpp ****             out[1][i] = 0.0f;
 9685              		.loc 20 600 23 view .LVU2684
 9686 0314 1160     		str	r1, [r2]	@ float
 601:Veno-Echo.cpp ****         }
 9687              		.loc 20 601 13 is_stmt 1 view .LVU2685
 601:Veno-Echo.cpp ****         }
 9688              		.loc 20 601 23 is_stmt 0 view .LVU2686
 9689 0316 1960     		str	r1, [r3]	@ float
 9690              	.L574:
 9691              	.LBE1867:
 383:Veno-Echo.cpp ****     {   
 9692              		.loc 20 383 5 is_stmt 1 discriminator 2 view .LVU2687
 9693 0318 019B     		ldr	r3, [sp, #4]
 383:Veno-Echo.cpp ****     {   
 9694              		.loc 20 383 25 is_stmt 0 discriminator 2 view .LVU2688
 9695 031a 059A     		ldr	r2, [sp, #20]
 383:Veno-Echo.cpp ****     {   
 9696              		.loc 20 383 5 discriminator 2 view .LVU2689
 9697 031c 0133     		adds	r3, r3, #1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 311


 383:Veno-Echo.cpp ****     {   
 9698              		.loc 20 383 25 discriminator 2 view .LVU2690
 9699 031e 9A42     		cmp	r2, r3
 383:Veno-Echo.cpp ****     {   
 9700              		.loc 20 383 5 discriminator 2 view .LVU2691
 9701 0320 0193     		str	r3, [sp, #4]
 9702              	.LVL592:
 383:Veno-Echo.cpp ****     {   
 9703              		.loc 20 383 25 is_stmt 1 discriminator 2 view .LVU2692
 9704 0322 00F0F783 		beq	.L503
 9705              	.LVL593:
 9706              	.L521:
 9707              	.LBB2256:
 385:Veno-Echo.cpp ****         Update_Mod();
 9708              		.loc 20 385 9 view .LVU2693
 385:Veno-Echo.cpp ****         Update_Mod();
 9709              		.loc 20 385 20 is_stmt 0 view .LVU2694
 9710 0326 FFF7FEFF 		bl	_Z11UpdateClockv
 9711              	.LVL594:
 386:Veno-Echo.cpp **** 
 9712              		.loc 20 386 9 is_stmt 1 view .LVU2695
 9713              	.LBB1988:
 9714              	.LBB1989:
 9715              	.LBB1990:
 9716              	.LBB1991:
  74:delayline_reverse.h **** 
  75:delayline_reverse.h ****     /** sets the delay time in samples
  76:delayline_reverse.h ****         If a float is passed in, a fractional component will be calculated for interpolating the de
  77:delayline_reverse.h ****     */
  78:delayline_reverse.h ****     inline void SetDelay1(float delay)
  79:delayline_reverse.h ****     {
  80:delayline_reverse.h ****         int32_t int_delay = static_cast<int32_t>(delay);
  81:delayline_reverse.h ****         frac1_             = delay - static_cast<float>(int_delay);
  82:delayline_reverse.h ****         delay1_ = static_cast<size_t>(int_delay) < max_size ? int_delay
  83:delayline_reverse.h ****                                                            : max_size - 1;
  84:delayline_reverse.h ****     }
  85:delayline_reverse.h **** 
  86:delayline_reverse.h ****     /** writes the sample of type T to the delay line, and advances the write ptr
  87:delayline_reverse.h ****     */
  88:delayline_reverse.h ****     inline void Write(const T sample)
  89:delayline_reverse.h ****     {
  90:delayline_reverse.h ****         line_[write_ptr_] = sample;
  91:delayline_reverse.h ****         //advance write ptr in forward direction
  92:delayline_reverse.h ****         write_ptr_        = (write_ptr_ + 1 + max_size) % max_size; //increment forwards
  93:delayline_reverse.h ****         
  94:delayline_reverse.h ****         //increment head difference
  95:delayline_reverse.h ****         headDiff_        = (headDiff_ + 1 + delay1_) % delay1_;   
  96:delayline_reverse.h **** 
  97:delayline_reverse.h ****         //advance read ptrs in reverse direction
  98:delayline_reverse.h ****         read_ptr1_ = (read_ptr1_ - 1 + max_size) % max_size;
  99:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 100:delayline_reverse.h ****  
 101:delayline_reverse.h ****         if (headDiff_ > (delay1_ - fadetime - 1))  //start cross fade region
 102:delayline_reverse.h ****         {
 103:delayline_reverse.h ****             if(!fading_)
 104:delayline_reverse.h ****             {
 105:delayline_reverse.h ****                 fading_ = true; //start fading
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 312


 106:delayline_reverse.h ****                 
 107:delayline_reverse.h ****                 if(!playinghead_) 
 108:delayline_reverse.h ****                 {
 109:delayline_reverse.h ****                     //jump ptr2 to fadetime beyond write position
 110:delayline_reverse.h ****                     read_ptr2_ = write_ptr_ - 1;
 111:delayline_reverse.h ****                 }
 112:delayline_reverse.h ****     
 113:delayline_reverse.h ****                 else
 114:delayline_reverse.h ****                 {
 115:delayline_reverse.h ****                     //jump ptr1 to fadetime beyond write position
 116:delayline_reverse.h ****                     read_ptr1_ = write_ptr_ - 1; 
 117:delayline_reverse.h ****                 }
 118:delayline_reverse.h ****             }
 119:delayline_reverse.h **** 
 120:delayline_reverse.h ****             else
 121:delayline_reverse.h ****             {
 122:delayline_reverse.h ****                 //continue fading
 123:delayline_reverse.h ****             }
 124:delayline_reverse.h ****         }
 125:delayline_reverse.h **** 
 126:delayline_reverse.h ****         if(fading_)
 127:delayline_reverse.h ****         {
 128:delayline_reverse.h ****             if(!playinghead_)   //head1 playing
 129:delayline_reverse.h ****             {
 130:delayline_reverse.h ****                 fadepos_ = fadepos_ + (1.0f / (fadetime) ); //increment up to 1.
 131:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 132:delayline_reverse.h ****                 {
 133:delayline_reverse.h ****                     fadepos_ = 1.0f;
 134:delayline_reverse.h ****                     fading_ = false;    //stop fading
 135:delayline_reverse.h ****                     playinghead_ = true;
 136:delayline_reverse.h ****                 }
 137:delayline_reverse.h ****             }
 138:delayline_reverse.h **** 
 139:delayline_reverse.h ****             else    //head2 playing
 140:delayline_reverse.h ****             {
 141:delayline_reverse.h ****                 fadepos_ = fadepos_ - (1.0f / (fadetime) ); //increment down to 0
 142:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 143:delayline_reverse.h ****                 {
 144:delayline_reverse.h ****                     fadepos_ = 0.0f;
 145:delayline_reverse.h ****                     fading_ = false;    //stop fading
 146:delayline_reverse.h ****                     playinghead_ = false;
 147:delayline_reverse.h ****                 }
 148:delayline_reverse.h ****             }
 149:delayline_reverse.h ****         }
 150:delayline_reverse.h ****         else    //not fading
 151:delayline_reverse.h ****         {
 152:delayline_reverse.h ****         }
 153:delayline_reverse.h **** 
 154:delayline_reverse.h ****         
 155:delayline_reverse.h ****     }
 156:delayline_reverse.h **** 
 157:delayline_reverse.h ****     /** returns the next sample of type T in the delay line, interpolated if necessary.
 158:delayline_reverse.h ****     */
 159:delayline_reverse.h ****     inline const T ReadRev() const
 160:delayline_reverse.h ****     {
 161:delayline_reverse.h ****         T a1 = line_[read_ptr1_];
 162:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 313


 163:delayline_reverse.h **** 
 164:delayline_reverse.h ****         float read1 = a1;
 165:delayline_reverse.h ****         float read2 = a2;
 166:delayline_reverse.h **** 
 167:delayline_reverse.h ****         float scalar_1, scalar_2;
 168:delayline_reverse.h **** 
 169:delayline_reverse.h ****         //hann
 170:delayline_reverse.h ****         //scalar_1 = sinf(fadepos_ * ((float)M_PI * 0.5f));
 171:delayline_reverse.h ****         //scalar_2 = sinf((1.0f - fadepos_) * ((float)M_PI * 0.5f));
 172:delayline_reverse.h **** 
 173:delayline_reverse.h ****         //flattenned hann
 174:delayline_reverse.h ****         scalar_1 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*fadepos_)  +   (1.0f/16.0f)*s
 9717              		.loc 19 174 71 is_stmt 0 view .LVU2696
 9718 032a DFF89081 		ldr	r8, .L646+152
 9719              	.LBE1991:
 9720              	.LBE1990:
 9721              	.LBE1989:
 9722              	.LBE1988:
 386:Veno-Echo.cpp **** 
 9723              		.loc 20 386 19 view .LVU2697
 9724 032e FFF7FEFF 		bl	_Z10Update_Modv
 9725              	.LVL595:
 389:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9726              		.loc 20 389 9 is_stmt 1 view .LVU2698
 389:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9727              		.loc 20 389 51 is_stmt 0 view .LVU2699
 9728 0332 4848     		ldr	r0, .L646+48
 9729 0334 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9730              	.LVL596:
 9731 0338 0146     		mov	r1, r0
 9732 033a 4748     		ldr	r0, .L646+52
 9733              	.LBB2043:
 9734              	.LBB2026:
 9735              	.LBB2009:
 9736              	.LBB1992:
 175:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9737              		.loc 19 175 77 view .LVU2700
 9738 033c F7EE00AA 		vmov.f32	s21, #1.0e+0
 9739              	.LBE1992:
 9740              	.LBE2009:
 9741              	.LBE2026:
 9742              	.LBE2043:
 389:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9743              		.loc 20 389 51 view .LVU2701
 9744 0340 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9745              	.LVL597:
 390:Veno-Echo.cpp ****         
 9746              		.loc 20 390 51 view .LVU2702
 9747 0344 4548     		ldr	r0, .L646+56
 389:Veno-Echo.cpp ****         float FwdRevRXFadepos = FwdRevREnv.Process(Rev_R_sw.getState());
 9748              		.loc 20 389 51 view .LVU2703
 9749 0346 B0EE40CA 		vmov.f32	s24, s0
 9750              	.LVL598:
 390:Veno-Echo.cpp ****         
 9751              		.loc 20 390 9 is_stmt 1 view .LVU2704
 390:Veno-Echo.cpp ****         
 9752              		.loc 20 390 51 is_stmt 0 view .LVU2705
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 314


 9753 034a FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9754              	.LVL599:
 390:Veno-Echo.cpp ****         
 9755              		.loc 20 390 51 view .LVU2706
 9756 034e 0146     		mov	r1, r0
 9757 0350 4348     		ldr	r0, .L646+60
 9758 0352 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9759              	.LVL600:
 9760 0356 019C     		ldr	r4, [sp, #4]
 392:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9761              		.loc 20 392 44 view .LVU2707
 9762 0358 4248     		ldr	r0, .L646+64
 390:Veno-Echo.cpp ****         
 9763              		.loc 20 390 51 view .LVU2708
 9764 035a B0EE409A 		vmov.f32	s18, s0
 9765              	.LVL601:
 392:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9766              		.loc 20 392 9 is_stmt 1 view .LVU2709
 9767 035e A300     		lsls	r3, r4, #2
 9768              	.LBB2044:
 9769              	.LBB2027:
 9770              	.LBB2010:
 9771              	.LBB1993:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9772              		.loc 19 174 46 is_stmt 0 view .LVU2710
 9773 0360 9FED41AA 		vldr.32	s20, .L646+68
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9774              		.loc 19 174 103 view .LVU2711
 9775 0364 DFED419A 		vldr.32	s19, .L646+72
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9776              		.loc 19 174 82 view .LVU2712
 9777 0368 F6EE028A 		vmov.f32	s17, #5.625e-1
 9778 036c 0293     		str	r3, [sp, #8]
 9779              	.LBE1993:
 9780              	.LBE2010:
 9781              	.LBE2027:
 9782              	.LBE2044:
 392:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9783              		.loc 20 392 44 view .LVU2713
 9784 036e FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9785              	.LVL602:
 392:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9786              		.loc 20 392 44 view .LVU2714
 9787 0372 0146     		mov	r1, r0
 9788 0374 3E48     		ldr	r0, .L646+76
 9789 0376 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9790              	.LVL603:
 393:Veno-Echo.cpp ****         float Left_In = in[0][i];
 9791              		.loc 20 393 44 view .LVU2715
 9792 037a 3E48     		ldr	r0, .L646+80
 392:Veno-Echo.cpp ****         float LPFXFadepos = LPF_Env.Process(LPF_sw.getState());
 9793              		.loc 20 392 44 view .LVU2716
 9794 037c B0EE408A 		vmov.f32	s16, s0
 9795              	.LVL604:
 393:Veno-Echo.cpp ****         float Left_In = in[0][i];
 9796              		.loc 20 393 9 is_stmt 1 view .LVU2717
 393:Veno-Echo.cpp ****         float Left_In = in[0][i];
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 315


 9797              		.loc 20 393 44 is_stmt 0 view .LVU2718
 9798 0380 FFF7FEFF 		bl	_ZN9ButtonLED8getStateEv
 9799              	.LVL605:
 393:Veno-Echo.cpp ****         float Left_In = in[0][i];
 9800              		.loc 20 393 44 view .LVU2719
 9801 0384 0146     		mov	r1, r0
 9802 0386 3C48     		ldr	r0, .L646+84
 9803 0388 FFF7FEFF 		bl	_ZN7daisysp4Adsr7ProcessEb
 9804              	.LVL606:
 394:Veno-Echo.cpp ****         float Right_In = in[1][i];
 9805              		.loc 20 394 32 view .LVU2720
 9806 038c 0699     		ldr	r1, [sp, #24]
 418:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9807              		.loc 20 418 49 view .LVU2721
 9808 038e 3B4A     		ldr	r2, .L646+88
 393:Veno-Echo.cpp ****         float Left_In = in[0][i];
 9809              		.loc 20 393 44 view .LVU2722
 9810 0390 F0EE407A 		vmov.f32	s15, s0
 9811              	.LVL607:
 394:Veno-Echo.cpp ****         float Right_In = in[1][i];
 9812              		.loc 20 394 9 is_stmt 1 view .LVU2723
 394:Veno-Echo.cpp ****         float Right_In = in[1][i];
 9813              		.loc 20 394 32 is_stmt 0 view .LVU2724
 9814 0394 0B68     		ldr	r3, [r1]
 418:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 9815              		.loc 20 418 49 view .LVU2725
 9816 0396 1568     		ldr	r5, [r2]
 394:Veno-Echo.cpp ****         float Right_In = in[1][i];
 9817              		.loc 20 394 32 view .LVU2726
 9818 0398 03EB8402 		add	r2, r3, r4, lsl #2
 395:Veno-Echo.cpp **** 
 9819              		.loc 20 395 33 view .LVU2727
 9820 039c 4B68     		ldr	r3, [r1, #4]
 9821              	.LBB2045:
 9822              	.LBB2028:
 9823              	.LBB2011:
 9824              	.LBB1994:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9825              		.loc 19 174 71 view .LVU2728
 9826 039e 05EB0800 		add	r0, r5, r8
 162:delayline_reverse.h **** 
 9827              		.loc 19 162 23 view .LVU2729
 9828 03a2 EF68     		ldr	r7, [r5, #12]
 9829              	.LBE1994:
 9830              	.LBE2011:
 9831              	.LBE2028:
 9832              	.LBE2045:
 394:Veno-Echo.cpp ****         float Right_In = in[1][i];
 9833              		.loc 20 394 32 view .LVU2730
 9834 03a4 92ED00FA 		vldr.32	s30, [r2]
 395:Veno-Echo.cpp **** 
 9835              		.loc 20 395 33 view .LVU2731
 9836 03a8 03EB8403 		add	r3, r3, r4, lsl #2
 9837              	.LBB2046:
 9838              	.LBB2029:
 9839              	.LBB2012:
 9840              	.LBB1995:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 316


 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9841              		.loc 19 174 71 view .LVU2732
 9842 03ac 90ED00BA 		vldr.32	s22, [r0]
 162:delayline_reverse.h **** 
 9843              		.loc 19 162 11 view .LVU2733
 9844 03b0 05EB8702 		add	r2, r5, r7, lsl #2
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9845              		.loc 19 174 71 view .LVU2734
 9846 03b4 0490     		str	r0, [sp, #16]
 9847              	.LBE1995:
 9848              	.LBE2012:
 9849              	.LBE2029:
 9850              	.LBE2046:
 9851              	.LBB2047:
 9852              	.LBB2048:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9853              		.loc 11 60 42 view .LVU2735
 9854 03b6 3248     		ldr	r0, .L646+92
 9855              	.LBE2048:
 9856              	.LBE2047:
 9857              	.LBB2051:
 9858              	.LBB2030:
 9859              	.LBB2013:
 9860              	.LBB1996:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9861              		.loc 19 174 46 view .LVU2736
 9862 03b8 2BEE0A0A 		vmul.f32	s0, s22, s20
 9863              	.LVL608:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 9864              		.loc 19 174 46 view .LVU2737
 9865              	.LBE1996:
 9866              	.LBE2013:
 9867              	.LBE2030:
 9868              	.LBE2051:
 394:Veno-Echo.cpp ****         float Right_In = in[1][i];
 9869              		.loc 20 394 15 view .LVU2738
 9870 03bc 8DED08FA 		vstr.32	s30, [sp, #32]
 395:Veno-Echo.cpp **** 
 9871              		.loc 20 395 9 is_stmt 1 view .LVU2739
 9872              	.LBB2052:
 9873              	.LBB2031:
 9874              	.LBB2014:
 9875              	.LBB1997:
 9876              		.loc 19 175 77 is_stmt 0 view .LVU2740
 9877 03c0 7AEECBCA 		vsub.f32	s25, s21, s22
 9878              	.LBE1997:
 9879              	.LBE2014:
 9880              	.LBE2031:
 9881              	.LBE2052:
 395:Veno-Echo.cpp **** 
 9882              		.loc 20 395 33 view .LVU2741
 9883 03c4 D3ED00BA 		vldr.32	s23, [r3]
 9884              	.LBB2053:
 9885              	.LBB2049:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9886              		.loc 11 60 42 view .LVU2742
 9887 03c8 80ED00CA 		vstr.32	s24, [r0]
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 317


 9888              	.LBE2049:
 9889              	.LBE2053:
 9890              	.LBB2054:
 9891              	.LBB2055:
 9892 03cc 2D48     		ldr	r0, .L646+96
 9893              	.LBE2055:
 9894              	.LBE2054:
 411:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 9895              		.loc 20 411 27 view .LVU2743
 9896 03ce 2E4B     		ldr	r3, .L646+100
 9897              	.LBB2058:
 9898              	.LBB2056:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9899              		.loc 11 60 42 view .LVU2744
 9900 03d0 80ED009A 		vstr.32	s18, [r0]
 9901              	.LBE2056:
 9902              	.LBE2058:
 9903              	.LBB2059:
 9904              	.LBB2060:
 9905 03d4 2D48     		ldr	r0, .L646+104
 9906              	.LBE2060:
 9907              	.LBE2059:
 411:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 9908              		.loc 20 411 27 view .LVU2745
 9909 03d6 1B68     		ldr	r3, [r3]	@ float
 9910              	.LBB2063:
 9911              	.LBB2061:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9912              		.loc 11 60 42 view .LVU2746
 9913 03d8 80ED008A 		vstr.32	s16, [r0]
 9914              	.LBE2061:
 9915              	.LBE2063:
 9916              	.LBB2064:
 9917              	.LBB2065:
 9918 03dc 2C48     		ldr	r0, .L646+108
 9919              	.LBE2065:
 9920              	.LBE2064:
 9921              	.LBB2068:
 9922              	.LBB2032:
 9923              	.LBB2015:
 9924              	.LBB1998:
 162:delayline_reverse.h **** 
 9925              		.loc 19 162 11 view .LVU2747
 9926 03de 92ED06EA 		vldr.32	s28, [r2, #24]
 9927              	.LBE1998:
 9928              	.LBE2015:
 9929              	.LBE2032:
 9930              	.LBE2068:
 9931              	.LBB2069:
 9932              	.LBB2066:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 9933              		.loc 11 60 42 view .LVU2748
 9934 03e2 80ED008A 		vstr.32	s16, [r0]
 9935              	.LBE2066:
 9936              	.LBE2069:
 9937              	.LBB2070:
 9938              	.LBB2071:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 318


 9939 03e6 2B48     		ldr	r0, .L646+112
 9940              	.LBE2071:
 9941              	.LBE2070:
 9942              	.LBB2074:
 9943              	.LBB2075:
 9944 03e8 2B4A     		ldr	r2, .L646+116
 9945              	.LBE2075:
 9946              	.LBE2074:
 9947              	.LBB2078:
 9948              	.LBB2072:
 9949 03ea 80ED008A 		vstr.32	s16, [r0]
 9950              	.LBE2072:
 9951              	.LBE2078:
 9952              	.LBB2079:
 9953              	.LBB2080:
 9954 03ee 2B48     		ldr	r0, .L646+120
 9955              	.LBE2080:
 9956              	.LBE2079:
 9957              	.LBB2083:
 9958              	.LBB2076:
 9959 03f0 1360     		str	r3, [r2]	@ float
 9960              	.LBE2076:
 9961              	.LBE2083:
 9962              	.LBB2084:
 9963              	.LBB2081:
 9964 03f2 80ED008A 		vstr.32	s16, [r0]
 9965              	.LBE2081:
 9966              	.LBE2084:
 9967              	.LBB2085:
 9968              	.LBB2086:
 9969 03f6 2A48     		ldr	r0, .L646+124
 9970              	.LBE2086:
 9971              	.LBE2085:
 9972              	.LBB2089:
 9973              	.LBB2090:
 9974 03f8 2A4A     		ldr	r2, .L646+128
 9975              	.LBE2090:
 9976              	.LBE2089:
 9977              	.LBB2093:
 9978              	.LBB2087:
 9979 03fa C0ED007A 		vstr.32	s15, [r0]
 9980              	.LBE2087:
 9981              	.LBE2093:
 9982              	.LBB2094:
 9983              	.LBB2095:
 9984 03fe 2A48     		ldr	r0, .L646+132
 9985              	.LBE2095:
 9986              	.LBE2094:
 9987              	.LBB2098:
 9988              	.LBB2091:
 9989 0400 1360     		str	r3, [r2]	@ float
 9990              	.LBE2091:
 9991              	.LBE2098:
 9992              	.LBB2099:
 9993              	.LBB2096:
 9994 0402 C0ED007A 		vstr.32	s15, [r0]
 9995              	.LBE2096:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 319


 9996              	.LBE2099:
 9997              	.LBB2100:
 9998              	.LBB2101:
 9999 0406 294A     		ldr	r2, .L646+136
 10000              	.LBE2101:
 10001              	.LBE2100:
 10002              	.LBB2104:
 10003              	.LBB2105:
 10004 0408 2948     		ldr	r0, .L646+140
 10005              	.LBE2105:
 10006              	.LBE2104:
 10007              	.LBB2108:
 10008              	.LBB2033:
 10009              	.LBB2016:
 10010              	.LBB1999:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10011              		.loc 19 161 22 view .LVU2749
 10012 040a D5F808B0 		ldr	fp, [r5, #8]
 10013              	.LBE1999:
 10014              	.LBE2016:
 10015              	.LBE2033:
 10016              	.LBE2108:
 10017              	.LBB2109:
 10018              	.LBB2106:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10019              		.loc 11 60 42 view .LVU2750
 10020 040e C0ED007A 		vstr.32	s15, [r0]
 10021              	.LBE2106:
 10022              	.LBE2109:
 10023              	.LBB2110:
 10024              	.LBB2102:
 10025 0412 1360     		str	r3, [r2]	@ float
 10026              	.LBE2102:
 10027              	.LBE2110:
 10028              	.LBB2111:
 10029              	.LBB2034:
 10030              	.LBB2017:
 10031              	.LBB2000:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10032              		.loc 19 161 11 view .LVU2751
 10033 0414 05EB8B01 		add	r1, r5, fp, lsl #2
 10034              	.LBE2000:
 10035              	.LBE2017:
 10036              	.LBE2034:
 10037              	.LBE2111:
 10038              	.LBB2112:
 10039              	.LBB2113:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10040              		.loc 11 60 42 view .LVU2752
 10041 0418 2648     		ldr	r0, .L646+144
 10042              	.LBE2113:
 10043              	.LBE2112:
 10044              	.LBB2116:
 10045              	.LBB2117:
 10046 041a 274A     		ldr	r2, .L646+148
 10047              	.LBE2117:
 10048              	.LBE2116:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 320


 10049              	.LBB2120:
 10050              	.LBB2114:
 10051 041c C0ED007A 		vstr.32	s15, [r0]
 10052 0420 50E0     		b	.L647
 10053              	.L648:
 10054 0422 00BF     		.align	2
 10055              	.L646:
 10056 0424 00000000 		.word	.LANCHOR83
 10057 0428 00000000 		.word	.LANCHOR32
 10058 042c 00000000 		.word	.LANCHOR127
 10059 0430 00000000 		.word	.LANCHOR44
 10060 0434 CDCCCC3E 		.word	1053609165
 10061 0438 00000000 		.word	.LANCHOR128
 10062 043c 00000000 		.word	.LANCHOR72
 10063 0440 00000000 		.word	.LANCHOR0
 10064 0444 00000000 		.word	.LANCHOR1
 10065 0448 00000000 		.word	.LANCHOR65
 10066 044c 00000000 		.word	.LANCHOR56
 10067 0450 00000000 		.word	.LANCHOR112
 10068 0454 00000000 		.word	.LANCHOR92
 10069 0458 00000000 		.word	.LANCHOR101
 10070 045c 00000000 		.word	.LANCHOR93
 10071 0460 00000000 		.word	.LANCHOR102
 10072 0464 00000000 		.word	.LANCHOR95
 10073 0468 DB0FC93F 		.word	1070141403
 10074 046c E4CB9640 		.word	1083624420
 10075 0470 00000000 		.word	.LANCHOR104
 10076 0474 00000000 		.word	.LANCHOR94
 10077 0478 00000000 		.word	.LANCHOR103
 10078 047c 00000000 		.word	.LANCHOR2
 10079 0480 00000000 		.word	.LANCHOR105
 10080 0484 00000000 		.word	.LANCHOR106
 10081 0488 00000000 		.word	.LANCHOR80
 10082 048c 00000000 		.word	.LANCHOR115
 10083 0490 00000000 		.word	.LANCHOR116
 10084 0494 00000000 		.word	.LANCHOR119
 10085 0498 00000000 		.word	.LANCHOR123
 10086 049c 00000000 		.word	.LANCHOR120
 10087 04a0 00000000 		.word	.LANCHOR117
 10088 04a4 00000000 		.word	.LANCHOR124
 10089 04a8 00000000 		.word	.LANCHOR118
 10090 04ac 00000000 		.word	.LANCHOR125
 10091 04b0 00000000 		.word	.LANCHOR121
 10092 04b4 00000000 		.word	.LANCHOR122
 10093 04b8 00000000 		.word	.LANCHOR126
 10094 04bc 209F2400 		.word	2400032
 10095 04c0 0000803D 		.word	1031798784
 10096              	.L647:
 10097              	.LBE2114:
 10098              	.LBE2120:
 10099              	.LBB2121:
 10100              	.LBB2118:
 10101 04c4 1360     		str	r3, [r2]	@ float
 10102              	.LBE2118:
 10103              	.LBE2121:
 10104              	.LBB2122:
 10105              	.LBB2035:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 321


 10106              	.LBB2018:
 10107              	.LBB2001:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10108              		.loc 19 161 11 view .LVU2753
 10109 04c6 D1ED06EA 		vldr.32	s29, [r1, #24]
 10110              	.LBE2001:
 10111              	.LBE2018:
 10112              	.LBE2035:
 10113              	.LBE2122:
 395:Veno-Echo.cpp **** 
 10114              		.loc 20 395 15 view .LVU2754
 10115 04ca CDED09BA 		vstr.32	s23, [sp, #36]
 398:Veno-Echo.cpp ****         FwdRevRXfade.SetPos(FwdRevRXFadepos);
 10116              		.loc 20 398 9 is_stmt 1 view .LVU2755
 10117              	.LVL609:
 10118              	.LBB2123:
 10119              	.LBI2047:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10120              		.loc 11 60 17 view .LVU2756
 10121              	.LBB2050:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10122              		.loc 11 60 37 view .LVU2757
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10123              		.loc 11 60 37 is_stmt 0 view .LVU2758
 10124              	.LBE2050:
 10125              	.LBE2123:
 399:Veno-Echo.cpp ****         
 10126              		.loc 20 399 9 is_stmt 1 view .LVU2759
 10127              	.LBB2124:
 10128              	.LBI2054:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10129              		.loc 11 60 17 view .LVU2760
 10130              	.LBB2057:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10131              		.loc 11 60 37 view .LVU2761
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10132              		.loc 11 60 37 is_stmt 0 view .LVU2762
 10133              	.LBE2057:
 10134              	.LBE2124:
 401:Veno-Echo.cpp ****         HPF_RXfade.SetPos(HPFXFadepos);
 10135              		.loc 20 401 9 is_stmt 1 view .LVU2763
 10136              	.LBB2125:
 10137              	.LBI2059:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10138              		.loc 11 60 17 view .LVU2764
 10139              	.LBB2062:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10140              		.loc 11 60 37 view .LVU2765
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10141              		.loc 11 60 37 is_stmt 0 view .LVU2766
 10142              	.LBE2062:
 10143              	.LBE2125:
 402:Veno-Echo.cpp ****         LPF_LXfade.SetPos(LPFXFadepos);
 10144              		.loc 20 402 9 is_stmt 1 view .LVU2767
 10145              	.LBB2126:
 10146              	.LBI2064:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 322


 10147              		.loc 11 60 17 view .LVU2768
 10148              	.LBB2067:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10149              		.loc 11 60 37 view .LVU2769
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10150              		.loc 11 60 37 is_stmt 0 view .LVU2770
 10151              	.LBE2067:
 10152              	.LBE2126:
 403:Veno-Echo.cpp ****         LPF_RXfade.SetPos(LPFXFadepos);
 10153              		.loc 20 403 9 is_stmt 1 view .LVU2771
 10154              	.LBB2127:
 10155              	.LBI2085:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10156              		.loc 11 60 17 view .LVU2772
 10157              	.LBB2088:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10158              		.loc 11 60 37 view .LVU2773
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10159              		.loc 11 60 37 is_stmt 0 view .LVU2774
 10160              	.LBE2088:
 10161              	.LBE2127:
 404:Veno-Echo.cpp **** 
 10162              		.loc 20 404 9 is_stmt 1 view .LVU2775
 10163              	.LBB2128:
 10164              	.LBI2094:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10165              		.loc 11 60 17 view .LVU2776
 10166              	.LBB2097:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10167              		.loc 11 60 37 view .LVU2777
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10168              		.loc 11 60 37 is_stmt 0 view .LVU2778
 10169              	.LBE2097:
 10170              	.LBE2128:
 406:Veno-Echo.cpp ****         HPF_RXfade_post.SetPos(HPFXFadepos);
 10171              		.loc 20 406 9 is_stmt 1 view .LVU2779
 10172              	.LBB2129:
 10173              	.LBI2070:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10174              		.loc 11 60 17 view .LVU2780
 10175              	.LBB2073:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10176              		.loc 11 60 37 view .LVU2781
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10177              		.loc 11 60 37 is_stmt 0 view .LVU2782
 10178              	.LBE2073:
 10179              	.LBE2129:
 407:Veno-Echo.cpp ****         LPF_LXfade_post.SetPos(LPFXFadepos);
 10180              		.loc 20 407 9 is_stmt 1 view .LVU2783
 10181              	.LBB2130:
 10182              	.LBI2079:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10183              		.loc 11 60 17 view .LVU2784
 10184              	.LBB2082:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10185              		.loc 11 60 37 view .LVU2785
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 323


 10186              		.loc 11 60 37 is_stmt 0 view .LVU2786
 10187              	.LBE2082:
 10188              	.LBE2130:
 408:Veno-Echo.cpp ****         LPF_RXfade_post.SetPos(LPFXFadepos);
 10189              		.loc 20 408 9 is_stmt 1 view .LVU2787
 10190              	.LBB2131:
 10191              	.LBI2104:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10192              		.loc 11 60 17 view .LVU2788
 10193              	.LBB2107:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10194              		.loc 11 60 37 view .LVU2789
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10195              		.loc 11 60 37 is_stmt 0 view .LVU2790
 10196              	.LBE2107:
 10197              	.LBE2131:
 409:Veno-Echo.cpp **** 
 10198              		.loc 20 409 9 is_stmt 1 view .LVU2791
 10199              	.LBB2132:
 10200              	.LBI2112:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10201              		.loc 11 60 17 view .LVU2792
 10202              	.LBB2115:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10203              		.loc 11 60 37 view .LVU2793
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10204              		.loc 11 60 37 is_stmt 0 view .LVU2794
 10205              	.LBE2115:
 10206              	.LBE2132:
 411:Veno-Echo.cpp ****         FilterMix_R.SetPos(filterXfade);
 10207              		.loc 20 411 9 is_stmt 1 view .LVU2795
 10208              	.LBB2133:
 10209              	.LBI2074:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10210              		.loc 11 60 17 view .LVU2796
 10211              	.LBB2077:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10212              		.loc 11 60 37 view .LVU2797
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10213              		.loc 11 60 37 is_stmt 0 view .LVU2798
 10214              	.LBE2077:
 10215              	.LBE2133:
 412:Veno-Echo.cpp **** 
 10216              		.loc 20 412 9 is_stmt 1 view .LVU2799
 10217              	.LBB2134:
 10218              	.LBI2089:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10219              		.loc 11 60 17 view .LVU2800
 10220              	.LBB2092:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10221              		.loc 11 60 37 view .LVU2801
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10222              		.loc 11 60 37 is_stmt 0 view .LVU2802
 10223              	.LBE2092:
 10224              	.LBE2134:
 414:Veno-Echo.cpp ****         FilterMix_R_post.SetPos(filterXfade);
 10225              		.loc 20 414 9 is_stmt 1 view .LVU2803
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 324


 10226              	.LBB2135:
 10227              	.LBI2100:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10228              		.loc 11 60 17 view .LVU2804
 10229              	.LBB2103:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10230              		.loc 11 60 37 view .LVU2805
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10231              		.loc 11 60 37 is_stmt 0 view .LVU2806
 10232              	.LBE2103:
 10233              	.LBE2135:
 415:Veno-Echo.cpp **** 
 10234              		.loc 20 415 9 is_stmt 1 view .LVU2807
 10235              	.LBB2136:
 10236              	.LBI2116:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10237              		.loc 11 60 17 view .LVU2808
 10238              	.LBB2119:
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10239              		.loc 11 60 37 view .LVU2809
  60:../DaisySP/Source/Dynamics/crossfade.h ****     /** Sets current curve applied to CrossFade 
 10240              		.loc 11 60 37 is_stmt 0 view .LVU2810
 10241              	.LBE2119:
 10242              	.LBE2136:
 418:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 10243              		.loc 20 418 9 is_stmt 1 view .LVU2811
 10244              	.LBB2137:
 10245              	.LBI1988:
  79:Veno-Echo.cpp ****     {
 10246              		.loc 20 79 11 view .LVU2812
 10247              	.LBB2036:
  82:Veno-Echo.cpp ****         return read;
 10248              		.loc 20 82 9 view .LVU2813
 10249              	.LBB2019:
 10250              	.LBI1990:
 159:delayline_reverse.h ****     {
 10251              		.loc 19 159 20 view .LVU2814
 10252              	.LBB2002:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10253              		.loc 19 174 46 is_stmt 0 view .LVU2815
 10254 04ce FFF7FEFF 		bl	sinf
 10255              	.LVL610:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10256              		.loc 19 174 46 view .LVU2816
 10257 04d2 B0EE40CA 		vmov.f32	s24, s0
 10258              	.LVL611:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10259              		.loc 19 174 98 view .LVU2817
 10260 04d6 1FED069A 		vldr.32	s18, .L646+156
 10261              	.LVL612:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10262              		.loc 19 174 103 view .LVU2818
 10263 04da 2BEE290A 		vmul.f32	s0, s22, s19
 10264              	.LBE2002:
 10265              	.LBE2019:
 10266              	.LBE2036:
 10267              	.LBE2137:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 325


 10268              	.LBB2138:
 10269              	.LBB2139:
 10270              	.LBB2140:
  92:delayline_reverse.h ****         
 10271              		.loc 19 92 45 view .LVU2819
 10272 04de DFF868A3 		ldr	r10, .L649+36
 10273              	.LBE2140:
 10274              	.LBE2139:
 10275              	.LBE2138:
 10276              	.LBB2161:
 10277              	.LBB2037:
 10278              	.LBB2020:
 10279              	.LBB2003:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10280              		.loc 19 174 103 view .LVU2820
 10281 04e2 FFF7FEFF 		bl	sinf
 10282              	.LVL613:
 10283 04e6 B0EE408A 		vmov.f32	s16, s0
 10284              	.LVL614:
 10285              		.loc 19 175 46 view .LVU2821
 10286 04ea 2CEE8A0A 		vmul.f32	s0, s25, s20
 10287 04ee FFF7FEFF 		bl	sinf
 10288              	.LVL615:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10289              		.loc 19 174 98 view .LVU2822
 10290 04f2 28EE098A 		vmul.f32	s16, s16, s18
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10291              		.loc 19 174 82 view .LVU2823
 10292 04f6 ACEE288A 		vfma.f32	s16, s24, s17
 10293              	.LVL616:
 10294              		.loc 19 175 46 view .LVU2824
 10295 04fa B0EE40CA 		vmov.f32	s24, s0
 10296              		.loc 19 175 112 view .LVU2825
 10297 04fe 2CEEA90A 		vmul.f32	s0, s25, s19
 10298 0502 FFF7FEFF 		bl	sinf
 10299              	.LVL617:
 10300              		.loc 19 175 107 view .LVU2826
 10301 0506 60EE097A 		vmul.f32	s15, s0, s18
 10302              	.LBE2003:
 10303              	.LBE2020:
 10304              	.LBE2037:
 10305              	.LBE2161:
 419:Veno-Echo.cpp **** 
 10306              		.loc 20 419 49 view .LVU2827
 10307 050a C64B     		ldr	r3, .L649
 10308              	.LBB2162:
 10309              	.LBB2038:
 10310              	.LBB2021:
 10311              	.LBB2004:
 10312              		.loc 19 175 91 view .LVU2828
 10313 050c ECEE287A 		vfma.f32	s15, s24, s17
 10314              	.LVL618:
 10315              		.loc 19 175 91 view .LVU2829
 10316              	.LBE2004:
 10317              	.LBE2021:
 10318              	.LBE2038:
 10319              	.LBE2162:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 326


 419:Veno-Echo.cpp **** 
 10320              		.loc 20 419 49 view .LVU2830
 10321 0510 1C68     		ldr	r4, [r3]
 10322              	.LBB2163:
 10323              	.LBB2039:
 10324              	.LBB2022:
 10325              	.LBB2005:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10326              		.loc 19 174 9 view .LVU2831
 10327 0512 38EE088A 		vadd.f32	s16, s16, s16
 10328              	.LVL619:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10329              		.loc 19 174 9 view .LVU2832
 10330              	.LBE2005:
 10331              	.LBE2022:
 10332              	.LBE2039:
 10333              	.LBE2163:
 10334              	.LBB2164:
 10335              	.LBB2165:
 10336              	.LBB2166:
 10337              	.LBB2167:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10338              		.loc 19 174 71 view .LVU2833
 10339 0516 08EB0401 		add	r1, r8, r4
 162:delayline_reverse.h **** 
 10340              		.loc 19 162 11 view .LVU2834
 10341 051a D4E90223 		ldrd	r2, r3, [r4, #8]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10342              		.loc 19 174 71 view .LVU2835
 10343 051e D1ED00CA 		vldr.32	s25, [r1]
 10344              	.LBE2167:
 10345              	.LBE2166:
 10346              	.LBE2165:
 10347              	.LBE2164:
 10348              	.LBB2192:
 10349              	.LBB2040:
 10350              	.LBB2023:
 10351              	.LBB2006:
 10352              		.loc 19 175 9 view .LVU2836
 10353 0522 77EEA77A 		vadd.f32	s15, s15, s15
 10354              	.LVL620:
 10355              		.loc 19 175 9 view .LVU2837
 10356              	.LBE2006:
 10357              	.LBE2023:
 10358              	.LBE2040:
 10359              	.LBE2192:
 10360              	.LBB2193:
 10361              	.LBB2184:
 10362              	.LBB2176:
 10363              	.LBB2168:
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10364              		.loc 19 161 11 view .LVU2838
 10365 0526 04EB8202 		add	r2, r4, r2, lsl #2
 162:delayline_reverse.h **** 
 10366              		.loc 19 162 11 view .LVU2839
 10367 052a 04EB8303 		add	r3, r4, r3, lsl #2
 10368              		.loc 19 175 77 view .LVU2840
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 327


 10369 052e 7AEEECAA 		vsub.f32	s21, s21, s25
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10370              		.loc 19 174 46 view .LVU2841
 10371 0532 2CEE8A0A 		vmul.f32	s0, s25, s20
 161:delayline_reverse.h ****         T a2 = line_[(read_ptr2_)];
 10372              		.loc 19 161 11 view .LVU2842
 10373 0536 D2ED06DA 		vldr.32	s27, [r2, #24]
 10374              	.LBE2168:
 10375              	.LBE2176:
 10376              	.LBE2184:
 10377              	.LBE2193:
 10378              	.LBB2194:
 10379              	.LBB2041:
 10380              	.LBB2024:
 10381              	.LBB2007:
 176:delayline_reverse.h **** 
 177:delayline_reverse.h ****         return (read2 * scalar_1) + (read1 * scalar_2); 
 10382              		.loc 19 177 44 view .LVU2843
 10383 053a 67EEAE7A 		vmul.f32	s15, s15, s29
 10384              	.LVL621:
 10385              		.loc 19 177 44 view .LVU2844
 10386              	.LBE2007:
 10387              	.LBE2024:
 10388              	.LBE2041:
 10389              	.LBE2194:
 10390              	.LBB2195:
 10391              	.LBB2185:
 10392              	.LBB2177:
 10393              	.LBB2169:
 162:delayline_reverse.h **** 
 10394              		.loc 19 162 11 view .LVU2845
 10395 053e 93ED06DA 		vldr.32	s26, [r3, #24]
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10396              		.loc 19 174 71 view .LVU2846
 10397 0542 0391     		str	r1, [sp, #12]
 10398              	.LBE2169:
 10399              	.LBE2177:
 10400              	.LBE2185:
 10401              	.LBE2195:
 10402              	.LBB2196:
 10403              	.LBB2042:
 10404              	.LBB2025:
 10405              	.LBB2008:
 10406              		.loc 19 177 54 view .LVU2847
 10407 0544 EEEE087A 		vfma.f32	s15, s28, s16
 10408              	.LVL622:
 10409              		.loc 19 177 54 view .LVU2848
 10410              	.LBE2008:
 10411              	.LBE2025:
  83:Veno-Echo.cpp ****     }
 10412              		.loc 20 83 9 is_stmt 1 view .LVU2849
  83:Veno-Echo.cpp ****     }
 10413              		.loc 20 83 9 is_stmt 0 view .LVU2850
 10414              	.LBE2042:
 10415              	.LBE2196:
 418:Veno-Echo.cpp ****         float delayRevSignalR = delaysR_REV.Read();
 10416              		.loc 20 418 50 view .LVU2851
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 328


 10417 0548 CDED0A7A 		vstr.32	s15, [sp, #40]
 419:Veno-Echo.cpp **** 
 10418              		.loc 20 419 9 is_stmt 1 view .LVU2852
 10419              	.LVL623:
 10420              	.LBB2197:
 10421              	.LBI2164:
  79:Veno-Echo.cpp ****     {
 10422              		.loc 20 79 11 view .LVU2853
 10423              	.LBB2186:
  82:Veno-Echo.cpp ****         return read;
 10424              		.loc 20 82 9 view .LVU2854
 10425              	.LBB2178:
 10426              	.LBI2166:
 159:delayline_reverse.h ****     {
 10427              		.loc 19 159 20 view .LVU2855
 10428              	.LBB2170:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10429              		.loc 19 174 46 is_stmt 0 view .LVU2856
 10430 054c FFF7FEFF 		bl	sinf
 10431              	.LVL624:
 10432 0550 B0EE40CA 		vmov.f32	s24, s0
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10433              		.loc 19 174 103 view .LVU2857
 10434 0554 2CEEA90A 		vmul.f32	s0, s25, s19
 10435 0558 FFF7FEFF 		bl	sinf
 10436              	.LVL625:
 10437 055c B0EE408A 		vmov.f32	s16, s0
 175:delayline_reverse.h **** 
 10438              		.loc 19 175 46 view .LVU2858
 10439 0560 2AEE8A0A 		vmul.f32	s0, s21, s20
 10440 0564 FFF7FEFF 		bl	sinf
 10441              	.LVL626:
 10442 0568 F0EE407A 		vmov.f32	s15, s0
 175:delayline_reverse.h **** 
 10443              		.loc 19 175 112 view .LVU2859
 10444 056c 2AEEA90A 		vmul.f32	s0, s21, s19
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10445              		.loc 19 174 98 view .LVU2860
 10446 0570 28EE098A 		vmul.f32	s16, s16, s18
 175:delayline_reverse.h **** 
 10447              		.loc 19 175 46 view .LVU2861
 10448 0574 F0EE679A 		vmov.f32	s19, s15
 175:delayline_reverse.h **** 
 10449              		.loc 19 175 112 view .LVU2862
 10450 0578 FFF7FEFF 		bl	sinf
 10451              	.LVL627:
 175:delayline_reverse.h **** 
 10452              		.loc 19 175 107 view .LVU2863
 10453 057c 60EE097A 		vmul.f32	s15, s0, s18
 10454              	.LBE2170:
 10455              	.LBE2178:
 10456              	.LBE2186:
 10457              	.LBE2197:
 10458              	.LBB2198:
 10459              	.LBB2151:
 10460              	.LBB2141:
  90:delayline_reverse.h ****         //advance write ptr in forward direction
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 329


 10461              		.loc 19 90 15 view .LVU2864
 10462 0580 6968     		ldr	r1, [r5, #4]
 10463              	.LBE2141:
 10464              	.LBE2151:
 10465              	.LBE2198:
 10466              	.LBB2199:
 10467              	.LBB2187:
 10468              	.LBB2179:
 10469              	.LBB2171:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10470              		.loc 19 174 82 view .LVU2865
 10471 0582 ACEE288A 		vfma.f32	s16, s24, s17
 10472              	.LVL628:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10473              		.loc 19 174 82 view .LVU2866
 10474              	.LBE2171:
 10475              	.LBE2179:
 10476              	.LBE2187:
 10477              	.LBE2199:
 10478              	.LBB2200:
 10479              	.LBB2152:
 10480              	.LBB2142:
  92:delayline_reverse.h ****         
 10481              		.loc 19 92 45 view .LVU2867
 10482 0586 8A44     		add	r10, r10, r1
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10483              		.loc 19 90 9 view .LVU2868
 10484 0588 05EB8103 		add	r3, r5, r1, lsl #2
 10485              	.LBE2142:
 10486              	.LBE2152:
 10487              	.LBE2200:
 10488              	.LBB2201:
 10489              	.LBB2188:
 10490              	.LBB2180:
 10491              	.LBB2172:
 175:delayline_reverse.h **** 
 10492              		.loc 19 175 91 view .LVU2869
 10493 058c E9EEA87A 		vfma.f32	s15, s19, s17
 10494              	.LVL629:
 175:delayline_reverse.h **** 
 10495              		.loc 19 175 91 view .LVU2870
 10496              	.LBE2172:
 10497              	.LBE2180:
 10498              	.LBE2188:
 10499              	.LBE2201:
 10500              	.LBB2202:
 10501              	.LBB2153:
 10502              	.LBB2143:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10503              		.loc 19 98 38 view .LVU2871
 10504 0590 A549     		ldr	r1, .L649+4
  95:delayline_reverse.h **** 
 10505              		.loc 19 95 43 view .LVU2872
 10506 0592 D5E904E2 		ldrd	lr, r2, [r5, #16]
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10507              		.loc 19 98 38 view .LVU2873
 10508 0596 0BEB010C 		add	ip, fp, r1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 330


  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10509              		.loc 19 90 9 view .LVU2874
 10510 059a 83ED06FA 		vstr.32	s30, [r3, #24]
  92:delayline_reverse.h ****         
 10511              		.loc 19 92 57 view .LVU2875
 10512 059e A34B     		ldr	r3, .L649+8
  99:delayline_reverse.h ****  
 10513              		.loc 19 99 38 view .LVU2876
 10514 05a0 0F44     		add	r7, r7, r1
  95:delayline_reverse.h **** 
 10515              		.loc 19 95 43 view .LVU2877
 10516 05a2 7244     		add	r2, r2, lr
 10517              	.LBE2143:
 10518              	.LBE2153:
 10519              	.LBE2202:
 10520              	.LBB2203:
 10521              	.LBB2189:
 10522              	.LBB2181:
 10523              	.LBB2173:
 174:delayline_reverse.h ****         scalar_2 = 2.0f*(   (9.0f/16.0f)*sinf(float(M_PI)*(1.0f/2.0f)*(1.0f - fadepos_))  +   (1.0f
 10524              		.loc 19 174 9 view .LVU2878
 10525 05a4 38EE088A 		vadd.f32	s16, s16, s16
 10526              	.LVL630:
 175:delayline_reverse.h **** 
 10527              		.loc 19 175 9 view .LVU2879
 10528 05a8 37EEA70A 		vadd.f32	s0, s15, s15
 10529              	.LVL631:
 175:delayline_reverse.h **** 
 10530              		.loc 19 175 9 view .LVU2880
 10531              	.LBE2173:
 10532              	.LBE2181:
 10533              	.LBE2189:
 10534              	.LBE2203:
 10535              	.LBB2204:
 10536              	.LBB2154:
 10537              	.LBB2144:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10538              		.loc 19 98 50 view .LVU2881
 10539 05ac A3FB0C10 		umull	r1, r0, r3, ip
  92:delayline_reverse.h ****         
 10540              		.loc 19 92 57 view .LVU2882
 10541 05b0 A3FB0A81 		umull	r8, r1, r3, r10
 10542 05b4 DFF894B2 		ldr	fp, .L649+40
  95:delayline_reverse.h **** 
 10543              		.loc 19 95 43 view .LVU2883
 10544 05b8 0132     		adds	r2, r2, #1
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10545              		.loc 19 98 50 view .LVU2884
 10546 05ba 800C     		lsrs	r0, r0, #18
 10547              	.LBE2144:
 10548              	.LBE2154:
 10549              	.LBE2204:
 10550              	.LBB2205:
 10551              	.LBB2190:
 10552              	.LBB2182:
 10553              	.LBB2174:
 10554              		.loc 19 177 44 view .LVU2885
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 331


 10555 05bc 20EE2D0A 		vmul.f32	s0, s0, s27
 10556              	.LVL632:
 10557              		.loc 19 177 44 view .LVU2886
 10558              	.LBE2174:
 10559              	.LBE2182:
 10560              	.LBE2190:
 10561              	.LBE2205:
 10562              	.LBB2206:
 10563              	.LBB2155:
 10564              	.LBB2145:
  92:delayline_reverse.h ****         
 10565              		.loc 19 92 57 view .LVU2887
 10566 05c0 890C     		lsrs	r1, r1, #18
  99:delayline_reverse.h ****  
 10567              		.loc 19 99 50 view .LVU2888
 10568 05c2 A3FB0783 		umull	r8, r3, r3, r7
  92:delayline_reverse.h ****         
 10569              		.loc 19 92 57 view .LVU2889
 10570 05c6 0BFB11A1 		mls	r1, fp, r1, r10
 10571              	.LBE2145:
 10572              	.LBE2155:
 10573              	.LBE2206:
 10574              	.LBB2207:
 10575              	.LBB2191:
 10576              	.LBB2183:
 10577              	.LBB2175:
 10578              		.loc 19 177 54 view .LVU2890
 10579 05ca ADEE080A 		vfma.f32	s0, s26, s16
 10580              	.LVL633:
 10581              		.loc 19 177 54 view .LVU2891
 10582              	.LBE2175:
 10583              	.LBE2183:
  83:Veno-Echo.cpp ****     }
 10584              		.loc 20 83 9 is_stmt 1 view .LVU2892
  83:Veno-Echo.cpp ****     }
 10585              		.loc 20 83 9 is_stmt 0 view .LVU2893
 10586              	.LBE2191:
 10587              	.LBE2207:
 10588              	.LBB2208:
 10589              	.LBB2156:
 10590              	.LBB2146:
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10591              		.loc 19 98 50 view .LVU2894
 10592 05ce 0BFB10C0 		mls	r0, fp, r0, ip
  99:delayline_reverse.h ****  
 10593              		.loc 19 99 50 view .LVU2895
 10594 05d2 9B0C     		lsrs	r3, r3, #18
 101:delayline_reverse.h ****         {
 10595              		.loc 19 101 36 view .LVU2896
 10596 05d4 DFF878C2 		ldr	ip, .L649+44
  92:delayline_reverse.h ****         
 10597              		.loc 19 92 9 view .LVU2897
 10598 05d8 6960     		str	r1, [r5, #4]
  99:delayline_reverse.h ****  
 10599              		.loc 19 99 50 view .LVU2898
 10600 05da 0BFB1373 		mls	r3, fp, r3, r7
 101:delayline_reverse.h ****         {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 332


 10601              		.loc 19 101 45 view .LVU2899
 10602 05de 0EF1FF3B 		add	fp, lr, #-1
  95:delayline_reverse.h **** 
 10603              		.loc 19 95 54 view .LVU2900
 10604 05e2 B2FBFEFA 		udiv	r10, r2, lr
 10605 05e6 0EFB1A22 		mls	r2, lr, r10, r2
 10606              	.LBE2146:
 10607              	.LBE2156:
 10608              	.LBE2208:
 419:Veno-Echo.cpp **** 
 10609              		.loc 20 419 50 view .LVU2901
 10610 05ea 8DED0B0A 		vstr.32	s0, [sp, #44]
 422:Veno-Echo.cpp ****         delaysR_REV.Write(Right_In);
 10611              		.loc 20 422 9 is_stmt 1 view .LVU2902
 10612              	.LVL634:
 10613              	.LBB2209:
 10614              	.LBI2138:
  92:Veno-Echo.cpp ****     {
 10615              		.loc 20 92 10 view .LVU2903
  92:Veno-Echo.cpp ****     {
 10616              		.loc 20 92 10 is_stmt 0 view .LVU2904
 10617              	.LBE2209:
 10618              	.LBE2256:
 10619              	.LBE1866:
  94:Veno-Echo.cpp ****     }
 10620              		.loc 20 94 9 is_stmt 1 view .LVU2905
 10621              	.LBB2268:
 10622              	.LBB2257:
 10623              	.LBB2210:
 10624              	.LBB2157:
 10625              	.LBI2139:
  88:delayline_reverse.h ****     {
 10626              		.loc 19 88 17 view .LVU2906
 10627              	.LBB2147:
  95:delayline_reverse.h **** 
 10628              		.loc 19 95 9 is_stmt 0 view .LVU2907
 10629 05ee 6A61     		str	r2, [r5, #20]
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10630              		.loc 19 98 9 view .LVU2908
 10631 05f0 A860     		str	r0, [r5, #8]
 101:delayline_reverse.h ****         {
 10632              		.loc 19 101 36 view .LVU2909
 10633 05f2 55F80C00 		ldr	r0, [r5, ip]
  99:delayline_reverse.h ****  
 10634              		.loc 19 99 9 view .LVU2910
 10635 05f6 EB60     		str	r3, [r5, #12]
 101:delayline_reverse.h ****         {
 10636              		.loc 19 101 45 view .LVU2911
 10637 05f8 ABEB000B 		sub	fp, fp, r0
 101:delayline_reverse.h ****         {
 10638              		.loc 19 101 9 view .LVU2912
 10639 05fc 5A45     		cmp	r2, fp
 10640 05fe 40F2D480 		bls	.L522
 103:delayline_reverse.h ****             {
 10641              		.loc 19 103 17 view .LVU2913
 10642 0602 8B4A     		ldr	r2, .L649+12
 103:delayline_reverse.h ****             {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 333


 10643              		.loc 19 103 13 view .LVU2914
 10644 0604 AF5C     		ldrb	r7, [r5, r2]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 10645              		.loc 19 103 17 view .LVU2915
 10646 0606 AB18     		adds	r3, r5, r2
 103:delayline_reverse.h ****             {
 10647              		.loc 19 103 13 view .LVU2916
 10648 0608 002F     		cmp	r7, #0
 10649 060a 40F0D480 		bne	.L637
 107:delayline_reverse.h ****                 {
 10650              		.loc 19 107 21 view .LVU2917
 10651 060e 894F     		ldr	r7, .L649+16
 105:delayline_reverse.h ****                 
 10652              		.loc 19 105 17 view .LVU2918
 10653 0610 4FF0010E 		mov	lr, #1
 110:delayline_reverse.h ****                 }
 10654              		.loc 19 110 45 view .LVU2919
 10655 0614 0139     		subs	r1, r1, #1
 107:delayline_reverse.h ****                 {
 10656              		.loc 19 107 17 view .LVU2920
 10657 0616 15F807C0 		ldrb	ip, [r5, r7]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 10658              		.loc 19 107 21 view .LVU2921
 10659 061a 2F44     		add	r7, r7, r5
 105:delayline_reverse.h ****                 
 10660              		.loc 19 105 17 view .LVU2922
 10661 061c 05F802E0 		strb	lr, [r5, r2]
 107:delayline_reverse.h ****                 {
 10662              		.loc 19 107 17 view .LVU2923
 10663 0620 BCF1000F 		cmp	ip, #0
 10664 0624 40F07282 		bne	.L524
 110:delayline_reverse.h ****                 }
 10665              		.loc 19 110 21 view .LVU2924
 10666 0628 E960     		str	r1, [r5, #12]
 10667              	.L525:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10668              		.loc 19 130 45 view .LVU2925
 10669 062a 07EE900A 		vmov	s15, r0	@ int
 10670 062e B7EE007A 		vmov.f32	s14, #1.0e+0
 10671 0632 F8EE676A 		vcvt.f32.u32	s13, s15
 10672 0636 C7EE267A 		vdiv.f32	s15, s14, s13
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10673              		.loc 19 130 37 view .LVU2926
 10674 063a 37EE8BBA 		vadd.f32	s22, s15, s22
 131:delayline_reverse.h ****                 {
 10675              		.loc 19 131 17 view .LVU2927
 10676 063e B4EEC7BA 		vcmpe.f32	s22, s14
 10677 0642 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10678 0646 40F3CD80 		ble	.L638
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10679              		.loc 19 133 21 view .LVU2928
 10680 064a 0499     		ldr	r1, [sp, #16]
 134:delayline_reverse.h ****                     playinghead_ = true;
 10681              		.loc 19 134 21 view .LVU2929
 10682 064c 0022     		movs	r2, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10683              		.loc 19 133 21 view .LVU2930
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 334


 10684 064e 81ED007A 		vstr.32	s14, [r1]
 135:delayline_reverse.h ****                 }
 10685              		.loc 19 135 21 view .LVU2931
 10686 0652 0121     		movs	r1, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 10687              		.loc 19 134 21 view .LVU2932
 10688 0654 1A70     		strb	r2, [r3]
 135:delayline_reverse.h ****                 }
 10689              		.loc 19 135 21 view .LVU2933
 10690 0656 3970     		strb	r1, [r7]
 10691              	.L528:
 10692              	.LVL635:
 135:delayline_reverse.h ****                 }
 10693              		.loc 19 135 21 view .LVU2934
 10694              	.LBE2147:
 10695              	.LBE2157:
 10696              	.LBE2210:
 423:Veno-Echo.cpp ****         //delaysL_REV.Write(Input_L);
 10697              		.loc 20 423 9 is_stmt 1 view .LVU2935
 10698              	.LBB2211:
 10699              	.LBI2211:
  92:Veno-Echo.cpp ****     {
 10700              		.loc 20 92 10 view .LVU2936
  92:Veno-Echo.cpp ****     {
 10701              		.loc 20 92 10 is_stmt 0 view .LVU2937
 10702              	.LBE2211:
 10703              	.LBE2257:
 10704              	.LBE2268:
  94:Veno-Echo.cpp ****     }
 10705              		.loc 20 94 9 is_stmt 1 view .LVU2938
 10706              	.LBB2269:
 10707              	.LBB2258:
 10708              	.LBB2222:
 10709              	.LBB2212:
 10710              	.LBI2212:
  88:delayline_reverse.h ****     {
 10711              		.loc 19 88 17 view .LVU2939
 10712              	.LBB2213:
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10713              		.loc 19 90 15 is_stmt 0 view .LVU2940
 10714 0658 6568     		ldr	r5, [r4, #4]
  92:delayline_reverse.h ****         
 10715              		.loc 19 92 45 view .LVU2941
 10716 065a DFF8ECC1 		ldr	ip, .L649+36
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10717              		.loc 19 98 38 view .LVU2942
 10718 065e A768     		ldr	r7, [r4, #8]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10719              		.loc 19 90 9 view .LVU2943
 10720 0660 04EB8503 		add	r3, r4, r5, lsl #2
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10721              		.loc 19 98 38 view .LVU2944
 10722 0664 7049     		ldr	r1, .L649+4
  92:delayline_reverse.h ****         
 10723              		.loc 19 92 45 view .LVU2945
 10724 0666 AC44     		add	ip, ip, r5
  99:delayline_reverse.h ****  
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 335


 10725              		.loc 19 99 38 view .LVU2946
 10726 0668 E568     		ldr	r5, [r4, #12]
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10727              		.loc 19 98 38 view .LVU2947
 10728 066a 0F44     		add	r7, r7, r1
 101:delayline_reverse.h ****         {
 10729              		.loc 19 101 36 view .LVU2948
 10730 066c DFF8E0A1 		ldr	r10, .L649+44
  99:delayline_reverse.h ****  
 10731              		.loc 19 99 38 view .LVU2949
 10732 0670 0D44     		add	r5, r5, r1
 101:delayline_reverse.h ****         {
 10733              		.loc 19 101 36 view .LVU2950
 10734 0672 54F80AA0 		ldr	r10, [r4, r10]
  95:delayline_reverse.h **** 
 10735              		.loc 19 95 43 view .LVU2951
 10736 0676 D4E90402 		ldrd	r0, r2, [r4, #16]
  90:delayline_reverse.h ****         //advance write ptr in forward direction
 10737              		.loc 19 90 9 view .LVU2952
 10738 067a C3ED06BA 		vstr.32	s23, [r3, #24]
  95:delayline_reverse.h **** 
 10739              		.loc 19 95 43 view .LVU2953
 10740 067e 0244     		add	r2, r2, r0
  92:delayline_reverse.h ****         
 10741              		.loc 19 92 57 view .LVU2954
 10742 0680 6A4B     		ldr	r3, .L649+8
 101:delayline_reverse.h ****         {
 10743              		.loc 19 101 45 view .LVU2955
 10744 0682 00F1FF3E 		add	lr, r0, #-1
  95:delayline_reverse.h **** 
 10745              		.loc 19 95 43 view .LVU2956
 10746 0686 0132     		adds	r2, r2, #1
  92:delayline_reverse.h ****         
 10747              		.loc 19 92 57 view .LVU2957
 10748 0688 A3FB0C81 		umull	r8, r1, r3, ip
 101:delayline_reverse.h ****         {
 10749              		.loc 19 101 45 view .LVU2958
 10750 068c AEEB0A0E 		sub	lr, lr, r10
  92:delayline_reverse.h ****         
 10751              		.loc 19 92 57 view .LVU2959
 10752 0690 890C     		lsrs	r1, r1, #18
  95:delayline_reverse.h **** 
 10753              		.loc 19 95 54 view .LVU2960
 10754 0692 B2FBF0FB 		udiv	fp, r2, r0
 10755 0696 00FB1B22 		mls	r2, r0, fp, r2
  92:delayline_reverse.h ****         
 10756              		.loc 19 92 57 view .LVU2961
 10757 069a DFF8B0B1 		ldr	fp, .L649+40
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10758              		.loc 19 98 50 view .LVU2962
 10759 069e A3FB0780 		umull	r8, r0, r3, r7
  99:delayline_reverse.h ****  
 10760              		.loc 19 99 50 view .LVU2963
 10761 06a2 A3FB0583 		umull	r8, r3, r3, r5
 101:delayline_reverse.h ****         {
 10762              		.loc 19 101 9 view .LVU2964
 10763 06a6 7245     		cmp	r2, lr
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 336


  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10764              		.loc 19 98 50 view .LVU2965
 10765 06a8 4FEA9040 		lsr	r0, r0, #18
  92:delayline_reverse.h ****         
 10766              		.loc 19 92 57 view .LVU2966
 10767 06ac 0BFB11C1 		mls	r1, fp, r1, ip
  99:delayline_reverse.h ****  
 10768              		.loc 19 99 50 view .LVU2967
 10769 06b0 4FEA9343 		lsr	r3, r3, #18
  95:delayline_reverse.h **** 
 10770              		.loc 19 95 9 view .LVU2968
 10771 06b4 6261     		str	r2, [r4, #20]
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10772              		.loc 19 98 50 view .LVU2969
 10773 06b6 0BFB1070 		mls	r0, fp, r0, r7
  99:delayline_reverse.h ****  
 10774              		.loc 19 99 50 view .LVU2970
 10775 06ba 0BFB1353 		mls	r3, fp, r3, r5
  98:delayline_reverse.h ****         read_ptr2_ = (read_ptr2_ - 1 + max_size) % max_size;
 10776              		.loc 19 98 9 view .LVU2971
 10777 06be C4E90110 		strd	r1, r0, [r4, #4]
  99:delayline_reverse.h ****  
 10778              		.loc 19 99 9 view .LVU2972
 10779 06c2 E360     		str	r3, [r4, #12]
 101:delayline_reverse.h ****         {
 10780              		.loc 19 101 9 view .LVU2973
 10781 06c4 50D9     		bls	.L532
 103:delayline_reverse.h ****             {
 10782              		.loc 19 103 17 view .LVU2974
 10783 06c6 5A4A     		ldr	r2, .L649+12
 103:delayline_reverse.h ****             {
 10784              		.loc 19 103 13 view .LVU2975
 10785 06c8 A05C     		ldrb	r0, [r4, r2]	@ zero_extendqisi2
 103:delayline_reverse.h ****             {
 10786              		.loc 19 103 17 view .LVU2976
 10787 06ca A318     		adds	r3, r4, r2
 103:delayline_reverse.h ****             {
 10788              		.loc 19 103 13 view .LVU2977
 10789 06cc 0028     		cmp	r0, #0
 10790 06ce 50D1     		bne	.L639
 107:delayline_reverse.h ****                 {
 10791              		.loc 19 107 21 view .LVU2978
 10792 06d0 5848     		ldr	r0, .L649+16
 105:delayline_reverse.h ****                 
 10793              		.loc 19 105 17 view .LVU2979
 10794 06d2 0127     		movs	r7, #1
 110:delayline_reverse.h ****                 }
 10795              		.loc 19 110 45 view .LVU2980
 10796 06d4 0139     		subs	r1, r1, #1
 107:delayline_reverse.h ****                 {
 10797              		.loc 19 107 17 view .LVU2981
 10798 06d6 255C     		ldrb	r5, [r4, r0]	@ zero_extendqisi2
 107:delayline_reverse.h ****                 {
 10799              		.loc 19 107 21 view .LVU2982
 10800 06d8 2044     		add	r0, r0, r4
 105:delayline_reverse.h ****                 
 10801              		.loc 19 105 17 view .LVU2983
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 337


 10802 06da A754     		strb	r7, [r4, r2]
 107:delayline_reverse.h ****                 {
 10803              		.loc 19 107 17 view .LVU2984
 10804 06dc 002D     		cmp	r5, #0
 10805 06de 40F01782 		bne	.L534
 110:delayline_reverse.h ****                 }
 10806              		.loc 19 110 21 view .LVU2985
 10807 06e2 E160     		str	r1, [r4, #12]
 10808              	.L535:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10809              		.loc 19 130 45 view .LVU2986
 10810 06e4 07EE90AA 		vmov	s15, r10	@ int
 10811 06e8 B7EE007A 		vmov.f32	s14, #1.0e+0
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10812              		.loc 19 130 37 view .LVU2987
 10813 06ec 039A     		ldr	r2, [sp, #12]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10814              		.loc 19 130 45 view .LVU2988
 10815 06ee B8EE676A 		vcvt.f32.u32	s12, s15
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10816              		.loc 19 130 37 view .LVU2989
 10817 06f2 D2ED006A 		vldr.32	s13, [r2]
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10818              		.loc 19 130 45 view .LVU2990
 10819 06f6 C7EE067A 		vdiv.f32	s15, s14, s12
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 10820              		.loc 19 130 37 view .LVU2991
 10821 06fa 77EEA67A 		vadd.f32	s15, s15, s13
 131:delayline_reverse.h ****                 {
 10822              		.loc 19 131 17 view .LVU2992
 10823 06fe F4EEC77A 		vcmpe.f32	s15, s14
 10824 0702 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10825 0706 40F31682 		ble	.L642
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10826              		.loc 19 133 21 view .LVU2993
 10827 070a 039A     		ldr	r2, [sp, #12]
 134:delayline_reverse.h ****                     playinghead_ = true;
 10828              		.loc 19 134 21 view .LVU2994
 10829 070c 0021     		movs	r1, #0
 133:delayline_reverse.h ****                     fading_ = false;    //stop fading
 10830              		.loc 19 133 21 view .LVU2995
 10831 070e 82ED007A 		vstr.32	s14, [r2]
 135:delayline_reverse.h ****                 }
 10832              		.loc 19 135 21 view .LVU2996
 10833 0712 0122     		movs	r2, #1
 134:delayline_reverse.h ****                     playinghead_ = true;
 10834              		.loc 19 134 21 view .LVU2997
 10835 0714 1970     		strb	r1, [r3]
 135:delayline_reverse.h ****                 }
 10836              		.loc 19 135 21 view .LVU2998
 10837 0716 0270     		strb	r2, [r0]
 10838              	.LVL636:
 10839              	.L538:
 135:delayline_reverse.h ****                 }
 10840              		.loc 19 135 21 view .LVU2999
 10841              	.LBE2213:
 10842              	.LBE2212:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 338


 10843              	.LBE2222:
 428:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(Right_In,delayRevSignalR);
 10844              		.loc 20 428 9 is_stmt 1 view .LVU3000
 428:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(Right_In,delayRevSignalR);
 10845              		.loc 20 428 56 is_stmt 0 view .LVU3001
 10846 0718 0AAA     		add	r2, sp, #40
 10847 071a 08A9     		add	r1, sp, #32
 10848 071c 4648     		ldr	r0, .L649+20
 10849 071e FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10850              	.LVL637:
 429:Veno-Echo.cpp **** 
 10851              		.loc 20 429 56 view .LVU3002
 10852 0722 0BAA     		add	r2, sp, #44
 10853 0724 09A9     		add	r1, sp, #36
 10854 0726 4548     		ldr	r0, .L649+24
 428:Veno-Echo.cpp ****         float FwdRevSignalRXFade = FwdRevRXfade.Process(Right_In,delayRevSignalR);
 10855              		.loc 20 428 56 view .LVU3003
 10856 0728 F0EE408A 		vmov.f32	s17, s0
 10857              	.LVL638:
 429:Veno-Echo.cpp **** 
 10858              		.loc 20 429 9 is_stmt 1 view .LVU3004
 429:Veno-Echo.cpp **** 
 10859              		.loc 20 429 56 is_stmt 0 view .LVU3005
 10860 072c FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 10861              	.LVL639:
 432:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10862              		.loc 20 432 46 view .LVU3006
 10863 0730 4348     		ldr	r0, .L649+28
 429:Veno-Echo.cpp **** 
 10864              		.loc 20 429 56 view .LVU3007
 10865 0732 B0EE408A 		vmov.f32	s16, s0
 10866              	.LVL640:
 432:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10867              		.loc 20 432 9 is_stmt 1 view .LVU3008
 432:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10868              		.loc 20 432 46 is_stmt 0 view .LVU3009
 10869 0736 FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 10870              	.LVL641:
 432:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10871              		.loc 20 432 46 view .LVU3010
 10872 073a 0346     		mov	r3, r0
 433:Veno-Echo.cpp **** 
 10873              		.loc 20 433 46 view .LVU3011
 10874 073c 4148     		ldr	r0, .L649+32
 432:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10875              		.loc 20 432 45 view .LVU3012
 10876 073e 1B68     		ldr	r3, [r3]	@ float
 432:Veno-Echo.cpp ****         float delaySignal_R{delayR.GetOutput()};
 10877              		.loc 20 432 47 view .LVU3013
 10878 0740 0C93     		str	r3, [sp, #48]	@ float
 433:Veno-Echo.cpp **** 
 10879              		.loc 20 433 9 is_stmt 1 view .LVU3014
 433:Veno-Echo.cpp **** 
 10880              		.loc 20 433 46 is_stmt 0 view .LVU3015
 10881 0742 FFF7FEFF 		bl	_ZN10DelayMulti9GetOutputEv
 10882              	.LVL642:
 433:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 339


 10883              		.loc 20 433 45 view .LVU3016
 10884 0746 0368     		ldr	r3, [r0]	@ float
 433:Veno-Echo.cpp **** 
 10885              		.loc 20 433 47 view .LVU3017
 10886 0748 0D93     		str	r3, [sp, #52]	@ float
 436:Veno-Echo.cpp **** 
 10887              		.loc 20 436 9 is_stmt 1 view .LVU3018
 436:Veno-Echo.cpp **** 
 10888              		.loc 20 436 28 is_stmt 0 view .LVU3019
 10889 074a FFF7FEFF 		bl	_Z19Update_BaseTempoLEDv
 10890              	.LVL643:
 439:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 10891              		.loc 20 439 9 is_stmt 1 view .LVU3020
 10892              	.LBB2223:
 10893              	.LBB1870:
2004:Veno-Echo.cpp ****         returnval = limit;
 10894              		.loc 20 2004 5 is_stmt 0 view .LVU3021
 10895 074e B0EE007A 		vmov.f32	s14, #2.0e+0
 10896              	.LBE1870:
 10897              	.LBE2223:
 439:Veno-Echo.cpp ****         delaySignal_R = HardLimit(delaySignal_R,AudioLimit);
 10898              		.loc 20 439 34 view .LVU3022
 10899 0752 DDED0C7A 		vldr.32	s15, [sp, #48]
 10900              	.LVL644:
 10901              	.LBB2224:
 10902              	.LBI1868:
2001:Veno-Echo.cpp **** {
 10903              		.loc 20 2001 7 is_stmt 1 view .LVU3023
 10904              	.LBB1871:
2003:Veno-Echo.cpp ****     if (input > limit)
 10905              		.loc 20 2003 5 view .LVU3024
2004:Veno-Echo.cpp ****         returnval = limit;
 10906              		.loc 20 2004 5 view .LVU3025
 10907 0756 F4EEC77A 		vcmpe.f32	s15, s14
 10908 075a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10909 075e 7FF795AC 		ble	.L643
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10910              		.loc 20 2005 19 is_stmt 0 view .LVU3026
 10911 0762 F0EE477A 		vmov.f32	s15, s14
 10912              	.LVL645:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10913              		.loc 20 2005 19 view .LVU3027
 10914 0766 9AE4     		b	.L542
 10915              	.LVL646:
 10916              	.L532:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 10917              		.loc 20 2005 19 view .LVU3028
 10918              	.LBE1871:
 10919              	.LBE2224:
 10920              	.LBB2225:
 10921              	.LBB2218:
 10922              	.LBB2214:
 126:delayline_reverse.h ****         {
 10923              		.loc 19 126 12 view .LVU3029
 10924 0768 314B     		ldr	r3, .L649+12
 126:delayline_reverse.h ****         {
 10925              		.loc 19 126 9 view .LVU3030
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 340


 10926 076a E25C     		ldrb	r2, [r4, r3]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 10927              		.loc 19 126 12 view .LVU3031
 10928 076c 2344     		add	r3, r3, r4
 126:delayline_reverse.h ****         {
 10929              		.loc 19 126 9 view .LVU3032
 10930 076e 002A     		cmp	r2, #0
 10931 0770 D2D0     		beq	.L538
 10932              	.L639:
 126:delayline_reverse.h ****         {
 10933              		.loc 19 126 9 view .LVU3033
 10934 0772 304A     		ldr	r2, .L649+16
 10935 0774 A018     		adds	r0, r4, r2
 10936 0776 A25C     		ldrb	r2, [r4, r2]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 10937              		.loc 19 128 13 view .LVU3034
 10938 0778 002A     		cmp	r2, #0
 10939 077a B3D0     		beq	.L535
 10940              	.L536:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10941              		.loc 19 141 45 view .LVU3035
 10942 077c 07EE90AA 		vmov	s15, r10	@ int
 10943 0780 B7EE006A 		vmov.f32	s12, #1.0e+0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10944              		.loc 19 141 37 view .LVU3036
 10945 0784 0399     		ldr	r1, [sp, #12]
 142:delayline_reverse.h ****                 {
 10946              		.loc 19 142 17 view .LVU3037
 10947 0786 0022     		movs	r2, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10948              		.loc 19 141 45 view .LVU3038
 10949 0788 F8EE676A 		vcvt.f32.u32	s13, s15
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10950              		.loc 19 141 37 view .LVU3039
 10951 078c D1ED007A 		vldr.32	s15, [r1]
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10952              		.loc 19 141 45 view .LVU3040
 10953 0790 86EE267A 		vdiv.f32	s14, s12, s13
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10954              		.loc 19 141 37 view .LVU3041
 10955 0794 77EEC77A 		vsub.f32	s15, s15, s14
 142:delayline_reverse.h ****                 {
 10956              		.loc 19 142 17 view .LVU3042
 10957 0798 F5EEC07A 		vcmpe.f32	s15, #0
 10958 079c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 10959 07a0 00F1BD81 		bmi	.L541
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10960              		.loc 19 141 17 view .LVU3043
 10961 07a4 C1ED007A 		vstr.32	s15, [r1]
 10962 07a8 B6E7     		b	.L538
 10963              	.LVL647:
 10964              	.L522:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10965              		.loc 19 141 17 view .LVU3044
 10966              	.LBE2214:
 10967              	.LBE2218:
 10968              	.LBE2225:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 341


 10969              	.LBB2226:
 10970              	.LBB2158:
 10971              	.LBB2148:
 126:delayline_reverse.h ****         {
 10972              		.loc 19 126 12 view .LVU3045
 10973 07aa 214B     		ldr	r3, .L649+12
 126:delayline_reverse.h ****         {
 10974              		.loc 19 126 9 view .LVU3046
 10975 07ac EA5C     		ldrb	r2, [r5, r3]	@ zero_extendqisi2
 126:delayline_reverse.h ****         {
 10976              		.loc 19 126 12 view .LVU3047
 10977 07ae 2B44     		add	r3, r3, r5
 126:delayline_reverse.h ****         {
 10978              		.loc 19 126 9 view .LVU3048
 10979 07b0 002A     		cmp	r2, #0
 10980 07b2 3FF451AF 		beq	.L528
 10981              	.L637:
 126:delayline_reverse.h ****         {
 10982              		.loc 19 126 9 view .LVU3049
 10983 07b6 1F4A     		ldr	r2, .L649+16
 10984 07b8 AF18     		adds	r7, r5, r2
 10985 07ba AA5C     		ldrb	r2, [r5, r2]	@ zero_extendqisi2
 128:delayline_reverse.h ****             {
 10986              		.loc 19 128 13 view .LVU3050
 10987 07bc 002A     		cmp	r2, #0
 10988 07be 3FF434AF 		beq	.L525
 10989              	.L526:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10990              		.loc 19 141 45 view .LVU3051
 10991 07c2 07EE900A 		vmov	s15, r0	@ int
 10992 07c6 F7EE006A 		vmov.f32	s13, #1.0e+0
 142:delayline_reverse.h ****                 {
 10993              		.loc 19 142 17 view .LVU3052
 10994 07ca 0021     		movs	r1, #0
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10995              		.loc 19 141 45 view .LVU3053
 10996 07cc B8EE677A 		vcvt.f32.u32	s14, s15
 10997 07d0 C6EE877A 		vdiv.f32	s15, s13, s14
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 10998              		.loc 19 141 37 view .LVU3054
 10999 07d4 3BEE67BA 		vsub.f32	s22, s22, s15
 142:delayline_reverse.h ****                 {
 11000              		.loc 19 142 17 view .LVU3055
 11001 07d8 B5EEC0BA 		vcmpe.f32	s22, #0
 11002 07dc F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11003 07e0 00F1A381 		bmi	.L531
 11004              	.L638:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11005              		.loc 19 141 17 view .LVU3056
 11006 07e4 049B     		ldr	r3, [sp, #16]
 11007 07e6 83ED00BA 		vstr.32	s22, [r3]
 11008 07ea 35E7     		b	.L528
 11009              	.LVL648:
 11010              	.L573:
 141:delayline_reverse.h ****                 if (fadepos_ < 0.0f)
 11011              		.loc 19 141 17 view .LVU3057
 11012              	.LBE2148:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 342


 11013              	.LBE2158:
 11014              	.LBE2226:
 605:Veno-Echo.cpp ****             out[1][i] = mixR;
 11015              		.loc 20 605 13 is_stmt 1 view .LVU3058
 605:Veno-Echo.cpp ****             out[1][i] = mixR;
 11016              		.loc 20 605 23 is_stmt 0 view .LVU3059
 11017 07ec 079B     		ldr	r3, [sp, #28]
 11018 07ee 0299     		ldr	r1, [sp, #8]
 11019 07f0 1A68     		ldr	r2, [r3]
 606:Veno-Echo.cpp ****         }
 11020              		.loc 20 606 23 view .LVU3060
 11021 07f2 5B68     		ldr	r3, [r3, #4]
 605:Veno-Echo.cpp ****             out[1][i] = mixR;
 11022              		.loc 20 605 23 view .LVU3061
 11023 07f4 0A44     		add	r2, r2, r1
 606:Veno-Echo.cpp ****         }
 11024              		.loc 20 606 23 view .LVU3062
 11025 07f6 0B44     		add	r3, r3, r1
 605:Veno-Echo.cpp ****             out[1][i] = mixR;
 11026              		.loc 20 605 23 view .LVU3063
 11027 07f8 C2ED007A 		vstr.32	s15, [r2]
 606:Veno-Echo.cpp ****         }
 11028              		.loc 20 606 13 is_stmt 1 view .LVU3064
 606:Veno-Echo.cpp ****         }
 11029              		.loc 20 606 23 is_stmt 0 view .LVU3065
 11030 07fc 83ED000A 		vstr.32	s0, [r3]
 11031 0800 8AE5     		b	.L574
 11032              	.LVL649:
 11033              	.L634:
 586:Veno-Echo.cpp ****         {
 11034              		.loc 20 586 14 is_stmt 1 view .LVU3066
 11035 0802 40F36A81 		ble	.L635
 588:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * Right_In) + delaySignal_R_SUM;
 11036              		.loc 20 588 13 view .LVU3067
 588:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * Right_In) + delaySignal_R_SUM;
 11037              		.loc 20 588 24 is_stmt 0 view .LVU3068
 11038 0806 F7EE006A 		vmov.f32	s13, #1.0e+0
 588:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * Right_In) + delaySignal_R_SUM;
 11039              		.loc 20 588 18 view .LVU3069
 11040 080a DDED085A 		vldr.32	s11, [sp, #32]
 589:Veno-Echo.cpp ****         }
 11041              		.loc 20 589 18 view .LVU3070
 11042 080e 9DED096A 		vldr.32	s12, [sp, #36]
 588:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * Right_In) + delaySignal_R_SUM;
 11043              		.loc 20 588 24 view .LVU3071
 11044 0812 36EEC77A 		vsub.f32	s14, s13, s14
 588:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * Right_In) + delaySignal_R_SUM;
 11045              		.loc 20 588 33 view .LVU3072
 11046 0816 37EE077A 		vadd.f32	s14, s14, s14
 588:Veno-Echo.cpp ****             mixR = ((1 - drywet)* 2.0f * Right_In) + delaySignal_R_SUM;
 11047              		.loc 20 588 18 view .LVU3073
 11048 081a E7EE257A 		vfma.f32	s15, s14, s11
 11049              	.LVL650:
 589:Veno-Echo.cpp ****         }
 11050              		.loc 20 589 13 is_stmt 1 view .LVU3074
 589:Veno-Echo.cpp ****         }
 11051              		.loc 20 589 18 is_stmt 0 view .LVU3075
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 343


 11052 081e A7EE060A 		vfma.f32	s0, s14, s12
 11053              	.LVL651:
 589:Veno-Echo.cpp ****         }
 11054              		.loc 20 589 18 view .LVU3076
 11055 0822 6BE5     		b	.L570
 11056              	.L650:
 11057              		.align	2
 11058              	.L649:
 11059 0824 00000000 		.word	.LANCHOR3
 11060 0828 BF270900 		.word	599999
 11061 082c 851DD96F 		.word	1876499845
 11062 0830 249F2400 		.word	2400036
 11063 0834 1C9F2400 		.word	2400028
 11064 0838 00000000 		.word	.LANCHOR105
 11065 083c 00000000 		.word	.LANCHOR106
 11066 0840 00000000 		.word	.LANCHOR0
 11067 0844 00000000 		.word	.LANCHOR1
 11068 0848 C1270900 		.word	600001
 11069 084c C0270900 		.word	600000
 11070 0850 189F2400 		.word	2400024
 11071              	.LVL652:
 11072              	.L589:
 11073              	.LBB2227:
 540:Veno-Echo.cpp **** {
 11074              		.loc 20 540 1 view .LVU3077
 11075 0854 D14B     		ldr	r3, .L651
 11076              	.LBE2227:
 11077              	.LBB2228:
 11078              	.LBB1961:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11079              		.loc 20 2005 19 view .LVU3078
 11080 0856 B0EE470A 		vmov.f32	s0, s14
 11081              	.LVL653:
2011:Veno-Echo.cpp **** }
 11082              		.loc 20 2011 5 is_stmt 1 view .LVU3079
2011:Veno-Echo.cpp **** }
 11083              		.loc 20 2011 5 is_stmt 0 view .LVU3080
 11084              	.LBE1961:
 11085              	.LBE2228:
 11086              	.LBB2229:
 540:Veno-Echo.cpp **** {
 11087              		.loc 20 540 1 view .LVU3081
 11088 085a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11089              	.LBE2229:
 538:Veno-Echo.cpp **** 
 11090              		.loc 20 538 27 view .LVU3082
 11091 085c 8DED110A 		vstr.32	s0, [sp, #68]
 540:Veno-Echo.cpp **** {
 11092              		.loc 20 540 1 is_stmt 1 view .LVU3083
 11093              	.LBB2230:
 11094 0860 002B     		cmp	r3, #0
 11095 0862 3FF432AD 		beq	.L564
 11096              	.L641:
 11097              	.LBB1964:
 546:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11098              		.loc 20 546 9 view .LVU3084
 546:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 344


 11099              		.loc 20 546 27 is_stmt 0 view .LVU3085
 11100 0866 9FEDCE8A 		vldr.32	s16, .L651+4
 11101              	.LVL654:
 546:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11102              		.loc 20 546 27 view .LVU3086
 11103 086a CE4D     		ldr	r5, .L651+8
 11104 086c 27EE880A 		vmul.f32	s0, s15, s16
 547:Veno-Echo.cpp **** 
 11105              		.loc 20 547 27 view .LVU3087
 11106 0870 CD4C     		ldr	r4, .L651+12
 546:Veno-Echo.cpp ****         LPF_R_post.Process(delaySignal_R_SUM * 0.1f);
 11107              		.loc 20 546 27 view .LVU3088
 11108 0872 2846     		mov	r0, r5
 11109 0874 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11110              	.LVL655:
 547:Veno-Echo.cpp **** 
 11111              		.loc 20 547 9 is_stmt 1 view .LVU3089
 547:Veno-Echo.cpp **** 
 11112              		.loc 20 547 27 is_stmt 0 view .LVU3090
 11113 0878 9DED110A 		vldr.32	s0, [sp, #68]
 11114 087c 2046     		mov	r0, r4
 11115 087e 20EE080A 		vmul.f32	s0, s0, s16
 11116 0882 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11117              	.LVL656:
 550:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11118              		.loc 20 550 9 is_stmt 1 view .LVU3091
 550:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11119              		.loc 20 550 9 is_stmt 0 view .LVU3092
 11120              	.LBE1964:
 11121              	.LBE2230:
 11122              	.LBE2258:
 11123              	.LBE2269:
  23:../DaisySP/Source/Filters/svf.h ****     /** Initializes the filter
  24:../DaisySP/Source/Filters/svf.h ****         float sample_rate - sample rate of the audio engine being run, and the frequency that the P
  25:../DaisySP/Source/Filters/svf.h ****     */
  26:../DaisySP/Source/Filters/svf.h ****     void Init(float sample_rate);
  27:../DaisySP/Source/Filters/svf.h **** 
  28:../DaisySP/Source/Filters/svf.h **** 
  29:../DaisySP/Source/Filters/svf.h ****     /** 
  30:../DaisySP/Source/Filters/svf.h ****         Process the input signal, updating all of the outputs.
  31:../DaisySP/Source/Filters/svf.h ****     */
  32:../DaisySP/Source/Filters/svf.h ****     void Process(float in);
  33:../DaisySP/Source/Filters/svf.h **** 
  34:../DaisySP/Source/Filters/svf.h **** 
  35:../DaisySP/Source/Filters/svf.h ****     /** sets the frequency of the cutoff frequency. 
  36:../DaisySP/Source/Filters/svf.h ****         f must be between 0.0 and sample_rate / 3
  37:../DaisySP/Source/Filters/svf.h ****     */
  38:../DaisySP/Source/Filters/svf.h ****     void SetFreq(float f);
  39:../DaisySP/Source/Filters/svf.h **** 
  40:../DaisySP/Source/Filters/svf.h ****     /** sets the resonance of the filter.
  41:../DaisySP/Source/Filters/svf.h ****         Must be between 0.0 and 1.0 to ensure stability.
  42:../DaisySP/Source/Filters/svf.h ****     */
  43:../DaisySP/Source/Filters/svf.h ****     void SetRes(float r);
  44:../DaisySP/Source/Filters/svf.h **** 
  45:../DaisySP/Source/Filters/svf.h ****     /** sets the drive of the filter 
  46:../DaisySP/Source/Filters/svf.h ****         affects the response of the resonance of the filter
  47:../DaisySP/Source/Filters/svf.h ****     */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 345


  48:../DaisySP/Source/Filters/svf.h ****     void SetDrive(float d);
  49:../DaisySP/Source/Filters/svf.h ****     /** lowpass output
  50:../DaisySP/Source/Filters/svf.h ****         \return low pass output of the filter
  51:../DaisySP/Source/Filters/svf.h ****     */
  52:../DaisySP/Source/Filters/svf.h ****     inline float Low() { return out_low_; }
 11124              		.loc 10 52 26 is_stmt 1 view .LVU3093
 11125              	.LBB2270:
 11126              	.LBB2259:
 11127              	.LBB2231:
 11128              	.LBB1979:
 550:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11129              		.loc 20 550 50 is_stmt 0 view .LVU3094
 11130 0886 F2EE046A 		vmov.f32	s13, #1.0e+1
 11131 088a 95ED0C7A 		vldr.32	s14, [r5, #48]
 554:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11132              		.loc 20 554 59 view .LVU3095
 11133 088e 10A9     		add	r1, sp, #64
 551:Veno-Echo.cpp ****         
 11134              		.loc 20 551 50 view .LVU3096
 11135 0890 D4ED0C7A 		vldr.32	s15, [r4, #48]
 554:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11136              		.loc 20 554 59 view .LVU3097
 11137 0894 12AA     		add	r2, sp, #72
 550:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11138              		.loc 20 550 50 view .LVU3098
 11139 0896 27EE267A 		vmul.f32	s14, s14, s13
 554:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11140              		.loc 20 554 59 view .LVU3099
 11141 089a C448     		ldr	r0, .L651+16
 551:Veno-Echo.cpp ****         
 11142              		.loc 20 551 50 view .LVU3100
 11143 089c 67EEA67A 		vmul.f32	s15, s15, s13
 550:Veno-Echo.cpp ****         float LPF_R_signal_post{LPF_R_post.Low() * 10.0f};
 11144              		.loc 20 550 57 view .LVU3101
 11145 08a0 8DED127A 		vstr.32	s14, [sp, #72]
 551:Veno-Echo.cpp ****         
 11146              		.loc 20 551 9 is_stmt 1 view .LVU3102
 11147              	.LVL657:
 551:Veno-Echo.cpp ****         
 11148              		.loc 20 551 9 is_stmt 0 view .LVU3103
 11149              	.LBE1979:
 11150              	.LBE2231:
 11151              	.LBE2259:
 11152              	.LBE2270:
 11153              		.loc 10 52 26 is_stmt 1 view .LVU3104
 11154              	.LBB2271:
 11155              	.LBB2260:
 11156              	.LBB2232:
 11157              	.LBB1980:
 551:Veno-Echo.cpp ****         
 11158              		.loc 20 551 57 is_stmt 0 view .LVU3105
 11159 08a4 CDED137A 		vstr.32	s15, [sp, #76]
 554:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11160              		.loc 20 554 9 is_stmt 1 view .LVU3106
 554:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11161              		.loc 20 554 59 is_stmt 0 view .LVU3107
 11162 08a8 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 346


 11163              	.LVL658:
 555:Veno-Echo.cpp **** 
 11164              		.loc 20 555 59 view .LVU3108
 11165 08ac 11A9     		add	r1, sp, #68
 11166 08ae 13AA     		add	r2, sp, #76
 11167 08b0 BF48     		ldr	r0, .L651+20
 554:Veno-Echo.cpp ****         float filteredDelay_R_post{LPF_RXfade_post.Process(delaySignal_R_SUM, LPF_R_signal_post)};
 11168              		.loc 20 554 97 view .LVU3109
 11169 08b2 8DED140A 		vstr.32	s0, [sp, #80]
 555:Veno-Echo.cpp **** 
 11170              		.loc 20 555 9 is_stmt 1 view .LVU3110
 555:Veno-Echo.cpp **** 
 11171              		.loc 20 555 59 is_stmt 0 view .LVU3111
 11172 08b6 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11173              	.LVL659:
 11174              	.LBB1965:
 11175              	.LBB1966:
2004:Veno-Echo.cpp ****         returnval = limit;
 11176              		.loc 20 2004 5 view .LVU3112
 11177 08ba F0EE006A 		vmov.f32	s13, #2.0e+0
 11178              	.LBE1966:
 11179              	.LBE1965:
 558:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11180              		.loc 20 558 41 view .LVU3113
 11181 08be 9DED147A 		vldr.32	s14, [sp, #80]
 555:Veno-Echo.cpp **** 
 11182              		.loc 20 555 59 view .LVU3114
 11183 08c2 F0EE407A 		vmov.f32	s15, s0
 558:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11184              		.loc 20 558 9 is_stmt 1 view .LVU3115
 11185              	.LVL660:
 11186              	.LBB1970:
 11187              	.LBI1965:
2001:Veno-Echo.cpp **** {
 11188              		.loc 20 2001 7 view .LVU3116
 11189              	.LBB1967:
2003:Veno-Echo.cpp ****     if (input > limit)
 11190              		.loc 20 2003 5 view .LVU3117
2004:Veno-Echo.cpp ****         returnval = limit;
 11191              		.loc 20 2004 5 view .LVU3118
 11192 08c6 B4EEE67A 		vcmpe.f32	s14, s13
 11193 08ca F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11194 08ce 00F30D81 		bgt	.L590
2006:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11195              		.loc 20 2006 10 view .LVU3119
 11196 08d2 F8EE006A 		vmov.f32	s13, #-2.0e+0
 11197 08d6 B4EEE67A 		vcmpe.f32	s14, s13
 11198 08da F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11199 08de 00F12D81 		bmi	.L591
 11200 08e2 27EE080A 		vmul.f32	s0, s14, s16
 11201              	.LVL661:
 11202              	.L565:
2011:Veno-Echo.cpp **** }
 11203              		.loc 20 2011 5 view .LVU3120
2011:Veno-Echo.cpp **** }
 11204              		.loc 20 2011 5 is_stmt 0 view .LVU3121
 11205              	.LBE1967:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 347


 11206              	.LBE1970:
 11207              	.LBB1971:
 11208              	.LBB1972:
2004:Veno-Echo.cpp ****         returnval = limit;
 11209              		.loc 20 2004 5 view .LVU3122
 11210 08e6 F0EE006A 		vmov.f32	s13, #2.0e+0
 11211              	.LBE1972:
 11212              	.LBE1971:
 558:Veno-Echo.cpp ****         filteredDelay_R_post = HardLimit(filteredDelay_R_post,AudioLimit);
 11213              		.loc 20 558 30 view .LVU3123
 11214 08ea 8DED147A 		vstr.32	s14, [sp, #80]
 559:Veno-Echo.cpp **** 
 11215              		.loc 20 559 9 is_stmt 1 view .LVU3124
 11216              	.LVL662:
 11217              	.LBB1975:
 11218              	.LBI1971:
2001:Veno-Echo.cpp **** {
 11219              		.loc 20 2001 7 view .LVU3125
 11220              	.LBB1973:
2003:Veno-Echo.cpp ****     if (input > limit)
 11221              		.loc 20 2003 5 view .LVU3126
2004:Veno-Echo.cpp ****         returnval = limit;
 11222              		.loc 20 2004 5 view .LVU3127
 11223 08ee F4EEE67A 		vcmpe.f32	s15, s13
 11224 08f2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11225 08f6 00F30681 		bgt	.L592
2006:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11226              		.loc 20 2006 10 view .LVU3128
 11227 08fa B8EE007A 		vmov.f32	s14, #-2.0e+0
2007:Veno-Echo.cpp ****     else
 11228              		.loc 20 2007 19 is_stmt 0 view .LVU3129
 11229 08fe F4EE477A 		vcmp.f32	s15, s14
 11230 0902 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11231 0906 48BF     		it	mi
 11232 0908 F0EE477A 		vmovmi.f32	s15, s14
 11233              	.LVL663:
 11234              	.L566:
2011:Veno-Echo.cpp **** }
 11235              		.loc 20 2011 5 is_stmt 1 view .LVU3130
2011:Veno-Echo.cpp **** }
 11236              		.loc 20 2011 5 is_stmt 0 view .LVU3131
 11237              	.LBE1973:
 11238              	.LBE1975:
 562:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11239              		.loc 20 562 27 view .LVU3132
 11240 090c A94D     		ldr	r5, .L651+24
 563:Veno-Echo.cpp **** 
 11241              		.loc 20 563 27 view .LVU3133
 11242 090e AA4C     		ldr	r4, .L651+28
 562:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11243              		.loc 20 562 27 view .LVU3134
 11244 0910 2846     		mov	r0, r5
 559:Veno-Echo.cpp **** 
 11245              		.loc 20 559 30 view .LVU3135
 11246 0912 CDED157A 		vstr.32	s15, [sp, #84]
 562:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11247              		.loc 20 562 9 is_stmt 1 view .LVU3136
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 348


 562:Veno-Echo.cpp ****         HPF_R_post.Process(filteredDelay_R_post * 0.1f);
 11248              		.loc 20 562 27 is_stmt 0 view .LVU3137
 11249 0916 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11250              	.LVL664:
 563:Veno-Echo.cpp **** 
 11251              		.loc 20 563 9 is_stmt 1 view .LVU3138
 563:Veno-Echo.cpp **** 
 11252              		.loc 20 563 27 is_stmt 0 view .LVU3139
 11253 091a DFEDA17A 		vldr.32	s15, .L651+4
 11254 091e 9DED150A 		vldr.32	s0, [sp, #84]
 11255 0922 2046     		mov	r0, r4
 11256 0924 20EE270A 		vmul.f32	s0, s0, s15
 11257 0928 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11258              	.LVL665:
 565:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11259              		.loc 20 565 9 is_stmt 1 view .LVU3140
 565:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11260              		.loc 20 565 9 is_stmt 0 view .LVU3141
 11261              	.LBE1980:
 11262              	.LBE2232:
 11263              	.LBE2260:
 11264              	.LBE2271:
  53:../DaisySP/Source/Filters/svf.h ****     /** highpass output
  54:../DaisySP/Source/Filters/svf.h ****         \return high pass output of the filter
  55:../DaisySP/Source/Filters/svf.h ****     */
  56:../DaisySP/Source/Filters/svf.h ****     inline float High() { return out_high_; }
 11265              		.loc 10 56 27 is_stmt 1 view .LVU3142
 11266              	.LBB2272:
 11267              	.LBB2261:
 11268              	.LBB2233:
 11269              	.LBB1981:
 565:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11270              		.loc 20 565 51 is_stmt 0 view .LVU3143
 11271 092c F2EE046A 		vmov.f32	s13, #1.0e+1
 11272 0930 95ED0D7A 		vldr.32	s14, [r5, #52]
 568:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11273              		.loc 20 568 55 view .LVU3144
 11274 0934 14A9     		add	r1, sp, #80
 566:Veno-Echo.cpp **** 
 11275              		.loc 20 566 51 view .LVU3145
 11276 0936 D4ED0D7A 		vldr.32	s15, [r4, #52]
 568:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11277              		.loc 20 568 55 view .LVU3146
 11278 093a 16AA     		add	r2, sp, #88
 565:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11279              		.loc 20 565 51 view .LVU3147
 11280 093c 27EE267A 		vmul.f32	s14, s14, s13
 568:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11281              		.loc 20 568 55 view .LVU3148
 11282 0940 9E48     		ldr	r0, .L651+32
 566:Veno-Echo.cpp **** 
 11283              		.loc 20 566 51 view .LVU3149
 11284 0942 67EEA67A 		vmul.f32	s15, s15, s13
 565:Veno-Echo.cpp ****         float HPF_R_signal_post{HPF_R_post.High() * 10.0f};
 11285              		.loc 20 565 58 view .LVU3150
 11286 0946 8DED167A 		vstr.32	s14, [sp, #88]
 566:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 349


 11287              		.loc 20 566 9 is_stmt 1 view .LVU3151
 11288              	.LVL666:
 566:Veno-Echo.cpp **** 
 11289              		.loc 20 566 9 is_stmt 0 view .LVU3152
 11290              	.LBE1981:
 11291              	.LBE2233:
 11292              	.LBE2261:
 11293              	.LBE2272:
 11294              		.loc 10 56 27 is_stmt 1 view .LVU3153
 11295              	.LBB2273:
 11296              	.LBB2262:
 11297              	.LBB2234:
 11298              	.LBB1982:
 566:Veno-Echo.cpp **** 
 11299              		.loc 20 566 58 is_stmt 0 view .LVU3154
 11300 094a CDED177A 		vstr.32	s15, [sp, #92]
 568:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11301              		.loc 20 568 9 is_stmt 1 view .LVU3155
 568:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11302              		.loc 20 568 55 is_stmt 0 view .LVU3156
 11303 094e FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11304              	.LVL667:
 569:Veno-Echo.cpp **** 
 11305              		.loc 20 569 55 view .LVU3157
 11306 0952 15A9     		add	r1, sp, #84
 11307 0954 17AA     		add	r2, sp, #92
 11308 0956 9A48     		ldr	r0, .L651+36
 568:Veno-Echo.cpp ****         filteredDelay_R_post = HPF_RXfade_post.Process(filteredDelay_R_post, HPF_R_signal_post);
 11309              		.loc 20 568 30 view .LVU3158
 11310 0958 8DED140A 		vstr.32	s0, [sp, #80]
 569:Veno-Echo.cpp **** 
 11311              		.loc 20 569 9 is_stmt 1 view .LVU3159
 569:Veno-Echo.cpp **** 
 11312              		.loc 20 569 55 is_stmt 0 view .LVU3160
 11313 095c FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11314              	.LVL668:
 572:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11315              		.loc 20 572 53 view .LVU3161
 11316 0960 14AA     		add	r2, sp, #80
 11317 0962 10A9     		add	r1, sp, #64
 11318 0964 9748     		ldr	r0, .L651+40
 569:Veno-Echo.cpp **** 
 11319              		.loc 20 569 30 view .LVU3162
 11320 0966 8DED150A 		vstr.32	s0, [sp, #84]
 572:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11321              		.loc 20 572 9 is_stmt 1 view .LVU3163
 572:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11322              		.loc 20 572 53 is_stmt 0 view .LVU3164
 11323 096a FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11324              	.LVL669:
 573:Veno-Echo.cpp **** 
 11325              		.loc 20 573 53 view .LVU3165
 11326 096e 15AA     		add	r2, sp, #84
 11327 0970 11A9     		add	r1, sp, #68
 11328 0972 9548     		ldr	r0, .L651+44
 572:Veno-Echo.cpp ****         delaySignal_R_SUM = FilterMix_R_post.Process(delaySignal_R_SUM,filteredDelay_R_post);
 11329              		.loc 20 572 27 view .LVU3166
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 350


 11330 0974 8DED100A 		vstr.32	s0, [sp, #64]
 573:Veno-Echo.cpp **** 
 11331              		.loc 20 573 9 is_stmt 1 view .LVU3167
 573:Veno-Echo.cpp **** 
 11332              		.loc 20 573 53 is_stmt 0 view .LVU3168
 11333 0978 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11334              	.LVL670:
 11335 097c DDED107A 		vldr.32	s15, [sp, #64]
 573:Veno-Echo.cpp **** 
 11336              		.loc 20 573 27 view .LVU3169
 11337 0980 8DED110A 		vstr.32	s0, [sp, #68]
 11338              	.LBE1982:
 11339 0984 A1E4     		b	.L564
 11340              	.LVL671:
 11341              	.L633:
 573:Veno-Echo.cpp **** 
 11342              		.loc 20 573 27 view .LVU3170
 11343              	.LBE2234:
 516:Veno-Echo.cpp **** 
 11344              		.loc 20 516 25 view .LVU3171
 11345 0986 DFED917A 		vldr.32	s15, .L651+48
 11346              	.LVL672:
 516:Veno-Echo.cpp **** 
 11347              		.loc 20 516 25 view .LVU3172
 11348 098a 30E4     		b	.L554
 11349              	.LVL673:
 11350              	.L632:
 512:Veno-Echo.cpp ****             
 11351              		.loc 20 512 25 view .LVU3173
 11352 098c 9FED8F7A 		vldr.32	s14, .L651+48
 11353              	.LVL674:
 512:Veno-Echo.cpp ****             
 11354              		.loc 20 512 25 view .LVU3174
 11355 0990 1CE4     		b	.L552
 11356              	.LVL675:
 11357              	.L580:
 11358              	.LBB2235:
 442:Veno-Echo.cpp **** {
 11359              		.loc 20 442 1 view .LVU3175
 11360 0992 824B     		ldr	r3, .L651
 11361              	.LBE2235:
 11362              	.LBB2236:
 11363              	.LBB1876:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11364              		.loc 20 2005 19 view .LVU3176
 11365 0994 B0EE470A 		vmov.f32	s0, s14
 11366              	.LVL676:
2011:Veno-Echo.cpp **** }
 11367              		.loc 20 2011 5 is_stmt 1 view .LVU3177
2011:Veno-Echo.cpp **** }
 11368              		.loc 20 2011 5 is_stmt 0 view .LVU3178
 11369              	.LBE1876:
 11370              	.LBE2236:
 11371              	.LBB2237:
 442:Veno-Echo.cpp **** {
 11372              		.loc 20 442 1 view .LVU3179
 11373 0998 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 351


 11374              	.LBE2237:
 440:Veno-Echo.cpp **** 
 11375              		.loc 20 440 23 view .LVU3180
 11376 099a 8DED0D0A 		vstr.32	s0, [sp, #52]
 442:Veno-Echo.cpp **** {
 11377              		.loc 20 442 1 is_stmt 1 view .LVU3181
 11378              	.LBB2238:
 11379 099e 002B     		cmp	r3, #0
 11380 09a0 7FF499AB 		bne	.L546
 11381              	.L640:
 11382              	.LBB1879:
 448:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 11383              		.loc 20 448 9 view .LVU3182
 448:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 11384              		.loc 20 448 22 is_stmt 0 view .LVU3183
 11385 09a4 9FED7E9A 		vldr.32	s18, .L651+4
 11386 09a8 894D     		ldr	r5, .L651+52
 11387 09aa 27EE890A 		vmul.f32	s0, s15, s18
 449:Veno-Echo.cpp **** 
 11388              		.loc 20 449 22 view .LVU3184
 11389 09ae 894C     		ldr	r4, .L651+56
 448:Veno-Echo.cpp ****         LPF_R.Process(delaySignal_R * 0.1f);
 11390              		.loc 20 448 22 view .LVU3185
 11391 09b0 2846     		mov	r0, r5
 11392 09b2 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11393              	.LVL677:
 449:Veno-Echo.cpp **** 
 11394              		.loc 20 449 9 is_stmt 1 view .LVU3186
 449:Veno-Echo.cpp **** 
 11395              		.loc 20 449 22 is_stmt 0 view .LVU3187
 11396 09b6 9DED0D0A 		vldr.32	s0, [sp, #52]
 11397 09ba 2046     		mov	r0, r4
 11398 09bc 20EE090A 		vmul.f32	s0, s0, s18
 11399 09c0 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11400              	.LVL678:
 452:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11401              		.loc 20 452 9 is_stmt 1 view .LVU3188
 452:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11402              		.loc 20 452 9 is_stmt 0 view .LVU3189
 11403              	.LBE1879:
 11404              	.LBE2238:
 11405              	.LBE2262:
 11406              	.LBE2273:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 11407              		.loc 10 52 26 is_stmt 1 view .LVU3190
 11408              	.LBB2274:
 11409              	.LBB2263:
 11410              	.LBB2239:
 11411              	.LBB1894:
 452:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11412              		.loc 20 452 40 is_stmt 0 view .LVU3191
 11413 09c4 F2EE046A 		vmov.f32	s13, #1.0e+1
 11414 09c8 95ED0C7A 		vldr.32	s14, [r5, #48]
 456:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11415              		.loc 20 456 49 view .LVU3192
 11416 09cc 12AA     		add	r2, sp, #72
 453:Veno-Echo.cpp ****         
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 352


 11417              		.loc 20 453 40 view .LVU3193
 11418 09ce D4ED0C7A 		vldr.32	s15, [r4, #48]
 456:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11419              		.loc 20 456 49 view .LVU3194
 11420 09d2 0CA9     		add	r1, sp, #48
 452:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11421              		.loc 20 452 40 view .LVU3195
 11422 09d4 27EE267A 		vmul.f32	s14, s14, s13
 456:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11423              		.loc 20 456 49 view .LVU3196
 11424 09d8 7F48     		ldr	r0, .L651+60
 453:Veno-Echo.cpp ****         
 11425              		.loc 20 453 40 view .LVU3197
 11426 09da 67EEA67A 		vmul.f32	s15, s15, s13
 452:Veno-Echo.cpp ****         float LPF_R_signal{LPF_R.Low() * 10.0f};
 11427              		.loc 20 452 47 view .LVU3198
 11428 09de 8DED127A 		vstr.32	s14, [sp, #72]
 453:Veno-Echo.cpp ****         
 11429              		.loc 20 453 9 is_stmt 1 view .LVU3199
 11430              	.LVL679:
 453:Veno-Echo.cpp ****         
 11431              		.loc 20 453 9 is_stmt 0 view .LVU3200
 11432              	.LBE1894:
 11433              	.LBE2239:
 11434              	.LBE2263:
 11435              	.LBE2274:
  52:../DaisySP/Source/Filters/svf.h ****     /** highpass output
 11436              		.loc 10 52 26 is_stmt 1 view .LVU3201
 11437              	.LBB2275:
 11438              	.LBB2264:
 11439              	.LBB2240:
 11440              	.LBB1895:
 453:Veno-Echo.cpp ****         
 11441              		.loc 20 453 47 is_stmt 0 view .LVU3202
 11442 09e2 CDED137A 		vstr.32	s15, [sp, #76]
 456:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11443              		.loc 20 456 9 is_stmt 1 view .LVU3203
 456:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11444              		.loc 20 456 49 is_stmt 0 view .LVU3204
 11445 09e6 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11446              	.LVL680:
 457:Veno-Echo.cpp **** 
 11447              		.loc 20 457 49 view .LVU3205
 11448 09ea 13AA     		add	r2, sp, #76
 11449 09ec 0DA9     		add	r1, sp, #52
 11450 09ee 7B48     		ldr	r0, .L651+64
 456:Veno-Echo.cpp ****         float filteredDelay_R{LPF_RXfade.Process(delaySignal_R, LPF_R_signal)};
 11451              		.loc 20 456 78 view .LVU3206
 11452 09f0 8DED140A 		vstr.32	s0, [sp, #80]
 457:Veno-Echo.cpp **** 
 11453              		.loc 20 457 9 is_stmt 1 view .LVU3207
 457:Veno-Echo.cpp **** 
 11454              		.loc 20 457 49 is_stmt 0 view .LVU3208
 11455 09f4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11456              	.LVL681:
 11457              	.LBB1880:
 11458              	.LBB1881:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 353


2004:Veno-Echo.cpp ****         returnval = limit;
 11459              		.loc 20 2004 5 view .LVU3209
 11460 09f8 F0EE006A 		vmov.f32	s13, #2.0e+0
 11461              	.LBE1881:
 11462              	.LBE1880:
 460:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 11463              		.loc 20 460 36 view .LVU3210
 11464 09fc 9DED147A 		vldr.32	s14, [sp, #80]
 457:Veno-Echo.cpp **** 
 11465              		.loc 20 457 49 view .LVU3211
 11466 0a00 F0EE407A 		vmov.f32	s15, s0
 460:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 11467              		.loc 20 460 9 is_stmt 1 view .LVU3212
 11468              	.LVL682:
 11469              	.LBB1885:
 11470              	.LBI1880:
2001:Veno-Echo.cpp **** {
 11471              		.loc 20 2001 7 view .LVU3213
 11472              	.LBB1882:
2003:Veno-Echo.cpp ****     if (input > limit)
 11473              		.loc 20 2003 5 view .LVU3214
2004:Veno-Echo.cpp ****         returnval = limit;
 11474              		.loc 20 2004 5 view .LVU3215
 11475 0a04 B4EEE67A 		vcmpe.f32	s14, s13
 11476 0a08 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11477 0a0c 76DC     		bgt	.L581
2006:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11478              		.loc 20 2006 10 view .LVU3216
 11479 0a0e F8EE006A 		vmov.f32	s13, #-2.0e+0
 11480 0a12 B4EEE67A 		vcmpe.f32	s14, s13
 11481 0a16 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11482 0a1a 00F19480 		bmi	.L582
 11483 0a1e 27EE090A 		vmul.f32	s0, s14, s18
 11484              	.LVL683:
 11485              	.L547:
2011:Veno-Echo.cpp **** }
 11486              		.loc 20 2011 5 view .LVU3217
2011:Veno-Echo.cpp **** }
 11487              		.loc 20 2011 5 is_stmt 0 view .LVU3218
 11488              	.LBE1882:
 11489              	.LBE1885:
 11490              	.LBB1886:
 11491              	.LBB1887:
2004:Veno-Echo.cpp ****         returnval = limit;
 11492              		.loc 20 2004 5 view .LVU3219
 11493 0a22 F0EE006A 		vmov.f32	s13, #2.0e+0
 11494              	.LBE1887:
 11495              	.LBE1886:
 460:Veno-Echo.cpp ****         filteredDelay_R = HardLimit(filteredDelay_R,AudioLimit);
 11496              		.loc 20 460 25 view .LVU3220
 11497 0a26 8DED147A 		vstr.32	s14, [sp, #80]
 461:Veno-Echo.cpp **** 
 11498              		.loc 20 461 9 is_stmt 1 view .LVU3221
 11499              	.LVL684:
 11500              	.LBB1890:
 11501              	.LBI1886:
2001:Veno-Echo.cpp **** {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 354


 11502              		.loc 20 2001 7 view .LVU3222
 11503              	.LBB1888:
2003:Veno-Echo.cpp ****     if (input > limit)
 11504              		.loc 20 2003 5 view .LVU3223
2004:Veno-Echo.cpp ****         returnval = limit;
 11505              		.loc 20 2004 5 view .LVU3224
 11506 0a2a F4EEE67A 		vcmpe.f32	s15, s13
 11507 0a2e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11508 0a32 60DC     		bgt	.L583
2006:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 11509              		.loc 20 2006 10 view .LVU3225
 11510 0a34 B8EE007A 		vmov.f32	s14, #-2.0e+0
2007:Veno-Echo.cpp ****     else
 11511              		.loc 20 2007 19 is_stmt 0 view .LVU3226
 11512 0a38 F4EE477A 		vcmp.f32	s15, s14
 11513 0a3c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 11514 0a40 48BF     		it	mi
 11515 0a42 F0EE477A 		vmovmi.f32	s15, s14
 11516              	.LVL685:
 11517              	.L548:
2011:Veno-Echo.cpp **** }
 11518              		.loc 20 2011 5 is_stmt 1 view .LVU3227
2011:Veno-Echo.cpp **** }
 11519              		.loc 20 2011 5 is_stmt 0 view .LVU3228
 11520              	.LBE1888:
 11521              	.LBE1890:
 464:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 11522              		.loc 20 464 22 view .LVU3229
 11523 0a46 664D     		ldr	r5, .L651+68
 465:Veno-Echo.cpp **** 
 11524              		.loc 20 465 22 view .LVU3230
 11525 0a48 664C     		ldr	r4, .L651+72
 464:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 11526              		.loc 20 464 22 view .LVU3231
 11527 0a4a 2846     		mov	r0, r5
 461:Veno-Echo.cpp **** 
 11528              		.loc 20 461 25 view .LVU3232
 11529 0a4c CDED157A 		vstr.32	s15, [sp, #84]
 464:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 11530              		.loc 20 464 9 is_stmt 1 view .LVU3233
 464:Veno-Echo.cpp ****         HPF_R.Process(filteredDelay_R * 0.1f);
 11531              		.loc 20 464 22 is_stmt 0 view .LVU3234
 11532 0a50 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11533              	.LVL686:
 465:Veno-Echo.cpp **** 
 11534              		.loc 20 465 9 is_stmt 1 view .LVU3235
 465:Veno-Echo.cpp **** 
 11535              		.loc 20 465 22 is_stmt 0 view .LVU3236
 11536 0a54 DFED527A 		vldr.32	s15, .L651+4
 11537 0a58 9DED150A 		vldr.32	s0, [sp, #84]
 11538 0a5c 2046     		mov	r0, r4
 11539 0a5e 20EE270A 		vmul.f32	s0, s0, s15
 11540 0a62 FFF7FEFF 		bl	_ZN7daisysp3Svf7ProcessEf
 11541              	.LVL687:
 467:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11542              		.loc 20 467 9 is_stmt 1 view .LVU3237
 467:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 355


 11543              		.loc 20 467 9 is_stmt 0 view .LVU3238
 11544              	.LBE1895:
 11545              	.LBE2240:
 11546              	.LBE2264:
 11547              	.LBE2275:
 11548              		.loc 10 56 27 is_stmt 1 view .LVU3239
 11549              	.LBB2276:
 11550              	.LBB2265:
 11551              	.LBB2241:
 11552              	.LBB1896:
 467:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11553              		.loc 20 467 41 is_stmt 0 view .LVU3240
 11554 0a66 F2EE046A 		vmov.f32	s13, #1.0e+1
 11555 0a6a 95ED0D7A 		vldr.32	s14, [r5, #52]
 470:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11556              		.loc 20 470 45 view .LVU3241
 11557 0a6e 14A9     		add	r1, sp, #80
 468:Veno-Echo.cpp **** 
 11558              		.loc 20 468 41 view .LVU3242
 11559 0a70 D4ED0D7A 		vldr.32	s15, [r4, #52]
 470:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11560              		.loc 20 470 45 view .LVU3243
 11561 0a74 16AA     		add	r2, sp, #88
 467:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11562              		.loc 20 467 41 view .LVU3244
 11563 0a76 27EE267A 		vmul.f32	s14, s14, s13
 470:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11564              		.loc 20 470 45 view .LVU3245
 11565 0a7a 5B48     		ldr	r0, .L651+76
 468:Veno-Echo.cpp **** 
 11566              		.loc 20 468 41 view .LVU3246
 11567 0a7c 67EEA67A 		vmul.f32	s15, s15, s13
 467:Veno-Echo.cpp ****         float HPF_R_signal{HPF_R.High() * 10.0f};
 11568              		.loc 20 467 48 view .LVU3247
 11569 0a80 8DED167A 		vstr.32	s14, [sp, #88]
 468:Veno-Echo.cpp **** 
 11570              		.loc 20 468 9 is_stmt 1 view .LVU3248
 11571              	.LVL688:
 468:Veno-Echo.cpp **** 
 11572              		.loc 20 468 9 is_stmt 0 view .LVU3249
 11573              	.LBE1896:
 11574              	.LBE2241:
 11575              	.LBE2265:
 11576              	.LBE2276:
 11577              		.loc 10 56 27 is_stmt 1 view .LVU3250
 11578              	.LBB2277:
 11579              	.LBB2266:
 11580              	.LBB2242:
 11581              	.LBB1897:
 468:Veno-Echo.cpp **** 
 11582              		.loc 20 468 48 is_stmt 0 view .LVU3251
 11583 0a84 CDED177A 		vstr.32	s15, [sp, #92]
 470:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11584              		.loc 20 470 9 is_stmt 1 view .LVU3252
 470:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11585              		.loc 20 470 45 is_stmt 0 view .LVU3253
 11586 0a88 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 356


 11587              	.LVL689:
 471:Veno-Echo.cpp **** 
 11588              		.loc 20 471 45 view .LVU3254
 11589 0a8c 15A9     		add	r1, sp, #84
 11590 0a8e 17AA     		add	r2, sp, #92
 11591 0a90 5648     		ldr	r0, .L651+80
 470:Veno-Echo.cpp ****         filteredDelay_R = HPF_RXfade.Process(filteredDelay_R, HPF_R_signal);
 11592              		.loc 20 470 25 view .LVU3255
 11593 0a92 8DED140A 		vstr.32	s0, [sp, #80]
 471:Veno-Echo.cpp **** 
 11594              		.loc 20 471 9 is_stmt 1 view .LVU3256
 471:Veno-Echo.cpp **** 
 11595              		.loc 20 471 45 is_stmt 0 view .LVU3257
 11596 0a96 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11597              	.LVL690:
 475:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 11598              		.loc 20 475 44 view .LVU3258
 11599 0a9a 14AA     		add	r2, sp, #80
 11600 0a9c 0CA9     		add	r1, sp, #48
 11601 0a9e 5448     		ldr	r0, .L651+84
 471:Veno-Echo.cpp **** 
 11602              		.loc 20 471 25 view .LVU3259
 11603 0aa0 8DED150A 		vstr.32	s0, [sp, #84]
 475:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 11604              		.loc 20 475 9 is_stmt 1 view .LVU3260
 475:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 11605              		.loc 20 475 44 is_stmt 0 view .LVU3261
 11606 0aa4 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11607              	.LVL691:
 476:Veno-Echo.cpp **** 
 11608              		.loc 20 476 44 view .LVU3262
 11609 0aa8 15AA     		add	r2, sp, #84
 11610 0aaa 0DA9     		add	r1, sp, #52
 11611 0aac 5148     		ldr	r0, .L651+88
 475:Veno-Echo.cpp ****         delaySignal_R = FilterMix_R.Process(delaySignal_R,filteredDelay_R);
 11612              		.loc 20 475 23 view .LVU3263
 11613 0aae 8DED0C0A 		vstr.32	s0, [sp, #48]
 476:Veno-Echo.cpp **** 
 11614              		.loc 20 476 9 is_stmt 1 view .LVU3264
 476:Veno-Echo.cpp **** 
 11615              		.loc 20 476 44 is_stmt 0 view .LVU3265
 11616 0ab2 FFF7FEFF 		bl	_ZN7daisysp9CrossFade7ProcessERfS1_
 11617              	.LVL692:
 11618 0ab6 DDED0C7A 		vldr.32	s15, [sp, #48]
 476:Veno-Echo.cpp **** 
 11619              		.loc 20 476 23 view .LVU3266
 11620 0aba 8DED0D0A 		vstr.32	s0, [sp, #52]
 11621              	.LBE1897:
 11622 0abe FFF70ABB 		b	.L546
 11623              	.LVL693:
 11624              	.L587:
 476:Veno-Echo.cpp **** 
 11625              		.loc 20 476 23 view .LVU3267
 11626              	.LBE2242:
 11627              	.LBB2243:
 11628              	.LBB1950:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 357


 11629              		.loc 20 2005 19 view .LVU3268
 11630 0ac2 B0EE676A 		vmov.f32	s12, s15
 11631              	.LVL694:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11632              		.loc 20 2005 19 view .LVU3269
 11633 0ac6 FFF7BDBB 		b	.L558
 11634              	.LVL695:
 11635              	.L586:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11636              		.loc 20 2005 19 view .LVU3270
 11637              	.LBE1950:
 11638              	.LBE2243:
 11639              	.LBB2244:
 11640              	.LBB1946:
 11641 0aca F0EE678A 		vmov.f32	s17, s15
 11642              	.LVL696:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11643              		.loc 20 2005 19 view .LVU3271
 11644 0ace FFF7A6BB 		b	.L556
 11645              	.LVL697:
 11646              	.L588:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11647              		.loc 20 2005 19 view .LVU3272
 11648              	.LBE1946:
 11649              	.LBE2244:
 11650              	.LBB2245:
 11651              	.LBB1955:
 11652 0ad2 F0EE477A 		vmov.f32	s15, s14
 11653              	.LVL698:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11654              		.loc 20 2005 19 view .LVU3273
 11655 0ad6 FFF7DEBB 		b	.L560
 11656              	.LVL699:
 11657              	.L635:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11658              		.loc 20 2005 19 view .LVU3274
 11659              	.LBE1955:
 11660              	.LBE2245:
 593:Veno-Echo.cpp ****             mixR = Right_In + delaySignal_R_SUM;
 11661              		.loc 20 593 13 is_stmt 1 view .LVU3275
 593:Veno-Echo.cpp ****             mixR = Right_In + delaySignal_R_SUM;
 11662              		.loc 20 593 18 is_stmt 0 view .LVU3276
 11663 0ada DDED086A 		vldr.32	s13, [sp, #32]
 594:Veno-Echo.cpp ****         }
 11664              		.loc 20 594 18 view .LVU3277
 11665 0ade 9DED097A 		vldr.32	s14, [sp, #36]
 593:Veno-Echo.cpp ****             mixR = Right_In + delaySignal_R_SUM;
 11666              		.loc 20 593 18 view .LVU3278
 11667 0ae2 77EEA67A 		vadd.f32	s15, s15, s13
 11668              	.LVL700:
 594:Veno-Echo.cpp ****         }
 11669              		.loc 20 594 13 is_stmt 1 view .LVU3279
 594:Veno-Echo.cpp ****         }
 11670              		.loc 20 594 18 is_stmt 0 view .LVU3280
 11671 0ae6 30EE070A 		vadd.f32	s0, s0, s14
 11672              	.LVL701:
 594:Veno-Echo.cpp ****         }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 358


 11673              		.loc 20 594 18 view .LVU3281
 11674 0aea 07E4     		b	.L570
 11675              	.LVL702:
 11676              	.L590:
 11677              	.LBB2246:
 11678              	.LBB1983:
 11679              	.LBB1976:
 11680              	.LBB1968:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11681              		.loc 20 2005 19 view .LVU3282
 11682 0aec B0EE667A 		vmov.f32	s14, s13
 11683              	.LVL703:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11684              		.loc 20 2005 19 view .LVU3283
 11685 0af0 9FED410A 		vldr.32	s0, .L651+92
 11686 0af4 F7E6     		b	.L565
 11687              	.LVL704:
 11688              	.L583:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11689              		.loc 20 2005 19 view .LVU3284
 11690              	.LBE1968:
 11691              	.LBE1976:
 11692              	.LBE1983:
 11693              	.LBE2246:
 11694              	.LBB2247:
 11695              	.LBB1898:
 11696              	.LBB1891:
 11697              	.LBB1889:
 11698 0af6 F0EE667A 		vmov.f32	s15, s13
 11699              	.LVL705:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11700              		.loc 20 2005 19 view .LVU3285
 11701 0afa A4E7     		b	.L548
 11702              	.LVL706:
 11703              	.L581:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11704              		.loc 20 2005 19 view .LVU3286
 11705              	.LBE1889:
 11706              	.LBE1891:
 11707              	.LBB1892:
 11708              	.LBB1883:
 11709 0afc B0EE667A 		vmov.f32	s14, s13
 11710              	.LVL707:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11711              		.loc 20 2005 19 view .LVU3287
 11712 0b00 9FED3D0A 		vldr.32	s0, .L651+92
 11713 0b04 8DE7     		b	.L547
 11714              	.LVL708:
 11715              	.L592:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11716              		.loc 20 2005 19 view .LVU3288
 11717              	.LBE1883:
 11718              	.LBE1892:
 11719              	.LBE1898:
 11720              	.LBE2247:
 11721              	.LBB2248:
 11722              	.LBB1984:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 359


 11723              	.LBB1977:
 11724              	.LBB1974:
 11725 0b06 F0EE667A 		vmov.f32	s15, s13
 11726              	.LVL709:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11727              		.loc 20 2005 19 view .LVU3289
 11728 0b0a FFE6     		b	.L566
 11729              	.LVL710:
 11730              	.L524:
2005:Veno-Echo.cpp ****     else if(input < (limit * -1.0f))
 11731              		.loc 20 2005 19 view .LVU3290
 11732              	.LBE1974:
 11733              	.LBE1977:
 11734              	.LBE1984:
 11735              	.LBE2248:
 11736              	.LBB2249:
 11737              	.LBB2159:
 11738              	.LBB2149:
 116:delayline_reverse.h ****                 }
 11739              		.loc 19 116 21 view .LVU3291
 11740 0b0c A960     		str	r1, [r5, #8]
 11741 0b0e 58E6     		b	.L526
 11742              	.LVL711:
 11743              	.L534:
 116:delayline_reverse.h ****                 }
 11744              		.loc 19 116 21 view .LVU3292
 11745              	.LBE2149:
 11746              	.LBE2159:
 11747              	.LBE2249:
 11748              	.LBB2250:
 11749              	.LBB2219:
 11750              	.LBB2215:
 11751 0b10 A160     		str	r1, [r4, #8]
 11752 0b12 33E6     		b	.L536
 11753              	.LVL712:
 11754              	.L503:
 116:delayline_reverse.h ****                 }
 11755              		.loc 19 116 21 view .LVU3293
 11756              	.LBE2215:
 11757              	.LBE2219:
 11758              	.LBE2250:
 11759              	.LBE2266:
 11760              	.LBE2277:
 614:Veno-Echo.cpp **** 
 11761              		.loc 20 614 1 view .LVU3294
 11762 0b14 19B0     		add	sp, sp, #100
 11763              		.cfi_remember_state
 11764              		.cfi_def_cfa_offset 100
 11765              		@ sp needed
 11766 0b16 BDEC108B 		vldm	sp!, {d8-d15}
 11767              		.cfi_restore 94
 11768              		.cfi_restore 95
 11769              		.cfi_restore 92
 11770              		.cfi_restore 93
 11771              		.cfi_restore 90
 11772              		.cfi_restore 91
 11773              		.cfi_restore 88
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 360


 11774              		.cfi_restore 89
 11775              		.cfi_restore 86
 11776              		.cfi_restore 87
 11777              		.cfi_restore 84
 11778              		.cfi_restore 85
 11779              		.cfi_restore 82
 11780              		.cfi_restore 83
 11781              		.cfi_restore 80
 11782              		.cfi_restore 81
 11783              		.cfi_def_cfa_offset 36
 11784 0b1a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 11785              	.LVL713:
 11786              	.L541:
 11787              		.cfi_restore_state
 11788              	.LBB2278:
 11789              	.LBB2267:
 11790              	.LBB2251:
 11791              	.LBB2220:
 11792              	.LBB2216:
 145:delayline_reverse.h ****                     playinghead_ = false;
 11793              		.loc 19 145 21 view .LVU3295
 11794 0b1e 0021     		movs	r1, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11795              		.loc 19 144 21 view .LVU3296
 11796 0b20 039C     		ldr	r4, [sp, #12]
 11797              	.LVL714:
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11798              		.loc 19 144 21 view .LVU3297
 11799 0b22 2260     		str	r2, [r4]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 11800              		.loc 19 145 21 view .LVU3298
 11801 0b24 1970     		strb	r1, [r3]
 146:delayline_reverse.h ****                 }
 11802              		.loc 19 146 21 view .LVU3299
 11803 0b26 0170     		strb	r1, [r0]
 11804 0b28 F6E5     		b	.L538
 11805              	.LVL715:
 11806              	.L531:
 146:delayline_reverse.h ****                 }
 11807              		.loc 19 146 21 view .LVU3300
 11808              	.LBE2216:
 11809              	.LBE2220:
 11810              	.LBE2251:
 11811              	.LBB2252:
 11812              	.LBB2160:
 11813              	.LBB2150:
 145:delayline_reverse.h ****                     playinghead_ = false;
 11814              		.loc 19 145 21 view .LVU3301
 11815 0b2a 0022     		movs	r2, #0
 144:delayline_reverse.h ****                     fading_ = false;    //stop fading
 11816              		.loc 19 144 21 view .LVU3302
 11817 0b2c 0498     		ldr	r0, [sp, #16]
 11818 0b2e 0160     		str	r1, [r0]	@ float
 145:delayline_reverse.h ****                     playinghead_ = false;
 11819              		.loc 19 145 21 view .LVU3303
 11820 0b30 1A70     		strb	r2, [r3]
 146:delayline_reverse.h ****                 }
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 361


 11821              		.loc 19 146 21 view .LVU3304
 11822 0b32 3A70     		strb	r2, [r7]
 11823 0b34 90E5     		b	.L528
 11824              	.LVL716:
 11825              	.L642:
 146:delayline_reverse.h ****                 }
 11826              		.loc 19 146 21 view .LVU3305
 11827              	.LBE2150:
 11828              	.LBE2160:
 11829              	.LBE2252:
 11830              	.LBB2253:
 11831              	.LBB2221:
 11832              	.LBB2217:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 11833              		.loc 19 130 17 view .LVU3306
 11834 0b36 C2ED007A 		vstr.32	s15, [r2]
 11835 0b3a EDE5     		b	.L538
 11836              	.LVL717:
 11837              	.L591:
 130:delayline_reverse.h ****                 if (fadepos_ > 1.0f)
 11838              		.loc 19 130 17 view .LVU3307
 11839              	.LBE2217:
 11840              	.LBE2221:
 11841              	.LBE2253:
 11842              	.LBB2254:
 11843              	.LBB1985:
 11844              	.LBB1978:
 11845              	.LBB1969:
2007:Veno-Echo.cpp ****     else
 11846              		.loc 20 2007 19 view .LVU3308
 11847 0b3c B0EE667A 		vmov.f32	s14, s13
 11848              	.LVL718:
2007:Veno-Echo.cpp ****     else
 11849              		.loc 20 2007 19 view .LVU3309
 11850 0b40 9FED2E0A 		vldr.32	s0, .L651+96
 11851 0b44 CFE6     		b	.L565
 11852              	.LVL719:
 11853              	.L582:
2007:Veno-Echo.cpp ****     else
 11854              		.loc 20 2007 19 view .LVU3310
 11855              	.LBE1969:
 11856              	.LBE1978:
 11857              	.LBE1985:
 11858              	.LBE2254:
 11859              	.LBB2255:
 11860              	.LBB1899:
 11861              	.LBB1893:
 11862              	.LBB1884:
 11863 0b46 B0EE667A 		vmov.f32	s14, s13
 11864              	.LVL720:
2007:Veno-Echo.cpp ****     else
 11865              		.loc 20 2007 19 view .LVU3311
 11866 0b4a 9FED2C0A 		vldr.32	s0, .L651+96
 11867 0b4e 68E7     		b	.L547
 11868              	.LVL721:
 11869              	.L505:
2007:Veno-Echo.cpp ****     else
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 362


 11870              		.loc 20 2007 19 view .LVU3312
 11871              	.LBE1884:
 11872              	.LBE1893:
 11873              	.LBE1899:
 11874              	.LBE2255:
 11875              	.LBE2267:
 11876              	.LBE2278:
 375:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 11877              		.loc 20 375 13 is_stmt 1 view .LVU3313
 376:Veno-Echo.cpp ****                 {
 11878              		.loc 20 376 17 view .LVU3314
 376:Veno-Echo.cpp ****                 {
 11879              		.loc 20 376 30 is_stmt 0 view .LVU3315
 11880 0b50 2B4B     		ldr	r3, .L651+100
 376:Veno-Echo.cpp ****                 {
 11881              		.loc 20 376 17 view .LVU3316
 11882 0b52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11883 0b54 022B     		cmp	r3, #2
 11884 0b56 3FF483AA 		beq	.L504
 378:Veno-Echo.cpp ****                 }
 11885              		.loc 20 378 21 is_stmt 1 view .LVU3317
 378:Veno-Echo.cpp ****                 }
 11886              		.loc 20 378 39 is_stmt 0 view .LVU3318
 11887 0b5a FFF7FEFF 		bl	_Z18Update_filterXfadev
 11888              	.LVL722:
 378:Veno-Echo.cpp ****                 }
 11889              		.loc 20 378 39 view .LVU3319
 11890 0b5e FFF77FBA 		b	.L504
 11891              	.LVL723:
 11892              	.L520:
 295:Veno-Echo.cpp ****                 Update_Buttons();
 11893              		.loc 20 295 13 is_stmt 1 view .LVU3320
 296:Veno-Echo.cpp ****                 GetModCV();
 11894              		.loc 20 296 17 view .LVU3321
 296:Veno-Echo.cpp ****                 GetModCV();
 11895              		.loc 20 296 31 is_stmt 0 view .LVU3322
 11896 0b62 FFF7FEFF 		bl	_Z14Update_Buttonsv
 11897              	.LVL724:
 297:Veno-Echo.cpp ****                 Update_DelayBaseTempo();
 11898              		.loc 20 297 17 is_stmt 1 view .LVU3323
 297:Veno-Echo.cpp ****                 Update_DelayBaseTempo();
 11899              		.loc 20 297 25 is_stmt 0 view .LVU3324
 11900 0b66 FFF7FEFF 		bl	_Z8GetModCVv
 11901              	.LVL725:
 298:Veno-Echo.cpp ****                 Update_DelayTempoLEDs();
 11902              		.loc 20 298 17 is_stmt 1 view .LVU3325
 298:Veno-Echo.cpp ****                 Update_DelayTempoLEDs();
 11903              		.loc 20 298 38 is_stmt 0 view .LVU3326
 11904 0b6a FFF7FEFF 		bl	_Z21Update_DelayBaseTempov
 11905              	.LVL726:
 299:Veno-Echo.cpp ****             break;
 11906              		.loc 20 299 17 is_stmt 1 view .LVU3327
 299:Veno-Echo.cpp ****             break;
 11907              		.loc 20 299 38 is_stmt 0 view .LVU3328
 11908 0b6e FFF7FEFF 		bl	_Z21Update_DelayTempoLEDsv
 11909              	.LVL727:
 300:Veno-Echo.cpp **** 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 363


 11910              		.loc 20 300 13 is_stmt 1 view .LVU3329
 11911 0b72 FFF775BA 		b	.L504
 11912              	.LVL728:
 11913              	.L518:
 306:Veno-Echo.cpp ****                 if(saveState != SAVING)
 11914              		.loc 20 306 13 view .LVU3330
 307:Veno-Echo.cpp ****                 {
 11915              		.loc 20 307 17 view .LVU3331
 307:Veno-Echo.cpp ****                 {
 11916              		.loc 20 307 30 is_stmt 0 view .LVU3332
 11917 0b76 224B     		ldr	r3, .L651+100
 307:Veno-Echo.cpp ****                 {
 11918              		.loc 20 307 17 view .LVU3333
 11919 0b78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11920 0b7a 022B     		cmp	r3, #2
 11921 0b7c 3FF470AA 		beq	.L504
 309:Veno-Echo.cpp ****                 }
 11922              		.loc 20 309 21 is_stmt 1 view .LVU3334
 309:Veno-Echo.cpp ****                 }
 11923              		.loc 20 309 38 is_stmt 0 view .LVU3335
 11924 0b80 FFF7FEFF 		bl	_Z17Update_DelayTimeLv
 11925              	.LVL729:
 309:Veno-Echo.cpp ****                 }
 11926              		.loc 20 309 38 view .LVU3336
 11927 0b84 FFF76CBA 		b	.L504
 11928              	.LVL730:
 11929              	.L517:
 313:Veno-Echo.cpp ****                 Update_DelayTimeR_CV();
 11930              		.loc 20 313 13 is_stmt 1 view .LVU3337
 314:Veno-Echo.cpp ****             break;
 11931              		.loc 20 314 17 view .LVU3338
 11932              	.LBB2279:
 11933              	.LBI2279:
 950:Veno-Echo.cpp **** {
 11934              		.loc 20 950 6 view .LVU3339
 11935              	.LBB2280:
 952:Veno-Echo.cpp **** }
 11936              		.loc 20 952 5 view .LVU3340
 952:Veno-Echo.cpp **** }
 11937              		.loc 20 952 36 is_stmt 0 view .LVU3341
 11938 0b88 0121     		movs	r1, #1
 11939 0b8a 1E48     		ldr	r0, .L651+104
 11940              	.LVL731:
 952:Veno-Echo.cpp **** }
 11941              		.loc 20 952 36 view .LVU3342
 11942 0b8c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 11943              	.LVL732:
 952:Veno-Echo.cpp **** }
 11944              		.loc 20 952 19 view .LVU3343
 11945 0b90 1D4B     		ldr	r3, .L651+108
 11946 0b92 83ED000A 		vstr.32	s0, [r3]
 953:Veno-Echo.cpp **** 
 11947              		.loc 20 953 1 view .LVU3344
 11948 0b96 FFF763BA 		b	.L504
 11949              	.L652:
 11950 0b9a 00BF     		.align	2
 11951              	.L651:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 364


 11952 0b9c 00000000 		.word	.LANCHOR83
 11953 0ba0 CDCCCC3D 		.word	1036831949
 11954 0ba4 00000000 		.word	.LANCHOR49
 11955 0ba8 00000000 		.word	.LANCHOR50
 11956 0bac 00000000 		.word	.LANCHOR121
 11957 0bb0 00000000 		.word	.LANCHOR122
 11958 0bb4 00000000 		.word	.LANCHOR37
 11959 0bb8 00000000 		.word	.LANCHOR38
 11960 0bbc 00000000 		.word	.LANCHOR119
 11961 0bc0 00000000 		.word	.LANCHOR120
 11962 0bc4 00000000 		.word	.LANCHOR125
 11963 0bc8 00000000 		.word	.LANCHOR126
 11964 0bcc 00000000 		.word	0
 11965 0bd0 00000000 		.word	.LANCHOR47
 11966 0bd4 00000000 		.word	.LANCHOR48
 11967 0bd8 00000000 		.word	.LANCHOR117
 11968 0bdc 00000000 		.word	.LANCHOR118
 11969 0be0 00000000 		.word	.LANCHOR35
 11970 0be4 00000000 		.word	.LANCHOR36
 11971 0be8 00000000 		.word	.LANCHOR115
 11972 0bec 00000000 		.word	.LANCHOR116
 11973 0bf0 00000000 		.word	.LANCHOR123
 11974 0bf4 00000000 		.word	.LANCHOR124
 11975 0bf8 CDCC4C3E 		.word	1045220557
 11976 0bfc CDCC4CBE 		.word	3192704205
 11977 0c00 00000000 		.word	.LANCHOR107
 11978 0c04 18000000 		.word	.LANCHOR4+24
 11979 0c08 00000000 		.word	.LANCHOR17
 11980              	.LVL733:
 11981              	.L516:
 953:Veno-Echo.cpp **** 
 11982              		.loc 20 953 1 view .LVU3345
 11983              	.LBE2280:
 11984              	.LBE2279:
 317:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 11985              		.loc 20 317 13 is_stmt 1 view .LVU3346
 318:Veno-Echo.cpp ****                 {
 11986              		.loc 20 318 17 view .LVU3347
 318:Veno-Echo.cpp ****                 {
 11987              		.loc 20 318 30 is_stmt 0 view .LVU3348
 11988 0c0c 2C4B     		ldr	r3, .L653
 318:Veno-Echo.cpp ****                 {
 11989              		.loc 20 318 17 view .LVU3349
 11990 0c0e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11991 0c10 022B     		cmp	r3, #2
 11992 0c12 3FF425AA 		beq	.L504
 320:Veno-Echo.cpp ****                 }
 11993              		.loc 20 320 21 is_stmt 1 view .LVU3350
 320:Veno-Echo.cpp ****                 }
 11994              		.loc 20 320 38 is_stmt 0 view .LVU3351
 11995 0c16 FFF7FEFF 		bl	_Z17Update_DelayTimeRv
 11996              	.LVL734:
 320:Veno-Echo.cpp ****                 }
 11997              		.loc 20 320 38 view .LVU3352
 11998 0c1a FFF721BA 		b	.L504
 11999              	.LVL735:
 12000              	.L515:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 365


 324:Veno-Echo.cpp ****                 Update_feedbackL_CV();
 12001              		.loc 20 324 13 is_stmt 1 view .LVU3353
 325:Veno-Echo.cpp ****             break;
 12002              		.loc 20 325 17 view .LVU3354
 12003              	.LBB2281:
 12004              	.LBI2281:
1049:Veno-Echo.cpp **** {
 12005              		.loc 20 1049 6 view .LVU3355
 12006              	.LBB2282:
1051:Veno-Echo.cpp **** }
 12007              		.loc 20 1051 5 view .LVU3356
1051:Veno-Echo.cpp **** }
 12008              		.loc 20 1051 35 is_stmt 0 view .LVU3357
 12009 0c1e 0221     		movs	r1, #2
 12010 0c20 2848     		ldr	r0, .L653+4
 12011              	.LVL736:
1051:Veno-Echo.cpp **** }
 12012              		.loc 20 1051 35 view .LVU3358
 12013 0c22 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12014              	.LVL737:
1051:Veno-Echo.cpp **** }
 12015              		.loc 20 1051 18 view .LVU3359
 12016 0c26 284B     		ldr	r3, .L653+8
 12017 0c28 83ED000A 		vstr.32	s0, [r3]
1052:Veno-Echo.cpp **** void Update_feedbackL()
 12018              		.loc 20 1052 1 view .LVU3360
 12019 0c2c FFF718BA 		b	.L504
 12020              	.LVL738:
 12021              	.L514:
1052:Veno-Echo.cpp **** void Update_feedbackL()
 12022              		.loc 20 1052 1 view .LVU3361
 12023              	.LBE2282:
 12024              	.LBE2281:
 328:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12025              		.loc 20 328 13 is_stmt 1 view .LVU3362
 329:Veno-Echo.cpp ****                 {
 12026              		.loc 20 329 17 view .LVU3363
 329:Veno-Echo.cpp ****                 {
 12027              		.loc 20 329 30 is_stmt 0 view .LVU3364
 12028 0c30 234B     		ldr	r3, .L653
 329:Veno-Echo.cpp ****                 {
 12029              		.loc 20 329 17 view .LVU3365
 12030 0c32 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12031 0c34 022B     		cmp	r3, #2
 12032 0c36 3FF413AA 		beq	.L504
 331:Veno-Echo.cpp ****                 }
 12033              		.loc 20 331 21 is_stmt 1 view .LVU3366
 331:Veno-Echo.cpp ****                 }
 12034              		.loc 20 331 37 is_stmt 0 view .LVU3367
 12035 0c3a FFF7FEFF 		bl	_Z16Update_feedbackLv
 12036              	.LVL739:
 331:Veno-Echo.cpp ****                 }
 12037              		.loc 20 331 37 view .LVU3368
 12038 0c3e FFF70FBA 		b	.L504
 12039              	.LVL740:
 12040              	.L513:
 335:Veno-Echo.cpp ****                 Update_feedbackR_CV();
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 366


 12041              		.loc 20 335 13 is_stmt 1 view .LVU3369
 336:Veno-Echo.cpp ****             break;
 12042              		.loc 20 336 17 view .LVU3370
 12043              	.LBB2283:
 12044              	.LBI2283:
1138:Veno-Echo.cpp **** {
 12045              		.loc 20 1138 6 view .LVU3371
 12046              	.LBB2284:
1140:Veno-Echo.cpp **** }
 12047              		.loc 20 1140 5 view .LVU3372
1140:Veno-Echo.cpp **** }
 12048              		.loc 20 1140 35 is_stmt 0 view .LVU3373
 12049 0c42 0321     		movs	r1, #3
 12050 0c44 1F48     		ldr	r0, .L653+4
 12051              	.LVL741:
1140:Veno-Echo.cpp **** }
 12052              		.loc 20 1140 35 view .LVU3374
 12053 0c46 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12054              	.LVL742:
1140:Veno-Echo.cpp **** }
 12055              		.loc 20 1140 18 view .LVU3375
 12056 0c4a 204B     		ldr	r3, .L653+12
 12057 0c4c 83ED000A 		vstr.32	s0, [r3]
1141:Veno-Echo.cpp **** 
 12058              		.loc 20 1141 1 view .LVU3376
 12059 0c50 FFF706BA 		b	.L504
 12060              	.LVL743:
 12061              	.L512:
1141:Veno-Echo.cpp **** 
 12062              		.loc 20 1141 1 view .LVU3377
 12063              	.LBE2284:
 12064              	.LBE2283:
 339:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12065              		.loc 20 339 13 is_stmt 1 view .LVU3378
 340:Veno-Echo.cpp ****                 {
 12066              		.loc 20 340 17 view .LVU3379
 340:Veno-Echo.cpp ****                 {
 12067              		.loc 20 340 30 is_stmt 0 view .LVU3380
 12068 0c54 1A4B     		ldr	r3, .L653
 340:Veno-Echo.cpp ****                 {
 12069              		.loc 20 340 17 view .LVU3381
 12070 0c56 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12071 0c58 022B     		cmp	r3, #2
 12072 0c5a 3FF401AA 		beq	.L504
 342:Veno-Echo.cpp ****                 }
 12073              		.loc 20 342 21 is_stmt 1 view .LVU3382
 342:Veno-Echo.cpp ****                 }
 12074              		.loc 20 342 37 is_stmt 0 view .LVU3383
 12075 0c5e FFF7FEFF 		bl	_Z16Update_feedbackRv
 12076              	.LVL744:
 342:Veno-Echo.cpp ****                 }
 12077              		.loc 20 342 37 view .LVU3384
 12078 0c62 FFF7FDB9 		b	.L504
 12079              	.LVL745:
 12080              	.L511:
 346:Veno-Echo.cpp ****                 Update_drywet_CV();
 12081              		.loc 20 346 13 is_stmt 1 view .LVU3385
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 367


 347:Veno-Echo.cpp ****             break;
 12082              		.loc 20 347 17 view .LVU3386
 12083              	.LBB2285:
 12084              	.LBI2285:
1228:Veno-Echo.cpp **** {
 12085              		.loc 20 1228 6 view .LVU3387
 12086              	.LBB2286:
1230:Veno-Echo.cpp **** }
 12087              		.loc 20 1230 5 view .LVU3388
1230:Veno-Echo.cpp **** }
 12088              		.loc 20 1230 32 is_stmt 0 view .LVU3389
 12089 0c66 0421     		movs	r1, #4
 12090 0c68 1648     		ldr	r0, .L653+4
 12091              	.LVL746:
1230:Veno-Echo.cpp **** }
 12092              		.loc 20 1230 32 view .LVU3390
 12093 0c6a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12094              	.LVL747:
1230:Veno-Echo.cpp **** }
 12095              		.loc 20 1230 15 view .LVU3391
 12096 0c6e 184B     		ldr	r3, .L653+16
 12097 0c70 83ED000A 		vstr.32	s0, [r3]
1231:Veno-Echo.cpp **** 
 12098              		.loc 20 1231 1 view .LVU3392
 12099 0c74 FFF7F4B9 		b	.L504
 12100              	.LVL748:
 12101              	.L510:
1231:Veno-Echo.cpp **** 
 12102              		.loc 20 1231 1 view .LVU3393
 12103              	.LBE2286:
 12104              	.LBE2285:
 350:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12105              		.loc 20 350 13 is_stmt 1 view .LVU3394
 351:Veno-Echo.cpp ****                 {
 12106              		.loc 20 351 17 view .LVU3395
 351:Veno-Echo.cpp ****                 {
 12107              		.loc 20 351 30 is_stmt 0 view .LVU3396
 12108 0c78 114B     		ldr	r3, .L653
 351:Veno-Echo.cpp ****                 {
 12109              		.loc 20 351 17 view .LVU3397
 12110 0c7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12111 0c7c 022B     		cmp	r3, #2
 12112 0c7e 3FF4EFA9 		beq	.L504
 353:Veno-Echo.cpp ****                 }
 12113              		.loc 20 353 21 is_stmt 1 view .LVU3398
 353:Veno-Echo.cpp ****                 }
 12114              		.loc 20 353 34 is_stmt 0 view .LVU3399
 12115 0c82 FFF7FEFF 		bl	_Z13Update_drywetv
 12116              	.LVL749:
 353:Veno-Echo.cpp ****                 }
 12117              		.loc 20 353 34 view .LVU3400
 12118 0c86 FFF7EBB9 		b	.L504
 12119              	.LVL750:
 12120              	.L509:
 357:Veno-Echo.cpp ****                 Update_width_CV();
 12121              		.loc 20 357 13 is_stmt 1 view .LVU3401
 358:Veno-Echo.cpp ****             break;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 368


 12122              		.loc 20 358 17 view .LVU3402
 12123              	.LBB2287:
 12124              	.LBI2287:
1343:Veno-Echo.cpp **** {
 12125              		.loc 20 1343 6 view .LVU3403
 12126              	.LBB2288:
1345:Veno-Echo.cpp **** }
 12127              		.loc 20 1345 5 view .LVU3404
1345:Veno-Echo.cpp **** }
 12128              		.loc 20 1345 30 is_stmt 0 view .LVU3405
 12129 0c8a 0521     		movs	r1, #5
 12130 0c8c 0D48     		ldr	r0, .L653+4
 12131              	.LVL751:
1345:Veno-Echo.cpp **** }
 12132              		.loc 20 1345 30 view .LVU3406
 12133 0c8e FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 12134              	.LVL752:
1345:Veno-Echo.cpp **** }
 12135              		.loc 20 1345 13 view .LVU3407
 12136 0c92 104B     		ldr	r3, .L653+20
 12137 0c94 83ED000A 		vstr.32	s0, [r3]
1346:Veno-Echo.cpp **** 
 12138              		.loc 20 1346 1 view .LVU3408
 12139 0c98 FFF7E2B9 		b	.L504
 12140              	.LVL753:
 12141              	.L508:
1346:Veno-Echo.cpp **** 
 12142              		.loc 20 1346 1 view .LVU3409
 12143              	.LBE2288:
 12144              	.LBE2287:
 361:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12145              		.loc 20 361 13 is_stmt 1 view .LVU3410
 362:Veno-Echo.cpp ****                 {
 12146              		.loc 20 362 17 view .LVU3411
 362:Veno-Echo.cpp ****                 {
 12147              		.loc 20 362 30 is_stmt 0 view .LVU3412
 12148 0c9c 084B     		ldr	r3, .L653
 362:Veno-Echo.cpp ****                 {
 12149              		.loc 20 362 17 view .LVU3413
 12150 0c9e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12151 0ca0 022B     		cmp	r3, #2
 12152 0ca2 3FF4DDA9 		beq	.L504
 364:Veno-Echo.cpp ****                 }
 12153              		.loc 20 364 21 is_stmt 1 view .LVU3414
 364:Veno-Echo.cpp ****                 }
 12154              		.loc 20 364 33 is_stmt 0 view .LVU3415
 12155 0ca6 FFF7FEFF 		bl	_Z12Update_widthv
 12156              	.LVL754:
 364:Veno-Echo.cpp ****                 }
 12157              		.loc 20 364 33 view .LVU3416
 12158 0caa FFF7D9B9 		b	.L504
 12159              	.LVL755:
 12160              	.L507:
 368:Veno-Echo.cpp ****                 if(saveState != SAVING) //don't check ADCs 
 12161              		.loc 20 368 13 is_stmt 1 view .LVU3417
 369:Veno-Echo.cpp ****                 {
 12162              		.loc 20 369 17 view .LVU3418
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 369


 369:Veno-Echo.cpp ****                 {
 12163              		.loc 20 369 30 is_stmt 0 view .LVU3419
 12164 0cae 044B     		ldr	r3, .L653
 369:Veno-Echo.cpp ****                 {
 12165              		.loc 20 369 17 view .LVU3420
 12166 0cb0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12167 0cb2 022B     		cmp	r3, #2
 12168 0cb4 3FF4D4A9 		beq	.L504
 371:Veno-Echo.cpp ****                 }
 12169              		.loc 20 371 21 is_stmt 1 view .LVU3421
 371:Veno-Echo.cpp ****                 }
 12170              		.loc 20 371 41 is_stmt 0 view .LVU3422
 12171 0cb8 FFF7FEFF 		bl	_Z20Update_crossfeedbackv
 12172              	.LVL756:
 371:Veno-Echo.cpp ****                 }
 12173              		.loc 20 371 41 view .LVU3423
 12174 0cbc FFF7D0B9 		b	.L504
 12175              	.L654:
 12176              		.align	2
 12177              	.L653:
 12178 0cc0 00000000 		.word	.LANCHOR107
 12179 0cc4 18000000 		.word	.LANCHOR4+24
 12180 0cc8 00000000 		.word	.LANCHOR27
 12181 0ccc 00000000 		.word	.LANCHOR39
 12182 0cd0 00000000 		.word	.LANCHOR51
 12183 0cd4 00000000 		.word	.LANCHOR59
 12184              		.cfi_endproc
 12185              	.LFE4770:
 12187              		.section	.text._Z9HardLimitff,"ax",%progbits
 12188              		.align	1
 12189              		.p2align 2,,3
 12190              		.global	_Z9HardLimitff
 12191              		.syntax unified
 12192              		.thumb
 12193              		.thumb_func
 12194              		.fpu fpv5-d16
 12196              	_Z9HardLimitff:
 12197              	.LVL757:
 12198              	.LFB4797:
2002:Veno-Echo.cpp ****     float returnval{};
 12199              		.loc 20 2002 1 is_stmt 1 view -0
 12200              		.cfi_startproc
 12201              		@ args = 0, pretend = 0, frame = 0
 12202              		@ frame_needed = 0, uses_anonymous_args = 0
 12203              		@ link register save eliminated.
2003:Veno-Echo.cpp ****     if (input > limit)
 12204              		.loc 20 2003 5 view .LVU3425
2004:Veno-Echo.cpp ****         returnval = limit;
 12205              		.loc 20 2004 5 view .LVU3426
 12206 0000 B4EEE00A 		vcmpe.f32	s0, s1
 12207 0004 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12208 0008 07DC     		bgt	.L656
2006:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 12209              		.loc 20 2006 10 view .LVU3427
2006:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 12210              		.loc 20 2006 28 is_stmt 0 view .LVU3428
 12211 000a F1EE600A 		vneg.f32	s1, s1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 370


 12212              	.LVL758:
2006:Veno-Echo.cpp ****         returnval = limit * -1.0f;
 12213              		.loc 20 2006 10 view .LVU3429
 12214 000e F4EEC00A 		vcmpe.f32	s1, s0
 12215 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
2009:Veno-Echo.cpp **** 
 12216              		.loc 20 2009 19 view .LVU3430
 12217 0016 70FE800A 		vselgt.f32	s1, s1, s0
 12218              	.L656:
 12219              	.LVL759:
2011:Veno-Echo.cpp **** }
 12220              		.loc 20 2011 5 is_stmt 1 view .LVU3431
2012:Veno-Echo.cpp **** 
 12221              		.loc 20 2012 1 is_stmt 0 view .LVU3432
 12222 001a B0EE600A 		vmov.f32	s0, s1
 12223              	.LVL760:
2012:Veno-Echo.cpp **** 
 12224              		.loc 20 2012 1 view .LVU3433
 12225 001e 7047     		bx	lr
 12226              		.cfi_endproc
 12227              	.LFE4797:
 12229              		.section	.text._Z10PotCVComboff,"ax",%progbits
 12230              		.align	1
 12231              		.p2align 2,,3
 12232              		.global	_Z10PotCVComboff
 12233              		.syntax unified
 12234              		.thumb
 12235              		.thumb_func
 12236              		.fpu fpv5-d16
 12238              	_Z10PotCVComboff:
 12239              	.LVL761:
 12240              	.LFB4798:
2015:Veno-Echo.cpp ****     float output{};
 12241              		.loc 20 2015 1 is_stmt 1 view -0
 12242              		.cfi_startproc
 12243              		@ args = 0, pretend = 0, frame = 0
 12244              		@ frame_needed = 0, uses_anonymous_args = 0
 12245              		@ link register save eliminated.
2016:Veno-Echo.cpp ****     output = Pot_Val + (2.0f * ((1.0f - CV_Val) - 0.5f));
 12246              		.loc 20 2016 5 view .LVU3435
2017:Veno-Echo.cpp **** 
 12247              		.loc 20 2017 5 view .LVU3436
2017:Veno-Echo.cpp **** 
 12248              		.loc 20 2017 39 is_stmt 0 view .LVU3437
 12249 0000 F7EE007A 		vmov.f32	s15, #1.0e+0
2017:Veno-Echo.cpp **** 
 12250              		.loc 20 2017 49 view .LVU3438
 12251 0004 F6EE006A 		vmov.f32	s13, #5.0e-1
2017:Veno-Echo.cpp **** 
 12252              		.loc 20 2017 12 view .LVU3439
 12253 0008 B0EE007A 		vmov.f32	s14, #2.0e+0
2017:Veno-Echo.cpp **** 
 12254              		.loc 20 2017 39 view .LVU3440
 12255 000c 77EEE00A 		vsub.f32	s1, s15, s1
 12256              	.LVL762:
2017:Veno-Echo.cpp **** 
 12257              		.loc 20 2017 49 view .LVU3441
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 371


 12258 0010 70EEE60A 		vsub.f32	s1, s1, s13
2017:Veno-Echo.cpp **** 
 12259              		.loc 20 2017 12 view .LVU3442
 12260 0014 A0EE870A 		vfma.f32	s0, s1, s14
 12261              	.LVL763:
2019:Veno-Echo.cpp ****     {
 12262              		.loc 20 2019 5 is_stmt 1 view .LVU3443
 12263 0018 B5EEC00A 		vcmpe.f32	s0, #0
 12264 001c F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12265 0020 06D4     		bmi	.L662
2024:Veno-Echo.cpp ****     {
 12266              		.loc 20 2024 5 view .LVU3444
2026:Veno-Echo.cpp ****     }
 12267              		.loc 20 2026 16 is_stmt 0 view .LVU3445
 12268 0022 B4EE670A 		vcmp.f32	s0, s15
 12269 0026 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12270 002a 37FE800A 		vselgt.f32	s0, s15, s0
 12271              	.LVL764:
2026:Veno-Echo.cpp ****     }
 12272              		.loc 20 2026 16 view .LVU3446
 12273 002e 7047     		bx	lr
 12274              	.LVL765:
 12275              	.L662:
2021:Veno-Echo.cpp ****     }
 12276              		.loc 20 2021 16 view .LVU3447
 12277 0030 9FED010A 		vldr.32	s0, .L664
 12278              	.LVL766:
2029:Veno-Echo.cpp **** }
 12279              		.loc 20 2029 5 is_stmt 1 view .LVU3448
2030:Veno-Echo.cpp **** 
 12280              		.loc 20 2030 1 is_stmt 0 view .LVU3449
 12281 0034 7047     		bx	lr
 12282              	.L665:
 12283 0036 00BF     		.align	2
 12284              	.L664:
 12285 0038 00000000 		.word	0
 12286              		.cfi_endproc
 12287              	.LFE4798:
 12289              		.section	.text._Z16checkPickupStateffbb,"ax",%progbits
 12290              		.align	1
 12291              		.p2align 2,,3
 12292              		.global	_Z16checkPickupStateffbb
 12293              		.syntax unified
 12294              		.thumb
 12295              		.thumb_func
 12296              		.fpu fpv5-d16
 12298              	_Z16checkPickupStateffbb:
 12299              	.LVL767:
 12300              	.LFB4799:
2034:Veno-Echo.cpp ****     bool retval{};
 12301              		.loc 20 2034 1 is_stmt 1 view -0
 12302              		.cfi_startproc
 12303              		@ args = 0, pretend = 0, frame = 0
 12304              		@ frame_needed = 0, uses_anonymous_args = 0
 12305              		@ link register save eliminated.
2035:Veno-Echo.cpp ****     
 12306              		.loc 20 2035 5 view .LVU3451
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 372


2037:Veno-Echo.cpp ****     {
 12307              		.loc 20 2037 5 view .LVU3452
 12308 0000 69B1     		cbz	r1, .L667
2039:Veno-Echo.cpp ****         {
 12309              		.loc 20 2039 9 view .LVU3453
 12310              	.LVL768:
 12311              	.LBB2289:
 12312              	.LBI2289:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 12313              		.loc 21 75 3 view .LVU3454
 12314              	.LBB2290:
 12315              		.loc 21 76 5 view .LVU3455
 12316              		.loc 21 76 5 is_stmt 0 view .LVU3456
 12317              	.LBE2290:
 12318              	.LBE2289:
2039:Veno-Echo.cpp ****         {
 12319              		.loc 20 2039 15 view .LVU3457
 12320 0002 70EE600A 		vsub.f32	s1, s0, s1
 12321              	.LVL769:
2039:Veno-Echo.cpp ****         {
 12322              		.loc 20 2039 9 view .LVU3458
 12323 0006 DFED0D7A 		vldr.32	s15, .L670
 12324              	.LBB2292:
 12325              	.LBB2291:
 12326              		.loc 21 76 31 view .LVU3459
 12327 000a B0EEE00A 		vabs.f32	s0, s1
 12328              	.LVL770:
 12329              		.loc 21 76 31 view .LVU3460
 12330              	.LBE2291:
 12331              	.LBE2292:
2039:Veno-Echo.cpp ****         {
 12332              		.loc 20 2039 9 view .LVU3461
 12333 000e B4EEE70A 		vcmpe.f32	s0, s15
 12334 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12335 0016 D4BF     		ite	le
 12336 0018 0120     		movle	r0, #1
 12337              	.LVL771:
2039:Veno-Echo.cpp ****         {
 12338              		.loc 20 2039 9 view .LVU3462
 12339 001a 0020     		movgt	r0, #0
 12340 001c 7047     		bx	lr
 12341              	.LVL772:
 12342              	.L667:
2051:Veno-Echo.cpp ****     {
 12343              		.loc 20 2051 5 is_stmt 1 view .LVU3463
 12344 001e 60B9     		cbnz	r0, .L668
2053:Veno-Echo.cpp ****         {
 12345              		.loc 20 2053 9 view .LVU3464
 12346              	.LVL773:
 12347              	.LBB2293:
 12348              	.LBI2293:
  75:/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/bits/std_abs.h ****   { return __builtin_fabsf(__x); }
 12349              		.loc 21 75 3 view .LVU3465
 12350              	.LBB2294:
 12351              		.loc 21 76 5 view .LVU3466
 12352              		.loc 21 76 5 is_stmt 0 view .LVU3467
 12353              	.LBE2294:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 373


 12354              	.LBE2293:
2053:Veno-Echo.cpp ****         {
 12355              		.loc 20 2053 15 view .LVU3468
 12356 0020 30EE600A 		vsub.f32	s0, s0, s1
 12357              	.LVL774:
2053:Veno-Echo.cpp ****         {
 12358              		.loc 20 2053 9 view .LVU3469
 12359 0024 DFED057A 		vldr.32	s15, .L670
 12360              	.LBB2296:
 12361              	.LBB2295:
 12362              		.loc 21 76 31 view .LVU3470
 12363 0028 B0EEC00A 		vabs.f32	s0, s0
 12364              	.LBE2295:
 12365              	.LBE2296:
2053:Veno-Echo.cpp ****         {
 12366              		.loc 20 2053 9 view .LVU3471
 12367 002c B4EEE70A 		vcmpe.f32	s0, s15
 12368 0030 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12369 0034 CCBF     		ite	gt
 12370 0036 0120     		movgt	r0, #1
 12371              	.LVL775:
2053:Veno-Echo.cpp ****         {
 12372              		.loc 20 2053 9 view .LVU3472
 12373 0038 0020     		movle	r0, #0
 12374              	.L668:
 12375              	.LVL776:
2070:Veno-Echo.cpp **** 
 12376              		.loc 20 2070 5 is_stmt 1 view .LVU3473
2072:Veno-Echo.cpp **** 
 12377              		.loc 20 2072 1 is_stmt 0 view .LVU3474
 12378 003a 7047     		bx	lr
 12379              	.L671:
 12380              		.align	2
 12381              	.L670:
 12382 003c 0AD7A33B 		.word	1000593162
 12383              		.cfi_endproc
 12384              	.LFE4799:
 12386              		.section	.text._Z20checkPickupState_altff11pickupStateb,"ax",%progbits
 12387              		.align	1
 12388              		.p2align 2,,3
 12389              		.global	_Z20checkPickupState_altff11pickupStateb
 12390              		.syntax unified
 12391              		.thumb
 12392              		.thumb_func
 12393              		.fpu fpv5-d16
 12395              	_Z20checkPickupState_altff11pickupStateb:
 12396              	.LVL777:
 12397              	.LFB4800:
2076:Veno-Echo.cpp ****     pickupState retval{};
 12398              		.loc 20 2076 1 is_stmt 1 view -0
 12399              		.cfi_startproc
 12400              		@ args = 0, pretend = 0, frame = 0
 12401              		@ frame_needed = 0, uses_anonymous_args = 0
 12402              		@ link register save eliminated.
2077:Veno-Echo.cpp **** 
 12403              		.loc 20 2077 5 view .LVU3476
2079:Veno-Echo.cpp ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 374


 12404              		.loc 20 2079 5 view .LVU3477
 12405 0000 A1B1     		cbz	r1, .L673
2081:Veno-Echo.cpp ****         {
 12406              		.loc 20 2081 9 view .LVU3478
2081:Veno-Echo.cpp ****         {
 12407              		.loc 20 2081 31 is_stmt 0 view .LVU3479
 12408 0002 DFED1A7A 		vldr.32	s15, .L690
 12409 0006 30EEE77A 		vsub.f32	s14, s1, s15
2081:Veno-Echo.cpp ****         {
 12410              		.loc 20 2081 9 view .LVU3480
 12411 000a B4EEC07A 		vcmpe.f32	s14, s0
 12412 000e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12413 0012 01DD     		ble	.L688
 12414 0014 0020     		movs	r0, #0
 12415              	.LVL778:
2081:Veno-Echo.cpp ****         {
 12416              		.loc 20 2081 9 view .LVU3481
 12417 0016 7047     		bx	lr
 12418              	.LVL779:
 12419              	.L688:
2086:Veno-Echo.cpp ****         {
 12420              		.loc 20 2086 14 is_stmt 1 view .LVU3482
2086:Veno-Echo.cpp ****         {
 12421              		.loc 20 2086 36 is_stmt 0 view .LVU3483
 12422 0018 70EEA70A 		vadd.f32	s1, s1, s15
 12423              	.LVL780:
2086:Veno-Echo.cpp ****         {
 12424              		.loc 20 2086 14 view .LVU3484
 12425 001c F4EEC00A 		vcmpe.f32	s1, s0
 12426 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
2093:Veno-Echo.cpp ****         }
 12427              		.loc 20 2093 20 view .LVU3485
 12428 0024 4CBF     		ite	mi
 12429 0026 0120     		movmi	r0, #1
 12430              	.LVL781:
2093:Veno-Echo.cpp ****         }
 12431              		.loc 20 2093 20 view .LVU3486
 12432 0028 0220     		movpl	r0, #2
 12433 002a 7047     		bx	lr
 12434              	.LVL782:
 12435              	.L673:
2099:Veno-Echo.cpp ****         {
 12436              		.loc 20 2099 9 is_stmt 1 view .LVU3487
 12437 002c 0128     		cmp	r0, #1
 12438 002e 04D0     		beq	.L676
 12439 0030 0228     		cmp	r0, #2
 12440 0032 01D0     		beq	.L674
 12441 0034 68B1     		cbz	r0, .L689
 12442 0036 0846     		mov	r0, r1
 12443              	.LVL783:
 12444              	.L674:
2120:Veno-Echo.cpp **** }
 12445              		.loc 20 2120 5 view .LVU3488
2121:Veno-Echo.cpp **** 
 12446              		.loc 20 2121 1 is_stmt 0 view .LVU3489
 12447 0038 7047     		bx	lr
 12448              	.LVL784:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 375


 12449              	.L676:
2108:Veno-Echo.cpp ****             if(value < (lastValue + pickupTolerance))
 12450              		.loc 20 2108 13 is_stmt 1 view .LVU3490
2109:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12451              		.loc 20 2109 13 view .LVU3491
2109:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12452              		.loc 20 2109 35 is_stmt 0 view .LVU3492
 12453 003a DFED0C7A 		vldr.32	s15, .L690
 12454 003e 70EEA70A 		vadd.f32	s1, s1, s15
 12455              	.LVL785:
2109:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12456              		.loc 20 2109 13 view .LVU3493
 12457 0042 F4EEC00A 		vcmpe.f32	s1, s0
 12458 0046 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12459 004a CCBF     		ite	gt
 12460 004c 0220     		movgt	r0, #2
 12461              	.LVL786:
2109:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12462              		.loc 20 2109 13 view .LVU3494
 12463 004e 0120     		movle	r0, #1
 12464 0050 7047     		bx	lr
 12465              	.LVL787:
 12466              	.L689:
2101:Veno-Echo.cpp ****             if(value > (lastValue - pickupTolerance))
 12467              		.loc 20 2101 13 is_stmt 1 view .LVU3495
2102:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12468              		.loc 20 2102 13 view .LVU3496
2102:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12469              		.loc 20 2102 35 is_stmt 0 view .LVU3497
 12470 0052 DFED067A 		vldr.32	s15, .L690
 12471 0056 70EEE70A 		vsub.f32	s1, s1, s15
 12472              	.LVL788:
2102:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12473              		.loc 20 2102 13 view .LVU3498
 12474 005a F4EEC00A 		vcmpe.f32	s1, s0
 12475 005e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 12476 0062 4CBF     		ite	mi
 12477 0064 0220     		movmi	r0, #2
 12478              	.LVL789:
2102:Veno-Echo.cpp ****                 retval = PICKEDUP;
 12479              		.loc 20 2102 13 view .LVU3499
 12480 0066 0020     		movpl	r0, #0
 12481 0068 7047     		bx	lr
 12482              	.L691:
 12483 006a 00BF     		.align	2
 12484              	.L690:
 12485 006c 0AD7A33B 		.word	1000593162
 12486              		.cfi_endproc
 12487              	.LFE4800:
 12489              		.section	.text._Z11GetTapRatio9TapRatios,"ax",%progbits
 12490              		.align	1
 12491              		.p2align 2,,3
 12492              		.global	_Z11GetTapRatio9TapRatios
 12493              		.syntax unified
 12494              		.thumb
 12495              		.thumb_func
 12496              		.fpu fpv5-d16
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 376


 12498              	_Z11GetTapRatio9TapRatios:
 12499              	.LVL790:
 12500              	.LFB4801:
2124:Veno-Echo.cpp **** double retVal{};
 12501              		.loc 20 2124 1 is_stmt 1 view -0
 12502              		.cfi_startproc
 12503              		@ args = 0, pretend = 0, frame = 0
 12504              		@ frame_needed = 0, uses_anonymous_args = 0
 12505              		@ link register save eliminated.
2125:Veno-Echo.cpp ****     switch(ratio)
 12506              		.loc 20 2125 1 view .LVU3501
2126:Veno-Echo.cpp ****     {
 12507              		.loc 20 2126 5 view .LVU3502
 12508 0000 0138     		subs	r0, r0, #1
 12509              	.LVL791:
2126:Veno-Echo.cpp ****     {
 12510              		.loc 20 2126 5 is_stmt 0 view .LVU3503
 12511 0002 C0B2     		uxtb	r0, r0
 12512 0004 0228     		cmp	r0, #2
 12513 0006 05D8     		bhi	.L694
 12514 0008 044B     		ldr	r3, .L695
 12515 000a 03EBC000 		add	r0, r3, r0, lsl #3
 12516 000e 90ED000B 		vldr.64	d0, [r0]
 12517 0012 7047     		bx	lr
 12518              	.L694:
2124:Veno-Echo.cpp **** double retVal{};
 12519              		.loc 20 2124 1 view .LVU3504
 12520 0014 B7EE000B 		vmov.f64	d0, #1.0e+0
 12521              	.LVL792:
 12522              		.loc 20 2149 1 is_stmt 1 view .LVU3505
2150:Veno-Echo.cpp **** }
 12523              		.loc 20 2150 1 is_stmt 0 view .LVU3506
 12524 0018 7047     		bx	lr
 12525              	.L696:
 12526 001a 00BF     		.align	2
 12527              	.L695:
 12528 001c 00000000 		.word	.LANCHOR25
 12529              		.cfi_endproc
 12530              	.LFE4801:
 12532              		.section	.text.startup._GLOBAL__sub_I_delMemsL,"ax",%progbits
 12533              		.align	1
 12534              		.p2align 2,,3
 12535              		.syntax unified
 12536              		.thumb
 12537              		.thumb_func
 12538              		.fpu fpv5-d16
 12540              	_GLOBAL__sub_I_delMemsL:
 12541              	.LFB5388:
 12542              		.loc 20 2150 1 is_stmt 1 view -0
 12543              		.cfi_startproc
 12544              		@ args = 0, pretend = 0, frame = 0
 12545              		@ frame_needed = 0, uses_anonymous_args = 0
 12546              	.LBB2452:
 12547              	.LBI2452:
 12548              		.loc 20 2150 1 view .LVU3508
 12549              	.LVL793:
 12550              	.LBB2453:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 377


 12551              	.LBB2454:
 12552              	.LBI2454:
  21:../libDaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 12553              		.loc 3 21 5 view .LVU3509
 12554              	.LBB2455:
 12555              	.LBB2456:
 12556              	.LBI2456:
 12557              		.file 26 "../libDaisy/src/per/qspi.h"
   1:../libDaisy/src/per/qspi.h **** #ifndef DSY_QSPI
   2:../libDaisy/src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../libDaisy/src/per/qspi.h **** 
   4:../libDaisy/src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../libDaisy/src/per/qspi.h **** 
   6:../libDaisy/src/per/qspi.h **** #include <cstdint>
   7:../libDaisy/src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../libDaisy/src/per/qspi.h **** 
   9:../libDaisy/src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  11:../libDaisy/src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../libDaisy/src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  14:../libDaisy/src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../libDaisy/src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  17:../libDaisy/src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../libDaisy/src/per/qspi.h **** 
  19:../libDaisy/src/per/qspi.h **** namespace daisy
  20:../libDaisy/src/per/qspi.h **** {
  21:../libDaisy/src/per/qspi.h **** /** @addtogroup serial
  22:../libDaisy/src/per/qspi.h **** @{
  23:../libDaisy/src/per/qspi.h **** */
  24:../libDaisy/src/per/qspi.h **** 
  25:../libDaisy/src/per/qspi.h **** /** 
  26:../libDaisy/src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../libDaisy/src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../libDaisy/src/per/qspi.h ****     * IS25LP080D
  29:../libDaisy/src/per/qspi.h **** */
  30:../libDaisy/src/per/qspi.h **** class QSPIHandle
  31:../libDaisy/src/per/qspi.h **** {
  32:../libDaisy/src/per/qspi.h ****   public:
  33:../libDaisy/src/per/qspi.h ****     enum Result
  34:../libDaisy/src/per/qspi.h ****     {
  35:../libDaisy/src/per/qspi.h ****         OK = 0,
  36:../libDaisy/src/per/qspi.h ****         ERR
  37:../libDaisy/src/per/qspi.h ****     };
  38:../libDaisy/src/per/qspi.h **** 
  39:../libDaisy/src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../libDaisy/src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../libDaisy/src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../libDaisy/src/per/qspi.h ****          * 
  43:../libDaisy/src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../libDaisy/src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../libDaisy/src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../libDaisy/src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../libDaisy/src/per/qspi.h ****          */
  48:../libDaisy/src/per/qspi.h ****     enum Status
  49:../libDaisy/src/per/qspi.h ****     {
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 378


  50:../libDaisy/src/per/qspi.h ****         GOOD = 0,
  51:../libDaisy/src/per/qspi.h ****         E_HAL_ERROR,
  52:../libDaisy/src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../libDaisy/src/per/qspi.h ****         E_INVALID_MODE,
  54:../libDaisy/src/per/qspi.h ****     };
  55:../libDaisy/src/per/qspi.h **** 
  56:../libDaisy/src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../libDaisy/src/per/qspi.h ****     struct Config
  58:../libDaisy/src/per/qspi.h ****     {
  59:../libDaisy/src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../libDaisy/src/per/qspi.h ****         enum Device
  61:../libDaisy/src/per/qspi.h ****         {
  62:../libDaisy/src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../libDaisy/src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../libDaisy/src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../libDaisy/src/per/qspi.h ****         };
  66:../libDaisy/src/per/qspi.h **** 
  67:../libDaisy/src/per/qspi.h ****         /** 
  68:../libDaisy/src/per/qspi.h ****         Modes of operation.
  69:../libDaisy/src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../libDaisy/src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../libDaisy/src/per/qspi.h ****         possible in this mode. \n 
  72:../libDaisy/src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../libDaisy/src/per/qspi.h ****         */
  74:../libDaisy/src/per/qspi.h ****         enum Mode
  75:../libDaisy/src/per/qspi.h ****         {
  76:../libDaisy/src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../libDaisy/src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../libDaisy/src/per/qspi.h ****             MODE_LAST,
  79:../libDaisy/src/per/qspi.h ****         };
  80:../libDaisy/src/per/qspi.h **** 
  81:../libDaisy/src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../libDaisy/src/per/qspi.h ****         struct
  83:../libDaisy/src/per/qspi.h ****         {
  84:../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../libDaisy/src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../libDaisy/src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../libDaisy/src/per/qspi.h ****         } pin_config;
  91:../libDaisy/src/per/qspi.h **** 
  92:../libDaisy/src/per/qspi.h ****         Device device;
  93:../libDaisy/src/per/qspi.h ****         Mode   mode;
  94:../libDaisy/src/per/qspi.h ****     };
  95:../libDaisy/src/per/qspi.h **** 
  96:../libDaisy/src/per/qspi.h ****     /** 
  97:../libDaisy/src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../libDaisy/src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../libDaisy/src/per/qspi.h ****         */
 101:../libDaisy/src/per/qspi.h ****     Result Init(const Config& config);
 102:../libDaisy/src/per/qspi.h **** 
 103:../libDaisy/src/per/qspi.h ****     /** Returns the current config. */
 104:../libDaisy/src/per/qspi.h ****     const Config& GetConfig() const;
 105:../libDaisy/src/per/qspi.h **** 
 106:../libDaisy/src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 379


 107:../libDaisy/src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../libDaisy/src/per/qspi.h ****     /** 
 109:../libDaisy/src/per/qspi.h ****         Deinitializes the peripheral
 110:../libDaisy/src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../libDaisy/src/per/qspi.h ****         */
 113:../libDaisy/src/per/qspi.h ****     Result DeInit();
 114:../libDaisy/src/per/qspi.h **** 
 115:../libDaisy/src/per/qspi.h ****     /** 
 116:../libDaisy/src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../libDaisy/src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../libDaisy/src/per/qspi.h ****         \param address Address to write to
 119:../libDaisy/src/per/qspi.h ****         \param size Buffer size
 120:../libDaisy/src/per/qspi.h ****         \param buffer Buffer to write
 121:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../libDaisy/src/per/qspi.h ****         */
 123:../libDaisy/src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../libDaisy/src/per/qspi.h **** 
 125:../libDaisy/src/per/qspi.h ****     /** 
 126:../libDaisy/src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../libDaisy/src/per/qspi.h ****         \param address Address to write to
 128:../libDaisy/src/per/qspi.h ****         \param size Buffer size
 129:../libDaisy/src/per/qspi.h ****         \param buffer Buffer to write
 130:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../libDaisy/src/per/qspi.h ****         */
 132:../libDaisy/src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../libDaisy/src/per/qspi.h **** 
 134:../libDaisy/src/per/qspi.h ****     /** 
 135:../libDaisy/src/per/qspi.h ****         Erases the area specified on the chip.
 136:../libDaisy/src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../libDaisy/src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../libDaisy/src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../libDaisy/src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../libDaisy/src/per/qspi.h ****         */
 142:../libDaisy/src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../libDaisy/src/per/qspi.h **** 
 144:../libDaisy/src/per/qspi.h ****     /**  
 145:../libDaisy/src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../libDaisy/src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../libDaisy/src/per/qspi.h ****         \param address Address of sector to erase
 148:../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../libDaisy/src/per/qspi.h ****         */
 150:../libDaisy/src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../libDaisy/src/per/qspi.h **** 
 152:../libDaisy/src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../libDaisy/src/per/qspi.h ****      *  \returns Status
 154:../libDaisy/src/per/qspi.h ****      */
 155:../libDaisy/src/per/qspi.h ****     Status GetStatus();
 156:../libDaisy/src/per/qspi.h **** 
 157:../libDaisy/src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../libDaisy/src/per/qspi.h ****      *  The memory at this address is read-only
 159:../libDaisy/src/per/qspi.h ****      *  to write to it use the Write function.
 160:../libDaisy/src/per/qspi.h ****      * 
 161:../libDaisy/src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../libDaisy/src/per/qspi.h ****      *                many bytes into the memory
 163:../libDaisy/src/per/qspi.h ****     */
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 380


 164:../libDaisy/src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../libDaisy/src/per/qspi.h **** 
 166:../libDaisy/src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 12558              		.loc 26 166 5 view .LVU3510
 12559              	.LBE2456:
 12560              	.LBE2455:
 12561              	.LBE2454:
 12562              	.LBE2453:
 12563              	.LBE2452:
 12564              		.loc 20 2150 1 is_stmt 0 view .LVU3511
 12565 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 12566              		.cfi_def_cfa_offset 24
 12567              		.cfi_offset 4, -24
 12568              		.cfi_offset 5, -20
 12569              		.cfi_offset 6, -16
 12570              		.cfi_offset 7, -12
 12571              		.cfi_offset 8, -8
 12572              		.cfi_offset 14, -4
 12573              	.LBB2576:
 12574              	.LBB2572:
 12575              	.LBB2474:
 12576              	.LBB2472:
 12577              	.LBB2461:
 12578              	.LBB2457:
 12579              	.LBB2458:
 12580              		.loc 26 166 34 view .LVU3512
 12581 0004 9548     		ldr	r0, .L699
 12582 0006 0026     		movs	r6, #0
 12583              	.LBE2458:
 12584              	.LBE2457:
 12585              	.LBE2461:
 12586              	.LBE2472:
 12587              	.LBE2474:
 12588              		.file 27 "Veno-Echo.h"
   1:Veno-Echo.h   **** // Copyright 2021 Adam Fulford
   2:Veno-Echo.h   **** // 
   3:Veno-Echo.h   **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   4:Veno-Echo.h   **** // of this software and associated documentation files (the "Software"), to deal
   5:Veno-Echo.h   **** // in the Software without restriction, including without limitation the rights
   6:Veno-Echo.h   **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   7:Veno-Echo.h   **** // copies of the Software, and to permit persons to whom the Software is
   8:Veno-Echo.h   **** // furnished to do so, subject to the following conditions:
   9:Veno-Echo.h   **** // 
  10:Veno-Echo.h   **** // The above copyright notice and this permission notice shall be included in
  11:Veno-Echo.h   **** // all copies or substantial portions of the Software.
  12:Veno-Echo.h   **** // 
  13:Veno-Echo.h   **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  14:Veno-Echo.h   **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  15:Veno-Echo.h   **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  16:Veno-Echo.h   **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  17:Veno-Echo.h   **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  18:Veno-Echo.h   **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  19:Veno-Echo.h   **** // THE SOFTWARE.
  20:Veno-Echo.h   **** // 
  21:Veno-Echo.h   **** // See http://creativecommons.org/licenses/MIT/ for more information.
  22:Veno-Echo.h   **** 
  23:Veno-Echo.h   **** #ifndef VENO_ECHO_H
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 381


  24:Veno-Echo.h   **** #define VENO_ECHO_H
  25:Veno-Echo.h   **** 
  26:Veno-Echo.h   **** //defines for HW pins:
  27:Veno-Echo.h   **** 
  28:Veno-Echo.h   **** 
  29:Veno-Echo.h   **** 
  30:Veno-Echo.h   **** #include "daisy_seed.h"
  31:Veno-Echo.h   **** using namespace daisy;
  32:Veno-Echo.h   **** 
  33:Veno-Echo.h   **** static DaisySeed hw;
 12589              		.loc 27 33 18 view .LVU3513
 12590 0008 954C     		ldr	r4, .L699+4
  40:Veno-Echo.cpp **** static Svf LPF_R;
 12591              		.loc 20 40 12 view .LVU3514
 12592 000a 964D     		ldr	r5, .L699+8
 12593              		.loc 27 33 18 view .LVU3515
 12594 000c 2246     		mov	r2, r4
 12595 000e 9649     		ldr	r1, .L699+12
 12596              	.LBB2475:
 12597              	.LBB2473:
 12598              	.LBB2462:
 12599              	.LBB2460:
 12600              	.LBB2459:
 12601              		.loc 26 166 34 view .LVU3516
 12602 0010 0660     		str	r6, [r0]
 12603              	.LVL794:
 12604              		.loc 26 166 34 view .LVU3517
 12605              	.LBE2459:
 12606              	.LBE2460:
 12607              	.LBE2462:
 12608              	.LBB2463:
 12609              	.LBI2463:
  76:../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12610              		.loc 7 76 5 is_stmt 1 view .LVU3518
 12611              	.LBB2464:
 12612              	.LBB2465:
  76:../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12613              		.loc 7 76 35 is_stmt 0 view .LVU3519
 12614 0012 4661     		str	r6, [r0, #20]
 12615              	.LVL795:
  76:../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 12616              		.loc 7 76 35 view .LVU3520
 12617              	.LBE2465:
 12618              	.LBE2464:
 12619              	.LBE2463:
 12620              	.LBB2466:
 12621              	.LBI2466:
  92:../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 12622              		.loc 6 92 5 is_stmt 1 view .LVU3521
  92:../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 12623              		.loc 6 92 5 is_stmt 0 view .LVU3522
 12624              	.LBE2466:
 12625              	.LBB2467:
 12626              	.LBI2467:
 12627              		.file 28 "../libDaisy/src/per/dac.h"
   1:../libDaisy/src/per/dac.h **** #pragma once
   2:../libDaisy/src/per/dac.h **** #ifndef DSY_DAC_H
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 382


   3:../libDaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../libDaisy/src/per/dac.h **** 
   5:../libDaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../libDaisy/src/per/dac.h **** 
   7:../libDaisy/src/per/dac.h **** namespace daisy
   8:../libDaisy/src/per/dac.h **** {
   9:../libDaisy/src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../libDaisy/src/per/dac.h ****  *  @ingroup per_analog
  11:../libDaisy/src/per/dac.h ****  ** 
  12:../libDaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../libDaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../libDaisy/src/per/dac.h ****  **
  15:../libDaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../libDaisy/src/per/dac.h ****  **
  17:../libDaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../libDaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../libDaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../libDaisy/src/per/dac.h ****  ***/
  21:../libDaisy/src/per/dac.h **** class DacHandle
  22:../libDaisy/src/per/dac.h **** {
  23:../libDaisy/src/per/dac.h ****   public:
  24:../libDaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../libDaisy/src/per/dac.h ****     enum class Result
  26:../libDaisy/src/per/dac.h ****     {
  27:../libDaisy/src/per/dac.h ****         OK,
  28:../libDaisy/src/per/dac.h ****         ERR,
  29:../libDaisy/src/per/dac.h ****     };
  30:../libDaisy/src/per/dac.h **** 
  31:../libDaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../libDaisy/src/per/dac.h ****     enum class Channel
  33:../libDaisy/src/per/dac.h ****     {
  34:../libDaisy/src/per/dac.h ****         ONE,
  35:../libDaisy/src/per/dac.h ****         TWO,
  36:../libDaisy/src/per/dac.h ****         BOTH,
  37:../libDaisy/src/per/dac.h ****     };
  38:../libDaisy/src/per/dac.h **** 
  39:../libDaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../libDaisy/src/per/dac.h ****      **
  41:../libDaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../libDaisy/src/per/dac.h ****      **
  43:../libDaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../libDaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../libDaisy/src/per/dac.h ****      ***/
  46:../libDaisy/src/per/dac.h ****     enum class Mode
  47:../libDaisy/src/per/dac.h ****     {
  48:../libDaisy/src/per/dac.h ****         POLLING,
  49:../libDaisy/src/per/dac.h ****         DMA,
  50:../libDaisy/src/per/dac.h ****     };
  51:../libDaisy/src/per/dac.h **** 
  52:../libDaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../libDaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../libDaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../libDaisy/src/per/dac.h ****      ***/
  56:../libDaisy/src/per/dac.h ****     enum class BitDepth
  57:../libDaisy/src/per/dac.h ****     {
  58:../libDaisy/src/per/dac.h ****         BITS_8,
  59:../libDaisy/src/per/dac.h ****         BITS_12
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 383


  60:../libDaisy/src/per/dac.h ****     };
  61:../libDaisy/src/per/dac.h **** 
  62:../libDaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../libDaisy/src/per/dac.h ****     enum class BufferState
  64:../libDaisy/src/per/dac.h ****     {
  65:../libDaisy/src/per/dac.h ****         ENABLED,
  66:../libDaisy/src/per/dac.h ****         DISABLED,
  67:../libDaisy/src/per/dac.h ****     };
  68:../libDaisy/src/per/dac.h **** 
  69:../libDaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../libDaisy/src/per/dac.h ****     struct Config
  71:../libDaisy/src/per/dac.h ****     {
  72:../libDaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../libDaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../libDaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../libDaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../libDaisy/src/per/dac.h ****         uint32_t target_samplerate;
  77:../libDaisy/src/per/dac.h **** 
  78:../libDaisy/src/per/dac.h ****         Channel     chn;
  79:../libDaisy/src/per/dac.h ****         Mode        mode;
  80:../libDaisy/src/per/dac.h ****         BitDepth    bitdepth;
  81:../libDaisy/src/per/dac.h ****         BufferState buff_state;
  82:../libDaisy/src/per/dac.h ****     };
  83:../libDaisy/src/per/dac.h **** 
  84:../libDaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 12628              		.loc 28 84 5 is_stmt 1 view .LVU3523
 12629              	.LBB2468:
 12630              	.LBB2469:
 12631              		.loc 28 84 33 is_stmt 0 view .LVU3524
 12632 0014 0662     		str	r6, [r0, #32]
 12633              	.LVL796:
 12634              		.loc 28 84 33 view .LVU3525
 12635              	.LBE2469:
 12636              	.LBE2468:
 12637              	.LBE2467:
 12638              	.LBB2470:
 12639              	.LBI2470:
  40:../libDaisy/src/hid/usb.h **** 
 12640              		.loc 5 40 5 is_stmt 1 view .LVU3526
  40:../libDaisy/src/hid/usb.h **** 
 12641              		.loc 5 40 5 is_stmt 0 view .LVU3527
 12642              	.LBE2470:
 12643              	.LBB2471:
 12644              	.LBI2471:
  77:../libDaisy/src/sys/system.h ****     ~System() {}
 12645              		.loc 4 77 5 is_stmt 1 view .LVU3528
  77:../libDaisy/src/sys/system.h ****     ~System() {}
 12646              		.loc 4 77 5 is_stmt 0 view .LVU3529
 12647              	.LBE2471:
 12648              	.LBE2473:
 12649              	.LBE2475:
 12650              		.loc 27 33 18 view .LVU3530
 12651 0016 FFF7FEFF 		bl	__aeabi_atexit
 12652              	.LVL797:
 12653              	.LBB2476:
 12654              	.LBI2476:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 384


 12655              		.loc 10 21 5 is_stmt 1 view .LVU3531
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12656              		.loc 10 21 5 is_stmt 0 view .LVU3532
 12657              	.LBE2476:
  40:Veno-Echo.cpp **** static Svf LPF_R;
 12658              		.loc 20 40 12 view .LVU3533
 12659 001a 2246     		mov	r2, r4
 12660 001c 2946     		mov	r1, r5
 12661 001e 9348     		ldr	r0, .L699+16
 12662 0020 FFF7FEFF 		bl	__aeabi_atexit
 12663              	.LVL798:
 12664              	.LBB2477:
 12665              	.LBI2477:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12666              		.loc 10 21 5 is_stmt 1 view .LVU3534
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12667              		.loc 10 21 5 is_stmt 0 view .LVU3535
 12668              	.LBE2477:
  41:Veno-Echo.cpp **** static Svf HPF_L;
 12669              		.loc 20 41 12 view .LVU3536
 12670 0024 2246     		mov	r2, r4
 12671 0026 2946     		mov	r1, r5
 12672 0028 9148     		ldr	r0, .L699+20
 12673 002a FFF7FEFF 		bl	__aeabi_atexit
 12674              	.LVL799:
 12675              	.LBB2478:
 12676              	.LBI2478:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12677              		.loc 10 21 5 is_stmt 1 view .LVU3537
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12678              		.loc 10 21 5 is_stmt 0 view .LVU3538
 12679              	.LBE2478:
  42:Veno-Echo.cpp **** static Svf HPF_R;
 12680              		.loc 20 42 12 view .LVU3539
 12681 002e 2246     		mov	r2, r4
 12682 0030 2946     		mov	r1, r5
 12683 0032 9048     		ldr	r0, .L699+24
 12684 0034 FFF7FEFF 		bl	__aeabi_atexit
 12685              	.LVL800:
 12686              	.LBB2479:
 12687              	.LBI2479:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12688              		.loc 10 21 5 is_stmt 1 view .LVU3540
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12689              		.loc 10 21 5 is_stmt 0 view .LVU3541
 12690              	.LBE2479:
  43:Veno-Echo.cpp **** 
 12691              		.loc 20 43 12 view .LVU3542
 12692 0038 2246     		mov	r2, r4
 12693 003a 2946     		mov	r1, r5
 12694 003c 8E48     		ldr	r0, .L699+28
 12695 003e FFF7FEFF 		bl	__aeabi_atexit
 12696              	.LVL801:
 12697              	.LBB2480:
 12698              	.LBI2480:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12699              		.loc 10 21 5 is_stmt 1 view .LVU3543
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 385


  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12700              		.loc 10 21 5 is_stmt 0 view .LVU3544
 12701              	.LBE2480:
  45:Veno-Echo.cpp **** static Svf LPF_R_post;
 12702              		.loc 20 45 12 view .LVU3545
 12703 0042 2246     		mov	r2, r4
 12704 0044 2946     		mov	r1, r5
 12705 0046 8D48     		ldr	r0, .L699+32
 12706 0048 FFF7FEFF 		bl	__aeabi_atexit
 12707              	.LVL802:
 12708              	.LBB2481:
 12709              	.LBI2481:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12710              		.loc 10 21 5 is_stmt 1 view .LVU3546
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12711              		.loc 10 21 5 is_stmt 0 view .LVU3547
 12712              	.LBE2481:
  46:Veno-Echo.cpp **** static Svf HPF_L_post;
 12713              		.loc 20 46 12 view .LVU3548
 12714 004c 2246     		mov	r2, r4
 12715 004e 2946     		mov	r1, r5
 12716 0050 8B48     		ldr	r0, .L699+36
 12717 0052 FFF7FEFF 		bl	__aeabi_atexit
 12718              	.LVL803:
 12719              	.LBB2482:
 12720              	.LBI2482:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12721              		.loc 10 21 5 is_stmt 1 view .LVU3549
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12722              		.loc 10 21 5 is_stmt 0 view .LVU3550
 12723              	.LBE2482:
  47:Veno-Echo.cpp **** static Svf HPF_R_post;
 12724              		.loc 20 47 12 view .LVU3551
 12725 0056 2246     		mov	r2, r4
 12726 0058 2946     		mov	r1, r5
 12727 005a 8A48     		ldr	r0, .L699+40
 12728 005c FFF7FEFF 		bl	__aeabi_atexit
 12729              	.LVL804:
 12730              	.LBB2483:
 12731              	.LBI2483:
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12732              		.loc 10 21 5 is_stmt 1 view .LVU3552
  21:../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 12733              		.loc 10 21 5 is_stmt 0 view .LVU3553
 12734              	.LBE2483:
  48:Veno-Echo.cpp **** 
 12735              		.loc 20 48 12 view .LVU3554
 12736 0060 2246     		mov	r2, r4
 12737 0062 2946     		mov	r1, r5
 12738 0064 8848     		ldr	r0, .L699+44
 12739 0066 FFF7FEFF 		bl	__aeabi_atexit
 12740              	.LVL805:
 12741              	.LBB2484:
 12742              	.LBI2484:
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 12743              		.loc 9 15 5 is_stmt 1 view .LVU3555
  15:../DaisySP/Source/Synthesis/oscillator.h ****     ~Oscillator() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 386


 12744              		.loc 9 15 5 is_stmt 0 view .LVU3556
 12745              	.LBE2484:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 12746              		.loc 20 50 19 view .LVU3557
 12747 006a 2246     		mov	r2, r4
 12748 006c 8749     		ldr	r1, .L699+48
 12749              	.LBB2485:
 12750              	.LBB2486:
 12751              	.LBB2487:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12752              		.loc 12 45 13 view .LVU3558
 12753 006e 0025     		movs	r5, #0
 12754              	.LBE2487:
 12755              	.LBE2486:
 12756              	.LBE2485:
  50:Veno-Echo.cpp **** static EnvFollow LeftEnv, RightEnv;   //env follower class
 12757              		.loc 20 50 19 view .LVU3559
 12758 0070 8748     		ldr	r0, .L699+52
 12759 0072 FFF7FEFF 		bl	__aeabi_atexit
 12760              	.LVL806:
 12761              	.LBB2492:
 12762              	.LBI2485:
  43:envFollow.h   ****     {
 12763              		.loc 12 43 5 is_stmt 1 view .LVU3560
 12764              	.LBB2490:
 12765              	.LBB2488:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12766              		.loc 12 45 9 view .LVU3561
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12767              		.loc 12 48 11 is_stmt 0 view .LVU3562
 12768 0076 874F     		ldr	r7, .L699+56
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12769              		.loc 12 45 13 view .LVU3563
 12770 0078 8748     		ldr	r0, .L699+60
 12771              	.LBE2488:
 12772              	.LBE2490:
 12773              	.LBE2492:
  51:Veno-Echo.cpp **** 
 12774              		.loc 20 51 18 view .LVU3564
 12775 007a 2246     		mov	r2, r4
 12776 007c 8749     		ldr	r1, .L699+64
 12777              	.LBB2493:
 12778              	.LBB2491:
 12779              	.LBB2489:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12780              		.loc 12 45 13 view .LVU3565
 12781 007e 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12782              		.loc 12 46 9 is_stmt 1 view .LVU3566
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12783              		.loc 12 46 20 is_stmt 0 view .LVU3567
 12784 0080 4560     		str	r5, [r0, #4]	@ float
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12785              		.loc 12 47 9 is_stmt 1 view .LVU3568
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12786              		.loc 12 47 17 is_stmt 0 view .LVU3569
 12787 0082 C560     		str	r5, [r0, #12]	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 387


  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12788              		.loc 12 48 9 is_stmt 1 view .LVU3570
  50:envFollow.h   ****     }  
 12789              		.loc 12 50 21 is_stmt 0 view .LVU3571
 12790 0084 8560     		str	r5, [r0, #8]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12791              		.loc 12 48 11 view .LVU3572
 12792 0086 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12793              		.loc 12 49 9 is_stmt 1 view .LVU3573
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12794              		.loc 12 49 15 is_stmt 0 view .LVU3574
 12795 0088 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 12796              		.loc 12 50 9 is_stmt 1 view .LVU3575
 12797              	.LVL807:
  50:envFollow.h   ****     }  
 12798              		.loc 12 50 9 is_stmt 0 view .LVU3576
 12799              	.LBE2489:
 12800              	.LBE2491:
 12801              	.LBE2493:
  51:Veno-Echo.cpp **** 
 12802              		.loc 20 51 18 view .LVU3577
 12803 008a FFF7FEFF 		bl	__aeabi_atexit
 12804              	.LVL808:
 12805              	.LBB2494:
 12806              	.LBI2494:
  43:envFollow.h   ****     {
 12807              		.loc 12 43 5 is_stmt 1 view .LVU3578
 12808              	.LBB2495:
 12809              	.LBB2496:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12810              		.loc 12 45 9 view .LVU3579
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12811              		.loc 12 45 13 is_stmt 0 view .LVU3580
 12812 008e 8448     		ldr	r0, .L699+68
 12813              	.LBE2496:
 12814              	.LBE2495:
 12815              	.LBE2494:
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 12816              		.loc 20 56 76 view .LVU3581
 12817 0090 DFF8D082 		ldr	r8, .L699+264
  51:Veno-Echo.cpp **** 
 12818              		.loc 20 51 27 view .LVU3582
 12819 0094 2246     		mov	r2, r4
 12820 0096 8149     		ldr	r1, .L699+64
 12821              	.LBB2499:
 12822              	.LBB2498:
 12823              	.LBB2497:
  45:envFollow.h   ****         pos_sample = 0.0f;   //positive sample
 12824              		.loc 12 45 13 view .LVU3583
 12825 0098 0560     		str	r5, [r0]	@ float
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12826              		.loc 12 46 9 is_stmt 1 view .LVU3584
  46:envFollow.h   ****         avg_env = 0.0f;  //average envelope
 12827              		.loc 12 46 20 is_stmt 0 view .LVU3585
 12828 009a 4560     		str	r5, [r0, #4]	@ float
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 388


  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12829              		.loc 12 47 9 is_stmt 1 view .LVU3586
  47:envFollow.h   ****         w = 0.0001f;        //weighting
 12830              		.loc 12 47 17 is_stmt 0 view .LVU3587
 12831 009c C560     		str	r5, [r0, #12]	@ float
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12832              		.loc 12 48 9 is_stmt 1 view .LVU3588
  48:envFollow.h   ****         w_env = 0.0001f;    //envelope weighting
 12833              		.loc 12 48 11 is_stmt 0 view .LVU3589
 12834 009e 0761     		str	r7, [r0, #16]	@ float
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12835              		.loc 12 49 9 is_stmt 1 view .LVU3590
  49:envFollow.h   ****         sample_noDC = 0.0f;
 12836              		.loc 12 49 15 is_stmt 0 view .LVU3591
 12837 00a0 4761     		str	r7, [r0, #20]	@ float
  50:envFollow.h   ****     }  
 12838              		.loc 12 50 9 is_stmt 1 view .LVU3592
  50:envFollow.h   ****     }  
 12839              		.loc 12 50 21 is_stmt 0 view .LVU3593
 12840 00a2 8560     		str	r5, [r0, #8]	@ float
 12841              	.LVL809:
  50:envFollow.h   ****     }  
 12842              		.loc 12 50 21 view .LVU3594
 12843              	.LBE2497:
 12844              	.LBE2498:
 12845              	.LBE2499:
  51:Veno-Echo.cpp **** 
 12846              		.loc 20 51 27 view .LVU3595
 12847 00a4 FFF7FEFF 		bl	__aeabi_atexit
 12848              	.LVL810:
 12849              	.LBB2500:
 12850              	.LBI2500:
  48:delayline_multitap.h ****     {
 12851              		.loc 18 48 5 is_stmt 1 view .LVU3596
  48:delayline_multitap.h ****     {
 12852              		.loc 18 48 5 is_stmt 0 view .LVU3597
 12853              	.LBE2500:
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 12854              		.loc 20 59 80 view .LVU3598
 12855 00a8 7E4D     		ldr	r5, .L699+72
  56:Veno-Echo.cpp **** DelayLineMultiTap<float, static_cast<size_t>(48000 * 36.0f)> DSY_SDRAM_BSS delMemsR;
 12856              		.loc 20 56 76 view .LVU3599
 12857 00aa 2246     		mov	r2, r4
 12858 00ac 4146     		mov	r1, r8
 12859 00ae 7E48     		ldr	r0, .L699+76
 12860 00b0 FFF7FEFF 		bl	__aeabi_atexit
 12861              	.LVL811:
 12862              	.LBB2501:
 12863              	.LBI2501:
  48:delayline_multitap.h ****     {
 12864              		.loc 18 48 5 is_stmt 1 view .LVU3600
  48:delayline_multitap.h ****     {
 12865              		.loc 18 48 5 is_stmt 0 view .LVU3601
 12866              	.LBE2501:
  57:Veno-Echo.cpp **** 
 12867              		.loc 20 57 76 view .LVU3602
 12868 00b4 2246     		mov	r2, r4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 389


 12869 00b6 4146     		mov	r1, r8
 12870 00b8 7C48     		ldr	r0, .L699+80
 12871 00ba FFF7FEFF 		bl	__aeabi_atexit
 12872              	.LVL812:
 12873              	.LBB2502:
 12874              	.LBI2502:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12875              		.loc 19 38 5 is_stmt 1 view .LVU3603
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12876              		.loc 19 38 5 is_stmt 0 view .LVU3604
 12877              	.LBE2502:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 12878              		.loc 20 98 12 view .LVU3605
 12879 00be 7C4F     		ldr	r7, .L699+84
  59:Veno-Echo.cpp **** DelayLineReverse<float, static_cast<size_t>(maxRevDelay * 2.5f)> DSY_SDRAM_BSS delMemsR_REV;
 12880              		.loc 20 59 80 view .LVU3606
 12881 00c0 2246     		mov	r2, r4
 12882 00c2 2946     		mov	r1, r5
 12883 00c4 7B48     		ldr	r0, .L699+88
 12884 00c6 FFF7FEFF 		bl	__aeabi_atexit
 12885              	.LVL813:
 12886              	.LBB2503:
 12887              	.LBI2503:
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12888              		.loc 19 38 5 is_stmt 1 view .LVU3607
  38:delayline_reverse.h ****     ~DelayLineReverse() {}
 12889              		.loc 19 38 5 is_stmt 0 view .LVU3608
 12890              	.LBE2503:
  60:Veno-Echo.cpp **** 
 12891              		.loc 20 60 80 view .LVU3609
 12892 00ca 2246     		mov	r2, r4
 12893 00cc 2946     		mov	r1, r5
 12894 00ce 7A48     		ldr	r0, .L699+92
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12895              		.loc 20 102 11 view .LVU3610
 12896 00d0 7A4D     		ldr	r5, .L699+96
  60:Veno-Echo.cpp **** 
 12897              		.loc 20 60 80 view .LVU3611
 12898 00d2 FFF7FEFF 		bl	__aeabi_atexit
 12899              	.LVL814:
 12900              	.LBB2504:
 12901              	.LBI2504:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12902              		.loc 17 49 1 is_stmt 1 view .LVU3612
 12903              	.LBB2505:
 12904              	.LBB2506:
 12905              	.LBI2506:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 12906              		.loc 14 47 1 view .LVU3613
 12907              	.LBB2507:
 12908              	.LBB2508:
 12909              	.LBI2508:
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 12910              		.loc 16 24 5 view .LVU3614
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 12911              		.loc 16 24 5 is_stmt 0 view .LVU3615
 12912              	.LBE2508:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 390


 12913              	.LBB2509:
 12914              	.LBI2509:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 12915              		.loc 15 15 5 is_stmt 1 view .LVU3616
  15:oscillator_p.h ****     ~Oscillator_p() {}
 12916              		.loc 15 15 5 is_stmt 0 view .LVU3617
 12917              	.LBE2509:
 12918              	.LBE2507:
 12919              	.LBE2506:
 12920              	.LBE2505:
 12921              	.LBE2504:
 12922              	.LBE2572:
 12923              	.LBE2576:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12924              		.loc 17 49 14 is_stmt 1 view .LVU3618
  49:DelayMulti.h  **** ~DelayMulti() {}
 12925              		.loc 17 49 14 view .LVU3619
 12926              	.LBB2577:
 12927              	.LBB2573:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 12928              		.loc 20 98 12 is_stmt 0 view .LVU3620
 12929 00d6 2246     		mov	r2, r4
 12930 00d8 3946     		mov	r1, r7
 12931 00da 7948     		ldr	r0, .L699+100
 12932 00dc FFF7FEFF 		bl	__aeabi_atexit
 12933              	.LVL815:
 12934              	.LBB2510:
 12935              	.LBI2510:
  49:DelayMulti.h  **** ~DelayMulti() {}
 12936              		.loc 17 49 1 is_stmt 1 view .LVU3621
 12937              	.LBB2511:
 12938              	.LBB2512:
 12939              	.LBI2512:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 12940              		.loc 14 47 1 view .LVU3622
 12941              	.LBB2513:
 12942              	.LBB2514:
 12943              	.LBI2514:
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 12944              		.loc 16 24 5 view .LVU3623
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 12945              		.loc 16 24 5 is_stmt 0 view .LVU3624
 12946              	.LBE2514:
 12947              	.LBB2515:
 12948              	.LBI2515:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 12949              		.loc 15 15 5 is_stmt 1 view .LVU3625
  15:oscillator_p.h ****     ~Oscillator_p() {}
 12950              		.loc 15 15 5 is_stmt 0 view .LVU3626
 12951              	.LBE2515:
 12952              	.LBE2513:
 12953              	.LBE2512:
 12954              	.LBE2511:
 12955              	.LBE2510:
 12956              	.LBE2573:
 12957              	.LBE2577:
  49:DelayMulti.h  **** ~DelayMulti() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 391


 12958              		.loc 17 49 14 is_stmt 1 view .LVU3627
  49:DelayMulti.h  **** ~DelayMulti() {}
 12959              		.loc 17 49 14 view .LVU3628
 12960              	.LBB2578:
 12961              	.LBB2574:
  98:Veno-Echo.cpp **** DelayRev delaysL_REV,delaysR_REV;
 12962              		.loc 20 98 19 is_stmt 0 view .LVU3629
 12963 00e0 2246     		mov	r2, r4
 12964 00e2 3946     		mov	r1, r7
 12965 00e4 7748     		ldr	r0, .L699+104
 12966 00e6 FFF7FEFF 		bl	__aeabi_atexit
 12967              	.LVL816:
 12968              	.LBB2516:
 12969              	.LBI2516:
  78:LEDs.h        ****     ~ButtonLED() {}
 12970              		.loc 14 78 5 is_stmt 1 view .LVU3630
 12971              	.LBB2517:
 12972              	.LBB2518:
 12973              	.LBI2518:
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 12974              		.loc 1 41 5 view .LVU3631
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 12975              		.loc 1 41 5 is_stmt 0 view .LVU3632
 12976              	.LBE2518:
 12977              	.LBB2519:
 12978              	.LBI2519:
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 12979              		.loc 16 24 5 is_stmt 1 view .LVU3633
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 12980              		.loc 16 24 5 is_stmt 0 view .LVU3634
 12981              	.LBE2519:
 12982              	.LBE2517:
 12983              	.LBE2516:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 12984              		.loc 20 102 11 view .LVU3635
 12985 00ea 2246     		mov	r2, r4
 12986 00ec 2946     		mov	r1, r5
 12987 00ee 7648     		ldr	r0, .L699+108
 12988 00f0 FFF7FEFF 		bl	__aeabi_atexit
 12989              	.LVL817:
 12990              	.LBB2520:
 12991              	.LBI2520:
  78:LEDs.h        ****     ~ButtonLED() {}
 12992              		.loc 14 78 5 is_stmt 1 view .LVU3636
 12993              	.LBB2521:
 12994              	.LBB2522:
 12995              	.LBI2522:
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 12996              		.loc 1 41 5 view .LVU3637
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 12997              		.loc 1 41 5 is_stmt 0 view .LVU3638
 12998              	.LBE2522:
 12999              	.LBB2523:
 13000              	.LBI2523:
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 13001              		.loc 16 24 5 is_stmt 1 view .LVU3639
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 392


 13002              		.loc 16 24 5 is_stmt 0 view .LVU3640
 13003              	.LBE2523:
 13004              	.LBE2521:
 13005              	.LBE2520:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13006              		.loc 20 102 18 view .LVU3641
 13007 00f4 2246     		mov	r2, r4
 13008 00f6 2946     		mov	r1, r5
 13009 00f8 7448     		ldr	r0, .L699+112
 13010 00fa FFF7FEFF 		bl	__aeabi_atexit
 13011              	.LVL818:
 13012              	.LBB2524:
 13013              	.LBI2524:
  78:LEDs.h        ****     ~ButtonLED() {}
 13014              		.loc 14 78 5 is_stmt 1 view .LVU3642
 13015              	.LBB2525:
 13016              	.LBB2526:
 13017              	.LBI2526:
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 13018              		.loc 1 41 5 view .LVU3643
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 13019              		.loc 1 41 5 is_stmt 0 view .LVU3644
 13020              	.LBE2526:
 13021              	.LBB2527:
 13022              	.LBI2527:
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 13023              		.loc 16 24 5 is_stmt 1 view .LVU3645
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 13024              		.loc 16 24 5 is_stmt 0 view .LVU3646
 13025              	.LBE2527:
 13026              	.LBE2525:
 13027              	.LBE2524:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13028              		.loc 20 102 25 view .LVU3647
 13029 00fe 2246     		mov	r2, r4
 13030 0100 2946     		mov	r1, r5
 13031 0102 7348     		ldr	r0, .L699+116
 13032 0104 FFF7FEFF 		bl	__aeabi_atexit
 13033              	.LVL819:
 13034              	.LBB2528:
 13035              	.LBI2528:
  78:LEDs.h        ****     ~ButtonLED() {}
 13036              		.loc 14 78 5 is_stmt 1 view .LVU3648
 13037              	.LBB2529:
 13038              	.LBB2530:
 13039              	.LBI2530:
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 13040              		.loc 1 41 5 view .LVU3649
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 13041              		.loc 1 41 5 is_stmt 0 view .LVU3650
 13042              	.LBE2530:
 13043              	.LBB2531:
 13044              	.LBI2531:
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 13045              		.loc 16 24 5 is_stmt 1 view .LVU3651
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 13046              		.loc 16 24 5 is_stmt 0 view .LVU3652
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 393


 13047              	.LBE2531:
 13048              	.LBE2529:
 13049              	.LBE2528:
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13050              		.loc 20 102 34 view .LVU3653
 13051 0108 2246     		mov	r2, r4
 13052 010a 2946     		mov	r1, r5
 13053 010c 7148     		ldr	r0, .L699+120
 13054 010e FFF7FEFF 		bl	__aeabi_atexit
 13055              	.LVL820:
 13056              	.LBB2532:
 13057              	.LBI2532:
  78:LEDs.h        ****     ~ButtonLED() {}
 13058              		.loc 14 78 5 is_stmt 1 view .LVU3654
 13059              	.LBB2533:
 13060              	.LBB2534:
 13061              	.LBI2534:
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 13062              		.loc 1 41 5 view .LVU3655
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 13063              		.loc 1 41 5 is_stmt 0 view .LVU3656
 13064              	.LBE2534:
 13065              	.LBB2535:
 13066              	.LBI2535:
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 13067              		.loc 16 24 5 is_stmt 1 view .LVU3657
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 13068              		.loc 16 24 5 is_stmt 0 view .LVU3658
 13069              	.LBE2535:
 13070              	.LBE2533:
 13071              	.LBE2532:
 150:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 13072              		.loc 20 150 13 view .LVU3659
 13073 0112 714F     		ldr	r7, .L699+124
 102:Veno-Echo.cpp **** TempoLED tempoLED_BASE;
 13074              		.loc 20 102 44 view .LVU3660
 13075 0114 2246     		mov	r2, r4
 13076 0116 2946     		mov	r1, r5
 13077 0118 7048     		ldr	r0, .L699+128
 13078 011a FFF7FEFF 		bl	__aeabi_atexit
 13079              	.LVL821:
 13080              	.LBB2536:
 13081              	.LBI2536:
  47:LEDs.h        **** ~TempoLED(){}   //destructor
 13082              		.loc 14 47 1 is_stmt 1 view .LVU3661
 13083              	.LBB2537:
 13084              	.LBB2538:
 13085              	.LBI2538:
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 13086              		.loc 16 24 5 view .LVU3662
  24:../libDaisy/src/hid/led.h ****     ~Led() {}
 13087              		.loc 16 24 5 is_stmt 0 view .LVU3663
 13088              	.LBE2538:
 13089              	.LBB2539:
 13090              	.LBI2539:
  15:oscillator_p.h ****     ~Oscillator_p() {}
 13091              		.loc 15 15 5 is_stmt 1 view .LVU3664
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 394


  15:oscillator_p.h ****     ~Oscillator_p() {}
 13092              		.loc 15 15 5 is_stmt 0 view .LVU3665
 13093              	.LBE2539:
 13094              	.LBE2537:
 13095              	.LBE2536:
 103:Veno-Echo.cpp **** 
 13096              		.loc 20 103 10 view .LVU3666
 13097 011e 2246     		mov	r2, r4
 13098 0120 6F49     		ldr	r1, .L699+132
 13099 0122 7048     		ldr	r0, .L699+136
 13100 0124 FFF7FEFF 		bl	__aeabi_atexit
 13101              	.LVL822:
 13102              	.LBB2540:
 13103              	.LBI2540:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13104              		.loc 8 38 5 is_stmt 1 view .LVU3667
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13105              		.loc 8 38 5 is_stmt 0 view .LVU3668
 13106              	.LBE2540:
 150:Veno-Echo.cpp **** static Adsr FwdRevREnv;
 13107              		.loc 20 150 13 view .LVU3669
 13108 0128 2246     		mov	r2, r4
 13109 012a 3946     		mov	r1, r7
 13110 012c 6E48     		ldr	r0, .L699+140
 13111 012e FFF7FEFF 		bl	__aeabi_atexit
 13112              	.LVL823:
 13113              	.LBB2541:
 13114              	.LBI2541:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13115              		.loc 8 38 5 is_stmt 1 view .LVU3670
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13116              		.loc 8 38 5 is_stmt 0 view .LVU3671
 13117              	.LBE2541:
 151:Veno-Echo.cpp **** 
 13118              		.loc 20 151 13 view .LVU3672
 13119 0132 2246     		mov	r2, r4
 13120 0134 3946     		mov	r1, r7
 13121 0136 6D48     		ldr	r0, .L699+144
 156:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 13122              		.loc 20 156 18 view .LVU3673
 13123 0138 6D4D     		ldr	r5, .L699+148
 151:Veno-Echo.cpp **** 
 13124              		.loc 20 151 13 view .LVU3674
 13125 013a FFF7FEFF 		bl	__aeabi_atexit
 13126              	.LVL824:
 13127              	.LBB2542:
 13128              	.LBI2542:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13129              		.loc 8 38 5 is_stmt 1 view .LVU3675
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13130              		.loc 8 38 5 is_stmt 0 view .LVU3676
 13131              	.LBE2542:
 153:Veno-Echo.cpp **** static Adsr HPF_Env;
 13132              		.loc 20 153 13 view .LVU3677
 13133 013e 2246     		mov	r2, r4
 13134 0140 3946     		mov	r1, r7
 13135 0142 6C48     		ldr	r0, .L699+152
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 395


 13136 0144 FFF7FEFF 		bl	__aeabi_atexit
 13137              	.LVL825:
 13138              	.LBB2543:
 13139              	.LBI2543:
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13140              		.loc 8 38 5 is_stmt 1 view .LVU3678
  38:../DaisySP/Source/Control/adsr.h ****     ~Adsr() {}
 13141              		.loc 8 38 5 is_stmt 0 view .LVU3679
 13142              	.LBE2543:
 154:Veno-Echo.cpp **** 
 13143              		.loc 20 154 13 view .LVU3680
 13144 0148 2246     		mov	r2, r4
 13145 014a 3946     		mov	r1, r7
 13146 014c 6A48     		ldr	r0, .L699+156
 13147 014e FFF7FEFF 		bl	__aeabi_atexit
 13148              	.LVL826:
 13149              	.LBB2544:
 13150              	.LBI2544:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13151              		.loc 11 36 5 is_stmt 1 view .LVU3681
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13152              		.loc 11 36 5 is_stmt 0 view .LVU3682
 13153              	.LBE2544:
 156:Veno-Echo.cpp **** static CrossFade FwdRevRXfade;
 13154              		.loc 20 156 18 view .LVU3683
 13155 0152 2246     		mov	r2, r4
 13156 0154 2946     		mov	r1, r5
 13157 0156 6948     		ldr	r0, .L699+160
 13158 0158 FFF7FEFF 		bl	__aeabi_atexit
 13159              	.LVL827:
 13160              	.LBB2545:
 13161              	.LBI2545:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13162              		.loc 11 36 5 is_stmt 1 view .LVU3684
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13163              		.loc 11 36 5 is_stmt 0 view .LVU3685
 13164              	.LBE2545:
 157:Veno-Echo.cpp **** 
 13165              		.loc 20 157 18 view .LVU3686
 13166 015c 2246     		mov	r2, r4
 13167 015e 2946     		mov	r1, r5
 13168 0160 6748     		ldr	r0, .L699+164
 13169 0162 FFF7FEFF 		bl	__aeabi_atexit
 13170              	.LVL828:
 13171              	.LBB2546:
 13172              	.LBI2546:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13173              		.loc 11 36 5 is_stmt 1 view .LVU3687
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13174              		.loc 11 36 5 is_stmt 0 view .LVU3688
 13175              	.LBE2546:
 159:Veno-Echo.cpp **** 
 13176              		.loc 20 159 18 view .LVU3689
 13177 0166 2246     		mov	r2, r4
 13178 0168 2946     		mov	r1, r5
 13179 016a 6648     		ldr	r0, .L699+168
 13180 016c FFF7FEFF 		bl	__aeabi_atexit
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 396


 13181              	.LVL829:
 13182              	.LBB2547:
 13183              	.LBI2547:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13184              		.loc 11 36 5 is_stmt 1 view .LVU3690
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13185              		.loc 11 36 5 is_stmt 0 view .LVU3691
 13186              	.LBE2547:
 162:Veno-Echo.cpp **** static CrossFade LPF_RXfade;
 13187              		.loc 20 162 18 view .LVU3692
 13188 0170 2246     		mov	r2, r4
 13189 0172 2946     		mov	r1, r5
 13190 0174 6448     		ldr	r0, .L699+172
 13191 0176 FFF7FEFF 		bl	__aeabi_atexit
 13192              	.LVL830:
 13193              	.LBB2548:
 13194              	.LBI2548:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13195              		.loc 11 36 5 is_stmt 1 view .LVU3693
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13196              		.loc 11 36 5 is_stmt 0 view .LVU3694
 13197              	.LBE2548:
 163:Veno-Echo.cpp **** static CrossFade HPF_LXfade;
 13198              		.loc 20 163 18 view .LVU3695
 13199 017a 2246     		mov	r2, r4
 13200 017c 2946     		mov	r1, r5
 13201 017e 6348     		ldr	r0, .L699+176
 13202 0180 FFF7FEFF 		bl	__aeabi_atexit
 13203              	.LVL831:
 13204              	.LBB2549:
 13205              	.LBI2549:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13206              		.loc 11 36 5 is_stmt 1 view .LVU3696
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13207              		.loc 11 36 5 is_stmt 0 view .LVU3697
 13208              	.LBE2549:
 164:Veno-Echo.cpp **** static CrossFade HPF_RXfade;
 13209              		.loc 20 164 18 view .LVU3698
 13210 0184 2246     		mov	r2, r4
 13211 0186 2946     		mov	r1, r5
 13212 0188 6148     		ldr	r0, .L699+180
 13213 018a FFF7FEFF 		bl	__aeabi_atexit
 13214              	.LVL832:
 13215              	.LBB2550:
 13216              	.LBI2550:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13217              		.loc 11 36 5 is_stmt 1 view .LVU3699
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13218              		.loc 11 36 5 is_stmt 0 view .LVU3700
 13219              	.LBE2550:
 165:Veno-Echo.cpp **** 
 13220              		.loc 20 165 18 view .LVU3701
 13221 018e 2246     		mov	r2, r4
 13222 0190 2946     		mov	r1, r5
 13223 0192 6048     		ldr	r0, .L699+184
 13224 0194 FFF7FEFF 		bl	__aeabi_atexit
 13225              	.LVL833:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 397


 13226              	.LBB2551:
 13227              	.LBI2551:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13228              		.loc 11 36 5 is_stmt 1 view .LVU3702
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13229              		.loc 11 36 5 is_stmt 0 view .LVU3703
 13230              	.LBE2551:
 168:Veno-Echo.cpp **** static CrossFade LPF_RXfade_post;
 13231              		.loc 20 168 18 view .LVU3704
 13232 0198 2246     		mov	r2, r4
 13233 019a 2946     		mov	r1, r5
 13234 019c 5E48     		ldr	r0, .L699+188
 13235 019e FFF7FEFF 		bl	__aeabi_atexit
 13236              	.LVL834:
 13237              	.LBB2552:
 13238              	.LBI2552:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13239              		.loc 11 36 5 is_stmt 1 view .LVU3705
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13240              		.loc 11 36 5 is_stmt 0 view .LVU3706
 13241              	.LBE2552:
 169:Veno-Echo.cpp **** static CrossFade HPF_LXfade_post;
 13242              		.loc 20 169 18 view .LVU3707
 13243 01a2 2246     		mov	r2, r4
 13244 01a4 2946     		mov	r1, r5
 13245 01a6 5D48     		ldr	r0, .L699+192
 13246 01a8 FFF7FEFF 		bl	__aeabi_atexit
 13247              	.LVL835:
 13248              	.LBB2553:
 13249              	.LBI2553:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13250              		.loc 11 36 5 is_stmt 1 view .LVU3708
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13251              		.loc 11 36 5 is_stmt 0 view .LVU3709
 13252              	.LBE2553:
 170:Veno-Echo.cpp **** static CrossFade HPF_RXfade_post;
 13253              		.loc 20 170 18 view .LVU3710
 13254 01ac 2246     		mov	r2, r4
 13255 01ae 2946     		mov	r1, r5
 13256 01b0 5B48     		ldr	r0, .L699+196
 13257 01b2 FFF7FEFF 		bl	__aeabi_atexit
 13258              	.LVL836:
 13259              	.LBB2554:
 13260              	.LBI2554:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13261              		.loc 11 36 5 is_stmt 1 view .LVU3711
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13262              		.loc 11 36 5 is_stmt 0 view .LVU3712
 13263              	.LBE2554:
 171:Veno-Echo.cpp **** 
 13264              		.loc 20 171 18 view .LVU3713
 13265 01b6 2246     		mov	r2, r4
 13266 01b8 2946     		mov	r1, r5
 13267 01ba 5A48     		ldr	r0, .L699+200
 13268 01bc FFF7FEFF 		bl	__aeabi_atexit
 13269              	.LVL837:
 13270              	.LBB2555:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 398


 13271              	.LBI2555:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13272              		.loc 11 36 5 is_stmt 1 view .LVU3714
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13273              		.loc 11 36 5 is_stmt 0 view .LVU3715
 13274              	.LBE2555:
 174:Veno-Echo.cpp **** static CrossFade FilterMix_R;
 13275              		.loc 20 174 18 view .LVU3716
 13276 01c0 2246     		mov	r2, r4
 13277 01c2 2946     		mov	r1, r5
 13278 01c4 5848     		ldr	r0, .L699+204
 13279 01c6 FFF7FEFF 		bl	__aeabi_atexit
 13280              	.LVL838:
 13281              	.LBB2556:
 13282              	.LBI2556:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13283              		.loc 11 36 5 is_stmt 1 view .LVU3717
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13284              		.loc 11 36 5 is_stmt 0 view .LVU3718
 13285              	.LBE2556:
 175:Veno-Echo.cpp **** 
 13286              		.loc 20 175 18 view .LVU3719
 13287 01ca 2246     		mov	r2, r4
 13288 01cc 2946     		mov	r1, r5
 13289 01ce 5748     		ldr	r0, .L699+208
 13290 01d0 FFF7FEFF 		bl	__aeabi_atexit
 13291              	.LVL839:
 13292              	.LBB2557:
 13293              	.LBI2557:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13294              		.loc 11 36 5 is_stmt 1 view .LVU3720
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13295              		.loc 11 36 5 is_stmt 0 view .LVU3721
 13296              	.LBE2557:
 181:Veno-Echo.cpp **** Switch ReverseGateR;
 13297              		.loc 20 181 8 view .LVU3722
 13298 01d4 564F     		ldr	r7, .L699+212
 177:Veno-Echo.cpp **** static CrossFade FilterMix_R_post;
 13299              		.loc 20 177 18 view .LVU3723
 13300 01d6 2246     		mov	r2, r4
 13301 01d8 2946     		mov	r1, r5
 13302 01da 5648     		ldr	r0, .L699+216
 13303 01dc FFF7FEFF 		bl	__aeabi_atexit
 13304              	.LVL840:
 13305              	.LBB2558:
 13306              	.LBI2558:
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13307              		.loc 11 36 5 is_stmt 1 view .LVU3724
  36:../DaisySP/Source/Dynamics/crossfade.h ****     ~CrossFade() {}
 13308              		.loc 11 36 5 is_stmt 0 view .LVU3725
 13309              	.LBE2558:
 178:Veno-Echo.cpp **** 
 13310              		.loc 20 178 18 view .LVU3726
 13311 01e0 2246     		mov	r2, r4
 13312 01e2 2946     		mov	r1, r5
 13313 01e4 5448     		ldr	r0, .L699+220
 13314 01e6 FFF7FEFF 		bl	__aeabi_atexit
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 399


 13315              	.LVL841:
 13316              	.LBB2559:
 13317              	.LBI2559:
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 13318              		.loc 1 41 5 is_stmt 1 view .LVU3727
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 13319              		.loc 1 41 5 is_stmt 0 view .LVU3728
 13320              	.LBE2559:
 181:Veno-Echo.cpp **** Switch ReverseGateR;
 13321              		.loc 20 181 8 view .LVU3729
 13322 01ea 2246     		mov	r2, r4
 13323 01ec 3946     		mov	r1, r7
 13324 01ee 5348     		ldr	r0, .L699+224
 13325 01f0 FFF7FEFF 		bl	__aeabi_atexit
 13326              	.LVL842:
 13327              	.LBB2560:
 13328              	.LBI2560:
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 13329              		.loc 1 41 5 is_stmt 1 view .LVU3730
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 13330              		.loc 1 41 5 is_stmt 0 view .LVU3731
 13331              	.LBE2560:
 182:Veno-Echo.cpp **** 
 13332              		.loc 20 182 8 view .LVU3732
 13333 01f4 2246     		mov	r2, r4
 13334 01f6 3946     		mov	r1, r7
 13335 01f8 5148     		ldr	r0, .L699+228
 13336 01fa FFF7FEFF 		bl	__aeabi_atexit
 13337              	.LVL843:
 13338              	.LBB2561:
 13339              	.LBI2561:
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 13340              		.loc 1 41 5 is_stmt 1 view .LVU3733
  41:../libDaisy/src/hid/switch.h ****     ~Switch() {}
 13341              		.loc 1 41 5 is_stmt 0 view .LVU3734
 13342              	.LBE2561:
 185:Veno-Echo.cpp **** dsy_gpio_pin ClockPin{hw.GetPin(5)};
 13343              		.loc 20 185 8 view .LVU3735
 13344 01fe 2246     		mov	r2, r4
 13345 0200 3946     		mov	r1, r7
 13346 0202 5048     		ldr	r0, .L699+232
 13347 0204 FFF7FEFF 		bl	__aeabi_atexit
 13348              	.LVL844:
 186:Veno-Echo.cpp **** GateIn ClockIn;
 13349              		.loc 20 186 34 view .LVU3736
 13350 0208 0520     		movs	r0, #5
 13351 020a FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 13352              	.LVL845:
 13353 020e 4E4B     		ldr	r3, .L699+236
 13354 0210 0546     		mov	r5, r0	@ movhi
 187:Veno-Echo.cpp **** //Switch ClockIn;
 13355              		.loc 20 187 8 view .LVU3737
 13356 0212 2246     		mov	r2, r4
 13357 0214 4D49     		ldr	r1, .L699+240
 13358 0216 4E48     		ldr	r0, .L699+244
 186:Veno-Echo.cpp **** GateIn ClockIn;
 13359              		.loc 20 186 34 view .LVU3738
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 400


 13360 0218 1D80     		strh	r5, [r3]	@ movhi
 13361              	.LVL846:
 13362              	.LBB2562:
 13363              	.LBI2562:
  20:../libDaisy/src/hid/gatein.h ****     /** GateIn~
 13364              		.loc 2 20 5 is_stmt 1 view .LVU3739
  20:../libDaisy/src/hid/gatein.h ****     /** GateIn~
 13365              		.loc 2 20 5 is_stmt 0 view .LVU3740
 13366              	.LBE2562:
 187:Veno-Echo.cpp **** //Switch ClockIn;
 13367              		.loc 20 187 8 view .LVU3741
 13368 021a FFF7FEFF 		bl	__aeabi_atexit
 13369              	.LVL847:
 13370              	.LBB2563:
 13371              	.LBI2563:
  44:taptempo.h    ****     {
 13372              		.loc 13 44 5 is_stmt 1 view .LVU3742
 13373              	.LBB2564:
 13374              	.LBB2565:
  46:taptempo.h    ****         tap_tolerance_ = 1.25f;
 13375              		.loc 13 46 9 view .LVU3743
  54:taptempo.h    ****         clockLength_ = 0;
 13376              		.loc 13 54 19 is_stmt 0 view .LVU3744
 13377 021e 4FF07E55 		mov	r5, #1065353216
  46:taptempo.h    ****         tap_tolerance_ = 1.25f;
 13378              		.loc 13 46 18 view .LVU3745
 13379 0222 4C48     		ldr	r0, .L699+248
  47:taptempo.h    ****         maxtap_ = 2000000;
 13380              		.loc 13 47 24 view .LVU3746
 13381 0224 4C49     		ldr	r1, .L699+252
  57:taptempo.h    ****     }
 13382              		.loc 13 57 22 view .LVU3747
 13383 0226 42F21073 		movw	r3, #10000
  48:taptempo.h    ****         mintap_ = 80000;
 13384              		.loc 13 48 17 view .LVU3748
 13385 022a DFF83CE1 		ldr	lr, .L699+268
 13386              	.LBE2565:
 13387              	.LBE2564:
 13388              	.LBE2563:
 191:Veno-Echo.cpp **** 
 13389              		.loc 20 191 10 view .LVU3749
 13390 022e 2246     		mov	r2, r4
 13391              	.LBB2570:
 13392              	.LBB2568:
 13393              	.LBB2566:
  51:taptempo.h    ****         lastTime_ = 0;
 13394              		.loc 13 51 16 view .LVU3750
 13395 0230 4A4F     		ldr	r7, .L699+256
  49:taptempo.h    ****         lastTapLength_ = 0;
 13396              		.loc 13 49 17 view .LVU3751
 13397 0232 DFF838C1 		ldr	ip, .L699+272
  46:taptempo.h    ****         tap_tolerance_ = 1.25f;
 13398              		.loc 13 46 18 view .LVU3752
 13399 0236 80F82460 		strb	r6, [r0, #36]
  47:taptempo.h    ****         maxtap_ = 2000000;
 13400              		.loc 13 47 9 is_stmt 1 view .LVU3753
  53:taptempo.h    ****         tapRatio_ = 1.0f;
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 401


 13401              		.loc 13 53 22 is_stmt 0 view .LVU3754
 13402 023a 8660     		str	r6, [r0, #8]
  47:taptempo.h    ****         maxtap_ = 2000000;
 13403              		.loc 13 47 24 view .LVU3755
 13404 023c 8162     		str	r1, [r0, #40]	@ float
  48:taptempo.h    ****         mintap_ = 80000;
 13405              		.loc 13 48 9 is_stmt 1 view .LVU3756
  51:taptempo.h    ****         lastTime_ = 0;
 13406              		.loc 13 51 16 is_stmt 0 view .LVU3757
 13407 023e C762     		str	r7, [r0, #44]	@ float
  54:taptempo.h    ****         clockLength_ = 0;
 13408              		.loc 13 54 19 view .LVU3758
 13409 0240 0563     		str	r5, [r0, #48]	@ float
 13410              	.LBE2566:
 13411              	.LBE2568:
 13412              	.LBE2570:
 191:Veno-Echo.cpp **** 
 13413              		.loc 20 191 10 view .LVU3759
 13414 0242 4749     		ldr	r1, .L699+260
 13415              	.LBB2571:
 13416              	.LBB2569:
 13417              	.LBB2567:
  57:taptempo.h    ****     }
 13418              		.loc 13 57 22 view .LVU3760
 13419 0244 0362     		str	r3, [r0, #32]
  52:taptempo.h    ****         currentTime_ = 0;
 13420              		.loc 13 52 19 view .LVU3761
 13421 0246 C0E90366 		strd	r6, r6, [r0, #12]
  56:taptempo.h    ****         clockThresh_ = 10000; //Us change
 13422              		.loc 13 56 26 view .LVU3762
 13423 024a C0E90666 		strd	r6, r6, [r0, #24]
  49:taptempo.h    ****         lastTapLength_ = 0;
 13424              		.loc 13 49 17 view .LVU3763
 13425 024e C0E900CE 		strd	ip, lr, [r0]
  50:taptempo.h    ****         tempo_ = 500000.0f;
 13426              		.loc 13 50 9 is_stmt 1 view .LVU3764
  51:taptempo.h    ****         lastTime_ = 0;
 13427              		.loc 13 51 9 view .LVU3765
  52:taptempo.h    ****         currentTime_ = 0;
 13428              		.loc 13 52 9 view .LVU3766
  53:taptempo.h    ****         tapRatio_ = 1.0f;
 13429              		.loc 13 53 9 view .LVU3767
  54:taptempo.h    ****         clockLength_ = 0;
 13430              		.loc 13 54 9 view .LVU3768
  55:taptempo.h    ****         lastClockLength_ = 0;
 13431              		.loc 13 55 9 view .LVU3769
  56:taptempo.h    ****         clockThresh_ = 10000; //Us change
 13432              		.loc 13 56 9 view .LVU3770
  57:taptempo.h    ****     }
 13433              		.loc 13 57 9 view .LVU3771
 13434              	.LVL848:
  57:taptempo.h    ****     }
 13435              		.loc 13 57 9 is_stmt 0 view .LVU3772
 13436              	.LBE2567:
 13437              	.LBE2569:
 13438              	.LBE2571:
 13439              	.LBE2574:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 402


 13440              	.LBE2578:
 13441              		.loc 20 2150 1 view .LVU3773
 13442 0252 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 13443              		.cfi_restore 14
 13444              		.cfi_restore 8
 13445              		.cfi_restore 7
 13446              		.cfi_restore 6
 13447              		.cfi_restore 5
 13448              		.cfi_restore 4
 13449              		.cfi_def_cfa_offset 0
 13450              	.LBB2579:
 13451              	.LBB2575:
 191:Veno-Echo.cpp **** 
 13452              		.loc 20 191 10 view .LVU3774
 13453 0256 FFF7FEBF 		b	__aeabi_atexit
 13454              	.LVL849:
 13455              	.L700:
 13456 025a 00BF     		.align	2
 13457              	.L699:
 13458 025c 00000000 		.word	.LANCHOR4
 13459 0260 00000000 		.word	__dso_handle
 13460 0264 00000000 		.word	_ZN7daisysp3SvfD1Ev
 13461 0268 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 13462 026c 00000000 		.word	.LANCHOR47
 13463 0270 00000000 		.word	.LANCHOR48
 13464 0274 00000000 		.word	.LANCHOR35
 13465 0278 00000000 		.word	.LANCHOR36
 13466 027c 00000000 		.word	.LANCHOR49
 13467 0280 00000000 		.word	.LANCHOR50
 13468 0284 00000000 		.word	.LANCHOR37
 13469 0288 00000000 		.word	.LANCHOR38
 13470 028c 00000000 		.word	_ZN7daisysp10OscillatorD1Ev
 13471 0290 00000000 		.word	.LANCHOR76
 13472 0294 17B7D138 		.word	953267991
 13473 0298 00000000 		.word	.LANCHOR129
 13474 029c 00000000 		.word	_ZN7daisysp9EnvFollowD1Ev
 13475 02a0 00000000 		.word	.LANCHOR130
 13476 02a4 00000000 		.word	_ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
 13477 02a8 00000000 		.word	delMemsL
 13478 02ac 00000000 		.word	delMemsR
 13479 02b0 00000000 		.word	_ZN10DelayMultiD1Ev
 13480 02b4 00000000 		.word	delMemsL_REV
 13481 02b8 00000000 		.word	delMemsR_REV
 13482 02bc 00000000 		.word	_ZN9ButtonLEDD1Ev
 13483 02c0 00000000 		.word	.LANCHOR0
 13484 02c4 00000000 		.word	.LANCHOR1
 13485 02c8 00000000 		.word	.LANCHOR94
 13486 02cc 00000000 		.word	.LANCHOR95
 13487 02d0 00000000 		.word	.LANCHOR92
 13488 02d4 00000000 		.word	.LANCHOR93
 13489 02d8 00000000 		.word	_ZN7daisysp4AdsrD1Ev
 13490 02dc 00000000 		.word	.LANCHOR96
 13491 02e0 00000000 		.word	_ZN8TempoLEDD1Ev
 13492 02e4 00000000 		.word	.LANCHOR89
 13493 02e8 00000000 		.word	.LANCHOR101
 13494 02ec 00000000 		.word	.LANCHOR102
 13495 02f0 00000000 		.word	_ZN7daisysp9CrossFadeD1Ev
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 403


 13496 02f4 00000000 		.word	.LANCHOR103
 13497 02f8 00000000 		.word	.LANCHOR104
 13498 02fc 00000000 		.word	.LANCHOR105
 13499 0300 00000000 		.word	.LANCHOR106
 13500 0304 00000000 		.word	.LANCHOR65
 13501 0308 00000000 		.word	.LANCHOR117
 13502 030c 00000000 		.word	.LANCHOR118
 13503 0310 00000000 		.word	.LANCHOR115
 13504 0314 00000000 		.word	.LANCHOR116
 13505 0318 00000000 		.word	.LANCHOR121
 13506 031c 00000000 		.word	.LANCHOR122
 13507 0320 00000000 		.word	.LANCHOR119
 13508 0324 00000000 		.word	.LANCHOR120
 13509 0328 00000000 		.word	.LANCHOR123
 13510 032c 00000000 		.word	.LANCHOR124
 13511 0330 00000000 		.word	_ZN5daisy6SwitchD1Ev
 13512 0334 00000000 		.word	.LANCHOR125
 13513 0338 00000000 		.word	.LANCHOR126
 13514 033c 00000000 		.word	.LANCHOR97
 13515 0340 00000000 		.word	.LANCHOR98
 13516 0344 00000000 		.word	.LANCHOR99
 13517 0348 00000000 		.word	.LANCHOR100
 13518 034c 00000000 		.word	_ZN5daisy6GateInD1Ev
 13519 0350 00000000 		.word	.LANCHOR88
 13520 0354 00000000 		.word	.LANCHOR26
 13521 0358 0000A03F 		.word	1067450368
 13522 035c 0024F448 		.word	1223959552
 13523 0360 00000000 		.word	_ZN8TaptempoD1Ev
 13524 0364 00000000 		.word	_ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
 13525 0368 80841E00 		.word	2000000
 13526 036c 80380100 		.word	80000
 13527              	.LBE2575:
 13528              	.LBE2579:
 13529              		.cfi_endproc
 13530              	.LFE5388:
 13532              		.section	.init_array,"aw",%init_array
 13533              		.align	2
 13534 0000 00000000 		.word	_GLOBAL__sub_I_delMemsL(target1)
 13535              		.global	AltControls
 13536              		.global	BaseTempo
 13537              		.global	ClockIn
 13538              		.global	ClockPin
 13539              		.global	Sync
 13540              		.global	ReverseGateR
 13541              		.global	ReverseGateL
 13542              		.global	CLOCK_DEBUG
 13543              		.global	PHASE_DEBUG
 13544              		.global	DELAYR_DEBUG
 13545              		.global	DELAYL_DEBUG
 13546              		.global	saveState
 13547              		.global	save_flag
 13548              		.global	PostFilters
 13549              		.global	ClockInFlag
 13550              		.global	mute
 13551              		.global	shift
 13552              		.global	syncMode
 13553              		.global	modulation_CV_Raw
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 404


 13554              		.global	ModDepth
 13555              		.global	filterXfade
 13556              		.global	width_CV
 13557              		.global	width
 13558              		.global	drywet_CV
 13559              		.global	drywet
 13560              		.global	crossfeedback_CV
 13561              		.global	crossfeedback
 13562              		.global	feedbackR_CV
 13563              		.global	feedbackR
 13564              		.global	feedbackL_CV
 13565              		.global	feedbackL
 13566              		.global	delayTimeR_CV
 13567              		.global	delayTimeL_CV
 13568              		.global	tempoLED_BASE
 13569              		.global	Tap_Button
 13570              		.global	Rev_R_sw
 13571              		.global	Rev_L_sw
 13572              		.global	HPF_sw
 13573              		.global	LPF_sw
 13574              		.global	delaysR_REV
 13575              		.global	delaysL_REV
 13576              		.global	delayR
 13577              		.global	delayL
 13578              		.global	delMemsR_REV
 13579              		.global	delMemsL_REV
 13580              		.global	delMemsR
 13581              		.global	delMemsL
 13582              		.section	.bss.AltControls,"aw",%nobits
 13583              		.align	2
 13584              		.set	.LANCHOR15,. + 0
 13587              	AltControls:
 13588 0000 00000000 		.space	44
 13588      00000000 
 13588      00000000 
 13588      00000000 
 13588      00000000 
 13589              		.section	.bss.BaseTempo,"aw",%nobits
 13590              		.align	2
 13591              		.set	.LANCHOR26,. + 0
 13594              	BaseTempo:
 13595 0000 00000000 		.space	52
 13595      00000000 
 13595      00000000 
 13595      00000000 
 13595      00000000 
 13596              		.section	.bss.CLOCK_DEBUG,"aw",%nobits
 13597              		.align	2
 13600              	CLOCK_DEBUG:
 13601 0000 00000000 		.space	4
 13602              		.section	.bss.ClockIn,"aw",%nobits
 13603              		.align	2
 13604              		.set	.LANCHOR88,. + 0
 13607              	ClockIn:
 13608 0000 00000000 		.space	6
 13608      0000
 13609              		.section	.bss.ClockInFlag,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 405


 13612              	ClockInFlag:
 13613 0000 00       		.space	1
 13614              		.section	.bss.ClockPin,"aw",%nobits
 13615              		.align	2
 13616              		.set	.LANCHOR100,. + 0
 13619              	ClockPin:
 13620 0000 0000     		.space	2
 13621              		.section	.bss.DELAYL_DEBUG,"aw",%nobits
 13622              		.align	2
 13625              	DELAYL_DEBUG:
 13626 0000 00000000 		.space	4
 13627              		.section	.bss.DELAYR_DEBUG,"aw",%nobits
 13628              		.align	2
 13631              	DELAYR_DEBUG:
 13632 0000 00000000 		.space	4
 13633              		.section	.bss.HPF_sw,"aw",%nobits
 13634              		.align	2
 13635              		.set	.LANCHOR95,. + 0
 13638              	HPF_sw:
 13639 0000 00000000 		.space	48
 13639      00000000 
 13639      00000000 
 13639      00000000 
 13639      00000000 
 13640              		.section	.bss.LPF_sw,"aw",%nobits
 13641              		.align	2
 13642              		.set	.LANCHOR94,. + 0
 13645              	LPF_sw:
 13646 0000 00000000 		.space	48
 13646      00000000 
 13646      00000000 
 13646      00000000 
 13646      00000000 
 13647              		.section	.bss.ModDepth,"aw",%nobits
 13648              		.align	2
 13649              		.set	.LANCHOR68,. + 0
 13652              	ModDepth:
 13653 0000 00000000 		.space	4
 13654              		.section	.bss.PHASE_DEBUG,"aw",%nobits
 13655              		.align	2
 13656              		.set	.LANCHOR91,. + 0
 13659              	PHASE_DEBUG:
 13660 0000 00000000 		.space	4
 13661              		.section	.bss.PostFilters,"aw",%nobits
 13662              		.set	.LANCHOR83,. + 0
 13665              	PostFilters:
 13666 0000 00       		.space	1
 13667              		.section	.bss.Rev_L_sw,"aw",%nobits
 13668              		.align	2
 13669              		.set	.LANCHOR92,. + 0
 13672              	Rev_L_sw:
 13673 0000 00000000 		.space	48
 13673      00000000 
 13673      00000000 
 13673      00000000 
 13673      00000000 
 13674              		.section	.bss.Rev_R_sw,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 406


 13675              		.align	2
 13676              		.set	.LANCHOR93,. + 0
 13679              	Rev_R_sw:
 13680 0000 00000000 		.space	48
 13680      00000000 
 13680      00000000 
 13680      00000000 
 13680      00000000 
 13681              		.section	.bss.ReverseGateL,"aw",%nobits
 13682              		.align	2
 13683              		.set	.LANCHOR97,. + 0
 13686              	ReverseGateL:
 13687 0000 00000000 		.space	12
 13687      00000000 
 13687      00000000 
 13688              		.section	.bss.ReverseGateR,"aw",%nobits
 13689              		.align	2
 13690              		.set	.LANCHOR98,. + 0
 13693              	ReverseGateR:
 13694 0000 00000000 		.space	12
 13694      00000000 
 13694      00000000 
 13695              		.section	.bss.Sync,"aw",%nobits
 13696              		.align	2
 13697              		.set	.LANCHOR99,. + 0
 13700              	Sync:
 13701 0000 00000000 		.space	12
 13701      00000000 
 13701      00000000 
 13702              		.section	.bss.Tap_Button,"aw",%nobits
 13703              		.align	2
 13704              		.set	.LANCHOR96,. + 0
 13707              	Tap_Button:
 13708 0000 00000000 		.space	48
 13708      00000000 
 13708      00000000 
 13708      00000000 
 13708      00000000 
 13709              		.section	.bss._ZL10FwdRevLEnv,"aw",%nobits
 13710              		.align	2
 13711              		.set	.LANCHOR101,. + 0
 13714              	_ZL10FwdRevLEnv:
 13715 0000 00000000 		.space	56
 13715      00000000 
 13715      00000000 
 13715      00000000 
 13715      00000000 
 13716              		.section	.bss._ZL10FwdRevREnv,"aw",%nobits
 13717              		.align	2
 13718              		.set	.LANCHOR102,. + 0
 13721              	_ZL10FwdRevREnv:
 13722 0000 00000000 		.space	56
 13722      00000000 
 13722      00000000 
 13722      00000000 
 13722      00000000 
 13723              		.section	.bss._ZL10HPF_LXfade,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 407


 13724              		.align	2
 13725              		.set	.LANCHOR115,. + 0
 13728              	_ZL10HPF_LXfade:
 13729 0000 00000000 		.space	8
 13729      00000000 
 13730              		.section	.bss._ZL10HPF_L_post,"aw",%nobits
 13731              		.align	2
 13732              		.set	.LANCHOR37,. + 0
 13735              	_ZL10HPF_L_post:
 13736 0000 00000000 		.space	76
 13736      00000000 
 13736      00000000 
 13736      00000000 
 13736      00000000 
 13737              		.section	.bss._ZL10HPF_RXfade,"aw",%nobits
 13738              		.align	2
 13739              		.set	.LANCHOR116,. + 0
 13742              	_ZL10HPF_RXfade:
 13743 0000 00000000 		.space	8
 13743      00000000 
 13744              		.section	.bss._ZL10HPF_R_post,"aw",%nobits
 13745              		.align	2
 13746              		.set	.LANCHOR38,. + 0
 13749              	_ZL10HPF_R_post:
 13750 0000 00000000 		.space	76
 13750      00000000 
 13750      00000000 
 13750      00000000 
 13750      00000000 
 13751              		.section	.bss._ZL10LPF_LXfade,"aw",%nobits
 13752              		.align	2
 13753              		.set	.LANCHOR117,. + 0
 13756              	_ZL10LPF_LXfade:
 13757 0000 00000000 		.space	8
 13757      00000000 
 13758              		.section	.bss._ZL10LPF_L_post,"aw",%nobits
 13759              		.align	2
 13760              		.set	.LANCHOR49,. + 0
 13763              	_ZL10LPF_L_post:
 13764 0000 00000000 		.space	76
 13764      00000000 
 13764      00000000 
 13764      00000000 
 13764      00000000 
 13765              		.section	.bss._ZL10LPF_RXfade,"aw",%nobits
 13766              		.align	2
 13767              		.set	.LANCHOR118,. + 0
 13770              	_ZL10LPF_RXfade:
 13771 0000 00000000 		.space	8
 13771      00000000 
 13772              		.section	.bss._ZL10LPF_R_post,"aw",%nobits
 13773              		.align	2
 13774              		.set	.LANCHOR50,. + 0
 13777              	_ZL10LPF_R_post:
 13778 0000 00000000 		.space	76
 13778      00000000 
 13778      00000000 
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 408


 13778      00000000 
 13778      00000000 
 13779              		.section	.bss._ZL10WidthXfade,"aw",%nobits
 13780              		.align	2
 13781              		.set	.LANCHOR65,. + 0
 13784              	_ZL10WidthXfade:
 13785 0000 00000000 		.space	8
 13785      00000000 
 13786              		.section	.bss._ZL11FilterMix_L,"aw",%nobits
 13787              		.align	2
 13788              		.set	.LANCHOR123,. + 0
 13791              	_ZL11FilterMix_L:
 13792 0000 00000000 		.space	8
 13792      00000000 
 13793              		.section	.bss._ZL11FilterMix_R,"aw",%nobits
 13794              		.align	2
 13795              		.set	.LANCHOR124,. + 0
 13798              	_ZL11FilterMix_R:
 13799 0000 00000000 		.space	8
 13799      00000000 
 13800              		.section	.bss._ZL12FwdRevLXfade,"aw",%nobits
 13801              		.align	2
 13802              		.set	.LANCHOR105,. + 0
 13805              	_ZL12FwdRevLXfade:
 13806 0000 00000000 		.space	8
 13806      00000000 
 13807              		.section	.bss._ZL12FwdRevRXfade,"aw",%nobits
 13808              		.align	2
 13809              		.set	.LANCHOR106,. + 0
 13812              	_ZL12FwdRevRXfade:
 13813 0000 00000000 		.space	8
 13813      00000000 
 13814              		.section	.bss._ZL15HPF_LXfade_post,"aw",%nobits
 13815              		.align	2
 13816              		.set	.LANCHOR119,. + 0
 13819              	_ZL15HPF_LXfade_post:
 13820 0000 00000000 		.space	8
 13820      00000000 
 13821              		.section	.bss._ZL15HPF_RXfade_post,"aw",%nobits
 13822              		.align	2
 13823              		.set	.LANCHOR120,. + 0
 13826              	_ZL15HPF_RXfade_post:
 13827 0000 00000000 		.space	8
 13827      00000000 
 13828              		.section	.bss._ZL15LPF_LXfade_post,"aw",%nobits
 13829              		.align	2
 13830              		.set	.LANCHOR121,. + 0
 13833              	_ZL15LPF_LXfade_post:
 13834 0000 00000000 		.space	8
 13834      00000000 
 13835              		.section	.bss._ZL15LPF_RXfade_post,"aw",%nobits
 13836              		.align	2
 13837              		.set	.LANCHOR122,. + 0
 13840              	_ZL15LPF_RXfade_post:
 13841 0000 00000000 		.space	8
 13841      00000000 
 13842              		.section	.bss._ZL16FilterMix_L_post,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 409


 13843              		.align	2
 13844              		.set	.LANCHOR125,. + 0
 13847              	_ZL16FilterMix_L_post:
 13848 0000 00000000 		.space	8
 13848      00000000 
 13849              		.section	.bss._ZL16FilterMix_R_post,"aw",%nobits
 13850              		.align	2
 13851              		.set	.LANCHOR126,. + 0
 13854              	_ZL16FilterMix_R_post:
 13855 0000 00000000 		.space	8
 13855      00000000 
 13856              		.section	.bss._ZL2hw,"aw",%nobits
 13857              		.align	2
 13858              		.set	.LANCHOR4,. + 0
 13861              	_ZL2hw:
 13862 0000 00000000 		.space	60
 13862      00000000 
 13862      00000000 
 13862      00000000 
 13862      00000000 
 13863              		.section	.bss._ZL3lfo,"aw",%nobits
 13864              		.align	2
 13865              		.set	.LANCHOR76,. + 0
 13868              	_ZL3lfo:
 13869 0000 00000000 		.space	40
 13869      00000000 
 13869      00000000 
 13869      00000000 
 13869      00000000 
 13870              		.section	.bss._ZL5HPF_L,"aw",%nobits
 13871              		.align	2
 13872              		.set	.LANCHOR35,. + 0
 13875              	_ZL5HPF_L:
 13876 0000 00000000 		.space	76
 13876      00000000 
 13876      00000000 
 13876      00000000 
 13876      00000000 
 13877              		.section	.bss._ZL5HPF_R,"aw",%nobits
 13878              		.align	2
 13879              		.set	.LANCHOR36,. + 0
 13882              	_ZL5HPF_R:
 13883 0000 00000000 		.space	76
 13883      00000000 
 13883      00000000 
 13883      00000000 
 13883      00000000 
 13884              		.section	.bss._ZL5LPF_L,"aw",%nobits
 13885              		.align	2
 13886              		.set	.LANCHOR47,. + 0
 13889              	_ZL5LPF_L:
 13890 0000 00000000 		.space	76
 13890      00000000 
 13890      00000000 
 13890      00000000 
 13890      00000000 
 13891              		.section	.bss._ZL5LPF_R,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 410


 13892              		.align	2
 13893              		.set	.LANCHOR48,. + 0
 13896              	_ZL5LPF_R:
 13897 0000 00000000 		.space	76
 13897      00000000 
 13897      00000000 
 13897      00000000 
 13897      00000000 
 13898              		.section	.bss._ZL7HPF_Env,"aw",%nobits
 13899              		.align	2
 13900              		.set	.LANCHOR104,. + 0
 13903              	_ZL7HPF_Env:
 13904 0000 00000000 		.space	56
 13904      00000000 
 13904      00000000 
 13904      00000000 
 13904      00000000 
 13905              		.section	.bss._ZL7LPF_Env,"aw",%nobits
 13906              		.align	2
 13907              		.set	.LANCHOR103,. + 0
 13910              	_ZL7LPF_Env:
 13911 0000 00000000 		.space	56
 13911      00000000 
 13911      00000000 
 13911      00000000 
 13911      00000000 
 13912              		.section	.bss._ZL7LeftEnv,"aw",%nobits
 13913              		.align	2
 13914              		.set	.LANCHOR129,. + 0
 13917              	_ZL7LeftEnv:
 13918 0000 00000000 		.space	24
 13918      00000000 
 13918      00000000 
 13918      00000000 
 13918      00000000 
 13919              		.section	.bss._ZL8RightEnv,"aw",%nobits
 13920              		.align	2
 13921              		.set	.LANCHOR130,. + 0
 13924              	_ZL8RightEnv:
 13925 0000 00000000 		.space	24
 13925      00000000 
 13925      00000000 
 13925      00000000 
 13925      00000000 
 13926              		.section	.bss._ZZ10Update_ModvE13modulation_CV,"aw",%nobits
 13927              		.align	2
 13928              		.set	.LANCHOR86,. + 0
 13931              	_ZZ10Update_ModvE13modulation_CV:
 13932 0000 00000000 		.space	4
 13933              		.section	.bss._ZZ10Update_ModvE17ModDepth_Filtered,"aw",%nobits
 13934              		.align	2
 13935              		.set	.LANCHOR87,. + 0
 13938              	_ZZ10Update_ModvE17ModDepth_Filtered:
 13939 0000 00000000 		.space	4
 13940              		.section	.bss._ZZ12Update_widthvE10width_Last,"aw",%nobits
 13941              		.align	2
 13942              		.set	.LANCHOR63,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 411


 13945              	_ZZ12Update_widthvE10width_Last:
 13946 0000 00000000 		.space	4
 13947              		.section	.bss._ZZ12Update_widthvE12ModDepth_new,"aw",%nobits
 13948              		.align	2
 13949              		.set	.LANCHOR67,. + 0
 13952              	_ZZ12Update_widthvE12ModDepth_new:
 13953 0000 00000000 		.space	4
 13954              		.section	.bss._ZZ12Update_widthvE12width_pickup,"aw",%nobits
 13955              		.set	.LANCHOR61,. + 0
 13958              	_ZZ12Update_widthvE12width_pickup:
 13959 0000 00       		.space	1
 13960              		.section	.bss._ZZ12Update_widthvE15ModDepth_pickup,"aw",%nobits
 13961              		.set	.LANCHOR66,. + 0
 13964              	_ZZ12Update_widthvE15ModDepth_pickup:
 13965 0000 00       		.space	1
 13966              		.section	.bss._ZZ12Update_widthvE9lastShift,"aw",%nobits
 13967              		.set	.LANCHOR60,. + 0
 13970              	_ZZ12Update_widthvE9lastShift:
 13971 0000 00       		.space	1
 13972              		.section	.bss._ZZ12Update_widthvE9width_new,"aw",%nobits
 13973              		.align	2
 13974              		.set	.LANCHOR62,. + 0
 13977              	_ZZ12Update_widthvE9width_new:
 13978 0000 00000000 		.space	4
 13979              		.section	.bss._ZZ13Update_drywetvE10Res_pickup,"aw",%nobits
 13980              		.set	.LANCHOR57,. + 0
 13983              	_ZZ13Update_drywetvE10Res_pickup:
 13984 0000 00       		.space	1
 13985              		.section	.bss._ZZ13Update_drywetvE10drywet_new,"aw",%nobits
 13986              		.align	2
 13987              		.set	.LANCHOR54,. + 0
 13990              	_ZZ13Update_drywetvE10drywet_new:
 13991 0000 00000000 		.space	4
 13992              		.section	.bss._ZZ13Update_drywetvE11drywet_Last,"aw",%nobits
 13993              		.align	2
 13994              		.set	.LANCHOR55,. + 0
 13997              	_ZZ13Update_drywetvE11drywet_Last:
 13998 0000 00000000 		.space	4
 13999              		.section	.bss._ZZ13Update_drywetvE13drywet_pickup,"aw",%nobits
 14000              		.set	.LANCHOR53,. + 0
 14003              	_ZZ13Update_drywetvE13drywet_pickup:
 14004 0000 00       		.space	1
 14005              		.section	.bss._ZZ13Update_drywetvE7Res_new,"aw",%nobits
 14006              		.align	2
 14007              		.set	.LANCHOR58,. + 0
 14010              	_ZZ13Update_drywetvE7Res_new:
 14011 0000 00000000 		.space	4
 14012              		.section	.bss._ZZ13Update_drywetvE9lastShift,"aw",%nobits
 14013              		.set	.LANCHOR52,. + 0
 14016              	_ZZ13Update_drywetvE9lastShift:
 14017 0000 00       		.space	1
 14018              		.section	.bss._ZZ14Update_ButtonsvE11buttonstate,"aw",%nobits
 14019              		.align	2
 14020              		.set	.LANCHOR109,. + 0
 14023              	_ZZ14Update_ButtonsvE11buttonstate:
 14024 0000 00000000 		.space	4
 14025              		.section	.bss._ZZ14Update_ButtonsvE9resetTime,"aw",%nobits
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 412


 14026              		.align	2
 14027              		.set	.LANCHOR110,. + 0
 14030              	_ZZ14Update_ButtonsvE9resetTime:
 14031 0000 00000000 		.space	4
 14032              		.section	.bss._ZZ14Update_ButtonsvE9shiftTime,"aw",%nobits
 14033              		.align	2
 14034              		.set	.LANCHOR111,. + 0
 14037              	_ZZ14Update_ButtonsvE9shiftTime:
 14038 0000 00000000 		.space	4
 14039              		.section	.bss._ZZ16Update_feedbackLvE12HPCutoff_new,"aw",%nobits
 14040              		.align	2
 14041              		.set	.LANCHOR34,. + 0
 14044              	_ZZ16Update_feedbackLvE12HPCutoff_new:
 14045 0000 00000000 		.space	4
 14046              		.section	.bss._ZZ16Update_feedbackLvE13feedbackL_new,"aw",%nobits
 14047              		.align	2
 14048              		.set	.LANCHOR30,. + 0
 14051              	_ZZ16Update_feedbackLvE13feedbackL_new:
 14052 0000 00000000 		.space	4
 14053              		.section	.bss._ZZ16Update_feedbackLvE14feedbackL_Last,"aw",%nobits
 14054              		.align	2
 14055              		.set	.LANCHOR31,. + 0
 14058              	_ZZ16Update_feedbackLvE14feedbackL_Last:
 14059 0000 00000000 		.space	4
 14060              		.section	.bss._ZZ16Update_feedbackLvE15HPCutoff_pickup,"aw",%nobits
 14061              		.set	.LANCHOR33,. + 0
 14064              	_ZZ16Update_feedbackLvE15HPCutoff_pickup:
 14065 0000 00       		.space	1
 14066              		.section	.bss._ZZ16Update_feedbackLvE16feedbackL_pickup,"aw",%nobits
 14067              		.set	.LANCHOR29,. + 0
 14070              	_ZZ16Update_feedbackLvE16feedbackL_pickup:
 14071 0000 00       		.space	1
 14072              		.section	.bss._ZZ16Update_feedbackLvE9lastShift,"aw",%nobits
 14073              		.set	.LANCHOR28,. + 0
 14076              	_ZZ16Update_feedbackLvE9lastShift:
 14077 0000 00       		.space	1
 14078              		.section	.bss._ZZ16Update_feedbackRvE12LPCutoff_new,"aw",%nobits
 14079              		.align	2
 14080              		.set	.LANCHOR46,. + 0
 14083              	_ZZ16Update_feedbackRvE12LPCutoff_new:
 14084 0000 00000000 		.space	4
 14085              		.section	.bss._ZZ16Update_feedbackRvE13feedbackR_new,"aw",%nobits
 14086              		.align	2
 14087              		.set	.LANCHOR42,. + 0
 14090              	_ZZ16Update_feedbackRvE13feedbackR_new:
 14091 0000 00000000 		.space	4
 14092              		.section	.bss._ZZ16Update_feedbackRvE14feedbackR_Last,"aw",%nobits
 14093              		.align	2
 14094              		.set	.LANCHOR43,. + 0
 14097              	_ZZ16Update_feedbackRvE14feedbackR_Last:
 14098 0000 00000000 		.space	4
 14099              		.section	.bss._ZZ16Update_feedbackRvE15LPCutoff_pickup,"aw",%nobits
 14100              		.set	.LANCHOR45,. + 0
 14103              	_ZZ16Update_feedbackRvE15LPCutoff_pickup:
 14104 0000 00       		.space	1
 14105              		.section	.bss._ZZ16Update_feedbackRvE16feedbackR_pickup,"aw",%nobits
 14106              		.set	.LANCHOR41,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 413


 14109              	_ZZ16Update_feedbackRvE16feedbackR_pickup:
 14110 0000 00       		.space	1
 14111              		.section	.bss._ZZ16Update_feedbackRvE9lastShift,"aw",%nobits
 14112              		.set	.LANCHOR40,. + 0
 14115              	_ZZ16Update_feedbackRvE9lastShift:
 14116 0000 00       		.space	1
 14117              		.section	.bss._ZZ17Update_DelayTimeLvE14delayTimeL_new,"aw",%nobits
 14118              		.align	2
 14119              		.set	.LANCHOR10,. + 0
 14122              	_ZZ17Update_DelayTimeLvE14delayTimeL_new:
 14123 0000 00000000 		.space	4
 14124              		.section	.bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last,"aw",%nobits
 14125              		.align	2
 14126              		.set	.LANCHOR11,. + 0
 14129              	_ZZ17Update_DelayTimeLvE15delayTimeL_Last:
 14130 0000 00000000 		.space	4
 14131              		.section	.bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new,"aw",%nobits
 14132              		.align	2
 14133              		.set	.LANCHOR14,. + 0
 14136              	_ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:
 14137 0000 00000000 		.space	4
 14138              		.section	.bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup,"aw",%nobits
 14139              		.set	.LANCHOR9,. + 0
 14142              	_ZZ17Update_DelayTimeLvE17delayTimeL_pickup:
 14143 0000 00       		.space	1
 14144              		.section	.bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup,"aw",%nobits
 14145              		.set	.LANCHOR13,. + 0
 14148              	_ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:
 14149 0000 00       		.space	1
 14150              		.section	.bss._ZZ17Update_DelayTimeLvE8counterL,"aw",%nobits
 14151              		.align	2
 14152              		.set	.LANCHOR6,. + 0
 14155              	_ZZ17Update_DelayTimeLvE8counterL:
 14156 0000 00000000 		.space	4
 14157              		.section	.bss._ZZ17Update_DelayTimeLvE9lastShift,"aw",%nobits
 14158              		.set	.LANCHOR8,. + 0
 14161              	_ZZ17Update_DelayTimeLvE9lastShift:
 14162 0000 00       		.space	1
 14163              		.section	.bss._ZZ17Update_DelayTimeRvE12tapRatio_new,"aw",%nobits
 14164              		.align	2
 14165              		.set	.LANCHOR24,. + 0
 14168              	_ZZ17Update_DelayTimeRvE12tapRatio_new:
 14169 0000 00000000 		.space	4
 14170              		.section	.bss._ZZ17Update_DelayTimeRvE14delayTimeR_new,"aw",%nobits
 14171              		.align	2
 14172              		.set	.LANCHOR21,. + 0
 14175              	_ZZ17Update_DelayTimeRvE14delayTimeR_new:
 14176 0000 00000000 		.space	4
 14177              		.section	.bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last,"aw",%nobits
 14178              		.align	2
 14179              		.set	.LANCHOR22,. + 0
 14182              	_ZZ17Update_DelayTimeRvE15delayTimeR_Last:
 14183 0000 00000000 		.space	4
 14184              		.section	.bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup,"aw",%nobits
 14185              		.set	.LANCHOR23,. + 0
 14188              	_ZZ17Update_DelayTimeRvE15tapRatio_pickup:
 14189 0000 00       		.space	1
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 414


 14190              		.section	.bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup,"aw",%nobits
 14191              		.set	.LANCHOR20,. + 0
 14194              	_ZZ17Update_DelayTimeRvE17delayTimeR_pickup:
 14195 0000 00       		.space	1
 14196              		.section	.bss._ZZ17Update_DelayTimeRvE8counterR,"aw",%nobits
 14197              		.align	2
 14198              		.set	.LANCHOR18,. + 0
 14201              	_ZZ17Update_DelayTimeRvE8counterR:
 14202 0000 00000000 		.space	4
 14203              		.section	.bss._ZZ17Update_DelayTimeRvE9lastShift,"aw",%nobits
 14204              		.set	.LANCHOR19,. + 0
 14207              	_ZZ17Update_DelayTimeRvE9lastShift:
 14208 0000 00       		.space	1
 14209              		.section	.bss._ZZ18Update_filterXfadevE15PostFilters_new,"aw",%nobits
 14210              		.align	2
 14211              		.set	.LANCHOR82,. + 0
 14214              	_ZZ18Update_filterXfadevE15PostFilters_new:
 14215 0000 00000000 		.space	4
 14216              		.section	.bss._ZZ18Update_filterXfadevE15filterXfade_new,"aw",%nobits
 14217              		.align	2
 14218              		.set	.LANCHOR79,. + 0
 14221              	_ZZ18Update_filterXfadevE15filterXfade_new:
 14222 0000 00000000 		.space	4
 14223              		.section	.bss._ZZ18Update_filterXfadevE16filterXfade_last,"aw",%nobits
 14224              		.align	2
 14225              		.set	.LANCHOR84,. + 0
 14228              	_ZZ18Update_filterXfadevE16filterXfade_last:
 14229 0000 00000000 		.space	4
 14230              		.section	.bss._ZZ18Update_filterXfadevE18PostFilters_pickup,"aw",%nobits
 14231              		.set	.LANCHOR81,. + 0
 14234              	_ZZ18Update_filterXfadevE18PostFilters_pickup:
 14235 0000 00       		.space	1
 14236              		.section	.bss._ZZ18Update_filterXfadevE18filterXfade_pickup,"aw",%nobits
 14237              		.set	.LANCHOR78,. + 0
 14240              	_ZZ18Update_filterXfadevE18filterXfade_pickup:
 14241 0000 00       		.space	1
 14242              		.section	.bss._ZZ18Update_filterXfadevE9lastShift,"aw",%nobits
 14243              		.set	.LANCHOR77,. + 0
 14246              	_ZZ18Update_filterXfadevE9lastShift:
 14247 0000 00       		.space	1
 14248              		.section	.bss._ZZ19Update_BaseTempoLEDvE12phaseCounter,"aw",%nobits
 14249              		.align	2
 14250              		.set	.LANCHOR90,. + 0
 14253              	_ZZ19Update_BaseTempoLEDvE12phaseCounter:
 14254 0000 00000000 		.space	4
 14255              		.section	.bss._ZZ20Update_crossfeedbackvE11modRate_new,"aw",%nobits
 14256              		.align	2
 14257              		.set	.LANCHOR74,. + 0
 14260              	_ZZ20Update_crossfeedbackvE11modRate_new:
 14261 0000 00000000 		.space	4
 14262              		.section	.bss._ZZ20Update_crossfeedbackvE14modRate_pickup,"aw",%nobits
 14263              		.set	.LANCHOR73,. + 0
 14266              	_ZZ20Update_crossfeedbackvE14modRate_pickup:
 14267 0000 00       		.space	1
 14268              		.section	.bss._ZZ20Update_crossfeedbackvE17crossfeedback_new,"aw",%nobits
 14269              		.align	2
 14270              		.set	.LANCHOR71,. + 0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 415


 14273              	_ZZ20Update_crossfeedbackvE17crossfeedback_new:
 14274 0000 00000000 		.space	4
 14275              		.section	.bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last,"aw",%nobits
 14276              		.align	2
 14277              		.set	.LANCHOR75,. + 0
 14280              	_ZZ20Update_crossfeedbackvE18crossfeedback_Last:
 14281 0000 00000000 		.space	4
 14282              		.section	.bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup,"aw",%nobits
 14283              		.set	.LANCHOR70,. + 0
 14286              	_ZZ20Update_crossfeedbackvE20crossfeedback_pickup:
 14287 0000 00       		.space	1
 14288              		.section	.bss._ZZ20Update_crossfeedbackvE9lastShift,"aw",%nobits
 14289              		.set	.LANCHOR69,. + 0
 14292              	_ZZ20Update_crossfeedbackvE9lastShift:
 14293 0000 00       		.space	1
 14294              		.section	.bss._ZZ4mainE9saveTimer,"aw",%nobits
 14295              		.align	2
 14296              		.set	.LANCHOR108,. + 0
 14299              	_ZZ4mainE9saveTimer:
 14300 0000 00000000 		.space	4
 14301              		.section	.bss._ZZL13AudioCallbackPKPKfPPfjE6LNegFB,"aw",%nobits
 14302              		.align	2
 14303              		.set	.LANCHOR127,. + 0
 14306              	_ZZL13AudioCallbackPKPKfPPfjE6LNegFB:
 14307 0000 00000000 		.space	4
 14308              		.section	.bss._ZZL13AudioCallbackPKPKfPPfjE6RNegFB,"aw",%nobits
 14309              		.align	2
 14310              		.set	.LANCHOR128,. + 0
 14313              	_ZZL13AudioCallbackPKPKfPPfjE6RNegFB:
 14314 0000 00000000 		.space	4
 14315              		.section	.bss._ZZL13AudioCallbackPKPKfPPfjE7Counter,"aw",%nobits
 14316              		.align	2
 14317              		.set	.LANCHOR114,. + 0
 14320              	_ZZL13AudioCallbackPKPKfPPfjE7Counter:
 14321 0000 00000000 		.space	4
 14322              		.section	.bss.crossfeedback,"aw",%nobits
 14323              		.align	2
 14324              		.set	.LANCHOR72,. + 0
 14327              	crossfeedback:
 14328 0000 00000000 		.space	4
 14329              		.section	.bss.crossfeedback_CV,"aw",%nobits
 14330              		.align	2
 14333              	crossfeedback_CV:
 14334 0000 00000000 		.space	4
 14335              		.section	.bss.delayL,"aw",%nobits
 14336              		.align	2
 14337              		.set	.LANCHOR0,. + 0
 14340              	delayL:
 14341 0000 00000000 		.space	296
 14341      00000000 
 14341      00000000 
 14341      00000000 
 14341      00000000 
 14342              		.section	.bss.delayR,"aw",%nobits
 14343              		.align	2
 14344              		.set	.LANCHOR1,. + 0
 14347              	delayR:
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 416


 14348 0000 00000000 		.space	296
 14348      00000000 
 14348      00000000 
 14348      00000000 
 14348      00000000 
 14349              		.section	.bss.delayTimeL_CV,"aw",%nobits
 14350              		.align	2
 14351              		.set	.LANCHOR5,. + 0
 14354              	delayTimeL_CV:
 14355 0000 00000000 		.space	4
 14356              		.section	.bss.delayTimeR_CV,"aw",%nobits
 14357              		.align	2
 14358              		.set	.LANCHOR17,. + 0
 14361              	delayTimeR_CV:
 14362 0000 00000000 		.space	4
 14363              		.section	.bss.delaysL_REV,"aw",%nobits
 14364              		.align	2
 14365              		.set	.LANCHOR2,. + 0
 14368              	delaysL_REV:
 14369 0000 00000000 		.space	8
 14369      00000000 
 14370              		.section	.bss.delaysR_REV,"aw",%nobits
 14371              		.align	2
 14372              		.set	.LANCHOR3,. + 0
 14375              	delaysR_REV:
 14376 0000 00000000 		.space	8
 14376      00000000 
 14377              		.section	.bss.drywet_CV,"aw",%nobits
 14378              		.align	2
 14379              		.set	.LANCHOR51,. + 0
 14382              	drywet_CV:
 14383 0000 00000000 		.space	4
 14384              		.section	.bss.feedbackL,"aw",%nobits
 14385              		.align	2
 14386              		.set	.LANCHOR32,. + 0
 14389              	feedbackL:
 14390 0000 00000000 		.space	4
 14391              		.section	.bss.feedbackL_CV,"aw",%nobits
 14392              		.align	2
 14393              		.set	.LANCHOR27,. + 0
 14396              	feedbackL_CV:
 14397 0000 00000000 		.space	4
 14398              		.section	.bss.feedbackR,"aw",%nobits
 14399              		.align	2
 14400              		.set	.LANCHOR44,. + 0
 14403              	feedbackR:
 14404 0000 00000000 		.space	4
 14405              		.section	.bss.feedbackR_CV,"aw",%nobits
 14406              		.align	2
 14407              		.set	.LANCHOR39,. + 0
 14410              	feedbackR_CV:
 14411 0000 00000000 		.space	4
 14412              		.section	.bss.filterXfade,"aw",%nobits
 14413              		.align	2
 14414              		.set	.LANCHOR80,. + 0
 14417              	filterXfade:
 14418 0000 00000000 		.space	4
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 417


 14419              		.section	.bss.modulation_CV_Raw,"aw",%nobits
 14420              		.align	2
 14421              		.set	.LANCHOR85,. + 0
 14424              	modulation_CV_Raw:
 14425 0000 00000000 		.space	4
 14426              		.section	.bss.mute,"aw",%nobits
 14427              		.set	.LANCHOR112,. + 0
 14430              	mute:
 14431 0000 00       		.space	1
 14432              		.section	.bss.saveState,"aw",%nobits
 14433              		.set	.LANCHOR107,. + 0
 14436              	saveState:
 14437 0000 00       		.space	1
 14438              		.section	.bss.save_flag,"aw",%nobits
 14439              		.align	2
 14440              		.set	.LANCHOR16,. + 0
 14443              	save_flag:
 14444 0000 00       		.space	1
 14445              		.section	.bss.shift,"aw",%nobits
 14446              		.set	.LANCHOR7,. + 0
 14449              	shift:
 14450 0000 00       		.space	1
 14451              		.section	.bss.syncMode,"aw",%nobits
 14452              		.set	.LANCHOR12,. + 0
 14455              	syncMode:
 14456 0000 00       		.space	1
 14457              		.section	.bss.tempoLED_BASE,"aw",%nobits
 14458              		.align	2
 14459              		.set	.LANCHOR89,. + 0
 14462              	tempoLED_BASE:
 14463 0000 00000000 		.space	72
 14463      00000000 
 14463      00000000 
 14463      00000000 
 14463      00000000 
 14464              		.section	.bss.width_CV,"aw",%nobits
 14465              		.align	2
 14466              		.set	.LANCHOR59,. + 0
 14469              	width_CV:
 14470 0000 00000000 		.space	4
 14471              		.section	.data.drywet,"aw"
 14472              		.align	2
 14473              		.set	.LANCHOR56,. + 0
 14476              	drywet:
 14477 0000 0000003F 		.word	1056964608
 14478              		.section	.data.width,"aw"
 14479              		.align	2
 14480              		.set	.LANCHOR64,. + 0
 14483              	width:
 14484 0000 0000803F 		.word	1065353216
 14485              		.section	.rodata.CSWTCH.379,"a"
 14486              		.align	3
 14487              		.set	.LANCHOR25,. + 0
 14490              	CSWTCH.379:
 14491 0000 00000000 		.word	0
 14492 0004 0000F83F 		.word	1073217536
 14493 0008 00000000 		.word	0
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 418


 14494 000c 00000040 		.word	1073741824
 14495 0010 00000000 		.word	0
 14496 0014 00000840 		.word	1074266112
 14497              		.section	.rodata._ZL18defaultAltControls,"a"
 14498              		.align	2
 14499              		.set	.LANCHOR113,. + 0
 14502              	_ZL18defaultAltControls:
 14503 0000 00650148 		.word	1208050944
 14504 0004 0000803F 		.word	1065353216
 14505 0008 00000000 		.word	0
 14506 000c 9A99A140 		.word	1084332442
 14507 0010 00004843 		.word	1128792064
 14508 0014 00803B46 		.word	1178304512
 14509 0018 00000000 		.word	0
 14510 001c 00000000 		.word	0
 14511 0020 0024F448 		.word	1223959552
 14512 0024 00000000 		.word	0
 14513 0028 00000000 		.word	0
 14514              		.section	.sdram_bss,"aw"
 14515              		.align	2
 14518              	delMemsR_REV:
 14519 0000 00000000 		.space	2400040
 14519      00000000 
 14519      00000000 
 14519      00000000 
 14519      00000000 
 14522              	delMemsL_REV:
 14523 249f28 00000000 		.space	2400040
 14523      00000000 
 14523      00000000 
 14523      00000000 
 14523      00000000 
 14526              	delMemsR:
 14527 493e50 00000000 		.space	6912136
 14527      00000000 
 14527      00000000 
 14527      00000000 
 14527      00000000 
 14530              	delMemsL:
 14531 b2b6d8 00000000 		.space	6912136
 14531      00000000 
 14531      00000000 
 14531      00000000 
 14531      00000000 
 14532              		.text
 14533              	.Letext0:
 14534              		.file 29 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/machine/_d
 14535              		.file 30 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_stdin
 14536              		.file 31 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdint.h"
 14537              		.file 32 "../libDaisy/Drivers/CMSIS/Include/core_cm7.h"
 14538              		.file 33 "../libDaisy/Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 14539              		.file 34 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 14540              		.file 35 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14541              		.file 36 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14542              		.file 37 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14543              		.file 38 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14544              		.file 39 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 419


 14545              		.file 40 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14546              		.file 41 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14547              		.file 42 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14548              		.file 43 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14549              		.file 44 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14550              		.file 45 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14551              		.file 46 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14552              		.file 47 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14553              		.file 48 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14554              		.file 49 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14555              		.file 50 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14556              		.file 51 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14557              		.file 52 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14558              		.file 53 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14559              		.file 54 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14560              		.file 55 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14561              		.file 56 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/lock.h
 14562              		.file 57 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/_types
 14563              		.file 58 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/reent.
 14564              		.file 59 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/math.h"
 14565              		.file 60 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdlib.h"
 14566              		.file 61 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14567              		.file 62 "../libDaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 14568              		.file 63 "../libDaisy/Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 14569              		.file 64 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/c++/9.2.1/
 14570              		.file 65 "../libDaisy/src/daisy_core.h"
 14571              		.file 66 "../libDaisy/src/per/tim.h"
 14572              		.file 67 "../libDaisy/src/per/sai.h"
 14573              		.file 68 "../libDaisy/src/util/wav_format.h"
 14574              		.file 69 "../libDaisy/src/per/gpio.h"
 14575              		.file 70 "../libDaisy/src/dev/sdram.h"
 14576              		.file 71 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/lib/gcc/arm-none-eabi/9.2.1/incl
 14577              		.file 72 "<built-in>"
 14578              		.file 73 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/stdio.h"
 14579              		.file 74 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/unistd
 14580              		.file 75 "../libDaisy/src/util/oled_fonts.h"
 14581              		.file 76 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/string.h"
 14582              		.file 77 "../DaisySP/Source/Control/adenv.h"
 14583              		.file 78 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/wchar.h"
 14584              		.file 79 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/locale.h"
 14585              		.file 80 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/ctype.h"
 14586              		.file 81 "/usr/local/Cellar/arm-none-eabi-gcc/9-2019-q4-major/gcc/arm-none-eabi/include/sys/errno.
 14587              		.file 82 "QSPI_Settings.h"
 14588              		.file 83 "scale.h"
 14589              		.file 84 "constants.h"
 14590              		.file 85 "../libDaisy/src/dev/sr_595.h"
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 420


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Veno-Echo.cpp
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:17     .text._ZN5daisy6SwitchD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:26     .text._ZN5daisy6SwitchD2Ev:0000000000000000 _ZN5daisy6SwitchD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:43     .text._ZN5daisy6GateInD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:51     .text._ZN5daisy6GateInD2Ev:0000000000000000 _ZN5daisy6GateInD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:51     .text._ZN5daisy6GateInD2Ev:0000000000000000 _ZN5daisy6GateInD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:68     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:76     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:76     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:117    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:125    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:125    .text._ZN7daisysp4AdsrD2Ev:0000000000000000 _ZN7daisysp4AdsrD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:142    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:150    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:150    .text._ZN7daisysp10OscillatorD2Ev:0000000000000000 _ZN7daisysp10OscillatorD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:167    .text._ZN7daisysp3SvfD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:175    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:175    .text._ZN7daisysp3SvfD2Ev:0000000000000000 _ZN7daisysp3SvfD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:192    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:200    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:200    .text._ZN7daisysp9CrossFadeD2Ev:0000000000000000 _ZN7daisysp9CrossFadeD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:217    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:225    .text._ZN7daisysp9EnvFollowD2Ev:0000000000000000 _ZN7daisysp9EnvFollowD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:242    .text._ZN8TaptempoD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:250    .text._ZN8TaptempoD2Ev:0000000000000000 _ZN8TaptempoD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:267    .text._ZN8TempoLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:275    .text._ZN8TempoLEDD2Ev:0000000000000000 _ZN8TempoLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:304    .text._ZN9ButtonLEDD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:312    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:312    .text._ZN9ButtonLEDD2Ev:0000000000000000 _ZN9ButtonLEDD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:338    .text._ZN10DelayMultiD2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:346    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:346    .text._ZN10DelayMultiD2Ev:0000000000000000 _ZN10DelayMultiD1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:377    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:385    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:385    .text._ZN7daisysp17DelayLineMultiTapIfLj1728000EED2Ev:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:402    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:410    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED2Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:410    .text._ZN7daisysp16DelayLineReverseIfLj600000EED2Ev:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED1Ev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:427    .text._Z10InitDelaysf:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:435    .text._Z10InitDelaysf:0000000000000000 _Z10InitDelaysf
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:987    .text._Z10InitDelaysf:0000000000000178 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14530  .sdram_bss:0000000000b2b6d8 delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14526  .sdram_bss:0000000000493e50 delMemsR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14522  .sdram_bss:0000000000249f28 delMemsL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14518  .sdram_bss:0000000000000000 delMemsR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:1012   .text._Z20Update_DelayTimeL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:1020   .text._Z20Update_DelayTimeL_CVv:0000000000000000 _Z20Update_DelayTimeL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:1045   .text._Z20Update_DelayTimeL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:1051   .text._Z17Update_DelayTimeLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:1059   .text._Z17Update_DelayTimeLv:0000000000000000 _Z17Update_DelayTimeLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:1636   .text._Z17Update_DelayTimeLv:00000000000001e0 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 421


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:1666   .text._Z20Update_DelayTimeR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:1674   .text._Z20Update_DelayTimeR_CVv:0000000000000000 _Z20Update_DelayTimeR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:1699   .text._Z20Update_DelayTimeR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:1705   .text._Z17Update_DelayTimeRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:1713   .text._Z17Update_DelayTimeRv:0000000000000000 _Z17Update_DelayTimeRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:2202   .text._Z17Update_DelayTimeRv:00000000000001ac $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:2229   .text._Z19Update_feedbackL_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:2237   .text._Z19Update_feedbackL_CVv:0000000000000000 _Z19Update_feedbackL_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:2262   .text._Z19Update_feedbackL_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:2268   .text._Z16Update_feedbackLv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:2276   .text._Z16Update_feedbackLv:0000000000000000 _Z16Update_feedbackLv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:2731   .text._Z16Update_feedbackLv:000000000000019c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:2760   .text._Z19Update_feedbackR_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:2768   .text._Z19Update_feedbackR_CVv:0000000000000000 _Z19Update_feedbackR_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:2793   .text._Z19Update_feedbackR_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:2799   .text._Z16Update_feedbackRv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:2807   .text._Z16Update_feedbackRv:0000000000000000 _Z16Update_feedbackRv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:3261   .text._Z16Update_feedbackRv:000000000000019c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:3290   .text._Z16Update_drywet_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:3298   .text._Z16Update_drywet_CVv:0000000000000000 _Z16Update_drywet_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:3323   .text._Z16Update_drywet_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:3329   .text._Z13Update_drywetv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:3337   .text._Z13Update_drywetv:0000000000000000 _Z13Update_drywetv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:3846   .text._Z13Update_drywetv:00000000000001f8 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:3883   .text._Z15Update_width_CVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:3891   .text._Z15Update_width_CVv:0000000000000000 _Z15Update_width_CVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:3916   .text._Z15Update_width_CVv:0000000000000014 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:3922   .text._Z12Update_widthv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:3930   .text._Z12Update_widthv:0000000000000000 _Z12Update_widthv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:4403   .text._Z12Update_widthv:0000000000000190 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:4429   .text._Z20Update_crossfeedbackv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:4437   .text._Z20Update_crossfeedbackv:0000000000000000 _Z20Update_crossfeedbackv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:4798   .text._Z20Update_crossfeedbackv:000000000000011c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:4818   .text._Z18Update_filterXfadev:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:4826   .text._Z18Update_filterXfadev:0000000000000000 _Z18Update_filterXfadev
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:5163   .text._Z18Update_filterXfadev:0000000000000120 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:5186   .text._Z8GetModCVv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:5194   .text._Z8GetModCVv:0000000000000000 _Z8GetModCVv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:5224   .text._Z8GetModCVv:0000000000000020 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:5232   .text._Z10Update_Modv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:5240   .text._Z10Update_Modv:0000000000000000 _Z10Update_Modv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:5397   .text._Z10Update_Modv:0000000000000058 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:5409   .text._Z11UpdateClockv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:5417   .text._Z11UpdateClockv:0000000000000000 _Z11UpdateClockv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:5518   .text._Z11UpdateClockv:0000000000000040 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:5527   .text._Z21Update_DelayBaseTempov:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:5535   .text._Z21Update_DelayBaseTempov:0000000000000000 _Z21Update_DelayBaseTempov
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:5587   .text._Z21Update_DelayBaseTempov:000000000000001c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:5594   .text._Z21Update_DelayTempoLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:5602   .text._Z21Update_DelayTempoLEDsv:0000000000000000 _Z21Update_DelayTempoLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:5635   .text._Z21Update_DelayTempoLEDsv:0000000000000018 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:5642   .text._Z19Update_BaseTempoLEDv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:5650   .text._Z19Update_BaseTempoLEDv:0000000000000000 _Z19Update_BaseTempoLEDv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:5772   .text._Z19Update_BaseTempoLEDv:0000000000000064 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:5783   .text._Z13ApplySettingsRK8Settings:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:5791   .text._Z13ApplySettingsRK8Settings:0000000000000000 _Z13ApplySettingsRK8Settings
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:6493   .text._Z13ApplySettingsRK8Settings:000000000000036c $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 422


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:6534   .text._Z13ApplySettingsRK8Settings:0000000000000404 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:6613   .text._Z13ApplySettingsRK8Settings:0000000000000450 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:6627   .text.startup.main:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:6635   .text.startup.main:0000000000000000 main
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:7507   .text.startup.main:0000000000000340 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:7541   .text.startup.main:00000000000003bc $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:8053   .text.startup.main:0000000000000610 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:9003   .text._ZL13AudioCallbackPKPKfPPfj:0000000000000000 _ZL13AudioCallbackPKPKfPPfj
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:8077   .text._Z13TurnOnAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:8085   .text._Z13TurnOnAllLEDsv:0000000000000000 _Z13TurnOnAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:8147   .text._Z13TurnOnAllLEDsv:000000000000004c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:8158   .text._Z12ResetAllLEDsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:8166   .text._Z12ResetAllLEDsv:0000000000000000 _Z12ResetAllLEDsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:8269   .text._Z12ResetAllLEDsv:000000000000007c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:8281   .text._Z14Update_Buttonsv:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:8289   .text._Z14Update_Buttonsv:0000000000000000 _Z14Update_Buttonsv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:8970   .text._Z14Update_Buttonsv:0000000000000264 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:8996   .text._ZL13AudioCallbackPKPKfPPfj:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:9074   .text._ZL13AudioCallbackPKPKfPPfj:0000000000000034 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:9089   .text._ZL13AudioCallbackPKPKfPPfj:0000000000000052 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:9127   .text._ZL13AudioCallbackPKPKfPPfj:0000000000000074 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:9139   .text._ZL13AudioCallbackPKPKfPPfj:000000000000008c $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:10056  .text._ZL13AudioCallbackPKPKfPPfj:0000000000000424 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:10101  .text._ZL13AudioCallbackPKPKfPPfj:00000000000004c4 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:11059  .text._ZL13AudioCallbackPKPKfPPfj:0000000000000824 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:11075  .text._ZL13AudioCallbackPKPKfPPfj:0000000000000854 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:11952  .text._ZL13AudioCallbackPKPKfPPfj:0000000000000b9c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:11988  .text._ZL13AudioCallbackPKPKfPPfj:0000000000000c0c $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:12178  .text._ZL13AudioCallbackPKPKfPPfj:0000000000000cc0 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:12188  .text._Z9HardLimitff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:12196  .text._Z9HardLimitff:0000000000000000 _Z9HardLimitff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:12230  .text._Z10PotCVComboff:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:12238  .text._Z10PotCVComboff:0000000000000000 _Z10PotCVComboff
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:12285  .text._Z10PotCVComboff:0000000000000038 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:12290  .text._Z16checkPickupStateffbb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:12298  .text._Z16checkPickupStateffbb:0000000000000000 _Z16checkPickupStateffbb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:12382  .text._Z16checkPickupStateffbb:000000000000003c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:12387  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:12395  .text._Z20checkPickupState_altff11pickupStateb:0000000000000000 _Z20checkPickupState_altff11pickupStateb
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:12485  .text._Z20checkPickupState_altff11pickupStateb:000000000000006c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:12490  .text._Z11GetTapRatio9TapRatios:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:12498  .text._Z11GetTapRatio9TapRatios:0000000000000000 _Z11GetTapRatio9TapRatios
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:12528  .text._Z11GetTapRatio9TapRatios:000000000000001c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:12533  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 $t
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:12540  .text.startup._GLOBAL__sub_I_delMemsL:0000000000000000 _GLOBAL__sub_I_delMemsL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13458  .text.startup._GLOBAL__sub_I_delMemsL:000000000000025c $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13533  .init_array:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13587  .bss.AltControls:0000000000000000 AltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13594  .bss.BaseTempo:0000000000000000 BaseTempo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13607  .bss.ClockIn:0000000000000000 ClockIn
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13619  .bss.ClockPin:0000000000000000 ClockPin
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13700  .bss.Sync:0000000000000000 Sync
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13693  .bss.ReverseGateR:0000000000000000 ReverseGateR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13686  .bss.ReverseGateL:0000000000000000 ReverseGateL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13600  .bss.CLOCK_DEBUG:0000000000000000 CLOCK_DEBUG
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13659  .bss.PHASE_DEBUG:0000000000000000 PHASE_DEBUG
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13631  .bss.DELAYR_DEBUG:0000000000000000 DELAYR_DEBUG
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 423


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13625  .bss.DELAYL_DEBUG:0000000000000000 DELAYL_DEBUG
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14436  .bss.saveState:0000000000000000 saveState
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14443  .bss.save_flag:0000000000000000 save_flag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13665  .bss.PostFilters:0000000000000000 PostFilters
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13612  .bss.ClockInFlag:0000000000000000 ClockInFlag
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14430  .bss.mute:0000000000000000 mute
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14449  .bss.shift:0000000000000000 shift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14455  .bss.syncMode:0000000000000000 syncMode
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14424  .bss.modulation_CV_Raw:0000000000000000 modulation_CV_Raw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13652  .bss.ModDepth:0000000000000000 ModDepth
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14417  .bss.filterXfade:0000000000000000 filterXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14469  .bss.width_CV:0000000000000000 width_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14483  .data.width:0000000000000000 width
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14382  .bss.drywet_CV:0000000000000000 drywet_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14476  .data.drywet:0000000000000000 drywet
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14333  .bss.crossfeedback_CV:0000000000000000 crossfeedback_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14327  .bss.crossfeedback:0000000000000000 crossfeedback
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14410  .bss.feedbackR_CV:0000000000000000 feedbackR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14403  .bss.feedbackR:0000000000000000 feedbackR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14396  .bss.feedbackL_CV:0000000000000000 feedbackL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14389  .bss.feedbackL:0000000000000000 feedbackL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14361  .bss.delayTimeR_CV:0000000000000000 delayTimeR_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14354  .bss.delayTimeL_CV:0000000000000000 delayTimeL_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14462  .bss.tempoLED_BASE:0000000000000000 tempoLED_BASE
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13707  .bss.Tap_Button:0000000000000000 Tap_Button
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13679  .bss.Rev_R_sw:0000000000000000 Rev_R_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13672  .bss.Rev_L_sw:0000000000000000 Rev_L_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13638  .bss.HPF_sw:0000000000000000 HPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13645  .bss.LPF_sw:0000000000000000 LPF_sw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14375  .bss.delaysR_REV:0000000000000000 delaysR_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14368  .bss.delaysL_REV:0000000000000000 delaysL_REV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14347  .bss.delayR:0000000000000000 delayR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14340  .bss.delayL:0000000000000000 delayL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13583  .bss.AltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13590  .bss.BaseTempo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13597  .bss.CLOCK_DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13603  .bss.ClockIn:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13613  .bss.ClockInFlag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13615  .bss.ClockPin:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13622  .bss.DELAYL_DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13628  .bss.DELAYR_DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13634  .bss.HPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13641  .bss.LPF_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13648  .bss.ModDepth:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13655  .bss.PHASE_DEBUG:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13666  .bss.PostFilters:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13668  .bss.Rev_L_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13675  .bss.Rev_R_sw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13682  .bss.ReverseGateL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13689  .bss.ReverseGateR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13696  .bss.Sync:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13703  .bss.Tap_Button:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13710  .bss._ZL10FwdRevLEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13714  .bss._ZL10FwdRevLEnv:0000000000000000 _ZL10FwdRevLEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13717  .bss._ZL10FwdRevREnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13721  .bss._ZL10FwdRevREnv:0000000000000000 _ZL10FwdRevREnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13724  .bss._ZL10HPF_LXfade:0000000000000000 $d
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 424


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13728  .bss._ZL10HPF_LXfade:0000000000000000 _ZL10HPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13731  .bss._ZL10HPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13735  .bss._ZL10HPF_L_post:0000000000000000 _ZL10HPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13738  .bss._ZL10HPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13742  .bss._ZL10HPF_RXfade:0000000000000000 _ZL10HPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13745  .bss._ZL10HPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13749  .bss._ZL10HPF_R_post:0000000000000000 _ZL10HPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13752  .bss._ZL10LPF_LXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13756  .bss._ZL10LPF_LXfade:0000000000000000 _ZL10LPF_LXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13759  .bss._ZL10LPF_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13763  .bss._ZL10LPF_L_post:0000000000000000 _ZL10LPF_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13766  .bss._ZL10LPF_RXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13770  .bss._ZL10LPF_RXfade:0000000000000000 _ZL10LPF_RXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13773  .bss._ZL10LPF_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13777  .bss._ZL10LPF_R_post:0000000000000000 _ZL10LPF_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13780  .bss._ZL10WidthXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13784  .bss._ZL10WidthXfade:0000000000000000 _ZL10WidthXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13787  .bss._ZL11FilterMix_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13791  .bss._ZL11FilterMix_L:0000000000000000 _ZL11FilterMix_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13794  .bss._ZL11FilterMix_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13798  .bss._ZL11FilterMix_R:0000000000000000 _ZL11FilterMix_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13801  .bss._ZL12FwdRevLXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13805  .bss._ZL12FwdRevLXfade:0000000000000000 _ZL12FwdRevLXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13808  .bss._ZL12FwdRevRXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13812  .bss._ZL12FwdRevRXfade:0000000000000000 _ZL12FwdRevRXfade
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13815  .bss._ZL15HPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13819  .bss._ZL15HPF_LXfade_post:0000000000000000 _ZL15HPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13822  .bss._ZL15HPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13826  .bss._ZL15HPF_RXfade_post:0000000000000000 _ZL15HPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13829  .bss._ZL15LPF_LXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13833  .bss._ZL15LPF_LXfade_post:0000000000000000 _ZL15LPF_LXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13836  .bss._ZL15LPF_RXfade_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13840  .bss._ZL15LPF_RXfade_post:0000000000000000 _ZL15LPF_RXfade_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13843  .bss._ZL16FilterMix_L_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13847  .bss._ZL16FilterMix_L_post:0000000000000000 _ZL16FilterMix_L_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13850  .bss._ZL16FilterMix_R_post:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13854  .bss._ZL16FilterMix_R_post:0000000000000000 _ZL16FilterMix_R_post
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13857  .bss._ZL2hw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13861  .bss._ZL2hw:0000000000000000 _ZL2hw
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13864  .bss._ZL3lfo:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13868  .bss._ZL3lfo:0000000000000000 _ZL3lfo
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13871  .bss._ZL5HPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13875  .bss._ZL5HPF_L:0000000000000000 _ZL5HPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13878  .bss._ZL5HPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13882  .bss._ZL5HPF_R:0000000000000000 _ZL5HPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13885  .bss._ZL5LPF_L:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13889  .bss._ZL5LPF_L:0000000000000000 _ZL5LPF_L
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13892  .bss._ZL5LPF_R:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13896  .bss._ZL5LPF_R:0000000000000000 _ZL5LPF_R
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13899  .bss._ZL7HPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13903  .bss._ZL7HPF_Env:0000000000000000 _ZL7HPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13906  .bss._ZL7LPF_Env:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13910  .bss._ZL7LPF_Env:0000000000000000 _ZL7LPF_Env
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13913  .bss._ZL7LeftEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13917  .bss._ZL7LeftEnv:0000000000000000 _ZL7LeftEnv
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13920  .bss._ZL8RightEnv:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13924  .bss._ZL8RightEnv:0000000000000000 _ZL8RightEnv
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 425


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13927  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13931  .bss._ZZ10Update_ModvE13modulation_CV:0000000000000000 _ZZ10Update_ModvE13modulation_CV
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13934  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13938  .bss._ZZ10Update_ModvE17ModDepth_Filtered:0000000000000000 _ZZ10Update_ModvE17ModDepth_Filtered
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13941  .bss._ZZ12Update_widthvE10width_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13945  .bss._ZZ12Update_widthvE10width_Last:0000000000000000 _ZZ12Update_widthvE10width_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13948  .bss._ZZ12Update_widthvE12ModDepth_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13952  .bss._ZZ12Update_widthvE12ModDepth_new:0000000000000000 _ZZ12Update_widthvE12ModDepth_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13958  .bss._ZZ12Update_widthvE12width_pickup:0000000000000000 _ZZ12Update_widthvE12width_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13959  .bss._ZZ12Update_widthvE12width_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13964  .bss._ZZ12Update_widthvE15ModDepth_pickup:0000000000000000 _ZZ12Update_widthvE15ModDepth_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13965  .bss._ZZ12Update_widthvE15ModDepth_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13970  .bss._ZZ12Update_widthvE9lastShift:0000000000000000 _ZZ12Update_widthvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13971  .bss._ZZ12Update_widthvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13973  .bss._ZZ12Update_widthvE9width_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13977  .bss._ZZ12Update_widthvE9width_new:0000000000000000 _ZZ12Update_widthvE9width_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13983  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 _ZZ13Update_drywetvE10Res_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13984  .bss._ZZ13Update_drywetvE10Res_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13986  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13990  .bss._ZZ13Update_drywetvE10drywet_new:0000000000000000 _ZZ13Update_drywetvE10drywet_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13993  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:13997  .bss._ZZ13Update_drywetvE11drywet_Last:0000000000000000 _ZZ13Update_drywetvE11drywet_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14003  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 _ZZ13Update_drywetvE13drywet_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14004  .bss._ZZ13Update_drywetvE13drywet_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14006  .bss._ZZ13Update_drywetvE7Res_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14010  .bss._ZZ13Update_drywetvE7Res_new:0000000000000000 _ZZ13Update_drywetvE7Res_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14016  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 _ZZ13Update_drywetvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14017  .bss._ZZ13Update_drywetvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14019  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14023  .bss._ZZ14Update_ButtonsvE11buttonstate:0000000000000000 _ZZ14Update_ButtonsvE11buttonstate
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14026  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14030  .bss._ZZ14Update_ButtonsvE9resetTime:0000000000000000 _ZZ14Update_ButtonsvE9resetTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14033  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14037  .bss._ZZ14Update_ButtonsvE9shiftTime:0000000000000000 _ZZ14Update_ButtonsvE9shiftTime
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14040  .bss._ZZ16Update_feedbackLvE12HPCutoff_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14044  .bss._ZZ16Update_feedbackLvE12HPCutoff_new:0000000000000000 _ZZ16Update_feedbackLvE12HPCutoff_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14047  .bss._ZZ16Update_feedbackLvE13feedbackL_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14051  .bss._ZZ16Update_feedbackLvE13feedbackL_new:0000000000000000 _ZZ16Update_feedbackLvE13feedbackL_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14054  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14058  .bss._ZZ16Update_feedbackLvE14feedbackL_Last:0000000000000000 _ZZ16Update_feedbackLvE14feedbackL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14064  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackLvE15HPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14065  .bss._ZZ16Update_feedbackLvE15HPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14070  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 _ZZ16Update_feedbackLvE16feedbackL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14071  .bss._ZZ16Update_feedbackLvE16feedbackL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14076  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 _ZZ16Update_feedbackLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14077  .bss._ZZ16Update_feedbackLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14079  .bss._ZZ16Update_feedbackRvE12LPCutoff_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14083  .bss._ZZ16Update_feedbackRvE12LPCutoff_new:0000000000000000 _ZZ16Update_feedbackRvE12LPCutoff_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14086  .bss._ZZ16Update_feedbackRvE13feedbackR_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14090  .bss._ZZ16Update_feedbackRvE13feedbackR_new:0000000000000000 _ZZ16Update_feedbackRvE13feedbackR_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14093  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14097  .bss._ZZ16Update_feedbackRvE14feedbackR_Last:0000000000000000 _ZZ16Update_feedbackRvE14feedbackR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14103  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 _ZZ16Update_feedbackRvE15LPCutoff_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14104  .bss._ZZ16Update_feedbackRvE15LPCutoff_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14109  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 _ZZ16Update_feedbackRvE16feedbackR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14110  .bss._ZZ16Update_feedbackRvE16feedbackR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14115  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 _ZZ16Update_feedbackRvE9lastShift
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 426


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14116  .bss._ZZ16Update_feedbackRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14118  .bss._ZZ17Update_DelayTimeLvE14delayTimeL_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14122  .bss._ZZ17Update_DelayTimeLvE14delayTimeL_new:0000000000000000 _ZZ17Update_DelayTimeLvE14delayTimeL_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14125  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14129  .bss._ZZ17Update_DelayTimeLvE15delayTimeL_Last:0000000000000000 _ZZ17Update_DelayTimeLvE15delayTimeL_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14132  .bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14136  .bss._ZZ17Update_DelayTimeLvE17Rev_DelayTime_new:0000000000000000 _ZZ17Update_DelayTimeLvE17Rev_DelayTime_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14142  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE17delayTimeL_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14143  .bss._ZZ17Update_DelayTimeLvE17delayTimeL_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14148  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 _ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14149  .bss._ZZ17Update_DelayTimeLvE20Rev_DelayTime_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14151  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14155  .bss._ZZ17Update_DelayTimeLvE8counterL:0000000000000000 _ZZ17Update_DelayTimeLvE8counterL
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14161  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeLvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14162  .bss._ZZ17Update_DelayTimeLvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14164  .bss._ZZ17Update_DelayTimeRvE12tapRatio_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14168  .bss._ZZ17Update_DelayTimeRvE12tapRatio_new:0000000000000000 _ZZ17Update_DelayTimeRvE12tapRatio_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14171  .bss._ZZ17Update_DelayTimeRvE14delayTimeR_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14175  .bss._ZZ17Update_DelayTimeRvE14delayTimeR_new:0000000000000000 _ZZ17Update_DelayTimeRvE14delayTimeR_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14178  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14182  .bss._ZZ17Update_DelayTimeRvE15delayTimeR_Last:0000000000000000 _ZZ17Update_DelayTimeRvE15delayTimeR_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14188  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE15tapRatio_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14189  .bss._ZZ17Update_DelayTimeRvE15tapRatio_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14194  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 _ZZ17Update_DelayTimeRvE17delayTimeR_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14195  .bss._ZZ17Update_DelayTimeRvE17delayTimeR_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14197  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14201  .bss._ZZ17Update_DelayTimeRvE8counterR:0000000000000000 _ZZ17Update_DelayTimeRvE8counterR
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14207  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 _ZZ17Update_DelayTimeRvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14208  .bss._ZZ17Update_DelayTimeRvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14210  .bss._ZZ18Update_filterXfadevE15PostFilters_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14214  .bss._ZZ18Update_filterXfadevE15PostFilters_new:0000000000000000 _ZZ18Update_filterXfadevE15PostFilters_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14217  .bss._ZZ18Update_filterXfadevE15filterXfade_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14221  .bss._ZZ18Update_filterXfadevE15filterXfade_new:0000000000000000 _ZZ18Update_filterXfadevE15filterXfade_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14224  .bss._ZZ18Update_filterXfadevE16filterXfade_last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14228  .bss._ZZ18Update_filterXfadevE16filterXfade_last:0000000000000000 _ZZ18Update_filterXfadevE16filterXfade_last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14234  .bss._ZZ18Update_filterXfadevE18PostFilters_pickup:0000000000000000 _ZZ18Update_filterXfadevE18PostFilters_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14235  .bss._ZZ18Update_filterXfadevE18PostFilters_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14240  .bss._ZZ18Update_filterXfadevE18filterXfade_pickup:0000000000000000 _ZZ18Update_filterXfadevE18filterXfade_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14241  .bss._ZZ18Update_filterXfadevE18filterXfade_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14246  .bss._ZZ18Update_filterXfadevE9lastShift:0000000000000000 _ZZ18Update_filterXfadevE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14247  .bss._ZZ18Update_filterXfadevE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14249  .bss._ZZ19Update_BaseTempoLEDvE12phaseCounter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14253  .bss._ZZ19Update_BaseTempoLEDvE12phaseCounter:0000000000000000 _ZZ19Update_BaseTempoLEDvE12phaseCounter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14256  .bss._ZZ20Update_crossfeedbackvE11modRate_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14260  .bss._ZZ20Update_crossfeedbackvE11modRate_new:0000000000000000 _ZZ20Update_crossfeedbackvE11modRate_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14266  .bss._ZZ20Update_crossfeedbackvE14modRate_pickup:0000000000000000 _ZZ20Update_crossfeedbackvE14modRate_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14267  .bss._ZZ20Update_crossfeedbackvE14modRate_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14269  .bss._ZZ20Update_crossfeedbackvE17crossfeedback_new:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14273  .bss._ZZ20Update_crossfeedbackvE17crossfeedback_new:0000000000000000 _ZZ20Update_crossfeedbackvE17crossfeedback_new
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14276  .bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14280  .bss._ZZ20Update_crossfeedbackvE18crossfeedback_Last:0000000000000000 _ZZ20Update_crossfeedbackvE18crossfeedback_Last
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14286  .bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup:0000000000000000 _ZZ20Update_crossfeedbackvE20crossfeedback_pickup
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14287  .bss._ZZ20Update_crossfeedbackvE20crossfeedback_pickup:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14292  .bss._ZZ20Update_crossfeedbackvE9lastShift:0000000000000000 _ZZ20Update_crossfeedbackvE9lastShift
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14293  .bss._ZZ20Update_crossfeedbackvE9lastShift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14295  .bss._ZZ4mainE9saveTimer:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14299  .bss._ZZ4mainE9saveTimer:0000000000000000 _ZZ4mainE9saveTimer
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 427


/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14302  .bss._ZZL13AudioCallbackPKPKfPPfjE6LNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14306  .bss._ZZL13AudioCallbackPKPKfPPfjE6LNegFB:0000000000000000 _ZZL13AudioCallbackPKPKfPPfjE6LNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14309  .bss._ZZL13AudioCallbackPKPKfPPfjE6RNegFB:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14313  .bss._ZZL13AudioCallbackPKPKfPPfjE6RNegFB:0000000000000000 _ZZL13AudioCallbackPKPKfPPfjE6RNegFB
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14316  .bss._ZZL13AudioCallbackPKPKfPPfjE7Counter:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14320  .bss._ZZL13AudioCallbackPKPKfPPfjE7Counter:0000000000000000 _ZZL13AudioCallbackPKPKfPPfjE7Counter
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14323  .bss.crossfeedback:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14330  .bss.crossfeedback_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14336  .bss.delayL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14343  .bss.delayR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14350  .bss.delayTimeL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14357  .bss.delayTimeR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14364  .bss.delaysL_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14371  .bss.delaysR_REV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14378  .bss.drywet_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14385  .bss.feedbackL:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14392  .bss.feedbackL_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14399  .bss.feedbackR:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14406  .bss.feedbackR_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14413  .bss.filterXfade:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14420  .bss.modulation_CV_Raw:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14431  .bss.mute:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14437  .bss.saveState:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14439  .bss.save_flag:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14450  .bss.shift:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14456  .bss.syncMode:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14458  .bss.tempoLED_BASE:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14465  .bss.width_CV:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14472  .data.drywet:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14479  .data.width:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14486  .rodata.CSWTCH.379:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14490  .rodata.CSWTCH.379:0000000000000000 CSWTCH.379
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14498  .rodata._ZL18defaultAltControls:0000000000000000 $d
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14502  .rodata._ZL18defaultAltControls:0000000000000000 _ZL18defaultAltControls
/var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s:14515  .sdram_bss:0000000000000000 $d
                           .group:0000000000000000 _ZN5daisy6SwitchD5Ev
                           .group:0000000000000000 _ZN5daisy6GateInD5Ev
                           .group:0000000000000000 _ZN5daisy9DaisySeedD5Ev
                           .group:0000000000000000 _ZN7daisysp4AdsrD5Ev
                           .group:0000000000000000 _ZN7daisysp10OscillatorD5Ev
                           .group:0000000000000000 _ZN7daisysp3SvfD5Ev
                           .group:0000000000000000 _ZN7daisysp9CrossFadeD5Ev
                           .group:0000000000000000 _ZN7daisysp9EnvFollowD5Ev
                           .group:0000000000000000 _ZN8TaptempoD5Ev
                           .group:0000000000000000 _ZN8TempoLEDD5Ev
                           .group:0000000000000000 _ZN9ButtonLEDD5Ev
                           .group:0000000000000000 _ZN10DelayMultiD5Ev
                           .group:0000000000000000 _ZN7daisysp17DelayLineMultiTapIfLj1728000EED5Ev
                           .group:0000000000000000 _ZN7daisysp16DelayLineReverseIfLj600000EED5Ev

UNDEFINED SYMBOLS
_ZN5daisy9DaisySeed6GetPinEh
_ZN10DelayMulti4initE12dsy_gpio_pinf
_ZNK5daisy9AdcHandle8GetFloatEh
_ZNK5daisy9AdcHandle11GetMuxFloatEhh
_ZN10DelayMulti12SetDelayTimeEfb
_Z5scalefff9CurveType
ARM GAS  /var/folders/0d/2ntwfkp1791d52chq7d_xwdm0000gn/T//ccA43xdb.s 			page 428


_ZN8Taptempo11setTapRatioEf
_ZN7daisysp3Svf7SetFreqEf
_ZN7daisysp3Svf6SetResEf
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN7daisysp10Oscillator7ProcessEv
_ZN5daisy6GateIn4TrigEv
_ZN8Taptempo3tapEv
_ZN8Taptempo10getTapFreqEv
_ZN8TempoLED8setTempoEf
_ZN8Taptempo12getTapLengthEv
_ZN8Taptempo14getDelayLengthEv
_ZN10DelayMulti14updateTempoLEDEb
_ZN8TempoLED6updateEv
_ZN8TempoLED5isEOCEv
_ZN8Taptempo12setTapLengthEf
_ZN9ButtonLED6turnONEv
_ZN9ButtonLED7turnOFFEv
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN9ButtonLED4initE12dsy_gpio_pinS0_NS_10SwitchTypeEf
_ZN5daisy6Switch4InitE12dsy_gpio_pinfNS0_4TypeENS0_8PolarityENS0_4PullE
_ZN5daisy6Switch4InitE12dsy_gpio_pinf
_ZN5daisy6GateIn4InitEP12dsy_gpio_pin
_ZN7daisysp4Adsr4InitEf
_ZN7daisysp3Svf4InitEf
_ZN7daisysp3Svf8SetDriveEf
_ZN8Taptempo4initEmmf
_ZN8TempoLED4initE12dsy_gpio_pinf
_ZN8TempoLED10resetPhaseEv
_Z12LoadSettingsv
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
_ZN5daisy16AdcChannelConfig7InitMuxE12dsy_gpio_pinjS1_S1_S1_
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
_ZN5daisy6System6GetNowEv
_Z12SaveSettingsRK8Settings
_ZN8TempoLED7LED_setEf
_ZN9ButtonLED7LED_setEf
_ZN9ButtonLED8getStateEv
_ZN9ButtonLED6updateEv
_ZN5daisy6Switch8DebounceEv
_ZN9ButtonLED10RisingEdgeEv
_ZN9ButtonLED11FallingEdgeEv
_ZN9ButtonLED6toggleEv
_ZN10DelayMulti5WriteERKf
_ZN7daisysp9CrossFade7ProcessERfS1_
_ZN7daisysp4Adsr7ProcessEb
sinf
_ZN10DelayMulti9GetOutputEv
_ZN7daisysp3Svf7ProcessEf
__aeabi_atexit
__dso_handle
